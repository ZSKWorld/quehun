{"version":3,"file":"laya.ani.js","sources":["../../bin/tsc/layaAir/laya/ani/AniLibPack.js","../../bin/tsc/layaAir/laya/ani/AnimationContent.js","../../bin/tsc/layaAir/laya/ani/AnimationNodeContent.js","../../bin/tsc/layaAir/laya/ani/KeyFramesContent.js","../../bin/tsc/layaAir/laya/ani/AnimationParser01.js","../../bin/tsc/layaAir/laya/ani/AnimationParser02.js","../../bin/tsc/layaAir/laya/ani/AnimationState.js","../../bin/tsc/layaAir/laya/ani/AnimationPlayer.js","../../bin/tsc/layaAir/laya/ani/AnimationTemplet.js","../../bin/tsc/layaAir/laya/ani/GraphicsAni.js","../../bin/tsc/layaAir/laya/ani/bone/IkConstraint.js","../../bin/tsc/layaAir/laya/ani/bone/PathConstraint.js","../../bin/tsc/layaAir/laya/ani/bone/TfConstraint.js","../../bin/tsc/layaAir/laya/ani/bone/Skeleton.js","../../bin/tsc/layaAir/laya/ani/bone/Transform.js","../../bin/tsc/layaAir/laya/ani/bone/Bone.js","../../bin/tsc/layaAir/laya/ani/bone/TfConstraintData.js","../../bin/tsc/layaAir/laya/ani/bone/PathConstraintData.js","../../bin/tsc/layaAir/laya/ani/bone/DeformAniData.js","../../bin/tsc/layaAir/laya/ani/bone/DeformSlotData.js","../../bin/tsc/layaAir/laya/ani/bone/DeformSlotDisplayData.js","../../bin/tsc/layaAir/laya/ani/bone/DrawOrderData.js","../../bin/tsc/layaAir/laya/ani/bone/EventData.js","../../bin/tsc/layaAir/laya/ani/bone/UVTools.js","../../bin/tsc/layaAir/laya/ani/bone/canvasmesh/MeshData.js","../../bin/tsc/layaAir/laya/ani/bone/canvasmesh/SkinMeshForGraphic.js","../../bin/tsc/layaAir/laya/ani/bone/BoneSlot.js","../../bin/tsc/layaAir/laya/ani/bone/SkinData.js","../../bin/tsc/layaAir/laya/ani/bone/SkinSlotDisplayData.js","../../bin/tsc/layaAir/laya/ani/bone/SlotData.js","../../bin/tsc/layaAir/laya/ani/bone/IkConstraintData.js","../../bin/tsc/layaAir/laya/ani/bone/Templet.js","../../bin/tsc/layaAir/laya/ani/TempletLoader.js","../../bin/tsc/layaAir/laya/ani/ModuleDef.js","../../bin/tsc/layaAir/laya/ani/swf/MovieClip.js"],"sourcesContent":["export class IAniLib {\n}\nIAniLib.Skeleton = null;\nIAniLib.AnimationTemplet = null;\nIAniLib.Templet = null;\n","export class AnimationContent {\n}\n","export class AnimationNodeContent {\n}\n","export class KeyFramesContent {\n}\n","import { AnimationContent } from \"./AnimationContent\";\nimport { AnimationNodeContent } from \"./AnimationNodeContent\";\nimport { KeyFramesContent } from \"./KeyFramesContent\";\nimport { IAniLib } from \"./AniLibPack\";\nimport { Byte } from \"../utils/Byte\";\nexport class AnimationParser01 {\n    static parse(templet, reader) {\n        var data = reader.__getBuffer();\n        var i, j, k, n, l, m, o;\n        var aniClassName = reader.readUTFString();\n        templet._aniClassName = aniClassName;\n        var strList = reader.readUTFString().split(\"\\n\");\n        var aniCount = reader.getUint8();\n        var publicDataPos = reader.getUint32();\n        var publicExtDataPos = reader.getUint32();\n        var publicData;\n        if (publicDataPos > 0)\n            publicData = data.slice(publicDataPos, publicExtDataPos);\n        var publicRead = new Byte(publicData);\n        if (publicExtDataPos > 0)\n            templet._publicExtData = data.slice(publicExtDataPos, data.byteLength);\n        templet._useParent = !!reader.getUint8();\n        templet._anis.length = aniCount;\n        for (i = 0; i < aniCount; i++) {\n            var ani = templet._anis[i] = new AnimationContent();\n            ani.nodes = [];\n            var name = ani.name = strList[reader.getUint16()];\n            templet._aniMap[name] = i;\n            ani.bone3DMap = {};\n            ani.playTime = reader.getFloat32();\n            var boneCount = ani.nodes.length = reader.getUint8();\n            ani.totalKeyframeDatasLength = 0;\n            for (j = 0; j < boneCount; j++) {\n                var node = ani.nodes[j] = new AnimationNodeContent();\n                node.childs = [];\n                var nameIndex = reader.getInt16();\n                if (nameIndex >= 0) {\n                    node.name = strList[nameIndex];\n                    ani.bone3DMap[node.name] = j;\n                }\n                node.keyFrame = [];\n                node.parentIndex = reader.getInt16();\n                node.parentIndex == -1 ? node.parent = null : node.parent = ani.nodes[node.parentIndex];\n                node.lerpType = reader.getUint8();\n                var keyframeParamsOffset = reader.getUint32();\n                publicRead.pos = keyframeParamsOffset;\n                var keyframeDataCount = node.keyframeWidth = publicRead.getUint16();\n                ani.totalKeyframeDatasLength += keyframeDataCount;\n                if (node.lerpType === 0 || node.lerpType === 1) {\n                    node.interpolationMethod = [];\n                    node.interpolationMethod.length = keyframeDataCount;\n                    for (k = 0; k < keyframeDataCount; k++)\n                        node.interpolationMethod[k] = IAniLib.AnimationTemplet.interpolation[publicRead.getUint8()];\n                }\n                if (node.parent != null)\n                    node.parent.childs.push(node);\n                var privateDataLen = reader.getUint16();\n                if (privateDataLen > 0) {\n                    node.extenData = data.slice(reader.pos, reader.pos + privateDataLen);\n                    reader.pos += privateDataLen;\n                }\n                var keyframeCount = reader.getUint16();\n                node.keyFrame.length = keyframeCount;\n                var startTime = 0;\n                var keyFrame;\n                for (k = 0, n = keyframeCount; k < n; k++) {\n                    keyFrame = node.keyFrame[k] = new KeyFramesContent();\n                    keyFrame.duration = reader.getFloat32();\n                    keyFrame.startTime = startTime;\n                    if (node.lerpType === 2) {\n                        keyFrame.interpolationData = [];\n                        var interDataLength = reader.getUint8();\n                        var lerpType;\n                        lerpType = reader.getFloat32();\n                        switch (lerpType) {\n                            case 254:\n                                keyFrame.interpolationData.length = keyframeDataCount;\n                                for (o = 0; o < keyframeDataCount; o++)\n                                    keyFrame.interpolationData[o] = 0;\n                                break;\n                            case 255:\n                                keyFrame.interpolationData.length = keyframeDataCount;\n                                for (o = 0; o < keyframeDataCount; o++)\n                                    keyFrame.interpolationData[o] = 5;\n                                break;\n                            default:\n                                keyFrame.interpolationData.push(lerpType);\n                                for (m = 1; m < interDataLength; m++) {\n                                    keyFrame.interpolationData.push(reader.getFloat32());\n                                }\n                        }\n                    }\n                    keyFrame.data = new Float32Array(keyframeDataCount);\n                    keyFrame.dData = new Float32Array(keyframeDataCount);\n                    keyFrame.nextData = new Float32Array(keyframeDataCount);\n                    for (l = 0; l < keyframeDataCount; l++) {\n                        keyFrame.data[l] = reader.getFloat32();\n                        if (keyFrame.data[l] > -0.00000001 && keyFrame.data[l] < 0.00000001)\n                            keyFrame.data[l] = 0;\n                    }\n                    startTime += keyFrame.duration;\n                }\n                keyFrame.startTime = ani.playTime;\n                node.playTime = ani.playTime;\n                templet._calculateKeyFrame(node, keyframeCount, keyframeDataCount);\n            }\n        }\n    }\n}\n","import { AnimationContent } from \"./AnimationContent\";\nimport { AnimationNodeContent } from \"./AnimationNodeContent\";\nimport { KeyFramesContent } from \"./KeyFramesContent\";\nimport { IAniLib } from \"./AniLibPack\";\nexport class AnimationParser02 {\n    static READ_DATA() {\n        AnimationParser02._DATA.offset = AnimationParser02._reader.getUint32();\n        AnimationParser02._DATA.size = AnimationParser02._reader.getUint32();\n    }\n    static READ_BLOCK() {\n        var count = AnimationParser02._BLOCK.count = AnimationParser02._reader.getUint16();\n        var blockStarts = AnimationParser02._BLOCK.blockStarts = [];\n        var blockLengths = AnimationParser02._BLOCK.blockLengths = [];\n        for (var i = 0; i < count; i++) {\n            blockStarts.push(AnimationParser02._reader.getUint32());\n            blockLengths.push(AnimationParser02._reader.getUint32());\n        }\n    }\n    static READ_STRINGS() {\n        var offset = AnimationParser02._reader.getUint32();\n        var count = AnimationParser02._reader.getUint16();\n        var prePos = AnimationParser02._reader.pos;\n        AnimationParser02._reader.pos = offset + AnimationParser02._DATA.offset;\n        for (var i = 0; i < count; i++)\n            AnimationParser02._strings[i] = AnimationParser02._reader.readUTFString();\n        AnimationParser02._reader.pos = prePos;\n    }\n    static parse(templet, reader) {\n        AnimationParser02._templet = templet;\n        AnimationParser02._reader = reader;\n        var arrayBuffer = reader.__getBuffer();\n        AnimationParser02.READ_DATA();\n        AnimationParser02.READ_BLOCK();\n        AnimationParser02.READ_STRINGS();\n        for (var i = 0, n = AnimationParser02._BLOCK.count; i < n; i++) {\n            var index = reader.getUint16();\n            var blockName = AnimationParser02._strings[index];\n            var fn = AnimationParser02[\"READ_\" + blockName];\n            if (fn == null)\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\n            else\n                fn.call(null);\n        }\n    }\n    static READ_ANIMATIONS() {\n        var reader = AnimationParser02._reader;\n        var arrayBuffer = reader.__getBuffer();\n        var i, j, k, n, l;\n        var keyframeWidth = reader.getUint16();\n        var interpolationMethod = [];\n        interpolationMethod.length = keyframeWidth;\n        for (i = 0; i < keyframeWidth; i++)\n            interpolationMethod[i] = IAniLib.AnimationTemplet.interpolation[reader.getByte()];\n        var aniCount = reader.getUint8();\n        AnimationParser02._templet._anis.length = aniCount;\n        for (i = 0; i < aniCount; i++) {\n            var ani = AnimationParser02._templet._anis[i] = new AnimationContent();\n            ani.nodes = [];\n            var aniName = ani.name = AnimationParser02._strings[reader.getUint16()];\n            AnimationParser02._templet._aniMap[aniName] = i;\n            ani.bone3DMap = {};\n            ani.playTime = reader.getFloat32();\n            var boneCount = ani.nodes.length = reader.getInt16();\n            ani.totalKeyframeDatasLength = 0;\n            for (j = 0; j < boneCount; j++) {\n                var node = ani.nodes[j] = new AnimationNodeContent();\n                node.keyframeWidth = keyframeWidth;\n                node.childs = [];\n                var nameIndex = reader.getUint16();\n                if (nameIndex >= 0) {\n                    node.name = AnimationParser02._strings[nameIndex];\n                    ani.bone3DMap[node.name] = j;\n                }\n                node.keyFrame = [];\n                node.parentIndex = reader.getInt16();\n                node.parentIndex == -1 ? node.parent = null : node.parent = ani.nodes[node.parentIndex];\n                ani.totalKeyframeDatasLength += keyframeWidth;\n                node.interpolationMethod = interpolationMethod;\n                if (node.parent != null)\n                    node.parent.childs.push(node);\n                var keyframeCount = reader.getUint16();\n                node.keyFrame.length = keyframeCount;\n                var keyFrame = null, lastKeyFrame = null;\n                for (k = 0, n = keyframeCount; k < n; k++) {\n                    keyFrame = node.keyFrame[k] = new KeyFramesContent();\n                    keyFrame.startTime = reader.getFloat32();\n                    (lastKeyFrame) && (lastKeyFrame.duration = keyFrame.startTime - lastKeyFrame.startTime);\n                    keyFrame.dData = new Float32Array(keyframeWidth);\n                    keyFrame.nextData = new Float32Array(keyframeWidth);\n                    var offset = AnimationParser02._DATA.offset;\n                    var keyframeDataOffset = reader.getUint32();\n                    var keyframeDataLength = keyframeWidth * 4;\n                    var keyframeArrayBuffer = arrayBuffer.slice(offset + keyframeDataOffset, offset + keyframeDataOffset + keyframeDataLength);\n                    keyFrame.data = new Float32Array(keyframeArrayBuffer);\n                    lastKeyFrame = keyFrame;\n                }\n                keyFrame.duration = 0;\n                node.playTime = ani.playTime;\n                AnimationParser02._templet._calculateKeyFrame(node, keyframeCount, keyframeWidth);\n            }\n        }\n    }\n}\nAnimationParser02._strings = [];\nAnimationParser02._BLOCK = { count: 0 };\nAnimationParser02._DATA = { offset: 0, size: 0 };\n","export class AnimationState {\n    constructor() {\n    }\n}\nAnimationState.stopped = 0;\nAnimationState.paused = 1;\nAnimationState.playing = 2;\n","import { AnimationState } from \"./AnimationState\";\nimport { Stat } from \"../utils/Stat\";\nimport { Event } from \"../events/Event\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nexport class AnimationPlayer extends EventDispatcher {\n    get templet() {\n        return this._templet;\n    }\n    set templet(value) {\n        if (!(this.state === AnimationState.stopped))\n            this.stop(true);\n        if (this._templet !== value) {\n            this._templet = value;\n            this._computeFullKeyframeIndices();\n        }\n    }\n    get playStart() {\n        return this._playStart;\n    }\n    get playEnd() {\n        return this._playEnd;\n    }\n    get playDuration() {\n        return this._playDuration;\n    }\n    get overallDuration() {\n        return this._overallDuration;\n    }\n    get currentAnimationClipIndex() {\n        return this._currentAnimationClipIndex;\n    }\n    get currentKeyframeIndex() {\n        return this._currentKeyframeIndex;\n    }\n    get currentPlayTime() {\n        return this._currentTime + this._playStart;\n    }\n    get currentFrameTime() {\n        return this._currentFrameTime;\n    }\n    get cachePlayRate() {\n        return this._cachePlayRate;\n    }\n    set cachePlayRate(value) {\n        if (this._cachePlayRate !== value) {\n            this._cachePlayRate = value;\n            if (this._templet)\n                this._computeFullKeyframeIndices();\n        }\n    }\n    get cacheFrameRate() {\n        return this._cacheFrameRate;\n    }\n    set cacheFrameRate(value) {\n        if (this._cacheFrameRate !== value) {\n            this._cacheFrameRate = value;\n            this._cacheFrameRateInterval = 1000.0 / this._cacheFrameRate;\n            if (this._templet)\n                this._computeFullKeyframeIndices();\n        }\n    }\n    set currentTime(value) {\n        if (this._currentAnimationClipIndex === -1 || !this._templet)\n            return;\n        if (value < this._playStart || value > this._playEnd)\n            throw new Error(\"AnimationPlayer:value must large than playStartTime,small than playEndTime.\");\n        this._startUpdateLoopCount = Stat.loopCount;\n        var cacheFrameInterval = this._cacheFrameRateInterval * this._cachePlayRate;\n        this._currentTime = value;\n        this._currentKeyframeIndex = Math.floor(this.currentPlayTime / cacheFrameInterval);\n        this._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\n    }\n    get paused() {\n        return this._paused;\n    }\n    set paused(value) {\n        this._paused = value;\n        value && this.event(Event.PAUSED);\n    }\n    get cacheFrameRateInterval() {\n        return this._cacheFrameRateInterval;\n    }\n    get state() {\n        if (this._currentAnimationClipIndex === -1)\n            return AnimationState.stopped;\n        if (this._paused)\n            return AnimationState.paused;\n        return AnimationState.playing;\n    }\n    get destroyed() {\n        return this._destroyed;\n    }\n    constructor() {\n        super();\n        this.isCache = true;\n        this.playbackRate = 1.0;\n        this._destroyed = false;\n        this._currentAnimationClipIndex = -1;\n        this._currentKeyframeIndex = -1;\n        this._currentTime = 0.0;\n        this._overallDuration = Number.MAX_VALUE;\n        this._stopWhenCircleFinish = false;\n        this._elapsedPlaybackTime = 0;\n        this._startUpdateLoopCount = -1;\n        this._cachePlayRate = 1.0;\n        this.cacheFrameRate = 60;\n        this.returnToZeroStopped = false;\n    }\n    _onTempletLoadedComputeFullKeyframeIndices(cachePlayRate, cacheFrameRate, templet) {\n        if (this._templet === templet && this._cachePlayRate === cachePlayRate && this._cacheFrameRate === cacheFrameRate)\n            this._computeFullKeyframeIndices();\n    }\n    _computeFullKeyframeIndices() {\n        return;\n        var templet = this._templet;\n        if (templet._fullFrames)\n            return;\n        var anifullFrames = this._templet._fullFrames = [];\n        var cacheFrameInterval = this._cacheFrameRateInterval * this._cachePlayRate;\n        for (var i = 0, iNum = templet.getAnimationCount(); i < iNum; i++) {\n            var aniFullFrame = [];\n            if (!templet.getAnimation(i).nodes) {\n                anifullFrames.push(aniFullFrame);\n                continue;\n            }\n            for (var j = 0, jNum = templet.getAnimation(i).nodes.length; j < jNum; j++) {\n                var node = templet.getAnimation(i).nodes[j];\n                var frameCount = Math.round(node.playTime / cacheFrameInterval);\n                var nodeFullFrames = new Uint16Array(frameCount + 1);\n                var stidx = -1;\n                var nodeframes = node.keyFrame;\n                for (var n = 0, nNum = nodeframes.length; n < nNum; n++) {\n                    var keyFrame = nodeframes[n];\n                    var pos = Math.round(keyFrame.startTime / cacheFrameInterval);\n                    if (stidx < 0 && pos > 0) {\n                        stidx = pos;\n                    }\n                    if (pos <= frameCount) {\n                        nodeFullFrames[pos] = n;\n                    }\n                }\n                var cf = 0;\n                for (n = stidx; n < frameCount; n++) {\n                    if (nodeFullFrames[n] == 0) {\n                        nodeFullFrames[n] = cf;\n                    }\n                    else {\n                        cf = nodeFullFrames[n];\n                    }\n                }\n                aniFullFrame.push(nodeFullFrames);\n            }\n            anifullFrames.push(aniFullFrame);\n        }\n    }\n    _onAnimationTempletLoaded() {\n        (this.destroyed) || (this._calculatePlayDuration());\n    }\n    _calculatePlayDuration() {\n        if (this.state !== AnimationState.stopped) {\n            var oriDuration = this._templet.getAniDuration(this._currentAnimationClipIndex);\n            (this._playEnd === 0) && (this._playEnd = oriDuration);\n            if (this._playEnd > oriDuration)\n                this._playEnd = oriDuration;\n            this._playDuration = this._playEnd - this._playStart;\n        }\n    }\n    _setPlayParams(time, cacheFrameInterval) {\n        this._currentTime = time;\n        this._currentKeyframeIndex = Math.floor((this.currentPlayTime) / cacheFrameInterval + 0.01);\n        this._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\n    }\n    _setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval, playEnd = -1) {\n        this._currentTime = currentAniClipPlayDuration;\n        var endTime = playEnd > 0 ? playEnd : currentAniClipPlayDuration;\n        this._currentKeyframeIndex = Math.floor(endTime / cacheFrameInterval + 0.01);\n        this._currentKeyframeIndex = Math.floor(currentAniClipPlayDuration / cacheFrameInterval + 0.01);\n        this._currentFrameTime = this._currentKeyframeIndex * cacheFrameInterval;\n        this._currentAnimationClipIndex = -1;\n    }\n    _update(elapsedTime) {\n        if (this._currentAnimationClipIndex === -1 || this._paused || !this._templet)\n            return;\n        var cacheFrameInterval = this._cacheFrameRateInterval * this._cachePlayRate;\n        var time = 0;\n        (this._startUpdateLoopCount !== Stat.loopCount) && (time = elapsedTime * this.playbackRate, this._elapsedPlaybackTime += time);\n        var currentAniClipPlayDuration = this.playDuration;\n        time += this._currentTime;\n        if ((this._overallDuration !== 0 && this._elapsedPlaybackTime >= this._overallDuration) || (this._overallDuration === 0 && this._elapsedPlaybackTime >= currentAniClipPlayDuration\n            || (this._overallDuration === 0 && time >= this.playEnd))) {\n            this._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval, this.playEnd);\n            this.event(Event.STOPPED);\n            return;\n        }\n        if (currentAniClipPlayDuration > 0) {\n            if (time >= currentAniClipPlayDuration) {\n                if (this._stopWhenCircleFinish) {\n                    this._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval);\n                    this._stopWhenCircleFinish = false;\n                    this.event(Event.STOPPED);\n                    return;\n                }\n                else {\n                    time = time % currentAniClipPlayDuration;\n                    this._setPlayParams(time, cacheFrameInterval);\n                    this.event(Event.COMPLETE);\n                    return;\n                }\n            }\n            else {\n                this._setPlayParams(time, cacheFrameInterval);\n            }\n        }\n        else {\n            if (this._stopWhenCircleFinish) {\n                this._setPlayParamsWhenStop(currentAniClipPlayDuration, cacheFrameInterval);\n                this._stopWhenCircleFinish = false;\n                this.event(Event.STOPPED);\n                return;\n            }\n            this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;\n            this.event(Event.COMPLETE);\n        }\n    }\n    _destroy() {\n        this.offAll();\n        this._templet = null;\n        this._destroyed = true;\n    }\n    play(index = 0, playbackRate = 1.0, overallDuration = 2147483647, playStart = 0, playEnd = 0) {\n        if (!this._templet)\n            throw new Error(\"AnimationPlayer:templet must not be null,maybe you need to set url.\");\n        if (overallDuration < 0 || playStart < 0 || playEnd < 0)\n            throw new Error(\"AnimationPlayer:overallDuration,playStart and playEnd must large than zero.\");\n        if ((playEnd !== 0) && (playStart > playEnd))\n            throw new Error(\"AnimationPlayer:start must less than end.\");\n        this._currentTime = 0;\n        this._currentFrameTime = 0;\n        this._elapsedPlaybackTime = 0;\n        this.playbackRate = playbackRate;\n        this._overallDuration = overallDuration;\n        this._playStart = playStart;\n        this._playEnd = playEnd;\n        this._paused = false;\n        this._currentAnimationClipIndex = index;\n        this._currentKeyframeIndex = 0;\n        this._startUpdateLoopCount = Stat.loopCount;\n        this.event(Event.PLAYED);\n        this._calculatePlayDuration();\n        this._update(0);\n    }\n    playByFrame(index = 0, playbackRate = 1.0, overallDuration = 2147483647, playStartFrame = 0, playEndFrame = 0, fpsIn3DBuilder = 30) {\n        var interval = 1000.0 / fpsIn3DBuilder;\n        this.play(index, playbackRate, overallDuration, playStartFrame * interval, playEndFrame * interval);\n    }\n    stop(immediate = true) {\n        if (immediate) {\n            this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0;\n            this._currentAnimationClipIndex = -1;\n            this.event(Event.STOPPED);\n        }\n        else {\n            this._stopWhenCircleFinish = true;\n        }\n    }\n    destroy() {\n    }\n}\n","import { AnimationParser01 } from \"./AnimationParser01\";\nimport { AnimationParser02 } from \"./AnimationParser02\";\nimport { Resource } from \"../resource/Resource\";\nimport { MathUtil } from \"../maths/MathUtil\";\nimport { IAniLib } from \"./AniLibPack\";\nimport { Byte } from \"../utils/Byte\";\nimport { Bezier } from \"../maths/Bezier\";\nexport class AnimationTemplet extends Resource {\n    static _LinearInterpolation_0(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null) {\n        out[outOfs] = data[index] + dt * dData[index];\n        return 1;\n    }\n    static _QuaternionInterpolation_1(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null) {\n        var amount = duration === 0 ? 0 : dt / duration;\n        MathUtil.slerpQuaternionArray(data, index, nextData, index, amount, out, outOfs);\n        return 4;\n    }\n    static _AngleInterpolation_2(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null) {\n        return 0;\n    }\n    static _RadiansInterpolation_3(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null) {\n        return 0;\n    }\n    static _Matrix4x4Interpolation_4(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null) {\n        for (let i = 0; i < 16; i++, index++)\n            out[outOfs + i] = data[index] + dt * dData[index];\n        return 16;\n    }\n    static _NoInterpolation_5(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null) {\n        out[outOfs] = data[index];\n        return 1;\n    }\n    static _BezierInterpolation_6(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null, offset = 0) {\n        out[outOfs] = data[index] + (nextData[index] - data[index]) * Bezier.getRate(dt / duration, interData[offset], interData[offset + 1], interData[offset + 2], interData[offset + 3]);\n        return 5;\n    }\n    static _BezierInterpolation_7(bone, index, out, outOfs, data, dt, dData, duration, nextData, interData = null, offset = 0) {\n        out[outOfs] = interData[offset + 4] + interData[offset + 5] * Bezier.getRate((dt * 0.001 + interData[offset + 6]) / interData[offset + 7], interData[offset], interData[offset + 1], interData[offset + 2], interData[offset + 3]);\n        return 9;\n    }\n    constructor() {\n        super();\n        this._anis = [];\n        this._aniMap = {};\n        this.unfixedLastAniIndex = -1;\n        this._fullFrames = null;\n        this._boneCurKeyFrm = [];\n    }\n    _calculateKeyFrame(node, keyframeCount, keyframeDataCount) {\n        var keyFrames = node.keyFrame;\n        keyFrames[keyframeCount] = keyFrames[0];\n        for (var i = 0; i < keyframeCount; i++) {\n            var keyFrame = keyFrames[i];\n            for (var j = 0; j < keyframeDataCount; j++) {\n                keyFrame.dData[j] = (keyFrame.duration === 0) ? 0 : (keyFrames[i + 1].data[j] - keyFrame.data[j]) / keyFrame.duration;\n                keyFrame.nextData[j] = keyFrames[i + 1].data[j];\n            }\n        }\n        keyFrames.length--;\n    }\n    _onAsynLoaded(data, propertyParams = null) {\n        var reader = new Byte(data);\n        this._aniVersion = reader.readUTFString();\n        switch (this._aniVersion) {\n            case \"LAYAANIMATION:02\":\n                AnimationParser02.parse(this, reader);\n                break;\n            default:\n                AnimationParser01.parse(this, reader);\n        }\n    }\n    getAnimationCount() {\n        return this._anis.length;\n    }\n    getAnimation(aniIndex) {\n        return this._anis[aniIndex];\n    }\n    getAniDuration(aniIndex) {\n        return this._anis[aniIndex].playTime;\n    }\n    getNodes(aniIndex) {\n        return this._anis[aniIndex].nodes;\n    }\n    getNodeIndexWithName(aniIndex, name) {\n        return this._anis[aniIndex].bone3DMap[name];\n    }\n    getNodeCount(aniIndex) {\n        return this._anis[aniIndex].nodes.length;\n    }\n    getTotalkeyframesLength(aniIndex) {\n        return this._anis[aniIndex].totalKeyframeDatasLength;\n    }\n    getPublicExtData() {\n        return this._publicExtData;\n    }\n    getAnimationDataWithCache(key, cacheDatas, aniIndex, frameIndex) {\n        var aniDatas = cacheDatas[aniIndex];\n        if (!aniDatas) {\n            return null;\n        }\n        else {\n            var keyDatas = aniDatas[key];\n            if (!keyDatas)\n                return null;\n            else {\n                return keyDatas[frameIndex];\n            }\n        }\n    }\n    setAnimationDataWithCache(key, cacheDatas, aniIndex, frameIndex, data) {\n        var aniDatas = (cacheDatas[aniIndex]) || (cacheDatas[aniIndex] = {});\n        var aniDatasCache = (aniDatas[key]) || (aniDatas[key] = []);\n        aniDatasCache[frameIndex] = data;\n    }\n    getNodeKeyFrame(nodeframes, nodeid, tm) {\n        var cid = this._boneCurKeyFrm[nodeid];\n        var frmNum = nodeframes.length;\n        if (cid == void 0 || cid >= frmNum) {\n            cid = this._boneCurKeyFrm[nodeid] = 0;\n        }\n        var kinfo = nodeframes[cid];\n        var curFrmTm = kinfo.startTime;\n        var dt = tm - curFrmTm;\n        if (dt == 0 || (dt > 0 && kinfo.duration > dt)) {\n            return cid;\n        }\n        var i = 0;\n        if (dt > 0) {\n            tm = tm + 0.01;\n            for (i = cid + 1; i < frmNum; i++) {\n                kinfo = nodeframes[i];\n                if (kinfo.startTime <= tm && kinfo.startTime + kinfo.duration > tm) {\n                    this._boneCurKeyFrm[nodeid] = i;\n                    return i;\n                }\n            }\n            return frmNum - 1;\n        }\n        else {\n            for (i = 0; i < cid; i++) {\n                kinfo = nodeframes[i];\n                if (kinfo.startTime <= tm && kinfo.startTime + kinfo.duration > tm) {\n                    this._boneCurKeyFrm[nodeid] = i;\n                    return i;\n                }\n            }\n            return cid;\n        }\n    }\n    getOriginalData(aniIndex, originalData, nodesFrameIndices, frameIndex, playCurTime) {\n        var oneAni = this._anis[aniIndex];\n        var nodes = oneAni.nodes;\n        var curKFrm = this._boneCurKeyFrm;\n        if (curKFrm.length < nodes.length) {\n            curKFrm.length = nodes.length;\n        }\n        var j = 0;\n        for (var i = 0, n = nodes.length, outOfs = 0; i < n; i++) {\n            var node = nodes[i];\n            var key;\n            var kfrm = node.keyFrame;\n            key = kfrm[this.getNodeKeyFrame(kfrm, i, playCurTime)];\n            node.dataOffset = outOfs;\n            var dt = playCurTime - key.startTime;\n            var lerpType = node.lerpType;\n            if (lerpType) {\n                switch (lerpType) {\n                    case 0:\n                    case 1:\n                        for (j = 0; j < node.keyframeWidth;)\n                            j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\n                        break;\n                    case 2:\n                        var interpolationData = key.interpolationData;\n                        var interDataLen = interpolationData.length;\n                        var dataIndex = 0;\n                        for (j = 0; j < interDataLen;) {\n                            var type = interpolationData[j];\n                            switch (type) {\n                                case 6:\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\n                                    break;\n                                case 7:\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\n                                    break;\n                                default:\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\n                            }\n                            dataIndex++;\n                        }\n                        break;\n                }\n            }\n            else {\n                for (j = 0; j < node.keyframeWidth;)\n                    j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\n            }\n            outOfs += node.keyframeWidth;\n        }\n    }\n    getNodesCurrentFrameIndex(aniIndex, playCurTime) {\n        var ani = this._anis[aniIndex];\n        var nodes = ani.nodes;\n        if (aniIndex !== this.unfixedLastAniIndex) {\n            this.unfixedCurrentFrameIndexes = new Uint32Array(nodes.length);\n            this.unfixedCurrentTimes = new Float32Array(nodes.length);\n            this.unfixedLastAniIndex = aniIndex;\n        }\n        for (var i = 0, n = nodes.length; i < n; i++) {\n            var node = nodes[i];\n            if (playCurTime < this.unfixedCurrentTimes[i])\n                this.unfixedCurrentFrameIndexes[i] = 0;\n            this.unfixedCurrentTimes[i] = playCurTime;\n            while ((this.unfixedCurrentFrameIndexes[i] < node.keyFrame.length)) {\n                if (node.keyFrame[this.unfixedCurrentFrameIndexes[i]].startTime > this.unfixedCurrentTimes[i])\n                    break;\n                this.unfixedCurrentFrameIndexes[i]++;\n            }\n            this.unfixedCurrentFrameIndexes[i]--;\n        }\n        return this.unfixedCurrentFrameIndexes;\n    }\n    getOriginalDataUnfixedRate(aniIndex, originalData, playCurTime) {\n        var oneAni = this._anis[aniIndex];\n        var nodes = oneAni.nodes;\n        if (aniIndex !== this.unfixedLastAniIndex) {\n            this.unfixedCurrentFrameIndexes = new Uint32Array(nodes.length);\n            this.unfixedCurrentTimes = new Float32Array(nodes.length);\n            this.unfixedKeyframes = [];\n            this.unfixedLastAniIndex = aniIndex;\n        }\n        var j = 0;\n        for (var i = 0, n = nodes.length, outOfs = 0; i < n; i++) {\n            var node = nodes[i];\n            if (playCurTime < this.unfixedCurrentTimes[i])\n                this.unfixedCurrentFrameIndexes[i] = 0;\n            this.unfixedCurrentTimes[i] = playCurTime;\n            while (this.unfixedCurrentFrameIndexes[i] < node.keyFrame.length) {\n                if (node.keyFrame[this.unfixedCurrentFrameIndexes[i]].startTime > this.unfixedCurrentTimes[i])\n                    break;\n                this.unfixedKeyframes[i] = node.keyFrame[this.unfixedCurrentFrameIndexes[i]];\n                this.unfixedCurrentFrameIndexes[i]++;\n            }\n            var key = this.unfixedKeyframes[i];\n            node.dataOffset = outOfs;\n            var dt = playCurTime - key.startTime;\n            var lerpType = node.lerpType;\n            if (lerpType) {\n                switch (node.lerpType) {\n                    case 0:\n                    case 1:\n                        for (j = 0; j < node.keyframeWidth;)\n                            j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\n                        break;\n                    case 2:\n                        var interpolationData = key.interpolationData;\n                        var interDataLen = interpolationData.length;\n                        var dataIndex = 0;\n                        for (j = 0; j < interDataLen;) {\n                            var type = interpolationData[j];\n                            switch (type) {\n                                case 6:\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\n                                    break;\n                                case 7:\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData, interpolationData, j + 1);\n                                    break;\n                                default:\n                                    j += AnimationTemplet.interpolation[type](node, dataIndex, originalData, outOfs + dataIndex, key.data, dt, key.dData, key.duration, key.nextData);\n                            }\n                            dataIndex++;\n                        }\n                        break;\n                }\n            }\n            else {\n                for (j = 0; j < node.keyframeWidth;)\n                    j += node.interpolationMethod[j](node, j, originalData, outOfs + j, key.data, dt, key.dData, key.duration, key.nextData);\n            }\n            outOfs += node.keyframeWidth;\n        }\n    }\n}\nAnimationTemplet.interpolation = [AnimationTemplet._LinearInterpolation_0, AnimationTemplet._QuaternionInterpolation_1, AnimationTemplet._AngleInterpolation_2, AnimationTemplet._RadiansInterpolation_3, AnimationTemplet._Matrix4x4Interpolation_4, AnimationTemplet._NoInterpolation_5, AnimationTemplet._BezierInterpolation_6, AnimationTemplet._BezierInterpolation_7];\nIAniLib.AnimationTemplet = AnimationTemplet;\n","import { Matrix } from \"../maths/Matrix\";\nimport { Graphics } from \"../display/Graphics\";\nexport class GraphicsAni extends Graphics {\n    drawSkin(skinA, alpha) {\n        this.drawTriangles(skinA.texture, 0, 0, skinA.vertices, skinA.uvs, skinA.indexes, skinA.transform || Matrix.EMPTY, alpha);\n    }\n    static create() {\n        var rs = GraphicsAni._caches.pop();\n        return rs || new GraphicsAni();\n    }\n    static recycle(graphics) {\n        graphics.clear();\n        GraphicsAni._caches.push(graphics);\n    }\n}\nGraphicsAni._caches = [];\n","import { Matrix } from \"../../maths/Matrix\";\nimport { Sprite } from \"../../display/Sprite\";\nimport { ILaya } from \"../../../ILaya\";\nexport class IkConstraint {\n    constructor(data, bones) {\n        this.isSpine = true;\n        this.isDebug = false;\n        this._targetBone = bones[data.targetBoneIndex];\n        this.isSpine = data.isSpine;\n        if (this._bones == null)\n            this._bones = [];\n        this._bones.length = 0;\n        for (var i = 0, n = data.boneIndexs.length; i < n; i++) {\n            this._bones.push(bones[data.boneIndexs[i]]);\n        }\n        this.name = data.name;\n        this.mix = data.mix;\n        this.bendDirection = data.bendDirection;\n    }\n    apply() {\n        switch (this._bones.length) {\n            case 1:\n                this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);\n                break;\n            case 2:\n                if (this.isSpine) {\n                    this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);\n                }\n                else {\n                    this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);\n                }\n                break;\n        }\n    }\n    _applyIk1(bone, targetX, targetY, alpha) {\n        var pp = bone.parentBone;\n        var id = 1 / (pp.resultMatrix.a * pp.resultMatrix.d - pp.resultMatrix.b * pp.resultMatrix.c);\n        var x = targetX - pp.resultMatrix.tx;\n        var y = targetY - pp.resultMatrix.ty;\n        var tx = (x * pp.resultMatrix.d - y * pp.resultMatrix.c) * id - bone.transform.x;\n        var ty = (y * pp.resultMatrix.a - x * pp.resultMatrix.b) * id - bone.transform.y;\n        var rotationIK = Math.atan2(ty, tx) * IkConstraint.radDeg - 0 - bone.transform.skX;\n        if (bone.transform.scX < 0)\n            rotationIK += 180;\n        if (rotationIK > 180)\n            rotationIK -= 360;\n        else if (rotationIK < -180)\n            rotationIK += 360;\n        bone.transform.skX = bone.transform.skY = bone.transform.skX + rotationIK * alpha;\n        bone.update();\n    }\n    updatePos(x, y) {\n        if (this._sp) {\n            this._sp.pos(x, y);\n        }\n    }\n    _applyIk2(parent, child, targetX, targetY, bendDir, alpha) {\n        if (alpha == 0) {\n            return;\n        }\n        var px = parent.resultTransform.x, py = parent.resultTransform.y;\n        var psx = parent.transform.scX, psy = parent.transform.scY;\n        var csx = child.transform.scX;\n        var os1, os2, s2;\n        if (psx < 0) {\n            psx = -psx;\n            os1 = 180;\n            s2 = -1;\n        }\n        else {\n            os1 = 0;\n            s2 = 1;\n        }\n        if (psy < 0) {\n            psy = -psy;\n            s2 = -s2;\n        }\n        if (csx < 0) {\n            csx = -csx;\n            os2 = 180;\n        }\n        else {\n            os2 = 0;\n        }\n        var cx = child.resultTransform.x, cy, cwx, cwy;\n        var a = parent.resultMatrix.a, b = parent.resultMatrix.c;\n        var c = parent.resultMatrix.b, d = parent.resultMatrix.d;\n        var u = Math.abs(psx - psy) <= 0.0001;\n        if (!u) {\n            cy = 0;\n            cwx = a * cx + parent.resultMatrix.tx;\n            cwy = c * cx + parent.resultMatrix.ty;\n        }\n        else {\n            cy = child.resultTransform.y;\n            cwx = a * cx + b * cy + parent.resultMatrix.tx;\n            cwy = c * cx + d * cy + parent.resultMatrix.ty;\n        }\n        if (this.isDebug) {\n            if (!this._sp) {\n                this._sp = new Sprite();\n                ILaya.stage.addChild(this._sp);\n            }\n            this._sp.graphics.clear();\n            this._sp.graphics.drawCircle(targetX, targetY, 15, \"#ffff00\");\n            this._sp.graphics.drawCircle(cwx, cwy, 15, \"#ff00ff\");\n        }\n        parent.setRotation(Math.atan2(cwy - parent.resultMatrix.ty, cwx - parent.resultMatrix.tx));\n        var pp = parent.parentBone;\n        a = pp.resultMatrix.a;\n        b = pp.resultMatrix.c;\n        c = pp.resultMatrix.b;\n        d = pp.resultMatrix.d;\n        var id = 1 / (a * d - b * c);\n        var x = targetX - pp.resultMatrix.tx, y = targetY - pp.resultMatrix.ty;\n        var tx = (x * d - y * b) * id - px;\n        var ty = (y * a - x * c) * id - py;\n        x = cwx - pp.resultMatrix.tx;\n        y = cwy - pp.resultMatrix.ty;\n        var dx = (x * d - y * b) * id - px;\n        var dy = (y * a - x * c) * id - py;\n        var l1 = Math.sqrt(dx * dx + dy * dy);\n        var l2 = child.length * csx;\n        var a1, a2;\n        if (u) {\n            l2 *= psx;\n            var cos = (tx * tx + ty * ty - l1 * l1 - l2 * l2) / (2 * l1 * l2);\n            if (cos < -1)\n                cos = -1;\n            else if (cos > 1)\n                cos = 1;\n            a2 = Math.acos(cos) * bendDir;\n            a = l1 + l2 * cos;\n            b = l2 * Math.sin(a2);\n            a1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\n        }\n        else {\n            a = psx * l2;\n            b = psy * l2;\n            var aa = a * a, bb = b * b, dd = tx * tx + ty * ty, ta = Math.atan2(ty, tx);\n            c = bb * l1 * l1 + aa * dd - aa * bb;\n            var c1 = -2 * bb * l1, c2 = bb - aa;\n            d = c1 * c1 - 4 * c2 * c;\n            if (d > 0) {\n                var q = Math.sqrt(d);\n                if (c1 < 0)\n                    q = -q;\n                q = -(c1 + q) / 2;\n                var r0 = q / c2, r1 = c / q;\n                var r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\n                if (r * r <= dd) {\n                    y = Math.sqrt(dd - r * r) * bendDir;\n                    a1 = ta - Math.atan2(y, r);\n                    a2 = Math.atan2(y / psy, (r - l1) / psx);\n                }\n            }\n            var minAngle = 0, minDist = Number.MAX_VALUE, minX = 0, minY = 0;\n            var maxAngle = 0, maxDist = 0, maxX = 0, maxY = 0;\n            x = l1 + a;\n            d = x * x;\n            if (d > maxDist) {\n                maxAngle = 0;\n                maxDist = d;\n                maxX = x;\n            }\n            x = l1 - a;\n            d = x * x;\n            if (d < minDist) {\n                minAngle = Math.PI;\n                minDist = d;\n                minX = x;\n            }\n            var angle = Math.acos(-a * l1 / (aa - bb));\n            x = a * Math.cos(angle) + l1;\n            y = b * Math.sin(angle);\n            d = x * x + y * y;\n            if (d < minDist) {\n                minAngle = angle;\n                minDist = d;\n                minX = x;\n                minY = y;\n            }\n            if (d > maxDist) {\n                maxAngle = angle;\n                maxDist = d;\n                maxX = x;\n                maxY = y;\n            }\n            if (dd <= (minDist + maxDist) / 2) {\n                a1 = ta - Math.atan2(minY * bendDir, minX);\n                a2 = minAngle * bendDir;\n            }\n            else {\n                a1 = ta - Math.atan2(maxY * bendDir, maxX);\n                a2 = maxAngle * bendDir;\n            }\n        }\n        var os = Math.atan2(cy, cx) * s2;\n        var rotation = parent.resultTransform.skX;\n        a1 = (a1 - os) * IkConstraint.radDeg + os1 - rotation;\n        if (a1 > 180)\n            a1 -= 360;\n        else if (a1 < -180)\n            a1 += 360;\n        parent.resultTransform.x = px;\n        parent.resultTransform.y = py;\n        parent.resultTransform.skX = parent.resultTransform.skY = rotation + a1 * alpha;\n        rotation = child.resultTransform.skX;\n        rotation = rotation % 360;\n        a2 = ((a2 + os) * IkConstraint.radDeg - 0) * s2 + os2 - rotation;\n        if (a2 > 180)\n            a2 -= 360;\n        else if (a2 < -180)\n            a2 += 360;\n        child.resultTransform.x = cx;\n        child.resultTransform.y = cy;\n        child.resultTransform.skX = child.resultTransform.skY = child.resultTransform.skY + a2 * alpha;\n        parent.update();\n    }\n    _applyIk3(parent, child, targetX, targetY, bendDir, alpha) {\n        if (alpha == 0) {\n            return;\n        }\n        var cwx, cwy;\n        const x = child.resultMatrix.a * child.length;\n        const y = child.resultMatrix.b * child.length;\n        const lLL = x * x + y * y;\n        const lL = Math.sqrt(lLL);\n        var parentX = parent.resultMatrix.tx;\n        var parentY = parent.resultMatrix.ty;\n        var childX = child.resultMatrix.tx;\n        var childY = child.resultMatrix.ty;\n        var dX = childX - parentX;\n        var dY = childY - parentY;\n        const lPP = dX * dX + dY * dY;\n        const lP = Math.sqrt(lPP);\n        dX = targetX - parent.resultMatrix.tx;\n        dY = targetY - parent.resultMatrix.ty;\n        const lTT = dX * dX + dY * dY;\n        const lT = Math.sqrt(lTT);\n        var ikRadianA = 0;\n        if (lL + lP <= lT || lT + lL <= lP || lT + lP <= lL) {\n            var rate;\n            if (lL + lP <= lT) {\n                rate = 1;\n            }\n            else {\n                rate = -1;\n            }\n            childX = parentX + rate * (targetX - parentX) * lP / lT;\n            childY = parentY + rate * (targetY - parentY) * lP / lT;\n        }\n        else {\n            const h = (lPP - lLL + lTT) / (2 * lTT);\n            const r = Math.sqrt(lPP - h * h * lTT) / lT;\n            const hX = parentX + (dX * h);\n            const hY = parentY + (dY * h);\n            const rX = -dY * r;\n            const rY = dX * r;\n            if (bendDir > 0) {\n                childX = hX - rX;\n                childY = hY - rY;\n            }\n            else {\n                childX = hX + rX;\n                childY = hY + rY;\n            }\n        }\n        cwx = childX;\n        cwy = childY;\n        if (this.isDebug) {\n            if (!this._sp) {\n                this._sp = new Sprite();\n                ILaya.stage.addChild(this._sp);\n            }\n            this._sp.graphics.clear();\n            this._sp.graphics.drawCircle(parentX, parentY, 15, \"#ff00ff\");\n            this._sp.graphics.drawCircle(targetX, targetY, 15, \"#ffff00\");\n            this._sp.graphics.drawCircle(cwx, cwy, 15, \"#ff00ff\");\n        }\n        var pRotation;\n        pRotation = Math.atan2(cwy - parent.resultMatrix.ty, cwx - parent.resultMatrix.tx);\n        parent.setRotation(pRotation);\n        _tempMatrix.identity();\n        _tempMatrix.rotate(pRotation);\n        _tempMatrix.scale(parent.resultMatrix.getScaleX(), parent.resultMatrix.getScaleY());\n        _tempMatrix.translate(parent.resultMatrix.tx, parent.resultMatrix.ty);\n        _tempMatrix.copyTo(parent.resultMatrix);\n        parent.updateChild();\n        var childRotation;\n        childRotation = Math.atan2(targetY - cwy, targetX - cwx);\n        child.setRotation(childRotation);\n        var childTarMatrix;\n        childTarMatrix = _tempMatrix;\n        childTarMatrix.identity();\n        childTarMatrix.rotate(childRotation);\n        childTarMatrix.scale(child.resultMatrix.getScaleX(), child.resultMatrix.getScaleY());\n        childTarMatrix.translate(cwx, cwy);\n        _tempMatrix.copyTo(child.resultMatrix);\n        child.updateChild();\n    }\n}\nIkConstraint.radDeg = 180 / Math.PI;\nIkConstraint.degRad = Math.PI / 180;\nconst _tempMatrix = new Matrix();\n","import { Matrix } from \"../../maths/Matrix\";\nexport class PathConstraint {\n    constructor(data, bones) {\n        this._debugKey = false;\n        this._segments = [];\n        this._curves = [];\n        this.data = data;\n        this.position = data.position;\n        this.spacing = data.spacing;\n        this.rotateMix = data.rotateMix;\n        this.translateMix = data.translateMix;\n        this.bones = [];\n        var tBoneIds = this.data.bones;\n        for (var i = 0, n = tBoneIds.length; i < n; i++) {\n            this.bones.push(bones[tBoneIds[i]]);\n        }\n    }\n    apply(boneList, graphics) {\n        if (!this.target)\n            return;\n        var tTranslateMix = this.translateMix;\n        var tRotateMix = this.translateMix;\n        var tTranslate = tTranslateMix > 0;\n        var tRotate = tRotateMix > 0;\n        var tSpacingMode = this.data.spacingMode;\n        var tLengthSpacing = tSpacingMode == \"length\";\n        var tRotateMode = this.data.rotateMode;\n        var tTangents = tRotateMode == \"tangent\";\n        var tScale = tRotateMode == \"chainScale\";\n        var lengths = [];\n        var boneCount = this.bones.length;\n        var spacesCount = tTangents ? boneCount : boneCount + 1;\n        var spaces = [];\n        this._spaces = spaces;\n        spaces[0] = this.position;\n        var spacing = this.spacing;\n        if (tScale || tLengthSpacing) {\n            for (var i = 0, n = spacesCount - 1; i < n;) {\n                var bone = this.bones[i];\n                var length = bone.length;\n                var x = length * bone.resultMatrix.a;\n                var y = length * bone.resultMatrix.b;\n                length = Math.sqrt(x * x + y * y);\n                if (tScale)\n                    lengths[i] = length;\n                spaces[++i] = tLengthSpacing ? Math.max(0, length + spacing) : spacing;\n            }\n        }\n        else {\n            for (i = 1; i < spacesCount; i++) {\n                spaces[i] = spacing;\n            }\n        }\n        var positions = this.computeWorldPositions(this.target, boneList, graphics, spacesCount, tTangents, this.data.positionMode == \"percent\", tSpacingMode == \"percent\");\n        if (this._debugKey) {\n            for (i = 0; i < positions.length; i++) {\n                graphics.drawCircle(positions[i++], positions[i++], 5, \"#00ff00\");\n            }\n            var tLinePos = [];\n            for (i = 0; i < positions.length; i++) {\n                tLinePos.push(positions[i++], positions[i++]);\n            }\n            graphics.drawLines(0, 0, tLinePos, \"#ff0000\");\n        }\n        var skeletonX;\n        var skeletonY;\n        var boneX = positions[0];\n        var boneY = positions[1];\n        var offsetRotation = this.data.offsetRotation;\n        var tip = tRotateMode == \"chain\" && offsetRotation == 0;\n        var p;\n        for (i = 0, p = 3; i < boneCount; i++, p += 3) {\n            bone = this.bones[i];\n            bone.resultMatrix.tx += (boneX - bone.resultMatrix.tx) * tTranslateMix;\n            bone.resultMatrix.ty += (boneY - bone.resultMatrix.ty) * tTranslateMix;\n            x = positions[p];\n            y = positions[p + 1];\n            var dx = x - boneX, dy = y - boneY;\n            if (tScale) {\n                length = lengths[i];\n                if (length != 0) {\n                    var s = (Math.sqrt(dx * dx + dy * dy) / length - 1) * tRotateMix + 1;\n                    bone.resultMatrix.a *= s;\n                    bone.resultMatrix.c *= s;\n                }\n            }\n            boneX = x;\n            boneY = y;\n            if (tRotate) {\n                var a = bone.resultMatrix.a;\n                var b = bone.resultMatrix.c;\n                var c = bone.resultMatrix.b;\n                var d = bone.resultMatrix.d;\n                var r;\n                var cos;\n                var sin;\n                if (tTangents) {\n                    r = positions[p - 1];\n                }\n                else if (spaces[i + 1] == 0) {\n                    r = positions[p + 2];\n                }\n                else {\n                    r = Math.atan2(dy, dx);\n                }\n                r -= Math.atan2(c, a) - offsetRotation / 180 * Math.PI;\n                if (tip) {\n                    cos = Math.cos(r);\n                    sin = Math.sin(r);\n                    length = bone.length;\n                    boneX += (length * (cos * a - sin * c) - dx) * tRotateMix;\n                    boneY += (length * (sin * a + cos * c) - dy) * tRotateMix;\n                }\n                if (r > Math.PI) {\n                    r -= (Math.PI * 2);\n                }\n                else if (r < -Math.PI) {\n                    r += (Math.PI * 2);\n                }\n                r *= tRotateMix;\n                cos = Math.cos(r);\n                sin = Math.sin(r);\n                bone.resultMatrix.a = cos * a - sin * c;\n                bone.resultMatrix.c = cos * b - sin * d;\n                bone.resultMatrix.b = sin * a + cos * c;\n                bone.resultMatrix.d = sin * b + cos * d;\n            }\n        }\n    }\n    computeWorldVertices2(boneSlot, boneList, start, count, worldVertices, offset) {\n        var tBones = boneSlot.currDisplayData.bones;\n        var tWeights = boneSlot.currDisplayData.weights;\n        var tTriangles = boneSlot.currDisplayData.triangles;\n        var tMatrix;\n        var i = 0;\n        var v = 0;\n        var skip = 0;\n        var n = 0;\n        var w = 0;\n        var b = 0;\n        var wx = 0;\n        var wy = 0;\n        var vx = 0;\n        var vy = 0;\n        var bone;\n        var len;\n        if (tBones == null) {\n            if (!tTriangles)\n                tTriangles = tWeights;\n            if (boneSlot.deformData)\n                tTriangles = boneSlot.deformData;\n            var parentName;\n            parentName = boneSlot.parent;\n            if (boneList) {\n                len = boneList.length;\n                for (i = 0; i < len; i++) {\n                    if (boneList[i].name == parentName) {\n                        bone = boneList[i];\n                        break;\n                    }\n                }\n            }\n            var tBoneMt;\n            if (bone) {\n                tBoneMt = bone.resultMatrix;\n            }\n            if (!tBoneMt)\n                tBoneMt = _tempMt;\n            var x = tBoneMt.tx;\n            var y = tBoneMt.ty;\n            var a = tBoneMt.a, bb = tBoneMt.b, c = tBoneMt.c, d = tBoneMt.d;\n            if (bone)\n                d *= bone.d;\n            for (v = start, w = offset; w < count; v += 2, w += 2) {\n                vx = tTriangles[v], vy = tTriangles[v + 1];\n                worldVertices[w] = vx * a + vy * bb + x;\n                worldVertices[w + 1] = -(vx * c + vy * d + y);\n            }\n            return;\n        }\n        for (i = 0; i < start; i += 2) {\n            n = tBones[v];\n            v += n + 1;\n            skip += n;\n        }\n        var skeletonBones = boneList;\n        for (w = offset, b = skip * 3; w < count; w += 2) {\n            wx = 0, wy = 0;\n            n = tBones[v++];\n            n += v;\n            for (; v < n; v++, b += 3) {\n                tMatrix = skeletonBones[tBones[v]].resultMatrix;\n                vx = tWeights[b];\n                vy = tWeights[b + 1];\n                var weight = tWeights[b + 2];\n                wx += (vx * tMatrix.a + vy * tMatrix.c + tMatrix.tx) * weight;\n                wy += (vx * tMatrix.b + vy * tMatrix.d + tMatrix.ty) * weight;\n            }\n            worldVertices[w] = wx;\n            worldVertices[w + 1] = wy;\n        }\n    }\n    computeWorldPositions(boneSlot, boneList, graphics, spacesCount, tangents, percentPosition, percentSpacing) {\n        var tBones = boneSlot.currDisplayData.bones;\n        var tWeights = boneSlot.currDisplayData.weights;\n        var tTriangles = boneSlot.currDisplayData.triangles;\n        var tRx = 0;\n        var tRy = 0;\n        var nn = 0;\n        var tMatrix;\n        var tX;\n        var tY;\n        var tB = 0;\n        var tWeight = 0;\n        var tVertices = [];\n        var i = 0, j = 0, n = 0;\n        var verticesLength = boneSlot.currDisplayData.verLen;\n        var target = boneSlot;\n        var position = this.position;\n        var spaces = this._spaces;\n        var world = [];\n        var out = [];\n        var closed = false;\n        var curveCount = verticesLength / 6;\n        var prevCurve = -1;\n        var pathLength;\n        var o, curve;\n        var p;\n        var space;\n        var prev;\n        var length;\n        if (!true) {\n            var lengths = boneSlot.currDisplayData.lengths;\n            curveCount -= closed ? 1 : 2;\n            pathLength = lengths[curveCount];\n            if (percentPosition)\n                position *= pathLength;\n            if (percentSpacing) {\n                for (i = 0; i < spacesCount; i++)\n                    spaces[i] *= pathLength;\n            }\n            world.length = 8;\n            for (i = 0, o = 0, curve = 0; i < spacesCount; i++, o += 3) {\n                space = spaces[i];\n                position += space;\n                p = position;\n                if (closed) {\n                    p %= pathLength;\n                    if (p < 0)\n                        p += pathLength;\n                    curve = 0;\n                }\n                else if (p < 0) {\n                    if (prevCurve != PathConstraint.BEFORE) {\n                        prevCurve = PathConstraint.BEFORE;\n                        this.computeWorldVertices2(target, boneList, 2, 4, world, 0);\n                    }\n                    this.addBeforePosition(p, world, 0, out, o);\n                    continue;\n                }\n                else if (p > pathLength) {\n                    if (prevCurve != PathConstraint.AFTER) {\n                        prevCurve = PathConstraint.AFTER;\n                        this.computeWorldVertices2(target, boneList, verticesLength - 6, 4, world, 0);\n                    }\n                    this.addAfterPosition(p - pathLength, world, 0, out, o);\n                    continue;\n                }\n                for (;; curve++) {\n                    length = lengths[curve];\n                    if (p > length)\n                        continue;\n                    if (curve == 0)\n                        p /= length;\n                    else {\n                        prev = lengths[curve - 1];\n                        p = (p - prev) / (length - prev);\n                    }\n                    break;\n                }\n                if (curve != prevCurve) {\n                    prevCurve = curve;\n                    if (closed && curve == curveCount) {\n                        this.computeWorldVertices2(target, boneList, verticesLength - 4, 4, world, 0);\n                        this.computeWorldVertices2(target, boneList, 0, 4, world, 4);\n                    }\n                    else\n                        this.computeWorldVertices2(target, boneList, curve * 6 + 2, 8, world, 0);\n                }\n                this.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || (i > 0 && space == 0));\n            }\n            return out;\n        }\n        if (closed) {\n            verticesLength += 2;\n            world[verticesLength - 2] = world[0];\n            world[verticesLength - 1] = world[1];\n        }\n        else {\n            curveCount--;\n            verticesLength -= 4;\n            this.computeWorldVertices2(boneSlot, boneList, 2, verticesLength, tVertices, 0);\n            if (this._debugKey) {\n                for (i = 0; i < tVertices.length;) {\n                    graphics.drawCircle(tVertices[i++], tVertices[i++], 10, \"#ff0000\");\n                }\n            }\n            world = tVertices;\n        }\n        this._curves.length = curveCount;\n        var curves = this._curves;\n        pathLength = 0;\n        var x1 = world[0], y1 = world[1], cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0, x2 = 0, y2 = 0;\n        var tmpx, tmpy, dddfx, dddfy, ddfx, ddfy, dfx, dfy;\n        var w;\n        for (i = 0, w = 2; i < curveCount; i++, w += 6) {\n            cx1 = world[w];\n            cy1 = world[w + 1];\n            cx2 = world[w + 2];\n            cy2 = world[w + 3];\n            x2 = world[w + 4];\n            y2 = world[w + 5];\n            tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\n            tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\n            dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\n            dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\n            ddfx = tmpx * 2 + dddfx;\n            ddfy = tmpy * 2 + dddfy;\n            dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\n            dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx + dddfx;\n            dfy += ddfy + dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            curves[i] = pathLength;\n            x1 = x2;\n            y1 = y2;\n        }\n        if (percentPosition)\n            position *= pathLength;\n        if (percentSpacing) {\n            for (i = 0; i < spacesCount; i++)\n                spaces[i] *= pathLength;\n        }\n        var segments = this._segments;\n        var curveLength = 0;\n        var segment;\n        for (i = 0, o = 0, curve = 0, segment = 0; i < spacesCount; i++, o += 3) {\n            space = spaces[i];\n            position += space;\n            p = position;\n            if (closed) {\n                p %= pathLength;\n                if (p < 0)\n                    p += pathLength;\n                curve = 0;\n            }\n            else if (p < 0) {\n                this.addBeforePosition(p, world, 0, out, o);\n                continue;\n            }\n            else if (p > pathLength) {\n                this.addAfterPosition(p - pathLength, world, verticesLength - 4, out, o);\n                continue;\n            }\n            for (;; curve++) {\n                length = curves[curve];\n                if (p > length)\n                    continue;\n                if (curve == 0)\n                    p /= length;\n                else {\n                    prev = curves[curve - 1];\n                    p = (p - prev) / (length - prev);\n                }\n                break;\n            }\n            if (curve != prevCurve) {\n                prevCurve = curve;\n                var ii = curve * 6;\n                x1 = world[ii];\n                y1 = world[ii + 1];\n                cx1 = world[ii + 2];\n                cy1 = world[ii + 3];\n                cx2 = world[ii + 4];\n                cy2 = world[ii + 5];\n                x2 = world[ii + 6];\n                y2 = world[ii + 7];\n                tmpx = (x1 - cx1 * 2 + cx2) * 0.03;\n                tmpy = (y1 - cy1 * 2 + cy2) * 0.03;\n                dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\n                dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\n                ddfx = tmpx * 2 + dddfx;\n                ddfy = tmpy * 2 + dddfy;\n                dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\n                dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\n                curveLength = Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[0] = curveLength;\n                for (ii = 1; ii < 8; ii++) {\n                    dfx += ddfx;\n                    dfy += ddfy;\n                    ddfx += dddfx;\n                    ddfy += dddfy;\n                    curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[ii] = curveLength;\n                }\n                dfx += ddfx;\n                dfy += ddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[8] = curveLength;\n                dfx += ddfx + dddfx;\n                dfy += ddfy + dddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[9] = curveLength;\n                segment = 0;\n            }\n            p *= curveLength;\n            for (;; segment++) {\n                length = segments[segment];\n                if (p > length)\n                    continue;\n                if (segment == 0)\n                    p /= length;\n                else {\n                    prev = segments[segment - 1];\n                    p = segment + (p - prev) / (length - prev);\n                }\n                break;\n            }\n            this.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents || (i > 0 && space == 0));\n        }\n        return out;\n    }\n    addBeforePosition(p, temp, i, out, o) {\n        var x1 = temp[i], y1 = temp[i + 1], dx = temp[i + 2] - x1, dy = temp[i + 3] - y1, r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addAfterPosition(p, temp, i, out, o) {\n        var x1 = temp[i + 2], y1 = temp[i + 3], dx = x1 - temp[i], dy = y1 - temp[i + 1], r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addCurvePosition(p, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents) {\n        if (p == 0)\n            p = 0.0001;\n        var tt = p * p, ttt = tt * p, u = 1 - p, uu = u * u, uuu = uu * u;\n        var ut = u * p, ut3 = ut * 3, uut3 = u * ut3, utt3 = ut3 * p;\n        var x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt, y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\n        out[o] = x;\n        out[o + 1] = y;\n        if (tangents) {\n            out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\n        }\n        else {\n            out[o + 2] = 0;\n        }\n    }\n}\nPathConstraint.BEFORE = -2;\nPathConstraint.AFTER = -3;\nconst _tempMt = new Matrix();\n","export class TfConstraint {\n    constructor(data, bones) {\n        this._temp = [];\n        this._data = data;\n        if (this._bones == null) {\n            this._bones = [];\n        }\n        this.target = bones[data.targetIndex];\n        var j, n;\n        for (j = 0, n = data.boneIndexs.length; j < n; j++) {\n            this._bones.push(bones[data.boneIndexs[j]]);\n        }\n        this.rotateMix = data.rotateMix;\n        this.translateMix = data.translateMix;\n        this.scaleMix = data.scaleMix;\n        this.shearMix = data.shearMix;\n    }\n    apply() {\n        var tTfBone;\n        var ta = this.target.resultMatrix.a, tb = this.target.resultMatrix.b, tc = this.target.resultMatrix.c, td = this.target.resultMatrix.d;\n        for (var j = 0, n = this._bones.length; j < n; j++) {\n            tTfBone = this._bones[j];\n            if (this.rotateMix > 0) {\n                var a = tTfBone.resultMatrix.a, b = tTfBone.resultMatrix.b, c = tTfBone.resultMatrix.c, d = tTfBone.resultMatrix.d;\n                var r = Math.atan2(tc, ta) - Math.atan2(c, a) + this._data.offsetRotation * Math.PI / 180;\n                if (r > Math.PI)\n                    r -= Math.PI * 2;\n                else if (r < -Math.PI)\n                    r += Math.PI * 2;\n                r *= this.rotateMix;\n                var cos = Math.cos(r), sin = Math.sin(r);\n                tTfBone.resultMatrix.a = cos * a - sin * c;\n                tTfBone.resultMatrix.b = cos * b - sin * d;\n                tTfBone.resultMatrix.c = sin * a + cos * c;\n                tTfBone.resultMatrix.d = sin * b + cos * d;\n            }\n            if (this.translateMix) {\n                this._temp[0] = this._data.offsetX;\n                this._temp[1] = this._data.offsetY;\n                this.target.localToWorld(this._temp);\n                tTfBone.resultMatrix.tx += (this._temp[0] - tTfBone.resultMatrix.tx) * this.translateMix;\n                tTfBone.resultMatrix.ty += (this._temp[1] - tTfBone.resultMatrix.ty) * this.translateMix;\n                tTfBone.updateChild();\n            }\n            if (this.scaleMix > 0) {\n                var bs = Math.sqrt(tTfBone.resultMatrix.a * tTfBone.resultMatrix.a + tTfBone.resultMatrix.c * tTfBone.resultMatrix.c);\n                var ts = Math.sqrt(ta * ta + tc * tc);\n                var s = bs > 0.00001 ? (bs + (ts - bs + this._data.offsetScaleX) * this.scaleMix) / bs : 0;\n                tTfBone.resultMatrix.a *= s;\n                tTfBone.resultMatrix.c *= s;\n                bs = Math.sqrt(tTfBone.resultMatrix.b * tTfBone.resultMatrix.b + tTfBone.resultMatrix.d * tTfBone.resultMatrix.d);\n                ts = Math.sqrt(tb * tb + td * td);\n                s = bs > 0.00001 ? (bs + (ts - bs + this._data.offsetScaleY) * this.scaleMix) / bs : 0;\n                tTfBone.resultMatrix.b *= s;\n                tTfBone.resultMatrix.d *= s;\n            }\n            if (this.shearMix > 0) {\n                b = tTfBone.resultMatrix.b, d = tTfBone.resultMatrix.d;\n                var by = Math.atan2(d, b);\n                r = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(tTfBone.resultMatrix.c, tTfBone.resultMatrix.a));\n                if (r > Math.PI)\n                    r -= Math.PI * 2;\n                else if (r < -Math.PI)\n                    r += Math.PI * 2;\n                r = by + (r + this._data.offsetShearY * Math.PI / 180) * this.shearMix;\n                s = Math.sqrt(b * b + d * d);\n                tTfBone.resultMatrix.b = Math.cos(r) * s;\n                tTfBone.resultMatrix.d = Math.sin(r) * s;\n            }\n        }\n    }\n}\n","import { IkConstraint } from \"./IkConstraint\";\nimport { PathConstraint } from \"./PathConstraint\";\nimport { TfConstraint } from \"./TfConstraint\";\nimport { AnimationPlayer } from \"../AnimationPlayer\";\nimport { GraphicsAni } from \"../GraphicsAni\";\nimport { Sprite } from \"../../display/Sprite\";\nimport { Handler } from \"../../utils/Handler\";\nimport { Matrix } from \"../../maths/Matrix\";\nimport { Event } from \"../../events/Event\";\nimport { SoundManager } from \"../../media/SoundManager\";\nimport { Byte } from \"../../utils/Byte\";\nimport { IAniLib } from \"../AniLibPack\";\nimport { ILaya } from \"../../../ILaya\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { Browser } from \"../../utils/Browser\";\nexport class Skeleton extends Sprite {\n    constructor(aniMode = 0) {\n        super();\n        this._boneMatrixArray = [];\n        this._lastTime = 0;\n        this._currAniIndex = -1;\n        this._pause = true;\n        this._aniClipIndex = -1;\n        this._clipIndex = -1;\n        this._skinIndex = 0;\n        this._skinName = \"default\";\n        this._aniMode = 0;\n        this._index = -1;\n        this._total = -1;\n        this._indexControl = false;\n        this._eventIndex = 0;\n        this._drawOrderIndex = 0;\n        this._drawOrder = null;\n        this._lastAniClipIndex = -1;\n        this._lastUpdateAniClipIndex = -1;\n        this._playAudio = true;\n        this._soundChannelArr = [];\n        this._animationName = \"\";\n        this._loop = true;\n        this._aniMode = aniMode;\n    }\n    get index() {\n        return this._index;\n    }\n    set index(value) {\n        if (this.player) {\n            this._index = value;\n            this._player.currentTime = this._index * 1000 / this._player.cacheFrameRate;\n            this._indexControl = true;\n            if (this._aniClipIndex < 0 || this._aniClipIndex >= this.getAnimNum()) {\n                this._aniClipIndex = 0;\n                this._currAniIndex = 0;\n                this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(this._currAniIndex));\n                this._drawOrder = null;\n                this._eventIndex = 0;\n            }\n            this._update(false);\n        }\n    }\n    get total() {\n        if (this._templet && this._player) {\n            this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1000 * this._player.cacheFrameRate);\n        }\n        else {\n            this._total = -1;\n        }\n        return this._total;\n    }\n    get player() {\n        return this._player;\n    }\n    get skinName() {\n        return this._skinName;\n    }\n    set skinName(value) {\n        this._skinName = value;\n        if (this._templet)\n            this.showSkinByName(value);\n    }\n    get animationName() {\n        return this._animationName;\n    }\n    set animationName(value) {\n        this._animationName = value;\n        if (this._templet)\n            this.play(value, this._loop, true);\n    }\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        this._loop = value;\n        if (this._templet)\n            this.play(this._animationName, this._loop, true);\n    }\n    get templet() {\n        return this._templet;\n    }\n    set templet(value) {\n        this.init(value);\n    }\n    get source() {\n        return this._source;\n    }\n    set source(value) {\n        this._source = value;\n        if (value) {\n            ILaya.loader.load(value).then((templet) => {\n                if (!this._source || templet && !templet.isCreateFromURL(this._source))\n                    return;\n                this.templet = templet;\n            });\n        }\n        else\n            this.templet = null;\n    }\n    get aniMode() {\n        return this._aniMode;\n    }\n    set aniMode(value) {\n        this._aniMode = value;\n    }\n    init(templet) {\n        if (this._templet) {\n            this.reset();\n            this.graphics.clear();\n        }\n        this._templet = templet;\n        if (!this._templet)\n            return;\n        if (this._aniMode == 1) {\n            this._graphicsCache = [];\n            for (let i = 0, n = templet.getAnimationCount(); i < n; i++) {\n                this._graphicsCache.push([]);\n            }\n        }\n        this._yReverseMatrix = templet.yReverseMatrix;\n        this._templet._addReference(1);\n        this._player = new AnimationPlayer();\n        this._player.templet = templet;\n        this._player.play();\n        this._parseSrcBoneMatrix();\n        this._boneList = templet.mBoneArr;\n        this._rootBone = templet.mRootBone;\n        this._aniSectionDic = templet.aniSectionDic;\n        if (templet.ikArr.length > 0) {\n            this._ikArr = [];\n            for (let i = 0, n = templet.ikArr.length; i < n; i++) {\n                this._ikArr.push(new IkConstraint(templet.ikArr[i], this._boneList));\n            }\n        }\n        if (templet.pathArr.length > 0) {\n            this._pathDic = {};\n            for (let i = 0, n = templet.pathArr.length; i < n; i++) {\n                let tPathData = templet.pathArr[i];\n                let tPathConstraint = new PathConstraint(tPathData, this._boneList);\n                let tBoneSlot = this._boneSlotDic[tPathData.name];\n                if (tBoneSlot) {\n                    tPathConstraint = new PathConstraint(tPathData, this._boneList);\n                    tPathConstraint.target = tBoneSlot;\n                }\n                this._pathDic[tPathData.name] = tPathConstraint;\n            }\n        }\n        if (templet.tfArr.length > 0) {\n            this._tfArr = [];\n            for (let i = 0, n = templet.tfArr.length; i < n; i++) {\n                this._tfArr.push(new TfConstraint(templet.tfArr[i], this._boneList));\n            }\n        }\n        if (templet.skinDataArray.length > 0) {\n            this._skinIndex = this._templet.getSkinIndexByName(this._skinName);\n            if (this._skinIndex == -1)\n                this._skinIndex = 0;\n        }\n        this._player.on(Event.PLAYED, this, this._onPlay);\n        this._player.on(Event.STOPPED, this, this._onStop);\n        this._player.on(Event.PAUSED, this, this._onPause);\n        if (LayaEnv.isPlaying && this._animationName)\n            this.play(this._animationName, this._loop, true);\n    }\n    load(path, complete) {\n        ILaya.loader.load(path).then((templet) => {\n            if (templet == null)\n                return;\n            if (!templet.isCreateFromURL(path))\n                return;\n            this.init(templet);\n            this.play(0, true);\n            if (complete instanceof Handler)\n                complete.runWith(this);\n            else if (complete)\n                complete();\n        });\n    }\n    _onPlay() {\n        this.event(Event.PLAYED);\n    }\n    _onStop() {\n        let tEventAniArr = this._templet.eventAniArr;\n        let tEventArr = tEventAniArr[this._aniClipIndex];\n        if (tEventArr && this._eventIndex < tEventArr.length) {\n            for (; this._eventIndex < tEventArr.length; this._eventIndex++) {\n                let tEventData = tEventArr[this._eventIndex];\n                if (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\n                    this.event(Event.LABEL, tEventData);\n                }\n            }\n        }\n        this._drawOrder = null;\n        this.event(Event.STOPPED);\n    }\n    _onPause() {\n        this.event(Event.PAUSED);\n    }\n    _parseSrcBoneMatrix() {\n        let n = this._templet.srcBoneMatrixArr.length;\n        for (let i = 0; i < n; i++) {\n            this._boneMatrixArray.push(new Matrix());\n        }\n        if (this._aniMode == 0) {\n            this._boneSlotDic = this._templet.boneSlotDic;\n            this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic;\n            this._boneSlotArray = this._templet.boneSlotArray;\n        }\n        else {\n            this._boneSlotDic = {};\n            this._bindBoneBoneSlotDic = {};\n            this._boneSlotArray = [];\n            let tArr = this._templet.boneSlotArray;\n            for (let i = 0, n = tArr.length; i < n; i++) {\n                let tBS = tArr[i];\n                let tBSArr = this._bindBoneBoneSlotDic[tBS.parent];\n                if (tBSArr == null) {\n                    this._bindBoneBoneSlotDic[tBS.parent] = tBSArr = [];\n                }\n                this._boneSlotDic[tBS.name] = tBS = tBS.copy();\n                tBSArr.push(tBS);\n                this._boneSlotArray.push(tBS);\n            }\n        }\n    }\n    _emitMissedEvents(startTime, endTime, startIndex = 0) {\n        let tEventAniArr = this._templet.eventAniArr;\n        let tEventArr = tEventAniArr[this._player.currentAnimationClipIndex];\n        if (tEventArr) {\n            let len = tEventArr.length;\n            for (let i = startIndex; i < len; i++) {\n                let tEventData = tEventArr[i];\n                if (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\n                    this.event(Event.LABEL, tEventData);\n                }\n            }\n        }\n    }\n    _update(autoKey = true) {\n        if (autoKey && this._pause)\n            return;\n        if (autoKey && this._indexControl) {\n            return;\n        }\n        let tCurrTime = this.timer.currTimer;\n        let preIndex = this._player.currentKeyframeIndex;\n        let dTime = tCurrTime - this._lastTime;\n        if (autoKey) {\n            this._player._update(dTime);\n        }\n        else {\n            preIndex = -1;\n        }\n        this._lastTime = tCurrTime;\n        this._index = this._clipIndex = this._player.currentKeyframeIndex;\n        if (this._index < 0)\n            return;\n        if (dTime > 0 && this._clipIndex == preIndex && this._lastUpdateAniClipIndex == this._aniClipIndex) {\n            return;\n        }\n        this._lastUpdateAniClipIndex = this._aniClipIndex;\n        if (preIndex > this._clipIndex && this._eventIndex != 0) {\n            this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex);\n            this._eventIndex = 0;\n        }\n        let tEventArr = this._templet.eventAniArr[this._aniClipIndex];\n        if (tEventArr && this._eventIndex < tEventArr.length) {\n            let tEventData = tEventArr[this._eventIndex];\n            if (tEventData.time >= this._player.playStart && tEventData.time <= this._player.playEnd) {\n                if (this._player.currentPlayTime >= tEventData.time) {\n                    this.event(Event.LABEL, tEventData);\n                    this._eventIndex++;\n                    if (this._playAudio && tEventData.audioValue && tEventData.audioValue !== \"null\" && tEventData.audioValue !== \"undefined\") {\n                        let channel = SoundManager.playSound(this._player.templet._path + tEventData.audioValue, 1, Handler.create(this, this._onAniSoundStoped));\n                        SoundManager.playbackRate = this._player.playbackRate;\n                        channel && this._soundChannelArr.push(channel);\n                    }\n                }\n            }\n            else if (tEventData.time < this._player.playStart && this._playAudio && tEventData.audioValue && tEventData.audioValue !== \"null\" && tEventData.audioValue !== \"undefined\") {\n                this._eventIndex++;\n                let channel = SoundManager.playSound(this._player.templet._path + tEventData.audioValue, 1, Handler.create(this, this._onAniSoundStoped), null, (this._player.currentPlayTime - tEventData.time) / 1000);\n                SoundManager.playbackRate = this._player.playbackRate;\n                channel && this._soundChannelArr.push(channel);\n            }\n            else {\n                this._eventIndex++;\n            }\n        }\n        if (this._aniMode == 0) {\n            let tGraphics = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex) || this._createGraphics();\n            if (tGraphics && this.graphics != tGraphics) {\n                this.graphics = tGraphics;\n            }\n        }\n        else if (this._aniMode == 1) {\n            let tGraphics = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex) || this._createGraphics();\n            if (tGraphics && this.graphics != tGraphics) {\n                this.graphics = tGraphics;\n            }\n        }\n        else {\n            this._createGraphics();\n        }\n    }\n    _onAniSoundStoped(force) {\n        for (let i = this._soundChannelArr.length - 1; i >= 0; i--) {\n            let channel = this._soundChannelArr[i];\n            if (channel.isStopped || force) {\n                !channel.isStopped && channel.stop();\n                this._soundChannelArr.splice(i, 1);\n            }\n        }\n    }\n    _createGraphics(_clipIndex = -1) {\n        if (_clipIndex == -1)\n            _clipIndex = this._clipIndex;\n        let curTime = _clipIndex * this._player.cacheFrameRateInterval;\n        let tDrawOrderAniArr = this._templet.drawOrderAniArr;\n        let tDrawOrderArr = tDrawOrderAniArr[this._aniClipIndex];\n        if (tDrawOrderArr && tDrawOrderArr.length > 0) {\n            this._drawOrderIndex = 0;\n            let tDrawOrderData = tDrawOrderArr[this._drawOrderIndex];\n            while (curTime >= tDrawOrderData.time) {\n                this._drawOrder = tDrawOrderData.drawOrder;\n                this._drawOrderIndex++;\n                if (this._drawOrderIndex >= tDrawOrderArr.length) {\n                    break;\n                }\n                tDrawOrderData = tDrawOrderArr[this._drawOrderIndex];\n            }\n        }\n        if (this._aniMode == 0 || this._aniMode == 1) {\n            this.graphics = GraphicsAni.create();\n        }\n        else {\n            if (this.graphics instanceof GraphicsAni) {\n                this.graphics.clear();\n            }\n            else {\n                this.graphics = GraphicsAni.create();\n            }\n        }\n        let tGraphics = this.graphics;\n        let bones = this._templet.getNodes(this._aniClipIndex);\n        let stopped = this._player.state == 0;\n        this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, null, _clipIndex, stopped ? (curTime + this._player.cacheFrameRateInterval) : curTime);\n        let tSectionArr = this._aniSectionDic[this._aniClipIndex];\n        let tStartIndex = 0;\n        let i = 0, j = 0, k = 0, n = 0;\n        let boneCount = this._templet.srcBoneMatrixArr.length;\n        let origDt = this._curOriginalData;\n        for (i = 0, n = tSectionArr[0]; i < boneCount; i++) {\n            let tSrcBone = this._boneList[i];\n            let resultTrans = tSrcBone.resultTransform;\n            let tParentTransform = this._templet.srcBoneMatrixArr[i];\n            resultTrans.scX = tParentTransform.scX * origDt[tStartIndex++];\n            resultTrans.skX = tParentTransform.skX + origDt[tStartIndex++];\n            resultTrans.skY = tParentTransform.skY + origDt[tStartIndex++];\n            resultTrans.scY = tParentTransform.scY * origDt[tStartIndex++];\n            resultTrans.x = tParentTransform.x + origDt[tStartIndex++];\n            resultTrans.y = tParentTransform.y + origDt[tStartIndex++];\n            if (this._templet.tMatrixDataLen === 8) {\n                resultTrans.skewX = tParentTransform.skewX + origDt[tStartIndex++];\n                resultTrans.skewY = tParentTransform.skewY + origDt[tStartIndex++];\n            }\n        }\n        let tSlotDic = {};\n        let tSlotAlphaDic = {};\n        for (n += tSectionArr[1]; i < n; i++) {\n            let tBoneData = bones[i];\n            tSlotDic[tBoneData.name] = origDt[tStartIndex++];\n            tSlotAlphaDic[tBoneData.name] = origDt[tStartIndex++];\n            tStartIndex += 4;\n        }\n        let tBendDirectionDic = {};\n        let tMixDic = {};\n        for (n += tSectionArr[2]; i < n; i++) {\n            let tBoneData = bones[i];\n            tBendDirectionDic[tBoneData.name] = origDt[tStartIndex++];\n            tMixDic[tBoneData.name] = origDt[tStartIndex++];\n            tStartIndex += 4;\n        }\n        if (this._pathDic) {\n            for (n += tSectionArr[3]; i < n; i++) {\n                let tBoneData = bones[i];\n                let tPathConstraint = this._pathDic[tBoneData.name];\n                if (tPathConstraint) {\n                    let tByte = new Byte(tBoneData.extenData);\n                    switch (tByte.getByte()) {\n                        case 1:\n                            tPathConstraint.position = origDt[tStartIndex++];\n                            break;\n                        case 2:\n                            tPathConstraint.spacing = origDt[tStartIndex++];\n                            break;\n                        case 3:\n                            tPathConstraint.rotateMix = origDt[tStartIndex++];\n                            tPathConstraint.translateMix = origDt[tStartIndex++];\n                            break;\n                    }\n                }\n            }\n        }\n        this._rootBone.update(this._yReverseMatrix || Matrix.TEMP.identity());\n        if (this._ikArr) {\n            let tIkConstraint;\n            for (i = 0, n = this._ikArr.length; i < n; i++) {\n                tIkConstraint = this._ikArr[i];\n                if (tIkConstraint.name in tBendDirectionDic) {\n                    tIkConstraint.bendDirection = tBendDirectionDic[tIkConstraint.name];\n                }\n                if (tIkConstraint.name in tMixDic) {\n                    tIkConstraint.mix = tMixDic[tIkConstraint.name];\n                }\n                tIkConstraint.apply();\n            }\n        }\n        if (this._pathDic) {\n            for (let tPathStr in this._pathDic) {\n                let tPathConstraint = this._pathDic[tPathStr];\n                tPathConstraint.apply(this._boneList, tGraphics);\n            }\n        }\n        if (this._tfArr) {\n            for (i = 0, k = this._tfArr.length; i < k; i++) {\n                let tTfConstraint = this._tfArr[i];\n                tTfConstraint.apply();\n            }\n        }\n        for (i = 0, k = this._boneList.length; i < k; i++) {\n            let tSrcBone = this._boneList[i];\n            let tDBBoneSlotArr = this._bindBoneBoneSlotDic[tSrcBone.name];\n            tSrcBone.resultMatrix.copyTo(this._boneMatrixArray[i]);\n            if (tDBBoneSlotArr) {\n                for (j = 0, n = tDBBoneSlotArr.length; j < n; j++) {\n                    let tDBBoneSlot = tDBBoneSlotArr[j];\n                    if (tDBBoneSlot) {\n                        tDBBoneSlot.setParentMatrix(tSrcBone.resultMatrix);\n                    }\n                }\n            }\n        }\n        let tDeformDic = {};\n        let tDeformAniArr = this._templet.deformAniArr;\n        if (tDeformAniArr && tDeformAniArr.length > 0) {\n            if (this._lastAniClipIndex != this._aniClipIndex) {\n                this._lastAniClipIndex = this._aniClipIndex;\n                for (i = 0, n = this._boneSlotArray.length; i < n; i++) {\n                    let tDBBoneSlot = this._boneSlotArray[i];\n                    tDBBoneSlot.deformData = null;\n                }\n            }\n            let tSkinDeformAni = tDeformAniArr[this._aniClipIndex];\n            let tDeformAniData = (tSkinDeformAni[\"default\"]);\n            this._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\n            let tSkin;\n            for (tSkin in tSkinDeformAni) {\n                if (tSkin != \"default\" && tSkin != this._skinName) {\n                    tDeformAniData = tSkinDeformAni[tSkin];\n                    this._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\n                }\n            }\n            tDeformAniData = (tSkinDeformAni[this._skinName]);\n            this._setDeform(tDeformAniData, tDeformDic, this._boneSlotArray, curTime);\n        }\n        if (this._drawOrder) {\n            for (i = 0, n = this._drawOrder.length; i < n; i++) {\n                let tDBBoneSlot = this._boneSlotArray[this._drawOrder[i]];\n                let tSlotData2 = tSlotDic[tDBBoneSlot.name];\n                let tSlotData3 = tSlotAlphaDic[tDBBoneSlot.name];\n                if (!isNaN(tSlotData3)) {\n                }\n                if (!isNaN(tSlotData2) && tSlotData2 != -2) {\n                    if (this._templet.attachmentNames) {\n                        tDBBoneSlot.showDisplayByName(this._templet.attachmentNames[tSlotData2]);\n                    }\n                    else {\n                        tDBBoneSlot.showDisplayByIndex(tSlotData2);\n                    }\n                }\n                if (tDeformDic[this._drawOrder[i]]) {\n                    let tObject = tDeformDic[this._drawOrder[i]];\n                    if (tDBBoneSlot.currDisplayData && tObject[tDBBoneSlot.currDisplayData.attachmentName]) {\n                        tDBBoneSlot.deformData = tObject[tDBBoneSlot.currDisplayData.attachmentName];\n                    }\n                    else {\n                        tDBBoneSlot.deformData = null;\n                    }\n                }\n                else {\n                    tDBBoneSlot.deformData = null;\n                }\n                if (!isNaN(tSlotData3)) {\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2, tSlotData3);\n                }\n                else {\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2);\n                }\n                if (!isNaN(tSlotData3)) {\n                }\n            }\n        }\n        else {\n            for (i = 0, n = this._boneSlotArray.length; i < n; i++) {\n                let tDBBoneSlot = this._boneSlotArray[i];\n                let tSlotData2 = tSlotDic[tDBBoneSlot.name];\n                let tSlotData3 = tSlotAlphaDic[tDBBoneSlot.name];\n                if (!isNaN(tSlotData3)) {\n                }\n                if (!isNaN(tSlotData2) && tSlotData2 != -2) {\n                    if (this._templet.attachmentNames) {\n                        tDBBoneSlot.showDisplayByName(this._templet.attachmentNames[tSlotData2]);\n                    }\n                    else {\n                        tDBBoneSlot.showDisplayByIndex(tSlotData2);\n                    }\n                }\n                if (tDeformDic[i]) {\n                    let tObject = tDeformDic[i];\n                    if (tDBBoneSlot.currDisplayData && tObject[tDBBoneSlot.currDisplayData.attachmentName]) {\n                        tDBBoneSlot.deformData = tObject[tDBBoneSlot.currDisplayData.attachmentName];\n                    }\n                    else {\n                        tDBBoneSlot.deformData = null;\n                    }\n                }\n                else {\n                    tDBBoneSlot.deformData = null;\n                }\n                if (!isNaN(tSlotData3)) {\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2, tSlotData3);\n                }\n                else {\n                    tDBBoneSlot.draw(tGraphics, this._boneMatrixArray, this._aniMode == 2);\n                }\n                if (!isNaN(tSlotData3)) {\n                }\n            }\n        }\n        if (this._aniMode == 0) {\n            this._templet.setGrahicsDataWithCache(this._aniClipIndex, _clipIndex, tGraphics);\n            this._checkIsAllParsed(this._aniClipIndex);\n        }\n        else if (this._aniMode == 1) {\n            this._setGrahicsDataWithCache(this._aniClipIndex, _clipIndex, tGraphics);\n        }\n        return tGraphics;\n    }\n    _checkIsAllParsed(_aniClipIndex) {\n        let len = Math.floor(0.01 + this._templet.getAniDuration(_aniClipIndex) / 1000 * this._player.cacheFrameRate);\n        for (let i = 0; i < len; i++) {\n            if (!this._templet.getGrahicsDataWithCache(_aniClipIndex, i))\n                return;\n        }\n        if (!this._templet.getGrahicsDataWithCache(_aniClipIndex, len)) {\n            this._createGraphics(len);\n            return;\n        }\n        this._templet.deleteAniData(_aniClipIndex);\n    }\n    _setDeform(tDeformAniData, tDeformDic, _boneSlotArray, curTime) {\n        if (!tDeformAniData)\n            return;\n        let tDeformSlotData;\n        let tDeformSlotDisplayData;\n        let tDBBoneSlot;\n        if (tDeformAniData) {\n            for (let i = 0, n = tDeformAniData.deformSlotDataList.length; i < n; i++) {\n                tDeformSlotData = tDeformAniData.deformSlotDataList[i];\n                for (let j = 0; j < tDeformSlotData.deformSlotDisplayList.length; j++) {\n                    tDeformSlotDisplayData = tDeformSlotData.deformSlotDisplayList[j];\n                    tDBBoneSlot = _boneSlotArray[tDeformSlotDisplayData.slotIndex];\n                    tDeformSlotDisplayData.apply(curTime, tDBBoneSlot);\n                    if (!tDeformDic[tDeformSlotDisplayData.slotIndex]) {\n                        tDeformDic[tDeformSlotDisplayData.slotIndex] = {};\n                    }\n                    tDeformDic[tDeformSlotDisplayData.slotIndex][tDeformSlotDisplayData.attachment] = tDeformSlotDisplayData.deformData;\n                }\n            }\n        }\n    }\n    getAnimNum() {\n        return this._templet.getAnimationCount();\n    }\n    getAniNameByIndex(index) {\n        return this._templet.getAniNameByIndex(index);\n    }\n    getSlotByName(name) {\n        return this._boneSlotDic[name];\n    }\n    showSkinByName(name, freshSlotIndex = true) {\n        this.showSkinByIndex(this._templet.getSkinIndexByName(name), freshSlotIndex);\n    }\n    showSkinByIndex(skinIndex, freshSlotIndex = true) {\n        for (let i = 0; i < this._boneSlotArray.length; i++) {\n            this._boneSlotArray[i].showSlotData(null, freshSlotIndex);\n        }\n        if (this._templet.showSkinByIndex(this._boneSlotDic, skinIndex, freshSlotIndex)) {\n            let tSkinData = this._templet.skinDataArray[skinIndex];\n            this._skinName = tSkinData.name;\n        }\n        this._clearCache();\n    }\n    showSlotSkinByIndex(slotName, index) {\n        if (this._aniMode == 0)\n            return;\n        let tBoneSlot = this.getSlotByName(slotName);\n        if (tBoneSlot) {\n            tBoneSlot.showDisplayByIndex(index);\n        }\n        this._clearCache();\n    }\n    showSlotSkinByName(slotName, name) {\n        if (this._aniMode == 0)\n            return;\n        let tBoneSlot = this.getSlotByName(slotName);\n        if (tBoneSlot) {\n            tBoneSlot.showDisplayByName(name);\n        }\n        this._clearCache();\n    }\n    replaceSlotSkinName(slotName, oldName, newName) {\n        if (this._aniMode == 0)\n            return;\n        let tBoneSlot = this.getSlotByName(slotName);\n        if (tBoneSlot) {\n            tBoneSlot.replaceDisplayByName(oldName, newName);\n        }\n        this._clearCache();\n    }\n    replaceSlotSkinByIndex(slotName, oldIndex, newIndex) {\n        if (this._aniMode == 0)\n            return;\n        let tBoneSlot = this.getSlotByName(slotName);\n        if (tBoneSlot) {\n            tBoneSlot.replaceDisplayByIndex(oldIndex, newIndex);\n        }\n        this._clearCache();\n    }\n    setSlotSkin(slotName, texture) {\n        if (this._aniMode == 0)\n            return;\n        let tBoneSlot = this.getSlotByName(slotName);\n        if (tBoneSlot) {\n            tBoneSlot.replaceSkin(texture);\n        }\n        this._clearCache();\n    }\n    _clearCache() {\n        if (this._aniMode == 1) {\n            for (let i = 0, n = this._graphicsCache.length; i < n; i++) {\n                for (let j = 0, len = this._graphicsCache[i].length; j < len; j++) {\n                    var gp = this._graphicsCache[i][j];\n                    if (gp && gp != this.graphics) {\n                        GraphicsAni.recycle(gp);\n                    }\n                }\n                this._graphicsCache[i].length = 0;\n            }\n        }\n    }\n    play(nameOrIndex, loop, force = true, start = 0, end = 0, freshSkin = true, playAudio = true) {\n        this._playAudio = playAudio;\n        this._indexControl = false;\n        let index = -1;\n        var duration;\n        if (loop) {\n            duration = 2147483647;\n        }\n        else {\n            duration = 0;\n        }\n        if (typeof (nameOrIndex) == 'string') {\n            for (let i = 0, n = this._templet.getAnimationCount(); i < n; i++) {\n                let animation = this._templet.getAnimation(i);\n                if (animation && nameOrIndex == animation.name) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        else {\n            index = nameOrIndex;\n        }\n        if (index > -1 && index < this.getAnimNum()) {\n            this._aniClipIndex = index;\n            if (force || this._pause || this._currAniIndex != index) {\n                this._currAniIndex = index;\n                this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(index));\n                this._drawOrder = null;\n                this._eventIndex = 0;\n                this._player.play(index, this._player.playbackRate, duration, start, end);\n                if (freshSkin)\n                    this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex);\n                if (this._pause) {\n                    this._pause = false;\n                    this._lastTime = Browser.now();\n                    this.timer.frameLoop(1, this, this._update, null, true);\n                }\n                this._update();\n            }\n        }\n    }\n    stop() {\n        if (!this._pause) {\n            this._pause = true;\n            if (this._player) {\n                this._player.stop(true);\n            }\n            if (this._soundChannelArr.length > 0) {\n                this._onAniSoundStoped(true);\n            }\n            this.timer.clear(this, this._update);\n        }\n    }\n    playbackRate(value) {\n        if (this._player) {\n            this._player.playbackRate = value;\n        }\n    }\n    paused() {\n        if (!this._pause) {\n            this._pause = true;\n            if (this._player) {\n                this._player.paused = true;\n            }\n            if (this._soundChannelArr.length > 0) {\n                for (let len = this._soundChannelArr.length, i = 0; i < len; i++) {\n                    let channel = this._soundChannelArr[i];\n                    if (!channel.isStopped) {\n                        channel.pause();\n                    }\n                }\n            }\n            this.timer.clear(this, this._update);\n        }\n    }\n    resume() {\n        this._indexControl = false;\n        if (this._pause) {\n            this._pause = false;\n            if (this._player) {\n                this._player.paused = false;\n            }\n            if (this._soundChannelArr.length > 0) {\n                for (let len = this._soundChannelArr.length, i = 0; i < len; i++) {\n                    let channel = this._soundChannelArr[i];\n                    if (channel.audioBuffer) {\n                        channel.resume();\n                    }\n                }\n            }\n            this._lastTime = Browser.now();\n            this.timer.frameLoop(1, this, this._update, null, true);\n        }\n    }\n    _getGrahicsDataWithCache(aniIndex, frameIndex) {\n        return this._graphicsCache[aniIndex][frameIndex];\n    }\n    _setGrahicsDataWithCache(aniIndex, frameIndex, graphics) {\n        this._graphicsCache[aniIndex][frameIndex] = graphics;\n    }\n    reset() {\n        this._templet._removeReference();\n        this._templet = null;\n        this._player.offAll();\n        this._player = null;\n        this._curOriginalData = null;\n        this._boneMatrixArray.length = 0;\n        this._ikArr = null;\n        this._pathDic = null;\n        this._tfArr = null;\n        this._lastTime = 0;\n        this._currAniIndex = -1;\n        this._clipIndex = -1;\n        this._indexControl = false;\n        this._eventIndex = 0;\n        this._drawOrderIndex = 0;\n        this._drawOrder = null;\n        this._lastAniClipIndex = -1;\n        this._lastUpdateAniClipIndex = -1;\n        this._pause = true;\n        this.timer.clear(this, this._update);\n        if (this._soundChannelArr.length > 0)\n            this._onAniSoundStoped(true);\n    }\n    destroy(destroyChild = true) {\n        super.destroy(destroyChild);\n        if (this._templet)\n            this.reset();\n    }\n}\nIAniLib.Skeleton = Skeleton;\n","import { Matrix } from \"../../maths/Matrix\";\nexport class Transform {\n    constructor() {\n        this.skX = 0;\n        this.skY = 0;\n        this.scX = 1;\n        this.scY = 1;\n        this.x = 0;\n        this.y = 0;\n        this.skewX = 0;\n        this.skewY = 0;\n    }\n    initData(data) {\n        if (data.x != undefined) {\n            this.x = data.x;\n        }\n        if (data.y != undefined) {\n            this.y = data.y;\n        }\n        if (data.skX != undefined) {\n            this.skX = data.skX;\n        }\n        if (data.skY != undefined) {\n            this.skY = data.skY;\n        }\n        if (data.scX != undefined) {\n            this.scX = data.scX;\n        }\n        if (data.scY != undefined) {\n            this.scY = data.scY;\n        }\n    }\n    getMatrix() {\n        var tMatrix;\n        if (this.mMatrix) {\n            tMatrix = this.mMatrix;\n        }\n        else {\n            tMatrix = this.mMatrix = new Matrix();\n        }\n        tMatrix.identity();\n        tMatrix.scale(this.scX, this.scY);\n        if (this.skewX || this.skewY) {\n            this.skew(tMatrix, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180);\n        }\n        tMatrix.rotate(this.skX * Math.PI / 180);\n        tMatrix.translate(this.x, this.y);\n        return tMatrix;\n    }\n    skew(m, x, y) {\n        var sinX = Math.sin(y);\n        var cosX = Math.cos(y);\n        var sinY = Math.sin(x);\n        var cosY = Math.cos(x);\n        m.setTo(m.a * cosY - m.b * sinX, m.a * sinY + m.b * cosX, m.c * cosY - m.d * sinX, m.c * sinY + m.d * cosX, m.tx * cosY - m.ty * sinX, m.tx * sinY + m.ty * cosX);\n        return m;\n    }\n}\n","import { Transform } from \"./Transform\";\nimport { Sprite } from \"../../display/Sprite\";\nimport { Matrix } from \"../../maths/Matrix\";\nimport { ILaya } from \"../../../ILaya\";\nexport class Bone {\n    constructor() {\n        this.length = 10;\n        this.resultTransform = new Transform();\n        this.resultMatrix = new Matrix();\n        this.inheritScale = true;\n        this.inheritRotation = true;\n        this.d = -1;\n        this._children = [];\n    }\n    setTempMatrix(matrix) {\n        this._tempMatrix = matrix;\n        var i = 0, n = 0;\n        var tBone;\n        for (i = 0, n = this._children.length; i < n; i++) {\n            tBone = this._children[i];\n            tBone.setTempMatrix(this._tempMatrix);\n        }\n    }\n    update(pMatrix = null) {\n        this.rotation = this.transform.skX;\n        var tResultMatrix;\n        if (pMatrix) {\n            tResultMatrix = this.resultTransform.getMatrix();\n            Matrix.mul(tResultMatrix, pMatrix, this.resultMatrix);\n            this.resultRotation = this.rotation;\n        }\n        else {\n            this.resultRotation = this.rotation + this.parentBone.resultRotation;\n            if (this.parentBone) {\n                if (this.inheritRotation && this.inheritScale) {\n                    tResultMatrix = this.resultTransform.getMatrix();\n                    Matrix.mul(tResultMatrix, this.parentBone.resultMatrix, this.resultMatrix);\n                }\n                else {\n                    var parent = this.parentBone;\n                    var tAngle;\n                    var cos;\n                    var sin;\n                    var tParentMatrix = this.parentBone.resultMatrix;\n                    tResultMatrix = this.resultTransform.getMatrix();\n                    var worldX = tParentMatrix.a * tResultMatrix.tx + tParentMatrix.c * tResultMatrix.ty + tParentMatrix.tx;\n                    var worldY = tParentMatrix.b * tResultMatrix.tx + tParentMatrix.d * tResultMatrix.ty + tParentMatrix.ty;\n                    var tTestMatrix = new Matrix();\n                    if (this.inheritRotation) {\n                        tAngle = Math.atan2(parent.resultMatrix.b, parent.resultMatrix.a);\n                        cos = Math.cos(tAngle), sin = Math.sin(tAngle);\n                        tTestMatrix.setTo(cos, sin, -sin, cos, 0, 0);\n                        Matrix.mul(this._tempMatrix, tTestMatrix, Matrix.TEMP);\n                        Matrix.TEMP.copyTo(tTestMatrix);\n                        tResultMatrix = this.resultTransform.getMatrix();\n                        Matrix.mul(tResultMatrix, tTestMatrix, this.resultMatrix);\n                        if (this.resultTransform.scX * this.resultTransform.scY < 0) {\n                            this.resultMatrix.rotate(Math.PI * 0.5);\n                        }\n                        this.resultMatrix.tx = worldX;\n                        this.resultMatrix.ty = worldY;\n                    }\n                    else if (this.inheritScale) {\n                        tResultMatrix = this.resultTransform.getMatrix();\n                        Matrix.TEMP.identity();\n                        Matrix.TEMP.d = this.d;\n                        Matrix.mul(tResultMatrix, Matrix.TEMP, this.resultMatrix);\n                        this.resultMatrix.tx = worldX;\n                        this.resultMatrix.ty = worldY;\n                    }\n                    else {\n                        tResultMatrix = this.resultTransform.getMatrix();\n                        Matrix.TEMP.identity();\n                        Matrix.TEMP.d = this.d;\n                        Matrix.mul(tResultMatrix, Matrix.TEMP, this.resultMatrix);\n                        this.resultMatrix.tx = worldX;\n                        this.resultMatrix.ty = worldY;\n                    }\n                }\n            }\n            else {\n                tResultMatrix = this.resultTransform.getMatrix();\n                tResultMatrix.copyTo(this.resultMatrix);\n            }\n        }\n        var i = 0, n = 0;\n        var tBone;\n        for (i = 0, n = this._children.length; i < n; i++) {\n            tBone = this._children[i];\n            tBone.update();\n        }\n    }\n    updateChild() {\n        var i = 0, n = 0;\n        var tBone;\n        for (i = 0, n = this._children.length; i < n; i++) {\n            tBone = this._children[i];\n            tBone.update();\n        }\n    }\n    setRotation(rd) {\n        if (this._sprite) {\n            this._sprite.rotation = rd * 180 / Math.PI;\n        }\n    }\n    updateDraw(x, y) {\n        if (!Bone.ShowBones || Bone.ShowBones[this.name]) {\n            if (this._sprite) {\n                this._sprite.x = x + this.resultMatrix.tx;\n                this._sprite.y = y + this.resultMatrix.ty;\n            }\n            else {\n                this._sprite = new Sprite();\n                this._sprite.graphics.drawCircle(0, 0, 5, \"#ff0000\");\n                this._sprite.graphics.drawLine(0, 0, this.length, 0, \"#00ff00\");\n                this._sprite.graphics.fillText(this.name, 0, 0, \"20px Arial\", \"#00ff00\", \"center\");\n                ILaya.stage.addChild(this._sprite);\n                this._sprite.x = x + this.resultMatrix.tx;\n                this._sprite.y = y + this.resultMatrix.ty;\n            }\n        }\n        var i = 0, n = 0;\n        var tBone;\n        for (i = 0, n = this._children.length; i < n; i++) {\n            tBone = this._children[i];\n            tBone.updateDraw(x, y);\n        }\n    }\n    addChild(bone) {\n        this._children.push(bone);\n        bone.parentBone = this;\n    }\n    findBone(boneName) {\n        if (this.name == boneName) {\n            return this;\n        }\n        else {\n            var i, n;\n            var tBone;\n            var tResult;\n            for (i = 0, n = this._children.length; i < n; i++) {\n                tBone = this._children[i];\n                tResult = tBone.findBone(boneName);\n                if (tResult) {\n                    return tResult;\n                }\n            }\n        }\n        return null;\n    }\n    localToWorld(local) {\n        var localX = local[0];\n        var localY = local[1];\n        local[0] = localX * this.resultMatrix.a + localY * this.resultMatrix.c + this.resultMatrix.tx;\n        local[1] = localX * this.resultMatrix.b + localY * this.resultMatrix.d + this.resultMatrix.ty;\n    }\n}\nBone.ShowBones = {};\n","export class TfConstraintData {\n    constructor() {\n        this.boneIndexs = [];\n    }\n}\n","export class PathConstraintData {\n    constructor() {\n        this.bones = [];\n    }\n}\n","export class DeformAniData {\n    constructor() {\n        this.deformSlotDataList = [];\n    }\n}\n","export class DeformSlotData {\n    constructor() {\n        this.deformSlotDisplayList = [];\n    }\n}\n","export class DeformSlotDisplayData {\n    constructor() {\n        this.slotIndex = -1;\n        this.timeList = [];\n        this.vectices = [];\n        this.tweenKeyList = [];\n        this.frameIndex = 0;\n    }\n    binarySearch1(values, target) {\n        var low = 0;\n        var high = values.length - 2;\n        if (high == 0)\n            return 1;\n        var current = high >>> 1;\n        while (true) {\n            if (values[Math.floor(current + 1)] <= target)\n                low = current + 1;\n            else\n                high = current;\n            if (low == high)\n                return low + 1;\n            current = (low + high) >>> 1;\n        }\n        return 0;\n    }\n    apply(time, boneSlot, alpha = 1) {\n        time += 0.05;\n        if (this.timeList.length <= 0) {\n            return;\n        }\n        var i = 0;\n        var tTime = this.timeList[0];\n        if (time < tTime) {\n            return;\n        }\n        var tVertexCount = this.vectices[0].length;\n        var tVertices = [];\n        var tFrameIndex = this.binarySearch1(this.timeList, time);\n        this.frameIndex = tFrameIndex;\n        if (time >= this.timeList[this.timeList.length - 1]) {\n            var lastVertices = this.vectices[this.vectices.length - 1];\n            if (alpha < 1) {\n                for (i = 0; i < tVertexCount; i++) {\n                    tVertices[i] += (lastVertices[i] - tVertices[i]) * alpha;\n                }\n            }\n            else {\n                for (i = 0; i < tVertexCount; i++) {\n                    tVertices[i] = lastVertices[i];\n                }\n            }\n            this.deformData = tVertices;\n            return;\n        }\n        var tPrevVertices = this.vectices[this.frameIndex - 1];\n        var tNextVertices = this.vectices[this.frameIndex];\n        var tPreFrameTime = this.timeList[this.frameIndex - 1];\n        var tFrameTime = this.timeList[this.frameIndex];\n        if (this.tweenKeyList[tFrameIndex - 1]) {\n            alpha = (time - tPreFrameTime) / (tFrameTime - tPreFrameTime);\n        }\n        else {\n            alpha = 0;\n        }\n        var tPrev;\n        for (i = 0; i < tVertexCount; i++) {\n            tPrev = tPrevVertices[i];\n            tVertices[i] = tPrev + (tNextVertices[i] - tPrev) * alpha;\n        }\n        this.deformData = tVertices;\n    }\n}\n","export class DrawOrderData {\n    constructor() {\n        this.drawOrder = [];\n    }\n}\n","export class EventData {\n    constructor() {\n    }\n}\n","import { Utils } from \"../../utils/Utils\";\nexport class UVTools {\n    constructor() {\n    }\n    static getRelativeUV(bigUV, smallUV, rst = null) {\n        var startX = bigUV[0];\n        var width = bigUV[2] - bigUV[0];\n        var startY = bigUV[1];\n        var height = bigUV[5] - bigUV[1];\n        if (!rst)\n            rst = [];\n        rst.length = smallUV.length;\n        var i, len;\n        len = rst.length;\n        var dWidth = 1 / width;\n        var dHeight = 1 / height;\n        for (i = 0; i < len; i += 2) {\n            rst[i] = (smallUV[i] - startX) * dWidth;\n            rst[i + 1] = (smallUV[i + 1] - startY) * dHeight;\n        }\n        return rst;\n    }\n    static getAbsoluteUV(bigUV, smallUV, rst = null) {\n        if (bigUV[0] == 0 && bigUV[1] == 0 && bigUV[4] == 1 && bigUV[5] == 1) {\n            if (rst) {\n                Utils.copyArray(rst, smallUV);\n                return rst;\n            }\n            else {\n                return smallUV;\n            }\n        }\n        var startX = bigUV[0];\n        var width = bigUV[2] - bigUV[0];\n        var startY = bigUV[1];\n        var height = bigUV[5] - bigUV[1];\n        if (!rst)\n            rst = [];\n        rst.length = smallUV.length;\n        var i, len;\n        len = rst.length;\n        for (i = 0; i < len; i += 2) {\n            rst[i] = smallUV[i] * width + startX;\n            rst[i + 1] = smallUV[i + 1] * height + startY;\n        }\n        return rst;\n    }\n}\n","import { Rectangle } from \"../../../maths/Rectangle\";\nexport class MeshData {\n    constructor() {\n        this.uvs = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n        this.vertices = new Float32Array([0, 0, 100, 0, 100, 100, 0, 100]);\n        this.indexes = new Uint16Array([0, 1, 3, 3, 1, 2]);\n        this.useUvTransform = false;\n        this.canvasPadding = 1;\n    }\n    getBounds() {\n        return Rectangle._getWrapRec(this.vertices);\n    }\n}\n","import { MeshData } from \"./MeshData\";\nexport class SkinMeshForGraphic extends MeshData {\n    constructor() {\n        super();\n    }\n    init2(texture, ps, verticles, uvs) {\n        if (this.transform) {\n            this.transform = null;\n        }\n        var _ps = ps || [0, 1, 3, 3, 1, 2];\n        this.texture = texture;\n        this.indexes = new Uint16Array(_ps);\n        this.vertices = new Float32Array(verticles);\n        this.uvs = new Float32Array(uvs);\n    }\n}\n","import { UVTools } from \"./UVTools\";\nimport { SkinMeshForGraphic } from \"./canvasmesh/SkinMeshForGraphic\";\nimport { Matrix } from \"../../maths/Matrix\";\nimport { Utils } from \"../../utils/Utils\";\nexport class BoneSlot {\n    constructor() {\n        this.srcDisplayIndex = -1;\n        this.type = \"src\";\n        this.displayIndex = -1;\n        this.originalIndex = -1;\n        this._replaceDic = {};\n    }\n    showSlotData(slotData, freshIndex = true) {\n        this.currSlotData = slotData;\n        if (freshIndex)\n            this.displayIndex = this.srcDisplayIndex;\n        this.currDisplayData = null;\n        this.currTexture = null;\n    }\n    showDisplayByName(name) {\n        if (this.currSlotData) {\n            this.showDisplayByIndex(this.currSlotData.getDisplayByName(name));\n        }\n    }\n    replaceDisplayByName(tarName, newName) {\n        if (!this.currSlotData)\n            return;\n        var preIndex;\n        preIndex = this.currSlotData.getDisplayByName(tarName);\n        var newIndex;\n        newIndex = this.currSlotData.getDisplayByName(newName);\n        this.replaceDisplayByIndex(preIndex, newIndex);\n    }\n    replaceDisplayByIndex(tarIndex, newIndex) {\n        if (!this.currSlotData)\n            return;\n        this._replaceDic[tarIndex] = newIndex;\n        if (this.originalIndex == tarIndex) {\n            this.showDisplayByIndex(tarIndex);\n        }\n    }\n    showDisplayByIndex(index) {\n        this.originalIndex = index;\n        if (this._replaceDic[index] != null)\n            index = this._replaceDic[index];\n        if (this.currSlotData && index > -1 && index < this.currSlotData.displayArr.length) {\n            this.displayIndex = index;\n            this.currDisplayData = this.currSlotData.displayArr[index];\n            if (this.currDisplayData) {\n                var tName = this.currDisplayData.name;\n                this.currTexture = this.templet.getTexture(tName);\n                if (this.currTexture && this.currDisplayData.type == 0 && this.currDisplayData.uvs) {\n                    this.currTexture = this.currDisplayData.createTexture(this.currTexture);\n                }\n            }\n        }\n        else {\n            this.displayIndex = -1;\n            this.currDisplayData = null;\n            this.currTexture = null;\n        }\n    }\n    replaceSkin(_texture) {\n        this._diyTexture = _texture;\n        if (this._curDiyUV)\n            this._curDiyUV.length = 0;\n        if (this.currDisplayData && this._diyTexture == this.currDisplayData.texture) {\n            this._diyTexture = null;\n        }\n    }\n    setParentMatrix(parentMatrix) {\n        this._parentMatrix = parentMatrix;\n    }\n    static createSkinMesh() {\n        return new SkinMeshForGraphic();\n    }\n    static isSameArr(arrA, arrB) {\n        if (arrA.length != arrB.length)\n            return false;\n        var i, len;\n        len = arrA.length;\n        for (i = 0; i < len; i++) {\n            if (arrA[i] != arrB[i])\n                return false;\n        }\n        return true;\n    }\n    getSaveVerticle(tArr) {\n        if (BoneSlot.useSameMatrixAndVerticle && this._preGraphicVerticle && BoneSlot.isSameArr(tArr, this._preGraphicVerticle)) {\n            tArr = this._preGraphicVerticle;\n        }\n        else {\n            tArr = Utils.copyArray([], tArr);\n            this._preGraphicVerticle = tArr;\n        }\n        return tArr;\n    }\n    static isSameMatrix(mtA, mtB) {\n        return mtA.a == mtB.a && mtA.b == mtB.b && mtA.c == mtB.c && mtA.d == mtB.d && Math.abs(mtA.tx - mtB.tx) < 0.00001 && Math.abs(mtA.ty - mtB.ty) < 0.00001;\n    }\n    getSaveMatrix(tResultMatrix) {\n        if (BoneSlot.useSameMatrixAndVerticle && this._preGraphicMatrix && BoneSlot.isSameMatrix(tResultMatrix, this._preGraphicMatrix)) {\n            tResultMatrix = this._preGraphicMatrix;\n        }\n        else {\n            var newMatrix = tResultMatrix.clone();\n            tResultMatrix = newMatrix;\n            this._preGraphicMatrix = tResultMatrix;\n        }\n        return tResultMatrix;\n    }\n    draw(graphics, boneMatrixArray, noUseSave = false, alpha = 1) {\n        if ((this._diyTexture == null && this.currTexture == null) || this.currDisplayData == null) {\n            if (!(this.currDisplayData && this.currDisplayData.type == 3)) {\n                return;\n            }\n        }\n        var tTexture = this.currTexture;\n        if (this._diyTexture)\n            tTexture = this._diyTexture;\n        var tSkinSprite;\n        switch (this.currDisplayData.type) {\n            case 0:\n                if (graphics) {\n                    var tCurrentMatrix = this.getDisplayMatrix();\n                    if (this._parentMatrix) {\n                        var tRotateKey = false;\n                        if (tCurrentMatrix) {\n                            Matrix.mul(tCurrentMatrix, this._parentMatrix, Matrix.TEMP);\n                            var tResultMatrix;\n                            if (noUseSave) {\n                                if (this._resultMatrix == null)\n                                    this._resultMatrix = new Matrix();\n                                tResultMatrix = this._resultMatrix;\n                            }\n                            else {\n                                tResultMatrix = BoneSlot._tempResultMatrix;\n                            }\n                            if (this._diyTexture && this.currDisplayData.uvs) {\n                                _tempMatrix.identity();\n                                if (this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {\n                                    _tempMatrix.d = -1;\n                                }\n                                if (this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4]\n                                    && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5]) {\n                                    tRotateKey = true;\n                                    _tempMatrix.rotate(-Math.PI / 2);\n                                }\n                                Matrix.mul(_tempMatrix, Matrix.TEMP, tResultMatrix);\n                            }\n                            else {\n                                Matrix.TEMP.copyTo(tResultMatrix);\n                            }\n                            if (!noUseSave) {\n                                tResultMatrix = this.getSaveMatrix(tResultMatrix);\n                            }\n                            tResultMatrix._checkTransform();\n                            if (tRotateKey) {\n                                graphics.drawTexture(tTexture, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, tResultMatrix, alpha);\n                            }\n                            else {\n                                graphics.drawTexture(tTexture, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, tResultMatrix, alpha);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 1:\n                if (noUseSave) {\n                    if (this._skinSprite == null) {\n                        this._skinSprite = BoneSlot.createSkinMesh();\n                    }\n                    tSkinSprite = this._skinSprite;\n                }\n                else {\n                    tSkinSprite = BoneSlot.createSkinMesh();\n                }\n                if (tSkinSprite == null) {\n                    return;\n                }\n                var tIBArray;\n                if (this.currDisplayData.bones == null) {\n                    var tVertices = this.currDisplayData.weights;\n                    if (this.deformData) {\n                        tVertices = this.deformData;\n                    }\n                    var tUVs;\n                    if (this._diyTexture) {\n                        if (!this._curDiyUV) {\n                            this._curDiyUV = [];\n                        }\n                        if (this._curDiyUV.length == 0) {\n                            this._curDiyUV = UVTools.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);\n                            this._curDiyUV = UVTools.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV);\n                        }\n                        tUVs = this._curDiyUV;\n                    }\n                    else {\n                        tUVs = this.currDisplayData.uvs;\n                    }\n                    this._mVerticleArr = tVertices;\n                    var tTriangleNum = this.currDisplayData.triangles.length / 3;\n                    tIBArray = this.currDisplayData.triangles;\n                    if (this.deformData) {\n                        if (!noUseSave) {\n                            this._mVerticleArr = this.getSaveVerticle(this._mVerticleArr);\n                        }\n                    }\n                    tSkinSprite.init2(tTexture, tIBArray, this._mVerticleArr, tUVs);\n                    var tCurrentMatrix2 = this.getDisplayMatrix();\n                    if (this._parentMatrix) {\n                        if (tCurrentMatrix2) {\n                            Matrix.mul(tCurrentMatrix2, this._parentMatrix, Matrix.TEMP);\n                            var tResultMatrix2;\n                            if (noUseSave) {\n                                if (this._resultMatrix == null)\n                                    this._resultMatrix = new Matrix();\n                                tResultMatrix2 = this._resultMatrix;\n                            }\n                            else {\n                                tResultMatrix2 = BoneSlot._tempResultMatrix;\n                            }\n                            Matrix.TEMP.copyTo(tResultMatrix2);\n                            if (!noUseSave) {\n                                tResultMatrix2 = this.getSaveMatrix(tResultMatrix2);\n                            }\n                            tSkinSprite.transform = tResultMatrix2;\n                        }\n                    }\n                }\n                else {\n                    this.skinMesh(boneMatrixArray, tSkinSprite);\n                }\n                graphics.drawSkin(tSkinSprite, alpha);\n                break;\n            case 2:\n                if (noUseSave) {\n                    if (this._skinSprite == null) {\n                        this._skinSprite = BoneSlot.createSkinMesh();\n                    }\n                    tSkinSprite = this._skinSprite;\n                }\n                else {\n                    tSkinSprite = BoneSlot.createSkinMesh();\n                }\n                if (tSkinSprite == null) {\n                    return;\n                }\n                this.skinMesh(boneMatrixArray, tSkinSprite);\n                graphics.drawSkin(tSkinSprite, alpha);\n                break;\n            case 3:\n                break;\n        }\n    }\n    skinMesh(boneMatrixArray, skinSprite) {\n        var tTexture = this.currTexture;\n        var tBones = this.currDisplayData.bones;\n        var tUvs;\n        if (this._diyTexture) {\n            tTexture = this._diyTexture;\n            if (!this._curDiyUV) {\n                this._curDiyUV = [];\n            }\n            if (this._curDiyUV.length == 0) {\n                this._curDiyUV = UVTools.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV);\n                this._curDiyUV = UVTools.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV);\n            }\n            tUvs = this._curDiyUV;\n        }\n        else {\n            tUvs = this.currDisplayData.uvs;\n        }\n        var tWeights = this.currDisplayData.weights;\n        var tTriangles = this.currDisplayData.triangles;\n        var tIBArray;\n        var tRx = 0;\n        var tRy = 0;\n        var nn = 0;\n        var tMatrix;\n        var tX;\n        var tY;\n        var tB = 0;\n        var tWeight = 0;\n        var tVertices;\n        var i = 0, j = 0, n = 0;\n        _tempVerticleArr.length = 0;\n        tVertices = _tempVerticleArr;\n        if (this.deformData && this.deformData.length > 0) {\n            var f = 0;\n            for (i = 0, n = tBones.length; i < n;) {\n                nn = tBones[i++] + i;\n                tRx = 0, tRy = 0;\n                for (; i < nn; i++) {\n                    tMatrix = boneMatrixArray[tBones[i]];\n                    tX = tWeights[tB] + this.deformData[f++];\n                    tY = tWeights[tB + 1] + this.deformData[f++];\n                    tWeight = tWeights[tB + 2];\n                    tRx += (tX * tMatrix.a + tY * tMatrix.c + tMatrix.tx) * tWeight;\n                    tRy += (tX * tMatrix.b + tY * tMatrix.d + tMatrix.ty) * tWeight;\n                    tB += 3;\n                }\n                tVertices.push(tRx, tRy);\n            }\n        }\n        else {\n            for (i = 0, n = tBones.length; i < n;) {\n                nn = tBones[i++] + i;\n                tRx = 0, tRy = 0;\n                for (; i < nn; i++) {\n                    tMatrix = boneMatrixArray[tBones[i]];\n                    tX = tWeights[tB];\n                    tY = tWeights[tB + 1];\n                    tWeight = tWeights[tB + 2];\n                    tRx += (tX * tMatrix.a + tY * tMatrix.c + tMatrix.tx) * tWeight;\n                    tRy += (tX * tMatrix.b + tY * tMatrix.d + tMatrix.ty) * tWeight;\n                    tB += 3;\n                }\n                tVertices.push(tRx, tRy);\n            }\n        }\n        this._mVerticleArr = tVertices;\n        tIBArray = tTriangles;\n        this._mVerticleArr = this.getSaveVerticle(this._mVerticleArr);\n        skinSprite.init2(tTexture, tIBArray, this._mVerticleArr, tUvs);\n    }\n    drawBonePoint(graphics) {\n        if (graphics && this._parentMatrix) {\n            graphics.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, \"#ff0000\");\n        }\n    }\n    getDisplayMatrix() {\n        if (this.currDisplayData) {\n            return this.currDisplayData.transform.getMatrix();\n        }\n        return null;\n    }\n    getMatrix() {\n        return this._resultMatrix;\n    }\n    copy() {\n        var tBoneSlot = new BoneSlot();\n        tBoneSlot.type = \"copy\";\n        tBoneSlot.name = this.name;\n        tBoneSlot.attachmentName = this.attachmentName;\n        tBoneSlot.srcDisplayIndex = this.srcDisplayIndex;\n        tBoneSlot.parent = this.parent;\n        tBoneSlot.displayIndex = this.displayIndex;\n        tBoneSlot.templet = this.templet;\n        tBoneSlot.currSlotData = this.currSlotData;\n        tBoneSlot.currTexture = this.currTexture;\n        tBoneSlot.currDisplayData = this.currDisplayData;\n        return tBoneSlot;\n    }\n}\nBoneSlot._tempResultMatrix = new Matrix();\nBoneSlot.useSameMatrixAndVerticle = true;\nconst _tempVerticleArr = [];\nconst _tempMatrix = new Matrix();\n","export class SkinData {\n    constructor() {\n        this.slotArr = [];\n    }\n}\n","import { Texture } from \"../../resource/Texture\";\nexport class SkinSlotDisplayData {\n    createTexture(currTexture) {\n        if (this.texture)\n            return this.texture;\n        this.texture = new Texture(currTexture.bitmap, this.uvs);\n        if (this.uvs[0] > this.uvs[4]\n            && this.uvs[1] > this.uvs[5]) {\n            this.texture.width = currTexture.height;\n            this.texture.height = currTexture.width;\n            this.texture.offsetX = -currTexture.offsetX;\n            this.texture.offsetY = -currTexture.offsetY;\n            this.texture.sourceWidth = currTexture.sourceHeight;\n            this.texture.sourceHeight = currTexture.sourceWidth;\n        }\n        else {\n            this.texture.width = currTexture.width;\n            this.texture.height = currTexture.height;\n            this.texture.offsetX = -currTexture.offsetX;\n            this.texture.offsetY = -currTexture.offsetY;\n            this.texture.sourceWidth = currTexture.sourceWidth;\n            this.texture.sourceHeight = currTexture.sourceHeight;\n        }\n        return this.texture;\n    }\n    destory() {\n        if (this.texture)\n            this.texture.destroy();\n    }\n}\n","export class SlotData {\n    constructor() {\n        this.displayArr = [];\n    }\n    getDisplayByName(name) {\n        var tDisplay;\n        for (var i = 0, n = this.displayArr.length; i < n; i++) {\n            tDisplay = this.displayArr[i];\n            if (tDisplay.attachmentName == name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}\n","export class IkConstraintData {\n    constructor() {\n        this.boneNames = [];\n        this.bendDirection = 1;\n        this.mix = 1;\n        this.isSpine = true;\n        this.targetBoneIndex = -1;\n        this.boneIndexs = [];\n    }\n}\n","import { Bone } from \"./Bone\";\nimport { TfConstraintData } from \"./TfConstraintData\";\nimport { PathConstraintData } from \"./PathConstraintData\";\nimport { DeformAniData } from \"./DeformAniData\";\nimport { DeformSlotData } from \"./DeformSlotData\";\nimport { DeformSlotDisplayData } from \"./DeformSlotDisplayData\";\nimport { DrawOrderData } from \"./DrawOrderData\";\nimport { EventData } from \"./EventData\";\nimport { AnimationTemplet } from \"../AnimationTemplet\";\nimport { BoneSlot } from \"./BoneSlot\";\nimport { SkinData } from \"./SkinData\";\nimport { SkinSlotDisplayData } from \"./SkinSlotDisplayData\";\nimport { SlotData } from \"./SlotData\";\nimport { Transform } from \"./Transform\";\nimport { IkConstraintData } from \"./IkConstraintData\";\nimport { Texture } from \"../../resource/Texture\";\nimport { Matrix } from \"../../maths/Matrix\";\nimport { Byte } from \"../../utils/Byte\";\nimport { IAniLib } from \"../AniLibPack\";\nimport { Skeleton } from \"./Skeleton\";\nimport { AnimationParser01 } from \"../AnimationParser01\";\nconst LAYA_ANIMATION_160_VISION = \"LAYAANIMATION:1.6.0\";\nconst LAYA_ANIMATION_VISION = \"LAYAANIMATION:1.7.0\";\nexport class Templet extends AnimationTemplet {\n    constructor() {\n        super(...arguments);\n        this.rate = 30;\n        this._graphicsCache = [];\n        this.srcBoneMatrixArr = [];\n        this.ikArr = [];\n        this.tfArr = [];\n        this.pathArr = [];\n        this.boneSlotDic = {};\n        this.bindBoneBoneSlotDic = {};\n        this.boneSlotArray = [];\n        this.skinDataArray = [];\n        this.skinDic = {};\n        this.subTextureDic = {};\n        this.isParseFail = false;\n        this.drawOrderAniArr = [];\n        this.eventAniArr = [];\n        this.attachmentNames = null;\n        this.deformAniArr = [];\n        this.skinSlotDisplayDataArr = [];\n        this._isParseAudio = false;\n        this.aniSectionDic = {};\n        this.mBoneArr = [];\n    }\n    buildArmature(aniMode = 0) {\n        let sk = new Skeleton(aniMode);\n        sk.templet = this;\n        return sk;\n    }\n    _parse(texture, createURL, skeletonData) {\n        this._path = createURL.slice(0, createURL.lastIndexOf(\"/\")) + \"/\";\n        texture._addReference();\n        this._mainTexture = texture;\n        var reader = new Byte(skeletonData);\n        this._aniVersion = reader.readUTFString();\n        AnimationParser01.parse(this, reader);\n        if (this._aniVersion === LAYA_ANIMATION_VISION) {\n            this._isParseAudio = true;\n        }\n        else if (this._aniVersion != LAYA_ANIMATION_160_VISION) {\n            console.log(\"[Error] 版本不一致，请使用IDE版本配套的重新导出\" + this._aniVersion + \"->\" + LAYA_ANIMATION_VISION);\n        }\n        for (let i = 0, n = this.getAnimationCount(); i < n; i++) {\n            this._graphicsCache.push([]);\n        }\n        var tByte = new Byte(this.getPublicExtData());\n        var tX = 0, tY = 0, tWidth = 0, tHeight = 0;\n        var tFrameX = 0, tFrameY = 0, tFrameWidth = 0, tFrameHeight = 0;\n        var tTempleData = 0;\n        var tTextureLen = tByte.getInt32();\n        var tTextureName = tByte.readUTFString();\n        var tTextureNameArr = tTextureName.split(\"\\n\");\n        var tSrcTexturePath;\n        for (let i = 0; i < tTextureLen; i++) {\n            tSrcTexturePath = this._path + tTextureNameArr[i * 2];\n            tTextureName = tTextureNameArr[i * 2 + 1];\n            tX = tByte.getFloat32();\n            tY = tByte.getFloat32();\n            tWidth = tByte.getFloat32();\n            tHeight = tByte.getFloat32();\n            tTempleData = tByte.getFloat32();\n            tFrameX = isNaN(tTempleData) ? 0 : tTempleData;\n            tTempleData = tByte.getFloat32();\n            tFrameY = isNaN(tTempleData) ? 0 : tTempleData;\n            tTempleData = tByte.getFloat32();\n            tFrameWidth = isNaN(tTempleData) ? tWidth : tTempleData;\n            tTempleData = tByte.getFloat32();\n            tFrameHeight = isNaN(tTempleData) ? tHeight : tTempleData;\n            this.subTextureDic[tTextureName] = Texture.create(this._mainTexture, tX, tY, tWidth, tHeight, -tFrameX, -tFrameY, tFrameWidth, tFrameHeight);\n        }\n        var isSpine;\n        isSpine = this._aniClassName != \"Dragon\";\n        var tAniCount = tByte.getUint16();\n        var tSectionArr;\n        for (let i = 0; i < tAniCount; i++) {\n            tSectionArr = [];\n            tSectionArr.push(tByte.getUint16());\n            tSectionArr.push(tByte.getUint16());\n            tSectionArr.push(tByte.getUint16());\n            tSectionArr.push(tByte.getUint16());\n            this.aniSectionDic[i] = tSectionArr;\n        }\n        var tBone;\n        var tParentBone;\n        var tName;\n        var tParentName;\n        var tBoneLen = tByte.getInt16();\n        var tBoneDic = {};\n        var tRootBone;\n        for (let i = 0; i < tBoneLen; i++) {\n            tBone = new Bone();\n            if (i == 0) {\n                tRootBone = tBone;\n            }\n            else {\n                tBone.root = tRootBone;\n            }\n            tBone.d = isSpine ? -1 : 1;\n            tName = tByte.readUTFString();\n            tParentName = tByte.readUTFString();\n            tBone.length = tByte.getFloat32();\n            if (tByte.getByte() == 1) {\n                tBone.inheritRotation = false;\n            }\n            if (tByte.getByte() == 1) {\n                tBone.inheritScale = false;\n            }\n            tBone.name = tName;\n            if (tParentName) {\n                tParentBone = tBoneDic[tParentName];\n                if (tParentBone) {\n                    tParentBone.addChild(tBone);\n                }\n                else {\n                    this.mRootBone = tBone;\n                }\n            }\n            tBoneDic[tName] = tBone;\n            this.mBoneArr.push(tBone);\n        }\n        this.tMatrixDataLen = tByte.getUint16();\n        var tLen = tByte.getUint16();\n        var boneLength = Math.floor(tLen / this.tMatrixDataLen);\n        var tResultTransform;\n        var tMatrixArray = this.srcBoneMatrixArr;\n        for (let i = 0; i < boneLength; i++) {\n            tResultTransform = new Transform();\n            tResultTransform.scX = tByte.getFloat32();\n            tResultTransform.skX = tByte.getFloat32();\n            tResultTransform.skY = tByte.getFloat32();\n            tResultTransform.scY = tByte.getFloat32();\n            tResultTransform.x = tByte.getFloat32();\n            tResultTransform.y = tByte.getFloat32();\n            if (this.tMatrixDataLen === 8) {\n                tResultTransform.skewX = tByte.getFloat32();\n                tResultTransform.skewY = tByte.getFloat32();\n            }\n            tMatrixArray.push(tResultTransform);\n            tBone = this.mBoneArr[i];\n            tBone.transform = tResultTransform;\n        }\n        var tIkConstraintData;\n        var tIkLen = tByte.getUint16();\n        var tIkBoneLen;\n        for (let i = 0; i < tIkLen; i++) {\n            tIkConstraintData = new IkConstraintData();\n            tIkBoneLen = tByte.getUint16();\n            for (let j = 0; j < tIkBoneLen; j++) {\n                tIkConstraintData.boneNames.push(tByte.readUTFString());\n                tIkConstraintData.boneIndexs.push(tByte.getInt16());\n            }\n            tIkConstraintData.name = tByte.readUTFString();\n            tIkConstraintData.targetBoneName = tByte.readUTFString();\n            tIkConstraintData.targetBoneIndex = tByte.getInt16();\n            tIkConstraintData.bendDirection = tByte.getFloat32();\n            tIkConstraintData.mix = tByte.getFloat32();\n            tIkConstraintData.isSpine = isSpine;\n            this.ikArr.push(tIkConstraintData);\n        }\n        var tTfConstraintData;\n        var tTfLen = tByte.getUint16();\n        var tTfBoneLen;\n        for (let i = 0; i < tTfLen; i++) {\n            tTfConstraintData = new TfConstraintData();\n            tTfBoneLen = tByte.getUint16();\n            for (let j = 0; j < tTfBoneLen; j++) {\n                tTfConstraintData.boneIndexs.push(tByte.getInt16());\n            }\n            tTfConstraintData.name = tByte.getUTFString();\n            tTfConstraintData.targetIndex = tByte.getInt16();\n            tTfConstraintData.rotateMix = tByte.getFloat32();\n            tTfConstraintData.translateMix = tByte.getFloat32();\n            tTfConstraintData.scaleMix = tByte.getFloat32();\n            tTfConstraintData.shearMix = tByte.getFloat32();\n            tTfConstraintData.offsetRotation = tByte.getFloat32();\n            tTfConstraintData.offsetX = tByte.getFloat32();\n            tTfConstraintData.offsetY = tByte.getFloat32();\n            tTfConstraintData.offsetScaleX = tByte.getFloat32();\n            tTfConstraintData.offsetScaleY = tByte.getFloat32();\n            tTfConstraintData.offsetShearY = tByte.getFloat32();\n            this.tfArr.push(tTfConstraintData);\n        }\n        var tPathConstraintData;\n        var tPathLen = tByte.getUint16();\n        var tPathBoneLen;\n        for (let i = 0; i < tPathLen; i++) {\n            tPathConstraintData = new PathConstraintData();\n            tPathConstraintData.name = tByte.readUTFString();\n            tPathBoneLen = tByte.getUint16();\n            for (let j = 0; j < tPathBoneLen; j++) {\n                tPathConstraintData.bones.push(tByte.getInt16());\n            }\n            tPathConstraintData.target = tByte.readUTFString();\n            tPathConstraintData.positionMode = tByte.readUTFString();\n            tPathConstraintData.spacingMode = tByte.readUTFString();\n            tPathConstraintData.rotateMode = tByte.readUTFString();\n            tPathConstraintData.offsetRotation = tByte.getFloat32();\n            tPathConstraintData.position = tByte.getFloat32();\n            tPathConstraintData.spacing = tByte.getFloat32();\n            tPathConstraintData.rotateMix = tByte.getFloat32();\n            tPathConstraintData.translateMix = tByte.getFloat32();\n            this.pathArr.push(tPathConstraintData);\n        }\n        var tDeformSlotLen;\n        var tDeformSlotDisplayLen;\n        var tDSlotIndex;\n        var tDAttachment;\n        var tDeformTimeLen;\n        var tDTime;\n        var tDeformVecticesLen;\n        var tDeformAniData;\n        var tDeformSlotData;\n        var tDeformSlotDisplayData;\n        var tDeformVectices;\n        var tDeformAniLen = tByte.getInt16();\n        for (let i = 0; i < tDeformAniLen; i++) {\n            var tDeformSkinLen = tByte.getUint8();\n            var tSkinDic = {};\n            this.deformAniArr.push(tSkinDic);\n            for (let f = 0; f < tDeformSkinLen; f++) {\n                tDeformAniData = new DeformAniData();\n                tDeformAniData.skinName = tByte.getUTFString();\n                tSkinDic[tDeformAniData.skinName] = tDeformAniData;\n                tDeformSlotLen = tByte.getInt16();\n                for (let j = 0; j < tDeformSlotLen; j++) {\n                    tDeformSlotData = new DeformSlotData();\n                    tDeformAniData.deformSlotDataList.push(tDeformSlotData);\n                    tDeformSlotDisplayLen = tByte.getInt16();\n                    for (let k = 0; k < tDeformSlotDisplayLen; k++) {\n                        tDeformSlotDisplayData = new DeformSlotDisplayData();\n                        tDeformSlotData.deformSlotDisplayList.push(tDeformSlotDisplayData);\n                        tDeformSlotDisplayData.slotIndex = tDSlotIndex = tByte.getInt16();\n                        tDeformSlotDisplayData.attachment = tDAttachment = tByte.getUTFString();\n                        tDeformTimeLen = tByte.getInt16();\n                        for (let l = 0; l < tDeformTimeLen; l++) {\n                            if (tByte.getByte() == 1) {\n                                tDeformSlotDisplayData.tweenKeyList.push(true);\n                            }\n                            else {\n                                tDeformSlotDisplayData.tweenKeyList.push(false);\n                            }\n                            tDTime = tByte.getFloat32();\n                            tDeformSlotDisplayData.timeList.push(tDTime);\n                            tDeformVectices = [];\n                            tDeformSlotDisplayData.vectices.push(tDeformVectices);\n                            tDeformVecticesLen = tByte.getInt16();\n                            for (let n = 0; n < tDeformVecticesLen; n++) {\n                                tDeformVectices.push(tByte.getFloat32());\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        var tDrawOrderArr;\n        var tDrawOrderAniLen = tByte.getInt16();\n        var tDrawOrderLen;\n        var tDrawOrderData;\n        var tDoLen;\n        for (let i = 0; i < tDrawOrderAniLen; i++) {\n            tDrawOrderLen = tByte.getInt16();\n            tDrawOrderArr = [];\n            for (let j = 0; j < tDrawOrderLen; j++) {\n                tDrawOrderData = new DrawOrderData();\n                tDrawOrderData.time = tByte.getFloat32();\n                tDoLen = tByte.getInt16();\n                for (let k = 0; k < tDoLen; k++) {\n                    tDrawOrderData.drawOrder.push(tByte.getInt16());\n                }\n                tDrawOrderArr.push(tDrawOrderData);\n            }\n            this.drawOrderAniArr.push(tDrawOrderArr);\n        }\n        var tEventArr;\n        var tEventAniLen = tByte.getInt16();\n        var tEventLen;\n        var tEventData;\n        for (let i = 0; i < tEventAniLen; i++) {\n            tEventLen = tByte.getInt16();\n            tEventArr = [];\n            for (let j = 0; j < tEventLen; j++) {\n                tEventData = new EventData();\n                tEventData.name = tByte.getUTFString();\n                if (this._isParseAudio)\n                    tEventData.audioValue = tByte.getUTFString();\n                tEventData.intValue = tByte.getInt32();\n                tEventData.floatValue = tByte.getFloat32();\n                tEventData.stringValue = tByte.getUTFString();\n                tEventData.time = tByte.getFloat32();\n                tEventArr.push(tEventData);\n            }\n            this.eventAniArr.push(tEventArr);\n        }\n        var tAttachmentLen = tByte.getInt16();\n        if (tAttachmentLen > 0) {\n            this.attachmentNames = [];\n            for (let i = 0; i < tAttachmentLen; i++) {\n                this.attachmentNames.push(tByte.getUTFString());\n            }\n        }\n        var tBoneSlotLen = tByte.getInt16();\n        var tDBBoneSlot;\n        var tDBBoneSlotArr;\n        for (let i = 0; i < tBoneSlotLen; i++) {\n            tDBBoneSlot = new BoneSlot();\n            tDBBoneSlot.name = tByte.readUTFString();\n            tDBBoneSlot.parent = tByte.readUTFString();\n            tDBBoneSlot.attachmentName = tByte.readUTFString();\n            tDBBoneSlot.srcDisplayIndex = tDBBoneSlot.displayIndex = tByte.getInt16();\n            tDBBoneSlot.templet = this;\n            this.boneSlotDic[tDBBoneSlot.name] = tDBBoneSlot;\n            tDBBoneSlotArr = this.bindBoneBoneSlotDic[tDBBoneSlot.parent];\n            if (tDBBoneSlotArr == null) {\n                this.bindBoneBoneSlotDic[tDBBoneSlot.parent] = tDBBoneSlotArr = [];\n            }\n            tDBBoneSlotArr.push(tDBBoneSlot);\n            this.boneSlotArray.push(tDBBoneSlot);\n        }\n        var tNameString = tByte.readUTFString();\n        var tNameArray = tNameString.split(\"\\n\");\n        var tNameStartIndex = 0;\n        var tSkinDataLen = tByte.getUint8();\n        var tSkinData, tSlotData, tDisplayData;\n        var tSlotDataLen, tDisplayDataLen;\n        var tUvLen, tWeightLen, tTriangleLen, tVerticeLen, tLengthLen;\n        for (let i = 0; i < tSkinDataLen; i++) {\n            tSkinData = new SkinData();\n            tSkinData.name = tNameArray[tNameStartIndex++];\n            tSlotDataLen = tByte.getUint8();\n            for (let j = 0; j < tSlotDataLen; j++) {\n                tSlotData = new SlotData();\n                tSlotData.name = tNameArray[tNameStartIndex++];\n                tDBBoneSlot = this.boneSlotDic[tSlotData.name];\n                tDisplayDataLen = tByte.getUint8();\n                for (let k = 0; k < tDisplayDataLen; k++) {\n                    tDisplayData = new SkinSlotDisplayData();\n                    this.skinSlotDisplayDataArr.push(tDisplayData);\n                    tDisplayData.name = tNameArray[tNameStartIndex++];\n                    tDisplayData.attachmentName = tNameArray[tNameStartIndex++];\n                    tDisplayData.transform = new Transform();\n                    tDisplayData.transform.scX = tByte.getFloat32();\n                    tDisplayData.transform.skX = tByte.getFloat32();\n                    tDisplayData.transform.skY = tByte.getFloat32();\n                    tDisplayData.transform.scY = tByte.getFloat32();\n                    tDisplayData.transform.x = tByte.getFloat32();\n                    tDisplayData.transform.y = tByte.getFloat32();\n                    tSlotData.displayArr.push(tDisplayData);\n                    tDisplayData.width = tByte.getFloat32();\n                    tDisplayData.height = tByte.getFloat32();\n                    tDisplayData.type = tByte.getUint8();\n                    tDisplayData.verLen = tByte.getUint16();\n                    tBoneLen = tByte.getUint16();\n                    if (tBoneLen > 0) {\n                        tDisplayData.bones = [];\n                        for (let l = 0; l < tBoneLen; l++) {\n                            let tBoneId = tByte.getUint16();\n                            tDisplayData.bones.push(tBoneId);\n                        }\n                    }\n                    tUvLen = tByte.getUint16();\n                    if (tUvLen > 0) {\n                        tDisplayData.uvs = [];\n                        for (let l = 0; l < tUvLen; l++) {\n                            tDisplayData.uvs.push(tByte.getFloat32());\n                        }\n                    }\n                    tWeightLen = tByte.getUint16();\n                    if (tWeightLen > 0) {\n                        tDisplayData.weights = [];\n                        for (let l = 0; l < tWeightLen; l++) {\n                            tDisplayData.weights.push(tByte.getFloat32());\n                        }\n                    }\n                    tTriangleLen = tByte.getUint16();\n                    if (tTriangleLen > 0) {\n                        tDisplayData.triangles = [];\n                        for (let l = 0; l < tTriangleLen; l++) {\n                            tDisplayData.triangles.push(tByte.getUint16());\n                        }\n                    }\n                    tVerticeLen = tByte.getUint16();\n                    if (tVerticeLen > 0) {\n                        tDisplayData.vertices = [];\n                        for (let l = 0; l < tVerticeLen; l++) {\n                            tDisplayData.vertices.push(tByte.getFloat32());\n                        }\n                    }\n                    tLengthLen = tByte.getUint16();\n                    if (tLengthLen > 0) {\n                        tDisplayData.lengths = [];\n                        for (let l = 0; l < tLengthLen; l++) {\n                            tDisplayData.lengths.push(tByte.getFloat32());\n                        }\n                    }\n                }\n                tSkinData.slotArr.push(tSlotData);\n            }\n            this.skinDic[tSkinData.name] = tSkinData;\n            this.skinDataArray.push(tSkinData);\n        }\n        var tReverse = tByte.getUint8();\n        if (tReverse == 1) {\n            this.yReverseMatrix = new Matrix(1, 0, 0, -1, 0, 0);\n            if (tRootBone) {\n                tRootBone.setTempMatrix(this.yReverseMatrix);\n            }\n        }\n        else {\n            if (tRootBone) {\n                tRootBone.setTempMatrix(new Matrix());\n            }\n        }\n        this.showSkinByIndex(this.boneSlotDic, 0);\n    }\n    getTexture(name) {\n        let tTexture = this.subTextureDic[name];\n        if (!tTexture) {\n            tTexture = this.subTextureDic[name.substring(0, name.length - 1)];\n        }\n        if (tTexture == null) {\n            return this._mainTexture;\n        }\n        return tTexture;\n    }\n    showSkinByIndex(boneSlotDic, skinIndex, freshDisplayIndex = true) {\n        if (skinIndex < 0 && skinIndex >= this.skinDataArray.length)\n            return false;\n        var i, n;\n        var tBoneSlot;\n        var tSlotData;\n        var tSkinData = this.skinDataArray[skinIndex];\n        if (tSkinData) {\n            for (i = 0, n = tSkinData.slotArr.length; i < n; i++) {\n                tSlotData = tSkinData.slotArr[i];\n                if (tSlotData) {\n                    tBoneSlot = boneSlotDic[tSlotData.name];\n                    if (tBoneSlot) {\n                        tBoneSlot.showSlotData(tSlotData, freshDisplayIndex);\n                        if (freshDisplayIndex && tBoneSlot.attachmentName != \"undefined\" && tBoneSlot.attachmentName != \"null\") {\n                            tBoneSlot.showDisplayByName(tBoneSlot.attachmentName);\n                        }\n                        else {\n                            tBoneSlot.showDisplayByIndex(tBoneSlot.displayIndex);\n                        }\n                    }\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getSkinIndexByName(skinName) {\n        for (let i = 0, n = this.skinDataArray.length; i < n; i++) {\n            let tSkinData = this.skinDataArray[i];\n            if (tSkinData.name == skinName) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    getAniNameByIndex(index) {\n        var tAni = this.getAnimation(index);\n        if (tAni)\n            return tAni.name;\n        return null;\n    }\n    getGrahicsDataWithCache(aniIndex, frameIndex) {\n        if (this._graphicsCache[aniIndex] && this._graphicsCache[aniIndex][frameIndex]) {\n            return this._graphicsCache[aniIndex][frameIndex];\n        }\n        return null;\n    }\n    setGrahicsDataWithCache(aniIndex, frameIndex, graphics) {\n        this._graphicsCache[aniIndex][frameIndex] = graphics;\n    }\n    deleteAniData(aniIndex) {\n        if (this._anis[aniIndex]) {\n            var tAniDataO = this._anis[aniIndex];\n            tAniDataO.bone3DMap = null;\n            tAniDataO.nodes = null;\n        }\n    }\n    _disposeResource() {\n        var _a;\n        for (let k in this.subTextureDic) {\n            (_a = this.subTextureDic[k]) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        this._mainTexture._removeReference();\n        var tSkinSlotDisplayData;\n        for (var i = 0, n = this.skinSlotDisplayDataArr.length; i < n; i++) {\n            tSkinSlotDisplayData = this.skinSlotDisplayDataArr[i];\n            tSkinSlotDisplayData.destory();\n        }\n        this.skinSlotDisplayDataArr.length = 0;\n    }\n}\nIAniLib.Templet = Templet;\n","import { Loader } from \"../net/Loader\";\nimport { Utils } from \"../utils/Utils\";\nimport { Templet } from \"./bone/Templet\";\nclass TempletLoader {\n    load(task) {\n        return Promise.all([\n            task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options),\n            task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback())\n        ]).then(res => {\n            if (!res[0] || !res[1])\n                return null;\n            let templet = new Templet();\n            templet._parse(res[1], task.url, res[0]);\n            return templet;\n        });\n    }\n}\nLoader.registerLoader([\"sk\"], TempletLoader);\n","import { ClassUtils } from \"../utils/ClassUtils\";\nimport { Skeleton } from \"./bone/Skeleton\";\nimport \"./TempletLoader\";\nlet c = ClassUtils.regClass;\nc(\"Skeleton\", Skeleton);\n","import { Sprite } from \"../../display/Sprite\";\nimport { Byte } from \"../../utils/Byte\";\nimport { Event } from \"../../events/Event\";\nimport { ILaya } from \"../../../ILaya\";\nimport { Matrix } from \"../../maths/Matrix\";\nimport { Loader } from \"../../net/Loader\";\nexport class MovieClip extends Sprite {\n    constructor(parentMovieClip = null) {\n        super();\n        this._start = 0;\n        this._Pos = 0;\n        this._ended = true;\n        this._loadedImage = {};\n        this._endFrame = -1;\n        this.interval = 30;\n        this._ids = {};\n        this._idOfSprite = [];\n        this._reset();\n        this._playing = false;\n        this._parentMovieClip = parentMovieClip;\n        if (!parentMovieClip) {\n            this._movieClipList = [this];\n            this._isRoot = true;\n            this.on(Event.DISPLAY, this, this._onDisplay);\n            this.on(Event.UNDISPLAY, this, this._onDisplay);\n        }\n        else {\n            this._isRoot = false;\n            this._movieClipList = parentMovieClip._movieClipList;\n            this._movieClipList.push(this);\n        }\n    }\n    destroy(destroyChild = true) {\n        this._clear();\n        super.destroy(destroyChild);\n    }\n    _onDisplay() {\n        if (this.displayedInStage)\n            this.timer.loop(this.interval, this, this.updates, null, true);\n        else\n            this.timer.clear(this, this.updates);\n    }\n    updates() {\n        if (this._parentMovieClip)\n            return;\n        var i, len;\n        len = this._movieClipList.length;\n        for (i = 0; i < len; i++) {\n            this._movieClipList[i] && this._movieClipList[i]._update();\n        }\n    }\n    get index() {\n        return this._playIndex;\n    }\n    set index(value) {\n        this._playIndex = value;\n        if (this._data)\n            this._displayFrame(this._playIndex);\n        if (this._labels && this._labels[value])\n            this.event(Event.LABEL, this._labels[value]);\n    }\n    addLabel(label, index) {\n        if (!this._labels)\n            this._labels = {};\n        this._labels[index] = label;\n    }\n    removeLabel(label) {\n        if (!label)\n            this._labels = null;\n        else if (!this._labels) {\n            for (var name in this._labels) {\n                if (this._labels[name] === label) {\n                    delete this._labels[name];\n                    break;\n                }\n            }\n        }\n    }\n    get count() {\n        return this._count;\n    }\n    get playing() {\n        return this._playing;\n    }\n    _update() {\n        if (!this._data)\n            return;\n        if (!this._playing)\n            return;\n        this._playIndex++;\n        if (this._playIndex >= this._count) {\n            if (!this.loop) {\n                this._playIndex--;\n                this.stop();\n                return;\n            }\n            this._playIndex = 0;\n        }\n        this._parseFrame(this._playIndex);\n        if (this._labels && this._labels[this._playIndex])\n            this.event(Event.LABEL, this._labels[this._playIndex]);\n        if (this._endFrame != -1 && this._endFrame == this._playIndex) {\n            this._endFrame = -1;\n            if (this._completeHandler != null) {\n                var handler = this._completeHandler;\n                this._completeHandler = null;\n                handler.run();\n            }\n            this.stop();\n        }\n    }\n    stop() {\n        this._playing = false;\n    }\n    gotoAndStop(index) {\n        this.index = index;\n        this.stop();\n    }\n    _clear() {\n        this.stop();\n        this._idOfSprite.length = 0;\n        if (!this._parentMovieClip) {\n            this.timer.clear(this, this.updates);\n            var i, len;\n            len = this._movieClipList.length;\n            for (i = 0; i < len; i++) {\n                if (this._movieClipList[i] != this)\n                    this._movieClipList[i]._clear();\n            }\n            this._movieClipList.length = 0;\n        }\n        var key;\n        for (key in this._loadedImage) {\n            let obj = this._loadedImage[key];\n            if (obj) {\n                ILaya.Loader.clearRes(key, obj);\n                this._loadedImage[key] = false;\n            }\n        }\n        this.removeChildren();\n        this.graphics = null;\n        this._parentMovieClip = null;\n    }\n    play(index = 0, loop = true) {\n        this.loop = loop;\n        this._playing = true;\n        if (this._data)\n            this._displayFrame(index);\n    }\n    _displayFrame(frameIndex = -1) {\n        if (frameIndex != -1) {\n            if (this._curIndex > frameIndex)\n                this._reset();\n            this._parseFrame(frameIndex);\n        }\n    }\n    _reset(rm = true) {\n        if (rm && this._curIndex != 1)\n            this.removeChildren();\n        this._preIndex = this._curIndex = -1;\n        this._Pos = this._start;\n    }\n    _parseFrame(frameIndex) {\n        var mc, sp, key, type, tPos, ttype, ifAdd = false;\n        var _idOfSprite = this._idOfSprite, _data = this._data, eStr;\n        if (this._ended)\n            this._reset();\n        _data.pos = this._Pos;\n        this._ended = false;\n        this._playIndex = frameIndex;\n        if (this._curIndex > frameIndex && frameIndex < this._preIndex) {\n            this._reset(true);\n            _data.pos = this._Pos;\n        }\n        while ((this._curIndex <= frameIndex) && (!this._ended)) {\n            type = _data.getUint16();\n            switch (type) {\n                case 12:\n                    key = _data.getUint16();\n                    tPos = this._ids[_data.getUint16()];\n                    this._Pos = _data.pos;\n                    _data.pos = tPos;\n                    if ((ttype = _data.getUint8()) == 0) {\n                        var pid = _data.getUint16();\n                        sp = _idOfSprite[key];\n                        if (!sp) {\n                            sp = _idOfSprite[key] = new Sprite();\n                            var spp = new Sprite();\n                            spp.loadImage(this.basePath + pid + \".png\");\n                            this._loadedImage[this.basePath + pid + \".png\"] = true;\n                            sp.addChild(spp);\n                            spp.size(_data.getFloat32(), _data.getFloat32());\n                            var mat = _data._getMatrix();\n                            spp.transform = mat;\n                        }\n                        sp.alpha = 1;\n                    }\n                    else if (ttype == 1) {\n                        mc = _idOfSprite[key];\n                        if (!mc) {\n                            _idOfSprite[key] = mc = new MovieClip(this);\n                            mc.interval = this.interval;\n                            mc._ids = this._ids;\n                            mc.basePath = this.basePath;\n                            mc._setData(_data, tPos);\n                            mc._initState();\n                            mc.play(0);\n                        }\n                        mc.alpha = 1;\n                    }\n                    _data.pos = this._Pos;\n                    break;\n                case 3:\n                    var node = _idOfSprite[_data.getUint16()];\n                    if (node) {\n                        this.addChild(node);\n                        node.zOrder = _data.getUint16();\n                        ifAdd = true;\n                    }\n                    break;\n                case 4:\n                    node = _idOfSprite[_data.getUint16()];\n                    node && node.removeSelf();\n                    break;\n                case 5:\n                    _idOfSprite[_data.getUint16()][MovieClip._ValueList[_data.getUint16()]] = (_data.getFloat32());\n                    break;\n                case 6:\n                    _idOfSprite[_data.getUint16()].visible = (_data.getUint8() > 0);\n                    break;\n                case 7:\n                    sp = _idOfSprite[_data.getUint16()];\n                    var mt = sp.transform || Matrix.create();\n                    mt.setTo(_data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32(), _data.getFloat32());\n                    sp.transform = mt;\n                    break;\n                case 8:\n                    _idOfSprite[_data.getUint16()].setPos(_data.getFloat32(), _data.getFloat32());\n                    break;\n                case 9:\n                    _idOfSprite[_data.getUint16()].setSize(_data.getFloat32(), _data.getFloat32());\n                    break;\n                case 10:\n                    _idOfSprite[_data.getUint16()].alpha = _data.getFloat32();\n                    break;\n                case 11:\n                    _idOfSprite[_data.getUint16()].setScale(_data.getFloat32(), _data.getFloat32());\n                    break;\n                case 98:\n                    eStr = _data.getString();\n                    this.event(eStr);\n                    if (eStr == \"stop\")\n                        this.stop();\n                    break;\n                case 99:\n                    this._curIndex = _data.getUint16();\n                    ifAdd && this.updateZOrder();\n                    break;\n                case 100:\n                    this._count = this._curIndex + 1;\n                    this._ended = true;\n                    if (this._playing) {\n                        this.event(Event.FRAME);\n                        this.event(Event.END);\n                        this.event(Event.COMPLETE);\n                    }\n                    this._reset(false);\n                    break;\n            }\n        }\n        if (this._playing && !this._ended)\n            this.event(Event.FRAME);\n        this._Pos = _data.pos;\n    }\n    _setData(data, start) {\n        this._data = data;\n        this._start = start + 3;\n    }\n    get source() {\n        return this._source;\n    }\n    set source(value) {\n        this.load(value);\n    }\n    load(url, atlas = false, atlasPath = null) {\n        this.stop();\n        this._clear();\n        this._movieClipList = [this];\n        this._source = url;\n        if (atlas)\n            atlasPath = atlasPath ? atlasPath : url.split(\".swf\")[0] + \".json\";\n        ILaya.loader.load(atlasPath ? [url, atlasPath] : [url], Loader.BUFFER).then(res => {\n            var _a;\n            if (!res) {\n                this.event(Event.ERROR, \"file not find\");\n                return;\n            }\n            let basePath = atlas ? (_a = res[1]) === null || _a === void 0 ? void 0 : _a.dir : url.split(\".swf\")[0] + \"/image/\";\n            this._initData(new Byte(res[0].data), basePath);\n        });\n    }\n    _initState() {\n        this._reset();\n        this._ended = false;\n        var preState = this._playing;\n        this._playing = false;\n        this._curIndex = 0;\n        while (!this._ended)\n            this._parseFrame(++this._curIndex);\n        this._playing = preState;\n    }\n    _initData(data, basePath) {\n        this.basePath = basePath;\n        let len = data.getUint16();\n        for (let i = 0; i < len; i++)\n            this._ids[data.getInt16()] = data.getInt32();\n        this.interval = 1000 / data.getUint16();\n        this._setData(data, this._ids[32767]);\n        this._initState();\n        this.play(0);\n        this.event(Event.READY);\n        if (!this._parentMovieClip)\n            this.timer.loop(this.interval, this, this.updates, null, true);\n    }\n    playTo(start, end, complete = null) {\n        this._completeHandler = complete;\n        this._endFrame = end;\n        this.play(start, false);\n    }\n}\nMovieClip._ValueList = [\"x\", \"y\", \"width\", \"height\", \"scaleX\", \"scaleY\", \"rotation\", \"alpha\"];\n"],"names":["Byte","EventDispatcher","Stat","Event","Resource","MathUtil","Bezier","Graphics","Matrix","Sprite","ILaya","_tempMatrix","LayaEnv","Handler","SoundManager","Browser","Utils","Rectangle","Texture","Loader","ClassUtils"],"mappings":"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"}