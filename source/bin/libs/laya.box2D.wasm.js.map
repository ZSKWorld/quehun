{"version":3,"file":"laya.box2D.wasm.js","sources":["../../bin/tsc/layaAir/laya/physics/factory/physics2DwasmFactory.js"],"sourcesContent":["import { Physics2D } from \"../Physics2D\";\nimport { Laya } from \"../../../Laya\";\nimport { Ebox2DType, EPhysics2DJoint, EPhysics2DShape } from \"./IPhysics2DFactory\";\nconst b2_maxFloat = 1E+37;\nexport class physics2DwasmFactory {\n    constructor() {\n        this.worldMap = new Map();\n        this.worldCount = 0;\n    }\n    get box2d() {\n        return this._box2d;\n    }\n    createPhyVec2(x, y) {\n        return new this.box2d.b2Vec2(x, y);\n    }\n    createPhyFromLayaVec2(world, x, y) {\n        return new this.box2d.b2Vec2(this.convertLayaValueToPhysics(world, x), this.convertLayaValueToPhysics(world, y));\n    }\n    convertLayaValueToPhysics(world, value) {\n        let _rePixelRatio = 1 / world._pixelRatio;\n        value = value * _rePixelRatio;\n        return value;\n    }\n    convertPhysicsValueToLaya(world, value) {\n        let _pixelRatio = world._pixelRatio;\n        value = value * _pixelRatio;\n        return value;\n    }\n    createBox2DDraw(world, flag) {\n        let jsDraw = new this.box2d.JSDraw();\n        jsDraw.SetFlags(flag);\n        world.SetDebugDraw(jsDraw);\n        return jsDraw;\n    }\n    shiftOrigin(world, newOrigin) {\n        if (!world)\n            console.warn(\"shiftOrigin world is null\");\n        world.ShiftOrigin({ x: newOrigin.x, y: newOrigin.y });\n    }\n    appendFlags(jsDraw, flags) {\n        if (jsDraw)\n            jsDraw.AppendFlags(flags);\n    }\n    clearFlags(jsDraw, flags) {\n        if (jsDraw)\n            jsDraw.ClearFlags(flags);\n    }\n    initialize() {\n        return window.Box2D().then((box2d) => {\n            this._box2d = box2d;\n            this._box2d.b2LinearStiffness = this.b2LinearStiffness;\n            this._tempVe21 = new this.box2d.b2Vec2();\n            this._tempVe22 = new this.box2d.b2Vec2();\n            return Promise.resolve();\n        });\n    }\n    createWorld(worldDef) {\n        let gravity = this.createPhyVec2(worldDef.gravity.x, worldDef.gravity.y);\n        let world = new this._box2d.b2World(gravity);\n        world.destroyed = false;\n        return world;\n    }\n    allowWorldSleep(world, allowSleep) {\n        world.SetAllowSleeping(allowSleep);\n    }\n    clearForces(world) {\n        world.ClearForces();\n    }\n    QueryAABB(world, jsquerycallback, bounds) {\n        world.QueryAABB(jsquerycallback, bounds);\n    }\n    RayCast(world, jsraycastcallback, startPoint, endPoint) {\n        this._tempVe21.x = this.convertLayaValueToPhysics(world, startPoint.x);\n        this._tempVe21.y = this.convertLayaValueToPhysics(world, startPoint.y);\n        this._tempVe22.x = this.convertLayaValueToPhysics(world, endPoint.x);\n        this._tempVe22.y = this.convertLayaValueToPhysics(world, endPoint.y);\n        world.RayCast(jsraycastcallback, this._tempVe21, this._tempVe22);\n    }\n    shapeCast() {\n    }\n    getBodyList(world) {\n        let bodyList = world.GetBodyList();\n        return bodyList;\n    }\n    getBodyCount(world) {\n        return world.GetBodyCount();\n    }\n    getJointList(world) {\n        let jointList = world.GetJointList();\n        return jointList;\n    }\n    getJointCount(world) {\n        return world.GetJointCount();\n    }\n    getContactList(world) {\n        let contactList = world.GetContactList();\n        return contactList;\n    }\n    getContactCount(world) {\n        return world.GetContactCount();\n    }\n    start() {\n    }\n    destroyWorld(world) {\n        if (world) {\n            if (this.getBodyCount(world) != 0) {\n                console.warn(\"There's still have body in box2DWorld, can not destroy\");\n                return;\n            }\n            if (this.getJointCount(world) != 0) {\n                console.warn(\"There's still have joint in box2DWorld, can not destroy\");\n                return;\n            }\n            this.box2d.destroy(world);\n            world.destroyed = true;\n        }\n    }\n    update(delta) {\n        for (let i = 0; i <= Physics2D.I._factory.worldCount; i++) {\n            let world = this.worldMap.get(i);\n            if (!world)\n                continue;\n            let bodyCount = this.getBodyCount(world.box2DWorld);\n            if (bodyCount <= 0)\n                continue;\n            let velocityIterations = world.getVelocityIterations();\n            let positionIterations = world.getPositionIterations();\n            world.box2DWorld.Step(delta, velocityIterations, positionIterations);\n            if (world.enableDebugDraw) {\n                world.box2DWorld.DebugDraw();\n            }\n            world.sendEvent();\n        }\n    }\n    createJointDef(world, type, def) {\n        if (!world)\n            console.warn(\"createJointDef world is null\");\n        var jointDef;\n        switch (type) {\n            case EPhysics2DJoint.DistanceJoint:\n                jointDef = new this.box2d.b2DistanceJointDef();\n                jointDef.bodyA = def.bodyA;\n                jointDef.bodyB = def.bodyB;\n                jointDef.localAnchorA.Set(this.convertLayaValueToPhysics(world, def.localAnchorA.x), this.convertLayaValueToPhysics(world, def.localAnchorA.y));\n                jointDef.localAnchorB.Set(this.convertLayaValueToPhysics(world, def.localAnchorB.x), this.convertLayaValueToPhysics(world, def.localAnchorB.y));\n                this.b2LinearStiffness(jointDef, def.frequency, def.dampingRatio, jointDef.bodyA, jointDef.bodyB);\n                jointDef.set_collideConnected(def.collideConnected);\n                if (def.length > 0) {\n                    jointDef.length = this.convertLayaValueToPhysics(world, def.length);\n                }\n                else {\n                    var p1 = jointDef.bodyA.GetWorldPoint(jointDef.localAnchorA);\n                    let data = { x: p1.x, y: p1.y };\n                    var p2 = jointDef.bodyB.GetWorldPoint(jointDef.localAnchorB);\n                    jointDef.length = this.getVec2Length(data, p2);\n                }\n                if (def.maxLength > 0)\n                    jointDef.maxLength = this.convertLayaValueToPhysics(world, def.maxLength);\n                else\n                    jointDef.maxLength = b2_maxFloat;\n                if (def.minLength > 0)\n                    jointDef.minLength = this.convertLayaValueToPhysics(world, def.minLength);\n                else\n                    jointDef.minLength = 0;\n                break;\n            case EPhysics2DJoint.RevoluteJoint:\n                jointDef = new this.box2d.b2RevoluteJointDef();\n                let revoluteAnchorVec = this.createPhyFromLayaVec2(world, def.anchor.x, def.anchor.y);\n                jointDef.Initialize(def.bodyA, def.bodyB, revoluteAnchorVec);\n                jointDef.enableMotor = def.enableMotor;\n                jointDef.motorSpeed = def.motorSpeed;\n                jointDef.maxMotorTorque = def.maxMotorTorque;\n                jointDef.enableLimit = def.enableLimit;\n                jointDef.lowerAngle = def.lowerAngle;\n                jointDef.upperAngle = def.upperAngle;\n                jointDef.collideConnected = def.collideConnected;\n                break;\n            case EPhysics2DJoint.GearJoint:\n                jointDef = new this.box2d.b2GearJointDef();\n                jointDef.bodyA = def.bodyA;\n                jointDef.bodyB = def.bodyB;\n                jointDef.joint1 = def.joint1;\n                jointDef.joint2 = def.joint2;\n                jointDef.ratio = def.ratio;\n                jointDef.collideConnected = def.collideConnected;\n                break;\n            case EPhysics2DJoint.PulleyJoint:\n                jointDef = new this.box2d.b2PulleyJointDef();\n                let groundVecA = this.createPhyFromLayaVec2(world, def.groundAnchorA.x, def.groundAnchorA.y);\n                let groundVecB = this.createPhyFromLayaVec2(world, def.groundAnchorB.x, def.groundAnchorB.y);\n                let anchorVecA = this.createPhyFromLayaVec2(world, def.localAnchorA.x, def.localAnchorA.y);\n                let anchorVecB = this.createPhyFromLayaVec2(world, def.localAnchorB.x, def.localAnchorB.y);\n                jointDef.Initialize(def.bodyA, def.bodyB, groundVecA, groundVecB, anchorVecA, anchorVecB, def.ratio);\n                jointDef.collideConnected = def.collideConnected;\n                break;\n            case EPhysics2DJoint.WheelJoint:\n                jointDef = new this.box2d.b2WheelJointDef();\n                let anchorVec = this.createPhyFromLayaVec2(world, def.anchor.x, def.anchor.y);\n                let wheelAxis = this.createPhyVec2(def.axis.x, def.axis.y);\n                jointDef.Initialize(def.bodyA, def.bodyB, anchorVec, wheelAxis);\n                jointDef.enableMotor = def.enableMotor;\n                jointDef.motorSpeed = def.motorSpeed;\n                jointDef.maxMotorTorque = def.maxMotorTorque;\n                this.b2LinearStiffness(jointDef, def.frequency, def.dampingRatio, jointDef.bodyA, jointDef.bodyB);\n                jointDef.collideConnected = def.collideConnected;\n                jointDef.enableLimit = def.enableLimit;\n                jointDef.lowerTranslation = this.convertLayaValueToPhysics(world, def.lowerTranslation);\n                jointDef.upperTranslation = this.convertLayaValueToPhysics(world, def.upperTranslation);\n                break;\n            case EPhysics2DJoint.WeldJoint:\n                jointDef = new this.box2d.b2WeldJointDef();\n                let weldAnchorVec = this.createPhyFromLayaVec2(world, def.anchor.x, def.anchor.y);\n                jointDef.Initialize(def.bodyA, def.bodyB, weldAnchorVec);\n                this.b2AngularStiffness(jointDef, def.frequency, def.dampingRatio, def.bodyA, def.bodyB);\n                jointDef.collideConnected = def.collideConnected;\n                break;\n            case EPhysics2DJoint.MouseJoint:\n                jointDef = new this.box2d.b2MouseJointDef();\n                jointDef.bodyA = def.bodyA;\n                jointDef.bodyB = def.bodyB;\n                jointDef.target = this.createPhyFromLayaVec2(world, def.target.x, def.target.y);\n                jointDef.maxForce = def.maxForce * def.bodyB.GetMass();\n                jointDef.collideConnected = true;\n                this.b2LinearStiffness(jointDef, def.frequency, def.dampingRatio, def.bodyA, def.bodyB);\n                break;\n            case EPhysics2DJoint.MotorJoint:\n                jointDef = new this.box2d.b2MotorJointDef();\n                jointDef.Initialize(def.bodyA, def.bodyB);\n                jointDef.linearOffset = this.createPhyFromLayaVec2(world, def.linearOffset.x, def.linearOffset.y);\n                jointDef.angularOffset = def.angularOffset;\n                jointDef.maxForce = def.maxForce;\n                jointDef.maxTorque = def.maxTorque;\n                jointDef.correctionFactor = def.correctionFactor;\n                jointDef.collideConnected = def.collideConnected;\n                break;\n            case EPhysics2DJoint.PrismaticJoint:\n                jointDef = new this.box2d.b2PrismaticJointDef();\n                let prismaticAnchorVec = this.createPhyFromLayaVec2(world, def.anchor.x, def.anchor.y);\n                let axis = this.createPhyVec2(def.axis.x, def.axis.y);\n                jointDef.Initialize(def.bodyA, def.bodyB, prismaticAnchorVec, axis);\n                jointDef.enableMotor = def.enableMotor;\n                jointDef.motorSpeed = def.motorSpeed;\n                jointDef.maxMotorForce = def.maxMotorForce;\n                jointDef.enableLimit = def.enableLimit;\n                jointDef.lowerTranslation = this.convertLayaValueToPhysics(world, def.lowerTranslation);\n                jointDef.upperTranslation = this.convertLayaValueToPhysics(world, def.upperTranslation);\n                jointDef.collideConnected = def.collideConnected;\n                break;\n            default:\n                break;\n        }\n        return jointDef;\n    }\n    createJoint(world, type, def) {\n        if (!world)\n            console.warn(\"createJoint world is null\");\n        let joint;\n        switch (type) {\n            case EPhysics2DJoint.DistanceJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2DistanceJoint);\n                break;\n            case EPhysics2DJoint.RevoluteJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2RevoluteJoint);\n                break;\n            case EPhysics2DJoint.GearJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2GearJoint);\n                break;\n            case EPhysics2DJoint.PulleyJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2PulleyJoint);\n                break;\n            case EPhysics2DJoint.WheelJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2WheelJoint);\n                break;\n            case EPhysics2DJoint.WeldJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2WeldJoint);\n                break;\n            case EPhysics2DJoint.MouseJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2MouseJoint);\n                break;\n            case EPhysics2DJoint.MotorJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2MotorJoint);\n                break;\n            case EPhysics2DJoint.PrismaticJoint:\n                joint = this._createBox2DJoint(world, def, this._box2d.b2PrismaticJoint);\n                break;\n            default:\n                break;\n        }\n        joint.bodyA = def.bodyA;\n        joint.bodyB = def.bodyB;\n        return joint;\n    }\n    removeJoint(world, joint) {\n        if (joint && world && !world.destroyed && !joint.bodyA.destroyed && !joint.bodyB.destroyed)\n            world.DestroyJoint(joint);\n    }\n    _createBox2DJoint(world, def, cls) {\n        if (!world)\n            console.warn(\"createJoint world is null\");\n        let joint = world.CreateJoint(def);\n        if (cls != null) {\n            joint = this.castObject(joint, cls);\n        }\n        joint.m_userData = {};\n        joint.world = world;\n        return joint;\n    }\n    setJoint_userData(joint, data) {\n    }\n    getJoint_userData(joint) {\n        return joint.GetUserData();\n    }\n    getJoint_userData_destroy(joint) {\n        return joint.GetUserData().pointer == -1;\n    }\n    set_Joint_EnableMotor(joint, enableMotor) {\n        joint.EnableMotor(enableMotor);\n    }\n    set_Joint_SetMotorSpeed(joint, motorSpeed) {\n        joint.SetMotorSpeed(motorSpeed);\n    }\n    set_Joint_SetMaxMotorTorque(joint, maxTorque) {\n        joint.SetMaxMotorTorque(maxTorque);\n    }\n    set_Joint_EnableLimit(joint, enableLimit) {\n        joint.EnableLimit(enableLimit);\n    }\n    set_Joint_SetLimits(joint, lowerAngle, upperAngle) {\n        joint.SetLimits(lowerAngle, upperAngle);\n    }\n    set_Joint_frequencyAndDampingRatio(joint, frequency, dampingRatio, isdamping) {\n        let out = {};\n        this.box2d.b2AngularStiffness(out, frequency, dampingRatio, joint.GetBodyA(), joint.GetBodyB());\n        if (!isdamping) {\n            joint.SetStiffness(out.stiffness);\n        }\n        joint.SetDamping(out.damping);\n    }\n    set_DistanceJoint_length(joint, length) {\n        let world = joint.world;\n        joint.SetLength(this.convertLayaValueToPhysics(world, (length)));\n    }\n    get_DistanceJoint_length(joint) {\n        let world = joint.world;\n        let len = joint.GetLength();\n        this.convertPhysicsValueToLaya(world, len);\n        return len;\n    }\n    set_DistanceJoint_MaxLength(joint, length) {\n        let world = joint.world;\n        joint.SetMaxLength(this.convertLayaValueToPhysics(world, (length)));\n    }\n    set_DistanceJoint_MinLength(joint, length) {\n        let world = joint.world;\n        joint.SetMinLength(this.convertLayaValueToPhysics(world, length));\n    }\n    set_DistanceJointStiffnessDamping(joint, stiffness, damping) {\n        let out = {};\n        let bodyA = joint.GetBodyA();\n        let bodyB = joint.GetBodyB();\n        this.box2d.b2LinearStiffness(out, stiffness, damping, bodyA, bodyB);\n        joint.SetStiffness(out.stiffness);\n        joint.SetDamping(out.damping);\n    }\n    set_GearJoint_SetRatio(joint, radio) {\n        joint.SetRatio(radio);\n    }\n    set_MouseJoint_target(joint, x, y) {\n        let world = joint.world;\n        this._tempVe21.x = this.convertLayaValueToPhysics(world, x);\n        this._tempVe21.y = this.convertLayaValueToPhysics(world, y);\n        joint.SetTarget(this._tempVe21);\n    }\n    set_MouseJoint_frequencyAndDampingRatio(Joint, frequency, dampingRatio) {\n        this.set_DistanceJointStiffnessDamping(Joint, frequency, dampingRatio);\n    }\n    set_MotorJoint_linearOffset(joint, x, y) {\n        let world = joint.world;\n        joint.SetLinearOffset(this.createPhyFromLayaVec2(world, x, y));\n    }\n    set_MotorJoint_SetAngularOffset(joint, angular) {\n        joint.SetAngularOffset(angular);\n    }\n    set_MotorJoint_SetMaxForce(joint, maxForce) {\n        joint.SetMaxForce(maxForce);\n    }\n    set_MotorJoint_SetMaxTorque(joint, maxTorque) {\n        joint.SetMaxTorque(maxTorque);\n    }\n    set_MotorJoint_SetCorrectionFactor(joint, correctionFactor) {\n        joint.SetCorrectionFactor(correctionFactor);\n    }\n    get_joint_recationForce(joint) {\n        let force = joint.GetReactionForce(60);\n        return force;\n    }\n    get_joint_reactionTorque(joint) {\n        let torque = joint.GetReactionTorque(60);\n        return torque;\n    }\n    isValidJoint(joint) {\n        let isConnected = joint.GetCollideConnected();\n        return isConnected;\n    }\n    createShapeDef(world, shapeDef, filter) {\n        let def = new this.box2d.b2FixtureDef();\n        def.density = shapeDef.density;\n        def.friction = shapeDef.friction;\n        def.isSensor = shapeDef.isSensor;\n        def.restitution = shapeDef.restitution;\n        def.restitutionThreshold = shapeDef.restitutionThreshold;\n        filter.groupIndex = shapeDef.filter.group;\n        filter.categoryBits = shapeDef.filter.category;\n        filter.maskBits = shapeDef.filter.mask;\n        def.filter = filter;\n        switch (shapeDef.shapeType) {\n            case EPhysics2DShape.BoxShape:\n            case EPhysics2DShape.PolygonShape:\n                let polygonShape = new this.box2d.b2PolygonShape();\n                def.set_shape(polygonShape);\n                break;\n            case EPhysics2DShape.ChainShape:\n                let chainShape = new this.box2d.b2ChainShape();\n                def.set_shape(chainShape);\n                break;\n            case EPhysics2DShape.CircleShape:\n                let circleShape = new this.box2d.b2CircleShape();\n                def.set_shape(circleShape);\n                break;\n            case EPhysics2DShape.EdgeShape:\n                let edgeShape = new this.box2d.b2EdgeShape();\n                def.set_shape(edgeShape);\n                break;\n        }\n        def._shape = this.get_fixtureshape(def.shape, shapeDef.shapeType);\n        def._shape.world = world;\n        def.world = world;\n        return def;\n    }\n    getShapeByDef(shapeDef, shapeType) {\n        let world = shapeDef.world;\n        let shape = this.get_fixtureshape(shapeDef.shape, shapeType);\n        shape.world = world;\n        return shape;\n    }\n    createFilter() {\n        return new this._box2d.b2Filter();\n    }\n    createShape(world, body, shapeType, shapdeDef) {\n        let data = body.CreateFixture(shapdeDef);\n        shapdeDef.world = world;\n        shapdeDef.shapeType = shapeType;\n        data = this.castObject(data, this.box2d.b2Fixture);\n        data.world = world;\n        data.shape = this.get_fixtureshape(data.GetShape(), shapeType);\n        data.shape.world = world;\n        data.filter = data.GetFilterData();\n        return data;\n    }\n    set_collider_SetAsBox(shape, width, height, pos, scaleX, scaleY) {\n        let world = shape.world;\n        width = this.convertLayaValueToPhysics(world, width * scaleX);\n        height = this.convertLayaValueToPhysics(world, height * scaleY);\n        let centroid = shape.m_centroid;\n        centroid.x = this.convertLayaValueToPhysics(world, pos.x * scaleX);\n        centroid.y = this.convertLayaValueToPhysics(world, pos.y * scaleY);\n        shape.SetAsBox(width, height, centroid, 0);\n    }\n    set_ChainShape_data(shape, x, y, arr, loop, scaleX, scaleY) {\n        let world = shape.world;\n        let len = arr.length;\n        shape.Clear();\n        var ptr_wrapped = this.createVec2Pointer(world, arr, x, y, scaleX, scaleY);\n        if (loop) {\n            shape.CreateLoop(ptr_wrapped, len >> 1);\n        }\n        else {\n            shape.CreateChain(ptr_wrapped, len >> 1);\n        }\n        this._box2d._free(ptr_wrapped.ptr);\n    }\n    set_CircleShape_radius(shape, radius, scale) {\n        let world = shape.world;\n        shape.m_radius = this.convertLayaValueToPhysics(world, radius * scale);\n    }\n    set_CircleShape_pos(shape, x, y, scale) {\n        let world = shape.world;\n        shape.m_p.Set(this.convertLayaValueToPhysics(world, x * scale), this.convertLayaValueToPhysics(world, y * scale));\n    }\n    set_EdgeShape_data(shape, x, y, arr, scaleX, scaleY) {\n        let world = shape.world;\n        let len = arr.length;\n        var ps = [];\n        for (var i = 0, n = len; i < n; i += 2) {\n            ps.push(this.createPhyFromLayaVec2(world, (x + arr[i]) * scaleX, (y + arr[i + 1]) * scaleY));\n        }\n        shape.SetTwoSided(ps[0], ps[1]);\n    }\n    set_PolygonShape_data(shape, x, y, arr, scaleX, scaleY) {\n        let world = shape.world;\n        let ptr_wrapped = this.createVec2Pointer(world, arr, x, y, scaleX, scaleY);\n        shape.Set(ptr_wrapped, arr.length / 2);\n        this._box2d._free(ptr_wrapped.ptr);\n    }\n    destroyShape(world, body, shape) {\n        body.DestroyFixture(shape);\n    }\n    set_shapeDef_GroupIndex(def, groupIndex) {\n        def.filter.groupIndex = groupIndex;\n    }\n    set_shapeDef_CategoryBits(def, categoryBits) {\n        def.filter.categoryBits = categoryBits;\n    }\n    set_shapeDef_maskBits(def, maskbits) {\n        def.filter.maskBits = maskbits;\n    }\n    resetShapeData(shape, shapeDef) {\n        shape.SetDensity(shapeDef.density);\n        shape.SetFriction(shapeDef.friction);\n        shape.SetSensor(shapeDef.isSensor);\n        shape.SetRestitution(shapeDef.restitution);\n    }\n    set_shape_collider(shape, instance) {\n        shape.collider = instance;\n    }\n    get_shape_body(shape) {\n        return shape.GetBody();\n    }\n    set_shape_isSensor(shape, sensor) {\n        shape.SetSensor(sensor);\n    }\n    get_shape_isSensor(shape) {\n        let isSensor = shape.IsSensor();\n        return isSensor;\n    }\n    getShape(shape, type) {\n        let world = shape.world;\n        let fixtureShape = shape.GetShape();\n        fixtureShape = this.get_fixtureshape(fixtureShape, type);\n        fixtureShape.world = world;\n        return fixtureShape;\n    }\n    setfilterData(shape, filterData) {\n        shape.SetFilterData(filterData);\n    }\n    getfilterData(shape) {\n        let shapeFilterData = shape.GetFilterData();\n        return shapeFilterData;\n    }\n    set_shape_reFilter(shape) {\n        shape.Refilter();\n    }\n    shape_rayCast(shape, output, input, childIndex) {\n        return false;\n    }\n    get_shape_massData(shape, massData) {\n        massData = shape.GetMassData(massData);\n        return massData;\n    }\n    set_shape_density(shape, density) {\n        shape.SetDensity(density);\n    }\n    set_shape_friction(shape, friction) {\n        shape.SetFriction(friction);\n    }\n    set_shape_restitution(shape, restitution) {\n        shape.SetRestitution(restitution);\n    }\n    set_shape_restitutionThreshold(shape, restitutionThreshold) {\n        shape.SetRestitutionThreshold(restitutionThreshold);\n    }\n    get_shape_AABB(shape) {\n        let AABB = shape.GetAABB(0);\n        return AABB;\n    }\n    createMassData() {\n        let massData = new this.box2d.b2MassData();\n        return massData;\n    }\n    createBody(world, def) {\n        if (!def) {\n            def = new this.box2d.b2BodyDef();\n        }\n        if (!world)\n            return;\n        def.userData = { pointer: 0 };\n        let body = world.CreateBody(def);\n        body.world = world;\n        body.destroyed = false;\n        return body;\n    }\n    removeBody(world, body) {\n        if (!body || !world)\n            return;\n        if (body.world._indexInMap != world._indexInMap)\n            return;\n        if (!world.destroyed)\n            world.DestroyBody(body);\n        body.destroyed = true;\n    }\n    rigidBody_DestroyShape(body, shape) {\n        if (body.world && !body.world.destroyed)\n            body.DestroyFixture(shape);\n    }\n    createBodyDef(world, rigidbodyDef) {\n        var def = new this.box2d.b2BodyDef();\n        def.position.Set(this.convertLayaValueToPhysics(world, rigidbodyDef.position.x), this.convertLayaValueToPhysics(world, rigidbodyDef.position.y));\n        def.angle = rigidbodyDef.angle;\n        def.allowSleep = rigidbodyDef.allowSleep;\n        def.angularDamping = rigidbodyDef.angularDamping;\n        def.angularVelocity = rigidbodyDef.angularVelocity;\n        def.bullet = rigidbodyDef.bullet;\n        def.fixedRotation = rigidbodyDef.fixedRotation;\n        def.gravityScale = rigidbodyDef.gravityScale;\n        def.linearDamping = rigidbodyDef.linearDamping;\n        def.linearVelocity = new this.box2d.b2Vec2(this.convertLayaValueToPhysics(world, rigidbodyDef.linearVelocity.x), this.convertLayaValueToPhysics(world, rigidbodyDef.linearVelocity.y));\n        def.type = this.getbodyType(rigidbodyDef.type);\n        return def;\n    }\n    get_RigidBody_Position(body, v2) {\n        let world = body.world;\n        var pos = body.GetPosition();\n        v2.setValue(this.convertPhysicsValueToLaya(world, pos.x), this.convertPhysicsValueToLaya(world, pos.y));\n    }\n    get_RigidBody_Angle(body) {\n        return body.GetAngle();\n    }\n    set_RigibBody_Enable(body, enable) {\n        body.SetEnabled(enable);\n    }\n    set_RigibBody_Transform(body, x, y, angle) {\n        let pos = body.GetPosition();\n        let world = body.world;\n        pos.x = this.convertLayaValueToPhysics(world, x);\n        pos.y = this.convertLayaValueToPhysics(world, y);\n        body.SetTransform(pos, angle);\n    }\n    get_rigidBody_WorldPoint(body, x, y) {\n        let world = body.world;\n        let data = body.GetWorldPoint(this.createPhyFromLayaVec2(world, x, y));\n        return {\n            x: this.convertPhysicsValueToLaya(world, data.x),\n            y: this.convertPhysicsValueToLaya(world, data.y)\n        };\n    }\n    get_rigidBody_LocalPoint(body, x, y) {\n        let world = body.world;\n        let data = body.GetLocalPoint(this.createPhyFromLayaVec2(world, x, y));\n        return {\n            x: this.convertPhysicsValueToLaya(world, data.x),\n            y: this.convertPhysicsValueToLaya(world, data.y)\n        };\n    }\n    rigidBody_applyForce(body, force, position) {\n        let world = body.world;\n        this._tempVe21.x = this.convertLayaValueToPhysics(world, position.x);\n        this._tempVe21.y = this.convertLayaValueToPhysics(world, position.y);\n        this._tempVe22.x = force.x;\n        this._tempVe22.y = force.y;\n        body.ApplyForce(this._tempVe22, this._tempVe21, false);\n    }\n    rigidBody_applyForceToCenter(body, force) {\n        this._tempVe21.x = force.x;\n        this._tempVe21.y = force.y;\n        body.ApplyForceToCenter(this._tempVe21);\n    }\n    rigidbody_ApplyLinearImpulse(body, impulse, position) {\n        let world = body.world;\n        this._tempVe21.x = impulse.x;\n        this._tempVe21.y = impulse.y;\n        this._tempVe22.x = this.convertLayaValueToPhysics(world, position.x);\n        this._tempVe22.y = this.convertLayaValueToPhysics(world, position.y);\n        body.ApplyLinearImpulse(this._tempVe21, this._tempVe22);\n    }\n    rigidbody_ApplyLinearImpulseToCenter(body, impulse) {\n        this._tempVe21.x = impulse.x;\n        this._tempVe21.y = impulse.y;\n        body.ApplyLinearImpulseToCenter(this._tempVe21);\n    }\n    rigidbody_applyTorque(body, torque) {\n        body.ApplyTorque(torque);\n    }\n    set_rigidbody_Velocity(body, velocity) {\n        let world = body.world;\n        this._tempVe21.x = this.convertLayaValueToPhysics(world, velocity.x);\n        this._tempVe21.y = this.convertLayaValueToPhysics(world, velocity.y);\n        body.SetLinearVelocity(this._tempVe21);\n    }\n    set_rigidbody_Awake(body, awake) {\n        body.SetAwake(awake);\n    }\n    get_rigidbody_Mass(body) {\n        return body.GetMass();\n    }\n    set_rigidBody_Mass(body, massValue, centerofMass, inertiaValue, massData) {\n        massData.mass = massValue;\n        massData.center.x = centerofMass.x;\n        massData.center.y = centerofMass.y;\n        massData.I = inertiaValue;\n        body.SetMassData(massData);\n    }\n    get_rigidBody_Center(body) {\n        let world = body.world;\n        let value = body.GetLocalCenter();\n        let point = { x: 0, y: 0 };\n        point.x = this.convertPhysicsValueToLaya(world, value.x);\n        point.y = this.convertPhysicsValueToLaya(world, value.y);\n        return point;\n    }\n    get_rigidbody_Inertia(body) {\n        return body.GetInertia();\n    }\n    get_rigidBody_IsAwake(body) {\n        return body.IsAwake();\n    }\n    get_rigidBody_WorldCenter(body) {\n        let world = body.world;\n        let value = body.GetWorldCenter();\n        let point = { x: 0, y: 0 };\n        point.x = this.convertPhysicsValueToLaya(world, value.x);\n        point.y = this.convertPhysicsValueToLaya(world, value.y);\n        return point;\n    }\n    set_rigidBody_type(body, value) {\n        body.SetType(this.getbodyType(value));\n    }\n    set_rigidBody_gravityScale(body, value) {\n        body.SetGravityScale(value);\n    }\n    set_rigidBody_allowRotation(body, value) {\n        body.SetFixedRotation(!value);\n    }\n    set_rigidBody_allowSleep(body, value) {\n        body.SetSleepingAllowed(value);\n    }\n    set_rigidBody_angularDamping(body, value) {\n        body.SetAngularDamping(value);\n    }\n    get_rigidBody_angularVelocity(body) {\n        return body.GetAngularVelocity();\n    }\n    set_rigidBody_angularVelocity(body, value) {\n        body.SetAngularVelocity(value);\n    }\n    set_rigidBody_linearDamping(body, value) {\n        body.SetLinearDamping(value);\n    }\n    get_rigidBody_linearVelocity(body) {\n        let world = body.world;\n        let value = body.GetLinearVelocity();\n        this._tempVe21.x = this.convertPhysicsValueToLaya(world, value.x);\n        this._tempVe21.y = this.convertPhysicsValueToLaya(world, value.y);\n        return this._tempVe21;\n    }\n    set_rigidBody_linearVelocity(body, value) {\n        let world = body.world;\n        this._tempVe21.x = this.convertLayaValueToPhysics(world, value.x);\n        this._tempVe21.y = this.convertLayaValueToPhysics(world, value.y);\n        body.SetLinearVelocity(this._tempVe21);\n    }\n    set_rigidBody_bullet(body, value) {\n        body.SetBullet(value);\n    }\n    retSet_rigidBody_MassData(body) {\n        body.ResetMassData();\n    }\n    get_rigidBody_isEnable(body) {\n        let isBodyEnable = body.IsEnabled();\n        return isBodyEnable;\n    }\n    get_rigidBody_fixedRotation(body) {\n        let isFixedRotation = body.IsFixedRotation();\n        return isFixedRotation;\n    }\n    get_rigidBody_next(body) {\n        return body.GetNext();\n    }\n    set_rigidBody_userData(body, data) {\n    }\n    get_rigidBody_userData(body) {\n        return body.GetUserData();\n    }\n    get_RigibBody_Transform(body) {\n        return body.GetTransform();\n    }\n    get_rigidBody_WorldVector(body, value) {\n        return body.GetWorldVector(value);\n    }\n    get_rigidBody_LocalVector(body, value) {\n        return body.GetLocalVector(value);\n    }\n    rigidbody_ApplyAngularImpulse(body, impulse) {\n        body.ApplyAngularImpulse(impulse, true);\n    }\n    set_rigidBody_Awake(body, awake) {\n        body.SetAwake(awake);\n    }\n    get_rigidBody_Mass(body) {\n        return body.GetMass();\n    }\n    get_rigidBody_Inertia(body) {\n        return body.GetInertia();\n    }\n    get_rigidBody_type(body) {\n        let type = body.GetType();\n        switch (type) {\n            case \"b2_staticBody\":\n                type = \"static\";\n                break;\n            case \"b2_kinematicBody\":\n                type = \"kinematic\";\n                break;\n            case \"b2_dynamicBody\":\n                type = \"dynamic\";\n                break;\n            default:\n                break;\n        }\n        return type;\n    }\n    get_rigidBody_gravityScale(body) {\n        return body.GetGravityScale();\n    }\n    get_rigidBody_allowSleep(body) {\n        return body.IsSleepingAllowed();\n    }\n    get_rigidBody_angularDamping(body) {\n        return body.GetAngularDamping();\n    }\n    get_rigidBody_linearDamping(body) {\n        return body.GetLinearDamping();\n    }\n    get_rigidBody_linearVelocityFromWorldPoint(body, worldPoint) {\n        let world = body.world;\n        this._tempVe21.x = this.convertLayaValueToPhysics(world, worldPoint.x);\n        this._tempVe21.y = this.convertLayaValueToPhysics(world, worldPoint.y);\n        let velocity = body.GetLinearVelocityFromWorldPoint(worldPoint);\n        velocity.x = this.convertPhysicsValueToLaya(world, velocity.x);\n        velocity.y = this.convertPhysicsValueToLaya(world, velocity.y);\n        return velocity;\n    }\n    get_rigidBody_linearVelocityFromLocalPoint(body, localPoint) {\n        let world = body.world;\n        this._tempVe21.x = this.convertLayaValueToPhysics(world, localPoint.x);\n        this._tempVe21.y = this.convertLayaValueToPhysics(world, localPoint.y);\n        let velocity = body.GetLinearVelocityFromLocalPoint(localPoint);\n        velocity.x = this.convertPhysicsValueToLaya(world, velocity.x);\n        velocity.y = this.convertPhysicsValueToLaya(world, velocity.y);\n        return velocity;\n    }\n    get_rigidBody_bullet(body) {\n        return body.IsBullet();\n    }\n    getbodyType(type) {\n        if (type == \"dynamic\") {\n            return this.box2d.b2_dynamicBody;\n        }\n        else if (type == \"static\") {\n            return this.box2d.b2_staticBody;\n        }\n        else if (type == \"kinematic\") {\n            return this.box2d.b2_kinematicBody;\n        }\n    }\n    setDestructionListener(world, destroyFun) {\n    }\n    setContactListener(world, listener) {\n        if (!world)\n            console.warn(\"setContactListener world is null\");\n        world.SetContactListener(listener);\n    }\n    warpPoint(ins, type) {\n        let res;\n        switch (type) {\n            case Ebox2DType.b2Color:\n                res = this._box2d.wrapPointer(ins, this._box2d.b2Color);\n                break;\n            case Ebox2DType.b2Contact:\n                res = this._box2d.wrapPointer(ins, this._box2d.b2Contact);\n                break;\n            case Ebox2DType.b2Fixture:\n                res = this._box2d.wrapPointer(ins, this._box2d.b2Fixture);\n                break;\n            case Ebox2DType.b2Joint:\n                res = this._box2d.wrapPointer(ins, this._box2d.b2Joint);\n                break;\n            case Ebox2DType.b2Transform:\n                res = this._box2d.wrapPointer(ins, this._box2d.b2Transform);\n                res.x = res.p.x;\n                res.y = res.p.y;\n                res.angle = res.q.GetAngle();\n                break;\n            case Ebox2DType.b2Vec2:\n                res = this._box2d.wrapPointer(ins, this._box2d.b2Vec2);\n                res.x = res.get_x();\n                res.y = res.get_y();\n                break;\n            case Ebox2DType.b2Filter:\n                res = this._box2d.wrapPointer(ins, this._box2d.b2Filter);\n                break;\n            default:\n                break;\n        }\n        return res;\n    }\n    getContactShapeA(contact) {\n        return contact.GetFixtureA();\n    }\n    getContactShapeB(contact) {\n        return contact.GetFixtureB();\n    }\n    createContactListener() {\n        let listener = new this._box2d.JSContactListener();\n        return listener;\n    }\n    createJSQueryCallback() {\n        let jsQuerycallback = new this._box2d.JSQueryCallback();\n        return jsQuerycallback;\n    }\n    createJSRayCastCallback() {\n        let jsRayCastcallback = new this._box2d.JSRayCastCallback();\n        return jsRayCastcallback;\n    }\n    getDestructionListener() {\n        var listner = new this.box2d.JSDestructionListener();\n        let box2d = this.box2d;\n        listner.SayGoodbyeJoint = function (joint) {\n            joint = box2d.wrapPointer(joint, box2d.b2Joint);\n            joint.GetUserData().pointer = -1;\n        };\n        listner.SayGoodbyeFixture = function (fixture) {\n            fixture = box2d.wrapPointer(fixture, box2d.b2Fixture);\n            fixture.GetUserData().pointer = -1;\n        };\n        return listner;\n    }\n    castObject(pointer, cls) {\n        return this.box2d.castObject(pointer, cls);\n    }\n    createWrapPointer(world, points) {\n        var len = points.length;\n        var buffer = this.box2d._malloc(len * 4);\n        var offset = 0;\n        for (var i = 0; i < len; i++) {\n            this.box2d.HEAPF32[buffer + offset >> 2] = this.convertLayaValueToPhysics(world, points[i]);\n            offset += 4;\n        }\n        return buffer;\n    }\n    createVec2Pointer(world, points, x, y, scaleX, scaleY) {\n        var len = points.length >> 1;\n        var buffer = this.box2d._malloc(len * 8);\n        var offset = 0;\n        for (var i = 0; i < len; i++) {\n            this.box2d.HEAPF32[buffer + offset >> 2] = this.convertLayaValueToPhysics(world, (points[2 * i] + x) * scaleX);\n            this.box2d.HEAPF32[buffer + (offset + 4) >> 2] = this.convertLayaValueToPhysics(world, (points[2 * i + 1] + y) * scaleY);\n            offset += 8;\n        }\n        return this.box2d.wrapPointer(buffer, this.box2d.b2Vec2);\n    }\n    b2LinearStiffness(def, frequencyHertz, dampingRatio, bodyA, bodyB) {\n        if (bodyA == undefined || bodyB == undefined) {\n            def.stiffness = 0;\n            def.damping = 0;\n            return;\n        }\n        const massA = bodyA.GetMass();\n        const massB = bodyB.GetMass();\n        let mass;\n        if (massA > 0.0 && massB > 0.0) {\n            mass = massA * massB / (massA + massB);\n        }\n        else if (massA > 0.0) {\n            mass = massA;\n        }\n        else {\n            mass = massB;\n        }\n        const omega = 2.0 * Math.PI * frequencyHertz;\n        def.stiffness = mass * omega * omega;\n        def.damping = 2.0 * mass * dampingRatio * omega;\n    }\n    b2AngularStiffness(def, frequencyHertz, dampingRatio, bodyA, bodyB) {\n        const IA = bodyA.GetInertia();\n        const IB = bodyB.GetInertia();\n        let I;\n        if (IA > 0.0 && IB > 0.0) {\n            I = IA * IB / (IA + IB);\n        }\n        else if (IA > 0.0) {\n            I = IA;\n        }\n        else {\n            I = IB;\n        }\n        const omega = 2.0 * Math.PI * frequencyHertz;\n        def.stiffness = I * omega * omega;\n        def.damping = 2.0 * I * dampingRatio * omega;\n    }\n    getVec2Length(p1, p2) {\n        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n    }\n    isNullData(data) {\n        return this.box2d.compare(data, this.box2d.NULL);\n    }\n    destroyData(data) {\n        data && data.__destroy__();\n    }\n    get_fixtureshape(shape, physicShape) {\n        let obj;\n        switch (physicShape) {\n            case EPhysics2DShape.BoxShape:\n            case EPhysics2DShape.PolygonShape:\n                obj = this.castObject(shape, this.box2d.b2PolygonShape);\n                break;\n            case EPhysics2DShape.ChainShape:\n                obj = this.castObject(shape, this.box2d.b2ChainShape);\n                break;\n            case EPhysics2DShape.CircleShape:\n                obj = this.castObject(shape, this.box2d.b2CircleShape);\n                break;\n            case EPhysics2DShape.EdgeShape:\n                obj = this.castObject(shape, this.box2d.b2EdgeShape);\n                break;\n            default:\n                obj = null;\n                break;\n        }\n        return obj;\n    }\n}\nPhysics2D.I._factory = Laya.physics2D = new physics2DwasmFactory();\n"],"names":["Physics2D","EPhysics2DJoint","EPhysics2DShape","Ebox2DType","Laya"],"mappings":"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"}