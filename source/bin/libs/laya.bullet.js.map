{"version":3,"file":"laya.bullet.js","sources":["../../bin/tsc/layaAir/laya/Physics3D/Bullet/btStatics.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Collider/btCollider.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Collider/btCharacterCollider.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btMeshColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Collider/btRigidBodyCollider.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Collider/btStaticCollider.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/CollisionTool.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Joint/btJoint.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Joint/btCustomJoint.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Joint/btFixedJoint.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Joint/btHingeJoint.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Joint/btSpringJoint.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btBoxColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btCapsuleColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btCompoundColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btConeColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btCylinderColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/Shape/btSphereColliderShape.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/btInteractive.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/btPhysicsManager.js","../../bin/tsc/layaAir/laya/Physics3D/Bullet/btPhysicsCreateUtil.js"],"sourcesContent":["export class btStatics {\n}\nbtStatics.COLLISIONFILTERGROUP_DEFAULTFILTER = 0x1;\nbtStatics.COLLISIONFILTERGROUP_STATICFILTER = 0x2;\nbtStatics.COLLISIONFILTERGROUP_KINEMATICFILTER = 0x4;\nbtStatics.COLLISIONFILTERGROUP_DEBRISFILTER = 0x8;\nbtStatics.COLLISIONFILTERGROUP_SENSORTRIGGER = 0x10;\nbtStatics.COLLISIONFILTERGROUP_CHARACTERFILTER = 0x20;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER1 = 0x40;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER2 = 0x80;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER3 = 0x100;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER4 = 0x200;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER5 = 0x400;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER6 = 0x800;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER7 = 0x1000;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER8 = 0x2000;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER9 = 0x4000;\nbtStatics.COLLISIONFILTERGROUP_CUSTOMFILTER10 = 0x8000;\nbtStatics.COLLISIONFILTERGROUP_ALLFILTER = -1;\nbtStatics.ACTIVATIONSTATE_ACTIVE_TAG = 1;\nbtStatics.ACTIVATIONSTATE_ISLAND_SLEEPING = 2;\nbtStatics.ACTIVATIONSTATE_WANTS_DEACTIVATION = 3;\nbtStatics.ACTIVATIONSTATE_DISABLE_DEACTIVATION = 4;\nbtStatics.ACTIVATIONSTATE_DISABLE_SIMULATION = 5;\nbtStatics.COLLISIONFLAGS_STATIC_OBJECT = 1;\nbtStatics.COLLISIONFLAGS_KINEMATIC_OBJECT = 2;\nbtStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE = 4;\nbtStatics.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK = 8;\nbtStatics.COLLISIONFLAGS_CHARACTER_OBJECT = 16;\nbtStatics.COLLISIONFLAGS_DISABLE_VISUALIZE_OBJECT = 32;\nbtStatics.COLLISIONFLAGS_DISABLE_SPU_COLLISION_PROCESSING = 64;\nbtStatics.PHYSICSENGINEFLAGS_NONE = 0x0;\nbtStatics.PHYSICSENGINEFLAGS_COLLISIONSONLY = 0x1;\nbtStatics.PHYSICSENGINEFLAGS_SOFTBODYSUPPORT = 0x2;\nbtStatics.PHYSICSENGINEFLAGS_MULTITHREADED = 0x4;\nbtStatics.PHYSICSENGINEFLAGS_USEHARDWAREWHENPOSSIBLE = 0x8;\nbtStatics.SOLVERMODE_RANDMIZE_ORDER = 1;\nbtStatics.SOLVERMODE_FRICTION_SEPARATE = 2;\nbtStatics.SOLVERMODE_USE_WARMSTARTING = 4;\nbtStatics.SOLVERMODE_USE_2_FRICTION_DIRECTIONS = 16;\nbtStatics.SOLVERMODE_ENABLE_FRICTION_DIRECTION_CACHING = 32;\nbtStatics.SOLVERMODE_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION = 64;\nbtStatics.SOLVERMODE_CACHE_FRIENDLY = 128;\nbtStatics.SOLVERMODE_SIMD = 256;\nbtStatics.SOLVERMODE_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS = 512;\nbtStatics.SOLVERMODE_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS = 1024;\nbtStatics.HITSRAYRESULTCALLBACK_FLAG_NONE = 0;\nbtStatics.HITSRAYRESULTCALLBACK_FLAG_FILTERBACKFACESS = 1;\nbtStatics.HITSRAYRESULTCALLBACK_FLAG_KEEPUNFILIPPEDNORMAL = 2;\nbtStatics.HITSRAYRESULTCALLBACK_FLAG_USESUBSIMPLEXCONVEXCASTRAYTEST = 4;\nbtStatics.HITSRAYRESULTCALLBACK_FLAG_USEGJKCONVEXCASTRAYTEST = 8;\nbtStatics.HITSRAYRESULTCALLBACK_FLAG_TERMINATOR = 0xffffffff;\nexport function convertToBulletVec3(lVector, out) {\n    btStatics.bt.btVector3_setValue(out, lVector.x, lVector.y, lVector.z);\n}\n","import { Transform3D } from \"../../../d3/core/Transform3D\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { btStatics } from \"../btStatics\";\nexport var btColliderType;\n(function (btColliderType) {\n    btColliderType[btColliderType[\"RigidbodyCollider\"] = 0] = \"RigidbodyCollider\";\n    btColliderType[btColliderType[\"CharactorCollider\"] = 1] = \"CharactorCollider\";\n    btColliderType[btColliderType[\"StaticCollider\"] = 2] = \"StaticCollider\";\n})(btColliderType || (btColliderType = {}));\nexport class btCollider {\n    static __init__() {\n        btCollider._btVector30 = btStatics.bt.btVector3_create(0, 0, 0);\n        btCollider._btQuaternion0 = btStatics.bt.btQuaternion_create(0, 0, 0, 1);\n    }\n    constructor(physicsManager) {\n        this._isSimulate = false;\n        this.inPhysicUpdateListIndex = -1;\n        this._destroyed = false;\n        this._restitution = 0.0;\n        this._friction = 0.5;\n        this._rollingFriction = 0.0;\n        this._ccdThreshold = 0.0;\n        this._ccdSwapSphereRadius = 0.0;\n        this._transformFlag = 2147483647;\n        this.active = false;\n        this._collisionGroup = btStatics.COLLISIONFILTERGROUP_DEFAULTFILTER;\n        this._canCollideWith = btStatics.COLLISIONFILTERGROUP_ALLFILTER;\n        this._physicsManager = physicsManager;\n        this._id = btCollider._colliderID++;\n        this._isTrigger = false;\n        this._enableProcessCollisions = false;\n        btCollider._physicObjectsMap[this._id] = this;\n        this._type = this.getColliderType();\n    }\n    setDynamicFriction(value) {\n        throw new NotImplementedError;\n    }\n    setStaticFriction(value) {\n        throw new NotImplementedError;\n    }\n    setFrictionCombine(value) {\n        throw new NotImplementedError;\n    }\n    setBounceCombine(value) {\n        throw new NotImplementedError;\n    }\n    setEventFilter(events) {\n        throw new NotImplementedError;\n    }\n    allowSleep(value) {\n    }\n    getCapable(value) {\n        return null;\n    }\n    setOwner(node) {\n        this.owner = node;\n        this._transform = node.transform;\n        this._initCollider();\n    }\n    setCollisionGroup(value) {\n        if (value != this._collisionGroup && this._btColliderShape) {\n            this._collisionGroup = value;\n            this._physicsManager.removeCollider(this);\n            this._physicsManager.addCollider(this);\n        }\n    }\n    setCanCollideWith(value) {\n        if (value != this._canCollideWith && this._btColliderShape) {\n            this._canCollideWith = value;\n            this._physicsManager.removeCollider(this);\n            this._physicsManager.addCollider(this);\n        }\n    }\n    _initCollider() {\n        this.setBounciness(this._restitution);\n        this.setfriction(this._friction);\n        this.setRollingFriction(this._rollingFriction);\n        this.setCcdMotionThreshold(this._physicsManager.ccdThreshold);\n        this.setCcdSweptSphereRadius(this._physicsManager.ccdSphereRadius);\n    }\n    getColliderType() {\n        return null;\n    }\n    _onScaleChange(scale) {\n        this._btColliderShape.setWorldScale(scale);\n    }\n    _onShapeChange() {\n        var btColObj = this._btCollider;\n        var flags = btStatics.bt.btCollisionObject_getCollisionFlags(btColObj);\n        if ((flags & btStatics.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK) > 0)\n            btStatics.bt.btCollisionObject_setCollisionFlags(btColObj, flags ^ btStatics.COLLISIONFLAGS_CUSTOM_MATERIAL_CALLBACK);\n    }\n    setColliderShape(shape) {\n        shape._btCollider = this;\n        if (shape == this._btColliderShape || shape._btShape == null)\n            return;\n        var lastColliderShape = this._btColliderShape;\n        this._btColliderShape = shape;\n        let bt = btStatics.bt;\n        if (shape) {\n            if (this._btCollider) {\n                bt.btCollisionObject_setCollisionShape(this._btCollider, shape._btShape);\n                let simulate = this._isSimulate;\n                simulate && this._physicsManager.removeCollider(this);\n                this._onShapeChange();\n                if ((simulate || !lastColliderShape || (lastColliderShape && lastColliderShape._destroyed)) && this.componentEnable) {\n                    this._derivePhysicsTransformation(true);\n                    this._physicsManager.addCollider(this);\n                }\n            }\n        }\n        else {\n            if (this._isSimulate) {\n                this._physicsManager.removeCollider(this);\n                this._isSimulate = false;\n            }\n        }\n        lastColliderShape && lastColliderShape.destroy();\n    }\n    destroy() {\n        btStatics.bt.btCollisionObject_destroy(this._btCollider);\n        delete btCollider._physicObjectsMap[this._id];\n        this._destroyed = true;\n    }\n    _derivePhysicsTransformation(force) {\n        var btColliderObject = this._btCollider;\n        var btTransform = btStatics.bt.btCollisionObject_getWorldTransform(btColliderObject);\n        this._innerDerivePhysicsTransformation(btTransform, force);\n        btStatics.bt.btCollisionObject_setWorldTransform(btColliderObject, btTransform);\n    }\n    _innerDerivePhysicsTransformation(physicTransformPtr, force) {\n        let bt = btStatics.bt;\n        var transform = this._transform;\n        let pxoff = 0;\n        let pyoff = 0;\n        let pzoff = 0;\n        if (force || this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)) {\n            var shapeOffset = this._btColliderShape._localOffset;\n            var position = transform.position;\n            var btPosition = btCollider._btVector30;\n            if (shapeOffset.x !== 0 || shapeOffset.y !== 0 || shapeOffset.z !== 0) {\n                var worldMat = transform.worldMatrix;\n                Vector3.transformCoordinate(shapeOffset, worldMat, _tempVector30);\n                bt.btVector3_setValue(btPosition, _tempVector30.x, _tempVector30.y, _tempVector30.z);\n            }\n            else {\n                bt.btVector3_setValue(btPosition, position.x - pxoff, position.y - pyoff, position.z - pzoff);\n            }\n            bt.btTransform_setOrigin(physicTransformPtr, btPosition);\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION, false);\n        }\n        if (force || this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)) {\n            var btRotation = btCollider._btQuaternion0;\n            var rotation = transform.rotation;\n            bt.btQuaternion_setValue(btRotation, rotation.x, rotation.y, rotation.z, rotation.w);\n            bt.btTransform_setRotation(physicTransformPtr, btRotation);\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION, false);\n        }\n        if (force || this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\n            this._onScaleChange(transform.getWorldLossyScale());\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDSCALE, false);\n        }\n    }\n    _updateTransformComponent(physicsTransform, syncRot = true, addmargin = 0) {\n        let bt = btStatics.bt;\n        var colliderShape = this._btColliderShape;\n        var localOffset = colliderShape._localOffset;\n        var transform = this._transform;\n        if (!transform)\n            return;\n        var position = transform.position;\n        var rotation = transform.rotation;\n        var btPosition = bt.btTransform_getOrigin(physicsTransform);\n        if (syncRot) {\n            var btRotation = bt.btTransform_getRotation(physicsTransform);\n            var btRotX = bt.btQuaternion_x(btRotation);\n            var btRotY = bt.btQuaternion_y(btRotation);\n            var btRotZ = bt.btQuaternion_z(btRotation);\n            var btRotW = bt.btQuaternion_w(btRotation);\n            rotation.x = btRotX;\n            rotation.y = btRotY;\n            rotation.z = btRotZ;\n            rotation.w = btRotW;\n            transform.rotation = rotation;\n        }\n        if (localOffset.x !== 0 || localOffset.y !== 0 || localOffset.z !== 0) {\n            var btScale = bt.btCollisionShape_getLocalScaling(colliderShape._btShape);\n            _tempVector30.x = localOffset.x * bt.btVector3_x(btScale);\n            _tempVector30.y = localOffset.y * bt.btVector3_y(btScale);\n            _tempVector30.z = localOffset.z * bt.btVector3_z(btScale);\n            Vector3.transformQuat(_tempVector30, rotation, _tempVector30);\n            position.x = bt.btVector3_x(btPosition) - _tempVector30.x;\n            position.y = bt.btVector3_y(btPosition) - _tempVector30.y + addmargin;\n            position.z = bt.btVector3_z(btPosition) - _tempVector30.z;\n        }\n        else {\n            position.x = bt.btVector3_x(btPosition);\n            position.y = bt.btVector3_y(btPosition);\n            position.z = bt.btVector3_z(btPosition);\n        }\n        transform.position = position;\n    }\n    _getTransformFlag(type) {\n        return (this._transformFlag & type) != 0;\n    }\n    _setTransformFlag(type, value) {\n        if (value)\n            this._transformFlag |= type;\n        else\n            this._transformFlag &= ~type;\n    }\n    transformChanged(flag) {\n        this._transformFlag = flag;\n        if (this.inPhysicUpdateListIndex == -1 && !this._enableProcessCollisions) {\n            this._physicsManager._physicsUpdateList.add(this);\n        }\n    }\n    setBounciness(value) {\n        this._restitution = value;\n        this._btCollider && btStatics.bt.btCollisionObject_setRestitution(this._btCollider, value);\n    }\n    setfriction(value) {\n        this._friction = value;\n        this._btCollider && btStatics.bt.btCollisionObject_setFriction(this._btCollider, value);\n    }\n    setRollingFriction(value) {\n        this._rollingFriction = value;\n        this._btCollider && btStatics.bt.btCollisionObject_setRollingFriction(this._btCollider, value);\n    }\n    setCcdMotionThreshold(value) {\n        if (this._physicsManager.enableCCD) {\n            this._ccdThreshold = value;\n            this._btCollider && btStatics.bt.btCollisionObject_setCcdMotionThreshold(this._btCollider, value);\n        }\n    }\n    setCcdSweptSphereRadius(value) {\n        if (this._physicsManager.enableCCD) {\n            this._ccdSwapSphereRadius = value;\n            this._btCollider && btStatics.bt.btCollisionObject_setCcdSweptSphereRadius(this._btCollider, value);\n        }\n    }\n}\nbtCollider._colliderID = 0;\nbtCollider._addUpdateList = true;\nbtCollider.TYPE_STATIC = 0;\nbtCollider.TYPE_DYNAMIC = 1;\nbtCollider.TYPE_KINEMATIC = 2;\nbtCollider._physicObjectsMap = {};\nconst _tempVector30 = new Vector3();\n","import { btCollider, btColliderType } from \"./btCollider\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { ECharacterCapable } from \"../../physicsEnum/ECharacterCapable\";\nimport { EPhysicsStatisticsInfo } from \"../../physicsEnum/EPhysicsStatisticsInfo\";\nimport { Physics3DStatInfo } from \"../../interface/Physics3DStatInfo\";\nimport { btStatics, convertToBulletVec3 } from \"../btStatics\";\nexport class btCharacterCollider extends btCollider {\n    static __init__() {\n        btCharacterCollider._btTempVector30 = btStatics.bt.btVector3_create(0, 0, 0);\n        btCharacterCollider._btTempVector31 = new Vector3(0, 0, 0);\n        btCharacterCollider.initCapable();\n    }\n    getCapable(value) {\n        return btCharacterCollider.getCharacterCapable(value);\n    }\n    constructor(physicsManager) {\n        super(physicsManager);\n        this._btKinematicCharacter = null;\n        this._stepHeight = 0.1;\n        this._upAxis = new Vector3(0, 1, 0);\n        this._maxSlope = 90.0;\n        this._fallSpeed = 55.0;\n        this._jumpSpeed = 10.0;\n        this._gravity = new Vector3(0, -9.8 * 3, 0);\n        this._pushForce = 1;\n        this._enableProcessCollisions = true;\n        var bt = btStatics.bt;\n        var ghostObject = bt.btPairCachingGhostObject_create();\n        bt.btCollisionObject_setUserIndex(ghostObject, this._id);\n        bt.btCollisionObject_setCollisionFlags(ghostObject, btStatics.COLLISIONFLAGS_CHARACTER_OBJECT);\n        bt.btCollisionObject_setContactProcessingThreshold(ghostObject, 0);\n        this._btCollider = ghostObject;\n        Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaCharacterController, 1);\n    }\n    setShapelocalOffset(value) {\n        this._btColliderShape && this._btColliderShape.setOffset(value);\n    }\n    setSkinWidth(width) {\n    }\n    setPosition(value) {\n        btStatics.bt.btKinematicCharacterController_setCurrentPosition(this._btKinematicCharacter, value.x, value.y, value.z);\n    }\n    getPosition() {\n        var bt = btStatics.bt;\n        let pPos = bt.btKinematicCharacterController_getCurrentPosition(this._btKinematicCharacter);\n        btCharacterCollider._btTempVector31.setValue(bt.btVector3_x(pPos), bt.btVector3_y(pPos), bt.btVector3_z(pPos));\n        return btCharacterCollider._btTempVector31;\n    }\n    setRadius(value) {\n        this._btColliderShape && this._btColliderShape.setRadius(value);\n    }\n    setHeight(value) {\n        this._btColliderShape && this._btColliderShape.setHeight(value);\n    }\n    setminDistance(value) {\n    }\n    setDynamicFriction(value) {\n    }\n    setStaticFriction(value) {\n    }\n    setFrictionCombine(value) {\n    }\n    setBounceCombine(value) {\n    }\n    static getCharacterCapable(value) {\n        return btCharacterCollider._characterCapableMap.get(value);\n    }\n    static initCapable() {\n        this._characterCapableMap = new Map();\n        this._characterCapableMap.set(ECharacterCapable.Charcater_Gravity, true);\n        this._characterCapableMap.set(ECharacterCapable.Charcater_CollisionGroup, true);\n        this._characterCapableMap.set(ECharacterCapable.Charcater_WorldPosition, true);\n        this._characterCapableMap.set(ECharacterCapable.Charcater_Move, true);\n        this._characterCapableMap.set(ECharacterCapable.Charcater_Jump, true);\n        this._characterCapableMap.set(ECharacterCapable.Charcater_StepOffset, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_UpDirection, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_FallSpeed, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_SlopeLimit, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_PushForce, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_Radius, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_Height, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_offset, true);\n        this._characterCapableMap.set(ECharacterCapable.Character_Skin, false);\n        this._characterCapableMap.set(ECharacterCapable.Character_minDistance, false);\n        this._characterCapableMap.set(ECharacterCapable.Character_EventFilter, false);\n        this._characterCapableMap.set(ECharacterCapable.Character_SimulateGravity, false);\n    }\n    getColliderType() {\n        return btColliderType.CharactorCollider;\n    }\n    _initCollider() {\n        super._initCollider();\n    }\n    _onShapeChange() {\n        super._onShapeChange();\n        var bt = btStatics.bt;\n        if (this._btKinematicCharacter)\n            bt.btKinematicCharacterController_destroy(this._btKinematicCharacter);\n        var btUpAxis = btCharacterCollider._btTempVector30;\n        bt.btVector3_setValue(btUpAxis, this._upAxis.x, this._upAxis.y, this._upAxis.z);\n        this._btKinematicCharacter = bt.btKinematicCharacterController_create(this._btCollider, this._btColliderShape._btShape, this._stepHeight, btUpAxis);\n        this.setfallSpeed(this._fallSpeed);\n        this.setSlopeLimit(this._maxSlope);\n        this.setJumpSpeed(this._jumpSpeed);\n        this.setGravity(this._gravity);\n        bt.btKinematicCharacterController_setJumpAxis(this._btKinematicCharacter, 0, 1, 0);\n        this.setPushForce(this._pushForce);\n    }\n    setWorldPosition(value) {\n        btStatics.bt.btKinematicCharacterController_setCurrentPosition(this._btKinematicCharacter, value.x, value.y, value.z);\n    }\n    move(disp) {\n        var btMovement = btCharacterCollider._btVector30;\n        btStatics.bt.btVector3_setValue(btMovement, disp.x, disp.y, disp.z);\n        btStatics.bt.btKinematicCharacterController_setWalkDirection(this._btKinematicCharacter, btMovement);\n    }\n    jump(velocity) {\n        var btVelocity = btCharacterCollider._btVector30;\n        if (velocity) {\n            convertToBulletVec3(velocity, btVelocity);\n            btStatics.bt.btKinematicCharacterController_jump(this._btKinematicCharacter, btVelocity);\n        }\n    }\n    setJumpSpeed(value) {\n        this._jumpSpeed = value;\n        btStatics.bt.btKinematicCharacterController_setJumpSpeed(this._btKinematicCharacter, value);\n    }\n    setStepOffset(offset) {\n        this._stepHeight = offset;\n        btStatics.bt.btKinematicCharacterController_setStepHeight(this._btKinematicCharacter, offset);\n    }\n    setUpDirection(up) {\n        up.cloneTo(this._upAxis);\n        var btUpAxis = btCharacterCollider._btTempVector30;\n        convertToBulletVec3(up, btUpAxis);\n        btStatics.bt.btKinematicCharacterController_setUp(this._btKinematicCharacter, btUpAxis);\n    }\n    getVerticalVel() {\n        return btStatics.bt.btKinematicCharacterController_getVerticalVelocity(this._btKinematicCharacter);\n    }\n    setSlopeLimit(slopeLimit) {\n        this._maxSlope = slopeLimit;\n        btStatics.bt.btKinematicCharacterController_setMaxSlope(this._btKinematicCharacter, (slopeLimit / 180) * Math.PI);\n    }\n    setfallSpeed(value) {\n        this._fallSpeed = value;\n        btStatics.bt.btKinematicCharacterController_setFallSpeed(this._btKinematicCharacter, value);\n    }\n    setPushForce(value) {\n        this._pushForce = value;\n        if (this._btCollider && this._btKinematicCharacter) {\n            btStatics.bt.btKinematicCharacterController_setPushForce(this._btKinematicCharacter, value);\n        }\n    }\n    setGravity(value) {\n        this._gravity = value;\n        var btGravity = btCharacterCollider._btTempVector30;\n        btStatics.bt.btVector3_setValue(btGravity, value.x, value.y, value.z);\n        btStatics.bt.btKinematicCharacterController_setGravity(this._btKinematicCharacter, btGravity);\n    }\n    getOverlappingObj(cb) {\n        var bt = btStatics.bt;\n        let ghost = this._btCollider;\n        let num = bt.btCollisionObject_getNumOverlappingObjects(ghost);\n        for (let i = 0; i < num; i++) {\n            let obj = bt.btCollisionObject_getOverlappingObject(ghost, i);\n            let comp = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(obj)];\n            if (comp) {\n                cb(comp);\n            }\n        }\n    }\n    setColliderShape(shape) {\n        super.setColliderShape(shape);\n    }\n    destroy() {\n        btStatics.bt.btKinematicCharacterController_destroy(this._btKinematicCharacter);\n        Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaCharacterController, -1);\n        super.destroy();\n        this._btKinematicCharacter = null;\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { btStatics } from \"../btStatics\";\nexport class btColliderShape {\n    constructor() {\n        this._localOffset = new Vector3(0, 0, 0);\n        this._btScale = btStatics.bt.btVector3_create(1, 1, 1);\n        this._worldScale = new Vector3(-1, -1, -1);\n        this._destroyed = false;\n    }\n    getOffset() {\n        return this._localOffset;\n    }\n    getPhysicsShape() {\n        return this._btShape;\n    }\n    _createShape() {\n        throw \"override this function\";\n    }\n    _getType() {\n        throw \"override this function\";\n    }\n    setOffset(value) {\n        value.cloneTo(this._localOffset);\n    }\n    setWorldScale(scale) {\n        if (this._btShape && this._worldScale.equal(scale))\n            return;\n        scale.cloneTo(this._worldScale);\n        btStatics.bt.btVector3_setValue(this._btScale, this._worldScale.x, this._worldScale.y, this._worldScale.z);\n        btStatics.bt.btCollisionShape_setLocalScaling(this._btShape, this._btScale);\n    }\n    destroy() {\n        if (this._btShape && !this._destroyed) {\n            if (this._btCollider && this._btCollider._physicsManager) {\n                this._btCollider._physicsManager.removeCollider(this._btCollider);\n            }\n            btStatics.bt.btCollisionShape_destroy(this._btShape);\n            this._btShape = null;\n            this._destroyed = true;\n        }\n    }\n}\nbtColliderShape.SHAPEORIENTATION_UPX = 0;\nbtColliderShape.SHAPEORIENTATION_UPY = 1;\nbtColliderShape.SHAPEORIENTATION_UPZ = 2;\nbtColliderShape.SHAPETYPES_BOX = 0;\nbtColliderShape.SHAPETYPES_SPHERE = 1;\nbtColliderShape.SHAPETYPES_CYLINDER = 2;\nbtColliderShape.SHAPETYPES_CAPSULE = 3;\nbtColliderShape.SHAPETYPES_CONVEXHULL = 4;\nbtColliderShape.SHAPETYPES_COMPOUND = 5;\nbtColliderShape.SHAPETYPES_STATICPLANE = 6;\nbtColliderShape.SHAPETYPES_CONE = 7;\nbtColliderShape.SHAPETYPES_HEIGHTFIELDTERRAIN = 8;\n","import { btStatics, convertToBulletVec3 } from \"../btStatics\";\nimport { btColliderShape } from \"./btColliderShape\";\nexport class btMeshColliderShape extends btColliderShape {\n    get mesh() {\n        return this._mesh;\n    }\n    set mesh(value) {\n        if (this._mesh == value)\n            return;\n        this._mesh = value;\n        if (this._convex) {\n            this._createConvexMeshGeometry();\n        }\n        else {\n            this._createTrianggleMeshGeometry();\n        }\n    }\n    static __init__() {\n        let bt = btStatics.bt;\n        btMeshColliderShape._btTempVector30 = bt.btVector3_create(0, 0, 0);\n        btMeshColliderShape._btTempVector31 = bt.btVector3_create(0, 0, 0);\n        btMeshColliderShape._btTempVector32 = bt.btVector3_create(0, 0, 0);\n    }\n    constructor() {\n        super();\n        this._limitvertex = 255;\n    }\n    setPhysicsMeshFromMesh(value) {\n        this._mesh = value;\n        this._convex = false;\n        this._createTrianggleMeshGeometry();\n    }\n    setConvexMesh(value) {\n        this._mesh = value;\n        this._convex = true;\n        this._createConvexMeshGeometry();\n    }\n    setLimitVertex(limit) {\n        this._limitvertex = limit;\n    }\n    get convex() {\n        return this._convex;\n    }\n    _createPhysicsMeshFromMesh(value) {\n        if (value._triangleMesh) {\n            return value._triangleMesh;\n        }\n        let bt = btStatics.bt;\n        var triangleMesh = value._triangleMesh = bt.btTriangleMesh_create();\n        var nativePositio0 = btMeshColliderShape._btTempVector30;\n        var nativePositio1 = btMeshColliderShape._btTempVector31;\n        var nativePositio2 = btMeshColliderShape._btTempVector32;\n        let posArray = new Array();\n        value.getPositions(posArray);\n        if (this._convex && posArray.length > this._limitvertex) {\n            console.warn(\"MeshColliderShape: The number of vertices exceeds the limit, please reduce the number of vertices.\");\n        }\n        var indices = value._indexBuffer.getData();\n        for (var i = 0, n = indices.length; i < n; i += 3) {\n            var position0 = posArray[indices[i]];\n            var position1 = posArray[indices[i + 1]];\n            var position2 = posArray[indices[i + 2]];\n            convertToBulletVec3(position0, nativePositio0);\n            convertToBulletVec3(position1, nativePositio1);\n            convertToBulletVec3(position2, nativePositio2);\n            bt.btTriangleMesh_addTriangle(triangleMesh, nativePositio0, nativePositio1, nativePositio2, true);\n        }\n        return triangleMesh;\n    }\n    _createConvexMeshFromMesh(value) {\n        if (!value._convexMesh) {\n            let physicMesh = this._createPhysicsMeshFromMesh(this._mesh);\n            value._convexMesh = btStatics.bt.btShapeHull_create(physicMesh);\n        }\n        return value._convexMesh;\n    }\n    _createTrianggleMeshGeometry() {\n        let bt = btStatics.bt;\n        if (this._btShape) {\n            bt.btCollisionShape_destroy(this._btShape);\n        }\n        this._physicMesh = this._createPhysicsMeshFromMesh(this._mesh);\n        if (this._physicMesh) {\n            this._btShape = bt.btBvhTriangleMeshShape_create(this._physicMesh);\n            if (this._btCollider)\n                this._btCollider.setColliderShape(this);\n        }\n    }\n    _createConvexMeshGeometry() {\n        let bt = btStatics.bt;\n        if (this._btShape) {\n            bt.btCollisionShape_destroy(this._btShape);\n        }\n        let convexMesh = this._createConvexMeshFromMesh(this._mesh);\n        this._btShape = bt.btConvexHullShape_create(convexMesh);\n        if (this._btCollider)\n            this._btCollider.setColliderShape(this);\n    }\n    setWorldScale(value) {\n        if (this._btShape && this._btCollider) {\n            let bt = btStatics.bt;\n            bt.btVector3_setValue(btMeshColliderShape._btTempVector30, value.x, value.y, value.z);\n            bt.btCollisionShape_setLocalScaling(this._btShape, btMeshColliderShape._btTempVector30);\n        }\n    }\n}\n","import { PhysicsForceMode } from \"../../../d3/physics/PhysicsColliderComponent\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { Physics3DStatInfo } from \"../../interface/Physics3DStatInfo\";\nimport { EColliderCapable } from \"../../physicsEnum/EColliderCapable\";\nimport { EPhysicsStatisticsInfo } from \"../../physicsEnum/EPhysicsStatisticsInfo\";\nimport { btMeshColliderShape } from \"../Shape/btMeshColliderShape\";\nimport { btStatics, convertToBulletVec3 } from \"../btStatics\";\nimport { btCollider, btColliderType } from \"./btCollider\";\nexport class btRigidBodyCollider extends btCollider {\n    static __init__() {\n        let bt = btStatics.bt;\n        btRigidBodyCollider._btTempVector30 = bt.btVector3_create(0, 0, 0);\n        btRigidBodyCollider._btTempVector31 = bt.btVector3_create(0, 0, 0);\n        btRigidBodyCollider._RBtempVector30 = new Vector3(0, 0, 0);\n        btRigidBodyCollider._btVector3Zero = bt.btVector3_create(0, 0, 0);\n        btRigidBodyCollider._btInertia = bt.btVector3_create(0, 0, 0);\n        btRigidBodyCollider._btImpulse = bt.btVector3_create(0, 0, 0);\n        btRigidBodyCollider._btImpulseOffset = bt.btVector3_create(0, 0, 0);\n        btRigidBodyCollider._btGravity = bt.btVector3_create(0, 0, 0);\n        btRigidBodyCollider._btTransform0 = bt.btTransform_create();\n        btRigidBodyCollider.initCapable();\n    }\n    constructor(manager) {\n        super(manager);\n        this._isKinematic = false;\n        this._mass = 1.0;\n        this._gravity = new Vector3(0, -10, 0);\n        this._angularDamping = 0.0;\n        this._linearDamping = 0.0;\n        this._overrideGravity = false;\n        this._totalTorque = new Vector3(0, 0, 0);\n        this._totalForce = new Vector3(0, 0, 0);\n        this._linearVelocity = new Vector3();\n        this._angularVelocity = new Vector3();\n        this._linearFactor = new Vector3(1, 1, 1);\n        this._angularFactor = new Vector3(1, 1, 1);\n        this._detectCollisions = true;\n        this._allowSleep = false;\n        Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaDynamicRigidBody, 1);\n    }\n    getCapable(value) {\n        return btRigidBodyCollider.getRigidBodyCapable(value);\n    }\n    static getRigidBodyCapable(value) {\n        return this._rigidBodyCapableMap.get(value);\n    }\n    static initCapable() {\n        this._rigidBodyCapableMap = new Map();\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_AllowTrigger, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_CollisionGroup, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_Friction, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_Restitution, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_RollingFriction, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_DynamicFriction, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_StaticFriction, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_BounceCombine, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_FrictionCombine, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_EventFilter, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.Collider_CollisionDetectionMode, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_AllowSleep, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_Gravity, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_LinearDamp, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_AngularDamp, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_LinearVelocity, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_AngularVelocity, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_Mass, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_InertiaTensor, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_MassCenter, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_MaxAngularVelocity, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_MaxDepenetrationVelocity, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_SleepThreshold, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_SleepAngularVelocity, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_SolverIterations, false);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_AllowDetectionMode, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_AllowKinematic, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_LinearFactor, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_AngularFactor, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_ApplyForce, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_ClearForce, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_ApplyForceWithOffset, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_ApplyTorque, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_ApplyImpulse, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_ApplyTorqueImpulse, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_WorldPosition, true);\n        this._rigidBodyCapableMap.set(EColliderCapable.RigidBody_WorldOrientation, true);\n    }\n    setWorldPosition(value) {\n        var btColliderObject = this._btCollider;\n        btStatics.bt.btRigidBody_setCenterOfMassPos(btColliderObject, value.x, value.y, value.z);\n    }\n    setWorldRotation(value) {\n        var btColliderObject = this._btCollider;\n        btStatics.bt.btRigidBody_setCenterOfMassOrientation(btColliderObject, value.x, value.y, value.z, value.w);\n    }\n    sleep() {\n        this._allowSleep = true;\n    }\n    getColliderType() {\n        return this._type = btColliderType.RigidbodyCollider;\n    }\n    _setoverrideGravity(value) {\n        this._overrideGravity = value;\n        if (this._btCollider) {\n            var flag = btStatics.bt.btRigidBody_getFlags(this._btCollider);\n            if (value) {\n                if ((flag & btRigidBodyCollider._BT_DISABLE_WORLD_GRAVITY) === 0)\n                    btStatics.bt.btRigidBody_setFlags(this._btCollider, flag | btRigidBodyCollider._BT_DISABLE_WORLD_GRAVITY);\n            }\n            else {\n                if ((flag & btRigidBodyCollider._BT_DISABLE_WORLD_GRAVITY) > 0)\n                    btStatics.bt.btRigidBody_setFlags(this._btCollider, flag ^ btRigidBodyCollider._BT_DISABLE_WORLD_GRAVITY);\n            }\n        }\n    }\n    _updateMass(mass) {\n        if (this._btCollider && this._btColliderShape && this._btColliderShape._btShape) {\n            let bt = btStatics.bt;\n            bt.btCollisionShape_calculateLocalInertia(this._btColliderShape._btShape, mass, btRigidBodyCollider._btInertia);\n            bt.btRigidBody_setMassProps(this._btCollider, mass, btRigidBodyCollider._btInertia);\n            bt.btRigidBody_updateInertiaTensor(this._btCollider);\n        }\n    }\n    isSleeping() {\n        if (this._btCollider)\n            return btStatics.bt.btCollisionObject_getActivationState(this._btCollider) === btStatics.ACTIVATIONSTATE_ISLAND_SLEEPING || btStatics.bt.btCollisionObject_getActivationState(this._btCollider) === btStatics.ACTIVATIONSTATE_DISABLE_DEACTIVATION;\n        ;\n        return false;\n    }\n    _initCollider() {\n        let bt = btStatics.bt;\n        var motionState = bt.layaMotionState_create();\n        bt.layaMotionState_set_rigidBodyID(motionState, this._id);\n        this._btLayaMotionState = motionState;\n        var constructInfo = bt.btRigidBodyConstructionInfo_create(0.0, motionState, null, btRigidBodyCollider._btVector3Zero);\n        var btRigid = bt.btRigidBody_create(constructInfo);\n        bt.btCollisionObject_setUserIndex(btRigid, this._id);\n        this._btCollider = btRigid;\n        bt.btRigidBodyConstructionInfo_destroy(constructInfo);\n        super._initCollider();\n        this.setMass(this._mass);\n        this.setConstraints(this._linearFactor, this._angularFactor);\n        this.setLinearDamping(this._linearDamping);\n        this.setLinearVelocity(this._linearVelocity);\n        this.setAngularDamping(this._angularDamping);\n        this.setIsKinematic(this._isKinematic);\n        this.setInertiaTensor(this._gravity);\n    }\n    _onShapeChange() {\n        super._onShapeChange();\n        if (this._mass <= 0)\n            return;\n        if (this._btColliderShape instanceof btMeshColliderShape && !this._btColliderShape.convex) {\n            console.warn(\"btRigidBodyCollider: TriangleMeshShap performance is poor, please use convex.\");\n        }\n        if (this._isKinematic) {\n            this._updateMass(0);\n        }\n        else {\n            btStatics.bt.btRigidBody_setCenterOfMassTransform(this._btCollider, btStatics.bt.btCollisionObject_getWorldTransform(this._btCollider));\n            this._updateMass(this._mass);\n        }\n    }\n    setLinearDamping(value) {\n        this._linearDamping = value;\n        if (this._btCollider)\n            btStatics.bt.btRigidBody_setDamping(this._btCollider, value, this._angularDamping);\n    }\n    setAngularDamping(value) {\n        this._angularDamping = value;\n        if (this._btCollider)\n            btStatics.bt.btRigidBody_setDamping(this._btCollider, this._linearDamping, value);\n    }\n    setLinearVelocity(value) {\n        this._linearVelocity = value;\n        if (this._btCollider) {\n            var btValue = btRigidBodyCollider._btTempVector30;\n            convertToBulletVec3(value, btValue);\n            (this.isSleeping()) && (this.wakeUp());\n            btStatics.bt.btRigidBody_setLinearVelocity(this._btCollider, btValue);\n        }\n    }\n    getLinearVelocity() {\n        let bt = btStatics.bt;\n        let velocity = bt.btRigidBody_getLinearVelocity(this._btCollider);\n        btRigidBodyCollider._RBtempVector30.setValue(bt.btVector3_x(velocity), bt.btVector3_y(velocity), bt.btVector3_z(velocity));\n        return btRigidBodyCollider._RBtempVector30;\n    }\n    setSleepLinearVelocity(value) {\n        btStatics.bt.btRigidBody_setSleepingThresholds(this._btCollider, value, btStatics.bt.btRigidBody_getAngularSleepingThreshold(this._btCollider));\n    }\n    setAngularVelocity(value) {\n        this._angularVelocity = value;\n        if (this._btCollider) {\n            var btValue = btRigidBodyCollider._btTempVector30;\n            convertToBulletVec3(value, btValue);\n            (this.isSleeping()) && (this.wakeUp());\n            btStatics.bt.btRigidBody_setAngularVelocity(this._btCollider, btValue);\n        }\n    }\n    getAngularVelocity() {\n        let bt = btStatics.bt;\n        let angVelocity = bt.btRigidBody_getAngularVelocity(this._btCollider);\n        btRigidBodyCollider._RBtempVector30.setValue(bt.btVector3_x(angVelocity), bt.btVector3_y(angVelocity), bt.btVector3_z(angVelocity));\n        return btRigidBodyCollider._RBtempVector30;\n    }\n    setMass(value) {\n        value = Math.max(value, 1e-07);\n        this._mass = value;\n        (this._isKinematic) || (this._updateMass(value));\n    }\n    setInertiaTensor(value) {\n        this._gravity = value;\n        let bt = btStatics.bt;\n        bt.btVector3_setValue(btRigidBodyCollider._btGravity, value.x, value.y, value.z);\n        bt.btRigidBody_setGravity(this._btCollider, btRigidBodyCollider._btGravity);\n        if (value.equal(this._physicsManager._gravity)) {\n            this._setoverrideGravity(false);\n        }\n        else {\n            this._setoverrideGravity(true);\n        }\n    }\n    setCenterOfMass(value) {\n        var btColliderObject = this._btCollider;\n        btStatics.bt.btRigidBody_setCenterOfMassPos(btColliderObject, value.x, value.y, value.z);\n    }\n    setMaxAngularVelocity(value) {\n        throw new NotImplementedError();\n    }\n    setMaxDepenetrationVelocity(value) {\n        throw new NotImplementedError();\n    }\n    setSleepThreshold(value) {\n        this._btCollider && btStatics.bt.btRigidBody_setSleepingThresholds(this._btCollider, value, btStatics.bt.btRigidBody_getAngularSleepingThreshold(this._btCollider));\n    }\n    setSleepAngularVelocity(value) {\n        this._btCollider && btStatics.bt.btRigidBody_setSleepingThresholds(this._btCollider, btStatics.bt.btRigidBody_getLinearSleepingThreshold(this._btCollider), value);\n    }\n    setSolverIterations(value) {\n        throw new NotImplementedError();\n    }\n    setCollisionDetectionMode(value) {\n        var canInSimulation = this._isSimulate;\n        canInSimulation && this._physicsManager.removeCollider(this);\n        if (value & 3) {\n            this._isKinematic = true;\n            canInSimulation && this._updateMass(0);\n        }\n        else {\n            canInSimulation && this._updateMass(this._mass);\n        }\n        btStatics.bt.btCollisionObject_setCollisionFlags(this._btCollider, value);\n        canInSimulation && this._physicsManager.addCollider(this);\n    }\n    setIsKinematic(value) {\n        this._isKinematic = value;\n        let bt = btStatics.bt;\n        let oldSimulate = this._isSimulate;\n        oldSimulate && this._physicsManager.removeCollider(this);\n        var natColObj = this._btCollider;\n        var flags = bt.btCollisionObject_getCollisionFlags(natColObj);\n        if (value) {\n            flags = flags | btStatics.COLLISIONFLAGS_KINEMATIC_OBJECT;\n            bt.btCollisionObject_setCollisionFlags(natColObj, flags);\n            bt.btCollisionObject_forceActivationState(this._btCollider, btStatics.ACTIVATIONSTATE_DISABLE_DEACTIVATION);\n            this._enableProcessCollisions = false;\n            this._updateMass(0);\n            Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaKinematicRigidBody, 1);\n            Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaDynamicRigidBody, -1);\n        }\n        else {\n            if ((flags & btStatics.COLLISIONFLAGS_KINEMATIC_OBJECT) > 0)\n                flags = flags ^ btStatics.COLLISIONFLAGS_KINEMATIC_OBJECT;\n            bt.btCollisionObject_setCollisionFlags(natColObj, flags);\n            bt.btCollisionObject_setActivationState(this._btCollider, btStatics.ACTIVATIONSTATE_ACTIVE_TAG);\n            this._enableProcessCollisions = true;\n            this._updateMass(this._mass);\n        }\n        var btZero = btRigidBodyCollider._btVector3Zero;\n        bt.btCollisionObject_setInterpolationLinearVelocity(natColObj, btZero);\n        bt.btRigidBody_setLinearVelocity(natColObj, btZero);\n        bt.btCollisionObject_setInterpolationAngularVelocity(natColObj, btZero);\n        bt.btRigidBody_setAngularVelocity(natColObj, btZero);\n        oldSimulate && this._physicsManager.addCollider(this);\n    }\n    setConstraints(linearFactor, angularFactor) {\n        linearFactor.cloneTo(linearFactor);\n        var btValue = btRigidBodyCollider._btTempVector30;\n        convertToBulletVec3(linearFactor, btValue);\n        btStatics.bt.btRigidBody_setLinearFactor(this._btCollider, btValue);\n        angularFactor.cloneTo(this._angularFactor);\n        var btValue = btRigidBodyCollider._btTempVector30;\n        convertToBulletVec3(angularFactor, btValue);\n        btStatics.bt.btRigidBody_setAngularFactor(this._btCollider, btValue);\n    }\n    setTrigger(value) {\n        this._isTrigger = value;\n        if (this._btCollider) {\n            var flags = btStatics.bt.btCollisionObject_getCollisionFlags(this._btCollider);\n            if (value) {\n                if ((flags & btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE) === 0)\n                    btStatics.bt.btCollisionObject_setCollisionFlags(this._btCollider, flags | btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE);\n            }\n            else {\n                if ((flags & btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE) !== 0)\n                    btStatics.bt.btCollisionObject_setCollisionFlags(this._btCollider, flags ^ btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE);\n            }\n        }\n    }\n    _applyForce(force, localOffset = null) {\n        if (this._btCollider == null)\n            throw \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\n        let bt = btStatics.bt;\n        var btForce = btRigidBodyCollider._btTempVector30;\n        bt.btVector3_setValue(btForce, force.x, force.y, force.z);\n        this.wakeUp();\n        if (localOffset) {\n            var btOffset = btRigidBodyCollider._btTempVector31;\n            bt.btVector3_setValue(btOffset, localOffset.x, localOffset.y, localOffset.z);\n            bt.btRigidBody_applyForce(this._btCollider, btForce, btOffset);\n        }\n        else {\n            bt.btRigidBody_applyCentralForce(this._btCollider, btForce);\n        }\n    }\n    _applyTorque(torque) {\n        if (this._btCollider == null)\n            throw \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\n        var btTorque = btRigidBodyCollider._btTempVector30;\n        this.wakeUp();\n        btStatics.bt.btVector3_setValue(btTorque, torque.x, torque.y, torque.z);\n        btStatics.bt.btRigidBody_applyTorque(this._btCollider, btTorque);\n    }\n    _applyImpulse(impulse, localOffset = null) {\n        if (this._btCollider == null)\n            throw \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\n        let bt = btStatics.bt;\n        bt.btVector3_setValue(btRigidBodyCollider._btImpulse, impulse.x, impulse.y, impulse.z);\n        this.wakeUp();\n        if (localOffset) {\n            bt.btVector3_setValue(btRigidBodyCollider._btImpulseOffset, localOffset.x, localOffset.y, localOffset.z);\n            bt.btRigidBody_applyImpulse(this._btCollider, btRigidBodyCollider._btImpulse, btRigidBodyCollider._btImpulseOffset);\n        }\n        else {\n            bt.btRigidBody_applyCentralImpulse(this._btCollider, btRigidBodyCollider._btImpulse);\n        }\n    }\n    _applyTorqueImpulse(torqueImpulse) {\n        if (this._btCollider == null)\n            throw \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\n        var btTorqueImpulse = btRigidBodyCollider._btTempVector30;\n        this.wakeUp();\n        btStatics.bt.btVector3_setValue(btTorqueImpulse, torqueImpulse.x, torqueImpulse.y, torqueImpulse.z);\n        btStatics.bt.btRigidBody_applyTorqueImpulse(this._btCollider, btTorqueImpulse);\n    }\n    addForce(force, mode, localOffset) {\n        switch (mode) {\n            case PhysicsForceMode.Force:\n                this._applyForce(force, localOffset);\n                break;\n            case PhysicsForceMode.Impulse:\n                this._applyImpulse(force, localOffset);\n                break;\n            default:\n                break;\n        }\n    }\n    addTorque(torque, mode) {\n        switch (mode) {\n            case PhysicsForceMode.Force:\n                this._applyTorque(torque);\n                break;\n            case PhysicsForceMode.Impulse:\n                this._applyTorqueImpulse(torque);\n                break;\n        }\n    }\n    clearForces() {\n        var rigidBody = this._btCollider;\n        if (rigidBody == null)\n            throw \"Attempted to call a Physics function that is avaliable only when the Entity has been already added to the Scene.\";\n        let bt = btStatics.bt;\n        bt.btRigidBody_clearForces(rigidBody);\n        var btZero = btRigidBodyCollider._btVector3Zero;\n        bt.btCollisionObject_setInterpolationLinearVelocity(rigidBody, btZero);\n        bt.btRigidBody_setLinearVelocity(rigidBody, btZero);\n        bt.btCollisionObject_setInterpolationAngularVelocity(rigidBody, btZero);\n        bt.btRigidBody_setAngularVelocity(rigidBody, btZero);\n    }\n    wakeUp() {\n        this._btCollider && (btStatics.bt.btCollisionObject_activate(this._btCollider, false));\n    }\n    _derivePhysicsTransformation(force) {\n        let bt = btStatics.bt;\n        var btColliderObject = this._btCollider;\n        var oriTransform = bt.btCollisionObject_getWorldTransform(btColliderObject);\n        var transform = btRigidBodyCollider._btTransform0;\n        bt.btTransform_equal(transform, oriTransform);\n        this._innerDerivePhysicsTransformation(transform, force);\n        bt.btRigidBody_setCenterOfMassTransform(btColliderObject, transform);\n    }\n    _onScaleChange(scale) {\n        super._onScaleChange(scale);\n        this.setMass(this._isKinematic ? 0 : this._mass);\n    }\n    setColliderShape(shape) {\n        super.setColliderShape(shape);\n    }\n    destroy() {\n        if (this._isKinematic) {\n            Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaKinematicRigidBody, -1);\n        }\n        else {\n            Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaDynamicRigidBody, -1);\n        }\n        btStatics.bt.btMotionState_destroy(this._btLayaMotionState);\n        super.destroy();\n    }\n}\nbtRigidBodyCollider._BT_DISABLE_WORLD_GRAVITY = 1;\nbtRigidBodyCollider._BT_ENABLE_GYROPSCOPIC_FORCE = 2;\n","import { Physics3DStatInfo } from \"../../interface/Physics3DStatInfo\";\nimport { EColliderCapable } from \"../../physicsEnum/EColliderCapable\";\nimport { EPhysicsStatisticsInfo } from \"../../physicsEnum/EPhysicsStatisticsInfo\";\nimport { btStatics } from \"../btStatics\";\nimport { btCollider, btColliderType } from \"./btCollider\";\nexport class btStaticCollider extends btCollider {\n    static __init__() {\n        btStaticCollider.initCapable();\n    }\n    _initCollider() {\n        let bt = btStatics.bt;\n        var btColObj = bt.btCollisionObject_create();\n        bt.btCollisionObject_setUserIndex(btColObj, this._id);\n        bt.btCollisionObject_forceActivationState(btColObj, btStatics.ACTIVATIONSTATE_DISABLE_SIMULATION);\n        var flags = bt.btCollisionObject_getCollisionFlags(btColObj);\n        if ((this.owner).isStatic) {\n            if ((flags & btStatics.COLLISIONFLAGS_KINEMATIC_OBJECT) > 0)\n                flags = flags ^ btStatics.COLLISIONFLAGS_KINEMATIC_OBJECT;\n            flags = flags | btStatics.COLLISIONFLAGS_STATIC_OBJECT;\n        }\n        else {\n            if ((flags & btStatics.COLLISIONFLAGS_STATIC_OBJECT) > 0)\n                flags = flags ^ btStatics.COLLISIONFLAGS_STATIC_OBJECT;\n            flags = flags | btStatics.COLLISIONFLAGS_KINEMATIC_OBJECT;\n        }\n        bt.btCollisionObject_setCollisionFlags(btColObj, flags);\n        this._btCollider = btColObj;\n    }\n    setTrigger(value) {\n        this._isTrigger = value;\n        let bt = btStatics.bt;\n        if (this._btCollider) {\n            var flags = bt.btCollisionObject_getCollisionFlags(this._btCollider);\n            if (value) {\n                if ((flags & btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE) === 0)\n                    bt.btCollisionObject_setCollisionFlags(this._btCollider, flags | btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE);\n            }\n            else {\n                if ((flags & btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE) !== 0)\n                    bt.btCollisionObject_setCollisionFlags(this._btCollider, flags ^ btStatics.COLLISIONFLAGS_NO_CONTACT_RESPONSE);\n            }\n        }\n    }\n    allowSleep(value) {\n        if (this._btCollider) {\n            let bt = btStatics.bt;\n            if (value) {\n                bt.btCollisionObject_forceActivationState(this._btCollider, btStatics.ACTIVATIONSTATE_ISLAND_SLEEPING);\n            }\n            else {\n                bt.btCollisionObject_forceActivationState(this._btCollider, btStatics.ACTIVATIONSTATE_DISABLE_SIMULATION);\n            }\n        }\n    }\n    getColliderType() {\n        return btColliderType.StaticCollider;\n    }\n    getCapable(value) {\n        return btStaticCollider.getStaticColliderCapable(value);\n    }\n    constructor(physicsManager) {\n        super(physicsManager);\n        this._enableProcessCollisions = false;\n        Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaStaticRigidBody, 1);\n    }\n    static getStaticColliderCapable(value) {\n        return this._staticCapableMap.get(value);\n    }\n    static initCapable() {\n        this._staticCapableMap = new Map();\n        this._staticCapableMap.set(EColliderCapable.Collider_AllowTrigger, true);\n        this._staticCapableMap.set(EColliderCapable.Collider_CollisionGroup, true);\n        this._staticCapableMap.set(EColliderCapable.Collider_Friction, true);\n        this._staticCapableMap.set(EColliderCapable.Collider_Restitution, true);\n        this._staticCapableMap.set(EColliderCapable.Collider_RollingFriction, true);\n        this._staticCapableMap.set(EColliderCapable.Collider_DynamicFriction, false);\n        this._staticCapableMap.set(EColliderCapable.Collider_StaticFriction, false);\n        this._staticCapableMap.set(EColliderCapable.Collider_BounceCombine, true);\n        this._staticCapableMap.set(EColliderCapable.Collider_FrictionCombine, true);\n        this._staticCapableMap.set(EColliderCapable.Collider_EventFilter, false);\n        this._staticCapableMap.set(EColliderCapable.Collider_CollisionDetectionMode, false);\n        this._staticCapableMap.set(EColliderCapable.RigidBody_AllowSleep, true);\n    }\n    setWorldPosition(value) {\n        var btColliderObject = this._btCollider;\n        btStatics.bt.btRigidBody_setCenterOfMassPos(btColliderObject, value.x, value.y, value.z);\n    }\n    destroy() {\n        this._btCollider = null;\n        Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicaStaticRigidBody, -1);\n    }\n}\n","import { Collision } from \"../../d3/physics/Collision\";\nimport { ContactPoint } from \"../../d3/physics/ContactPoint\";\nimport { HitResult } from \"../../d3/physics/HitResult\";\nexport class CollisionTool {\n    constructor() {\n        this._hitResultsPoolIndex = 0;\n        this._hitResultsPool = [];\n        this._contactPonintsPoolIndex = 0;\n        this._contactPointsPool = [];\n        this._collisionsPool = [];\n        this._collisions = {};\n    }\n    getHitResult() {\n        var hitResult = this._hitResultsPool[this._hitResultsPoolIndex++];\n        if (!hitResult) {\n            hitResult = new HitResult();\n            this._hitResultsPool.push(hitResult);\n        }\n        return hitResult;\n    }\n    recoverAllHitResultsPool() {\n        this._hitResultsPoolIndex = 0;\n    }\n    getContactPoints() {\n        var contactPoint = this._contactPointsPool[this._contactPonintsPoolIndex++];\n        if (!contactPoint) {\n            contactPoint = new ContactPoint();\n            this._contactPointsPool.push(contactPoint);\n        }\n        return contactPoint;\n    }\n    recoverAllContactPointsPool() {\n        this._contactPonintsPoolIndex = 0;\n    }\n    getCollision(physicComponentA, physicComponentB) {\n        var collision;\n        var idA = physicComponentA._id;\n        var idB = physicComponentB._id;\n        var subCollisionFirst = this._collisions[idA];\n        if (subCollisionFirst)\n            collision = subCollisionFirst[idB];\n        if (!collision) {\n            if (!subCollisionFirst) {\n                subCollisionFirst = {};\n                this._collisions[idA] = subCollisionFirst;\n            }\n            collision = this._collisionsPool.length === 0 ? new Collision() : this._collisionsPool.pop();\n            collision._colliderA = physicComponentA;\n            collision._colliderB = physicComponentB;\n            subCollisionFirst[idB] = collision;\n        }\n        return collision;\n    }\n    recoverCollision(collision) {\n        var idA = collision._colliderA._id;\n        var idB = collision._colliderB._id;\n        this._collisions[idA][idB] = null;\n        this._collisionsPool.push(collision);\n    }\n    garbageCollection() {\n        this._hitResultsPoolIndex = 0;\n        this._hitResultsPool.length = 0;\n        this._contactPonintsPoolIndex = 0;\n        this._contactPointsPool.length = 0;\n        this._collisionsPool.length = 0;\n        for (var subCollisionsKey in this._collisionsPool) {\n            var subCollisions = this._collisionsPool[subCollisionsKey];\n            var wholeDelete = true;\n            for (var collisionKey in subCollisions) {\n                if (subCollisions[collisionKey])\n                    wholeDelete = false;\n                else\n                    delete subCollisions[collisionKey];\n            }\n            if (wholeDelete)\n                delete this._collisionsPool[subCollisionsKey];\n        }\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { Physics3DStatInfo } from \"../../interface/Physics3DStatInfo\";\nimport { EJointCapable } from \"../../physicsEnum/EJointCapable\";\nimport { EPhysicsStatisticsInfo } from \"../../physicsEnum/EPhysicsStatisticsInfo\";\nimport { btStatics } from \"../btStatics\";\nexport class btJoint {\n    static __init__() {\n        btJoint.initJointCapable();\n    }\n    static initJointCapable() {\n        btJoint._jointCapableMap = new Map();\n        btJoint._jointCapableMap.set(EJointCapable.Joint_Anchor, true);\n        btJoint._jointCapableMap.set(EJointCapable.Joint_ConnectAnchor, true);\n    }\n    static getJointCapable(value) {\n        return btJoint._jointCapableMap.get(value);\n    }\n    constructor(manager) {\n        this._getJointFeedBack = false;\n        this._disableCollisionsBetweenLinkedBodies = false;\n        this._anchor = new Vector3(0);\n        this._connectAnchor = new Vector3(0);\n        this._currentForce = new Vector3();\n        this._currentTorque = new Vector3;\n        this._manager = manager;\n        this.initJoint();\n        Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicsJoint, 1);\n    }\n    _createJoint() {\n    }\n    destroy() {\n        Physics3DStatInfo.addStatisticsInfo(EPhysicsStatisticsInfo.C_PhysicsJoint, -1);\n    }\n    setCollider(collider) {\n        if (collider == this._collider)\n            return;\n        this._collider = collider;\n        this._createJoint();\n    }\n    setConnectedCollider(collider) {\n        if (collider == this._connectCollider)\n            return;\n        if (collider) {\n            this._connectOwner = collider.owner;\n        }\n        this._connectCollider = collider;\n        this._createJoint();\n    }\n    setLocalPos(pos) {\n        let bt = btStatics.bt;\n        this._anchor = pos;\n        bt.btVector3_setValue(this._btTempVector30, this._anchor.x, this._anchor.y, this._anchor.z);\n        bt.btVector3_setValue(this._btTempVector31, this._connectAnchor.x, this._connectAnchor.y, this._connectAnchor.z);\n        bt.btTransform_setOrigin(this._btTempTrans0, this._btTempVector30);\n        bt.btTransform_setOrigin(this._btTempTrans1, this._btTempVector31);\n    }\n    setConnectLocalPos(pos) {\n        let bt = btStatics.bt;\n        this._connectAnchor = pos;\n        bt.btVector3_setValue(this._btTempVector30, this._anchor.x, this._anchor.y, this._anchor.z);\n        bt.btVector3_setValue(this._btTempVector31, this._connectAnchor.x, this._connectAnchor.y, this._connectAnchor.z);\n        bt.btTransform_setOrigin(this._btTempTrans0, this._btTempVector30);\n        bt.btTransform_setOrigin(this._btTempTrans1, this._btTempVector31);\n    }\n    getlinearForce() {\n        throw new NotImplementedError();\n    }\n    getAngularForce() {\n        throw new NotImplementedError();\n    }\n    isValid() {\n        throw new NotImplementedError();\n    }\n    isEnable(value) {\n        btStatics.bt.btTypedConstraint_setEnabled(this._btJoint, value);\n    }\n    isCollision(value) {\n        this._disableCollisionsBetweenLinkedBodies = !value;\n        this._createJoint();\n    }\n    initJoint() {\n        let bt = btStatics.bt;\n        this._breakForce = -1;\n        this._breakTorque = -1;\n        this._btTempVector30 = bt.btVector3_create(0, 0, 0);\n        this._btTempVector31 = bt.btVector3_create(0, 0, 0);\n        this._btTempTrans0 = bt.btTransform_create();\n        this._btTempTrans1 = bt.btTransform_create();\n        bt.btTransform_setIdentity(this._btTempTrans0);\n        bt.btTransform_setOrigin(this._btTempTrans0, this._btTempVector30);\n        bt.btTransform_setIdentity(this._btTempTrans1);\n        bt.btTransform_setOrigin(this._btTempTrans1, this._btTempVector31);\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    _isBreakConstrained() {\n        this._getJointFeedBack = false;\n        if (this._breakForce == -1 && this._breakTorque == -1)\n            return false;\n        this._btFeedBackInfo();\n        var isBreakForce = this._breakForce != -1 && (Vector3.scalarLength(this._currentForce) > this._breakForce);\n        var isBreakTorque = this._breakTorque != -1 && (Vector3.scalarLength(this._currentTorque) > this._breakTorque);\n        if (isBreakForce || isBreakTorque) {\n            this.setConnectedCollider(null);\n            return true;\n        }\n        return false;\n    }\n    _btFeedBackInfo() {\n        var bt = btStatics.bt;\n        var applyForce = bt.btJointFeedback_getAppliedForceBodyA(this._btJointFeedBackObj);\n        var applyTorque = bt.btJointFeedback_getAppliedTorqueBodyA(this._btJointFeedBackObj);\n        this._currentTorque.setValue(bt.btVector3_x(applyTorque), bt.btVector3_y(applyTorque), bt.btVector3_z(applyTorque));\n        this._currentForce.setValue(bt.btVector3_x(applyForce), bt.btVector3_y(applyForce), bt.btVector3_z(applyForce));\n        this._getJointFeedBack = true;\n    }\n    setConnectedMassScale(value) {\n        throw new NotImplementedError();\n    }\n    setConnectedInertiaScale(value) {\n        throw new NotImplementedError();\n    }\n    setMassScale(value) {\n        throw new NotImplementedError();\n    }\n    setInertiaScale(value) {\n        throw new NotImplementedError();\n    }\n    setBreakForce(value) {\n        this._breakForce = value;\n    }\n    setBreakTorque(value) {\n        this._breakTorque = value;\n    }\n}\nbtJoint.CONSTRAINT_POINT2POINT_CONSTRAINT_TYPE = 3;\nbtJoint.CONSTRAINT_HINGE_CONSTRAINT_TYPE = 4;\nbtJoint.CONSTRAINT_CONETWIST_CONSTRAINT_TYPE = 5;\nbtJoint.CONSTRAINT_D6_CONSTRAINT_TYPE = 6;\nbtJoint.CONSTRAINT_SLIDER_CONSTRAINT_TYPE = 7;\nbtJoint.CONSTRAINT_CONTACT_CONSTRAINT_TYPE = 8;\nbtJoint.CONSTRAINT_D6_SPRING_CONSTRAINT_TYPE = 9;\nbtJoint.CONSTRAINT_GEAR_CONSTRAINT_TYPE = 10;\nbtJoint.CONSTRAINT_FIXED_CONSTRAINT_TYPE = 11;\nbtJoint.CONSTRAINT_MAX_CONSTRAINT_TYPE = 12;\nbtJoint.CONSTRAINT_CONSTRAINT_ERP = 1;\nbtJoint.CONSTRAINT_CONSTRAINT_STOP_ERP = 2;\nbtJoint.CONSTRAINT_CONSTRAINT_CFM = 3;\nbtJoint.CONSTRAINT_CONSTRAINT_STOP_CFM = 4;\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { D6Axis, D6Drive, D6MotionType } from \"../../interface/Joint/ID6Joint\";\nimport { btStatics } from \"../btStatics\";\nimport { btJoint } from \"./btJoint\";\nexport class btCustomJoint extends btJoint {\n    initJoint() {\n        super.initJoint();\n        this._btAxis = btStatics.bt.btVector3_create(-1.0, 0.0, 0.0);\n        this._btsceondAxis = btStatics.bt.btVector3_create(0.0, 1.0, 0.0);\n    }\n    _createJoint() {\n        let bt = btStatics.bt;\n        this._manager && this._manager.removeJoint(this);\n        if (this._collider && this._connectCollider) {\n            this._btJoint = bt.btGeneric6DofSpring2Constraint_create(this._collider._btCollider, this._btTempTrans0, this._connectCollider._btCollider, this._btTempTrans1, 0);\n            this._btJointFeedBackObj = bt.btJointFeedback_create(this._btJoint);\n            bt.btTypedConstraint_setJointFeedback(this._btJoint, this._btJointFeedBackObj);\n            bt.btTypedConstraint_setEnabled(this._btJoint, true);\n            this._initAllConstraintInfo();\n            this._manager && this._manager.addJoint(this);\n        }\n    }\n    _initAllConstraintInfo() {\n        this.setMotion(D6Axis.eLOCKED, D6MotionType.eX);\n        this.setMotion(D6Axis.eLOCKED, D6MotionType.eY);\n        this.setMotion(D6Axis.eLOCKED, D6MotionType.eZ);\n        this.setMotion(D6Axis.eLOCKED, D6MotionType.eTWIST);\n        this.setMotion(D6Axis.eLOCKED, D6MotionType.eSWING1);\n        this.setMotion(D6Axis.eLOCKED, D6MotionType.eSWING2);\n    }\n    constructor(manager) {\n        super(manager);\n        this._minAngularXLimit = 0;\n        this._maxAngularXLimit = 0;\n        this._minAngularYLimit = 0;\n        this._maxAngularYLimit = 0;\n        this._minAngularZLimit = 0;\n        this._maxAngularZLimit = 0;\n        this._minLinearLimit = 0;\n        this._maxLinearLimit = 0;\n        this._linearXMotion = D6Axis.eFREE;\n        this._linearYMotion = D6Axis.eFREE;\n        this._linearZMotion = D6Axis.eFREE;\n        this._angularXMotion = D6Axis.eFREE;\n        this._angularYMotion = D6Axis.eFREE;\n        this._angularZMotion = D6Axis.eFREE;\n        this._axis = new Vector3(1, 0, 0);\n        this._secondAxis = new Vector3(0, 1, 0);\n        this._btAxis = 0;\n        this._btsceondAxis = 0;\n    }\n    setEquilibriumPoint(axis, equilibriumPoint) {\n        btStatics.bt.btGeneric6DofSpring2Constraint_setEquilibriumPoint(this._btJoint, axis, equilibriumPoint);\n    }\n    setLocalPos(pos) {\n        super.setLocalPos(pos);\n        this._btJoint && btStatics.bt.btGeneric6DofSpring2Constraint_setFrames(this._btJoint, this._btTempTrans0, this._btTempTrans1);\n    }\n    setConnectLocalPos(pos) {\n        super.setConnectLocalPos(pos);\n        this._btJoint && btStatics.bt.btGeneric6DofSpring2Constraint_setFrames(this._btJoint, this._btTempTrans0, this._btTempTrans1);\n    }\n    setAxis(axis, secendary) {\n        var bt = btStatics.bt;\n        this._axis.setValue(axis.x, axis.y, axis.y);\n        this._secondAxis.setValue(secendary.x, secendary.y, secendary.z);\n        this._btAxis = bt.btVector3_setValue(-axis.x, axis.y, axis.z);\n        this._btsceondAxis = bt.btVector3_setValue(-secendary.x, secendary.y, secendary.z);\n        bt.btGeneric6DofSpring2Constraint_setAxis(this._btJoint, this._btAxis, this._btsceondAxis);\n    }\n    _setLimit(axis, motionType, low, high) {\n        let lowLimit = 0;\n        let maxLimit = 0;\n        if (motionType == D6MotionType.eX || motionType == D6MotionType.eY || motionType == D6MotionType.eZ) {\n            lowLimit = this._minLinearLimit;\n            maxLimit = this._maxLinearLimit;\n        }\n        else {\n            if (motionType == D6MotionType.eTWIST) {\n                lowLimit = this._minAngularXLimit;\n                maxLimit = this._maxAngularXLimit;\n            }\n            else if (motionType == D6MotionType.eSWING1) {\n                lowLimit = this._minAngularYLimit;\n                maxLimit = this._maxAngularYLimit;\n            }\n            else if (motionType == D6MotionType.eSWING2) {\n                lowLimit = this._minAngularZLimit;\n                maxLimit = this._maxAngularZLimit;\n            }\n        }\n        let bt = btStatics.bt;\n        if (axis == D6Axis.eFREE) {\n            bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, motionType, 1, 0);\n        }\n        else if (axis == D6Axis.eLIMITED) {\n            bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, motionType, lowLimit, maxLimit);\n        }\n        else if (axis == D6Axis.eLOCKED) {\n            bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, motionType, 0, 0);\n        }\n    }\n    _setSpring(axis, motionType, springValue, limitIfNeeded = true) {\n        let bt = btStatics.bt;\n        var enableSpring = springValue > 0 && axis == D6Axis.eLIMITED;\n        bt.btGeneric6DofSpring2Constraint_enableSpring(this._btJoint, motionType, enableSpring);\n        if (enableSpring)\n            bt.btGeneric6DofSpring2Constraint_setStiffness(this._btJoint, motionType, springValue, limitIfNeeded);\n    }\n    _setBounce(axis, motionType, bounce) {\n        if (axis == D6Axis.eLIMITED) {\n            bounce = bounce <= 0 ? 0 : bounce;\n            btStatics.bt.btGeneric6DofSpring2Constraint_setBounce(this._btJoint, motionType, bounce);\n        }\n    }\n    _setDamp(axis, motionType, damp, limitIfNeeded = true) {\n        if (axis == D6Axis.eLIMITED) {\n            damp = damp <= 0 ? 0 : damp;\n            btStatics.bt.btGeneric6DofSpring2Constraint_setDamping(this._btJoint, motionType, damp, limitIfNeeded);\n        }\n    }\n    setMotion(axis, motionType) {\n        switch (motionType) {\n            case D6MotionType.eX:\n                this._linearXMotion = axis;\n                break;\n            case D6MotionType.eY:\n                this._linearYMotion = axis;\n                break;\n            case D6MotionType.eZ:\n                this._linearZMotion = axis;\n                break;\n            case D6MotionType.eTWIST:\n                this._angularXMotion = axis;\n                break;\n            case D6MotionType.eSWING1:\n                this._angularYMotion = axis;\n                break;\n            case D6MotionType.eSWING2:\n                this._angularZMotion = axis;\n                break;\n            default:\n                break;\n        }\n        this._setLimit(axis, motionType);\n    }\n    setDistanceLimit(limit, bounceness, bounceThreshold, spring, damp) {\n        this._minLinearLimit = -limit;\n        this._maxLinearLimit = limit;\n        this._setLimit(this._linearXMotion, D6MotionType.eX);\n        this._setLimit(this._linearYMotion, D6MotionType.eY);\n        this._setLimit(this._linearZMotion, D6MotionType.eZ);\n        this._setSpring(this._linearXMotion, D6MotionType.eX, spring);\n        this._setSpring(this._linearYMotion, D6MotionType.eX, spring);\n        this._setSpring(this._linearZMotion, D6MotionType.eX, spring);\n        this._setBounce(this._linearXMotion, D6MotionType.eX, bounceness);\n        this._setBounce(this._linearYMotion, D6MotionType.eY, bounceness);\n        this._setBounce(this._linearZMotion, D6MotionType.eZ, bounceness);\n        this._setDamp(this._linearXMotion, D6MotionType.eX, damp);\n        this._setDamp(this._linearYMotion, D6MotionType.eY, damp);\n        this._setDamp(this._linearZMotion, D6MotionType.eZ, damp);\n    }\n    setLinearLimit(linearAxis, upper, lower, bounceness, bounceThreshold, spring, damping) {\n        this._minLinearLimit = lower;\n        this._maxLinearLimit = upper;\n        this._setLimit(this._linearXMotion, linearAxis);\n        this._setLimit(this._linearYMotion, linearAxis);\n        this._setLimit(this._linearZMotion, linearAxis);\n        this._setSpring(this._linearXMotion, linearAxis, spring);\n        this._setSpring(this._linearYMotion, linearAxis, spring);\n        this._setSpring(this._linearZMotion, linearAxis, spring);\n        this._setBounce(this._linearXMotion, linearAxis, bounceness);\n        this._setBounce(this._linearYMotion, linearAxis, bounceness);\n        this._setBounce(this._linearZMotion, linearAxis, bounceness);\n        this._setDamp(this._linearXMotion, linearAxis, damping);\n        this._setDamp(this._linearYMotion, linearAxis, damping);\n        this._setDamp(this._linearZMotion, linearAxis, damping);\n    }\n    setTwistLimit(upper, lower, bounceness, bounceThreshold, spring, damping) {\n        this._minAngularYLimit = lower / Math.PI * 180;\n        this._maxAngularYLimit = upper / Math.PI * 180;\n        this._setLimit(this._angularXMotion, D6MotionType.eTWIST);\n        this._setLimit(this._angularYMotion, D6MotionType.eSWING1);\n        this._setLimit(this._angularZMotion, D6MotionType.eSWING2);\n        this._setSpring(this._angularXMotion, D6MotionType.eTWIST, spring);\n        this._setSpring(this._angularYMotion, D6MotionType.eSWING1, spring);\n        this._setSpring(this._angularZMotion, D6MotionType.eSWING2, spring);\n        this._setBounce(this._angularXMotion, D6MotionType.eTWIST, bounceness);\n        this._setBounce(this._angularYMotion, D6MotionType.eSWING1, bounceness);\n        this._setBounce(this._angularZMotion, D6MotionType.eSWING2, bounceness);\n        this._setDamp(this._angularXMotion, D6MotionType.eTWIST, damping);\n        this._setDamp(this._angularYMotion, D6MotionType.eSWING1, damping);\n        this._setDamp(this._angularZMotion, D6MotionType.eSWING2, damping);\n    }\n    setSwingLimit(yAngle, zAngle, bounceness, bounceThreshold, spring, damping) {\n        this._minAngularYLimit = -yAngle / Math.PI * 180;\n        this._maxAngularYLimit = yAngle / Math.PI * 180;\n        this._minAngularZLimit = -zAngle / Math.PI * 180;\n        this._maxAngularZLimit = zAngle / Math.PI * 180;\n        this._setLimit(this._angularXMotion, D6MotionType.eTWIST);\n        this._setLimit(this._angularYMotion, D6MotionType.eSWING1);\n        this._setLimit(this._angularZMotion, D6MotionType.eSWING2);\n        this._setSpring(this._angularXMotion, D6MotionType.eTWIST, spring);\n        this._setSpring(this._angularYMotion, D6MotionType.eSWING1, spring);\n        this._setSpring(this._angularZMotion, D6MotionType.eSWING2, spring);\n        this._setBounce(this._angularXMotion, D6MotionType.eTWIST, bounceness);\n        this._setBounce(this._angularYMotion, D6MotionType.eSWING1, bounceness);\n        this._setBounce(this._angularZMotion, D6MotionType.eSWING2, bounceness);\n        this._setDamp(this._angularXMotion, D6MotionType.eTWIST, damping);\n        this._setDamp(this._angularYMotion, D6MotionType.eSWING1, damping);\n        this._setDamp(this._angularZMotion, D6MotionType.eSWING2, damping);\n    }\n    setDrive(index, stiffness, damping, forceLimit) {\n        btStatics.bt.btGeneric6DofSpring2Constraint_enableMotor(this._btJoint, index, true);\n    }\n    setDriveTransform(position, rotate) {\n        let axis = D6Drive.eY;\n    }\n    setDriveVelocity(position, angular) {\n        let bt = btStatics.bt;\n        let axis = D6Drive.eX;\n        bt.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btJoint, axis, position.x);\n        axis = D6Drive.eY;\n        bt.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btJoint, axis, position.y);\n        axis = D6Drive.eZ;\n        bt.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btJoint, axis, position.z);\n        axis = D6Drive.eX;\n        bt.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btJoint, axis, angular.x);\n        axis = D6Drive.eY;\n        bt.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btJoint, axis, angular.y);\n        axis = D6Drive.eZ;\n        bt.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btJoint, axis, angular.z);\n    }\n    getTwistAngle() {\n        throw new NotImplementedError();\n    }\n    getSwingYAngle() {\n        throw new NotImplementedError();\n    }\n    getSwingZAngle() {\n        throw new NotImplementedError();\n    }\n    destroy() {\n        this._btJoint = null;\n        this._btJointFeedBackObj = null;\n        super.destroy();\n    }\n}\n","import { btStatics } from \"../btStatics\";\nimport { btJoint } from \"./btJoint\";\nexport class btFixedJoint extends btJoint {\n    constructor(manager) {\n        super(manager);\n    }\n    _createJoint() {\n        let bt = btStatics.bt;\n        this._manager && this._manager.removeJoint(this);\n        if (this._collider && this._connectCollider) {\n            this._btJoint = bt.btFixedConstraint_create(this._collider._btCollider, this._btTempTrans0, this._connectCollider._btCollider, this._btTempTrans1, 0);\n            this._btJointFeedBackObj = bt.btJointFeedback_create(this._btJoint);\n            bt.btTypedConstraint_setJointFeedback(this._btJoint, this._btJointFeedBackObj);\n            bt.btTypedConstraint_setEnabled(this._btJoint, true);\n            this._manager.addJoint(this);\n        }\n    }\n    destroy() {\n        this._btJoint = null;\n        this._btJointFeedBackObj = null;\n        super.destroy();\n    }\n}\n","import { NotImplementedError } from \"../../../utils/Error\";\nimport { btStatics } from \"../btStatics\";\nimport { btJoint } from \"./btJoint\";\nexport class btHingeJoint extends btJoint {\n    _createJoint() {\n        var bt = btStatics.bt;\n        this._manager && this._manager.removeJoint(this);\n        if (this._collider && this._connectCollider) {\n            this._btJoint = bt.btGeneric6DofSpring2Constraint_create(this._collider._btCollider, this._btTempTrans0, this._connectCollider._btCollider, this._btTempTrans1, 0);\n            this._btJointFeedBackObj = bt.btJointFeedback_create(this._btJoint);\n            bt.btTypedConstraint_setJointFeedback(this._btJoint, this._btJointFeedBackObj);\n            bt.btTypedConstraint_setEnabled(this._btJoint, true);\n            this._initJointConstraintInfo();\n            this._manager.addJoint(this);\n        }\n    }\n    _initJointConstraintInfo() {\n        let bt = btStatics.bt;\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btHingeJoint.ANGULAR_X, 0, 0);\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btHingeJoint.ANGULAR_Y, 0, 0);\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btHingeJoint.ANGULAR_Z, 0, 0);\n    }\n    constructor(manager) {\n        super(manager);\n        this._uperLimit = 0;\n        this._lowerLimit = 1;\n        this._angularAxis = 0;\n        this._enableLimit = false;\n        this._enableDrive = false;\n    }\n    setLocalPos(pos) {\n        super.setLocalPos(pos);\n        this._btJoint && btStatics.bt.btGeneric6DofSpring2Constraint_setFrames(this._btJoint, this._btTempTrans0, this._btTempTrans1);\n    }\n    setConnectLocalPos(pos) {\n        super.setConnectLocalPos(pos);\n        this._btJoint && btStatics.bt.btGeneric6DofSpring2Constraint_setFrames(this._btJoint, this._btTempTrans0, this._btTempTrans1);\n    }\n    setLowerLimit(lowerLimit) {\n        if (!this._btJoint)\n            return;\n        if (lowerLimit == this._lowerLimit)\n            return;\n        this._lowerLimit = lowerLimit / Math.PI * 180;\n        btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, this._lowerLimit, this._uperLimit);\n    }\n    setUpLimit(value) {\n        if (!this._btJoint)\n            return;\n        if (value == this._uperLimit)\n            return;\n        this._uperLimit = value / Math.PI * 180;\n        btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, this._lowerLimit, this._uperLimit);\n    }\n    setBounceness(value) {\n        if (!this._btJoint)\n            return;\n        value = value <= 0 ? 0 : value;\n        btStatics.bt.btGeneric6DofSpring2Constraint_setBounce(this._btJoint, this._angularAxis, value);\n    }\n    setBouncenMinVelocity(value) {\n    }\n    setContactDistance(value) {\n        throw new NotImplementedError();\n    }\n    enableLimit(value) {\n        this._enableLimit = value;\n    }\n    enableDrive(value) {\n        this._enableDrive = value;\n        btStatics.bt.btGeneric6DofSpring2Constraint_enableMotor(this._btJoint, this._angularAxis, value);\n    }\n    enableFreeSpin(value) {\n    }\n    setAxis(value) {\n        if (value.x == 1) {\n            this._angularAxis = btHingeJoint.ANGULAR_X;\n            if (this._enableLimit) {\n                btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, this._lowerLimit, this._uperLimit);\n            }\n            else {\n                btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, 1, 0);\n            }\n        }\n        if (value.y == 1) {\n            this._angularAxis = btHingeJoint.ANGULAR_Y;\n            if (this._enableLimit) {\n                btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, this._lowerLimit, this._uperLimit);\n            }\n            else {\n                btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, 1, 0);\n            }\n        }\n        if (value.z == 1) {\n            this._angularAxis = btHingeJoint.ANGULAR_Z;\n            if (this._enableLimit) {\n                btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, this._lowerLimit, this._uperLimit);\n            }\n            else {\n                btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, this._angularAxis, 1, 0);\n            }\n        }\n    }\n    setSwingOffset(value) {\n        throw new NotImplementedError();\n    }\n    getAngle() {\n        throw new NotImplementedError();\n    }\n    getVelocity() {\n        throw new NotImplementedError();\n    }\n    setHardLimit(lowerLimit, upperLimit, contactDist) {\n        throw new NotImplementedError();\n    }\n    setSoftLimit(lowerLimit, upperLimit, stiffness, damping) {\n        throw new NotImplementedError();\n    }\n    setDriveVelocity(velocity) {\n        btStatics.bt.btGeneric6DofSpring2Constraint_setTargetVelocity(this._btJoint, this._angularAxis, velocity);\n    }\n    setDriveForceLimit(limit) {\n        throw new NotImplementedError();\n    }\n    setDriveGearRatio(ratio) {\n        throw new NotImplementedError();\n    }\n    setHingeJointFlag(flag, value) {\n        throw new NotImplementedError();\n    }\n    destroy() {\n        this._btJoint = null;\n        this._btJointFeedBackObj = null;\n        super.destroy();\n    }\n}\nbtHingeJoint.ANGULAR_X = 3;\nbtHingeJoint.ANGULAR_Y = 4;\nbtHingeJoint.ANGULAR_Z = 5;\n","import { NotImplementedError } from \"../../../utils/Error\";\nimport { btStatics } from \"../btStatics\";\nimport { btJoint } from \"./btJoint\";\nexport class btSpringJoint extends btJoint {\n    _createJoint() {\n        var bt = btStatics.bt;\n        this._manager && this._manager.removeJoint(this);\n        if (this._collider && this._connectCollider) {\n            this._btJoint = bt.btGeneric6DofSpring2Constraint_create(this._collider._btCollider, this._btTempTrans0, this._connectCollider._btCollider, this._btTempTrans1, 0);\n            this._btJointFeedBackObj = bt.btJointFeedback_create(this._btJoint);\n            bt.btTypedConstraint_setJointFeedback(this._btJoint, this._btJointFeedBackObj);\n            bt.btTypedConstraint_setEnabled(this._btJoint, true);\n            this._initJointConstraintInfo();\n            this._manager.addJoint(this);\n        }\n    }\n    _initJointConstraintInfo() {\n        let bt = btStatics.bt;\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.ANGULARSPRING_AXIS_X, 0, 0);\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.ANGULARSPRING_AXIS_Y, 0, 0);\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.ANGULARSPRING_AXIS_Z, 0, 0);\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_X, 0, 0);\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_Y, 0, 0);\n        bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_Z, 0, 0);\n    }\n    constructor(manager) {\n        super(manager);\n        this._minDistance = 0;\n        this._maxDistance = Number.MAX_VALUE;\n    }\n    setLocalPos(pos) {\n        super.setLocalPos(pos);\n        this._btJoint && btStatics.bt.btGeneric6DofSpring2Constraint_setFrames(this._btJoint, this._btTempTrans0, this._btTempTrans1);\n    }\n    setConnectLocalPos(pos) {\n        super.setConnectLocalPos(pos);\n        this._btJoint && btStatics.bt.btGeneric6DofSpring2Constraint_setFrames(this._btJoint, this._btTempTrans0, this._btTempTrans1);\n    }\n    setSwingOffset(value) {\n        throw new NotImplementedError();\n    }\n    setMinDistance(distance) {\n        if (!this._btJoint)\n            return;\n        if (distance == this._minDistance) {\n            return;\n        }\n        this._minDistance = distance;\n        btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_Y, this._minDistance, this._maxDistance);\n    }\n    setMaxDistance(distance) {\n        if (!this._btJoint)\n            return;\n        if (distance == this._maxDistance) {\n            return;\n        }\n        this._maxDistance = distance;\n        btStatics.bt.btGeneric6DofSpring2Constraint_setLimit(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_Y, this._minDistance, this._maxDistance);\n    }\n    setTolerance(tolerance) {\n    }\n    setStiffness(stiffness) {\n        var bt = btStatics.bt;\n        var enableSpring = stiffness > 0;\n        bt.btGeneric6DofSpring2Constraint_enableSpring(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_Y, enableSpring);\n        if (enableSpring)\n            bt.btGeneric6DofSpring2Constraint_setStiffness(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_Y, stiffness, true);\n    }\n    setDamping(damping) {\n        if (!this._btJoint)\n            return;\n        damping = damping <= 0 ? 0 : damping;\n        btStatics.bt.btGeneric6DofSpring2Constraint_setDamping(this._btJoint, btSpringJoint.LINEARSPRING_AXIS_Y, damping, true);\n    }\n    destroy() {\n        this._btJoint = null;\n        this._btJointFeedBackObj = null;\n        super.destroy();\n    }\n}\nbtSpringJoint.LINEARSPRING_AXIS_X = 0;\nbtSpringJoint.LINEARSPRING_AXIS_Y = 1;\nbtSpringJoint.LINEARSPRING_AXIS_Z = 2;\nbtSpringJoint.ANGULARSPRING_AXIS_X = 3;\nbtSpringJoint.ANGULARSPRING_AXIS_Y = 4;\nbtSpringJoint.ANGULARSPRING_AXIS_Z = 5;\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { btStatics } from \"../btStatics\";\nimport { btColliderShape } from \"./btColliderShape\";\nexport class btBoxColliderShape extends btColliderShape {\n    constructor() {\n        super();\n        this._size = new Vector3(0.5, 0.5, 0.5);\n        this._btSize = btStatics.bt.btVector3_create(0, 0, 0);\n    }\n    changeBoxShape() {\n        if (this._btShape) {\n            btStatics.bt.btCollisionShape_destroy(this._btShape);\n        }\n        this._createShape();\n    }\n    _createShape() {\n        btStatics.bt.btVector3_setValue(this._btSize, this._size.x / 2, this._size.y / 2, this._size.z / 2);\n        this._btShape = btStatics.bt.btBoxShape_create(this._btSize);\n    }\n    _getType() {\n        return this._type = btColliderShape.SHAPETYPES_BOX;\n    }\n    setSize(size) {\n        if (this._btShape && size.equal(this._size)) {\n            return;\n        }\n        this._size.setValue(size.x, size.y, size.z);\n        this.changeBoxShape();\n    }\n    destroy() {\n        super.destroy();\n        this._size = null;\n        this._btSize = null;\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { btStatics } from \"../btStatics\";\nimport { btColliderShape } from \"./btColliderShape\";\nexport class btCapsuleColliderShape extends btColliderShape {\n    constructor() {\n        super();\n        this._radius = 0.25;\n        this._length = 1;\n        this._orientation = btColliderShape.SHAPEORIENTATION_UPY;\n    }\n    _createShape() {\n        let bt = btStatics.bt;\n        if (this._btShape) {\n            bt.btCollisionShape_destroy(this._btShape);\n        }\n        switch (this._orientation) {\n            case btColliderShape.SHAPEORIENTATION_UPX:\n                this._btShape = bt.btCapsuleShapeX_create(this._radius, this._length - this._radius * 2);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPY:\n                this._btShape = bt.btCapsuleShape_create(this._radius, this._length - this._radius * 2);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPZ:\n                this._btShape = bt.btCapsuleShapeZ_create(this._radius, this._length - this._radius * 2);\n                break;\n            default:\n                throw \"CapsuleColliderShape:unknown orientation.\";\n        }\n    }\n    _getType() {\n        return this._type = btColliderShape.SHAPETYPES_CAPSULE;\n    }\n    setRadius(radius) {\n        if (this._btShape && this._radius == radius)\n            return;\n        this._radius = radius;\n        this._createShape();\n    }\n    setHeight(height) {\n        if (this._btShape && this._length == height)\n            return;\n        this._length = height;\n        this._createShape();\n    }\n    setUpAxis(upAxis) {\n        if (this._btShape && this._orientation == upAxis)\n            return;\n        this._orientation = upAxis;\n        this._createShape();\n    }\n    setWorldScale(scale) {\n        var fixScale = btCapsuleColliderShape._tempVector30;\n        switch (this._orientation) {\n            case btColliderShape.SHAPEORIENTATION_UPX:\n                fixScale.x = scale.x;\n                fixScale.y = fixScale.z = Math.max(scale.y, scale.z);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPY:\n                fixScale.y = scale.y;\n                fixScale.x = fixScale.z = Math.max(scale.x, scale.z);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPZ:\n                fixScale.z = scale.z;\n                fixScale.x = fixScale.y = Math.max(scale.x, scale.y);\n                break;\n            default:\n                throw \"CapsuleColliderShape:unknown orientation.\";\n        }\n        super.setWorldScale(fixScale);\n    }\n    destroy() {\n        super.destroy();\n        this._radius = null;\n        this._length = null;\n        this._orientation = null;\n    }\n}\nbtCapsuleColliderShape._tempVector30 = new Vector3();\n","import { btStatics } from \"../btStatics\";\nimport { btColliderShape } from \"./btColliderShape\";\nexport class btCompoundColliderShape extends btColliderShape {\n    constructor() {\n        super();\n        this._childColliderShapes = [];\n        let bt = btStatics.bt;\n        this._btVector3One = bt.btVector3_create(1, 1, 1);\n        this._btTransform = bt.btTransform_create();\n        this._btOffset = bt.btVector3_create(0, 0, 0);\n        this._btRotation = bt.btQuaternion_create(0, 0, 0, 1);\n        this._btShape = bt.btCompoundShape_create();\n    }\n    clearChildShape() {\n        throw new Error(\"Method not implemented.\");\n    }\n    _getType() {\n        return this._type = btColliderShape.SHAPETYPES_COMPOUND;\n    }\n    addChildShape(shape) {\n        var offset = shape.getOffset();\n        var bt = btStatics.bt;\n        bt.btVector3_setValue(this._btOffset, offset.x, offset.y, offset.z);\n        bt.btQuaternion_setValue(this._btRotation, 0, 0, 0, 1);\n        bt.btTransform_setOrigin(this._btTransform, this._btOffset);\n        bt.btTransform_setRotation(this._btTransform, this._btRotation);\n        var btScale = bt.btCollisionShape_getLocalScaling(this._btShape);\n        bt.btCollisionShape_setLocalScaling(this._btShape, this._btVector3One);\n        let childShape = shape.getPhysicsShape();\n        childShape && bt.btCompoundShape_addChildShape(this._btShape, this._btTransform, childShape);\n        bt.btCollisionShape_setLocalScaling(this._btShape, btScale);\n    }\n    removeChildShape(shape, index) {\n        let bt = btStatics.bt;\n        bt.btCompoundShape_removeChildShapeByIndex(this._btShape, index);\n    }\n    setShapeData(component) {\n        this._physicsComponent = component;\n    }\n    getChildShapeCount() {\n        return this._childColliderShapes.length;\n    }\n    destroy() {\n        super.destroy();\n        this._btRotation = null;\n        this._btTransform = null;\n        this._btVector3One = null;\n        this._btOffset = null;\n    }\n}\n","import { btStatics } from \"../btStatics\";\nimport { btColliderShape } from \"./btColliderShape\";\nexport class btConeColliderShape extends btColliderShape {\n    constructor() {\n        super();\n        this._radius = 0.25;\n        this._length = 1;\n        this._orientation = btColliderShape.SHAPEORIENTATION_UPY;\n    }\n    _createShape() {\n        let bt = btStatics.bt;\n        if (this._btShape) {\n            bt.btCollisionShape_destroy(this._btShape);\n        }\n        switch (this._orientation) {\n            case btColliderShape.SHAPEORIENTATION_UPX:\n                this._btShape = bt.btConeShapeX_create(this._radius, this._length);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPY:\n                this._btShape = bt.btConeShape_create(this._radius, this._length);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPZ:\n                this._btShape = bt.btConeShapeZ_create(this._radius, this._length);\n                break;\n            default:\n                throw \"CapsuleColliderShape:unknown orientation.\";\n        }\n    }\n    _getType() {\n        return this._type = btColliderShape.SHAPETYPES_CONE;\n    }\n    setRadius(radius) {\n        if (this._btShape && this._radius == radius)\n            return;\n        this._radius = radius;\n        this._createShape();\n    }\n    setHeight(height) {\n        if (this._btShape && this._length == height)\n            return;\n        this._length = height;\n        this._createShape();\n    }\n    setUpAxis(upAxis) {\n        if (this._btShape && this._orientation == upAxis)\n            return;\n        this._orientation = upAxis;\n        this._createShape();\n    }\n    destroy() {\n        super.destroy();\n        this._radius = null;\n        this._length = null;\n        this._orientation = null;\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { btStatics } from \"../btStatics\";\nimport { btColliderShape } from \"./btColliderShape\";\nexport class btCylinderColliderShape extends btColliderShape {\n    constructor() {\n        super();\n        this._radius = 0.25;\n        this._length = 1;\n        this._orientation = btColliderShape.SHAPEORIENTATION_UPY;\n        this._btSize = btStatics.bt.btVector3_create(0, 0, 0);\n    }\n    _createShape() {\n        let bt = btStatics.bt;\n        if (this._btShape) {\n            bt.btCollisionShape_destroy(this._btShape);\n        }\n        switch (this._orientation) {\n            case btColliderShape.SHAPEORIENTATION_UPX:\n                bt.btVector3_setValue(this._btSize, this._length / 2, this._radius, this._radius);\n                this._btShape = bt.btCylinderShapeX_create(this._btSize);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPY:\n                bt.btVector3_setValue(this._btSize, this._radius, this._length / 2, this._radius);\n                this._btShape = bt.btCylinderShape_create(this._btSize);\n                break;\n            case btColliderShape.SHAPEORIENTATION_UPZ:\n                bt.btVector3_setValue(this._btSize, this._radius, this._radius, this._length / 2);\n                this._btShape = bt.btCylinderShapeZ_create(this._btSize);\n                break;\n            default:\n                throw \"CapsuleColliderShape:unknown orientation.\";\n        }\n    }\n    _getType() {\n        return this._type = btColliderShape.SHAPETYPES_CYLINDER;\n    }\n    setRadius(radius) {\n        if (this._btShape && this._radius == radius)\n            return;\n        this._radius = radius;\n        this._createShape();\n    }\n    setHeight(height) {\n        if (this._btShape && this._length == height)\n            return;\n        this._length = height;\n        this._createShape();\n    }\n    setUpAxis(upAxis) {\n        if (this._btShape && this._orientation == upAxis)\n            return;\n        this._orientation = upAxis;\n        this._createShape();\n    }\n    destroy() {\n        super.destroy();\n        this._radius = null;\n        this._length = null;\n        this._orientation = null;\n    }\n}\nbtCylinderColliderShape._tempVector30 = new Vector3();\n","import { btStatics } from \"../btStatics\";\nimport { btColliderShape } from \"./btColliderShape\";\nexport class btSphereColliderShape extends btColliderShape {\n    constructor() {\n        super();\n        this._radius = -1;\n    }\n    _getType() {\n        return this._type = btColliderShape.SHAPETYPES_SPHERE;\n    }\n    _createShape() {\n        if (this._btShape) {\n            btStatics.bt.btCollisionShape_destroy(this._btShape);\n        }\n        this._btShape = btStatics.bt.btSphereShape_create(this._radius);\n    }\n    setRadius(radius) {\n        if (this._btShape && this._radius == radius)\n            return;\n        this._radius = radius;\n        this._createShape();\n    }\n    destroy() {\n        super.destroy();\n        this._radius = null;\n    }\n}\n","import { btCollider } from \"./Collider/btCollider\";\nexport class BulletInteractive {\n    constructor(mem, dbgline) {\n        this.drawLine = (sx, sy, sz, ex, ey, ez, color) => {\n            if (!this.dbgLine)\n                return;\n            this.dbgLine.color(color);\n            this.dbgLine.line(sx, sy, sz, ex, ey, ez);\n        };\n        this.clearLine = () => {\n            if (!this.dbgLine)\n                return;\n            this.dbgLine.clear();\n        };\n        this.jslog = (ptr, len) => {\n            if (!this.mem)\n                return;\n            let td = new TextDecoder();\n            let str = new Uint8Array(this.mem.buffer, ptr, len);\n            let jsstr = td.decode(str);\n            console.log(jsstr);\n        };\n        this.mem = mem;\n        this.dbgLine = dbgline;\n    }\n    getWorldTransform(rigidBodyID, worldTransPointer) {\n    }\n    setWorldTransform(rigidBodyID, worldTransPointer) {\n        var rigidBody = btCollider._physicObjectsMap[rigidBodyID];\n        rigidBody._physicsManager._updatedRigidbodies++;\n        rigidBody._updateTransformComponent(worldTransPointer);\n    }\n}\n","import { Vector3 } from \"../../maths/Vector3\";\nimport { btCollider, btColliderType } from \"./Collider/btCollider\";\nimport { CollisionTool } from \"./CollisionTool\";\nimport { Event } from \"../../events/Event\";\nimport { EPhysicsCapable } from \"../physicsEnum/EPhycisCapable\";\nimport { Physics3DUtils } from \"../../d3/utils/Physics3DUtils\";\nimport { PhysicsUpdateList } from \"../../d3/physics/PhysicsUpdateList\";\nimport { NotImplementedError } from \"../../utils/Error\";\nimport { btStatics } from \"./btStatics\";\nexport class btPhysicsManager {\n    static init() {\n        let bt = btStatics.bt;\n        btPhysicsManager._btTempVector30 = bt.btVector3_create(0, 0, 0);\n        btPhysicsManager._btTempVector31 = bt.btVector3_create(0, 0, 0);\n        btPhysicsManager._btTempQuaternion0 = bt.btQuaternion_create(0, 0, 0, 1);\n        btPhysicsManager._btTempQuaternion1 = bt.btQuaternion_create(0, 0, 0, 1);\n        btPhysicsManager._btTempTransform0 = bt.btTransform_create();\n        btPhysicsManager._btTempTransform1 = bt.btTransform_create();\n        btPhysicsManager._tempVector30 = new Vector3();\n    }\n    constructor(physicsSettings) {\n        this.maxSubSteps = 1;\n        this.fixedTimeStep = 1.0 / 60.0;\n        this.enableCCD = false;\n        this.ccdThreshold = 0.0001;\n        this.ccdSphereRadius = 0.0001;\n        this.dt = 1 / 60;\n        this._gravity = new Vector3(0, -10, 0);\n        this._updatedRigidbodies = 0;\n        this._updateCount = 0;\n        this._previousFrameCollisions = [];\n        this._currentFrameCollisions = [];\n        this._collisionsUtils = new CollisionTool();\n        this._currentConstraint = {};\n        this._physicsUpdateList = new PhysicsUpdateList();\n        this._characters = [];\n        let bt = btStatics.bt;\n        this.maxSubSteps = physicsSettings.maxSubSteps;\n        this.fixedTimeStep = physicsSettings.fixedTimeStep;\n        this.enableCCD = physicsSettings.enableCCD;\n        this.ccdThreshold = physicsSettings.ccdThreshold;\n        this.ccdSphereRadius = physicsSettings.ccdSphereRadius;\n        this._btCollisionConfiguration = bt.btDefaultCollisionConfiguration_create();\n        this._btDispatcher = bt.btCollisionDispatcher_create(this._btCollisionConfiguration);\n        this._btBroadphase = bt.btDbvtBroadphase_create();\n        bt.btOverlappingPairCache_setInternalGhostPairCallback(bt.btDbvtBroadphase_getOverlappingPairCache(this._btBroadphase), bt.btGhostPairCallback_create());\n        var conFlags = physicsSettings.flags;\n        if (conFlags & btStatics.PHYSICSENGINEFLAGS_COLLISIONSONLY) {\n            this._btCollisionWorld = new bt.btCollisionWorld(this._btDispatcher, this._btBroadphase, this._btCollisionConfiguration);\n        }\n        else if (conFlags & btStatics.PHYSICSENGINEFLAGS_SOFTBODYSUPPORT) {\n            throw \"PhysicsSimulation:SoftBody processing is not yet available\";\n        }\n        else {\n            var solver = bt.btSequentialImpulseConstraintSolver_create();\n            this._btDiscreteDynamicsWorld = bt.btDiscreteDynamicsWorld_create(this._btDispatcher, this._btBroadphase, solver, this._btCollisionConfiguration);\n            this._btCollisionWorld = this._btDiscreteDynamicsWorld;\n        }\n        if (this._btDiscreteDynamicsWorld) {\n            this._btSolverInfo = bt.btDynamicsWorld_getSolverInfo(this._btDiscreteDynamicsWorld);\n            this._btDispatchInfo = bt.btCollisionWorld_getDispatchInfo(this._btDiscreteDynamicsWorld);\n        }\n        this._btVector3Zero = bt.btVector3_create(0, 0, 0);\n        this._btDefaultQuaternion = bt.btQuaternion_create(0, 0, 0, -1);\n        this._btClosestRayResultCallback = bt.ClosestRayResultCallback_create(this._btVector3Zero, this._btVector3Zero);\n        this._btAllHitsRayResultCallback = bt.AllHitsRayResultCallback_create(this._btVector3Zero, this._btVector3Zero);\n        this._btClosestConvexResultCallback = bt.ClosestConvexResultCallback_create(this._btVector3Zero, this._btVector3Zero);\n        this._btAllConvexResultCallback = bt.AllConvexResultCallback_create(this._btVector3Zero, this._btVector3Zero);\n        bt.btGImpactCollisionAlgorithm_RegisterAlgorithm(this._btDispatcher);\n        this.initPhysicsCapable();\n    }\n    setActiveCollider(collider, value) {\n        collider.active = value;\n        if (value) {\n            collider._physicsManager = this;\n        }\n        else {\n            collider._physicsManager = null;\n        }\n    }\n    sphereQuery(pos, radius, result, collisionmask) {\n        throw new NotImplementedError;\n    }\n    _simulate(deltaTime) {\n        this._updatedRigidbodies = 0;\n        this.dt = deltaTime;\n        if (this._btDiscreteDynamicsWorld)\n            btStatics.bt.btDiscreteDynamicsWorld_stepSimulation(this._btDiscreteDynamicsWorld, deltaTime, this.maxSubSteps, this.fixedTimeStep);\n        else\n            btStatics.bt.PerformDiscreteCollisionDetection(this._btCollisionWorld);\n        this._updateCount++;\n    }\n    _updatePhysicsTransformToRender() {\n        var elements = this._physicsUpdateList.elements;\n        for (var i = 0, n = this._physicsUpdateList.length; i < n; i++) {\n            var physicCollider = elements[i];\n            physicCollider._derivePhysicsTransformation(true);\n            physicCollider.inPhysicUpdateListIndex = -1;\n        }\n        this._physicsUpdateList.length = 0;\n    }\n    _updateCollisions() {\n        this._collisionsUtils.recoverAllContactPointsPool();\n        var previous = this._currentFrameCollisions;\n        this._currentFrameCollisions = this._previousFrameCollisions;\n        this._currentFrameCollisions.length = 0;\n        this._previousFrameCollisions = previous;\n        var loopCount = this._updateCount;\n        var bt = btStatics.bt;\n        var numManifolds = bt.btDispatcher_getNumManifolds(this._btDispatcher);\n        for (let i = 0; i < numManifolds; i++) {\n            var contactManifold = bt.btDispatcher_getManifoldByIndexInternal(this._btDispatcher, i);\n            var componentA = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(bt.btPersistentManifold_getBody0(contactManifold))];\n            var componentB = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(bt.btPersistentManifold_getBody1(contactManifold))];\n            if (componentA._id > componentB._id) {\n                let tt = componentA;\n                componentA = componentB;\n                componentB = tt;\n            }\n            var collision = null;\n            var isFirstCollision;\n            var contacts = null;\n            var isTrigger = componentA._isTrigger || componentB._isTrigger;\n            if (isTrigger) {\n                var numContacts = bt.btPersistentManifold_getNumContacts(contactManifold);\n                for (let j = 0; j < numContacts; j++) {\n                    var pt = bt.btPersistentManifold_getContactPoint(contactManifold, j);\n                    var distance = bt.btManifoldPoint_getDistance(pt);\n                    if (distance <= 0) {\n                        collision = this._collisionsUtils.getCollision(componentA, componentB);\n                        contacts = collision.contacts;\n                        isFirstCollision = collision._updateFrame !== loopCount;\n                        if (isFirstCollision) {\n                            collision._isTrigger = true;\n                            contacts.length = 0;\n                        }\n                        break;\n                    }\n                }\n            }\n            else {\n                if (componentA._enableProcessCollisions || componentB._enableProcessCollisions) {\n                    numContacts = bt.btPersistentManifold_getNumContacts(contactManifold);\n                    for (let j = 0; j < numContacts; j++) {\n                        pt = bt.btPersistentManifold_getContactPoint(contactManifold, j);\n                        distance = bt.btManifoldPoint_getDistance(pt);\n                        if (distance <= 0) {\n                            var contactPoint = this._collisionsUtils.getContactPoints();\n                            contactPoint._colliderA = componentA;\n                            contactPoint._colliderB = componentB;\n                            contactPoint.distance = distance;\n                            var btNormal = bt.btManifoldPoint_get_m_normalWorldOnB(pt);\n                            var normal = contactPoint.normal;\n                            normal.x = bt.btVector3_x(btNormal);\n                            normal.y = bt.btVector3_y(btNormal);\n                            normal.z = bt.btVector3_z(btNormal);\n                            var btPostionA = bt.btManifoldPoint_get_m_positionWorldOnA(pt);\n                            var positionOnA = contactPoint.positionOnA;\n                            positionOnA.x = bt.btVector3_x(btPostionA);\n                            positionOnA.y = bt.btVector3_y(btPostionA);\n                            positionOnA.z = bt.btVector3_z(btPostionA);\n                            var btPostionB = bt.btManifoldPoint_get_m_positionWorldOnB(pt);\n                            var positionOnB = contactPoint.positionOnB;\n                            positionOnB.x = bt.btVector3_x(btPostionB);\n                            positionOnB.y = bt.btVector3_y(btPostionB);\n                            positionOnB.z = bt.btVector3_z(btPostionB);\n                            if (!collision) {\n                                collision = this._collisionsUtils.getCollision(componentA, componentB);\n                                contacts = collision.contacts;\n                                isFirstCollision = collision._updateFrame !== loopCount;\n                                if (isFirstCollision) {\n                                    collision._isTrigger = false;\n                                    contacts.length = 0;\n                                }\n                            }\n                            contacts.push(contactPoint);\n                        }\n                    }\n                }\n            }\n            if (collision && isFirstCollision) {\n                this._currentFrameCollisions.push(collision);\n                collision._setUpdateFrame(loopCount);\n            }\n        }\n        let _characters = this._characters;\n        for (let i = 0, n = _characters.length; i < n; i++) {\n            let character = _characters[i];\n            let btkc = character._btKinematicCharacter;\n            let collisionObjs = bt.btKinematicCharacterController_AllHitInfo_get_m_collisionObjects(btkc);\n            let count = bt.tBtCollisionObjectArray_size(collisionObjs);\n            if (count > 0) {\n                for (let j = 0; j < count; j++) {\n                    let colobj = bt.tBtCollisionObjectArray_at(collisionObjs, j);\n                    if (colobj == 0)\n                        continue;\n                    let collider = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(colobj)];\n                    if (!collider)\n                        continue;\n                    let compa = character;\n                    let compb = collider;\n                    if (character._id > collider._id) {\n                        compa = collider;\n                        compb = character;\n                    }\n                    let collision = this._collisionsUtils.getCollision(compa, compb);\n                    if (collision._updateFrame === loopCount)\n                        return;\n                    let contacts = collision.contacts;\n                    contacts.length = 1;\n                    collision._setUpdateFrame(loopCount);\n                    var contactPoint = this._collisionsUtils.getContactPoints();\n                    contactPoint._colliderA = compa;\n                    contactPoint._colliderB = compb;\n                    contactPoint.distance = 0;\n                    contacts[0] = contactPoint;\n                    let isTrigger = compa._isTrigger || compb._isTrigger;\n                    collision._isTrigger = isTrigger;\n                    this._currentFrameCollisions.push(collision);\n                }\n            }\n        }\n    }\n    _collision_EnterEvent(colliderA, ownerA, colliderB, ownerB, curFrameCol) {\n        curFrameCol.other = colliderB;\n        ownerA.event(Event.COLLISION_ENTER, curFrameCol);\n        curFrameCol.other = colliderA;\n        ownerB.event(Event.COLLISION_ENTER, curFrameCol);\n    }\n    _collision_StayEvent(colliderA, ownerA, colliderB, ownerB, curFrameCol) {\n        curFrameCol.other = colliderB;\n        ownerA.event(Event.COLLISION_STAY, curFrameCol);\n        curFrameCol.other = colliderA;\n        ownerB.event(Event.COLLISION_STAY, curFrameCol);\n    }\n    _collision_ExitEvent(preColliderA, ownerA, preColliderB, ownerB, preFrameCol) {\n        preFrameCol.other = preColliderB;\n        ownerA.event(Event.COLLISION_EXIT, preFrameCol);\n        preFrameCol.other = preColliderA;\n        ownerB.event(Event.COLLISION_EXIT, preFrameCol);\n    }\n    _trigger_EnterEvent(colliderA, ownerA, colliderB, ownerB) {\n        ownerA.event(Event.TRIGGER_ENTER, colliderB);\n        ownerB.event(Event.TRIGGER_ENTER, colliderA);\n    }\n    _trigger_StayEvent(colliderA, ownerA, colliderB, ownerB) {\n        ownerA.event(Event.TRIGGER_STAY, colliderB);\n        ownerB.event(Event.TRIGGER_STAY, colliderA);\n    }\n    _trigger_ExitEvent(preColliderA, ownerA, preColliderB, ownerB) {\n        ownerA.event(Event.TRIGGER_EXIT, preColliderB);\n        ownerB.event(Event.TRIGGER_EXIT, preColliderA);\n    }\n    dispatchCollideEvent() {\n        let loopCount = this._updateCount;\n        for (let i = 0, n = this._currentFrameCollisions.length; i < n; i++) {\n            let curFrameCol = this._currentFrameCollisions[i];\n            let colliderA = curFrameCol._colliderA.component;\n            let colliderB = curFrameCol._colliderB.component;\n            if (colliderA.destroyed || colliderB.destroyed)\n                continue;\n            let ownerA = colliderA.owner;\n            let ownerB = colliderB.owner;\n            if (loopCount - curFrameCol._lastUpdateFrame === 1) {\n                if (curFrameCol._isTrigger) {\n                    this._trigger_StayEvent(colliderA, ownerA, colliderB, ownerB);\n                }\n                else {\n                    this._collision_StayEvent(colliderA, ownerA, colliderB, ownerB, curFrameCol);\n                }\n            }\n            else {\n                if (curFrameCol._isTrigger) {\n                    this._trigger_EnterEvent(colliderA, ownerA, colliderB, ownerB);\n                }\n                else {\n                    this._collision_EnterEvent(colliderA, ownerA, colliderB, ownerB, curFrameCol);\n                }\n            }\n        }\n        for (let i = 0, n = this._previousFrameCollisions.length; i < n; i++) {\n            let preFrameCol = this._previousFrameCollisions[i];\n            let preColliderA = preFrameCol._colliderA.component;\n            let preColliderB = preFrameCol._colliderB.component;\n            if (preColliderA.destroyed || preColliderB.destroyed)\n                continue;\n            let ownerA = preColliderA.owner;\n            let ownerB = preColliderB.owner;\n            if (loopCount - preFrameCol._updateFrame === 1) {\n                this._collisionsUtils.recoverCollision(preFrameCol);\n                if (preFrameCol._isTrigger) {\n                    this._trigger_ExitEvent(preColliderA, ownerA, preColliderB, ownerB);\n                }\n                else {\n                    this._collision_ExitEvent(preColliderA, ownerA, preColliderB, ownerB, preFrameCol);\n                }\n            }\n        }\n        for (let id in this._currentConstraint) {\n            let constraintObj = this._currentConstraint[id];\n            if (constraintObj._isBreakConstrained()) {\n                let bodya = constraintObj.owner;\n                let bodyb = constraintObj._connectOwner;\n                bodya.event(Event.JOINT_BREAK);\n                bodyb.event(Event.JOINT_BREAK);\n            }\n        }\n    }\n    _updateCharacters() {\n        for (var i = 0, n = this._characters.length; i < n; i++) {\n            var character = this._characters[i];\n            character._updateTransformComponent(btStatics.bt.btCollisionObject_getWorldTransform(character._btCollider), false, 0.04);\n        }\n    }\n    enableDebugDrawer(value) {\n        btStatics.bt.btDynamicsWorld_enableDebugDrawer(this._btDiscreteDynamicsWorld, value);\n    }\n    getPhysicsCapable(value) {\n        return this._physicsEngineCapableMap.get(value);\n    }\n    initPhysicsCapable() {\n        this._physicsEngineCapableMap = new Map();\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_Gravity, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_StaticCollider, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_DynamicCollider, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_CharacterCollider, true);\n    }\n    setGravity(gravity) {\n        if (!this._btDiscreteDynamicsWorld)\n            throw \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\n        gravity.cloneTo(this._gravity);\n        var btGravity = btPhysicsManager._btTempVector30;\n        btStatics.bt.btVector3_setValue(btGravity, gravity.x, gravity.y, gravity.z);\n        btStatics.bt.btDiscreteDynamicsWorld_setGravity(this._btDiscreteDynamicsWorld, btGravity);\n    }\n    addCollider(collider) {\n        let btcollider = collider;\n        if (btcollider._isSimulate || !collider.active)\n            return;\n        btcollider._derivePhysicsTransformation(true);\n        switch (btcollider._type) {\n            case btColliderType.StaticCollider:\n                btStatics.bt.btCollisionWorld_addCollisionObject(this._btCollisionWorld, btcollider._btCollider, btcollider._collisionGroup, btcollider._canCollideWith);\n                break;\n            case btColliderType.RigidbodyCollider:\n                this._addRigidBody(btcollider);\n                break;\n            case btColliderType.CharactorCollider:\n                this._addCharacter(btcollider);\n                break;\n        }\n        btcollider._isSimulate = true;\n    }\n    removeCollider(collider) {\n        let btcollider = collider;\n        if (btcollider.inPhysicUpdateListIndex !== -1)\n            this._physicsUpdateList.remove(btcollider);\n        switch (btcollider._type) {\n            case btColliderType.StaticCollider:\n                btStatics.bt.btCollisionWorld_removeCollisionObject(this._btCollisionWorld, btcollider._btCollider);\n                break;\n            case btColliderType.RigidbodyCollider:\n                this._removeRigidBody(btcollider);\n                break;\n            case btColliderType.CharactorCollider:\n                this._removeCharacter(btcollider);\n                break;\n        }\n        btcollider._isSimulate = false;\n        btcollider.inScene = false;\n    }\n    addJoint(joint) {\n        if (!this._btDiscreteDynamicsWorld)\n            throw \"Cannot perform this action when the physics engine is set to CollisionsOnly\";\n        btStatics.bt.btCollisionWorld_addConstraint(this._btDiscreteDynamicsWorld, joint._btJoint, joint._disableCollisionsBetweenLinkedBodies);\n        this._currentConstraint[joint._id] = joint;\n    }\n    removeJoint(joint) {\n        if (!this._btDiscreteDynamicsWorld)\n            throw \"Cannot perform this action when the physics engine is set to CollisionsOnly\";\n        btStatics.bt.btCollisionWorld_removeConstraint(this._btDiscreteDynamicsWorld, joint._btJoint);\n        delete this._currentConstraint[joint._id];\n    }\n    update(elapsedTime) {\n        this._updatePhysicsTransformToRender();\n        btCollider._addUpdateList = false;\n        this._simulate(elapsedTime);\n        this._updateCharacters();\n        btCollider._addUpdateList = true;\n        this._updateCollisions();\n        this.dispatchCollideEvent();\n    }\n    rayCast(ray, outHitResult, distance = 2147483647, collisonGroup = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER) {\n        var from = ray.origin;\n        var to = btPhysicsManager._tempVector30;\n        Vector3.normalize(ray.direction, to);\n        Vector3.scale(to, distance, to);\n        Vector3.add(from, to, to);\n        var bt = btStatics.bt;\n        var rayResultCall = this._btClosestRayResultCallback;\n        var rayFrom = btPhysicsManager._btTempVector30;\n        var rayTo = btPhysicsManager._btTempVector31;\n        bt.btVector3_setValue(rayFrom, from.x, from.y, from.z);\n        bt.btVector3_setValue(rayTo, to.x, to.y, to.z);\n        bt.ClosestRayResultCallback_set_m_rayFromWorld(rayResultCall, rayFrom);\n        bt.ClosestRayResultCallback_set_m_rayToWorld(rayResultCall, rayTo);\n        bt.RayResultCallback_set_m_collisionFilterGroup(rayResultCall, collisonGroup);\n        bt.RayResultCallback_set_m_collisionFilterMask(rayResultCall, collisionMask);\n        bt.RayResultCallback_set_m_collisionObject(rayResultCall, null);\n        bt.RayResultCallback_set_m_closestHitFraction(rayResultCall, 1);\n        bt.btCollisionWorld_rayTest(this._btCollisionWorld, rayFrom, rayTo, rayResultCall);\n        if (bt.RayResultCallback_hasHit(rayResultCall)) {\n            if (outHitResult) {\n                outHitResult.succeeded = true;\n                outHitResult.collider = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(bt.RayResultCallback_get_m_collisionObject(rayResultCall))];\n                outHitResult.hitFraction = bt.RayResultCallback_get_m_closestHitFraction(rayResultCall);\n                var btPoint = bt.ClosestRayResultCallback_get_m_hitPointWorld(rayResultCall);\n                var point = outHitResult.point;\n                point.x = bt.btVector3_x(btPoint);\n                point.y = bt.btVector3_y(btPoint);\n                point.z = bt.btVector3_z(btPoint);\n                var btNormal = bt.ClosestRayResultCallback_get_m_hitNormalWorld(rayResultCall);\n                var normal = outHitResult.normal;\n                normal.x = bt.btVector3_x(btNormal);\n                normal.y = bt.btVector3_y(btNormal);\n                normal.z = bt.btVector3_z(btNormal);\n            }\n            return true;\n        }\n        else {\n            if (outHitResult)\n                outHitResult.succeeded = false;\n            return false;\n        }\n    }\n    rayCastAll(ray, out, distance = 2147483647, collisonGroup = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER) {\n        var from = ray.origin;\n        var to = btPhysicsManager._tempVector30;\n        Vector3.normalize(ray.direction, to);\n        Vector3.scale(to, distance, to);\n        Vector3.add(from, to, to);\n        var bt = btStatics.bt;\n        var rayResultCall = this._btAllHitsRayResultCallback;\n        var rayFrom = btPhysicsManager._btTempVector30;\n        var rayTo = btPhysicsManager._btTempVector31;\n        out.length = 0;\n        bt.btVector3_setValue(rayFrom, from.x, from.y, from.z);\n        bt.btVector3_setValue(rayTo, to.x, to.y, to.z);\n        bt.AllHitsRayResultCallback_set_m_rayFromWorld(rayResultCall, rayFrom);\n        bt.AllHitsRayResultCallback_set_m_rayToWorld(rayResultCall, rayTo);\n        bt.RayResultCallback_set_m_collisionFilterGroup(rayResultCall, collisonGroup);\n        bt.RayResultCallback_set_m_collisionFilterMask(rayResultCall, collisionMask);\n        var collisionObjects = bt.AllHitsRayResultCallback_get_m_collisionObjects(rayResultCall);\n        var btPoints = bt.AllHitsRayResultCallback_get_m_hitPointWorld(rayResultCall);\n        var btNormals = bt.AllHitsRayResultCallback_get_m_hitNormalWorld(rayResultCall);\n        var btFractions = bt.AllHitsRayResultCallback_get_m_hitFractions(rayResultCall);\n        bt.tBtCollisionObjectArray_clear(collisionObjects);\n        bt.tVector3Array_clear(btPoints);\n        bt.tVector3Array_clear(btNormals);\n        bt.tScalarArray_clear(btFractions);\n        bt.btCollisionWorld_rayTest(this._btCollisionWorld, rayFrom, rayTo, rayResultCall);\n        var count = bt.tBtCollisionObjectArray_size(collisionObjects);\n        if (count > 0) {\n            this._collisionsUtils.recoverAllHitResultsPool();\n            for (var i = 0; i < count; i++) {\n                var hitResult = this._collisionsUtils.getHitResult();\n                out.push(hitResult);\n                hitResult.succeeded = true;\n                hitResult.collider = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(bt.tBtCollisionObjectArray_at(collisionObjects, i))];\n                hitResult.hitFraction = bt.tScalarArray_at(btFractions, i);\n                var btPoint = bt.tVector3Array_at(btPoints, i);\n                var pointE = hitResult.point;\n                pointE.x = bt.btVector3_x(btPoint);\n                pointE.y = bt.btVector3_y(btPoint);\n                pointE.z = bt.btVector3_z(btPoint);\n                var btNormal = bt.tVector3Array_at(btNormals, i);\n                var normal = hitResult.normal;\n                normal.x = bt.btVector3_x(btNormal);\n                normal.y = bt.btVector3_y(btNormal);\n                normal.z = bt.btVector3_z(btNormal);\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    shapeCast(shape, fromPosition, toPosition, out, fromRotation = null, toRotation = null, collisonGroup = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, allowedCcdPenetration = 0.0) {\n        var bt = btStatics.bt;\n        var convexResultCall = this._btClosestConvexResultCallback;\n        var convexPosFrom = btPhysicsManager._btTempVector30;\n        var convexPosTo = btPhysicsManager._btTempVector31;\n        var convexRotFrom = btPhysicsManager._btTempQuaternion0;\n        var convexRotTo = btPhysicsManager._btTempQuaternion1;\n        var convexTransform = btPhysicsManager._btTempTransform0;\n        var convexTransTo = btPhysicsManager._btTempTransform1;\n        var sweepShape = shape._btShape;\n        bt.btVector3_setValue(convexPosFrom, fromPosition.x, fromPosition.y, fromPosition.z);\n        bt.btVector3_setValue(convexPosTo, toPosition.x, toPosition.y, toPosition.z);\n        bt.ConvexResultCallback_set_m_collisionFilterGroup(convexResultCall, collisonGroup);\n        bt.ConvexResultCallback_set_m_collisionFilterMask(convexResultCall, collisionMask);\n        bt.btTransform_setOrigin(convexTransform, convexPosFrom);\n        bt.btTransform_setOrigin(convexTransTo, convexPosTo);\n        if (fromRotation) {\n            bt.btQuaternion_setValue(convexRotFrom, fromRotation.x, fromRotation.y, fromRotation.z, -fromRotation.w);\n            bt.btTransform_setRotation(convexTransform, convexRotFrom);\n        }\n        else {\n            bt.btTransform_setRotation(convexTransform, this._btDefaultQuaternion);\n        }\n        if (toRotation) {\n            bt.btQuaternion_setValue(convexRotTo, toRotation.x, toRotation.y, toRotation.z, -toRotation.w);\n            bt.btTransform_setRotation(convexTransTo, convexRotTo);\n        }\n        else {\n            bt.btTransform_setRotation(convexTransTo, this._btDefaultQuaternion);\n        }\n        bt.ClosestConvexResultCallback_set_m_hitCollisionObject(convexResultCall, null);\n        bt.ConvexResultCallback_set_m_closestHitFraction(convexResultCall, 1);\n        bt.btCollisionWorld_convexSweepTest(this._btCollisionWorld, sweepShape, convexTransform, convexTransTo, convexResultCall, allowedCcdPenetration);\n        if (bt.ConvexResultCallback_hasHit(convexResultCall)) {\n            if (out) {\n                out.succeeded = true;\n                out.collider = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(bt.ClosestConvexResultCallback_get_m_hitCollisionObject(convexResultCall))];\n                out.hitFraction = bt.ConvexResultCallback_get_m_closestHitFraction(convexResultCall);\n                var btPoint = bt.ClosestConvexResultCallback_get_m_hitPointWorld(convexResultCall);\n                var btNormal = bt.ClosestConvexResultCallback_get_m_hitNormalWorld(convexResultCall);\n                var point = out.point;\n                var normal = out.normal;\n                point.x = -bt.btVector3_x(btPoint);\n                point.y = bt.btVector3_y(btPoint);\n                point.z = bt.btVector3_z(btPoint);\n                normal.x = -bt.btVector3_x(btNormal);\n                normal.y = bt.btVector3_y(btNormal);\n                normal.z = bt.btVector3_z(btNormal);\n            }\n            return true;\n        }\n        else {\n            if (out)\n                out.succeeded = false;\n            return false;\n        }\n    }\n    shapeCastAll(shape, fromPosition, toPosition, out, fromRotation = null, toRotation = null, collisonGroup = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, collisionMask = Physics3DUtils.COLLISIONFILTERGROUP_ALLFILTER, allowedCcdPenetration = 0.0) {\n        var bt = btStatics.bt;\n        var convexResultCall = this._btAllConvexResultCallback;\n        var convexPosFrom = btPhysicsManager._btTempVector30;\n        var convexPosTo = btPhysicsManager._btTempVector31;\n        var convexRotFrom = btPhysicsManager._btTempQuaternion0;\n        var convexRotTo = btPhysicsManager._btTempQuaternion1;\n        var convexTransform = btPhysicsManager._btTempTransform0;\n        var convexTransTo = btPhysicsManager._btTempTransform1;\n        var sweepShape = shape._btShape;\n        out.length = 0;\n        bt.btVector3_setValue(convexPosFrom, fromPosition.x, fromPosition.y, fromPosition.z);\n        bt.btVector3_setValue(convexPosTo, toPosition.x, toPosition.y, toPosition.z);\n        bt.ConvexResultCallback_set_m_collisionFilterGroup(convexResultCall, collisonGroup);\n        bt.ConvexResultCallback_set_m_collisionFilterMask(convexResultCall, collisionMask);\n        bt.btTransform_setOrigin(convexTransform, convexPosFrom);\n        bt.btTransform_setOrigin(convexTransTo, convexPosTo);\n        if (fromRotation) {\n            bt.btQuaternion_setValue(convexRotFrom, fromRotation.x, fromRotation.y, fromRotation.z, -fromRotation.w);\n            bt.btTransform_setRotation(convexTransform, convexRotFrom);\n        }\n        else {\n            bt.btTransform_setRotation(convexTransform, this._btDefaultQuaternion);\n        }\n        if (toRotation) {\n            bt.btQuaternion_setValue(convexRotTo, toRotation.x, toRotation.y, toRotation.z, -toRotation.w);\n            bt.btTransform_setRotation(convexTransTo, convexRotTo);\n        }\n        else {\n            bt.btTransform_setRotation(convexTransTo, this._btDefaultQuaternion);\n        }\n        var collisionObjects = bt.AllConvexResultCallback_get_m_collisionObjects(convexResultCall);\n        var btPoints = bt.AllConvexResultCallback_get_m_hitPointWorld(convexResultCall);\n        var btNormals = bt.AllConvexResultCallback_get_m_hitNormalWorld(convexResultCall);\n        var btFractions = bt.AllConvexResultCallback_get_m_hitFractions(convexResultCall);\n        bt.tVector3Array_clear(btPoints);\n        bt.tVector3Array_clear(btNormals);\n        bt.tScalarArray_clear(btFractions);\n        bt.tBtCollisionObjectArray_clear(collisionObjects);\n        bt.btCollisionWorld_convexSweepTest(this._btCollisionWorld, sweepShape, convexTransform, convexTransTo, convexResultCall, allowedCcdPenetration);\n        var count = bt.tBtCollisionObjectArray_size(collisionObjects);\n        if (count > 0) {\n            this._collisionsUtils.recoverAllHitResultsPool();\n            for (var i = 0; i < count; i++) {\n                var hitResult = this._collisionsUtils.getHitResult();\n                out.push(hitResult);\n                hitResult.succeeded = true;\n                hitResult.collider = btCollider._physicObjectsMap[bt.btCollisionObject_getUserIndex(bt.tBtCollisionObjectArray_at(collisionObjects, i))];\n                hitResult.hitFraction = bt.tScalarArray_at(btFractions, i);\n                var btPoint = bt.tVector3Array_at(btPoints, i);\n                var point = hitResult.point;\n                point.x = -bt.btVector3_x(btPoint);\n                point.y = bt.btVector3_y(btPoint);\n                point.z = bt.btVector3_z(btPoint);\n                var btNormal = bt.tVector3Array_at(btNormals, i);\n                var normal = hitResult.normal;\n                normal.x = -bt.btVector3_x(btNormal);\n                normal.y = bt.btVector3_y(btNormal);\n                normal.z = bt.btVector3_z(btNormal);\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    destroy() {\n        var bt = btStatics.bt;\n        if (this._btDiscreteDynamicsWorld) {\n            bt.btCollisionWorld_destroy(this._btDiscreteDynamicsWorld);\n            this._btDiscreteDynamicsWorld = null;\n        }\n        else {\n            bt.btCollisionWorld_destroy(this._btCollisionWorld);\n            this._btCollisionWorld = null;\n        }\n        bt.btDbvtBroadphase_destroy(this._btBroadphase);\n        this._btBroadphase = null;\n        bt.btCollisionDispatcher_destroy(this._btDispatcher);\n        this._btDispatcher = null;\n        bt.btDefaultCollisionConfiguration_destroy(this._btCollisionConfiguration);\n        this._btCollisionConfiguration = null;\n        this._physicsEngineCapableMap = null;\n    }\n    _addRigidBody(rigidBody) {\n        if (!this._btDiscreteDynamicsWorld)\n            throw \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\n        btStatics.bt.btDiscreteDynamicsWorld_addRigidBody(this._btCollisionWorld, rigidBody._btCollider, rigidBody._collisionGroup, rigidBody._canCollideWith);\n    }\n    _removeRigidBody(rigidBody) {\n        if (!this._btDiscreteDynamicsWorld)\n            throw \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\n        btStatics.bt.btDiscreteDynamicsWorld_removeRigidBody(this._btCollisionWorld, rigidBody._btCollider);\n    }\n    _addCharacter(character) {\n        var characters = this._characters;\n        let index = characters.indexOf(character);\n        if (index == -1) {\n            if (!this._btDiscreteDynamicsWorld)\n                throw \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\n            btStatics.bt.btCollisionWorld_addCollisionObject(this._btCollisionWorld, character._btCollider, character._collisionGroup, character._canCollideWith);\n            btStatics.bt.btDynamicsWorld_addAction(this._btCollisionWorld, character._btKinematicCharacter);\n            characters.push(character);\n        }\n        else {\n            characters[index] = character;\n        }\n    }\n    _removeCharacter(character) {\n        if (!this._btDiscreteDynamicsWorld)\n            throw \"Simulation:Cannot perform this action when the physics engine is set to CollisionsOnly\";\n        btStatics.bt.btCollisionWorld_removeCollisionObject(this._btCollisionWorld, character._btCollider);\n        btStatics.bt.btDynamicsWorld_removeAction(this._btCollisionWorld, character._btKinematicCharacter);\n        var characters = this._characters;\n        characters.splice(characters.indexOf(character), 1);\n    }\n}\n","import { Config3D } from \"../../../Config3D\";\nimport { Laya3D } from \"../../../Laya3D\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { PrimitiveMesh } from \"../../d3/resource/models/PrimitiveMesh\";\nimport { NotImplementedError } from \"../../utils/Error\";\nimport { EPhysicsCapable } from \"../physicsEnum/EPhycisCapable\";\nimport { btCharacterCollider } from \"./Collider/btCharacterCollider\";\nimport { btCollider } from \"./Collider/btCollider\";\nimport { btRigidBodyCollider } from \"./Collider/btRigidBodyCollider\";\nimport { btStaticCollider } from \"./Collider/btStaticCollider\";\nimport { btCustomJoint } from \"./Joint/btCustomJoint\";\nimport { btFixedJoint } from \"./Joint/btFixedJoint\";\nimport { btHingeJoint } from \"./Joint/btHingeJoint\";\nimport { btSpringJoint } from \"./Joint/btSpringJoint\";\nimport { btBoxColliderShape } from \"./Shape/btBoxColliderShape\";\nimport { btCapsuleColliderShape } from \"./Shape/btCapsuleColliderShape\";\nimport { btCompoundColliderShape } from \"./Shape/btCompoundColliderShape\";\nimport { btConeColliderShape } from \"./Shape/btConeColliderShape\";\nimport { btCylinderColliderShape } from \"./Shape/btCylinderColliderShape\";\nimport { btMeshColliderShape } from \"./Shape/btMeshColliderShape\";\nimport { btSphereColliderShape } from \"./Shape/btSphereColliderShape\";\nimport { BulletInteractive } from \"./btInteractive\";\nimport { btPhysicsManager } from \"./btPhysicsManager\";\nimport { btStatics } from \"./btStatics\";\nexport class btPhysicsCreateUtil {\n    initPhysicsCapable() {\n        this._physicsEngineCapableMap = new Map();\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_Gravity, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_StaticCollider, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_DynamicCollider, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_CharacterCollider, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_BoxColliderShape, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_SphereColliderShape, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_CapsuleColliderShape, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_CylinderColliderShape, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_ConeColliderShape, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_MeshColliderShape, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_CompoundColliderShape, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_Joint, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_D6Joint, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_FixedJoint, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_SpringJoint, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_HingeJoint, true);\n        this._physicsEngineCapableMap.set(EPhysicsCapable.Physics_CreateCorveMesh, true);\n    }\n    getPhysicsCapable(value) {\n        return this._physicsEngineCapableMap.get(value);\n    }\n    initialize() {\n        let physics3D = window.Physics3D;\n        physics3D(Math.max(16, Config3D.defaultPhysicsMemory) * 16, new BulletInteractive(null, null)).then(() => {\n            btStatics.bt = window.Physics3D;\n            this.initPhysicsCapable();\n            btPhysicsManager.init();\n            btCollider.__init__();\n            btRigidBodyCollider.__init__();\n            btStaticCollider.__init__();\n            btCharacterCollider.__init__();\n            btMeshColliderShape.__init__();\n            return Promise.resolve();\n        });\n        return Promise.resolve();\n    }\n    createPhysicsManger(physicsSettings) {\n        return new btPhysicsManager(physicsSettings);\n    }\n    createDynamicCollider(manager) {\n        return new btRigidBodyCollider(manager);\n    }\n    createStaticCollider(manager) {\n        return new btStaticCollider(manager);\n    }\n    createCharacterController(manager) {\n        return new btCharacterCollider(manager);\n    }\n    createFixedJoint(manager) {\n        return new btFixedJoint(manager);\n    }\n    createHingeJoint(manager) {\n        return new btHingeJoint(manager);\n    }\n    createSpringJoint(manager) {\n        return new btSpringJoint(manager);\n    }\n    createD6Joint(manager) {\n        return new btCustomJoint(manager);\n    }\n    createBoxColliderShape() {\n        return new btBoxColliderShape();\n    }\n    createSphereColliderShape() {\n        return new btSphereColliderShape();\n    }\n    createCapsuleColliderShape() {\n        return new btCapsuleColliderShape();\n    }\n    createMeshColliderShape() {\n        return new btMeshColliderShape();\n    }\n    createPlaneColliderShape() {\n        throw new NotImplementedError();\n    }\n    createCylinderColliderShape() {\n        return new btCylinderColliderShape();\n    }\n    createConeColliderShape() {\n        return new btConeColliderShape();\n    }\n    createCompoundShape() {\n        return new btCompoundColliderShape();\n    }\n    createCorveMesh(mesh) {\n        if (mesh._convexMesh == null) {\n            return null;\n        }\n        let bt = btStatics.bt;\n        if (mesh.__convexMesh == null) {\n            let convexMesh = mesh._convexMesh;\n            let vertexCount = bt.btShapeHull_numVertices(convexMesh);\n            let indexCount = bt.btShapeHull_numIndices(convexMesh);\n            var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION\");\n            var vertexFloatStride = vertexDeclaration.vertexStride / 4;\n            var vertice = new Float32Array(vertexCount * vertexFloatStride);\n            let triangles = [];\n            for (var i = 0; i < vertexCount; i++) {\n                let index = i * 3;\n                let vector3 = bt.btShapeHull_getVertexPointer(convexMesh, i);\n                vertice[index] = bt.btVector3_x(vector3);\n                vertice[index + 1] = bt.btVector3_y(vector3);\n                vertice[index + 2] = bt.btVector3_z(vector3);\n            }\n            for (var i = 0; i < indexCount; i++) {\n                triangles.push(bt.btShapeHull_getIndexPointer(convexMesh, i));\n            }\n            mesh.__convexMesh = PrimitiveMesh._createMesh(vertexDeclaration, vertice, new Uint16Array(triangles));\n        }\n        return mesh.__convexMesh;\n    }\n}\nLaya3D.PhysicsCreateUtil = new btPhysicsCreateUtil();\n"],"names":["btColliderType","NotImplementedError","Transform3D","Vector3","Physics3DStatInfo","EPhysicsStatisticsInfo","ECharacterCapable","EColliderCapable","PhysicsForceMode","HitResult","ContactPoint","Collision","EJointCapable","D6Axis","D6MotionType","D6Drive","PhysicsUpdateList","Event","EPhysicsCapable","Physics3DUtils","Config3D","VertexMesh","PrimitiveMesh","Laya3D"],"mappings":"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"}