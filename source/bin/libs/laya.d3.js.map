{"version":3,"file":"laya.d3.js","sources":["../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/Design/RenderState.js","../../bin/tsc/layaAir/laya/d3/core/material/BlinnPhongMaterial.js","../../bin/tsc/layaAir/laya/d3/core/material/PBRRenderQuality.js","../../bin/tsc/layaAir/laya/d3/shader/pbr/BRDF.glsl","../../bin/tsc/layaAir/laya/d3/shader/pbr/pbrGI.glsl","../../bin/tsc/layaAir/laya/d3/shader/pbr/pbrCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/pbr/pbrVertex.glsl","../../bin/tsc/layaAir/laya/d3/shader/pbr/pbrFrag.glsl","../../bin/tsc/layaAir/laya/d3/shader/pbr/pbrMetallicFrag.glsl","../../bin/tsc/layaAir/laya/d3/shader/pbr/PBRDefaultDFG.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/ShaderData.js","../../bin/tsc/layaAir/laya/d3/shader/pbr/PBRShaderLib.js","../../bin/tsc/layaAir/laya/d3/core/material/PBRMaterial.js","../../bin/tsc/layaAir/laya/d3/core/material/PBRStandardMaterial.js","../../bin/tsc/layaAir/laya/d3/core/material/SkyBoxMaterial.js","../../bin/tsc/layaAir/laya/d3/core/material/SkyProceduralMaterial.js","../../bin/tsc/layaAir/laya/d3/core/material/UnlitMaterial.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/Design/3D/I3DRenderModuleData.js","../../bin/tsc/layaAir/laya/d3/RenderObjs/Laya3DRender.js","../../bin/tsc/layaAir/laya/d3/core/MeshSprite3DShaderDeclaration.js","../../bin/tsc/layaAir/laya/d3/resource/models/MeshUtil.js","../../bin/tsc/layaAir/laya/d3/core/MeshFilter.js","../../bin/tsc/layaAir/laya/d3/core/Sprite3D.js","../../bin/tsc/layaAir/laya/d3/core/RenderableSprite3D.js","../../bin/tsc/layaAir/laya/d3/math/Bounds.js","../../bin/tsc/layaAir/laya/d3/component/Volume/Volume.js","../../bin/tsc/layaAir/laya/d3/component/Volume/reflectionProbe/ReflectionProbeManager.js","../../bin/tsc/layaAir/laya/d3/component/Volume/VolumetricGI/VolumetricGI.js","../../bin/tsc/layaAir/laya/d3/component/Volume/VolumetricGI/VolumetricGIManager.js","../../bin/tsc/layaAir/laya/d3/component/Volume/VolumeManager.js","../../bin/tsc/layaAir/laya/d3/core/scene/AmbientMode.js","../../bin/tsc/layaAir/laya/d3/component/Volume/reflectionProbe/ReflectionProbe.js","../../bin/tsc/layaAir/laya/d3/core/render/Sprite3DRenderDeclaration.js","../../bin/tsc/layaAir/laya/d3/core/render/BaseRender.js","../../bin/tsc/layaAir/laya/d3/core/render/RenderElement.js","../../bin/tsc/layaAir/laya/d3/core/render/SubMeshRenderElement.js","../../bin/tsc/layaAir/laya/d3/core/MeshRenderer.js","../../bin/tsc/layaAir/laya/d3/core/MeshSprite3D.js","../../bin/tsc/layaAir/laya/d3/core/pixelLine/PixelLineVertex.js","../../bin/tsc/layaAir/laya/d3/core/render/command/Command.js","../../bin/tsc/layaAir/laya/d3/core/render/RenderContext3D.js","../../bin/tsc/layaAir/laya/d3/resource/TextureGenerator.js","../../bin/tsc/layaAir/laya/d3/utils/Utils3D.js","../../bin/tsc/layaAir/laya/d3/graphics/renderPath/Cluster.js","../../bin/tsc/layaAir/laya/d3/physics/PhysicsSettings.js","../../bin/tsc/layaAir/laya/d3/core/Transform3D.js","../../bin/tsc/layaAir/laya/d3/core/GeometryElement.js","../../bin/tsc/layaAir/laya/d3/resource/models/SkyBox.js","../../bin/tsc/layaAir/laya/d3/graphics/Vertex/VertexPositionTexture.js","../../bin/tsc/layaAir/laya/d3/resource/models/SkyDome.js","../../bin/tsc/layaAir/laya/d3/resource/models/SkyRenderer.js","../../bin/tsc/layaAir/laya/d3/core/render/SkyRenderElement.js","../../bin/tsc/layaAir/laya/d3/core/BaseCamera.js","../../bin/tsc/layaAir/laya/d3/core/light/LightQueue.js","../../bin/tsc/layaAir/laya/d3/core/scene/Lightmap.js","../../bin/tsc/layaAir/laya/d3/core/scene/Scene3DShaderDeclaration.js","../../bin/tsc/layaAir/laya/d3/core/light/ShadowCascadesMode.js","../../bin/tsc/layaAir/laya/d3/math/Plane.js","../../bin/tsc/layaAir/laya/d3/math/Ray.js","../../bin/tsc/layaAir/laya/d3/math/ContainmentType.js","../../bin/tsc/layaAir/laya/d3/math/CollisionUtils.js","../../bin/tsc/layaAir/laya/d3/math/BoundFrustum.js","../../bin/tsc/layaAir/laya/d3/core/light/ShadowMode.js","../../bin/tsc/layaAir/laya/d3/core/light/Light.js","../../bin/tsc/layaAir/laya/d3/core/light/ShadowUtils.js","../../bin/tsc/layaAir/laya/d3/shadowMap/ShadowCasterPass.js","../../bin/tsc/layaAir/laya/d3/depthMap/DepthPass.js","../../bin/tsc/layaAir/laya/d3/utils/Picker.js","../../bin/tsc/layaAir/laya/d3/core/render/command/geometry/ScreenQuad.js","../../bin/tsc/layaAir/laya/d3/core/render/command/BlitScreenQuadCMD.js","../../bin/tsc/layaAir/laya/d3/core/render/command/SetShaderDataCMD.js","../../bin/tsc/layaAir/laya/d3/core/render/command/DrawMeshCMD.js","../../bin/tsc/layaAir/laya/d3/core/render/command/DrawRenderCMD.js","../../bin/tsc/layaAir/laya/d3/core/render/command/SetGlobalShaderDataCMD.js","../../bin/tsc/layaAir/laya/d3/graphics/MeshInstanceGeometry.js","../../bin/tsc/layaAir/laya/d3/core/render/command/DrawMeshInstancedCMD.js","../../bin/tsc/layaAir/laya/d3/core/render/command/SetRenderTargetCMD.js","../../bin/tsc/layaAir/laya/d3/core/render/command/DrawRenderElemenetCMD.js","../../bin/tsc/layaAir/laya/d3/core/render/command/CommandBuffer.js","../../bin/tsc/layaAir/laya/d3/core/Camera.js","../../bin/tsc/layaAir/laya/d3/core/render/command/BlitFrameBufferCMD.js","../../bin/tsc/layaAir/laya/d3/core/scene/SceneRenderManager.js","../../bin/tsc/layaAir/laya/d3/core/UI3D/UI3DManager.js","../../bin/tsc/layaAir/laya/d3/core/scene/Scene3D.js","../../bin/tsc/layaAir/laya/d3/graphics/SubMeshInstanceBatch.js","../../bin/tsc/layaAir/laya/d3/core/render/InstanceRenderElement.js","../../bin/tsc/layaAir/laya/d3/resource/models/SubMesh.js","../../bin/tsc/layaAir/laya/Physics3D/physicsEnum/EPhycisCapable.js","../../bin/tsc/layaAir/laya/d3/resource/models/Mesh.js","../../bin/tsc/layaAir/laya/d3/resource/models/PrimitiveMesh.js","../../bin/tsc/layaAir/laya/d3/shader/utils/Utils.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/OutputTransform.glsl","../../bin/tsc/layaAir/laya/d3/shader/utils/BakedBoneMatrixSampler.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/MorphTarget.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/VertexCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/ShadingCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/ShadingVertex.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/ShadingFrag.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/SceneCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/CameraCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/SkyCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/Sprite3DCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/Sprite3DVertex.glsl","../../bin/tsc/layaAir/laya/d3/shader/common/Sprite3DFrag.glsl","../../bin/tsc/layaAir/laya/d3/shader/depth/DepthVertex.glsl","../../bin/tsc/layaAir/laya/d3/shader/depth/DepthFrag.glsl","../../bin/tsc/layaAir/laya/d3/shader/depth/DepthNormalUtil.glsl","../../bin/tsc/layaAir/laya/d3/shader/depth/DepthNormalFrag.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/ShadowCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/ShadowSampleTent.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/ShadowSampler.glsl","../../bin/tsc/layaAir/laya/d3/shader/utils/SceneFog.glsl","../../bin/tsc/layaAir/laya/d3/shader/utils/SceneFogInput.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/Lighting.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/globalIllumination.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/volumetricGI/Oct.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/volumetricGI/GridHelpers.glsl","../../bin/tsc/layaAir/laya/d3/shader/lighting/volumetricGI/VolumetricGI.glsl","../../bin/tsc/layaAir/laya/d3/shader/lightingmode/BlinnPhongLighting.glsl","../../bin/tsc/layaAir/laya/d3/shader/lightingmode/PBRLighting.glsl","../../bin/tsc/layaAir/laya/d3/shader/postprocess/BlitScreen.vs","../../bin/tsc/layaAir/laya/d3/shader/postprocess/BlitScreen.fs","../../bin/tsc/layaAir/laya/d3/shader/postprocess/FastApproximateAntiAliasing.glsl","../../bin/tsc/layaAir/laya/d3/shader/postprocess/BlitScreenShaderInit.js","../../bin/tsc/layaAir/laya/d3/shader/unlit/Unlit.vs","../../bin/tsc/layaAir/laya/d3/shader/unlit/Unlit.fs","../../bin/tsc/layaAir/laya/d3/shader/depth/Depth.vs","../../bin/tsc/layaAir/laya/d3/shader/depth/Depth.fs","../../bin/tsc/layaAir/laya/d3/shader/unlit/UnlitShaderInit.js","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhongCommon.glsl","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhongVertex.glsl","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhongFrag.glsl","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhong.vs","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhong.fs","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhongDepthNormal.vs","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhongDepthNormal.fs","../../bin/tsc/layaAir/laya/d3/shader/blinnphong/BlinnPhongShaderInit.js","../../bin/tsc/layaAir/laya/d3/shader/pbr/pbrStandard.vs","../../bin/tsc/layaAir/laya/d3/shader/pbr/pbrStandard.fs","../../bin/tsc/layaAir/laya/d3/shader/pbr/PBRStandardDepthNormal.vs","../../bin/tsc/layaAir/laya/d3/shader/pbr/PBRStandardDepthNormal.fs","../../bin/tsc/layaAir/laya/d3/shader/pbr/PBRStandardShaderInit.js","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyBox.vs","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyBox.fs","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyBoxShaderInit.js","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyProceduralShader.vs","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyProceduralShader.fs","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyProceduralShaderInit.js","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyPanoramic.vs","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyPanoramic.fs","../../bin/tsc/layaAir/laya/d3/shader/sky/SkyPanoramicShaderInit.js","../../bin/tsc/layaAir/laya/d3/shader/ShaderInit3D.js","../../bin/tsc/layaAir/laya/d3/core/SkinnedMeshSprite3DShaderDeclaration.js","../../bin/tsc/layaAir/laya/d3/core/render/SkinRenderElement.js","../../bin/tsc/layaAir/laya/d3/core/SkinnedMeshRenderer.js","../../bin/tsc/layaAir/laya/d3/core/SimpleSkinnedMeshRenderer.js","../../bin/tsc/layaAir/laya/d3/core/SimpleSkinnedMeshSprite3D.js","../../bin/tsc/layaAir/laya/d3/core/material/SkyPanoramicMaterial.js","../../bin/tsc/layaAir/laya/d3/core/pixelLine/PixelLineMaterial.js","../../bin/tsc/layaAir/laya/Physics3D/physicsEnum/EPhysicsStatisticsInfo.js","../../bin/tsc/layaAir/laya/Physics3D/interface/Physics3DStatInfo.js","../../bin/tsc/layaAir/laya/d3/core/render/postProcessBase/PostProcessRenderContext.js","../../bin/tsc/layaAir/laya/d3/core/render/postProcessBase/PostProcess.js","../../bin/tsc/layaAir/Laya3D.js","../../bin/tsc/layaAir/laya/Physics3D/interface/Joint/ID6Joint.js","../../bin/tsc/layaAir/laya/Physics3D/physicsEnum/ECharacterCapable.js","../../bin/tsc/layaAir/laya/Physics3D/physicsEnum/EColliderCapable.js","../../bin/tsc/layaAir/laya/Physics3D/physicsEnum/EJointCapable.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/3DRenderPass/IRender3DCMD.js","../../bin/tsc/layaAir/laya/d3/graphics/IndexBuffer3D.js","../../bin/tsc/layaAir/laya/d3/graphics/VertexBuffer3D.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/3DRenderPass/LengencyRenderEngine3DFactory.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/CommandUniformMap.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/IRenderCMD.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferBlock.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferCluster.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferManager.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferAlone.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverDesign/RenderDevice/UniformBufferManager/UniformBufferUser.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/Design/ShaderDefine.js","../../bin/tsc/layaAir/laya/d3/animation/KeyframeNode.js","../../bin/tsc/layaAir/laya/d3/animation/AnimationEvent.js","../../bin/tsc/layaAir/laya/d3/animation/AnimationClipParser03.js","../../bin/tsc/layaAir/laya/d3/component/Animator/KeyframeNodeOwner.js","../../bin/tsc/layaAir/laya/d3/animation/AnimationClipParser04.js","../../bin/tsc/layaAir/laya/d3/animation/KeyframeNodeList.js","../../bin/tsc/layaAir/laya/d3/animation/AnimationClip.js","../../bin/tsc/layaAir/laya/d3/core/light/LightSprite.js","../../bin/tsc/layaAir/laya/d3/core/material/EffectMaterial.js","../../bin/tsc/layaAir/laya/d3/core/material/ExtendTerrainMaterial.js","../../bin/tsc/layaAir/laya/d3/core/SkinnedMeshSprite3D.js","../../bin/tsc/layaAir/laya/d3/graphics/SphericalHarmonicsL2.js","../../bin/tsc/layaAir/laya/d3/math/BoundBox.js","../../bin/tsc/layaAir/laya/d3/core/light/DirectionLightCom.js","../../bin/tsc/layaAir/laya/d3/core/light/PointLightCom.js","../../bin/tsc/layaAir/laya/d3/core/light/SpotLightCom.js","../../bin/tsc/layaAir/laya/d3/core/light/AreaLightCom.js","../../bin/tsc/layaAir/laya/d3/component/LODGroup.js","../../bin/tsc/layaAir/laya/d3/core/pixelLine/PixelLineData.js","../../bin/tsc/layaAir/laya/d3/core/pixelLine/PixelLineFilter.js","../../bin/tsc/layaAir/laya/d3/core/pixelLine/PixelLineRenderer.js","../../bin/tsc/layaAir/laya/d3/component/Animator/AnimatorPlayState.js","../../bin/tsc/layaAir/laya/d3/component/Animator/AnimatorControllerLayer.js","../../bin/tsc/layaAir/laya/d3/component/Animator/AnimatorResource.js","../../bin/tsc/layaAir/laya/d3/component/Animator/Animator.js","../../bin/tsc/layaAir/laya/d3/component/Animator/AnimatorState.js","../../bin/tsc/layaAir/laya/d3/component/Animator/AvatarMask.js","../../bin/tsc/layaAir/laya/d3/core/render/postProcessBase/PostProcessEffect.js","../../bin/tsc/layaAir/laya/d3/component/Animator/AnimatorTransition.js","../../bin/tsc/layaAir/laya/d3/component/Animator/AnimatorController.js","../../bin/tsc/layaAir/laya/d3/core/render/BatchMark.js","../../bin/tsc/layaAir/laya/d3/graphics/Batch/InstanceBatchManager.js","../../bin/tsc/layaAir/laya/d3/component/Volume/BatchVolume/BatchRender.js","../../bin/tsc/layaAir/laya/d3/component/Volume/BatchVolume/StaticInstanceBatchRender.js","../../bin/tsc/layaAir/laya/d3/component/Volume/BatchVolume/StatiVertexMergeBatchRender.js","../../bin/tsc/layaAir/laya/d3/component/Volume/BatchVolume/StaticBatchVolume.js","../../bin/tsc/layaAir/laya/d3/core/UI3D/UI3DGeometry.js","../../bin/tsc/layaAir/laya/d3/core/UI3D/UI3D.js","../../bin/tsc/layaAir/laya/d3/loaders/AnimationClipLoader.js","../../bin/tsc/layaAir/laya/d3/loaders/CubemapLoader.js","../../bin/tsc/layaAir/laya/d3/loaders/Texture2DArrayLoader.js","../../bin/tsc/layaAir/laya/d3/loaders/AvatarMaskLoader.js","../../bin/tsc/layaAir/laya/d3/loaders/AnimationControllerLoader.js","../../bin/tsc/layaAir/laya/d3/physics/HitResult.js","../../bin/tsc/layaAir/laya/d3/core/scene/Input3D.js","../../bin/tsc/layaAir/laya/d3/loaders/LoadModelV04.js","../../bin/tsc/layaAir/laya/d3/resource/models/MorphTarget.js","../../bin/tsc/layaAir/laya/d3/resource/models/MorphTargetData.js","../../bin/tsc/layaAir/laya/d3/loaders/LoadModelV05.js","../../bin/tsc/layaAir/laya/d3/loaders/MeshReader.js","../../bin/tsc/layaAir/laya/d3/ModuleDef.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRCamera.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRRenderTexture.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRSessionManager.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRCameraManager.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRGamepad.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRInput.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRInputManager.js","../../bin/tsc/layaAir/laya/d3/WebXR/core/WebXRExperienceHelper.js","../../bin/tsc/layaAir/laya/d3/animation/AnimatorStateScript.js","../../bin/tsc/layaAir/laya/d3/component/HLOD/HLODRender.js","../../bin/tsc/layaAir/laya/d3/component/HLOD/HLOD.js","../../bin/tsc/layaAir/laya/d3/component/HLOD/HLODBatchMesh.js","../../bin/tsc/layaAir/laya/d3/component/HLOD/HLODUtil.js","../../bin/tsc/layaAir/laya/d3/component/Script3D.js","../../bin/tsc/layaAir/laya/d3/component/staticmesh/StaticBatchSubMesh.js","../../bin/tsc/layaAir/laya/d3/component/staticmesh/StaticBatchMesh.js","../../bin/tsc/layaAir/laya/d3/component/staticmesh/StaticBatchMeshRenderElement.js","../../bin/tsc/layaAir/laya/d3/component/staticmesh/StaticBatchMeshRender.js","../../bin/tsc/layaAir/laya/d3/component/staticmesh/StaticMeshMergeInfo.js","../../bin/tsc/layaAir/laya/d3/component/staticmesh/StaticMeshBatchManager.js","../../bin/tsc/layaAir/laya/d3/core/pixelLine/PixelLineSprite3D.js","../../bin/tsc/layaAir/laya/d3/core/render/command/MaterialInstanceProperty.js","../../bin/tsc/layaAir/laya/d3/core/render/command/MaterialInstancePropertyBlock.js","../../bin/tsc/layaAir/laya/d3/graphics/FrustumCulling.js","../../bin/tsc/layaAir/laya/d3/loaders/Texture3DLoader.js","../../bin/tsc/layaAir/laya/d3/math/BoundSphere.js","../../bin/tsc/layaAir/laya/d3/math/BoundsImpl.js","../../bin/tsc/layaAir/laya/d3/math/Rand.js","../../bin/tsc/layaAir/laya/d3/math/RandX.js","../../bin/tsc/layaAir/laya/d3/physics/Collision.js","../../bin/tsc/layaAir/laya/d3/physics/ContactPoint.js","../../bin/tsc/layaAir/laya/d3/shadowMap/ShadowLightType.js","../../bin/tsc/layaAir/laya/d3/shadowMap/ShadowSliceData.js","../../bin/tsc/layaAir/laya/d3/text/TextMesh.js","../../bin/tsc/layaAir/laya/d3/utils/Physics3DUtils.js","../../bin/tsc/layaAir/laya/d3/utils/Size.js"],"sourcesContent":["import { BlendEquationSeparate } from \"../../../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../../../RenderEngine/RenderEnum/BlendFactor\";\nimport { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\nimport { CompareFunction } from \"../../../RenderEngine/RenderEnum/CompareFunction\";\nimport { CullMode } from \"../../../RenderEngine/RenderEnum/CullMode\";\nimport { StencilOperation } from \"../../../RenderEngine/RenderEnum/StencilOperation\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nexport class RenderState {\n    ;\n    get cull() {\n        return this._cull;\n    }\n    set cull(value) {\n        this._cull = value;\n    }\n    get blend() {\n        return this._blend;\n    }\n    set blend(value) {\n        this._blend = value;\n    }\n    get srcBlend() {\n        return this._srcBlend;\n    }\n    set srcBlend(value) {\n        this._srcBlend = value;\n    }\n    get dstBlend() {\n        return this._dstBlend;\n    }\n    set dstBlend(value) {\n        this._dstBlend = value;\n    }\n    get srcBlendRGB() {\n        return this._srcBlendRGB;\n    }\n    set srcBlendRGB(value) {\n        this._srcBlendRGB = value;\n    }\n    get dstBlendRGB() {\n        return this._dstBlendRGB;\n    }\n    set dstBlendRGB(value) {\n        this._dstBlendRGB = value;\n    }\n    get srcBlendAlpha() {\n        return this._srcBlendAlpha;\n    }\n    set srcBlendAlpha(value) {\n        this._srcBlendAlpha = value;\n    }\n    get dstBlendAlpha() {\n        return this._dstBlendAlpha;\n    }\n    set dstBlendAlpha(value) {\n        this._dstBlendAlpha = value;\n    }\n    get blendEquation() {\n        return this._blendEquation;\n    }\n    set blendEquation(value) {\n        this._blendEquation = value;\n    }\n    get blendEquationRGB() {\n        return this._blendEquationRGB;\n    }\n    set blendEquationRGB(value) {\n        this._blendEquationRGB = value;\n    }\n    get blendEquationAlpha() {\n        return this._blendEquationAlpha;\n    }\n    set blendEquationAlpha(value) {\n        this._blendEquationAlpha = value;\n    }\n    get depthTest() {\n        return this._depthTest;\n    }\n    set depthTest(value) {\n        this._depthTest = value;\n    }\n    get depthWrite() {\n        return this._depthWrite;\n    }\n    set depthWrite(value) {\n        this._depthWrite = value;\n    }\n    get stencilWrite() {\n        return this._stencilWrite;\n    }\n    set stencilWrite(value) {\n        this._stencilWrite = value;\n    }\n    get stencilTest() {\n        return this._stencilTest;\n    }\n    set stencilTest(value) {\n        this._stencilTest = value;\n    }\n    get stencilRef() {\n        return this._stencilRef;\n    }\n    set stencilRef(value) {\n        this._stencilRef = value;\n    }\n    get stencilOp() {\n        return this._stencilOp;\n    }\n    set stencilOp(value) {\n        this._stencilOp = value;\n    }\n    createObj() {\n    }\n    constructor() {\n        this._stencilOp = new Vector3();\n        this.createObj();\n        this.cull = RenderState.CULL_BACK;\n        this.blend = RenderState.BLEND_DISABLE;\n        this.srcBlend = RenderState.BLENDPARAM_ONE;\n        this.dstBlend = RenderState.BLENDPARAM_ZERO;\n        this.srcBlendRGB = RenderState.BLENDPARAM_ONE;\n        this.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\n        this.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\n        this.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\n        this.blendEquation = RenderState.BLENDEQUATION_ADD;\n        this.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\n        this.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\n        this.depthTest = RenderState.DEPTHTEST_LEQUAL;\n        this.depthWrite = true;\n        this.stencilRef = 1;\n        this.stencilTest = RenderState.STENCILTEST_OFF;\n        this.stencilWrite = false;\n        this.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\n    }\n    setNull() {\n        this.cull = null;\n        this.blend = null;\n        this.srcBlend = null;\n        this.dstBlend = null;\n        this.srcBlendRGB = null;\n        this.dstBlendRGB = null;\n        this.srcBlendAlpha = null;\n        this.dstBlendAlpha = null;\n        this.blendEquation = null;\n        this.blendEquationRGB = null;\n        this.blendEquationAlpha = null;\n        this.depthTest = null;\n        this.depthWrite = null;\n        this.stencilRef = null;\n        this.stencilTest = null;\n        this.stencilWrite = null;\n        this.stencilOp.set(null, null, null);\n    }\n    cloneTo(dest) {\n        dest.cull = this.cull;\n        dest.blend = this.blend;\n        dest.srcBlend = this.srcBlend;\n        dest.dstBlend = this.dstBlend;\n        dest.srcBlendRGB = this.srcBlendRGB;\n        dest.dstBlendRGB = this.dstBlendRGB;\n        dest.srcBlendAlpha = this.srcBlendAlpha;\n        dest.dstBlendAlpha = this.dstBlendAlpha;\n        dest.blendEquation = this.blendEquation;\n        dest.blendEquationRGB = this.blendEquationRGB;\n        dest.blendEquationAlpha = this.blendEquationAlpha;\n        dest.depthTest = this.depthTest;\n        dest.depthWrite = this.depthWrite;\n        dest.stencilRef = this.stencilRef;\n        dest.stencilTest = this.stencilTest;\n        dest.stencilWrite = this.stencilWrite;\n        this.stencilOp.cloneTo(dest.stencilOp);\n    }\n    clone() {\n        var dest = new RenderState();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nRenderState.CULL_NONE = CullMode.Off;\nRenderState.CULL_FRONT = CullMode.Front;\nRenderState.CULL_BACK = CullMode.Back;\nRenderState.BLEND_DISABLE = BlendType.BLEND_DISABLE;\nRenderState.BLEND_ENABLE_ALL = BlendType.BLEND_ENABLE_ALL;\nRenderState.BLEND_ENABLE_SEPERATE = BlendType.BLEND_ENABLE_SEPERATE;\nRenderState.BLENDPARAM_ZERO = BlendFactor.Zero;\nRenderState.BLENDPARAM_ONE = BlendFactor.One;\nRenderState.BLENDPARAM_SRC_COLOR = BlendFactor.SourceColor;\nRenderState.BLENDPARAM_ONE_MINUS_SRC_COLOR = BlendFactor.OneMinusSourceColor;\nRenderState.BLENDPARAM_DST_COLOR = BlendFactor.DestinationColor;\nRenderState.BLENDPARAM_ONE_MINUS_DST_COLOR = BlendFactor.OneMinusDestinationColor;\nRenderState.BLENDPARAM_SRC_ALPHA = BlendFactor.SourceAlpha;\nRenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA = BlendFactor.OneMinusSourceAlpha;\nRenderState.BLENDPARAM_DST_ALPHA = BlendFactor.DestinationAlpha;\nRenderState.BLENDPARAM_ONE_MINUS_DST_ALPHA = BlendFactor.OneMinusDestinationAlpha;\nRenderState.BLENDPARAM_SRC_ALPHA_SATURATE = BlendFactor.SourceAlphaSaturate;\nRenderState.BLENDPARAM_BLENDCOLOR = BlendFactor.BlendColor;\nRenderState.BLENDPARAM_BLEND_ONEMINUS_COLOR = BlendFactor.OneMinusBlendColor;\nRenderState.BLENDEQUATION_ADD = BlendEquationSeparate.ADD;\nRenderState.BLENDEQUATION_SUBTRACT = BlendEquationSeparate.SUBTRACT;\nRenderState.BLENDEQUATION_REVERSE_SUBTRACT = BlendEquationSeparate.REVERSE_SUBTRACT;\nRenderState.BLENDEQUATION_MIN = BlendEquationSeparate.MIN;\nRenderState.BLENDEQUATION_MAX = BlendEquationSeparate.MAX;\nRenderState.DEPTHTEST_OFF = CompareFunction.Off;\nRenderState.DEPTHTEST_NEVER = CompareFunction.Never;\nRenderState.DEPTHTEST_LESS = CompareFunction.Less;\nRenderState.DEPTHTEST_EQUAL = CompareFunction.Equal;\nRenderState.DEPTHTEST_LEQUAL = CompareFunction.LessEqual;\nRenderState.DEPTHTEST_GREATER = CompareFunction.Greater;\nRenderState.DEPTHTEST_NOTEQUAL = CompareFunction.NotEqual;\nRenderState.DEPTHTEST_GEQUAL = CompareFunction.GreaterEqual;\nRenderState.DEPTHTEST_ALWAYS = CompareFunction.Always;\nRenderState.STENCILTEST_OFF = CompareFunction.Off;\nRenderState.STENCILTEST_NEVER = CompareFunction.Never;\nRenderState.STENCILTEST_LESS = CompareFunction.Less;\nRenderState.STENCILTEST_EQUAL = CompareFunction.Equal;\nRenderState.STENCILTEST_LEQUAL = CompareFunction.LessEqual;\nRenderState.STENCILTEST_GREATER = CompareFunction.Greater;\nRenderState.STENCILTEST_NOTEQUAL = CompareFunction.NotEqual;\nRenderState.STENCILTEST_GEQUAL = CompareFunction.GreaterEqual;\nRenderState.STENCILTEST_ALWAYS = CompareFunction.Always;\nRenderState.STENCILOP_KEEP = StencilOperation.Keep;\nRenderState.STENCILOP_ZERO = StencilOperation.Zero;\nRenderState.STENCILOP_REPLACE = StencilOperation.Replace;\nRenderState.STENCILOP_INCR = StencilOperation.IncrementSaturate;\nRenderState.STENCILOP_INCR_WRAP = StencilOperation.IncrementWrap;\nRenderState.STENCILOP_DECR = StencilOperation.DecrementSaturate;\nRenderState.STENCILOP_DECR_WRAP = StencilOperation.DecrementWrap;\nRenderState.STENCILOP_INVERT = StencilOperation.Invert;\nRenderState.Default = new RenderState();\n","import { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../../../resource/Material\";\nexport class BlinnPhongMaterial extends Material {\n    static __initDefine__() {\n        BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP = Shader3D.getDefineByName(\"DIFFUSEMAP\");\n        BlinnPhongMaterial.SHADERDEFINE_NORMALMAP = Shader3D.getDefineByName(\"NORMALMAP\");\n        BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP = Shader3D.getDefineByName(\"SPECULARMAP\");\n        BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\n        BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION = Shader3D.getDefineByName(\"ENABLETRANSMISSION\");\n        BlinnPhongMaterial.SHADERDEFINE_THICKNESSMAP = Shader3D.getDefineByName(\"THICKNESSMAP\");\n        BlinnPhongMaterial.ALBEDOTEXTURE = Shader3D.propertyNameToID(\"u_DiffuseTexture\");\n        BlinnPhongMaterial.NORMALTEXTURE = Shader3D.propertyNameToID(\"u_NormalTexture\");\n        BlinnPhongMaterial.SPECULARTEXTURE = Shader3D.propertyNameToID(\"u_SpecularTexture\");\n        BlinnPhongMaterial.ALBEDOCOLOR = Shader3D.propertyNameToID(\"u_DiffuseColor\");\n        BlinnPhongMaterial.MATERIALSPECULAR = Shader3D.propertyNameToID(\"u_MaterialSpecular\");\n        BlinnPhongMaterial.SHININESS = Shader3D.propertyNameToID(\"u_Shininess\");\n        BlinnPhongMaterial.TILINGOFFSET = Shader3D.propertyNameToID(\"u_TilingOffset\");\n        BlinnPhongMaterial.TRANSMISSIONRATE = Shader3D.propertyNameToID(\"u_TransmissionRate\");\n        BlinnPhongMaterial.IBACKDIFFUSE = Shader3D.propertyNameToID(\"u_BackDiffuse\");\n        BlinnPhongMaterial.IBACKSCALE = Shader3D.propertyNameToID(\"u_BackScale\");\n        BlinnPhongMaterial.THINKNESSTEXTURE = Shader3D.propertyNameToID(\"u_ThinknessTexture\");\n        BlinnPhongMaterial.TRANSMISSIONCOLOR = Shader3D.propertyNameToID(\"u_TransmissionColor\");\n        BlinnPhongMaterial.AlbedoIntensity = Shader3D.propertyNameToID(\"u_AlbedoIntensity\");\n    }\n    set renderMode(value) {\n        switch (value) {\n            case BlinnPhongMaterial.RENDERMODE_OPAQUE:\n                this.alphaTest = false;\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\n                this.depthWrite = true;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case BlinnPhongMaterial.RENDERMODE_CUTOUT:\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\n                this.alphaTest = true;\n                this.depthWrite = true;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case BlinnPhongMaterial.RENDERMODE_TRANSPARENT:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            default:\n                throw new Error(\"unknown renderMode: \" + value);\n        }\n    }\n    get enableVertexColor() {\n        return this.hasDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n    }\n    set enableVertexColor(value) {\n        if (value)\n            this.addDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n        else\n            this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n    }\n    get tilingOffset() {\n        return this.getVector4ByIndex(BlinnPhongMaterial.TILINGOFFSET);\n    }\n    set tilingOffset(value) {\n        if (value) {\n            this.setVector4ByIndex(BlinnPhongMaterial.TILINGOFFSET, value);\n        }\n        else {\n            this.getVector4ByIndex(BlinnPhongMaterial.TILINGOFFSET).setValue(1.0, 1.0, 0.0, 0.0);\n        }\n    }\n    get albedoColor() {\n        return this.getColorByIndex(BlinnPhongMaterial.ALBEDOCOLOR);\n    }\n    set albedoColor(value) {\n        this.setColorByIndex(BlinnPhongMaterial.ALBEDOCOLOR, value);\n    }\n    get albedoIntensity() {\n        return this.getFloatByIndex(BlinnPhongMaterial.AlbedoIntensity);\n    }\n    set albedoIntensity(value) {\n        this.setFloatByIndex(BlinnPhongMaterial.AlbedoIntensity, value);\n    }\n    get specularColor() {\n        return this.getColorByIndex(BlinnPhongMaterial.MATERIALSPECULAR);\n    }\n    set specularColor(value) {\n        this.setColorByIndex(BlinnPhongMaterial.MATERIALSPECULAR, value);\n    }\n    get shininess() {\n        return this.getFloatByIndex(BlinnPhongMaterial.SHININESS);\n    }\n    set shininess(value) {\n        value = Math.max(0.0, Math.min(1.0, value));\n        this.setFloatByIndex(BlinnPhongMaterial.SHININESS, value);\n    }\n    get albedoTexture() {\n        return this.getTextureByIndex(BlinnPhongMaterial.ALBEDOTEXTURE);\n    }\n    set albedoTexture(value) {\n        if (value)\n            this.addDefine(BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP);\n        else\n            this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_DIFFUSEMAP);\n        this.setTextureByIndex(BlinnPhongMaterial.ALBEDOTEXTURE, value);\n    }\n    get normalTexture() {\n        return this.getTextureByIndex(BlinnPhongMaterial.NORMALTEXTURE);\n    }\n    set normalTexture(value) {\n        if (value) {\n            this.addDefine(BlinnPhongMaterial.SHADERDEFINE_NORMALMAP);\n        }\n        else {\n            this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_NORMALMAP);\n        }\n        this.setTextureByIndex(BlinnPhongMaterial.NORMALTEXTURE, value);\n    }\n    get specularTexture() {\n        return this.getTextureByIndex(BlinnPhongMaterial.SPECULARTEXTURE);\n    }\n    set specularTexture(value) {\n        if (value)\n            this.addDefine(BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP);\n        else\n            this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_SPECULARMAP);\n        this.setTextureByIndex(BlinnPhongMaterial.SPECULARTEXTURE, value);\n    }\n    get enableTransmission() {\n        return this.hasDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION);\n    }\n    set enableTransmission(value) {\n        if (value)\n            this.addDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION);\n        else\n            this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_ENABLETRANSMISSION);\n    }\n    get transmissionRata() {\n        return this.getFloatByIndex(BlinnPhongMaterial.TRANSMISSIONRATE);\n    }\n    set transmissionRata(value) {\n        this.setFloatByIndex(BlinnPhongMaterial.TRANSMISSIONRATE, value);\n    }\n    get backDiffuse() {\n        return this.getFloatByIndex(BlinnPhongMaterial.IBACKDIFFUSE);\n    }\n    set backDiffuse(value) {\n        this.setFloatByIndex(BlinnPhongMaterial.IBACKDIFFUSE, Math.max(value, 1.0));\n    }\n    get backScale() {\n        return this.getFloatByIndex(BlinnPhongMaterial.IBACKSCALE);\n    }\n    set backScale(value) {\n        this.setFloatByIndex(BlinnPhongMaterial.IBACKSCALE, value);\n    }\n    get thinknessTexture() {\n        return this.getTextureByIndex(BlinnPhongMaterial.THINKNESSTEXTURE);\n    }\n    set thinknessTexture(value) {\n        if (value)\n            this.addDefine(BlinnPhongMaterial.SHADERDEFINE_THICKNESSMAP);\n        else\n            this.removeDefine(BlinnPhongMaterial.SHADERDEFINE_THICKNESSMAP);\n        this.setTextureByIndex(BlinnPhongMaterial.THINKNESSTEXTURE, value);\n    }\n    get transmissionColor() {\n        return this.getColorByIndex(BlinnPhongMaterial.TRANSMISSIONCOLOR);\n    }\n    set transmissionColor(value) {\n        this.setColorByIndex(BlinnPhongMaterial.TRANSMISSIONCOLOR, value);\n    }\n    get transmissionRate() {\n        return this.getFloatByIndex(BlinnPhongMaterial.TRANSMISSIONRATE);\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"BLINNPHONG\");\n        this.renderMode = BlinnPhongMaterial.RENDERMODE_OPAQUE;\n    }\n    clone() {\n        var dest = new BlinnPhongMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n    cloneTo(destObject) {\n        super.cloneTo(destObject);\n        destObject.albedoIntensity = this.albedoIntensity;\n        destObject.enableVertexColor = this.enableVertexColor;\n        this.albedoColor.cloneTo(destObject.albedoColor);\n    }\n}\nBlinnPhongMaterial.RENDERMODE_OPAQUE = 0;\nBlinnPhongMaterial.RENDERMODE_CUTOUT = 1;\nBlinnPhongMaterial.RENDERMODE_TRANSPARENT = 2;\n","export var PBRRenderQuality;\n(function (PBRRenderQuality) {\n    PBRRenderQuality[PBRRenderQuality[\"High\"] = 0] = \"High\";\n    PBRRenderQuality[PBRRenderQuality[\"Low\"] = 1] = \"Low\";\n})(PBRRenderQuality || (PBRRenderQuality = {}));\n","#if !defined(BRDF)\n    #define BRDF\n\n// Specular implementations\nfloat D_GGX(float roughness, float NoH, vec3 h, vec3 n)\n{\n    // todo 精度\n    #if !defined(GL_FRAGMENT_PRECISION_HIGH)\n    vec3 NxH = cross(n, h);\n    float oneMinusNoHSquared = dot(NxH, NxH);\n    #else\n    float oneMinusNoHSquared = 1.0 - NoH * NoH;\n    #endif\n\n    float a = NoH * roughness;\n    float k = roughness / (oneMinusNoHSquared + a * a);\n    float d = k * k * INVERT_PI;\n\n    return saturateMediump(d);\n}\n\nfloat D_GGX_Anisotropic(float NoH, const vec3 h, const vec3 t, const vec3 b, float at, float ab)\n{\n    float ToH = dot(t, h);\n    float BoH = dot(b, h);\n    float a2 = at * ab;\n    highp vec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\n    highp float v2 = dot(v, v);\n    float w2 = a2 / v2;\n    return a2 * w2 * w2 * INVERT_PI;\n}\n\nfloat D_Charlie(float roughness, float NoH)\n{\n    float invR = 1.0 / roughness;\n    float cos2h = NoH * NoH;\n    float sin2h = max(1.0 - cos2h, 0.0078125);\n    return (2.0 + invR) * pow(sin2h, invR * 0.5) * 0.5 * INVERT_PI;\n}\n\nfloat V_SmithGGXCorrelated(float roughness, float NoV, float NoL)\n{\n    float a2 = roughness * roughness;\n    float lambdaV = NoL * sqrt((NoV - a2 * NoV) * NoV + a2);\n    float lambdaL = NoV * sqrt((NoL - a2 * NoL) * NoL + a2);\n    float v = 0.5 / (lambdaV + lambdaL);\n\n    return saturateMediump(v);\n}\n\nfloat V_SmithGGXCorrelated_Fast(float roughness, float NoV, float NoL)\n{\n    float v = 0.5 / mix(2.0 * NoL * NoV, NoL + NoV, roughness);\n    return saturateMediump(v);\n}\n\n// Kelemen 2001, \"A Microfacet Based Coupled Specular-Matte BRDF Model with Importance Sampling\"\nfloat V_kelemen(float LoH)\n{\n    return saturateMediump(0.25 / (LoH * LoH));\n}\n\nfloat lCharlieNumericHelper(float x, float alphaG)\n{\n    float oneMinusAlphaSq = (1.0 - alphaG) * (1.0 - alphaG);\n    float a = mix(21.5473, 25.3245, oneMinusAlphaSq);\n    float b = mix(3.82987, 3.32435, oneMinusAlphaSq);\n    float c = mix(0.19823, 0.16801, oneMinusAlphaSq);\n    float d = mix(-1.97760, -1.27393, oneMinusAlphaSq);\n    float e = mix(-4.32054, -4.85967, oneMinusAlphaSq);\n    return a / (1.0 + b * pow(x, c)) + d * x + e;\n}\n\nfloat lCharlie(float cosTheta, float alphaG)\n{\n    if (abs(cosTheta) < 0.5)\n\t{\n\t    return exp(lCharlieNumericHelper(cosTheta, alphaG));\n\t}\n    else\n\t{\n\t    return exp(2.0 * lCharlieNumericHelper(0.5, alphaG) - lCharlieNumericHelper(1.0 - cosTheta, alphaG));\n\t}\n}\n\nfloat V_Charlie(float NoL, float NoV, float roughness)\n{\n    float alphaG = roughness * roughness;\n    return clamp(1.0 / ((1.0 + lCharlie(NoV, alphaG) + lCharlie(NoL, alphaG)) * (4.0 * NoV * NoL)), 0.0, 1.0);\n}\n\n// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\nfloat V_Neubelt(float NoV, float NoL)\n{\n    return saturateMediump(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nfloat V_SmithGGXCorrelated_Anisotropic(float at, float ab, float ToV, float BoV, float ToL, float BoL, float NoV, float NoL)\n{\n    float lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\n    float lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\n    float v = 0.5 / (lambdaV + lambdaL);\n    return saturateMediump(v);\n}\n\nvec3 F_Schlick(vec3 f0, float f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\nvec3 F_Schlick(vec3 f0, float VoH)\n{\n    return f0 + (1.0 - f0) * pow5(1.0 - VoH);\n}\n\nfloat F_Schlick(float f0, float f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\nfloat F_Schlick(float f0, float VoH)\n{\n    return f0 + (1.0 - f0) * pow5(1.0 - VoH);\n}\n\nvec3 F_Schlick(vec3 f0, vec3 f90, float VoH)\n{\n    return f0 + (f90 - f0) * pow5(1.0 - VoH);\n}\n\n    #ifdef IRIDESCENCE\n\n// CIE XYZ to REC.709\nconst mat3 XYZ_to_REC709_MAT = mat3(\n    vec3(3.2409699419, -0.9692436363, 0.0556300797),\n    vec3(-1.5373831776, 1.8759675015, -0.2039769589),\n    vec3(-0.498610760, 0.0415550574, 1.0569715142));\n\nfloat IorToFresnel0(float iorT, float iorI)\n{\n    return pow2((iorT - iorI) / (iorT + iorI));\n}\n\nvec3 IorToFresnel0(vec3 iorT, float iorI)\n{\n    return pow2((iorT - vec3(iorI)) / (iorT + vec3(iorI)));\n}\n\n// air to surfaceR0 ior\nvec3 Fresnel0ToIor(vec3 f0)\n{\n    vec3 sqrtF0 = sqrt(f0);\n    return (1.0 + sqrtF0) / (1.0 - sqrtF0);\n}\n\nvec3 evalSensitivity(float OPD, vec3 shift)\n{\n    float phase = 2.0 * PI * OPD * 1.0e-9;\n    vec3 val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n    vec3 pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n    vec3 var = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n    vec3 xyz = val * sqrt(2.0 * PI * var) * cos(pos * phase + shift) * exp(-pow2(phase) * var);\n    xyz.x += 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * pow2(phase));\n    xyz /= 1.0685e-7;\n    vec3 srgb = XYZ_to_REC709_MAT * xyz;\n    return srgb;\n}\n\n// https://belcour.github.io/blog/research/publication/2017/05/01/brdf-thin-film.html\nvec3 evalIridescence(float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0)\n{\n    vec3 I;\n    float iridescenceIor = mix(outsideIOR, eta2, smoothstep(0.0, 0.03, thinFilmThickness));\n\n    float sinTheta2Sq = pow2(outsideIOR / iridescenceIor) * (1.0 - pow2(cosTheta1));\n\n    float cosTheta2Sq = 1.0 - sinTheta2Sq;\n    if (cosTheta2Sq < 0.0)\n\t{\n\t    return vec3(1.0);\n\t}\n    float cosTheta2 = sqrt(cosTheta2Sq);\n\n    float R0 = IorToFresnel0(iridescenceIor, outsideIOR);\n    float R12 = F_Schlick(R0, cosTheta1);\n    float R21 = R12;\n    float T121 = 1.0 - R12;\n    float phi12 = 0.0;\n    if (iridescenceIor < outsideIOR)\n\tphi12 = PI;\n    float phi21 = PI - phi12;\n\n    vec3 baseIOR = Fresnel0ToIor(clamp(baseF0, 0.0, 0.9999));\n\n    vec3 R1 = IorToFresnel0(baseIOR, iridescenceIor);\n    vec3 R23 = F_Schlick(R1, cosTheta2);\n    vec3 phi23 = vec3(0.0);\n\n    if (baseIOR[0] < iridescenceIor)\n\tphi23[0] = PI;\n    if (baseIOR[1] < iridescenceIor)\n\tphi23[1] = PI;\n    if (baseIOR[2] < iridescenceIor)\n\tphi23[2] = PI;\n\n    float OPD = 2.0 * iridescenceIor * thinFilmThickness * cosTheta2;\n    vec3 phi = vec3(phi21) + phi23;\n\n    vec3 R123 = clamp(R12 * R23, 1e-5, 0.9999);\n    vec3 r123 = sqrt(R123);\n    vec3 Rs = pow2(T121) * R23 / (vec3(1.0) - R123);\n\n    vec3 C0 = R12 + Rs;\n    I = C0;\n\n    vec3 Cm = Rs - T121;\n    for (int m = 1; m <= 2; ++m)\n\t{\n\t    Cm *= r123;\n\t    vec3 Sm = 2.0 * evalSensitivity(float(m) * OPD, float(m) * phi);\n\t    I += Cm * Sm;\n\t}\n\n    return max(I, vec3(0.0));\n}\n    #endif // IRIDESCENCE\n\n// Specular dispatch\n\n// D\nfloat distribution(float roughness, float NoH, vec3 h, vec3 n)\n{\n    return D_GGX(roughness, NoH, h, n);\n}\n\n// V\nfloat visibility(float roughness, float NoV, float NoL)\n{\n    return V_SmithGGXCorrelated(roughness, NoV, NoL);\n}\n\n// F\nvec3 fresnel(vec3 f0, float LoH)\n{\n    float f90 = saturate(dot(f0, vec3(50.0 * 0.33)));\n    return F_Schlick(f0, f90, LoH);\n\n    // return F_Schlick(f0, LoH);\n}\n\nvec3 fresnel(vec3 f0, vec3 f90, float LoH)\n{\n    return F_Schlick(f0, f90, LoH);\n}\n\n// diffuse BRDF implementations\n\nfloat Fd_Lambert()\n{\n    // https://seblagarde.wordpress.com/2012/01/08/pi-or-not-to-pi-in-game-lighting-equation/\n    // return INVERT_PI;\n    return 1.0;\n}\n\nfloat Fd_Burley(float roughness, float NoV, float NoL, float LoH)\n{\n    float f90 = 0.5 + 2.0 * roughness * LoH * LoH;\n    float lightScatter = F_Schlick(1.0, f90, NoL);\n    float veiwScatter = F_Schlick(1.0, f90, NoV);\n    return lightScatter * veiwScatter * INVERT_PI;\n}\n\n    #ifdef IRIDESCENCE\nvec3 Fd_IridescenceLambert(vec3 f0, vec3 f90, vec3 iridescenceFresnel, float iridescenceFactor, float VoH)\n{\n    vec3 iridescenceFresnelMax = vec3(vecmax(iridescenceFresnel));\n    vec3 schlickFresnel = F_Schlick(f0, f90, VoH);\n\n    vec3 F = mix(schlickFresnel, iridescenceFresnelMax, iridescenceFactor);\n\n    return (1.0 - F) * Fd_Lambert();\n}\n    #endif // IRIDESCENCE\n\n#endif // BRDF","#if !defined(pbrGI_lib)\n    #define pbrGI_lib\n\n    #include \"globalIllumination.glsl\";\n\n    #ifdef ANISOTROPIC\nvec3 anisotropyBentNormal(const in Surface surface, const in PixelInfo info)\n{\n    float anisotropy = surface.anisotropy;\n    vec3 anisotropyDirection = info.anisotropicB;\n\n    vec3 n = info.normalWS;\n    vec3 v = info.viewDir;\n\n    // float tangentRoughness = mix(roughness, 1.0, anisotropy * anisotropy);\n    float roughness = surface.perceptualRoughness;\n    vec3 anisotropicTangent = cross(anisotropyDirection, v);\n    vec3 anisotropicNormal = cross(anisotropicTangent, anisotropyDirection);\n    float bendFactor = 1.0 - anisotropy * (1.0 - roughness);\n    float bendFactorPow4 = pow2(bendFactor) * pow2(bendFactor);\n    vec3 bentNormal = normalize(mix(anisotropicNormal, n, bendFactorPow4));\n\n    return bentNormal;\n}\n    #endif // ANISOTROPIC\n\n// 获取反射向量\nvec3 getReflectedVector(const in vec3 n, const in vec3 v, const in vec3 positionWS)\n{\n    vec3 r;\n    r = reflect(-v, n);\n\n    #ifdef SPECCUBE_BOX_PROJECTION\n    r = getBoxProjectionReflectedVector(r, positionWS);\n    #endif // SPECCUBE_BOX_PROJECTION\n\n    return r;\n}\n\n    #ifdef IRIDESCENCE\nvoid iridescenceIBL(const in Surface surface, const in PixelInfo info, in vec3 E, inout vec3 Fd, inout vec3 Fr)\n{\n    vec3 dfg = info.dfg;\n    float NoV = info.NoV;\n    vec3 n = info.normalWS;\n    vec3 v = info.viewDir;\n    vec3 positionWS = info.positionWS;\n    vec3 iridescenceFresnel = info.iridescenceFresnel;\n\n    vec3 diffuseColor = surface.diffuseColor;\n    float roughness = surface.perceptualRoughness;\n    float occlusion = surface.occlusion;\n    float iridescenceFactor = surface.iridescence;\n\n    // diffuse\n    vec3 irradiance = diffuseIrradiance(n, positionWS, info.viewDir);\n    Fd += diffuseColor * irradiance * (1.0 - E) * occlusion;\n\n    // specular\n    vec3 iridescenceF0 = mix(surface.f0, iridescenceFresnel, vec3(iridescenceFactor));\n    vec3 Er = mix(dfg.xxx, dfg.yyy, iridescenceF0);\n\n\t#ifdef ANISOTROPIC\n    vec3 bentNormal = anisotropyBentNormal(surface, info);\n    vec3 r = getReflectedVector(bentNormal, v, positionWS);\n\t#else // ANISOTROPIC\n    vec3 r = getReflectedVector(n, v, positionWS);\n\t#endif // ANISOTROPIC\n\n    vec3 indirectSpecular = specularRadiance(r, roughness);\n    Fr += Er * indirectSpecular * occlusion * (1.0 + Er * (1.0 / dfg.y - 1.0));\n}\n    #endif // IRIDESCENCE\n\n    #ifdef SHEEN\nvoid sheenIBL(const in Surface surface, const in PixelInfo info, inout vec3 Fd, inout vec3 Fr)\n{\n    vec3 v = info.viewDir;\n    vec3 n = info.normalWS;\n    vec3 positionWS = info.positionWS;\n\n    float occlusion = surface.occlusion;\n    float roughness = surface.sheenPerceptualRoughness;\n\n    Fd *= info.sheenScaling;\n    Fr *= info.sheenScaling;\n\n    vec3 r = getReflectedVector(n, v, positionWS);\n    vec3 indirectSpecular = specularRadiance(r, roughness);\n\n    Fr += indirectSpecular * info.sheenDfg * surface.sheenColor * occlusion;\n}\n    #endif // SHEEN\n\n    #ifdef CLEARCOAT\nvoid clearCoatIBL(const in Surface surface, const in PixelInfo info, inout vec3 Fd, inout vec3 Fr)\n{\n    vec3 v = info.viewDir;\n    vec3 n = info.clearCoatNormal;\n    float NoV = info.clearCoatNoV;\n    vec3 positionWS = info.positionWS;\n\n    float clearCoat = surface.clearCoat;\n    float roughness = surface.clearCoatPerceptualRoughness;\n    float occlusion = surface.occlusion;\n\n    float Fc = F_Schlick(0.04, 1.0, NoV) * clearCoat;\n    float attenuation = 1.0 - Fc;\n    Fd *= attenuation;\n    Fr *= attenuation;\n\n    vec3 r = getReflectedVector(n, v, positionWS);\n    vec3 indirectSpecular = specularRadiance(r, roughness);\n\n    Fr += indirectSpecular * Fc * occlusion;\n}\n    #endif // CLEARCOAT\n\n    #ifdef TRANSMISSION\nvec3 getRefraction(const in Surface surface, const in PixelInfo info)\n{\n    vec3 position = info.positionWS;\n\n\t#ifdef THICKNESS\n\n    vec3 n = info.normalWS;\n    vec3 r = -info.viewDir;\n    float airIOR = 1.0;\n    float etaIR = airIOR / surface.ior;\n\n    vec3 refractionV = normalize(refract(r, n, etaIR)) * surface.thickness * info.worldScale.xyz;\n\n    position += refractionV;\n\n\t#endif // THICKNESS\n\n    vec4 p = u_ViewProjection * vec4(position, 1.0);\n    vec2 refractionUV = (p.xy / p.w) * 0.5 + 0.5;\n\n    float refractionLOD = u_OpaqueTextureParams.z * surface.perceptualRoughness * saturate(surface.ior * 2.0 - 2.0);\n    vec3 refraction = texture2DLodEXT(u_CameraOpaqueTexture, refractionUV, refractionLOD).xyz;\n\n    return refraction;\n}\n\nvec3 transmissionIBL(const in Surface surface, const in PixelInfo info, in vec3 E)\n{\n    // refraction\n    vec3 refraction = getRefraction(surface, info);\n\n\t#ifndef THICKNESS\n    E *= 1.0 + surface.transmission * (1.0 - E.g) / (1.0 + E.g);\n\t#endif // THICKNESS\n\n\t#ifdef THICKNESS\n\n    // ABSORPTION\n    vec3 attenuationColor = surface.attenuationColor;\n    float attenuationDistance = surface.attenuationDistance;\n    vec3 absorption = -log(attenuationColor) / (attenuationDistance);\n    vec3 T = exp(-absorption * info.worldScale.xyz * surface.thickness);\n\n\t#endif // THICKNESS\n\n    vec3 Ft = refraction;\n\n    Ft *= surface.diffuseColor;\n\n    Ft *= 1.0 - E;\n\n\t#ifdef THICKNESS\n    Ft *= T;\n\t#endif // THICKNESS\n\n    return Ft * surface.transmission;\n}\n\n    #endif // TRANSMISSION\n\nvoid baseIBL(const in Surface surface, const in PixelInfo info, in vec3 E, inout vec3 Fd, inout vec3 Fr)\n{\n    vec3 dfg = info.dfg;\n    float NoV = info.NoV;\n    vec3 n = info.normalWS;\n    vec3 v = info.viewDir;\n    vec3 positionWS = info.positionWS;\n\n    vec3 diffuseColor = surface.diffuseColor;\n    float roughness = surface.perceptualRoughness;\n    float occlusion = surface.occlusion;\n\n    #ifdef ANISOTROPIC\n    vec3 bentNormal = anisotropyBentNormal(surface, info);\n    vec3 r = getReflectedVector(bentNormal, v, positionWS);\n    #else // ANISOTROPIC\n    vec3 r = getReflectedVector(n, v, positionWS);\n    #endif // ANISOTROPIC\n\n    vec3 indirectSpecular = specularRadiance(r, roughness);\n\n    // todo\n    float specularAO = occlusion;\n    Fr += E * indirectSpecular * specularAO * info.energyCompensation;\n\n    #if defined(USELIGHTMAP)\n\n    vec2 lightmapUV = info.lightmapUV;\n    vec3 bakedlight = getBakedLightmapColor(lightmapUV, n);\n    Fd += bakedlight * diffuseColor;\n\n    #else // USELIGHTMAP\n\n    vec3 irradiance = diffuseIrradiance(n, positionWS, info.viewDir);\n    Fd += diffuseColor * irradiance * (1.0 - E) * occlusion;\n\n    #endif // USELIGHTMAP\n}\n\nvec3 getE(const in Surface surface, const in PixelInfo info)\n{\n    #ifdef IRIDESCENCE\n\n    vec3 dfg = info.dfg;\n    float NoV = info.NoV;\n    vec3 iridescenceFresnel = info.iridescenceFresnel;\n    vec3 f0 = surface.f0;\n    float iridescenceFactor = surface.iridescence;\n    vec3 iridescenceFresnelMax = vec3(vecmax(iridescenceFresnel));\n    vec3 schlickFresnel = F_Schlick(f0, vec3(1.0), NoV);\n    vec3 F = mix(schlickFresnel, iridescenceFresnelMax, iridescenceFactor);\n    vec3 E = mix(dfg.xxx, dfg.yyy, F);\n\n    #else // IRIDESCENCE\n\n    vec3 dfg = info.dfg;\n    vec3 f0 = surface.f0;\n    vec3 f90 = surface.f90;\n    // vec3 E = mix(dfg.xxx, dfg.yyy, f0);\n    vec3 E = (f90 - f0) * dfg.x + f0 * dfg.y;\n\n    #endif // IRIDESCENCE\n    return E;\n}\n\nvec3 PBRGI(const in Surface surface, const in PixelInfo info)\n{\n    vec3 Fd = vec3(0.0);\n    vec3 Fr = vec3(0.0);\n\n    vec3 E = getE(surface, info);\n\n    #ifdef IRIDESCENCE\n    iridescenceIBL(surface, info, E, Fd, Fr);\n    #else // IRIDESCENCE\n    baseIBL(surface, info, E, Fd, Fr);\n    #endif // IRIDESCENCE\n\n    // sheen\n    #ifdef SHEEN\n    sheenIBL(surface, info, Fd, Fr);\n    #endif // SHEEN\n\n    // clear coat\n    #ifdef CLEARCOAT\n    clearCoatIBL(surface, info, Fd, Fr);\n    #endif // CLEARCOAT\n\n    #ifdef TRANSMISSION\n    Fd *= (1.0 - surface.transmission);\n    vec3 Ft = transmissionIBL(surface, info, E);\n    #endif // TRANSMISSION\n\n    vec3 gi = Fd + Fr;\n\n    #ifdef TRANSMISSION\n    gi += Ft;\n    #endif // TRANSMISSION\n\n    return gi;\n}\n\n#endif // pbrGI_lib","#if !defined(pbrCommon_lib)\n    #define pbrCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\n\n// todo\nvarying vec3 v_NormalWS;\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n\n    vec3 positionWS;\n\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    mat3 TBN;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n#endif // pbrCommon_lib","#if !defined(pbrVertex_lib)\n    #define pbrVertex_lib\n\n    #include \"ShadingVertex.glsl\";\n\n    #ifdef THICKNESS\n// xyz: world scale, w: length(xyz)\nvarying vec4 v_WorldScale;\n    #endif // THICKNESS\n\nvoid initPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    shadingPixelParams(params, vertex);\n    sharePixelParams(params);\n\n    #ifdef THICKNESS\n    mat4 worldMat = getWorldMatrix();\n    v_WorldScale.x = length(vec3(worldMat[0].xyz));\n    v_WorldScale.y = length(vec3(worldMat[1].xyz));\n    v_WorldScale.z = length(vec3(worldMat[2].xyz));\n    v_WorldScale.w = length(v_WorldScale.xyz);\n    #endif // THICKNESS\n}\n\n#endif // pbrVertex_lib","//兼容WGSL\n#if !defined(pbrFrag_lib)\n    #define pbrFrag_lib\n\n    #include \"PBRLighting.glsl\";\n\n    #ifdef THICKNESS\n// xyz: world scale, w: length(xyz)\nvarying vec4 v_WorldScale;\n    #endif // THICKNESS\n\nvoid getPixelInfo(inout PixelInfo info, const in PixelParams pixel, const in Surface surface)\n{\n    info.positionWS = pixel.positionWS;\n    info.vertexNormalWS = pixel.normalWS;\n\n    #ifdef TANGENT\n    info.normalWS = normalize(pixel.TBN * surface.normalTS);\n    #else // TANGENT\n    info.normalWS = pixel.normalWS;\n    #endif // TANGENT\n\n    info.tangentWS = pixel.tangentWS;\n    info.biNormalWS = pixel.biNormalWS;\n\n    info.viewDir = normalize(u_CameraPos - info.positionWS);\n    info.NoV = min(max(dot(info.normalWS, info.viewDir), MIN_N_DOT_V), 1.0);\n\n    info.dfg = prefilteredDFG_LUT(surface.perceptualRoughness, info.NoV);\n\n    #ifdef SHEEN\n    info.energyCompensation = vec3(1.0);\n    #else // SHEEN\n    info.energyCompensation = (1.0 + surface.f0 * (1.0 / info.dfg.y - 1.0));\n    #endif // SHEEN\n\n    #ifdef IRIDESCENCE\n    info.iridescenceFresnel = evalIridescence(1.0, surface.iridescenceIor, info.NoV, surface.iridescenceThickness, surface.f0);\n    #endif // IRIDESCENCE\n\n    #ifdef SHEEN\n    info.sheenDfg = prefilteredDFG_LUT(surface.sheenPerceptualRoughness, info.NoV).z;\n    info.sheenScaling = 1.0 - vecmax(surface.sheenColor) * info.sheenDfg;\n    #endif // SHEEN\n\n    #ifdef CLEARCOAT\n\t#ifdef CLEARCOAT_NORMAL\n    info.clearCoatNormal = normalize(pixel.TBN * surface.clearCoatNormalTS);\n\t#else // CLEARCOAT_NORMAL\n    info.clearCoatNormal = info.vertexNormalWS;\n\t#endif // CLEARCOAT_NORMAL\n    info.clearCoatNoV = min(max(dot(info.clearCoatNormal, info.viewDir), MIN_N_DOT_V), 1.0);\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    mat3 anisotropyTBN = mat3(info.tangentWS, info.biNormalWS * -1.0, info.normalWS);\n    info.anisotropicT = anisotropyTBN * normalize(vec3(surface.anisotropyDirection, 0.0));\n    info.anisotropicB = cross(info.vertexNormalWS, info.anisotropicT);\n    info.ToV = dot(info.anisotropicT, info.viewDir);\n    info.BoV = dot(info.anisotropicB, info.viewDir);\n    info.at = mix(surface.roughness, 1.0, pow2(surface.anisotropy));\n    info.ab = surface.roughness;\n    #endif // ANISOTROPIC\n\n    #ifdef THICKNESS\n    info.worldScale = v_WorldScale;\n    #endif // THICKNESS\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    info.lightmapUV = pixel.uv1;\n\t#endif // UV1\n    #endif // LIGHTMAP\n}\n\nvec3 PBRLighting(const in Surface surface, const in PixelInfo info)\n{\n    vec3 lightColor = vec3(0.0);\n    #ifdef DIRECTIONLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= DirectionCount) break;\n\t    DirectionLight directionLight = getDirectionLight(i, info.positionWS);\n\t    // if (directionLight.lightMode == LightMode_Mix)\n\t\t// {\n\t\t//     continue;\n\t\t// }\n        if (directionLight.lightMode != LightMode_Mix) {\n\t        Light light = getLight(directionLight);\n\t        lightColor += PBRLighting(surface, info, light) * light.attenuation;\n        }\n\t}\n    #endif // DIRECTIONLIGHT\n\n    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\n    ivec4 clusterInfo = getClusterInfo(u_View, u_Viewport, info.positionWS, gl_FragCoord, u_ProjectionParams);\n    #endif // POINTLIGHT || SPOTLIGHT\n\n    #ifdef POINTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n        #ifdef BREAK_TEXTURE_SAMPLE\n\t    if (i >= clusterInfo.x) break; //兼容WGSL\n        #endif\n\t    PointLight pointLight = getPointLight(i, clusterInfo, info.positionWS);\n\t    // if (pointLight.lightMode == LightMode_Mix)\n\t\t// {\n\t\t//     continue;\n\t\t// }\n        if (pointLight.lightMode != LightMode_Mix) {\n\t        Light light = getLight(pointLight, info.normalWS, info.positionWS);\n            #ifndef BREAK_TEXTURE_SAMPLE\n            if (i < clusterInfo.x)\n            #endif\n\t            lightColor += PBRLighting(surface, info, light) * light.attenuation;\n        }\n\t}\n    #endif // POINTLIGHT\n\n    #ifdef SPOTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n        #ifdef BREAK_TEXTURE_SAMPLE\n\t    if (i >= clusterInfo.y) break; //兼容WGSL\n        #endif\n\t    SpotLight spotLight = getSpotLight(i, clusterInfo, info.positionWS);\n\t    // if (spotLight.lightMode == LightMode_Mix)\n\t\t// {\n\t\t//     continue;\n\t\t// }\n        if (spotLight.lightMode != LightMode_Mix) {\n\t        Light light = getLight(spotLight, info.normalWS, info.positionWS);\n            #ifndef BREAK_TEXTURE_SAMPLE\n            if (i < clusterInfo.y)\n            #endif\n\t            lightColor += PBRLighting(surface, info, light) * light.attenuation;\n        }\n\t}\n    #endif // SPOTLIGHT\n\n    vec3 giColor = PBRGI(surface, info);\n\n    vec3 color = lightColor + giColor;\n\n    #ifdef EMISSION\n    color += surface.emissionColor;\n    #endif //  EMISSION\n    return color;\n}\n\n#endif // pbrFrag_lib","#if !defined(PBRMetallic_lib)\n    #define PBRMetallic_lib\n\n    #include \"ShadingFrag.glsl\";\n\n    #include \"PBRFrag.glsl\";\n\nstruct SurfaceInputs {\n    vec3 diffuseColor;\n    float alpha;\n    float alphaTest;\n    float metallic;\n    float smoothness;\n    float occlusion;\n    vec3 emissionColor;\n    vec3 normalTS;\n\n    #ifdef CLEARCOAT\n    float clearCoat;\n    float clearCoatRoughness;\n\t#ifdef CLEARCOAT_NORMAL\n    vec3 clearCoatNormalTS;\n\t#endif // CLEARCOAT_NORMAL\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    float anisotropy;\n    vec2 anisotropyDirection;\n    #endif // ANISOTROPIC\n};\n\nvoid initSurface(inout Surface surface, const in SurfaceInputs inputs, const in PixelParams pixel)\n{\n    surface.alpha = inputs.alpha;\n\n    surface.normalTS = inputs.normalTS;\n\n    vec3 baseColor = inputs.diffuseColor;\n    float metallic = inputs.metallic;\n    float perceptualRoughness = 1.0 - inputs.smoothness;\n\n    // default ior 1.5\n    float ior = 1.5;\n    surface.ior = 1.5;\n    vec3 f0 = vec3(0.04, 0.04, 0.04);\n\n    surface.perceptualRoughness = clamp(perceptualRoughness, MIN_PERCEPTUAL_ROUGHNESS, 1.0);\n    surface.roughness = surface.perceptualRoughness * surface.perceptualRoughness;\n    surface.diffuseColor = computeDiffuse(baseColor, metallic);\n    surface.f0 = computeF0(f0, baseColor, metallic);\n    surface.f90 = computeF90(surface.f0);\n\n    surface.occlusion = inputs.occlusion;\n\n    #ifdef EMISSION\n    surface.emissionColor = inputs.emissionColor;\n    #endif // EMISSION\n\n    #ifdef CLEARCOAT\n    surface.clearCoat = inputs.clearCoat;\n    surface.clearCoatPerceptualRoughness = clamp(inputs.clearCoatRoughness, MIN_PERCEPTUAL_ROUGHNESS, 1.0);\n    surface.clearCoatRoughness = surface.clearCoatPerceptualRoughness * surface.clearCoatPerceptualRoughness;\n\t#ifdef CLEARCOAT_NORMAL\n    surface.clearCoatNormalTS = inputs.clearCoatNormalTS;\n\t#endif // CLEARCOAT_NORMAL\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    surface.anisotropy = inputs.anisotropy;\n    surface.anisotropyDirection = inputs.anisotropyDirection;\n    #endif // ANISOTROPIC\n}\n\nvec4 PBR_Metallic_Flow(const in SurfaceInputs inputs, in PixelParams pixel)\n{\n    #ifdef ALPHATEST\n    if (inputs.alpha < inputs.alphaTest)\n\t{\n\t    discard;\n\t}\n    #endif // ALPHATEST\n\n    Surface surface;\n    initSurface(surface, inputs, pixel);\n\n    PixelInfo info;\n    getPixelInfo(info, pixel, surface);\n\n    vec3 surfaceColor = vec3(0.0);\n    surfaceColor += PBRLighting(surface, info);\n\n    return vec4(surfaceColor, surface.alpha);\n}\n\n#endif // PBRMetallic_lib\n","import { HDRTextureInfo } from \"../../../RenderEngine/HDRTextureInfo\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureFormat } from \"../../../RenderEngine/RenderEnum/TextureFormat\";\nimport { WrapMode } from \"../../../RenderEngine/RenderEnum/WrapMode\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Texture2D } from \"../../../resource/Texture2D\";\nimport { Base64Tool } from \"../../../utils/Base64Tool\";\nconst dfg_128 = \"\";\nconst RGBDMaxRange = 255;\nexport class PBRDefaultDFG {\n    static get defaultDFG() {\n        return PBRDefaultDFG._defaultDFG;\n    }\n    static set defaultDFG(value) {\n        PBRDefaultDFG._defaultDFG = value;\n    }\n    static DefaultDfgTexture() {\n        let hdrBuffer = Base64Tool.decode(dfg_128);\n        let hdrInfo = HDRTextureInfo.getHDRInfo(hdrBuffer);\n        let supportFloatTex = LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32);\n        let supportFloatLinearFiltering = LayaGL.renderEngine.getCapable(RenderCapable.Texture_FloatLinearFiltering);\n        let tex;\n        if (supportFloatTex && supportFloatLinearFiltering) {\n            tex = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\n            tex.setHDRData(hdrInfo);\n        }\n        else {\n            tex = new Texture2D(hdrInfo.width, hdrInfo.height, TextureFormat.R8G8B8A8, false, false, false);\n            let pixelCount = hdrInfo.width * hdrInfo.height;\n            let hdrPixelData = hdrInfo.readScanLine();\n            let rgbdPixelData = new Uint8Array(pixelCount * 4);\n            for (let index = 0; index < pixelCount; index++) {\n                let r = hdrPixelData[index * 4];\n                let g = hdrPixelData[index * 4 + 1];\n                let b = hdrPixelData[index * 4 + 2];\n                let maxRGB = Math.max(r, g, b, 1e-5);\n                let d = Math.max(1.0, RGBDMaxRange / maxRGB);\n                d = Math.min(1, Math.max(0, (d / 255)));\n                rgbdPixelData[index * 4] = Math.min(1, Math.max(0, (r * d))) * 255;\n                rgbdPixelData[index * 4 + 1] = Math.min(1, Math.max(0, (g * d))) * 255;\n                rgbdPixelData[index * 4 + 2] = Math.min(1, Math.max(0, (b * d))) * 255;\n                rgbdPixelData[index * 4 + 3] = d * 255;\n            }\n            tex.setPixelsData(rgbdPixelData, false, false);\n        }\n        tex.lock = true;\n        tex.wrapModeU = WrapMode.Clamp;\n        tex.wrapModeV = WrapMode.Clamp;\n        tex.anisoLevel = 1;\n        this._defaultDFG = tex;\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nexport var ShaderDataType;\n(function (ShaderDataType) {\n    ShaderDataType[ShaderDataType[\"None\"] = 0] = \"None\";\n    ShaderDataType[ShaderDataType[\"Int\"] = 1] = \"Int\";\n    ShaderDataType[ShaderDataType[\"Bool\"] = 2] = \"Bool\";\n    ShaderDataType[ShaderDataType[\"Float\"] = 3] = \"Float\";\n    ShaderDataType[ShaderDataType[\"Vector2\"] = 4] = \"Vector2\";\n    ShaderDataType[ShaderDataType[\"Vector3\"] = 5] = \"Vector3\";\n    ShaderDataType[ShaderDataType[\"Vector4\"] = 6] = \"Vector4\";\n    ShaderDataType[ShaderDataType[\"Color\"] = 7] = \"Color\";\n    ShaderDataType[ShaderDataType[\"Matrix4x4\"] = 8] = \"Matrix4x4\";\n    ShaderDataType[ShaderDataType[\"Texture2D\"] = 9] = \"Texture2D\";\n    ShaderDataType[ShaderDataType[\"Texture3D\"] = 10] = \"Texture3D\";\n    ShaderDataType[ShaderDataType[\"TextureCube\"] = 11] = \"TextureCube\";\n    ShaderDataType[ShaderDataType[\"Buffer\"] = 12] = \"Buffer\";\n    ShaderDataType[ShaderDataType[\"Matrix3x3\"] = 13] = \"Matrix3x3\";\n    ShaderDataType[ShaderDataType[\"Texture2DArray\"] = 14] = \"Texture2DArray\";\n})(ShaderDataType || (ShaderDataType = {}));\nexport function checkShaderDataValueLegal(value, shaderType) {\n    let legal = false;\n    switch (shaderType) {\n        case ShaderDataType.Int:\n        case ShaderDataType.Float:\n            legal = typeof value == \"number\";\n            break;\n        case ShaderDataType.Bool:\n            legal = typeof value == \"boolean\";\n            break;\n        case ShaderDataType.Vector2:\n            legal = value instanceof Vector2;\n            break;\n        case ShaderDataType.Vector3:\n            legal = value instanceof Vector3;\n            break;\n        case ShaderDataType.Vector4:\n            legal = value instanceof Vector4;\n            break;\n        case ShaderDataType.Color:\n            legal = value instanceof Color;\n            break;\n        case ShaderDataType.Matrix4x4:\n            legal = value instanceof Matrix4x4;\n            break;\n        case ShaderDataType.Texture2D:\n            legal = value instanceof BaseTexture;\n            break;\n        case ShaderDataType.TextureCube:\n            legal = value instanceof BaseTexture;\n            break;\n        case ShaderDataType.Buffer:\n            legal = value instanceof ArrayBuffer;\n            break;\n        case ShaderDataType.Matrix3x3:\n            legal = value instanceof Matrix3x3;\n            break;\n        default:\n            legal = false;\n            break;\n    }\n    if (!legal)\n        console.warn(\"The setting value and Shader type do not match\");\n    return legal;\n}\nexport function ShaderDataDefaultValue(type) {\n    switch (type) {\n        case ShaderDataType.Int:\n            return 0;\n        case ShaderDataType.Bool:\n            return false;\n        case ShaderDataType.Float:\n            return 0;\n        case ShaderDataType.Vector2:\n            return Vector2.ZERO;\n        case ShaderDataType.Vector3:\n            return Vector3.ZERO;\n        case ShaderDataType.Vector4:\n            return Vector4.ZERO;\n        case ShaderDataType.Color:\n            return Color.BLACK;\n        case ShaderDataType.Matrix4x4:\n            return Matrix4x4.DEFAULT;\n        case ShaderDataType.Matrix3x3:\n            return Matrix3x3.DEFAULT;\n    }\n    return null;\n}\nexport class ShaderData {\n    constructor(ownerResource = null) {\n        this._ownerResource = ownerResource;\n    }\n    getDefineData() {\n        throw new NotImplementedError();\n    }\n    getData() {\n        throw new NotImplementedError();\n    }\n    addDefine(define) {\n        throw new NotImplementedError();\n    }\n    addDefines(define) {\n        throw new NotImplementedError();\n    }\n    removeDefine(define) {\n        throw new NotImplementedError();\n    }\n    hasDefine(define) {\n        throw new NotImplementedError();\n    }\n    clearDefine() {\n        throw new NotImplementedError();\n    }\n    clearData() {\n        throw new NotImplementedError();\n    }\n    getBool(index) {\n        throw new NotImplementedError();\n    }\n    setBool(index, value) {\n        throw new NotImplementedError();\n    }\n    getInt(index) {\n        throw new NotImplementedError();\n    }\n    setInt(index, value) {\n        throw new NotImplementedError();\n    }\n    getNumber(index) {\n        throw new NotImplementedError();\n    }\n    setNumber(index, value) {\n        throw new NotImplementedError();\n    }\n    getVector2(index) {\n        throw new NotImplementedError();\n    }\n    setVector2(index, value) {\n        throw new NotImplementedError();\n    }\n    getVector3(index) {\n        throw new NotImplementedError();\n    }\n    setVector3(index, value) {\n        throw new NotImplementedError();\n    }\n    getVector(index) {\n        throw new NotImplementedError();\n    }\n    setVector(index, value) {\n        throw new NotImplementedError();\n    }\n    getColor(index) {\n        throw new NotImplementedError();\n    }\n    setColor(index, value) {\n        throw new NotImplementedError();\n    }\n    getMatrix4x4(index) {\n        throw new NotImplementedError();\n    }\n    setMatrix4x4(index, value) {\n        throw new NotImplementedError();\n    }\n    getMatrix3x3(index) {\n        throw new NotImplementedError();\n    }\n    setMatrix3x3(index, value) {\n        throw new NotImplementedError();\n    }\n    getBuffer(index) {\n        throw new NotImplementedError();\n    }\n    setBuffer(index, value) {\n        throw new NotImplementedError();\n    }\n    setTexture(index, value) {\n        throw new NotImplementedError();\n    }\n    getTexture(index) {\n        throw new NotImplementedError();\n    }\n    setShaderData(uniformIndex, type, value) {\n        switch (type) {\n            case ShaderDataType.Int:\n                this.setInt(uniformIndex, value);\n                break;\n            case ShaderDataType.Bool:\n                this.setBool(uniformIndex, value);\n                break;\n            case ShaderDataType.Float:\n                this.setNumber(uniformIndex, value);\n                break;\n            case ShaderDataType.Vector2:\n                this.setVector2(uniformIndex, value);\n                break;\n            case ShaderDataType.Vector3:\n                this.setVector3(uniformIndex, value);\n                break;\n            case ShaderDataType.Vector4:\n                this.setVector(uniformIndex, value);\n                break;\n            case ShaderDataType.Color:\n                this.setColor(uniformIndex, value);\n                break;\n            case ShaderDataType.Matrix4x4:\n                this.setMatrix4x4(uniformIndex, value);\n                break;\n            case ShaderDataType.Matrix3x3:\n                this.setMatrix3x3(uniformIndex, value);\n                break;\n            case ShaderDataType.Texture2D:\n            case ShaderDataType.TextureCube:\n                this.setTexture(uniformIndex, value);\n                break;\n            case ShaderDataType.Buffer:\n                this.setBuffer(uniformIndex, value);\n                break;\n            default:\n                throw new Error(`unknown shader data type: ${type}`);\n        }\n    }\n    getShaderData(uniformIndex, type) {\n        switch (type) {\n            case ShaderDataType.Int:\n                return this.getInt(uniformIndex);\n            case ShaderDataType.Bool:\n                return this.getBool(uniformIndex);\n            case ShaderDataType.Float:\n                return this.getNumber(uniformIndex);\n            case ShaderDataType.Vector2:\n                return this.getVector2(uniformIndex);\n            case ShaderDataType.Vector3:\n                return this.getVector3(uniformIndex);\n            case ShaderDataType.Vector4:\n                return this.getVector(uniformIndex);\n            case ShaderDataType.Color:\n                return this.getColor(uniformIndex);\n            case ShaderDataType.Texture2D:\n            case ShaderDataType.TextureCube:\n                return this.getTexture(uniformIndex);\n            case ShaderDataType.Buffer:\n                return this.getBuffer(uniformIndex);\n            case ShaderDataType.Matrix3x3:\n                return this.getMatrix3x3(uniformIndex);\n            case ShaderDataType.Matrix4x4:\n                return this.getMatrix4x4(uniformIndex);\n            default:\n                throw \"unknown shader data type.\";\n        }\n    }\n    _setInternalTexture(index, value) {\n        throw new NotImplementedError();\n    }\n    cloneTo(destObject) {\n        throw new NotImplementedError();\n    }\n    clone() {\n        throw new NotImplementedError();\n    }\n    destroy() {\n        throw new NotImplementedError();\n    }\n}\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport BRDFGLSL from \"./BRDF.glsl\";\nimport PBRGIGLSL from \"./pbrGI.glsl\";\nimport PBRCommonGLSL from \"./pbrCommon.glsl\";\nimport PBRVertexGLSL from \"./pbrVertex.glsl\";\nimport PBRFragGLSL from \"./pbrFrag.glsl\";\nimport PBRMetallicGLSL from \"./pbrMetallicFrag.glsl\";\nimport { PBRDefaultDFG } from \"./PBRDefaultDFG\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class PBRShaderLib {\n    static init() {\n        PBRShaderLib.DEFINE_EMISSION = Shader3D.getDefineByName(\"EMISSION\");\n        PBRShaderLib.DEFINE_CLEARCOAT = Shader3D.getDefineByName(\"CLEARCOAT\");\n        PBRShaderLib.DEFINE_CLEARCOAT_NORMAL = Shader3D.getDefineByName(\"CLEARCOAT_NORMAL\");\n        PBRShaderLib.DEFINE_ANISOTROPY = Shader3D.getDefineByName(\"ANISOTROPIC\");\n        PBRShaderLib.DEFINE_IOR = Shader3D.getDefineByName(\"IOR\");\n        PBRShaderLib.DEFINE_IRIDESCENCE = Shader3D.getDefineByName(\"IRIDESCENCE\");\n        PBRShaderLib.DEFINE_SHEEN = Shader3D.getDefineByName(\"SHEEN\");\n        PBRShaderLib.DEFINE_TRANSMISSION = Shader3D.getDefineByName(\"TRANSMISSION\");\n        PBRShaderLib.DEFINE_THICKNESS = Shader3D.getDefineByName(\"THICKNESS\");\n        Shader3D.addInclude(\"BRDF.glsl\", BRDFGLSL);\n        Shader3D.addInclude(\"PBRGI.glsl\", PBRGIGLSL);\n        Shader3D.addInclude(\"PBRCommon.glsl\", PBRCommonGLSL);\n        Shader3D.addInclude(\"PBRVertex.glsl\", PBRVertexGLSL);\n        Shader3D.addInclude(\"PBRFrag.glsl\", PBRFragGLSL);\n        PBRDefaultDFG.DefaultDfgTexture();\n        SubShader.regIncludeBindUnifrom(\"PBRGI.glsl\", { \"u_IBLDFG\": ShaderDataType.Texture2D }, { \"u_IBLDFG\": PBRDefaultDFG.defaultDFG });\n        Shader3D.addInclude(\"PBRMetallicFrag.glsl\", PBRMetallicGLSL);\n    }\n}\n","import { Material } from \"../../../resource/Material\";\nimport { PBRRenderQuality } from \"./PBRRenderQuality\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { PBRShaderLib } from \"../../shader/pbr/PBRShaderLib\";\nimport { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nexport var PBRRenderMode;\n(function (PBRRenderMode) {\n    PBRRenderMode[PBRRenderMode[\"Opaque\"] = 0] = \"Opaque\";\n    PBRRenderMode[PBRRenderMode[\"Cutout\"] = 1] = \"Cutout\";\n    PBRRenderMode[PBRRenderMode[\"Fade\"] = 2] = \"Fade\";\n    PBRRenderMode[PBRRenderMode[\"Transparent\"] = 3] = \"Transparent\";\n})(PBRRenderMode || (PBRRenderMode = {}));\nexport class PBRMaterial extends Material {\n    static __init__() {\n        PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\n        PBRMaterial.SHADERDEFINE_NORMALTEXTURE = Shader3D.getDefineByName(\"NORMALTEXTURE\");\n        PBRMaterial.SHADERDEFINE_PARALLAXTEXTURE = Shader3D.getDefineByName(\"PARALLAXTEXTURE\");\n        PBRMaterial.SHADERDEFINE_OCCLUSIONTEXTURE = Shader3D.getDefineByName(\"OCCLUSIONTEXTURE\");\n        PBRMaterial.SHADERDEFINE_EMISSIONTEXTURE = Shader3D.getDefineByName(\"EMISSIONTEXTURE\");\n        PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND = Shader3D.getDefineByName(\"TRANSPARENTBLEND\");\n        PBRMaterial.SHADERDEFINE_LAYA_PBR_BRDF_HIGH = Shader3D.getDefineByName(\"LAYA_PBR_BRDF_HIGH\");\n        PBRMaterial.SHADERDEFINE_LAYA_PBR_BRDF_LOW = Shader3D.getDefineByName(\"LAYA_PBR_BRDF_LOW\");\n        PBRMaterial.SHADERDEFINE_DETAILALBEDO = Shader3D.getDefineByName(\"DETAILTEXTURE\");\n        PBRMaterial.SHADERDEFINE_DETAILNORMAL = Shader3D.getDefineByName(\"DETAILNORMAL\");\n        PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\n        PBRMaterial.ALBEDOTEXTURE = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\n        PBRMaterial.ALBEDOCOLOR = Shader3D.propertyNameToID(\"u_AlbedoColor\");\n        PBRMaterial.TILINGOFFSET = Shader3D.propertyNameToID(\"u_TilingOffset\");\n        PBRMaterial.NORMALTEXTURE = Shader3D.propertyNameToID(\"u_NormalTexture\");\n        PBRMaterial.NORMALSCALE = Shader3D.propertyNameToID(\"u_NormalScale\");\n        PBRMaterial.SMOOTHNESS = Shader3D.propertyNameToID(\"u_Smoothness\");\n        PBRMaterial.OCCLUSIONTEXTURE = Shader3D.propertyNameToID(\"u_OcclusionTexture\");\n        PBRMaterial.OCCLUSIONSTRENGTH = Shader3D.propertyNameToID(\"u_OcclusionStrength\");\n        PBRMaterial.PARALLAXTEXTURE = Shader3D.propertyNameToID(\"u_ParallaxTexture\");\n        PBRMaterial.PARALLAXSCALE = Shader3D.propertyNameToID(\"u_ParallaxScale\");\n        PBRMaterial.EMISSIONTEXTURE = Shader3D.propertyNameToID(\"u_EmissionTexture\");\n        PBRMaterial.EMISSIONCOLOR = Shader3D.propertyNameToID(\"u_EmissionColor\");\n        PBRMaterial.EMISSIONIntensity = Shader3D.propertyNameToID(\"u_EmissionIntensity\");\n        PBRMaterial.DETAILALBEDOTEXTURE = Shader3D.propertyNameToID(\"u_DetailAlbedoTexture\");\n        PBRMaterial.DETAILNORMALTEXTURE = Shader3D.propertyNameToID(\"u_DetailNormalTexture\");\n        PBRMaterial.DETAILTILLINGOFFSET = Shader3D.propertyNameToID(\"u_DetailTillingOffset\");\n        PBRMaterial.DETAILNORMALSCALE = Shader3D.propertyNameToID(\"u_DetailNormalScale\");\n        PBRMaterial.CLEARCOAT = Shader3D.propertyNameToID(\"u_ClearCoatFactor\");\n        PBRMaterial.SHADERDEFINE_CLEARCOATTEXTURE = Shader3D.getDefineByName(\"CLEARCOATMAP\");\n        PBRMaterial.CLEARCOATTEXTURE = Shader3D.propertyNameToID(\"u_ClearCoatTexture\");\n        PBRMaterial.CLEARCOATROUGHNESS = Shader3D.propertyNameToID(\"u_ClearCoatRoughness\");\n        PBRMaterial.SHADERDEFINE_CLEARCOATROUGHNESSTEXTURE = Shader3D.getDefineByName(\"CLEARCOAT_ROUGHNESSMAP\");\n        PBRMaterial.CLEARCOATROUGHNESSTEXTURE = Shader3D.propertyNameToID(\"u_ClearCoatRoughnessTexture\");\n        PBRMaterial.CLEARCOATNORMALTEXTURE = Shader3D.propertyNameToID(\"u_ClearCoatNormalTexture\");\n        PBRMaterial.ANISOTROPY = Shader3D.propertyNameToID(\"u_AnisotropyStrength\");\n        PBRMaterial.SHADERDEFINE_ANISOTROPYTEXTURE = Shader3D.getDefineByName(\"ANISOTROPYMAP\");\n        PBRMaterial.ANISOTROPYTEXTURE = Shader3D.propertyNameToID(\"u_AnisotropyTexture\");\n        PBRMaterial.ANISOTROPYROTATION = Shader3D.propertyNameToID(\"u_AnisotropyRotation\");\n    }\n    get albedoColor() {\n        return this._shaderValues.getColor(PBRMaterial.ALBEDOCOLOR);\n    }\n    set albedoColor(value) {\n        this._shaderValues.setColor(PBRMaterial.ALBEDOCOLOR, value);\n    }\n    get albedoTexture() {\n        if (this.hasDefine(PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE)) {\n            return this._shaderValues.getTexture(PBRMaterial.ALBEDOTEXTURE);\n        }\n        else {\n            return null;\n        }\n    }\n    set albedoTexture(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n        else\n            this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n        this.setTextureByIndex(PBRMaterial.ALBEDOTEXTURE, value);\n    }\n    get normalTexture() {\n        if (this.hasDefine(PBRMaterial.SHADERDEFINE_NORMALTEXTURE)) {\n            return this._shaderValues.getTexture(PBRMaterial.NORMALTEXTURE);\n        }\n        else {\n            return null;\n        }\n    }\n    set normalTexture(value) {\n        if (value) {\n            this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_NORMALTEXTURE);\n        }\n        else {\n            this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_NORMALTEXTURE);\n        }\n        this.setTextureByIndex(PBRMaterial.NORMALTEXTURE, value);\n    }\n    get normalTextureScale() {\n        return this._shaderValues.getNumber(PBRMaterial.NORMALSCALE);\n    }\n    set normalTextureScale(value) {\n        this._shaderValues.setNumber(PBRMaterial.NORMALSCALE, value);\n    }\n    get parallaxTexture() {\n        return this._shaderValues.getTexture(PBRMaterial.PARALLAXTEXTURE);\n    }\n    set parallaxTexture(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_PARALLAXTEXTURE);\n        else\n            this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_PARALLAXTEXTURE);\n        this.setTextureByIndex(PBRMaterial.PARALLAXTEXTURE, value);\n    }\n    get parallaxTextureScale() {\n        return this._shaderValues.getNumber(PBRMaterial.PARALLAXSCALE);\n    }\n    set parallaxTextureScale(value) {\n        this._shaderValues.setNumber(PBRMaterial.PARALLAXSCALE, Math.max(0.005, Math.min(0.08, value)));\n    }\n    get occlusionTexture() {\n        return this._shaderValues.getTexture(PBRMaterial.OCCLUSIONTEXTURE);\n    }\n    set occlusionTexture(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_OCCLUSIONTEXTURE);\n        else\n            this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_OCCLUSIONTEXTURE);\n        this.setTextureByIndex(PBRMaterial.OCCLUSIONTEXTURE, value);\n    }\n    get occlusionTextureStrength() {\n        return this._shaderValues.getNumber(PBRMaterial.OCCLUSIONSTRENGTH);\n    }\n    set occlusionTextureStrength(value) {\n        this._shaderValues.setNumber(PBRMaterial.OCCLUSIONSTRENGTH, Math.max(0.0, Math.min(1.0, value)));\n    }\n    get smoothness() {\n        return this._shaderValues.getNumber(PBRMaterial.SMOOTHNESS);\n    }\n    set smoothness(value) {\n        this._shaderValues.setNumber(PBRMaterial.SMOOTHNESS, Math.max(0.0, Math.min(1.0, value)));\n    }\n    get enableVertexColor() {\n        return this.hasDefine(PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n    }\n    set enableVertexColor(value) {\n        if (value)\n            this.addDefine(PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n        else\n            this.removeDefine(PBRMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n    }\n    get enableEmission() {\n        return this._shaderValues.hasDefine(PBRShaderLib.DEFINE_EMISSION);\n    }\n    set enableEmission(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRShaderLib.DEFINE_EMISSION);\n        else\n            this._shaderValues.removeDefine(PBRShaderLib.DEFINE_EMISSION);\n    }\n    get emissionColor() {\n        return this._shaderValues.getColor(PBRMaterial.EMISSIONCOLOR);\n    }\n    set emissionColor(value) {\n        this._shaderValues.setColor(PBRMaterial.EMISSIONCOLOR, value);\n    }\n    get emissionIntensity() {\n        return this._shaderValues.getNumber(PBRMaterial.EMISSIONIntensity);\n    }\n    set emissionIntensity(value) {\n        this._shaderValues.setNumber(PBRMaterial.EMISSIONIntensity, value);\n    }\n    get emissionTexture() {\n        return this._shaderValues.getTexture(PBRMaterial.EMISSIONTEXTURE);\n    }\n    set emissionTexture(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_EMISSIONTEXTURE);\n        else\n            this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_EMISSIONTEXTURE);\n        this.setTextureByIndex(PBRMaterial.EMISSIONTEXTURE, value);\n    }\n    get tilingOffset() {\n        return this._shaderValues.getVector(PBRMaterial.TILINGOFFSET);\n    }\n    set tilingOffset(value) {\n        if (value) {\n            this._shaderValues.setVector(PBRMaterial.TILINGOFFSET, value);\n        }\n        else {\n            this._shaderValues.getVector(PBRMaterial.TILINGOFFSET).setValue(1.0, 1.0, 0.0, 0.0);\n        }\n    }\n    get detailAlbedoTexture() {\n        return this._shaderValues.getTexture(PBRMaterial.DETAILALBEDOTEXTURE);\n    }\n    set detailAlbedoTexture(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_DETAILALBEDO);\n        else\n            this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_DETAILALBEDO);\n        this.setTextureByIndex(PBRMaterial.DETAILALBEDOTEXTURE, value);\n    }\n    get detailNormalTexture() {\n        return this._shaderValues.getTexture(PBRMaterial.DETAILNORMALTEXTURE);\n    }\n    set detailNormalTexture(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_DETAILNORMAL);\n        else\n            this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_DETAILNORMAL);\n        this.setTextureByIndex(PBRMaterial.DETAILNORMALTEXTURE, value);\n    }\n    get detailTilingOffset() {\n        return this._shaderValues.getVector(PBRMaterial.DETAILTILLINGOFFSET);\n    }\n    set detailTilingOffset(value) {\n        if (value) {\n            this._shaderValues.setVector(PBRMaterial.DETAILTILLINGOFFSET, value);\n        }\n        else {\n            this._shaderValues.getVector(PBRMaterial.DETAILTILLINGOFFSET).setValue(1.0, 1.0, 0.0, 0.0);\n        }\n    }\n    get detailNormalScale() {\n        return this._shaderValues.getNumber(PBRMaterial.DETAILNORMALSCALE);\n    }\n    set detailNormalScale(value) {\n        this._shaderValues.setNumber(PBRMaterial.DETAILNORMALSCALE, value);\n    }\n    set renderMode(value) {\n        switch (value) {\n            case PBRRenderMode.Opaque:\n                this.alphaTest = false;\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\n                this.depthWrite = true;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);\n                break;\n            case PBRRenderMode.Cutout:\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\n                this.alphaTest = true;\n                this.depthWrite = true;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);\n                break;\n            case PBRRenderMode.Fade:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                this._shaderValues.removeDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);\n                break;\n            case PBRRenderMode.Transparent:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_ONE;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                this._shaderValues.addDefine(PBRMaterial.SHADERDEFINE_TRANSPARENTBLEND);\n                break;\n            default:\n                throw new Error(\"unknown renderMode: \" + value);\n        }\n    }\n    get anisotropyEnable() {\n        return this.shaderData.hasDefine(PBRShaderLib.DEFINE_ANISOTROPY);\n    }\n    set anisotropyEnable(value) {\n        if (value) {\n            this.shaderData.addDefine(PBRShaderLib.DEFINE_ANISOTROPY);\n        }\n        else {\n            this.shaderData.removeDefine(PBRShaderLib.DEFINE_ANISOTROPY);\n        }\n    }\n    get anisotropy() {\n        return this.getFloatByIndex(PBRMaterial.ANISOTROPY);\n    }\n    set anisotropy(value) {\n        this.setFloatByIndex(PBRMaterial.ANISOTROPY, Math.min(1, Math.max(-1, value)));\n    }\n    get anisotropyTexture() {\n        return this.getTextureByIndex(PBRMaterial.ANISOTROPYTEXTURE);\n    }\n    set anisotropyTexture(value) {\n        this.setTextureByIndex(PBRMaterial.ANISOTROPYTEXTURE, value);\n        if (value) {\n            this.addDefine(PBRMaterial.SHADERDEFINE_ANISOTROPYTEXTURE);\n        }\n        else {\n            this.removeDefine(PBRMaterial.SHADERDEFINE_ANISOTROPYTEXTURE);\n        }\n    }\n    get anisotropyRotation() {\n        return this.getFloatByIndex(PBRMaterial.ANISOTROPYROTATION);\n    }\n    set anisotropyRotation(value) {\n        value = Math.max(Math.min(value, 1.0), 0.0);\n        this.setFloatByIndex(PBRMaterial.ANISOTROPYROTATION, value);\n    }\n    get clearCoatEnable() {\n        return this.shaderData.hasDefine(PBRShaderLib.DEFINE_CLEARCOAT);\n    }\n    set clearCoatEnable(value) {\n        if (value) {\n            this.shaderData.addDefine(PBRShaderLib.DEFINE_CLEARCOAT);\n        }\n        else {\n            this.shaderData.removeDefine(PBRShaderLib.DEFINE_CLEARCOAT);\n        }\n    }\n    get clearCoat() {\n        return this.shaderData.getNumber(PBRMaterial.CLEARCOAT);\n    }\n    set clearCoat(value) {\n        this.shaderData.setNumber(PBRMaterial.CLEARCOAT, value);\n    }\n    get clearCoatTexture() {\n        return this.shaderData.getTexture(PBRMaterial.CLEARCOATTEXTURE);\n    }\n    set clearCoatTexture(value) {\n        if (value) {\n            this.shaderData.addDefine(PBRMaterial.SHADERDEFINE_CLEARCOATTEXTURE);\n        }\n        else {\n            this.shaderData.removeDefine(PBRMaterial.SHADERDEFINE_CLEARCOATTEXTURE);\n        }\n        this.setTextureByIndex(PBRMaterial.CLEARCOATTEXTURE, value);\n    }\n    get clearCoatRoughness() {\n        return this.shaderData.getNumber(PBRMaterial.CLEARCOATROUGHNESS);\n    }\n    set clearCoatRoughness(value) {\n        this.shaderData.setNumber(PBRMaterial.CLEARCOATROUGHNESS, value);\n    }\n    get clearCoatRoughnessTexture() {\n        return this.shaderData.getTexture(PBRMaterial.CLEARCOATROUGHNESSTEXTURE);\n    }\n    set clearCoatRoughnessTexture(value) {\n        if (value) {\n            this.shaderData.addDefine(PBRMaterial.SHADERDEFINE_CLEARCOATROUGHNESSTEXTURE);\n        }\n        else {\n            this.shaderData.removeDefine(PBRMaterial.SHADERDEFINE_CLEARCOATROUGHNESSTEXTURE);\n        }\n        this.setTextureByIndex(PBRMaterial.CLEARCOATROUGHNESSTEXTURE, value);\n    }\n    get clearCoatNormalTexture() {\n        return this.shaderData.getTexture(PBRMaterial.CLEARCOATNORMALTEXTURE);\n    }\n    set clearCoatNormalTexture(value) {\n        if (value) {\n            this.shaderData.addDefine(PBRShaderLib.DEFINE_CLEARCOAT_NORMAL);\n        }\n        else {\n            this.shaderData.removeDefine(PBRShaderLib.DEFINE_CLEARCOAT_NORMAL);\n        }\n        this.setTextureByIndex(PBRMaterial.CLEARCOATNORMALTEXTURE, value);\n    }\n    constructor() {\n        super();\n        this._shaderValues.setColor(PBRMaterial.ALBEDOCOLOR, new Color(1.0, 1.0, 1.0, 1.0));\n        this._shaderValues.setColor(PBRMaterial.EMISSIONCOLOR, new Color(1.0, 1.0, 1.0, 1.0));\n        this._shaderValues.setVector(PBRMaterial.TILINGOFFSET, new Vector4(1.0, 1.0, 0.0, 0.0));\n        this._shaderValues.setNumber(PBRMaterial.SMOOTHNESS, 0.5);\n        this._shaderValues.setNumber(PBRMaterial.OCCLUSIONSTRENGTH, 1.0);\n        this._shaderValues.setNumber(PBRMaterial.NORMALSCALE, 1.0);\n        this._shaderValues.setNumber(PBRMaterial.PARALLAXSCALE, 0.001);\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, 0.5);\n        this.renderMode = PBRRenderMode.Opaque;\n    }\n    get smoothnessTextureScale() {\n        return this._shaderValues.getNumber(PBRMaterial.SMOOTHNESS);\n    }\n    set smoothnessTextureScale(value) {\n        this._shaderValues.setNumber(PBRMaterial.SMOOTHNESS, Math.max(0.0, Math.min(1.0, value)));\n    }\n}\nPBRMaterial.renderQuality = PBRRenderQuality.High;\n","import { PBRMaterial } from \"./PBRMaterial\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nexport var PBRMetallicSmoothnessSource;\n(function (PBRMetallicSmoothnessSource) {\n    PBRMetallicSmoothnessSource[PBRMetallicSmoothnessSource[\"MetallicGlossTextureAlpha\"] = 0] = \"MetallicGlossTextureAlpha\";\n    PBRMetallicSmoothnessSource[PBRMetallicSmoothnessSource[\"AlbedoTextureAlpha\"] = 1] = \"AlbedoTextureAlpha\";\n})(PBRMetallicSmoothnessSource || (PBRMetallicSmoothnessSource = {}));\nexport class PBRStandardMaterial extends PBRMaterial {\n    static __init__() {\n        PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE = Shader3D.getDefineByName(\"METALLICGLOSSTEXTURE\");\n        PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA = Shader3D.getDefineByName(\"SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\");\n        PBRStandardMaterial.METALLICGLOSSTEXTURE = Shader3D.propertyNameToID(\"u_MetallicGlossTexture\");\n        PBRStandardMaterial.METALLIC = Shader3D.propertyNameToID(\"u_Metallic\");\n    }\n    get metallicGlossTexture() {\n        return this._shaderValues.getTexture(PBRStandardMaterial.METALLICGLOSSTEXTURE);\n    }\n    set metallicGlossTexture(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE);\n        else\n            this._shaderValues.removeDefine(PBRStandardMaterial.SHADERDEFINE_METALLICGLOSSTEXTURE);\n        this._shaderValues.setTexture(PBRStandardMaterial.METALLICGLOSSTEXTURE, value);\n    }\n    get metallic() {\n        return this._shaderValues.getNumber(PBRStandardMaterial.METALLIC);\n    }\n    set metallic(value) {\n        this._shaderValues.setNumber(PBRStandardMaterial.METALLIC, Math.max(0.0, Math.min(1.0, value)));\n    }\n    get smoothnessSource() {\n        return this._smoothnessSource;\n    }\n    set smoothnessSource(value) {\n        if (value)\n            this._shaderValues.addDefine(PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA);\n        else\n            this._shaderValues.removeDefine(PBRStandardMaterial.SHADERDEFINE_SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA);\n        this._smoothnessSource = value;\n    }\n    constructor() {\n        super();\n        this._smoothnessSource = 0;\n        this.setShaderName(\"PBR\");\n    }\n    clone() {\n        var dest = new PBRStandardMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../../../resource/Material\";\nexport class SkyBoxMaterial extends Material {\n    static __initDefine__() {\n        SkyBoxMaterial.TINTCOLOR = Shader3D.propertyNameToID(\"u_TintColor\");\n        SkyBoxMaterial.EXPOSURE = Shader3D.propertyNameToID(\"u_Exposure\");\n        SkyBoxMaterial.ROTATION = Shader3D.propertyNameToID(\"u_Rotation\");\n        SkyBoxMaterial.TEXTURECUBE = Shader3D.propertyNameToID(\"u_CubeTexture\");\n    }\n    get tintColor() {\n        return this._shaderValues.getColor(SkyBoxMaterial.TINTCOLOR);\n    }\n    set tintColor(value) {\n        this._shaderValues.setColor(SkyBoxMaterial.TINTCOLOR, value);\n    }\n    get exposure() {\n        return this._shaderValues.getNumber(SkyBoxMaterial.EXPOSURE);\n    }\n    set exposure(value) {\n        this._shaderValues.setNumber(SkyBoxMaterial.EXPOSURE, value);\n    }\n    get rotation() {\n        return this._shaderValues.getNumber(SkyBoxMaterial.ROTATION);\n    }\n    set rotation(value) {\n        this._shaderValues.setNumber(SkyBoxMaterial.ROTATION, value);\n    }\n    get textureCube() {\n        return this._shaderValues.getTexture(SkyBoxMaterial.TEXTURECUBE);\n    }\n    set textureCube(value) {\n        this._shaderValues.setTexture(SkyBoxMaterial.TEXTURECUBE, value);\n    }\n    clone() {\n        var dest = new SkyBoxMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"SkyBox\");\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../../../resource/Material\";\nexport class SkyProceduralMaterial extends Material {\n    static __initDefine__() {\n        SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY = Shader3D.getDefineByName(\"SUN_HIGH_QUALITY\");\n        SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE = Shader3D.getDefineByName(\"SUN_SIMPLE\");\n        SkyProceduralMaterial.SUNSIZE = Shader3D.propertyNameToID(\"u_SunSize\");\n        SkyProceduralMaterial.SUNSIZECONVERGENCE = Shader3D.propertyNameToID(\"u_SunSizeConvergence\");\n        SkyProceduralMaterial.ATMOSPHERETHICKNESS = Shader3D.propertyNameToID(\"u_AtmosphereThickness\");\n        SkyProceduralMaterial.SKYTINT = Shader3D.propertyNameToID(\"u_SkyTint\");\n        SkyProceduralMaterial.GROUNDTINT = Shader3D.propertyNameToID(\"u_GroundTint\");\n        SkyProceduralMaterial.EXPOSURE = Shader3D.propertyNameToID(\"u_Exposure\");\n    }\n    get sunDisk() {\n        return this._sunDisk;\n    }\n    set sunDisk(value) {\n        switch (value) {\n            case SkyProceduralMaterial.SUN_HIGH_QUALITY:\n                this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE);\n                this._shaderValues.addDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY);\n                break;\n            case SkyProceduralMaterial.SUN_SIMPLE:\n                this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY);\n                this._shaderValues.addDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE);\n                break;\n            case SkyProceduralMaterial.SUN_NODE:\n                this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_HIGH_QUALITY);\n                this._shaderValues.removeDefine(SkyProceduralMaterial.SHADERDEFINE_SUN_SIMPLE);\n                break;\n            default:\n                throw \"SkyBoxProceduralMaterial: unknown sun value.\";\n        }\n        this._sunDisk = value;\n    }\n    get sunSize() {\n        return this._shaderValues.getNumber(SkyProceduralMaterial.SUNSIZE);\n    }\n    set sunSize(value) {\n        value = Math.min(Math.max(0.0, value), 1.0);\n        this._shaderValues.setNumber(SkyProceduralMaterial.SUNSIZE, value);\n    }\n    get sunSizeConvergence() {\n        return this._shaderValues.getNumber(SkyProceduralMaterial.SUNSIZECONVERGENCE);\n    }\n    set sunSizeConvergence(value) {\n        value = Math.min(Math.max(0.0, value), 20.0);\n        this._shaderValues.setNumber(SkyProceduralMaterial.SUNSIZECONVERGENCE, value);\n    }\n    get atmosphereThickness() {\n        return this._shaderValues.getNumber(SkyProceduralMaterial.ATMOSPHERETHICKNESS);\n    }\n    set atmosphereThickness(value) {\n        value = Math.min(Math.max(0.0, value), 5.0);\n        this._shaderValues.setNumber(SkyProceduralMaterial.ATMOSPHERETHICKNESS, value);\n    }\n    get skyTint() {\n        return this._shaderValues.getColor(SkyProceduralMaterial.SKYTINT);\n    }\n    set skyTint(value) {\n        this._shaderValues.setColor(SkyProceduralMaterial.SKYTINT, value);\n    }\n    get groundTint() {\n        return this._shaderValues.getColor(SkyProceduralMaterial.GROUNDTINT);\n    }\n    set groundTint(value) {\n        this._shaderValues.setColor(SkyProceduralMaterial.GROUNDTINT, value);\n    }\n    get exposure() {\n        return this._shaderValues.getNumber(SkyProceduralMaterial.EXPOSURE);\n    }\n    set exposure(value) {\n        value = Math.min(Math.max(0.0, value), 8.0);\n        this._shaderValues.setNumber(SkyProceduralMaterial.EXPOSURE, value);\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"SkyProcedural\");\n        this.sunDisk = SkyProceduralMaterial.SUN_HIGH_QUALITY;\n        this.sunSize = 0.04;\n        this.sunSizeConvergence = 5;\n        this.atmosphereThickness = 1.0;\n        this.skyTint = new Color(0.5, 0.5, 0.5, 1.0);\n        this.groundTint = new Color(0.369, 0.349, 0.341, 1.0);\n        this.exposure = 1.3;\n    }\n    clone() {\n        var dest = new SkyProceduralMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nSkyProceduralMaterial.SUN_NODE = 0;\nSkyProceduralMaterial.SUN_SIMPLE = 1;\nSkyProceduralMaterial.SUN_HIGH_QUALITY = 2;\n","import { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Material } from \"../../../resource/Material\";\nexport class UnlitMaterial extends Material {\n    static __initDefine__() {\n        UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE = Shader3D.getDefineByName(\"ALBEDOTEXTURE\");\n        UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR = Shader3D.getDefineByName(\"ENABLEVERTEXCOLOR\");\n        UnlitMaterial.ALBEDOTEXTURE = Shader3D.propertyNameToID(\"u_AlbedoTexture\");\n        UnlitMaterial.ALBEDOCOLOR = Shader3D.propertyNameToID(\"u_AlbedoColor\");\n        UnlitMaterial.TILINGOFFSET = Shader3D.propertyNameToID(\"u_TilingOffset\");\n    }\n    get albedoColor() {\n        return this.getColorByIndex(UnlitMaterial.ALBEDOCOLOR);\n    }\n    set albedoColor(value) {\n        this.setColorByIndex(UnlitMaterial.ALBEDOCOLOR, value.scale(this._albedoIntensity));\n    }\n    get albedoIntensity() {\n        return this._albedoIntensity;\n    }\n    set albedoIntensity(value) {\n        this._albedoIntensity = value;\n    }\n    get albedoTexture() {\n        return this.getTextureByIndex(UnlitMaterial.ALBEDOTEXTURE);\n    }\n    set albedoTexture(value) {\n        if (value)\n            this.addDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n        else\n            this.removeDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n        this.setTextureByIndex(UnlitMaterial.ALBEDOTEXTURE, value);\n    }\n    get tilingOffset() {\n        return this.getVector4ByIndex(UnlitMaterial.TILINGOFFSET);\n    }\n    set tilingOffset(value) {\n        if (value) {\n            this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET, value);\n        }\n        else {\n            this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET, new Vector4(1.0, 1.0, 0.0, 0.0));\n        }\n    }\n    get enableVertexColor() {\n        return this.hasDefine(UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n    }\n    set enableVertexColor(value) {\n        if (value)\n            this.addDefine(UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n        else\n            this.removeDefine(UnlitMaterial.SHADERDEFINE_ENABLEVERTEXCOLOR);\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"Unlit\");\n        this.renderMode = UnlitMaterial.RENDERMODE_OPAQUE;\n        this.albedoIntensity = 1.0;\n    }\n    clone() {\n        var dest = new UnlitMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n    set renderMode(value) {\n        switch (value) {\n            case UnlitMaterial.RENDERMODE_OPAQUE:\n                this.alphaTest = false;\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\n                this.depthWrite = true;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case UnlitMaterial.RENDERMODE_CUTOUT:\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\n                this.alphaTest = true;\n                this.depthWrite = true;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case UnlitMaterial.RENDERMODE_TRANSPARENT:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            default:\n                throw new Error(\"unknown renderMode: \" + value);\n        }\n    }\n}\nUnlitMaterial.RENDERMODE_OPAQUE = 0;\nUnlitMaterial.RENDERMODE_CUTOUT = 1;\nUnlitMaterial.RENDERMODE_TRANSPARENT = 2;\nUnlitMaterial.RENDERMODE_ADDTIVE = 3;\n","export var BaseRenderType;\n(function (BaseRenderType) {\n    BaseRenderType[BaseRenderType[\"BaseRender\"] = 0] = \"BaseRender\";\n    BaseRenderType[BaseRenderType[\"MeshRender\"] = 1] = \"MeshRender\";\n    BaseRenderType[BaseRenderType[\"ParticleRender\"] = 2] = \"ParticleRender\";\n    BaseRenderType[BaseRenderType[\"TrailRender\"] = 3] = \"TrailRender\";\n    BaseRenderType[BaseRenderType[\"LineRender\"] = 4] = \"LineRender\";\n    BaseRenderType[BaseRenderType[\"TerrainRender\"] = 5] = \"TerrainRender\";\n    BaseRenderType[BaseRenderType[\"SkyRender\"] = 7] = \"SkyRender\";\n    BaseRenderType[BaseRenderType[\"SimpleSkinRender\"] = 8] = \"SimpleSkinRender\";\n    BaseRenderType[BaseRenderType[\"SkinnedMeshRender\"] = 9] = \"SkinnedMeshRender\";\n})(BaseRenderType || (BaseRenderType = {}));\nexport var ENodeCustomData;\n(function (ENodeCustomData) {\n    ENodeCustomData[ENodeCustomData[\"custom_0\"] = 0] = \"custom_0\";\n    ENodeCustomData[ENodeCustomData[\"custom_1\"] = 1] = \"custom_1\";\n    ENodeCustomData[ENodeCustomData[\"custom_2\"] = 2] = \"custom_2\";\n})(ENodeCustomData || (ENodeCustomData = {}));\n","export class Laya3DRender {\n}\n","export class MeshSprite3DShaderDeclaration {\n}\n","import { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { MeshSprite3DShaderDeclaration } from \"../../core/MeshSprite3DShaderDeclaration\";\nexport class MeshUtil {\n    static getMeshDefine(mesh, out) {\n        out.length = 0;\n        let vertexElements = mesh._vertexBuffer.vertexDeclaration._vertexElements;\n        for (const element of vertexElements) {\n            switch (element.elementUsage) {\n                case VertexMesh.MESH_COLOR0:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR);\n                    break;\n                case VertexMesh.MESH_TEXTURECOORDINATE0:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0);\n                    break;\n                case VertexMesh.MESH_TEXTURECOORDINATE1:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1);\n                    break;\n                case VertexMesh.MESH_TANGENT0:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT);\n                    break;\n            }\n        }\n    }\n}\n","import { Component } from \"../../components/Component\";\nimport { MeshRenderer } from \"./MeshRenderer\";\nexport class MeshFilter extends Component {\n    constructor() {\n        super();\n        this.runInEditor = true;\n    }\n    _onEnable() {\n        const render = this.owner.getComponent(MeshRenderer);\n        render && render._enabled && render._onMeshChange(this._sharedMesh);\n    }\n    _onDisable() {\n        const render = this.owner.getComponent(MeshRenderer);\n    }\n    get sharedMesh() {\n        return this._sharedMesh;\n    }\n    set sharedMesh(value) {\n        if (this._sharedMesh !== value) {\n            var lastValue = this._sharedMesh;\n            if (lastValue) {\n                lastValue._removeReference();\n            }\n            if (value) {\n                value._addReference();\n            }\n            this._sharedMesh = value;\n            const render = this.owner.getComponent(MeshRenderer);\n            if (!render) {\n                return;\n            }\n            render._onMeshChange(value);\n            this._sharedMesh = value;\n        }\n    }\n    _onDestroy() {\n        (this._sharedMesh) && (this._sharedMesh._removeReference(), this._sharedMesh = null);\n    }\n    _cloneTo(dest) {\n        dest.sharedMesh = this.sharedMesh;\n        super._cloneTo(dest);\n    }\n}\nMeshFilter._meshVerticeDefine = [];\n","import { Node } from \"../../display/Node\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { Stat } from \"../../utils/Stat\";\nimport { ILaya } from \"../../../ILaya\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { Event } from \"../../events/Event\";\nexport var StaticFlag;\n(function (StaticFlag) {\n    StaticFlag[StaticFlag[\"Normal\"] = 1] = \"Normal\";\n    StaticFlag[StaticFlag[\"StaticBatch\"] = 2] = \"StaticBatch\";\n})(StaticFlag || (StaticFlag = {}));\nexport class Sprite3D extends Node {\n    static __init__() {\n        Sprite3D.WORLDMATRIX = Shader3D.propertyNameToID(\"u_WorldMat\");\n        Sprite3D.WORLDINVERTFRONT = Shader3D.propertyNameToID(\"u_WorldInvertFront\");\n        Sprite3D.sprite3DCommandUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Sprite3D\");\n        Sprite3D.sprite3DCommandUniformMap.addShaderUniform(Sprite3D.WORLDMATRIX, \"u_WorldMat\", ShaderDataType.Matrix4x4);\n        Sprite3D.sprite3DCommandUniformMap.addShaderUniform(Sprite3D.WORLDINVERTFRONT, \"u_WorldInvertFront\", ShaderDataType.Vector4);\n    }\n    static instantiate(original, parent = null, worldPositionStays = true, position = null, rotation = null) {\n        var destSprite3D = original.clone();\n        (parent) && (parent.addChild(destSprite3D));\n        var transform = destSprite3D.transform;\n        if (worldPositionStays) {\n            var worldMatrix = transform.worldMatrix;\n            original.transform.worldMatrix.cloneTo(worldMatrix);\n            transform.worldMatrix = worldMatrix;\n        }\n        else {\n            (position) && (transform.position = position);\n            (rotation) && (transform.rotation = rotation);\n        }\n        return destSprite3D;\n    }\n    static load(url, complete) {\n        ILaya.loader.load(url).then((res) => {\n            complete && complete.runWith([res === null || res === void 0 ? void 0 : res.create()]);\n        });\n    }\n    get id() {\n        return this._id;\n    }\n    get layer() {\n        return this._layer;\n    }\n    set layer(value) {\n        if (this._layer !== value) {\n            if (value >= 0 && value <= 30) {\n                this._layer = value;\n                this.event(Event.LAYER_CHANGE, value);\n            }\n            else {\n                throw new Error(\"Layer value must be 0-30.\");\n            }\n        }\n    }\n    get isStatic() {\n        return !!(this._isStatic >> 1 | 0x0);\n    }\n    set isStatic(value) {\n        this._isStatic = value ? StaticFlag.StaticBatch : StaticFlag.Normal;\n        this.event(Event.STATIC_MASK, this._isStatic);\n    }\n    get transform() {\n        return this._transform;\n    }\n    get scene() {\n        return this._scene;\n    }\n    constructor(name, isStatic) {\n        super();\n        this._isRenderNode = 0;\n        this._nodeType = 1;\n        this._id = ++_uniqueIDCounter;\n        this._transform = Laya3DRender.Render3DModuleDataFactory.createTransform(this);\n        this._isStatic = isStatic ? StaticFlag.StaticBatch : StaticFlag.Normal;\n        this.layer = 0;\n        this.name = name ? name : \"New Sprite3D\";\n    }\n    _onActive() {\n        super._onActive();\n        Stat.sprite3DCount++;\n    }\n    _onInActive() {\n        super._onInActive();\n        Stat.sprite3DCount--;\n    }\n    _onAdded() {\n        if (this._parent instanceof Sprite3D) {\n            var parent3D = this._parent;\n            this.transform._setParent(parent3D.transform);\n        }\n        else\n            this.transform._onWorldTransform();\n        super._onAdded();\n    }\n    _onRemoved() {\n        super._onRemoved();\n        if (this._parent instanceof Sprite3D)\n            this.transform._setParent(null);\n    }\n    onStartListeningToType(type) {\n        super.onStartListeningToType(type);\n        if (type.startsWith(\"collision\") || type.startsWith(\"trigger\"))\n            this.event(Event.UPDATE_PHY_EVENT_FILTER);\n    }\n    _cloneTo(destObject, srcRoot, dstRoot) {\n        if (this._destroyed)\n            throw new Error(\"Sprite3D: Can't be cloned if the Sprite3D has destroyed.\");\n        var trans = this._transform;\n        var destTrans = destObject._transform;\n        destObject.name = this.name;\n        destObject.tag = this.tag;\n        destObject._destroyed = this._destroyed;\n        destObject.active = this.active;\n        destTrans.localPosition = trans.localPosition;\n        destTrans.localRotation = trans.localRotation;\n        destTrans.localScale = trans.localScale;\n        destObject._isStatic = this._isStatic;\n        destObject.layer = this.layer;\n        super._cloneTo(destObject, srcRoot, dstRoot);\n    }\n    static _createSprite3DInstance(scrSprite) {\n        let node = new (Object.getPrototypeOf(scrSprite).constructor)();\n        let children = scrSprite._children;\n        for (let i = 0, n = children.length; i < n; i++) {\n            let child = Sprite3D._createSprite3DInstance(children[i]);\n            node.addChild(child);\n        }\n        return node;\n    }\n    static _parseSprite3DInstance(srcRoot, dstRoot, scrSprite, dstSprite) {\n        let srcChildren = scrSprite._children;\n        let dstChildren = dstSprite._children;\n        for (let i = 0, n = srcChildren.length; i < n; i++)\n            Sprite3D._parseSprite3DInstance(srcRoot, dstRoot, srcChildren[i], dstChildren[i]);\n        scrSprite._cloneTo(dstSprite, srcRoot, dstRoot);\n    }\n    clone() {\n        let dstSprite3D = Sprite3D._createSprite3DInstance(this);\n        Sprite3D._parseSprite3DInstance(this, dstSprite3D, this, dstSprite3D);\n        return dstSprite3D;\n    }\n    destroy(destroyChild = true) {\n        if (this._destroyed)\n            return;\n        super.destroy(destroyChild);\n        this._transform = null;\n    }\n}\nvar _uniqueIDCounter = 0;\n","import { Sprite3D } from \"./Sprite3D\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class RenderableSprite3D extends Sprite3D {\n    static __init__() {\n        RenderableSprite3D.SHADERDEFINE_RECEIVE_SHADOW = Shader3D.getDefineByName(\"RECEIVESHADOW\");\n        RenderableSprite3D.SAHDERDEFINE_LIGHTMAP = Shader3D.getDefineByName(\"LIGHTMAP\");\n        RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL = Shader3D.getDefineByName(\"LIGHTMAP_DIRECTIONAL\");\n        RenderableSprite3D.LIGHTMAPSCALEOFFSET = Shader3D.propertyNameToID(\"u_LightmapScaleOffset\");\n        RenderableSprite3D.LIGHTMAP = Shader3D.propertyNameToID(\"u_LightMap\");\n        RenderableSprite3D.LIGHTMAP_DIRECTION = Shader3D.propertyNameToID(\"u_LightMapDirection\");\n        RenderableSprite3D.PICKCOLOR = Shader3D.propertyNameToID(\"u_PickColor\");\n        const commandUniform = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Sprite3D\");\n        RenderableSprite3D.SHADERDEFINE_MORPHTARGET = Shader3D.getDefineByName(\"MORPHTARGETS\");\n        RenderableSprite3D.SHADERDEFINE_MORPHTARGET_POSITION = Shader3D.getDefineByName(\"MORPHTARGETS_POSITION\");\n        RenderableSprite3D.SHADERDEFINE_MORPHTARGET_NORMAL = Shader3D.getDefineByName(\"MORPHTARGETS_NORMAL\");\n        RenderableSprite3D.SHADERDEFINE_MORPHTARGET_TANGENT = Shader3D.getDefineByName(\"MORPHTARGETS_TANGENT\");\n        RenderableSprite3D.MorphTex = Shader3D.propertyNameToID(\"u_MorphTargetsTex\");\n        RenderableSprite3D.MorphParams = Shader3D.propertyNameToID(\"u_MorphParams\");\n        RenderableSprite3D.MorphAttriOffset = Shader3D.propertyNameToID(\"u_MorphAttrOffset\");\n        RenderableSprite3D.MorphActiceTargets = Shader3D.propertyNameToID(\"u_MorphActiveTargets\");\n        RenderableSprite3D.MorphActiveCount = Shader3D.propertyNameToID(\"u_MorphTargetActiveCount\");\n        commandUniform.addShaderUniform(RenderableSprite3D.MorphTex, \"u_MorphTargetsTex\", ShaderDataType.Texture2D);\n        commandUniform.addShaderUniform(RenderableSprite3D.MorphParams, \"u_MorphParams\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(RenderableSprite3D.MorphAttriOffset, \"u_MorphAttrOffset\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(RenderableSprite3D.MorphActiceTargets, \"u_MorphActiveTargets\", ShaderDataType.Buffer);\n        commandUniform.addShaderUniform(RenderableSprite3D.MorphActiveCount, \"u_MorphTargetActiveCount\", ShaderDataType.Int);\n        commandUniform.addShaderUniform(RenderableSprite3D.LIGHTMAPSCALEOFFSET, \"u_LightmapScaleOffset\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(RenderableSprite3D.LIGHTMAP, \"u_LightMap\", ShaderDataType.Texture2D);\n        commandUniform.addShaderUniform(RenderableSprite3D.LIGHTMAP_DIRECTION, \"u_LightMapDirection\", ShaderDataType.Texture2D);\n        commandUniform.addShaderUniform(RenderableSprite3D.PICKCOLOR, \"u_PickColor\", ShaderDataType.Vector3);\n        RenderableSprite3D.REFLECTIONTEXTURE = Shader3D.propertyNameToID(\"u_ReflectTexture\");\n        RenderableSprite3D.REFLECTIONCUBE_HDR_PARAMS = Shader3D.propertyNameToID(\"u_ReflectCubeHDRParams\");\n        commandUniform.addShaderUniform(RenderableSprite3D.REFLECTIONTEXTURE, \"u_ReflectTexture\", ShaderDataType.TextureCube);\n        commandUniform.addShaderUniform(RenderableSprite3D.REFLECTIONCUBE_HDR_PARAMS, \"u_ReflectCubeHDRParams\", ShaderDataType.Vector4);\n        RenderableSprite3D.AMBIENTSHAR = Shader3D.propertyNameToID(\"u_AmbientSHAr\");\n        commandUniform.addShaderUniform(RenderableSprite3D.AMBIENTSHAR, \"u_AmbientSHAr\", ShaderDataType.Vector4);\n        RenderableSprite3D.AMBIENTSHAG = Shader3D.propertyNameToID(\"u_AmbientSHAg\");\n        commandUniform.addShaderUniform(RenderableSprite3D.AMBIENTSHAG, \"u_AmbientSHAg\", ShaderDataType.Vector4);\n        RenderableSprite3D.AMBIENTSHAB = Shader3D.propertyNameToID(\"u_AmbientSHAb\");\n        commandUniform.addShaderUniform(RenderableSprite3D.AMBIENTSHAB, \"u_AmbientSHAb\", ShaderDataType.Vector4);\n        RenderableSprite3D.AMBIENTSHBR = Shader3D.propertyNameToID(\"u_AmbientSHBr\");\n        commandUniform.addShaderUniform(RenderableSprite3D.AMBIENTSHBR, \"u_AmbientSHBr\", ShaderDataType.Vector4);\n        RenderableSprite3D.AMBIENTSHBG = Shader3D.propertyNameToID(\"u_AmbientSHBg\");\n        commandUniform.addShaderUniform(RenderableSprite3D.AMBIENTSHBG, \"u_AmbientSHBg\", ShaderDataType.Vector4);\n        RenderableSprite3D.AMBIENTSHBB = Shader3D.propertyNameToID(\"u_AmbientSHBb\");\n        commandUniform.addShaderUniform(RenderableSprite3D.AMBIENTSHBB, \"u_AmbientSHBb\", ShaderDataType.Vector4);\n        RenderableSprite3D.AMBIENTSHC = Shader3D.propertyNameToID(\"u_AmbientSHC\");\n        commandUniform.addShaderUniform(RenderableSprite3D.AMBIENTSHC, \"u_AmbientSHC\", ShaderDataType.Vector4);\n    }\n    constructor(name) {\n        super(name);\n    }\n    _onInActive() {\n        super._onInActive();\n    }\n    _onActive() {\n        super._onActive();\n    }\n    _onActiveInScene() {\n        super._onActiveInScene();\n    }\n    _addToInitStaticBatchManager() {\n    }\n    _setBelongScene(scene) {\n        super._setBelongScene(scene);\n    }\n    _setUnBelongScene() {\n        super._setUnBelongScene();\n    }\n}\n","import { Vector3 } from \"../../maths/Vector3\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nexport class Bounds {\n    static merge(box1, box2, out) {\n        Vector3.min(box1.min, box2.min, out.min);\n        Vector3.max(box1.max, box2.max, out.max);\n        out.min = out.min;\n        out.max = out.max;\n    }\n    static containPoint(box, point) {\n        let max = box._imp.getMax();\n        let min = box._imp.getMin();\n        if (point.x > max.x || point.x < min.x)\n            return false;\n        if (point.y > max.y || point.y < min.y)\n            return false;\n        if (point.z > max.z || point.z < min.z)\n            return false;\n        return true;\n    }\n    get min() {\n        return this.getMin();\n    }\n    set min(value) {\n        this.setMin(value);\n    }\n    get max() {\n        return this.getMax();\n    }\n    set max(value) {\n        this.setMax(value);\n    }\n    setMin(value) {\n        this._imp.setMin(value);\n    }\n    getMin() {\n        return this._imp.getMin();\n    }\n    setMax(value) {\n        this._imp.setMax(value);\n    }\n    getMax() {\n        return this._imp.getMax();\n    }\n    setCenter(value) {\n        this._imp.setCenter(value);\n    }\n    getCenter() {\n        return this._imp.getCenter();\n    }\n    setExtent(value) {\n        this._imp.setExtent(value);\n    }\n    getExtent() {\n        return this._imp.getExtent();\n    }\n    constructor(min, max) {\n        this._imp = Laya3DRender.Render3DModuleDataFactory.createBounds(min, max);\n    }\n    _getUpdateFlag(type) {\n        return this._imp._getUpdateFlag(type);\n    }\n    _setUpdateFlag(type, value) {\n        this._imp._setUpdateFlag(type, value);\n    }\n    _getCenter(min, max, out) {\n        Vector3.add(min, max, out);\n        Vector3.scale(out, 0.5, out);\n    }\n    _getExtent(min, max, out) {\n        Vector3.subtract(max, min, out);\n        Vector3.scale(out, 0.5, out);\n    }\n    _getMin(center, extent, out) {\n        Vector3.subtract(center, extent, out);\n    }\n    _getMax(center, extent, out) {\n        Vector3.add(center, extent, out);\n    }\n    _rotateExtents(extents, rotation, out) {\n        var extentsX = extents.x;\n        var extentsY = extents.y;\n        var extentsZ = extents.z;\n        var matE = rotation.elements;\n        out.x = Math.abs(matE[0] * extentsX) + Math.abs(matE[4] * extentsY) + Math.abs(matE[8] * extentsZ);\n        out.y = Math.abs(matE[1] * extentsX) + Math.abs(matE[5] * extentsY) + Math.abs(matE[9] * extentsZ);\n        out.z = Math.abs(matE[2] * extentsX) + Math.abs(matE[6] * extentsY) + Math.abs(matE[10] * extentsZ);\n    }\n    _tranform(matrix, out) {\n        this._imp._tranform(matrix, out._imp);\n    }\n    getCorners(corners) {\n        this._imp.getCorners(corners);\n    }\n    getBoundBox(box) {\n        this._imp._getBoundBox().cloneTo(box);\n    }\n    calculateBoundsintersection(bounds) {\n        return this._imp.calculateBoundsintersection(bounds._imp);\n    }\n    cloneTo(destObject) {\n        this._imp.cloneTo(destObject._imp);\n    }\n    clone() {\n        var dest = new Bounds(new Vector3(), new Vector3());\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nBounds._UPDATE_MIN = 0x01;\nBounds._UPDATE_MAX = 0x02;\nBounds._UPDATE_CENTER = 0x04;\nBounds._UPDATE_EXTENT = 0x08;\n","import { Component } from \"../../../components/Component\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { Event } from \"../../../events/Event\";\nexport var volumeIntersectType;\n(function (volumeIntersectType) {\n    volumeIntersectType[volumeIntersectType[\"contain\"] = 0] = \"contain\";\n    volumeIntersectType[volumeIntersectType[\"intersect\"] = 1] = \"intersect\";\n    volumeIntersectType[volumeIntersectType[\"Disjoint\"] = 2] = \"Disjoint\";\n})(volumeIntersectType || (volumeIntersectType = {}));\nexport class volumeIntersectInfo {\n}\nexport class Volume extends Component {\n    constructor() {\n        super();\n        this._aroundVolumeCacheNum = 0;\n        this._bounds = new Bounds();\n        this._primitiveBounds = new Bounds();\n        this._importance = 0;\n        this.runInEditor = true;\n    }\n    get type() {\n        return this._type;\n    }\n    get bounds() {\n        return this._bounds;\n    }\n    get boundsMax() {\n        return this._primitiveBounds.getMax();\n    }\n    set boundsMax(value) {\n        this._primitiveBounds.setMax(value);\n        this._reCaculateBoundBox();\n    }\n    get boundsMin() {\n        return this._primitiveBounds.getMin();\n    }\n    set boundsMin(value) {\n        this._primitiveBounds.setMin(value);\n        this._reCaculateBoundBox();\n    }\n    get probePosition() {\n        return this.owner.transform.position;\n    }\n    get importance() {\n        return this._importance;\n    }\n    set importance(value) {\n        this._importance = value;\n    }\n    _onEnable() {\n        this.owner.transform.on(Event.TRANSFORM_CHANGED, this, this._VolumeChange);\n        this._volumeManager = this.owner.scene._volumeManager;\n        this._volumeManager.add(this);\n        this._reCaculateBoundBox();\n    }\n    _onDisable() {\n        this.owner.transform.off(Event.TRANSFORM_CHANGED, this, this._VolumeChange);\n        this._volumeManager.remove(this);\n    }\n    _VolumeChange() {\n        this._volumeManager._needUpdateAllRender = true;\n        let reManager = this._volumeManager._regVolumeManager[this.type];\n        if (reManager) {\n            reManager._needUpdateAllRender = true;\n        }\n        this._reCaculateBoundBox();\n    }\n    _reCaculateBoundBox() {\n        this.owner && this._primitiveBounds._tranform(this.owner.transform.worldMatrix, this._bounds);\n    }\n}\n","import { SingletonList } from \"../../../../utils/SingletonList\";\nimport { ReflectionProbe } from \"./ReflectionProbe\";\nexport class ReflectionProbeManager {\n    constructor() {\n        this._reflectionProbes = new SingletonList();\n        this._needUpdateAllRender = false;\n        this._sceneReflectionProbe = new ReflectionProbe();\n        this._sceneReflectionProbe.boxProjection = false;\n        this._sceneReflectionProbe._isScene = true;\n    }\n    get sceneReflectionProbe() {\n        return this._sceneReflectionProbe;\n    }\n    set sceneReflectionProbe(value) {\n        this._sceneReflectionProbe = value;\n        this._needUpdateAllRender = true;\n    }\n    _updateRenderObject(baseRender) {\n        if (this._reflectionProbes.length == 0) {\n            baseRender.probReflection = this._sceneReflectionProbe;\n            return;\n        }\n        var elements = this._reflectionProbes.elements;\n        var maxOverlap = 0;\n        var mainProbe;\n        var renderBounds = baseRender.bounds;\n        var overlop;\n        for (var i = 0, n = this._reflectionProbes.length; i < n; i++) {\n            let probe = elements[i];\n            if (!mainProbe) {\n                overlop = renderBounds.calculateBoundsintersection(probe.bounds);\n                if (overlop < maxOverlap)\n                    continue;\n            }\n            else {\n                if (mainProbe.importance > probe.importance)\n                    continue;\n                overlop = renderBounds.calculateBoundsintersection(probe.bounds);\n                if (overlop < maxOverlap && mainProbe.importance == probe.importance)\n                    continue;\n            }\n            mainProbe = probe;\n            maxOverlap = overlop;\n        }\n        if (!mainProbe && this._sceneReflectionProbe)\n            mainProbe = this._sceneReflectionProbe;\n        baseRender.probReflection = mainProbe;\n    }\n    add(volume) {\n        this._reflectionProbes.add(volume);\n        this._needUpdateAllRender = true;\n    }\n    remove(volume) {\n        this._reflectionProbes.remove(volume);\n        this._needUpdateAllRender = true;\n    }\n    handleMotionlist(motionObjects) {\n        var elements = motionObjects.elements;\n        let render;\n        for (var i = 0, n = motionObjects.length; i < n; i++) {\n            render = elements[i];\n            if (render._surportReflectionProbe && render.reflectionMode == 1) {\n                this._updateRenderObject(elements[i]);\n            }\n        }\n    }\n    reCaculateAllRenderObjects(baseRenders) {\n        var elements = baseRenders.elements;\n        let render;\n        for (var i = 0, n = baseRenders.length; i < n; i++) {\n            render = elements[i];\n            if (render._surportReflectionProbe && render.reflectionMode == 1) {\n                this._updateRenderObject(render);\n            }\n            this._needUpdateAllRender = false;\n        }\n    }\n    destroy() {\n        for (let index = 0; index < this._reflectionProbes.length; index++) {\n            let probe = this._reflectionProbes.elements[index];\n            probe.destroy();\n        }\n        this._reflectionProbes.length = 0;\n        this._sceneReflectionProbe.destroy();\n        this._sceneReflectionProbe = null;\n    }\n}\n","import { ILaya } from \"../../../../../ILaya\";\nimport { ShaderDataType } from \"../../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { Volume } from \"../Volume\";\nimport { VolumeManager } from \"../VolumeManager\";\nexport class VolumetricGI extends Volume {\n    static init() {\n        VolumetricGI.SHADERDEFINE_VOLUMETRICGI = Shader3D.getDefineByName(\"VOLUMETRICGI\");\n        VolumetricGI.VOLUMETRICGI_PROBECOUNTS = Shader3D.propertyNameToID(\"u_VolGIProbeCounts\");\n        VolumetricGI.VOLUMETRICGI_PROBESTEPS = Shader3D.propertyNameToID(\"u_VolGIProbeStep\");\n        VolumetricGI.VOLUMETRICGI_PROBESTARTPOS = Shader3D.propertyNameToID(\"u_VolGIProbeStartPosition\");\n        VolumetricGI.VOLUMETRICGI_PROBEPARAMS = Shader3D.propertyNameToID(\"u_VolGIProbeParams\");\n        VolumetricGI.VOLUMETRICGI_IRRADIANCE = Shader3D.propertyNameToID(\"u_ProbeIrradiance\");\n        VolumetricGI.VOLUMETRICGI_DISTANCE = Shader3D.propertyNameToID(\"u_ProbeDistance\");\n        let uniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(VolumetricGI.BlockName);\n        uniformMap.addShaderUniform(VolumetricGI.VOLUMETRICGI_PROBECOUNTS, \"u_VolGIProbeCounts\", ShaderDataType.Vector3);\n        uniformMap.addShaderUniform(VolumetricGI.VOLUMETRICGI_PROBESTEPS, \"u_VolGIProbeStep\", ShaderDataType.Vector3);\n        uniformMap.addShaderUniform(VolumetricGI.VOLUMETRICGI_PROBESTARTPOS, \"u_VolGIProbeStartPosition\", ShaderDataType.Vector3);\n        uniformMap.addShaderUniform(VolumetricGI.VOLUMETRICGI_PROBEPARAMS, \"u_VolGIProbeParams\", ShaderDataType.Vector4);\n        uniformMap.addShaderUniform(VolumetricGI.VOLUMETRICGI_IRRADIANCE, \"u_ProbeIrradiance\", ShaderDataType.Texture2D);\n        uniformMap.addShaderUniform(VolumetricGI.VOLUMETRICGI_DISTANCE, \"u_ProbeDistance\", ShaderDataType.Texture2D);\n    }\n    static getID() {\n        return VolumetricGI.volumetricCount++;\n    }\n    get shaderData() {\n        return this._dataModule.shaderData;\n    }\n    constructor() {\n        super();\n        this._type = VolumeManager.VolumetricGIType;\n        this._probeCounts = new Vector3();\n        this._probeStep = new Vector3();\n        this._params = new Vector4(8, 16, 0, 0);\n        this._dataModule = Laya3DRender.Render3DModuleDataFactory.createVolumetricGI();\n        this._dataModule.setParams(this._params);\n        this._volumetricProbeID = VolumetricGI.getID();\n        this._dataModule.intensity = 1;\n    }\n    _onEnable() {\n        super._onEnable();\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get irradiance() {\n        return this._irradiance;\n    }\n    set irradiance(value) {\n        if (this._irradiance == value)\n            return;\n        this._irradiance && (this._irradiance._removeReference());\n        if (value) {\n            value._addReference();\n            this._dataModule.irradiance = value._texture;\n        }\n        else {\n            this._dataModule.irradiance = null;\n        }\n        this._irradiance = value;\n        this._irradiance = value;\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get distance() {\n        return this._distance;\n    }\n    set distance(value) {\n        if (this._distance == value)\n            return;\n        this._distance && (this._distance._removeReference());\n        if (value) {\n            value._addReference();\n            this._dataModule.distance = value._texture;\n        }\n        else {\n            this._dataModule.distance = null;\n        }\n        this._distance = value;\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get normalBias() {\n        return this._params.z;\n    }\n    set normalBias(value) {\n        this._params.z = value;\n        this._dataModule.setParams(this._params);\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get viewBias() {\n        return this._params.w;\n    }\n    set viewBias(value) {\n        this._params.w = value;\n        this._dataModule.setParams(this._params);\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get irradianceTexel() {\n        return this._params.x;\n    }\n    get distanceTexel() {\n        return this._params.y;\n    }\n    get intensity() {\n        return this._dataModule.intensity;\n    }\n    set intensity(value) {\n        if (value == this._dataModule.intensity)\n            return;\n        value = Math.max(value, 0.0);\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get probeCounts() {\n        return this._probeCounts;\n    }\n    set probeCounts(value) {\n        if (value.equal(this._probeCounts))\n            return;\n        value.cloneTo(this._probeCounts);\n        this._dataModule.setProbeCounts(value);\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get probeStep() {\n        return this._probeStep;\n    }\n    set probeStep(value) {\n        if (value.equal(this._probeStep))\n            return;\n        value.cloneTo(this._probeStep);\n        this._dataModule.setProbeStep(value);\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    _reCaculateBoundBox() {\n        super._reCaculateBoundBox();\n        this.bounds.cloneTo(this._dataModule.bound);\n    }\n    _onDestroy() {\n        this.irradiance = null;\n        this.distance = null;\n        this._dataModule.destroy();\n        this._dataModule = null;\n    }\n    _cloneTo(dest) {\n        dest.irradiance = this.irradiance;\n        dest.distance = this.distance;\n        this._probeCounts.cloneTo(dest._probeCounts);\n        this.probeStep.cloneTo(dest.probeStep);\n        dest.normalBias = this.normalBias;\n        dest.viewBias = this.viewBias;\n        dest.intensity = this.intensity;\n    }\n}\nVolumetricGI.BlockName = \"VolumetricGIProbe\";\nVolumetricGI.volumetricCount = 0;\n","import { SingletonList } from \"../../../../utils/SingletonList\";\nimport { VolumetricGI } from \"./VolumetricGI\";\nexport class VolumetricGIManager {\n    constructor() {\n        this._GIVolumes = new SingletonList();\n        this._needUpdateAllRender = true;\n    }\n    removeVolumetricGI(renderer) {\n        let shaderData = renderer._baseRenderNode.shaderData;\n        shaderData.removeDefine(VolumetricGI.SHADERDEFINE_VOLUMETRICGI);\n        renderer.lightProbe = null;\n    }\n    add(volume) {\n        this._GIVolumes.add(volume);\n        this._needUpdateAllRender = true;\n    }\n    remove(volume) {\n        this._GIVolumes.remove(volume);\n        this._needUpdateAllRender = true;\n    }\n    _updateRenderObject(renderer) {\n        if (this._GIVolumes.length == 0) {\n            this.removeVolumetricGI(renderer);\n            return;\n        }\n        let renderBounds = renderer.bounds;\n        let maxOverlap = 0, overlap = 0;\n        let currentVolume;\n        let volumes = this._GIVolumes.elements;\n        for (let index = 0; index < this._GIVolumes.length; index++) {\n            let volume = volumes[index];\n            if (!currentVolume) {\n                overlap = renderBounds.calculateBoundsintersection(volume.bounds);\n                if (overlap < maxOverlap)\n                    continue;\n            }\n            else {\n                if (currentVolume.importance > volume.importance)\n                    continue;\n                overlap = renderBounds.calculateBoundsintersection(volume.bounds);\n                if (overlap < maxOverlap && currentVolume.importance == volume.importance)\n                    continue;\n            }\n            currentVolume = volume;\n            maxOverlap = overlap;\n        }\n        if (currentVolume) {\n            renderer.lightProbe = currentVolume;\n        }\n        else {\n            this.removeVolumetricGI(renderer);\n        }\n    }\n    handleMotionlist(motionObjects) {\n        for (let index = 0; index < motionObjects.length; index++) {\n            let render = motionObjects.elements[index];\n            if (render._surportVolumetricGI) {\n                this._updateRenderObject(render);\n            }\n        }\n        this._needUpdateAllRender = false;\n    }\n    reCaculateAllRenderObjects(renders) {\n        for (let index = 0; index < renders.length; index++) {\n            let render = renders.elements[index];\n            if (render._surportVolumetricGI) {\n                this._updateRenderObject(render);\n            }\n        }\n        this._needUpdateAllRender = false;\n    }\n    destroy() {\n        let count = this._GIVolumes.length;\n        for (var i = 0; i < count; i++) {\n            this._GIVolumes.elements[i].destroy();\n        }\n    }\n}\n","import { SingletonList } from \"../../../utils/SingletonList\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { ReflectionProbeManager } from \"./reflectionProbe/ReflectionProbeManager\";\nimport { VolumetricGIManager } from \"./VolumetricGI/VolumetricGIManager\";\nexport class VolumeManager {\n    constructor() {\n        this._motionObjects = new SingletonList();\n        this._volumeList = new SingletonList();\n        this._needUpdateAllRender = false;\n        this._regVolumeManager = {};\n        this._reflectionProbeManager = new ReflectionProbeManager();\n        this._regVolumeManager[VolumeManager.ReflectionProbeVolumeType] = this._reflectionProbeManager;\n        this._volumetricGIManager = new VolumetricGIManager();\n        this._regVolumeManager[VolumeManager.VolumetricGIType] = this._volumetricGIManager;\n    }\n    get reflectionProbeManager() {\n        return this._reflectionProbeManager;\n    }\n    get volumetricGIManager() {\n        return this._volumetricGIManager;\n    }\n    add(volume) {\n        let reManager = this._regVolumeManager[volume.type];\n        if (reManager) {\n            reManager.add(volume);\n        }\n        else {\n            this._volumeList.add(volume);\n            this._needUpdateAllRender = true;\n        }\n    }\n    remove(volume) {\n        let reManager = this._regVolumeManager[volume.type];\n        if (reManager) {\n            reManager.remove(volume);\n        }\n        else {\n            this._volumeList.remove(volume);\n            this._needUpdateAllRender = true;\n        }\n    }\n    addMotionObject(renderObj) {\n        this._motionObjects.add(renderObj);\n    }\n    removeMotionObject(renderObj) {\n        this._motionObjects.remove(renderObj);\n    }\n    _updateRenderObject(baseRender) {\n        let elements = this._volumeList.elements;\n        let renderBounds = baseRender.bounds;\n        let center = renderBounds.getCenter();\n        let mainVolume;\n        for (var i = 0, n = this._volumeList.length; i < n; i++) {\n            let volume = elements[i];\n            let bounds = volume.bounds;\n            if (Bounds.containPoint(bounds, center)) {\n                mainVolume = volume;\n                continue;\n            }\n        }\n        baseRender.volume = mainVolume;\n    }\n    handleMotionlist() {\n        var elements = this._motionObjects.elements;\n        for (var i = 0, n = this._motionObjects.length; i < n; i++) {\n            this._updateRenderObject(elements[i]);\n        }\n        if (!this.reflectionProbeManager._needUpdateAllRender)\n            this.reflectionProbeManager.handleMotionlist(this._motionObjects);\n        if (!this.volumetricGIManager._needUpdateAllRender)\n            this.volumetricGIManager.handleMotionlist(this._motionObjects);\n        this.clearMotionObjects();\n    }\n    reCaculateAllRenderObjects(baseRenders) {\n        if (this._needUpdateAllRender) {\n            var elements = baseRenders.elements;\n            for (var i = 0, n = baseRenders.length; i < n; i++) {\n                this._updateRenderObject(elements[i]);\n            }\n            this._needUpdateAllRender = false;\n        }\n        else {\n            this.handleMotionlist();\n        }\n        if (this.reflectionProbeManager._needUpdateAllRender) {\n            this.reflectionProbeManager.reCaculateAllRenderObjects(baseRenders);\n        }\n        else {\n            this.reflectionProbeManager.handleMotionlist(this._motionObjects);\n        }\n        if (this.volumetricGIManager._needUpdateAllRender) {\n            this.volumetricGIManager.reCaculateAllRenderObjects(baseRenders);\n        }\n        else {\n            this.volumetricGIManager.handleMotionlist(this._motionObjects);\n        }\n    }\n    needreCaculateAllRenderObjects() {\n        return this._needUpdateAllRender || this.reflectionProbeManager._needUpdateAllRender || this.volumetricGIManager._needUpdateAllRender;\n    }\n    clearMotionObjects() {\n        this._motionObjects.length = 0;\n        if (this._motionObjects.elements.length > 100) {\n            this._motionObjects.elements.length = 100;\n        }\n        this._motionObjects.elements.fill(null);\n    }\n    destroy() {\n        this._reflectionProbeManager.destroy();\n        this._volumetricGIManager.destroy();\n    }\n}\nVolumeManager.ReflectionProbeVolumeType = 1;\nVolumeManager.VolumetricGIType = 2;\n","export var AmbientMode;\n(function (AmbientMode) {\n    AmbientMode[AmbientMode[\"SolidColor\"] = 0] = \"SolidColor\";\n    AmbientMode[AmbientMode[\"SphericalHarmonics\"] = 1] = \"SphericalHarmonics\";\n})(AmbientMode || (AmbientMode = {}));\n","import { Volume } from \"../Volume\";\nimport { VolumeManager } from \"../VolumeManager\";\nimport { ILaya } from \"../../../../../ILaya\";\nimport { AmbientMode } from \"../../../core/scene/AmbientMode\";\nimport { Color } from \"../../../../maths/Color\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { ShaderDataType } from \"../../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\nexport var ReflectionProbeMode;\n(function (ReflectionProbeMode) {\n    ReflectionProbeMode[ReflectionProbeMode[\"off\"] = 0] = \"off\";\n    ReflectionProbeMode[ReflectionProbeMode[\"simple\"] = 1] = \"simple\";\n})(ReflectionProbeMode || (ReflectionProbeMode = {}));\nexport class ReflectionProbe extends Volume {\n    static getID() {\n        return ReflectionProbe.reflectionCount++;\n    }\n    static init() {\n        ReflectionProbe.SHADERDEFINE_GI_IBL = Shader3D.getDefineByName(\"GI_IBL\");\n        let unifomrMap = ReflectionProbe.CommandMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(ReflectionProbe.BlockName);\n        const addUniform = (name, type, arrayLength = 0) => {\n            let unifomrIndex = Shader3D.propertyNameToID(name);\n            if (arrayLength > 0) {\n                unifomrMap.addShaderUniformArray(unifomrIndex, name, type, arrayLength);\n            }\n            else {\n                unifomrMap.addShaderUniform(unifomrIndex, name, type);\n            }\n            return unifomrIndex;\n        };\n        ReflectionProbe.AMBIENTCOLOR = addUniform(\"u_AmbientColor\", ShaderDataType.Vector4);\n        ReflectionProbe.AMBIENTSH = addUniform(\"u_IblSH\", ShaderDataType.Vector3, 9);\n        ReflectionProbe.IBLTEX = addUniform(\"u_IBLTex\", ShaderDataType.TextureCube);\n        ReflectionProbe.IBLROUGHNESSLEVEL = addUniform(\"u_IBLRoughnessLevel\", ShaderDataType.Float);\n        ReflectionProbe.AMBIENTINTENSITY = addUniform(\"u_AmbientIntensity\", ShaderDataType.Float);\n        ReflectionProbe.REFLECTIONINTENSITY = addUniform(\"u_ReflectionIntensity\", ShaderDataType.Float);\n        ReflectionProbe.REFLECTIONCUBE_PROBEPOSITION = addUniform(\"u_SpecCubeProbePosition\", ShaderDataType.Vector3);\n        ReflectionProbe.REFLECTIONCUBE_PROBEBOXMAX = addUniform(\"u_SpecCubeBoxMax\", ShaderDataType.Vector3);\n        ReflectionProbe.REFLECTIONCUBE_PROBEBOXMIN = addUniform(\"u_SpecCubeBoxMin\", ShaderDataType.Vector3);\n    }\n    constructor() {\n        super();\n        this._ambientColor = new Color();\n        this._isScene = false;\n        this._importance = 0;\n        this._type = VolumeManager.ReflectionProbeVolumeType;\n        this._dataModule = Laya3DRender.Render3DModuleDataFactory.createReflectionProbe();\n        this._dataModule.bound = this._bounds;\n        this.ambientIntensity = 1.0;\n        this.reflectionIntensity = 1.0;\n        this.boundsMax = new Vector3(5, 5, 5);\n        this.boundsMin = new Vector3(-5, -5, -5);\n        this._reflectionProbeID = ReflectionProbe.getID();\n        this.ambientMode = AmbientMode.SolidColor;\n        this._dataModule.updateMark = -1;\n    }\n    get shaderData() {\n        return this._dataModule.shaderData;\n    }\n    get boxProjection() {\n        return this._dataModule.boxProjection;\n    }\n    set boxProjection(value) {\n        if (value != this._dataModule.boxProjection) {\n            this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n        }\n        this._dataModule.boxProjection = value;\n    }\n    get importance() {\n        return this._importance;\n    }\n    set importance(value) {\n        this._importance = value;\n    }\n    get ambientIntensity() {\n        return this._dataModule.ambientIntensity;\n    }\n    set ambientIntensity(value) {\n        if (value == this._dataModule.ambientIntensity)\n            return;\n        this._dataModule.ambientIntensity = value;\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get reflectionIntensity() {\n        return this._dataModule.reflectionIntensity;\n    }\n    set reflectionIntensity(value) {\n        if (value == this._dataModule.reflectionIntensity)\n            return;\n        value = Math.max(value, 0.0);\n        this._dataModule.reflectionIntensity = value;\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    _reCaculateBoundBox() {\n        super._reCaculateBoundBox();\n        this.owner && this._dataModule.setProbePosition(this.owner.transform.position);\n        this.bounds.cloneTo(this._dataModule.bound);\n    }\n    get bounds() {\n        return this._bounds;\n    }\n    get boundsMax() {\n        return this._primitiveBounds.getMax();\n    }\n    set boundsMax(value) {\n        super.boundsMax = value;\n        if (this.boxProjection)\n            this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get boundsMin() {\n        return this._primitiveBounds.getMin();\n    }\n    set boundsMin(value) {\n        super.boundsMin = value;\n        if (this.boxProjection)\n            this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get probePosition() {\n        return this.owner.transform.position;\n    }\n    get ambientColor() {\n        return this._ambientColor;\n    }\n    set ambientColor(value) {\n        value.cloneTo(this._ambientColor);\n        this._dataModule.setAmbientColor(this._ambientColor);\n        if (this.ambientMode == AmbientMode.SolidColor)\n            this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get ambientSH() {\n        return this._ambientSH;\n    }\n    set ambientSH(value) {\n        if (this.ambientMode == AmbientMode.SphericalHarmonics)\n            this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n        this._ambientSH = value;\n        this._dataModule.setAmbientSH(this._ambientSH);\n    }\n    get ambientMode() {\n        return this._dataModule.ambientMode;\n    }\n    set ambientMode(value) {\n        if (value == this.ambientMode)\n            return;\n        this._dataModule.ambientMode = value;\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get iblTex() {\n        return this._iblTex;\n    }\n    set iblTex(value) {\n        if (this._iblTex == value)\n            return;\n        if (this._iblTex)\n            this._iblTex._removeReference();\n        this._iblTex = value;\n        this._dataModule.iblTex = null;\n        if (value) {\n            value._addReference();\n            this._dataModule.iblTex = value._texture;\n        }\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    get iblTexRGBD() {\n        return this._dataModule.iblTexRGBD;\n    }\n    set iblTexRGBD(value) {\n        if (value == this._dataModule.iblTexRGBD)\n            return;\n        this._dataModule.iblTexRGBD = value;\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    _onEnable() {\n        super._onEnable();\n        this._dataModule.updateMark = ILaya.Scene3D._updateMark;\n    }\n    _onDestroy() {\n        this.iblTex = null;\n        this._dataModule.destroy();\n    }\n}\nReflectionProbe.BlockName = \"ReflectionProbe\";\nReflectionProbe.reflectionCount = 0;\nReflectionProbe.defaultTextureHDRDecodeValues = new Vector4(1.0, 1.0, 0.0, 0.0);\n","export class Sprite3DRenderDeclaration {\n}\n","import { RenderableSprite3D } from \"../RenderableSprite3D\";\nimport { Event } from \"../../../events/Event\";\nimport { MeshSprite3DShaderDeclaration } from \"../../../d3/core/MeshSprite3DShaderDeclaration\";\nimport { Component } from \"../../../components/Component\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { ReflectionProbe, ReflectionProbeMode } from \"../../component/Volume/reflectionProbe/ReflectionProbe\";\nimport { NodeFlags } from \"../../../Const\";\nimport { Sprite3DRenderDeclaration } from \"./Sprite3DRenderDeclaration\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { VolumetricGI } from \"../../component/Volume/VolumetricGI/VolumetricGI\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nexport var RenderBitFlag;\n(function (RenderBitFlag) {\n    RenderBitFlag[RenderBitFlag[\"RenderBitFlag_CullFlag\"] = 0] = \"RenderBitFlag_CullFlag\";\n    RenderBitFlag[RenderBitFlag[\"RenderBitFlag_Batch\"] = 1] = \"RenderBitFlag_Batch\";\n    RenderBitFlag[RenderBitFlag[\"RenderBitFlag_Editor\"] = 2] = \"RenderBitFlag_Editor\";\n    RenderBitFlag[RenderBitFlag[\"RenderBitFlag_InstanceBatch\"] = 3] = \"RenderBitFlag_InstanceBatch\";\n    RenderBitFlag[RenderBitFlag[\"RenderBitFlag_VertexMergeBatch\"] = 4] = \"RenderBitFlag_VertexMergeBatch\";\n})(RenderBitFlag || (RenderBitFlag = {}));\nexport var IrradianceMode;\n(function (IrradianceMode) {\n    IrradianceMode[IrradianceMode[\"LightMap\"] = 0] = \"LightMap\";\n    IrradianceMode[IrradianceMode[\"VolumetricGI\"] = 1] = \"VolumetricGI\";\n    IrradianceMode[IrradianceMode[\"Common\"] = 2] = \"Common\";\n})(IrradianceMode || (IrradianceMode = {}));\nexport class BaseRender extends Component {\n    static __init__() {\n        BaseRender.shaderValueInit();\n    }\n    static getMeshDefine(mesh, out) {\n        out.length = 0;\n        var define;\n        for (var i = 0, n = mesh._subMeshes.length; i < n; i++) {\n            var subMesh = mesh.getSubMesh(i);\n            var vertexElements = subMesh._vertexBuffer.vertexDeclaration._vertexElements;\n            for (var j = 0, m = vertexElements.length; j < m; j++) {\n                var vertexElement = vertexElements[j];\n                var name = vertexElement._elementUsage;\n                switch (name) {\n                    case VertexMesh.MESH_COLOR0:\n                        out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR);\n                        break;\n                    case VertexMesh.MESH_TEXTURECOORDINATE0:\n                        out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0);\n                        break;\n                    case VertexMesh.MESH_TEXTURECOORDINATE1:\n                        out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1);\n                        break;\n                    case VertexMesh.MESH_TANGENT0:\n                        out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT);\n                        break;\n                }\n            }\n        }\n        return define;\n    }\n    static changeVertexDefine(oldMesh, mesh, defineDatas) {\n        var lastValue = oldMesh;\n        if (lastValue) {\n            BaseRender.getMeshDefine(lastValue, BaseRender._meshVerticeDefine);\n            for (var i = 0, n = BaseRender._meshVerticeDefine.length; i < n; i++)\n                defineDatas.removeDefine(BaseRender._meshVerticeDefine[i]);\n        }\n        if (mesh) {\n            BaseRender.getMeshDefine(mesh, BaseRender._meshVerticeDefine);\n            for (var i = 0, n = BaseRender._meshVerticeDefine.length; i < n; i++)\n                defineDatas.addDefine(BaseRender._meshVerticeDefine[i]);\n        }\n    }\n    static shaderValueInit() {\n        Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL = Shader3D.getDefineByName(\"GI_LEGACYIBL\");\n        Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD = Shader3D.getDefineByName(\"IBL_RGBD\");\n        Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION = Shader3D.getDefineByName(\"SPECCUBE_BOX_PROJECTION\");\n    }\n    get enabled() {\n        return super.enabled;\n    }\n    set enabled(value) {\n        super.enabled = value;\n        this._baseRenderNode.enable = value;\n    }\n    get sortingFudge() {\n        return this._baseRenderNode.sortingFudge;\n    }\n    set sortingFudge(value) {\n        this._baseRenderNode.sortingFudge = value;\n    }\n    get renderbitFlag() {\n        return this._baseRenderNode.renderbitFlag;\n    }\n    get boundsChange() {\n        return this._baseRenderNode.boundsChange;\n    }\n    set boundsChange(value) {\n        this._baseRenderNode.boundsChange = value;\n    }\n    get renderNode() {\n        return this._baseRenderNode;\n    }\n    get distanceForSort() {\n        return this._baseRenderNode.distanceForSort;\n    }\n    set distanceForSort(value) {\n        this._baseRenderNode.distanceForSort = value;\n    }\n    get geometryBounds() {\n        return this._baseRenderNode.baseGeometryBounds;\n    }\n    set geometryBounds(value) {\n        this._baseRenderNode.baseGeometryBounds = value;\n    }\n    get lightmapIndex() {\n        return this._baseRenderNode.lightmapIndex;\n    }\n    set lightmapIndex(value) {\n        this._baseRenderNode.lightmapIndex = value;\n    }\n    setLightmapIndex(value) {\n        let scene = this._scene;\n        if (value != -1 && (scene.lightmaps[value])) {\n            this._baseRenderNode.lightmap = scene.lightmaps[value]._dataModule;\n        }\n        else {\n            this._baseRenderNode.lightmap = null;\n        }\n        this._getIrradientMode();\n    }\n    get irradientMode() {\n        return this._baseRenderNode.irradientMode;\n    }\n    get lightmapScaleOffset() {\n        return this._lightmapScaleOffset;\n    }\n    set lightmapScaleOffset(value) {\n        value.cloneTo(this._lightmapScaleOffset);\n        this._baseRenderNode.setLightmapScaleOffset(this._lightmapScaleOffset);\n    }\n    get sharedMaterial() {\n        return this._sharedMaterials[0];\n    }\n    set sharedMaterial(value) {\n        var lastValue = this._sharedMaterials[0];\n        this._changeMaterialReference(lastValue, value);\n        this._sharedMaterials[0] = value;\n        let element = this._renderElements[0];\n        if (element && element.material != value) {\n            this._materialsInstance[0] = false;\n            element.material = value;\n        }\n        this._isSupportRenderFeature();\n    }\n    get sharedMaterials() {\n        return this._sharedMaterials.slice();\n    }\n    set sharedMaterials(value) {\n        var materialsInstance = this._materialsInstance;\n        var sharedMats = this._sharedMaterials;\n        if (value) {\n            let count = value.length;\n            for (let i = 0; i < count; i++) {\n                let mat = value[i];\n                let lastMat = sharedMats[i];\n                this._changeMaterialReference(lastMat, mat);\n                sharedMats[i] = mat;\n                let element = this._renderElements[i];\n                if (element && element.material != mat) {\n                    materialsInstance[i] = false;\n                    element.material = mat;\n                }\n            }\n            for (let i = count, n = sharedMats.length; i < n; i++) {\n                let mat = sharedMats[i];\n                mat && mat._removeReference();\n                let element = this._renderElements[i];\n                element && (element.material = null);\n            }\n            materialsInstance.length = count;\n            sharedMats.length = count;\n        }\n        else {\n            for (let i = 0, n = sharedMats.length; i < n; i++) {\n                let lastMat = sharedMats[i];\n                lastMat && lastMat._removeReference();\n            }\n            this._sharedMaterials = [];\n        }\n        this._isSupportRenderFeature();\n    }\n    get bounds() {\n        return this._baseRenderNode.bounds;\n    }\n    get receiveShadow() {\n        return this._receiveShadow;\n    }\n    set receiveShadow(value) {\n        if (this._receiveShadow !== value) {\n            this._receiveShadow = value;\n            if (value)\n                this._baseRenderNode.shaderData.addDefine(RenderableSprite3D.SHADERDEFINE_RECEIVE_SHADOW);\n            else\n                this._baseRenderNode.shaderData.removeDefine(RenderableSprite3D.SHADERDEFINE_RECEIVE_SHADOW);\n        }\n        this._baseRenderNode.receiveShadow = value;\n    }\n    get castShadow() {\n        return this._baseRenderNode.castShadow;\n    }\n    set castShadow(value) {\n        this._baseRenderNode.castShadow = value;\n    }\n    get reflectionMode() {\n        return this._baseRenderNode.reflectionMode;\n    }\n    set reflectionMode(value) {\n        this._baseRenderNode.reflectionMode = value;\n    }\n    get volume() {\n        return this._volume;\n    }\n    set volume(value) {\n        if (!value) {\n            if (this._volume) {\n                this._volume._removeRenderNode && this._volume._removeRenderNode(this);\n                this._volume = null;\n            }\n            return;\n        }\n        if (this._volume != value) {\n            value._addRenderNode && value._addRenderNode(this);\n            this._volume = value;\n            return;\n        }\n        else {\n            value._motionInVolume && value._motionInVolume(this);\n        }\n    }\n    get probReflection() {\n        return this._probReflection;\n    }\n    set probReflection(value) {\n        if (this._probReflection == value)\n            return;\n        this._probReflection = value;\n        const ReflectionProbeBlockName = ReflectionProbe.BlockName;\n        if (value) {\n            this._baseRenderNode.probeReflection = value._dataModule;\n            this._baseRenderNode.additionShaderData.set(ReflectionProbeBlockName, value.shaderData);\n        }\n        else {\n            this._baseRenderNode.probeReflection = null;\n            this._baseRenderNode.additionShaderData.delete(ReflectionProbeBlockName);\n        }\n        this._baseRenderNode.additionShaderData = this._baseRenderNode.additionShaderData;\n        this._getIrradientMode();\n    }\n    get lightProbe() {\n        return this._lightProb;\n    }\n    set lightProbe(volumetricGI) {\n        if (this._lightProb == volumetricGI) {\n            return;\n        }\n        this._baseRenderNode.lightProbUpdateMark = -1;\n        this._lightProb = volumetricGI;\n        const VolumeGIBlockName = VolumetricGI.BlockName;\n        if (volumetricGI) {\n            this._baseRenderNode.volumetricGI = volumetricGI._dataModule;\n            this._baseRenderNode.additionShaderData.set(VolumeGIBlockName, volumetricGI.shaderData);\n        }\n        else {\n            this._baseRenderNode.volumetricGI = null;\n            this._baseRenderNode.additionShaderData.delete(VolumeGIBlockName);\n        }\n        this._baseRenderNode.additionShaderData = this._baseRenderNode.additionShaderData;\n        this._getIrradientMode();\n    }\n    setNodeCustomData(dataSlot, data) {\n        this.renderNode.setNodeCustomData(dataSlot, data);\n    }\n    constructor() {\n        super();\n        this._sharedMaterials = [];\n        this._sceneUpdateMark = -1;\n        this._updateMark = -1;\n        this._surportReflectionProbe = false;\n        this._surportVolumetricGI = false;\n        this._motionIndexList = -1;\n        this._LOD = -1;\n        this._lightmapScaleOffset = new Vector4();\n        this._renderElements = [];\n        this._baseRenderNode = this._createBaseRenderNode();\n        this._baseRenderNode.setCommonUniformMap(this._getcommonUniformMap());\n        this._baseRenderNode.shaderData = LayaGL.renderDeviceFactory.createShaderData(null);\n        this._renderid = ++BaseRender._uniqueIDCounter;\n        this._baseRenderNode.bounds = this._bounds = new Bounds(Vector3.ZERO, Vector3.ZERO);\n        this._enabled = true;\n        this._baseRenderNode.enable = true;\n        this._materialsInstance = [];\n        this.lightmapIndex = -1;\n        this.receiveShadow = false;\n        this._baseRenderNode.sortingFudge = 0.0;\n        this.reflectionMode = ReflectionProbeMode.simple;\n        if (!!this._calculateBoundingBox) {\n            this._baseRenderNode.set_caculateBoundingBox(this, this._calculateBoundingBox);\n        }\n        if (!!this._renderUpdate) {\n            this._baseRenderNode.set_renderUpdatePreCall(this, this._renderUpdate);\n        }\n        this.runInEditor = true;\n        this._asynNative = true;\n        this.boundsChange = true;\n        this._baseRenderNode.renderbitFlag = 0;\n        this._baseRenderNode.staticMask = 1;\n        this.castShadow = false;\n        this._baseRenderNode.renderNodeType = 0;\n    }\n    _setRenderElements() {\n        var _a, _b, _c;\n        let arrayElement = [];\n        if (this._renderElements.length == 0 && this._inRenderList) {\n            (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene._removeRenderObject(this);\n        }\n        if (((_b = this.owner) === null || _b === void 0 ? void 0 : _b.activeInHierarchy) && this.enabled && ((_c = this.owner) === null || _c === void 0 ? void 0 : _c.scene) && this._renderElements.length > 0 && !this._inRenderList)\n            this.owner.scene._addRenderObject(this);\n        this._renderElements.forEach(element => {\n            arrayElement.push(element._renderElementOBJ);\n        });\n        this._baseRenderNode.setRenderelements(arrayElement);\n    }\n    _onWorldMatNeedChange(flag) {\n        this.boundsChange = true;\n        this._addReflectionProbeUpdate();\n        this._batchRender && this._batchRender._updateOneRender(this);\n    }\n    _getcommonUniformMap() {\n        return [\"Sprite3D\"];\n    }\n    _createBaseRenderNode() {\n        return Laya3DRender.Render3DModuleDataFactory.createBaseRenderNode();\n    }\n    renderUpdate(context) {\n    }\n    _onAdded() {\n        this._transform = this.owner.transform;\n        this.owner._isRenderNode++;\n        this.setRenderbitFlag(RenderBitFlag.RenderBitFlag_Editor, this.owner._getBit(NodeFlags.HIDE_BY_EDITOR));\n        this._baseRenderNode.transform = this._transform;\n        this._changeLayer(this.owner.layer);\n        this._changeStaticMask(this.owner._isStatic);\n    }\n    _onEnable() {\n        super._onEnable();\n        this.owner.transform.on(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n        this.owner.on(Event.LAYER_CHANGE, this, this._changeLayer);\n        this.owner.on(Event.STATIC_MASK, this, this._changeStaticMask);\n        this._changeLayer(this.owner.layer);\n        this._changeStaticMask(this.owner._isStatic);\n        this.owner.scene._addRenderObject(this);\n        this._setBelongScene(this.owner.scene);\n    }\n    _onDisable() {\n        this.owner.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n        this.owner.off(Event.LAYER_CHANGE, this, this._changeLayer);\n        this.owner.off(Event.STATIC_MASK, this, this._changeStaticMask);\n        this.owner.scene._removeRenderObject(this);\n        this._setUnBelongScene();\n        this.volume = null;\n    }\n    _onDestroy() {\n        if (this.owner)\n            this.owner._isRenderNode--;\n        (this._motionIndexList !== -1) && (this._scene._sceneRenderManager.removeMotionObject(this));\n        (this._scene) && this._scene.sceneRenderableManager.removeRenderObject(this);\n        this._baseRenderNode.destroy();\n        this._baseRenderNode = null;\n        this._renderElements.forEach(element => {\n            element.destroy();\n        });\n        this._renderElements = null;\n        for (let i = 0, n = this._sharedMaterials.length; i < n; i++) {\n            let m = this._sharedMaterials[i];\n            m && !m.destroyed && m._removeReference();\n        }\n        this._sharedMaterials = null;\n        this._bounds = null;\n        this._lightmapScaleOffset = null;\n        this._scene = null;\n        this._transform = null;\n        this._batchRender = null;\n    }\n    _getIrradientMode() {\n        if (this.lightmapIndex >= 0) {\n            this._baseRenderNode.irradientMode = IrradianceMode.LightMap;\n        }\n        else if (this.lightProbe) {\n            this._baseRenderNode.irradientMode = IrradianceMode.VolumetricGI;\n        }\n        else {\n            this._baseRenderNode.irradientMode = IrradianceMode.Common;\n        }\n    }\n    _changeLayer(layer) {\n        this._baseRenderNode.layer = layer;\n    }\n    _changeStaticMask(staticmask) {\n        this._baseRenderNode.staticMask = staticmask;\n    }\n    _changeMaterialReference(lastValue, value) {\n        (lastValue) && (lastValue._removeReference());\n        value && value._addReference();\n    }\n    _getInstanceMaterial(material, index) {\n        var insMat = material.clone();\n        insMat.name = insMat.name + \"(Instance)\";\n        this._materialsInstance[index] = true;\n        this._changeMaterialReference(this._sharedMaterials[index], insMat);\n        this._sharedMaterials[index] = insMat;\n        return insMat;\n    }\n    _isSupportRenderFeature() {\n        let preReflection = this._surportReflectionProbe;\n        let prelightprob = this._surportVolumetricGI;\n        this._surportReflectionProbe = false;\n        this._surportVolumetricGI = false;\n        var sharedMats = this._sharedMaterials;\n        for (var i = 0, n = sharedMats.length; i < n; i++) {\n            var mat = sharedMats[i];\n            this._surportReflectionProbe || (this._surportReflectionProbe = this._surportReflectionProbe || (mat && mat._shader._supportReflectionProbe));\n            this._surportVolumetricGI || (this._surportVolumetricGI = this._surportVolumetricGI || (mat && mat._shader._surportVolumetricGI));\n        }\n        if ((!preReflection && this._surportReflectionProbe) || (!prelightprob && this._surportVolumetricGI))\n            this._addReflectionProbeUpdate();\n    }\n    _addReflectionProbeUpdate() {\n        this._scene && this._scene._volumeManager.addMotionObject(this);\n    }\n    _setBelongScene(scene) {\n        this._scene = scene;\n        this._onWorldMatNeedChange(1);\n        this._isSupportRenderFeature();\n        this._batchRender && this._batchRender._batchOneRender(this);\n        this.setLightmapIndex(this.lightmapIndex);\n        this._statAdd();\n    }\n    _statAdd() {\n        Stat.renderNode++;\n    }\n    _statRemove() {\n        Stat.renderNode--;\n    }\n    _setUnBelongScene() {\n        this._statRemove();\n        this._scene._volumeManager.removeMotionObject(this);\n        let batch = this._batchRender;\n        this._batchRender && this._batchRender._removeOneRender(this);\n        this._batchRender = batch;\n        this._scene = null;\n    }\n    _needRender(boundFrustum, context) {\n        if (boundFrustum)\n            return boundFrustum.intersects(this.bounds);\n        else\n            return true;\n    }\n    _cloneTo(dest) {\n        super._cloneTo(dest);\n        dest.receiveShadow = this.receiveShadow;\n        dest.sharedMaterials = this.sharedMaterials;\n        dest.reflectionMode = this.reflectionMode;\n        dest.castShadow = this.castShadow;\n        dest.sortingFudge = this.sortingFudge;\n    }\n    setRenderbitFlag(flag, pass) {\n        if (pass)\n            this._baseRenderNode.renderbitFlag |= (1 << flag);\n        else\n            this._baseRenderNode.renderbitFlag &= ~(1 << flag);\n    }\n    get material() {\n        var material = this._sharedMaterials[0];\n        if (material && !this._materialsInstance[0]) {\n            var insMat = this._getInstanceMaterial(material, 0);\n            var renderElement = this._renderElements[0];\n            (renderElement) && (renderElement.material = insMat);\n        }\n        return this._sharedMaterials[0];\n    }\n    set material(value) {\n        this.sharedMaterial = value;\n        this._isSupportRenderFeature();\n    }\n    get materials() {\n        for (var i = 0, n = this._sharedMaterials.length; i < n; i++) {\n            if (!this._materialsInstance[i]) {\n                var insMat = this._getInstanceMaterial(this._sharedMaterials[i], i);\n                var renderElement = this._renderElements[i];\n                (renderElement) && (renderElement.material = insMat);\n            }\n        }\n        return this._sharedMaterials.slice();\n    }\n    set materials(value) {\n        this.sharedMaterials = value;\n        this._isSupportRenderFeature();\n    }\n}\nBaseRender._meshVerticeDefine = [];\nBaseRender._uniqueIDCounter = 0;\nBaseRender._tempBoundBoxCorners = [new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3()];\nBaseRender._defaultLightmapScaleOffset = new Vector4(1.0, 1.0, 0.0, 0.0);\n","import { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nexport class RenderElement {\n    get transform() {\n        return this._renderElementOBJ.transform;\n    }\n    set transform(value) {\n        this._transform = value;\n        this._renderElementOBJ.transform = value;\n    }\n    get material() {\n        return this._material;\n    }\n    set material(value) {\n        if (this._material) {\n            this._material._removeOwnerElement(this._renderElementOBJ);\n        }\n        if (value) {\n            this._material = value;\n            this.material._setOwner3DElement(this._renderElementOBJ);\n        }\n        else {\n            this._material = null;\n            this._renderElementOBJ.materialShaderData = null;\n            this._renderElementOBJ.materialRenderQueue = 0;\n            this._renderElementOBJ.subShader = this._subShader = null;\n            this._renderElementOBJ.materialId = -1;\n        }\n    }\n    get renderSubShader() {\n        return this._subShader;\n    }\n    set renderSubShader(value) {\n        this._subShader = value;\n        this._renderElementOBJ.subShader = value;\n    }\n    get subShaderIndex() {\n        return this._subShaderIndex;\n    }\n    set subShaderIndex(value) {\n        this._subShaderIndex = value;\n    }\n    get render() {\n        return this._baseRender;\n    }\n    set render(value) {\n        this._baseRender = value;\n        this._renderElementOBJ.renderShaderData = value._baseRenderNode.shaderData;\n    }\n    constructor() {\n        this._subShaderIndex = 0;\n        this._createRenderElementOBJ();\n    }\n    _createRenderElementOBJ() {\n        this._renderElementOBJ = Laya3DRender.Render3DPassFactory.createRenderElement3D();\n    }\n    setTransform(transform) {\n        this.transform = transform;\n        this._renderElementOBJ.transform = transform;\n    }\n    setGeometry(geometry) {\n        this._geometry = geometry;\n        this._renderElementOBJ.geometry = geometry._geometryElementOBj;\n    }\n    destroy() {\n        this.material = null;\n        this._renderElementOBJ = null;\n        this._geometry = null;\n        this._baseRender = null;\n        this._baseRender = null;\n        this._subShader = null;\n    }\n}\n","import { Event } from \"../../../events/Event\";\nimport { RenderElement } from \"./RenderElement\";\nexport class SubMeshRenderElement extends RenderElement {\n    constructor() {\n        super();\n        this._dynamicWorldPositionNormalNeedUpdate = true;\n        this._renderElementOBJ.canDynamicBatch = true;\n    }\n    _onWorldMatrixChanged() {\n        this._dynamicWorldPositionNormalNeedUpdate = true;\n    }\n    setTransform(transform) {\n        if (this.transform !== transform) {\n            (this.transform) && (this.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatrixChanged));\n            (transform) && (transform.on(Event.TRANSFORM_CHANGED, this, this._onWorldMatrixChanged));\n            this._dynamicWorldPositionNormalNeedUpdate = true;\n            this.transform = transform;\n        }\n    }\n    setGeometry(geometry) {\n        if (this._geometry !== geometry) {\n            this._geometry = geometry;\n            this._renderElementOBJ.geometry = geometry._geometryElementOBj;\n        }\n    }\n    destroy() {\n        if (!this._renderElementOBJ)\n            return;\n        (this.transform) && this.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatrixChanged);\n        super.destroy();\n        this.instanceSubMesh = null;\n        this.staticBatchElementList && this.staticBatchElementList.destroy();\n        this.instanceBatchElementList && this.instanceBatchElementList.destroy();\n        this.vertexBatchElementList && this.vertexBatchElementList.destroy();\n        this.vertexBatchVertexDeclaration = null;\n    }\n}\n","import { Config3D } from \"../../../Config3D\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { BaseRenderType } from \"../../RenderDriver/RenderModuleData/Design/3D/I3DRenderModuleData\";\nimport { RenderCapable } from \"../../RenderEngine/RenderEnum/RenderCapable\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nimport { MeshUtil } from \"../resource/models/MeshUtil\";\nimport { MeshFilter } from \"./MeshFilter\";\nimport { MeshSprite3DShaderDeclaration } from \"./MeshSprite3DShaderDeclaration\";\nimport { RenderableSprite3D } from \"./RenderableSprite3D\";\nimport { BlinnPhongMaterial } from \"./material/BlinnPhongMaterial\";\nimport { BaseRender } from \"./render/BaseRender\";\nimport { SubMeshRenderElement } from \"./render/SubMeshRenderElement\";\nimport { Stat } from \"../../utils/Stat\";\nexport class MeshRenderer extends BaseRender {\n    static __init__() {\n        MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0 = Shader3D.getDefineByName(\"UV\");\n        MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR = Shader3D.getDefineByName(\"COLOR\");\n        MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1 = Shader3D.getDefineByName(\"UV1\");\n        MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT = Shader3D.getDefineByName(\"TANGENT\");\n        MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE = Shader3D.getDefineByName(\"GPU_INSTANCE\");\n    }\n    constructor() {\n        super();\n        this._revertStaticBatchDefineUV1 = false;\n        this.morphTargetActiveCount = 0;\n        this._morphWeightChange = true;\n        this._morphTargetValues = {};\n        this._meshChange = false;\n        this._projectionViewWorldMatrix = new Matrix4x4();\n        this._baseRenderNode.renderNodeType = BaseRenderType.MeshRender;\n    }\n    _createBaseRenderNode() {\n        return Laya3DRender.Render3DModuleDataFactory.createMeshRenderNode();\n    }\n    _createRenderElement() {\n        return new SubMeshRenderElement();\n    }\n    getMesh() {\n        return this._mesh;\n    }\n    _onEnable() {\n        super._onEnable();\n        const filter = this.owner.getComponent(MeshFilter);\n        if (filter)\n            filter._enabled && this._onMeshChange(filter.sharedMesh);\n    }\n    _getMeshDefine(mesh, out) {\n        let define;\n        out.length = 0;\n        MeshUtil.getMeshDefine(mesh, out);\n        return define;\n    }\n    _changeVertexDefine(mesh) {\n        var defineDatas = this._baseRenderNode.shaderData;\n        var lastValue = this._mesh;\n        if (lastValue) {\n            this._getMeshDefine(lastValue, MeshFilter._meshVerticeDefine);\n            for (var i = 0, n = MeshFilter._meshVerticeDefine.length; i < n; i++)\n                defineDatas.removeDefine(MeshFilter._meshVerticeDefine[i]);\n        }\n        if (mesh) {\n            this._getMeshDefine(mesh, MeshFilter._meshVerticeDefine);\n            for (var i = 0, n = MeshFilter._meshVerticeDefine.length; i < n; i++)\n                defineDatas.addDefine(MeshFilter._meshVerticeDefine[i]);\n        }\n    }\n    get morphTargetValues() {\n        return this._morphTargetValues;\n    }\n    set morphTargetValues(value) {\n        this._morphTargetValues = value;\n    }\n    _changeMorphTargetValue(key) {\n        this._morphWeightChange = true;\n    }\n    setMorphChannelWeight(channelName, weight) {\n        let mesh = this._mesh;\n        if (mesh && mesh.morphTargetData) {\n            let morphData = mesh.morphTargetData;\n            let channel = morphData.getMorphChannel(channelName);\n            this.morphTargetValues[channel.name] = weight;\n            this._morphWeightChange = true;\n        }\n    }\n    _applyMorphdata() {\n        let mesh = this._mesh;\n        let shaderData = this._baseRenderNode.shaderData;\n        if (this._morphWeightChange && mesh) {\n            let morphData = mesh.morphTargetData;\n            let channelCount = morphData.channelCount;\n            for (let channelIndex = 0; channelIndex < channelCount; channelIndex++) {\n                let channel = morphData.getMorphChannelbyIndex(channelIndex);\n                let weight = this.morphTargetValues[channel.name];\n                let lastFullWeight = 0;\n                channel.targets.forEach(target => {\n                    if (weight <= target.fullWeight) {\n                        this.morphTargetWeight[target._index] = (weight - lastFullWeight) / (target.fullWeight - lastFullWeight);\n                    }\n                    else {\n                        this.morphTargetWeight[target._index] = 1;\n                    }\n                    lastFullWeight = target.fullWeight;\n                });\n            }\n            let activeIndex = 0;\n            this.morphTargetWeight.forEach((weight, index) => {\n                if (weight > 0) {\n                    let offset = activeIndex * 4;\n                    this.morphTargetActiveData[offset] = index;\n                    this.morphTargetActiveData[offset + 1] = weight;\n                    activeIndex++;\n                }\n            });\n            this.morphTargetActiveCount = Math.min(activeIndex, Config3D.maxMorphTargetCount);\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n                shaderData.setInt(RenderableSprite3D.MorphActiveCount, this.morphTargetActiveCount);\n                shaderData.setBuffer(RenderableSprite3D.MorphActiceTargets, this.morphTargetActiveData);\n            }\n            else {\n            }\n            this._morphWeightChange = false;\n        }\n    }\n    _setBelongScene(scene) {\n        super._setBelongScene(scene);\n    }\n    _setUnBelongScene() {\n        super._setUnBelongScene();\n    }\n    _statAdd() {\n        Stat.renderNode++;\n        Stat.meshRenderNode++;\n    }\n    _statRemove() {\n        Stat.renderNode--;\n        Stat.meshRenderNode--;\n    }\n    _changeMorphData(mesh) {\n        let shaderData = this._baseRenderNode.shaderData;\n        let oldMesh = this._mesh;\n        const maxMorphTargetCount = Config3D.maxMorphTargetCount;\n        let maxCount = maxMorphTargetCount;\n        this.morphTargetActiveData = new Float32Array(maxCount * 4);\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n            if (oldMesh && oldMesh.morphTargetData) {\n                let morphData = oldMesh.morphTargetData;\n                shaderData.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET);\n                let morphVertexDec = morphData.vertexDec;\n                morphVertexDec._vertexElements.forEach(element => {\n                    switch (element.elementUsage) {\n                        case VertexMesh.MESH_POSITION0:\n                            shaderData.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_POSITION);\n                            break;\n                        case VertexMesh.MESH_NORMAL0:\n                            shaderData.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_NORMAL);\n                            break;\n                        case VertexMesh.MESH_TANGENT0:\n                            shaderData.removeDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_TANGENT);\n                            break;\n                        default:\n                            break;\n                    }\n                });\n            }\n            if (mesh && mesh.morphTargetData) {\n                let morphData = mesh.morphTargetData;\n                shaderData.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET);\n                let morphVertexDec = morphData.vertexDec;\n                morphVertexDec._vertexElements.forEach(element => {\n                    switch (element.elementUsage) {\n                        case VertexMesh.MESH_POSITION0:\n                            shaderData.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_POSITION);\n                            break;\n                        case VertexMesh.MESH_NORMAL0:\n                            shaderData.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_NORMAL);\n                            break;\n                        case VertexMesh.MESH_TANGENT0:\n                            shaderData.addDefine(RenderableSprite3D.SHADERDEFINE_MORPHTARGET_TANGENT);\n                            break;\n                        default:\n                            break;\n                    }\n                });\n                shaderData.setVector(RenderableSprite3D.MorphAttriOffset, mesh.morphTargetData.attributeOffset);\n                shaderData.setTexture(RenderableSprite3D.MorphTex, mesh.morphTargetData.targetTexture);\n                shaderData.setVector(RenderableSprite3D.MorphParams, morphData.params);\n                shaderData.setBuffer(RenderableSprite3D.MorphActiceTargets, this.morphTargetActiveData);\n            }\n        }\n        if (oldMesh && oldMesh.morphTargetData) {\n            this.morphTargetWeight = null;\n            this.morphtargetChannels = null;\n            this._morphTargetValues = {};\n        }\n        if (mesh && mesh.morphTargetData) {\n            let morphData = mesh.morphTargetData;\n            let channelCount = morphData.channelCount;\n            this.morphTargetWeight = new Float32Array(morphData.targetCount);\n            this.morphtargetChannels = new Array(channelCount);\n            for (let index = 0; index < channelCount; index++) {\n                let channel = morphData.getMorphChannelbyIndex(index);\n                this.morphtargetChannels[index] = channel;\n                this._morphTargetValues[channel.name] = 0;\n            }\n        }\n    }\n    _onMeshChange(mesh) {\n        if (mesh && this._mesh != mesh) {\n            this._changeVertexDefine(mesh);\n            this._changeMorphData(mesh);\n            this._mesh = mesh;\n            if (mesh.morphTargetData)\n                this.geometryBounds = mesh.morphTargetData.bounds;\n            else\n                this.geometryBounds = mesh.bounds;\n            var count = mesh.subMeshCount;\n            this._renderElements.length = count;\n            let materials = this.sharedMaterials;\n            materials.length = count;\n            for (var i = 0; i < count; i++) {\n                var renderElement = this._renderElements[i];\n                if (!renderElement) {\n                    renderElement = this._renderElements[i] = this._renderElements[i] ? this._renderElements[i] : this._createRenderElement();\n                    this.owner && renderElement.setTransform(this.owner._transform);\n                    renderElement.render = this;\n                }\n                materials[i] = materials[i] || BlinnPhongMaterial.defaultMaterial;\n                renderElement.setGeometry(mesh.getSubMesh(i));\n            }\n            this.sharedMaterials = materials;\n            this.boundsChange = true;\n        }\n        else if (!mesh) {\n            this._renderElements.forEach;\n            this._renderElements.forEach(element => {\n                element._renderElementOBJ.destroy();\n                element.destroy();\n            });\n            this._renderElements.length = 0;\n            this._mesh = null;\n            this._changeVertexDefine(null);\n            this._changeMorphData(null);\n            this.boundsChange = false;\n        }\n        this._setRenderElements();\n        this._meshChange = true;\n    }\n    _onWorldMatNeedChange(flag) {\n        super._onWorldMatNeedChange(flag);\n        if (!this._mesh) {\n            this.boundsChange = false;\n        }\n    }\n    renderUpdate(context) {\n        if (!this._mesh) {\n            return;\n        }\n        this._mesh.morphTargetData && this._applyMorphdata();\n        if (!this._meshChange) {\n            return;\n        }\n        if (this._renderElements.length == 1) {\n            this._renderElements[0]._renderElementOBJ.isRender = this._renderElements[0]._geometry._prepareRender(context);\n            this._renderElements[0]._geometry._updateRenderParams(context);\n            let material = this.sharedMaterial;\n            this._renderElements[0].material = material;\n        }\n        else {\n            for (var i = 0, n = this._renderElements.length; i < n; i++) {\n                this._renderElements[i]._renderElementOBJ.isRender = this._renderElements[i]._geometry._prepareRender(context);\n                this._renderElements[i]._geometry._updateRenderParams(context);\n                let material = this.sharedMaterials[i];\n                this._renderElements[i].material = material;\n            }\n        }\n        this._meshChange = false;\n    }\n    _onDestroy() {\n        super._onDestroy();\n        this._morphTargetValues = null;\n    }\n    _cloneTo(dest) {\n        super._cloneTo(dest);\n        dest._onMeshChange(this._mesh);\n        if (this.morphTargetWeight) {\n            dest.morphTargetWeight = new Float32Array(this.morphTargetWeight);\n        }\n        for (const key in this._morphTargetValues) {\n            dest._morphTargetValues[key] = this._morphTargetValues[key];\n        }\n    }\n}\n","import { RenderableSprite3D } from \"./RenderableSprite3D\";\nimport { MeshFilter } from \"./MeshFilter\";\nimport { MeshRenderer } from \"./MeshRenderer\";\nexport class MeshSprite3D extends RenderableSprite3D {\n    get meshFilter() {\n        return this._meshFilter;\n    }\n    get meshRenderer() {\n        return this._render;\n    }\n    constructor(mesh = null, name = null) {\n        super(name);\n        this._meshFilter = this.addComponent(MeshFilter);\n        this._render = this.addComponent(MeshRenderer);\n        (mesh) && (this._meshFilter.sharedMesh = mesh);\n    }\n}\n","import { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { VertexDeclaration } from \"../../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../../renders/VertexElementFormat\";\nexport class PixelLineVertex {\n    static get vertexDeclaration() {\n        return PixelLineVertex._vertexDeclaration;\n    }\n    static __init__() {\n        PixelLineVertex._vertexDeclaration = new VertexDeclaration(40, [new VertexElement(0, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0),\n            new VertexElement(12, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0),\n            new VertexElement(28, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0)\n        ]);\n    }\n    get vertexDeclaration() {\n        return PixelLineVertex._vertexDeclaration;\n    }\n    constructor() {\n    }\n}\n","import { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\nexport class Command {\n    static __init__() {\n        Command._screenShader = Shader3D.find(\"BlitScreen\");\n        Command.SCREENTEXTURE_ID = Shader3D.propertyNameToID(Command.SCREENTEXTURE_NAME);\n        Command.SCREENTEXTUREOFFSETSCALE_ID = Shader3D.propertyNameToID(Command.SCREENTEXTUREOFFSETSCALE_NAME);\n        Command.MAINTEXTURE_TEXELSIZE_ID = Shader3D.propertyNameToID(Command.MAINTEXTURE_TEXELSIZE_NAME);\n    }\n    constructor() {\n        this._commandBuffer = null;\n    }\n    recover() {\n        this._commandBuffer = null;\n    }\n    destroy() {\n        this._commandBuffer = null;\n        this._context = null;\n    }\n}\nCommand.SCREENTEXTURE_NAME = \"u_MainTex\";\nCommand.SCREENTEXTUREOFFSETSCALE_NAME = \"u_OffsetScale\";\nCommand.MAINTEXTURE_TEXELSIZE_NAME = \"u_MainTex_TexelSize\";\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { Viewport } from \"../../../maths/Viewport\";\nexport class RenderContext3D {\n    static __init__() {\n        RenderContext3D._instance = new RenderContext3D();\n        this.GammaCorrect = Shader3D.getDefineByName(\"GAMMACORRECT\");\n    }\n    get camera() {\n        return this._camera;\n    }\n    set camera(value) {\n        this._camera = value;\n        this._contextOBJ.cameraModuleData = value ? value._renderDataModule : null;\n    }\n    set destTarget(value) {\n        this._contextOBJ.setRenderTarget(value ? value._renderTarget : null, RenderClearFlag.Nothing);\n    }\n    set viewport(value) {\n        this._contextOBJ.setViewPort(value);\n    }\n    set scissor(value) {\n        this._contextOBJ.setScissor(value);\n    }\n    get invertY() {\n        return this._contextOBJ.invertY;\n    }\n    set invertY(value) {\n        this._contextOBJ.invertY = value;\n    }\n    get pipelineMode() {\n        return this._contextOBJ.pipelineMode;\n    }\n    set pipelineMode(value) {\n        this._contextOBJ.pipelineMode = value;\n    }\n    get cameraShaderValue() {\n        return this._contextOBJ.cameraData;\n    }\n    set cameraShaderValue(value) {\n        this._contextOBJ.cameraData = value;\n    }\n    get scene() {\n        return this._scene;\n    }\n    set scene(value) {\n        if (value) {\n            this._contextOBJ.sceneData = value._shaderValues;\n            this._scene = value;\n            this._contextOBJ.sceneModuleData = value._sceneModuleData;\n        }\n        else {\n            this._contextOBJ.sceneModuleData = null;\n            this._contextOBJ.sceneData = null;\n            this._scene = null;\n        }\n    }\n    changeViewport(x, y, width, height) {\n        Viewport.TEMP.set(x, y, width, height);\n        this.viewport = Viewport.TEMP;\n    }\n    changeScissor(x, y, width, height) {\n        Vector4.TEMP.setValue(x, y, width, height);\n        this.scissor = Vector4.TEMP;\n    }\n    applyContext(cameraUpdateMark) {\n        this._contextOBJ.cameraUpdateMask = cameraUpdateMark;\n    }\n    drawRenderElement(renderelemt) {\n        this._contextOBJ.drawRenderElementOne(renderelemt);\n    }\n    constructor() {\n        this.configPipeLineMode = \"Forward\";\n        this._contextOBJ = Laya3DRender.Render3DPassFactory.createRenderContext3D();\n    }\n}\n","import { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\nexport class TextureGenerator {\n    constructor() {\n    }\n    static lightAttenTexture(x, y, maxX, maxY, index, data) {\n        var sqrRange = x / maxX;\n        var atten = 1.0 / (1.0 + 25.0 * sqrRange);\n        if (sqrRange >= 0.64) {\n            if (sqrRange > 1.0) {\n                atten = 0;\n            }\n            else {\n                atten *= 1 - (sqrRange - 0.64) / (1 - 0.64);\n            }\n        }\n        data[index] = Math.floor(atten * 255.0 + 0.5);\n    }\n    static haloTexture(x, y, maxX, maxY, index, data) {\n        maxX >>= 1;\n        maxY >>= 1;\n        var xFac = (x - maxX) / maxX;\n        var yFac = (y - maxY) / maxY;\n        var sqrRange = xFac * xFac + yFac * yFac;\n        if (sqrRange > 1.0) {\n            sqrRange = 1.0;\n        }\n        data[index] = Math.floor((1.0 - sqrRange) * 255.0 + 0.5);\n    }\n    static _generateTexture2D(texture, textureWidth, textureHeight, func) {\n        var index = 0;\n        var size = 0;\n        switch (texture.format) {\n            case TextureFormat.R8G8B8:\n                size = 3;\n                break;\n            case TextureFormat.R8G8B8A8:\n                size = 4;\n                break;\n            case TextureFormat.Alpha8:\n                size = 1;\n                break;\n            default:\n                throw \"GeneratedTexture._generateTexture: unkonw texture format.\";\n        }\n        var data = new Uint8Array(textureWidth * textureHeight * size);\n        for (var y = 0; y < textureHeight; y++) {\n            for (var x = 0; x < textureWidth; x++) {\n                func(x, y, textureWidth, textureHeight, index, data);\n                index += size;\n            }\n        }\n        texture.setPixelsData(data, false, false);\n    }\n}\n","import { Texture2D } from \"../../resource/Texture2D\";\nimport { TextureGenerator } from \"../resource/TextureGenerator\";\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Utils } from \"../../utils/Utils\";\nexport class Utils3D {\n    static _createFloatTextureBuffer(width, height) {\n        var floatTex = new Texture2D(width, height, TextureFormat.R32G32B32A32, false, false);\n        floatTex.setPixelsData(null, false, false);\n        floatTex.filterMode = FilterMode.Point;\n        floatTex.wrapModeU = WrapMode.Clamp;\n        floatTex.wrapModeV = WrapMode.Clamp;\n        floatTex.anisoLevel = 1;\n        return floatTex;\n    }\n    static _rotationTransformScaleSkinAnimation(tx, ty, tz, qx, qy, qz, qw, sx, sy, sz, outArray, outOffset) {\n        var re = _tempArray16_0;\n        var se = _tempArray16_1;\n        var tse = _tempArray16_2;\n        var x2 = qx + qx;\n        var y2 = qy + qy;\n        var z2 = qz + qz;\n        var xx = qx * x2;\n        var yx = qy * x2;\n        var yy = qy * y2;\n        var zx = qz * x2;\n        var zy = qz * y2;\n        var zz = qz * z2;\n        var wx = qw * x2;\n        var wy = qw * y2;\n        var wz = qw * z2;\n        re[15] = 1;\n        re[0] = 1 - yy - zz;\n        re[1] = yx + wz;\n        re[2] = zx - wy;\n        re[4] = yx - wz;\n        re[5] = 1 - xx - zz;\n        re[6] = zy + wx;\n        re[8] = zx + wy;\n        re[9] = zy - wx;\n        re[10] = 1 - xx - yy;\n        se[15] = 1;\n        se[0] = sx;\n        se[5] = sy;\n        se[10] = sz;\n        var i, ai0, ai1, ai2, ai3;\n        for (i = 0; i < 4; i++) {\n            ai0 = re[i];\n            ai1 = re[i + 4];\n            ai2 = re[i + 8];\n            ai3 = re[i + 12];\n            tse[i] = ai0;\n            tse[i + 4] = ai1;\n            tse[i + 8] = ai2;\n            tse[i + 12] = ai0 * tx + ai1 * ty + ai2 * tz + ai3;\n        }\n        for (i = 0; i < 4; i++) {\n            ai0 = tse[i];\n            ai1 = tse[i + 4];\n            ai2 = tse[i + 8];\n            ai3 = tse[i + 12];\n            outArray[i + outOffset] = ai0 * se[0] + ai1 * se[1] + ai2 * se[2] + ai3 * se[3];\n            outArray[i + outOffset + 4] = ai0 * se[4] + ai1 * se[5] + ai2 * se[6] + ai3 * se[7];\n            outArray[i + outOffset + 8] = ai0 * se[8] + ai1 * se[9] + ai2 * se[10] + ai3 * se[11];\n            outArray[i + outOffset + 12] = ai0 * se[12] + ai1 * se[13] + ai2 * se[14] + ai3 * se[15];\n        }\n    }\n    static billboardTrans(v0, cameraDir, cameraUp, out) {\n        Vector3.normalize(cameraUp, _tempVector3_1);\n        Vector3.cross(cameraDir, cameraUp, _tempVector3_0);\n        Vector3.normalize(_tempVector3_0, _tempVector3_0);\n        Vector3.scale(_tempVector3_0, v0.x, out);\n        Vector3.scale(cameraUp, v0.y, _tempVector3_1);\n        Vector3.add(out, _tempVector3_1, out);\n    }\n    static PointinTriangle(A, B, C, P) {\n        let v0 = C.vsub(A, _tempVector3_0);\n        let v1 = B.vsub(A, _tempVector3_1);\n        let v2 = P.vsub(A, _tempVector3_2);\n        let dot00 = v0.dot(v0);\n        let dot01 = v0.dot(v1);\n        let dot02 = v0.dot(v2);\n        let dot11 = v1.dot(v1);\n        let dot12 = v1.dot(v2);\n        let inverDeno = 1 / (dot00 * dot11 - dot01 * dot01);\n        let u = (dot11 * dot02 - dot01 * dot12) * inverDeno;\n        if (u < 0 || u > 1) {\n            return false;\n        }\n        let v = (dot00 * dot12 - dot01 * dot02) * inverDeno;\n        if (v < 0 || v > 1) {\n            return false;\n        }\n        return u + v <= 1;\n    }\n    static _computeBoneAndAnimationDatasByBindPoseMatrxix(bones, curData, inverGlobalBindPose, outBonesDatas, outAnimationDatas, boneIndexToMesh) {\n        var offset = 0;\n        var matOffset = 0;\n        var i;\n        var parentOffset;\n        var boneLength = bones.length;\n        for (i = 0; i < boneLength; offset += bones[i].keyframeWidth, matOffset += 16, i++) {\n            Utils3D._rotationTransformScaleSkinAnimation(curData[offset + 0], curData[offset + 1], curData[offset + 2], curData[offset + 3], curData[offset + 4], curData[offset + 5], curData[offset + 6], curData[offset + 7], curData[offset + 8], curData[offset + 9], outBonesDatas, matOffset);\n            if (i != 0) {\n                parentOffset = bones[i].parentIndex * 16;\n                Utils3D.mulMatrixByArray(outBonesDatas, parentOffset, outBonesDatas, matOffset, outBonesDatas, matOffset);\n            }\n        }\n        var n = inverGlobalBindPose.length;\n        for (i = 0; i < n; i++) {\n            Utils3D.mulMatrixByArrayAndMatrixFast(outBonesDatas, boneIndexToMesh[i] * 16, inverGlobalBindPose[i], outAnimationDatas, i * 16);\n        }\n    }\n    static _computeAnimationDatasByArrayAndMatrixFast(inverGlobalBindPose, bonesDatas, outAnimationDatas, boneIndexToMesh) {\n        for (var i = 0, n = inverGlobalBindPose.length; i < n; i++)\n            Utils3D.mulMatrixByArrayAndMatrixFast(bonesDatas, boneIndexToMesh[i] * 16, inverGlobalBindPose[i], outAnimationDatas, i * 16);\n    }\n    static _computeBoneAndAnimationDatasByBindPoseMatrxixOld(bones, curData, inverGlobalBindPose, outBonesDatas, outAnimationDatas) {\n        var offset = 0;\n        var matOffset = 0;\n        var i;\n        var parentOffset;\n        var boneLength = bones.length;\n        for (i = 0; i < boneLength; offset += bones[i].keyframeWidth, matOffset += 16, i++) {\n            Utils3D._rotationTransformScaleSkinAnimation(curData[offset + 7], curData[offset + 8], curData[offset + 9], curData[offset + 3], curData[offset + 4], curData[offset + 5], curData[offset + 6], curData[offset + 0], curData[offset + 1], curData[offset + 2], outBonesDatas, matOffset);\n            if (i != 0) {\n                parentOffset = bones[i].parentIndex * 16;\n                Utils3D.mulMatrixByArray(outBonesDatas, parentOffset, outBonesDatas, matOffset, outBonesDatas, matOffset);\n            }\n        }\n        var n = inverGlobalBindPose.length;\n        for (i = 0; i < n; i++) {\n            var arrayOffset = i * 16;\n            Utils3D.mulMatrixByArrayAndMatrixFast(outBonesDatas, arrayOffset, inverGlobalBindPose[i], outAnimationDatas, arrayOffset);\n        }\n    }\n    static _computeAnimationDatasByArrayAndMatrixFastOld(inverGlobalBindPose, bonesDatas, outAnimationDatas) {\n        var n = inverGlobalBindPose.length;\n        for (var i = 0; i < n; i++) {\n            var arrayOffset = i * 16;\n            Utils3D.mulMatrixByArrayAndMatrixFast(bonesDatas, arrayOffset, inverGlobalBindPose[i], outAnimationDatas, arrayOffset);\n        }\n    }\n    static _computeRootAnimationData(bones, curData, animationDatas) {\n        for (var i = 0, offset = 0, matOffset = 0, boneLength = bones.length; i < boneLength; offset += bones[i].keyframeWidth, matOffset += 16, i++)\n            Utils3D.createAffineTransformationArray(curData[offset + 0], curData[offset + 1], curData[offset + 2], curData[offset + 3], curData[offset + 4], curData[offset + 5], curData[offset + 6], curData[offset + 7], curData[offset + 8], curData[offset + 9], animationDatas, matOffset);\n    }\n    static transformVector3ArrayByQuat(sourceArray, sourceOffset, rotation, outArray, outOffset) {\n        var x = sourceArray[sourceOffset], y = sourceArray[sourceOffset + 1], z = sourceArray[sourceOffset + 2], qx = rotation.x, qy = rotation.y, qz = rotation.z, qw = rotation.w, ix = qw * x + qy * z - qz * y, iy = qw * y + qz * x - qx * z, iz = qw * z + qx * y - qy * x, iw = -qx * x - qy * y - qz * z;\n        outArray[outOffset] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        outArray[outOffset + 1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        outArray[outOffset + 2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    }\n    static mulMatrixByArray(leftArray, leftOffset, rightArray, rightOffset, outArray, outOffset) {\n        var i, ai0, ai1, ai2, ai3;\n        if (outArray === rightArray) {\n            rightArray = _tempArray16_3;\n            for (i = 0; i < 16; ++i) {\n                rightArray[i] = outArray[outOffset + i];\n            }\n            rightOffset = 0;\n        }\n        for (i = 0; i < 4; i++) {\n            ai0 = leftArray[leftOffset + i];\n            ai1 = leftArray[leftOffset + i + 4];\n            ai2 = leftArray[leftOffset + i + 8];\n            ai3 = leftArray[leftOffset + i + 12];\n            outArray[outOffset + i] = ai0 * rightArray[rightOffset + 0] + ai1 * rightArray[rightOffset + 1] + ai2 * rightArray[rightOffset + 2] + ai3 * rightArray[rightOffset + 3];\n            outArray[outOffset + i + 4] = ai0 * rightArray[rightOffset + 4] + ai1 * rightArray[rightOffset + 5] + ai2 * rightArray[rightOffset + 6] + ai3 * rightArray[rightOffset + 7];\n            outArray[outOffset + i + 8] = ai0 * rightArray[rightOffset + 8] + ai1 * rightArray[rightOffset + 9] + ai2 * rightArray[rightOffset + 10] + ai3 * rightArray[rightOffset + 11];\n            outArray[outOffset + i + 12] = ai0 * rightArray[rightOffset + 12] + ai1 * rightArray[rightOffset + 13] + ai2 * rightArray[rightOffset + 14] + ai3 * rightArray[rightOffset + 15];\n        }\n    }\n    static mulMatrixByArrayFast(leftArray, leftOffset, rightArray, rightOffset, outArray, outOffset) {\n        var i, ai0, ai1, ai2, ai3;\n        for (i = 0; i < 4; i++) {\n            ai0 = leftArray[leftOffset + i];\n            ai1 = leftArray[leftOffset + i + 4];\n            ai2 = leftArray[leftOffset + i + 8];\n            ai3 = leftArray[leftOffset + i + 12];\n            outArray[outOffset + i] = ai0 * rightArray[rightOffset + 0] + ai1 * rightArray[rightOffset + 1] + ai2 * rightArray[rightOffset + 2] + ai3 * rightArray[rightOffset + 3];\n            outArray[outOffset + i + 4] = ai0 * rightArray[rightOffset + 4] + ai1 * rightArray[rightOffset + 5] + ai2 * rightArray[rightOffset + 6] + ai3 * rightArray[rightOffset + 7];\n            outArray[outOffset + i + 8] = ai0 * rightArray[rightOffset + 8] + ai1 * rightArray[rightOffset + 9] + ai2 * rightArray[rightOffset + 10] + ai3 * rightArray[rightOffset + 11];\n            outArray[outOffset + i + 12] = ai0 * rightArray[rightOffset + 12] + ai1 * rightArray[rightOffset + 13] + ai2 * rightArray[rightOffset + 14] + ai3 * rightArray[rightOffset + 15];\n        }\n    }\n    static mulMatrixByArrayAndMatrixFast(leftArray, leftOffset, rightMatrix, outArray, outOffset) {\n        var i, ai0, ai1, ai2, ai3;\n        var rightMatrixE = rightMatrix.elements;\n        var m11 = rightMatrixE[0], m12 = rightMatrixE[1], m13 = rightMatrixE[2], m14 = rightMatrixE[3];\n        var m21 = rightMatrixE[4], m22 = rightMatrixE[5], m23 = rightMatrixE[6], m24 = rightMatrixE[7];\n        var m31 = rightMatrixE[8], m32 = rightMatrixE[9], m33 = rightMatrixE[10], m34 = rightMatrixE[11];\n        var m41 = rightMatrixE[12], m42 = rightMatrixE[13], m43 = rightMatrixE[14], m44 = rightMatrixE[15];\n        var ai0LeftOffset = leftOffset;\n        var ai1LeftOffset = leftOffset + 4;\n        var ai2LeftOffset = leftOffset + 8;\n        var ai3LeftOffset = leftOffset + 12;\n        var ai0OutOffset = outOffset;\n        var ai1OutOffset = outOffset + 4;\n        var ai2OutOffset = outOffset + 8;\n        var ai3OutOffset = outOffset + 12;\n        for (i = 0; i < 4; i++) {\n            ai0 = leftArray[ai0LeftOffset + i];\n            ai1 = leftArray[ai1LeftOffset + i];\n            ai2 = leftArray[ai2LeftOffset + i];\n            ai3 = leftArray[ai3LeftOffset + i];\n            outArray[ai0OutOffset + i] = ai0 * m11 + ai1 * m12 + ai2 * m13 + ai3 * m14;\n            outArray[ai1OutOffset + i] = ai0 * m21 + ai1 * m22 + ai2 * m23 + ai3 * m24;\n            outArray[ai2OutOffset + i] = ai0 * m31 + ai1 * m32 + ai2 * m33 + ai3 * m34;\n            outArray[ai3OutOffset + i] = ai0 * m41 + ai1 * m42 + ai2 * m43 + ai3 * m44;\n        }\n    }\n    static createAffineTransformationArray(tX, tY, tZ, rX, rY, rZ, rW, sX, sY, sZ, outArray, outOffset) {\n        var x2 = rX + rX, y2 = rY + rY, z2 = rZ + rZ;\n        var xx = rX * x2, xy = rX * y2, xz = rX * z2, yy = rY * y2, yz = rY * z2, zz = rZ * z2;\n        var wx = rW * x2, wy = rW * y2, wz = rW * z2;\n        outArray[outOffset + 0] = (1 - (yy + zz)) * sX;\n        outArray[outOffset + 1] = (xy + wz) * sX;\n        outArray[outOffset + 2] = (xz - wy) * sX;\n        outArray[outOffset + 3] = 0;\n        outArray[outOffset + 4] = (xy - wz) * sY;\n        outArray[outOffset + 5] = (1 - (xx + zz)) * sY;\n        outArray[outOffset + 6] = (yz + wx) * sY;\n        outArray[outOffset + 7] = 0;\n        outArray[outOffset + 8] = (xz + wy) * sZ;\n        outArray[outOffset + 9] = (yz - wx) * sZ;\n        outArray[outOffset + 10] = (1 - (xx + yy)) * sZ;\n        outArray[outOffset + 11] = 0;\n        outArray[outOffset + 12] = tX;\n        outArray[outOffset + 13] = tY;\n        outArray[outOffset + 14] = tZ;\n        outArray[outOffset + 15] = 1;\n    }\n    static transformVector3ArrayToVector3ArrayCoordinate(source, sourceOffset, transform, result, resultOffset) {\n        var coordinateX = source[sourceOffset + 0];\n        var coordinateY = source[sourceOffset + 1];\n        var coordinateZ = source[sourceOffset + 2];\n        var transformElem = transform.elements;\n        var w = ((coordinateX * transformElem[3]) + (coordinateY * transformElem[7]) + (coordinateZ * transformElem[11]) + transformElem[15]);\n        result[resultOffset] = (coordinateX * transformElem[0]) + (coordinateY * transformElem[4]) + (coordinateZ * transformElem[8]) + transformElem[12] / w;\n        result[resultOffset + 1] = (coordinateX * transformElem[1]) + (coordinateY * transformElem[5]) + (coordinateZ * transformElem[9]) + transformElem[13] / w;\n        result[resultOffset + 2] = (coordinateX * transformElem[2]) + (coordinateY * transformElem[6]) + (coordinateZ * transformElem[10]) + transformElem[14] / w;\n    }\n    static transformVector3ArrayToVector3ArrayNormal(source, sourceOffset, transform, result, resultOffset) {\n        var coordinateX = source[sourceOffset + 0];\n        var coordinateY = source[sourceOffset + 1];\n        var coordinateZ = source[sourceOffset + 2];\n        var transformElem = transform.elements;\n        result[resultOffset] = coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8];\n        result[resultOffset + 1] = coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9];\n        result[resultOffset + 2] = coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10];\n    }\n    static transformLightingMapTexcoordArray(source, sourceOffset, lightingMapScaleOffset, result, resultOffset) {\n        result[resultOffset + 0] = source[sourceOffset + 0] * lightingMapScaleOffset.x + lightingMapScaleOffset.z;\n        result[resultOffset + 1] = 1.0 - ((1.0 - source[sourceOffset + 1]) * lightingMapScaleOffset.y + lightingMapScaleOffset.w);\n    }\n    static getURLVerion(url) {\n        var index = url.indexOf(\"?\");\n        return index >= 0 ? url.substr(index) : null;\n    }\n    static _createAffineTransformationArray(trans, rot, scale, outE) {\n        var x = rot.x, y = rot.y, z = rot.z, w = rot.w, x2 = x + x, y2 = y + y, z2 = z + z;\n        var xx = x * x2, xy = x * y2, xz = x * z2, yy = y * y2, yz = y * z2, zz = z * z2;\n        var wx = w * x2, wy = w * y2, wz = w * z2, sx = scale.x, sy = scale.y, sz = scale.z;\n        outE[0] = (1 - (yy + zz)) * sx;\n        outE[1] = (xy + wz) * sx;\n        outE[2] = (xz - wy) * sx;\n        outE[3] = 0;\n        outE[4] = (xy - wz) * sy;\n        outE[5] = (1 - (xx + zz)) * sy;\n        outE[6] = (yz + wx) * sy;\n        outE[7] = 0;\n        outE[8] = (xz + wy) * sz;\n        outE[9] = (yz - wx) * sz;\n        outE[10] = (1 - (xx + yy)) * sz;\n        outE[11] = 0;\n        outE[12] = trans.x;\n        outE[13] = trans.y;\n        outE[14] = trans.z;\n        outE[15] = 1;\n    }\n    static _mulMatrixArray(left, right, rightOffset, outArray, outOffset) {\n        var l = right;\n        var r = left;\n        var e = outArray;\n        var l11 = l[rightOffset], l12 = l[rightOffset + 1], l13 = l[rightOffset + 2], l14 = l[rightOffset + 3];\n        var l21 = l[rightOffset + 4], l22 = l[rightOffset + 5], l23 = l[rightOffset + 6], l24 = l[rightOffset + 7];\n        var l31 = l[rightOffset + 8], l32 = l[rightOffset + 9], l33 = l[rightOffset + 10], l34 = l[rightOffset + 11];\n        var l41 = l[rightOffset + 12], l42 = l[rightOffset + 13], l43 = l[rightOffset + 14], l44 = l[rightOffset + 15];\n        var r11 = r[0], r12 = r[1], r13 = r[2], r14 = r[3];\n        var r21 = r[4], r22 = r[5], r23 = r[6], r24 = r[7];\n        var r31 = r[8], r32 = r[9], r33 = r[10], r34 = r[11];\n        var r41 = r[12], r42 = r[13], r43 = r[14], r44 = r[15];\n        e[outOffset] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\n        e[outOffset + 1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\n        e[outOffset + 2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\n        e[outOffset + 3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\n        e[outOffset + 4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\n        e[outOffset + 5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\n        e[outOffset + 6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\n        e[outOffset + 7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\n        e[outOffset + 8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\n        e[outOffset + 9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\n        e[outOffset + 10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\n        e[outOffset + 11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\n        e[outOffset + 12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\n        e[outOffset + 13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\n        e[outOffset + 14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\n        e[outOffset + 15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\n    }\n    static arcTanAngle(x, y) {\n        if (x == 0) {\n            if (y == 1)\n                return Math.PI / 2;\n            return -Math.PI / 2;\n        }\n        if (x > 0)\n            return Math.atan(y / x);\n        if (x < 0) {\n            if (y > 0)\n                return Math.atan(y / x) + Math.PI;\n            return Math.atan(y / x) - Math.PI;\n        }\n        return 0;\n    }\n    static angleTo(from, location, angle) {\n        Vector3.subtract(location, from, TEMPVector30);\n        Vector3.normalize(TEMPVector30, TEMPVector30);\n        angle.x = Math.asin(TEMPVector30.y);\n        angle.y = Utils3D.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\n    }\n    static transformQuat(source, rotation, out) {\n        var re = rotation;\n        var x = source.x, y = source.y, z = source.z, qx = re[0], qy = re[1], qz = re[2], qw = re[3], ix = qw * x + qy * z - qz * y, iy = qw * y + qz * x - qx * z, iz = qw * z + qx * y - qy * x, iw = -qx * x - qy * y - qz * z;\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    }\n    static quaternionWeight(f, weight, e) {\n        e.x = f.x * weight;\n        e.y = f.y * weight;\n        e.z = f.z * weight;\n        e.w = f.w;\n    }\n    static quaternionConjugate(value, result) {\n        result.x = -value.x;\n        result.y = -value.y;\n        result.z = -value.z;\n        result.w = value.w;\n    }\n    static scaleWeight(s, w, out) {\n        var sX = s.x, sY = s.y, sZ = s.z;\n        out.x = sX > 0 ? Math.pow(Math.abs(sX), w) : -Math.pow(Math.abs(sX), w);\n        out.y = sY > 0 ? Math.pow(Math.abs(sY), w) : -Math.pow(Math.abs(sY), w);\n        out.z = sZ > 0 ? Math.pow(Math.abs(sZ), w) : -Math.pow(Math.abs(sZ), w);\n    }\n    static scaleBlend(sa, sb, w, out) {\n        var saw = _tempVector3_0;\n        var sbw = _tempVector3_1;\n        Utils3D.scaleWeight(sa, 1.0 - w, saw);\n        Utils3D.scaleWeight(sb, w, sbw);\n        var sng = w > 0.5 ? sb : sa;\n        out.x = sng.x > 0 ? Math.abs(saw.x * sbw.x) : -Math.abs(saw.x * sbw.x);\n        out.y = sng.y > 0 ? Math.abs(saw.y * sbw.y) : -Math.abs(saw.y * sbw.y);\n        out.z = sng.z > 0 ? Math.abs(saw.z * sbw.z) : -Math.abs(saw.z * sbw.z);\n    }\n    static matrix4x4MultiplyFFF(a, b, e) {\n        var i, ai0, ai1, ai2, ai3;\n        if (e === b) {\n            b = new Float32Array(16);\n            for (i = 0; i < 16; ++i) {\n                b[i] = e[i];\n            }\n        }\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n        var b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7];\n        var b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11];\n        var b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n        for (i = 0; i < 4; i++) {\n            ai0 = a[i];\n            ai1 = a[i + 4];\n            ai2 = a[i + 8];\n            ai3 = a[i + 12];\n            e[i] = ai0 * b0 + ai1 * b1 + ai2 * b2 + ai3 * b3;\n            e[i + 4] = ai0 * b4 + ai1 * b5 + ai2 * b6 + ai3 * b7;\n            e[i + 8] = ai0 * b8 + ai1 * b9 + ai2 * b10 + ai3 * b11;\n            e[i + 12] = ai0 * b12 + ai1 * b13 + ai2 * b14 + ai3 * b15;\n        }\n    }\n    static matrix4x4MultiplyMFM(left, right, out) {\n        Utils3D.matrix4x4MultiplyFFF(left.elements, right, out.elements);\n    }\n    static _buildTexture2D(width, height, format, colorFunc, mipmaps = false) {\n        var texture = new Texture2D(width, height, format, mipmaps, true);\n        texture.anisoLevel = 1;\n        texture.filterMode = FilterMode.Point;\n        TextureGenerator._generateTexture2D(texture, width, height, colorFunc);\n        return texture;\n    }\n    static _drawBound(debugLine, boundBox, color) {\n        if (debugLine.lineCount + 12 > debugLine.maxLineCount)\n            debugLine.maxLineCount += 12;\n        var start = _tempVector3_0;\n        var end = _tempVector3_1;\n        var min = boundBox.min;\n        var max = boundBox.max;\n        start.setValue(min.x, min.y, min.z);\n        end.setValue(max.x, min.y, min.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(min.x, min.y, min.z);\n        end.setValue(min.x, min.y, max.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(max.x, min.y, min.z);\n        end.setValue(max.x, min.y, max.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(min.x, min.y, max.z);\n        end.setValue(max.x, min.y, max.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(min.x, min.y, min.z);\n        end.setValue(min.x, max.y, min.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(min.x, min.y, max.z);\n        end.setValue(min.x, max.y, max.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(max.x, min.y, min.z);\n        end.setValue(max.x, max.y, min.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(max.x, min.y, max.z);\n        end.setValue(max.x, max.y, max.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(min.x, max.y, min.z);\n        end.setValue(max.x, max.y, min.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(min.x, max.y, min.z);\n        end.setValue(min.x, max.y, max.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(max.x, max.y, min.z);\n        end.setValue(max.x, max.y, max.z);\n        debugLine.addLine(start, end, color, color);\n        start.setValue(min.x, max.y, max.z);\n        end.setValue(max.x, max.y, max.z);\n        debugLine.addLine(start, end, color, color);\n    }\n    static _getHierarchyPath(rootSprite, checkSprite, path) {\n        path.length = 0;\n        var sprite = checkSprite;\n        while (sprite !== rootSprite) {\n            var parent = sprite._parent;\n            if (parent)\n                path.push(parent.getChildIndex(sprite));\n            else\n                return null;\n            sprite = parent;\n        }\n        return path;\n    }\n    static _getNodeByHierarchyPath(rootSprite, invPath) {\n        var sprite = rootSprite;\n        for (var i = invPath.length - 1; i >= 0; i--) {\n            sprite = sprite.getChildAt(invPath[i]);\n        }\n        return sprite;\n    }\n    static _getParentNodeByHierarchyPath(rootSprite, path) {\n        let pathlength = path.length;\n        let node = rootSprite;\n        for (let i = 0; i < pathlength; i++) {\n            if (node)\n                node = node.parent;\n            else\n                return null;\n        }\n        return node;\n    }\n    static uint8ArrayToArrayBuffer(rendertexture) {\n        return Utils.uint8ArrayToArrayBuffer(rendertexture);\n    }\n    static uint8ArrayToArrayBufferAsync(rendertexture) {\n        return Utils.uint8ArrayToArrayBufferAsync(rendertexture);\n    }\n}\nwindow.getRTBase64 = Utils3D.uint8ArrayToArrayBuffer;\nconst TEMPVector30 = new Vector3();\nconst _tempVector3_0 = new Vector3();\nconst _tempVector3_1 = new Vector3();\nconst _tempVector3_2 = new Vector3();\nconst _tempArray16_0 = new Float32Array(16);\nconst _tempArray16_1 = new Float32Array(16);\nconst _tempArray16_2 = new Float32Array(16);\nconst _tempArray16_3 = new Float32Array(16);\n","import { Config3D } from \"../../../../Config3D\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Utils3D } from \"../../utils/Utils3D\";\nclass LightBound {\n}\nclass ClusterData {\n    constructor() {\n        this.updateMark = -1;\n        this.pointLightCount = 0;\n        this.spotLightCount = 0;\n        this.indices = [];\n    }\n}\nexport class Cluster {\n    constructor(xSlices, ySlices, zSlices, maxLightsPerClusterAverage) {\n        this._updateMark = 0;\n        this._depthSliceParam = new Vector2();\n        this._xSlices = xSlices;\n        this._ySlices = ySlices;\n        this._zSlices = zSlices;\n        var clusterTexWidth = xSlices * ySlices;\n        var clisterTexHeight = zSlices * (1 + Math.ceil(maxLightsPerClusterAverage / 4));\n        this._clusterTexture = Utils3D._createFloatTextureBuffer(clusterTexWidth, clisterTexHeight);\n        this._clusterTexture.lock = true;\n        this._clusterPixels = new Float32Array(clusterTexWidth * clisterTexHeight * 4);\n        var clusterDatas = new Array(this._zSlices);\n        for (var z = 0; z < this._zSlices; z++) {\n            clusterDatas[z] = new Array(this._ySlices);\n            for (var y = 0; y < this._ySlices; y++) {\n                clusterDatas[z][y] = new Array(this._xSlices);\n                for (var x = 0; x < this._xSlices; x++)\n                    clusterDatas[z][y][x] = new ClusterData();\n            }\n        }\n        this._clusterDatas = clusterDatas;\n    }\n    _placePointLightToClusters(lightIndex, lightBound) {\n        var clusterDatas = this._clusterDatas;\n        var updateMark = this._updateMark;\n        for (var z = lightBound.zMin, zEnd = lightBound.zMax; z < zEnd; z++) {\n            for (var y = lightBound.yMin, yEnd = lightBound.yMax; y < yEnd; y++) {\n                for (var x = lightBound.xMin, xEnd = lightBound.xMax; x < xEnd; x++) {\n                    var data = clusterDatas[z][y][x];\n                    if (data.updateMark != updateMark) {\n                        data.pointLightCount = 0;\n                        data.spotLightCount = 0;\n                        data.updateMark = updateMark;\n                    }\n                    var indices = data.indices;\n                    var lightCount = data.pointLightCount++;\n                    if (lightCount < indices.length)\n                        indices[lightCount] = lightIndex;\n                    else\n                        indices.push(lightIndex);\n                }\n            }\n        }\n    }\n    _placeSpotLightToClusters(lightIndex, lightBound) {\n        var clusterDatas = this._clusterDatas;\n        var updateMark = this._updateMark;\n        for (var z = lightBound.zMin, zEnd = lightBound.zMax; z < zEnd; z++) {\n            for (var y = lightBound.yMin, yEnd = lightBound.yMax; y < yEnd; y++) {\n                for (var x = lightBound.xMin, xEnd = lightBound.xMax; x < xEnd; x++) {\n                    var data = clusterDatas[z][y][x];\n                    if (data.updateMark != updateMark) {\n                        data.pointLightCount = 0;\n                        data.spotLightCount = 0;\n                        data.updateMark = updateMark;\n                    }\n                    var indices = data.indices;\n                    var lightCount = data.pointLightCount + data.spotLightCount++;\n                    if (lightCount < indices.length)\n                        indices[lightCount] = lightIndex;\n                    else\n                        indices.push(lightIndex);\n                }\n            }\n        }\n    }\n    _insertConePlane(origin, forward, radius, halfAngle, pNor) {\n        var V1 = _tempVector36;\n        var V2 = _tempVector37;\n        Vector3.cross(pNor, forward, V1);\n        Vector3.cross(V1, forward, V2);\n        Vector3.normalize(V2, V2);\n        var tanR = radius * Math.tan(halfAngle);\n        var capRimX = origin.x + radius * forward.x + tanR * V2.x;\n        var capRimY = origin.y + radius * forward.y + tanR * V2.y;\n        var capRimZ = origin.z + radius * forward.z + tanR * V2.z;\n        return capRimX * pNor.x + capRimY * pNor.y + capRimZ * pNor.z <= 0 || origin.x * pNor.x + origin.y * pNor.y + origin.z * pNor.z <= 0;\n    }\n    _shrinkSphereLightZPerspective(near, far, lightviewPos, radius, lightBound) {\n        var lvZ = lightviewPos.z;\n        var minZ = lvZ - radius;\n        var maxZ = lvZ + radius;\n        if ((minZ > far) || (maxZ <= near))\n            return false;\n        var depthSliceParam = this._depthSliceParam;\n        lightBound.zMin = Math.floor(Math.log2(Math.max(minZ, near)) * depthSliceParam.x - depthSliceParam.y);\n        lightBound.zMax = Math.min(Math.ceil(Math.log2(maxZ) * depthSliceParam.x - depthSliceParam.y), this._zSlices);\n        return true;\n    }\n    _shrinkSpotLightZPerspective(near, far, viewLightPos, viewConeCap, radius, halfAngle, lightBound) {\n        var pbX = viewConeCap.x, pbY = viewConeCap.y, pbZ = viewConeCap.z;\n        var rb = Math.tan(halfAngle) * radius;\n        var paX = viewLightPos.x, paY = viewLightPos.y, paZ = viewLightPos.z;\n        var aX = pbX - paX, aY = pbY - paY, aZ = pbZ - paZ;\n        var dotA = aX * aX + aY * aY + aZ * aZ;\n        var eZ = Math.sqrt(1.0 - aZ * aZ / dotA);\n        var minZ = Math.max(Math.min(paZ, pbZ - eZ * rb), viewLightPos.z - radius);\n        var maxZ = Math.min(Math.max(paZ, pbZ + eZ * rb), viewLightPos.z + radius);\n        if ((minZ > far) || (maxZ <= near))\n            return false;\n        var depthSliceParam = this._depthSliceParam;\n        lightBound.zMin = Math.floor(Math.log2(Math.max(minZ, near)) * depthSliceParam.x - depthSliceParam.y);\n        lightBound.zMax = Math.min(Math.ceil(Math.log2(maxZ) * depthSliceParam.x - depthSliceParam.y), this._zSlices);\n        return true;\n    }\n    _shrinkSphereLightByBoundOrth(halfX, halfY, near, far, lightviewPos, radius, lightBound) {\n        var lvZ = lightviewPos.z;\n        var minZ = lvZ - radius, maxZ = lvZ + radius;\n        if ((minZ > far) || (maxZ <= near))\n            return false;\n        var lvX = lightviewPos.x;\n        var minX = lvX - radius, maxX = lvX + radius;\n        if ((minX > halfX) || (maxX <= -halfX))\n            return false;\n        var lvY = lightviewPos.y;\n        var minY = lvY - radius, maxY = lvY + radius;\n        if ((minY > halfY) || (maxY <= -halfY))\n            return false;\n        var xSlices = this._xSlices, ySlices = this._ySlices;\n        var depthSliceParam = this._depthSliceParam;\n        var xStride = halfX * 2 / xSlices, yStride = halfY * 2 / ySlices;\n        lightBound.xMin = Math.max(Math.floor((minX + halfX) / xStride), 0);\n        lightBound.xMax = Math.min(Math.ceil((maxX + halfX) / xStride), xSlices);\n        lightBound.yMin = Math.max(Math.floor((halfY - maxY) / yStride), 0);\n        lightBound.yMax = Math.min(Math.ceil((halfY - minY) / yStride), ySlices);\n        lightBound.zMin = Math.floor(Math.log2(Math.max(minZ, near)) * depthSliceParam.x - depthSliceParam.y);\n        lightBound.zMax = Math.min(Math.ceil(Math.log2(maxZ) * depthSliceParam.x - depthSliceParam.y), this._zSlices);\n        return true;\n    }\n    _shrinkSpotLightByBoundOrth(halfX, halfY, near, far, viewLightPos, viewConeCap, radius, halfAngle, lightBound) {\n        var pbX = viewConeCap.x, pbY = viewConeCap.y, pbZ = viewConeCap.z;\n        var rb = Math.tan(halfAngle) * radius;\n        var paX = viewLightPos.x, paY = viewLightPos.y, paZ = viewLightPos.z;\n        var aX = pbX - paX, aY = pbY - paY, aZ = pbZ - paZ;\n        var dotA = aX * aX + aY * aY + aZ * aZ;\n        var eZ = Math.sqrt(1.0 - aZ * aZ / dotA);\n        var minZ = Math.max(Math.min(paZ, pbZ - eZ * rb), viewLightPos.z - radius);\n        var maxZ = Math.min(Math.max(paZ, pbZ + eZ * rb), viewLightPos.z + radius);\n        if ((minZ > far) || (maxZ <= near))\n            return false;\n        var eX = Math.sqrt(1.0 - aX * aX / dotA);\n        var minX = Math.max(Math.min(paX, pbX - eX * rb), viewLightPos.x - radius);\n        var maxX = Math.min(Math.max(paX, pbX + eX * rb), viewLightPos.x + radius);\n        if ((minX > halfX) || (maxX <= -halfX))\n            return false;\n        var eY = Math.sqrt(1.0 - aY * aY / dotA);\n        var minY = Math.max(Math.min(paY, pbY - eY * rb), viewLightPos.y - radius);\n        var maxY = Math.min(Math.max(paY, pbY + eY * rb), viewLightPos.y + radius);\n        if ((minY > halfY) || (maxY <= -halfY))\n            return false;\n        var xSlices = this._xSlices, ySlices = this._ySlices;\n        var depthSliceParam = this._depthSliceParam;\n        var xStride = halfX * 2 / xSlices, yStride = halfY * 2 / ySlices;\n        lightBound.xMin = Math.max(Math.floor((minX + halfX) / xStride), 0);\n        lightBound.xMax = Math.min(Math.ceil((maxX + halfX) / xStride), xSlices);\n        lightBound.yMin = Math.max(Math.floor((halfY - maxY) / yStride), 0);\n        lightBound.yMax = Math.min(Math.ceil((halfY - minY) / yStride), ySlices);\n        lightBound.zMin = Math.floor(Math.log2(Math.max(minZ, near)) * depthSliceParam.x - depthSliceParam.y);\n        lightBound.zMax = Math.min(Math.ceil(Math.log2(maxZ) * depthSliceParam.x - depthSliceParam.y), this._zSlices);\n        return true;\n    }\n    _shrinkXYByRadiusPerspective(lightviewPos, radius, lightBound, xPlanes, yPlanes) {\n        var xMin, yMin;\n        var xMax, yMax;\n        var lvX = lightviewPos.x, lvY = lightviewPos.y, lvZ = lightviewPos.z;\n        var i;\n        var n = this._ySlices + 1;\n        for (i = 0; i < n; i++) {\n            var plane = yPlanes[i];\n            if (lvY * plane.y + lvZ * plane.z < radius) {\n                yMin = Math.max(0, i - 1);\n                break;\n            }\n        }\n        if (i == n)\n            return false;\n        yMax = this._ySlices;\n        for (i = yMin + 1; i < n; i++) {\n            var plane = yPlanes[i];\n            if (lvY * plane.y + lvZ * plane.z <= -radius) {\n                yMax = Math.max(0, i);\n                break;\n            }\n        }\n        n = this._xSlices + 1;\n        for (i = 0; i < n; i++) {\n            var plane = xPlanes[i];\n            if (lvX * plane.x + lvZ * plane.z < radius) {\n                xMin = Math.max(0, i - 1);\n                break;\n            }\n        }\n        xMax = this._xSlices;\n        for (i = xMin + 1; i < n; i++) {\n            var plane = xPlanes[i];\n            if (lvX * plane.x + lvZ * plane.z <= -radius) {\n                xMax = Math.max(0, i);\n                break;\n            }\n        }\n        lightBound.xMin = xMin;\n        lightBound.xMax = xMax;\n        lightBound.yMin = yMin;\n        lightBound.yMax = yMax;\n        return true;\n    }\n    _shrinkSpotXYByConePerspective(lightviewPos, viewForward, radius, halfAngle, lightBound, xPlanes, yPlanes) {\n        var xMin, yMin;\n        var xMax, yMax;\n        var normal = _tempVector32;\n        var n = lightBound.yMax + 1;\n        for (var i = lightBound.yMin + 1; i < n; i++) {\n            if (this._insertConePlane(lightviewPos, viewForward, radius, halfAngle, yPlanes[i])) {\n                yMin = Math.max(0, i - 1);\n                break;\n            }\n        }\n        yMax = lightBound.yMax;\n        for (var i = yMin + 1; i < n; i++) {\n            var plane = yPlanes[i];\n            normal.setValue(0, -plane.y, -plane.z);\n            if (!this._insertConePlane(lightviewPos, viewForward, radius, halfAngle, normal)) {\n                yMax = Math.max(0, i);\n                break;\n            }\n        }\n        n = lightBound.xMax + 1;\n        for (var i = lightBound.xMin + 1; i < n; i++) {\n            if (this._insertConePlane(lightviewPos, viewForward, radius, halfAngle, xPlanes[i])) {\n                xMin = Math.max(0, i - 1);\n                break;\n            }\n        }\n        xMax = lightBound.xMax;\n        for (var i = xMin + 1; i < n; i++) {\n            var plane = xPlanes[i];\n            normal.setValue(-plane.x, 0, -plane.z);\n            if (!this._insertConePlane(lightviewPos, viewForward, radius, halfAngle, normal)) {\n                xMax = Math.max(0, i);\n                break;\n            }\n        }\n        lightBound.xMin = xMin;\n        lightBound.xMax = xMax;\n        lightBound.yMin = yMin;\n        lightBound.yMax = yMax;\n    }\n    _updatePointLightPerspective(near, far, viewMat, pointLight, lightIndex, xPlanes, yPlanes) {\n        var lightBound = _tempLightBound;\n        var lightviewPos = _tempVector30;\n        Vector3.transformV3ToV3(pointLight.owner._transform.position, viewMat, lightviewPos);\n        lightviewPos.z *= -1;\n        if (!this._shrinkSphereLightZPerspective(near, far, lightviewPos, pointLight.range, lightBound))\n            return;\n        if (!this._shrinkXYByRadiusPerspective(lightviewPos, pointLight.range, lightBound, xPlanes, yPlanes))\n            return;\n        this._placePointLightToClusters(lightIndex, lightBound);\n    }\n    _updateSpotLightPerspective(near, far, viewMat, spotLight, lightIndex, xPlanes, yPlanes) {\n        var lightBound = _tempLightBound;\n        var viewPos = _tempVector30;\n        var forward = _tempVector31;\n        var viewConeCap = _tempVector34;\n        var position = spotLight.owner._transform.position;\n        var range = spotLight.range;\n        spotLight.owner._transform.worldMatrix.getForward(forward);\n        Vector3.normalize(forward, forward);\n        Vector3.scale(forward, range, viewConeCap);\n        Vector3.add(position, viewConeCap, viewConeCap);\n        Vector3.transformV3ToV3(position, viewMat, viewPos);\n        Vector3.transformV3ToV3(viewConeCap, viewMat, viewConeCap);\n        viewPos.z *= -1;\n        viewConeCap.z *= -1;\n        var halfAngle = (spotLight.spotAngle / 2) * Math.PI / 180;\n        if (!this._shrinkSpotLightZPerspective(near, far, viewPos, viewConeCap, range, halfAngle, lightBound))\n            return;\n        if (!this._shrinkXYByRadiusPerspective(viewPos, range, lightBound, xPlanes, yPlanes))\n            return;\n        var viewFor = _tempVector33;\n        viewFor.x = viewConeCap.x - viewPos.x, viewFor.y = viewConeCap.y - viewPos.y, viewFor.z = viewConeCap.z - viewPos.z;\n        Vector3.normalize(viewFor, viewFor);\n        this._shrinkSpotXYByConePerspective(viewPos, viewFor, range, halfAngle, lightBound, xPlanes, yPlanes);\n        this._placeSpotLightToClusters(lightIndex, lightBound);\n    }\n    _updatePointLightOrth(halfX, halfY, near, far, viewMat, pointLight, lightIndex) {\n        var lightBound = _tempLightBound;\n        var lightviewPos = _tempVector30;\n        Vector3.transformV3ToV3(pointLight.owner._transform.position, viewMat, lightviewPos);\n        lightviewPos.z *= -1;\n        if (!this._shrinkSphereLightByBoundOrth(halfX, halfY, near, far, lightviewPos, pointLight.range, lightBound))\n            return;\n        this._placePointLightToClusters(lightIndex, lightBound);\n    }\n    _updateSpotLightOrth(halfX, halfY, near, far, viewMat, spotLight, lightIndex) {\n        var lightBound = _tempLightBound;\n        var viewPos = _tempVector30;\n        var forward = _tempVector31;\n        var viewConeCap = _tempVector34;\n        var position = spotLight.owner._transform.position;\n        var range = spotLight.range;\n        spotLight.owner._transform.worldMatrix.getForward(forward);\n        Vector3.normalize(forward, forward);\n        Vector3.scale(forward, range, viewConeCap);\n        Vector3.add(position, viewConeCap, viewConeCap);\n        Vector3.transformV3ToV3(position, viewMat, viewPos);\n        Vector3.transformV3ToV3(viewConeCap, viewMat, viewConeCap);\n        viewPos.z *= -1;\n        viewConeCap.z *= -1;\n        var halfAngle = (spotLight.spotAngle / 2) * Math.PI / 180;\n        if (!this._shrinkSpotLightByBoundOrth(halfX, halfY, near, far, viewPos, viewConeCap, range, halfAngle, lightBound))\n            return;\n        this._placeSpotLightToClusters(lightIndex, lightBound);\n    }\n    update(camera, scene) {\n        this._updateMark++;\n        var camNear = camera.nearPlane;\n        this._depthSliceParam.x = Config3D.lightClusterCount.z / Math.log2(camera.farPlane / camNear);\n        this._depthSliceParam.y = Math.log2(camNear) * this._depthSliceParam.x;\n        var near = camera.nearPlane;\n        var far = camera.farPlane;\n        var viewMat = camera.viewMatrix;\n        var curCount = scene._directionLights._length;\n        var pointLights = scene._pointLights;\n        var poiCount = pointLights._length;\n        var poiElements = pointLights._elements;\n        var spotLights = scene._spotLights;\n        var spoCount = spotLights._length;\n        var spoElements = spotLights._elements;\n        if (camera.orthographic) {\n            var halfY = camera.orthographicVerticalSize / 2.0;\n            var halfX = halfY * camera.aspectRatio;\n            for (var i = 0; i < poiCount; i++, curCount++)\n                this._updatePointLightOrth(halfX, halfY, near, far, viewMat, poiElements[i], curCount);\n            for (var i = 0; i < spoCount; i++, curCount++)\n                this._updateSpotLightOrth(halfX, halfY, near, far, viewMat, spoElements[i], curCount);\n        }\n        else {\n            camera._updateClusterPlaneXY();\n            var xPlanes = camera._clusterXPlanes;\n            var yPlanes = camera._clusterYPlanes;\n            for (var i = 0; i < poiCount; i++, curCount++)\n                this._updatePointLightPerspective(near, far, viewMat, poiElements[i], curCount, xPlanes, yPlanes);\n            for (var i = 0; i < spoCount; i++, curCount++)\n                this._updateSpotLightPerspective(near, far, viewMat, spoElements[i], curCount, xPlanes, yPlanes);\n        }\n        if (poiCount + spoCount > 0) {\n            var xSlices = this._xSlices, ySlices = this._ySlices, zSlices = this._zSlices;\n            var widthFloat = xSlices * ySlices * 4;\n            var lightOff = widthFloat * zSlices;\n            var clusterPixels = this._clusterPixels;\n            var clusterPixelsCount = clusterPixels.length;\n            var clusterDatas = this._clusterDatas;\n            var updateMark = this._updateMark;\n            var freeSpace = true;\n            for (var z = 0; z < zSlices; z++) {\n                for (var y = 0; y < ySlices; y++) {\n                    for (var x = 0; x < xSlices; x++) {\n                        var data = clusterDatas[z][y][x];\n                        var clusterOff = (x + y * xSlices + z * xSlices * ySlices) * 4;\n                        if (data.updateMark !== updateMark) {\n                            clusterPixels[clusterOff] = 0;\n                            clusterPixels[clusterOff + 1] = 0;\n                        }\n                        else {\n                            if (freeSpace) {\n                                var indices = data.indices;\n                                var pCount = data.pointLightCount;\n                                var sCount = data.spotLightCount;\n                                var count = pCount + sCount;\n                                if (lightOff + count < clusterPixelsCount) {\n                                    clusterPixels[clusterOff] = pCount;\n                                    clusterPixels[clusterOff + 1] = sCount;\n                                    clusterPixels[clusterOff + 2] = Math.floor(lightOff / widthFloat);\n                                    clusterPixels[clusterOff + 3] = lightOff % widthFloat;\n                                    for (var i = 0; i < count; i++)\n                                        clusterPixels[lightOff++] = indices[i];\n                                }\n                                else {\n                                    count = clusterPixelsCount - (lightOff + count);\n                                    pCount = Math.min(pCount, count);\n                                    clusterPixels[clusterOff] = pCount;\n                                    clusterPixels[clusterOff + 1] = Math.min(sCount, count - pCount);\n                                    clusterPixels[clusterOff + 2] = Math.floor(lightOff / widthFloat);\n                                    clusterPixels[clusterOff + 3] = lightOff % widthFloat;\n                                    for (var i = 0; i < count; i++)\n                                        clusterPixels[lightOff++] = indices[i];\n                                    freeSpace = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            var width = this._clusterTexture.width;\n            this._clusterTexture.setSubPixelsData(0, 0, width, Math.ceil(lightOff / (4 * width)), clusterPixels, 0, false, false, false);\n        }\n    }\n}\nconst _tempVector30 = new Vector3();\nconst _tempVector31 = new Vector3();\nconst _tempVector32 = new Vector3();\nconst _tempVector33 = new Vector3();\nconst _tempVector34 = new Vector3();\nconst _tempVector35 = new Vector3();\nconst _tempVector36 = new Vector3();\nconst _tempVector37 = new Vector3();\nconst _tempLightBound = new LightBound();\n","export class PhysicsSettings {\n    constructor() {\n        this.flags = 0;\n        this.maxSubSteps = 1;\n        this.fixedTimeStep = 1.0 / 60.0;\n        this.enableCCD = false;\n        this.ccdThreshold = 0.0001;\n        this.ccdSphereRadius = 0.0001;\n    }\n}\n","import { Event } from \"../../events/Event\";\nimport { EventDispatcher } from \"../../events/EventDispatcher\";\nimport { MathUtils3D } from \"../../maths/MathUtils3D\";\nimport { Matrix3x3 } from \"../../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Quaternion } from \"../../maths/Quaternion\";\nimport { Vector3 } from \"../../maths/Vector3\";\nexport class Transform3D extends EventDispatcher {\n    get isDefaultMatrix() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX)) {\n            let localMat = this.localMatrix;\n        }\n        return this._isDefaultMatrix;\n    }\n    get _isFrontFaceInvert() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\n            var scale = this.getWorldLossyScale();\n            var isInvert = scale.x < 0;\n            (scale.y < 0) && (isInvert = !isInvert);\n            (scale.z < 0) && (isInvert = !isInvert);\n            this._faceInvert = isInvert;\n            this._frontFaceValue = this._faceInvert ? -1 : 1;\n        }\n        return this._faceInvert;\n    }\n    getFrontFaceValue() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\n            let value = this._isFrontFaceInvert;\n        }\n        return this._frontFaceValue;\n    }\n    get owner() {\n        return this._owner;\n    }\n    get worldNeedUpdate() {\n        return this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX);\n    }\n    get localPositionX() {\n        return this._localPosition.x;\n    }\n    set localPositionX(x) {\n        this._localPosition.x = x;\n        this.localPosition = this._localPosition;\n    }\n    get localPositionY() {\n        return this._localPosition.y;\n    }\n    set localPositionY(y) {\n        this._localPosition.y = y;\n        this.localPosition = this._localPosition;\n    }\n    get localPositionZ() {\n        return this._localPosition.z;\n    }\n    set localPositionZ(z) {\n        this._localPosition.z = z;\n        this.localPosition = this._localPosition;\n    }\n    get localPosition() {\n        return this._localPosition;\n    }\n    set localPosition(value) {\n        if (this._localPosition !== value)\n            value.cloneTo(this._localPosition);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX, true);\n        this._onWorldPositionTransform();\n    }\n    get localRotationX() {\n        return this.localRotation.x;\n    }\n    set localRotationX(x) {\n        let rot = this.localRotation;\n        rot.x = x;\n        this.localRotation = rot;\n    }\n    get localRotationY() {\n        return this.localRotation.y;\n    }\n    set localRotationY(y) {\n        let rot = this.localRotation;\n        rot.y = y;\n        this.localRotation = rot;\n    }\n    get localRotationZ() {\n        return this.localRotation.z;\n    }\n    set localRotationZ(z) {\n        let rot = this.localRotation;\n        rot.z = z;\n        this.localRotation = rot;\n    }\n    get localRotationW() {\n        return this.localRotation.w;\n    }\n    set localRotationW(w) {\n        let rot = this.localRotation;\n        rot.w = w;\n        this.localRotation = rot;\n    }\n    get localRotation() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION)) {\n            var eulerE = this._localRotationEuler;\n            Quaternion.createFromYawPitchRoll(eulerE.y / Transform3D._angleToRandin, eulerE.x / Transform3D._angleToRandin, eulerE.z / Transform3D._angleToRandin, this._localRotation);\n            this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION, false);\n        }\n        return this._localRotation;\n    }\n    set localRotation(value) {\n        if (this._localRotation !== value)\n            value.cloneTo(this._localRotation);\n        this._localRotation.normalize(this._localRotation);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER | Transform3D.TRANSFORM_LOCALMATRIX, true);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION, false);\n        this._onWorldRotationTransform();\n    }\n    get localScaleX() {\n        return this._localScale.x;\n    }\n    set localScaleX(value) {\n        this._localScale.x = value;\n        this.localScale = this._localScale;\n    }\n    get localScaleY() {\n        return this._localScale.y;\n    }\n    set localScaleY(value) {\n        this._localScale.y = value;\n        this.localScale = this._localScale;\n    }\n    get localScaleZ() {\n        return this._localScale.z;\n    }\n    set localScaleZ(value) {\n        this._localScale.z = value;\n        this.localScale = this._localScale;\n    }\n    get localScale() {\n        return this._localScale;\n    }\n    set localScale(value) {\n        if (this._localScale !== value)\n            value.cloneTo(this._localScale);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX, true);\n        this._onWorldScaleTransform();\n    }\n    get localRotationEulerX() {\n        return this.localRotationEuler.x;\n    }\n    set localRotationEulerX(value) {\n        let rot = this.localRotationEuler;\n        rot.x = value;\n        this.localRotationEuler = rot;\n    }\n    get localRotationEulerY() {\n        return this.localRotationEuler.y;\n    }\n    set localRotationEulerY(value) {\n        let rot = this.localRotationEuler;\n        rot.y = value;\n        this.localRotationEuler = rot;\n    }\n    get localRotationEulerZ() {\n        return this.localRotationEuler.z;\n    }\n    set localRotationEulerZ(value) {\n        let rot = this.localRotationEuler;\n        rot.z = value;\n        this.localRotationEuler = rot;\n    }\n    get localRotationEuler() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_LOCALEULER)) {\n            this._localRotation.getYawPitchRoll(_tempVector30);\n            var euler = _tempVector30;\n            var localRotationEuler = this._localRotationEuler;\n            localRotationEuler.x = euler.y * Transform3D._angleToRandin;\n            localRotationEuler.y = euler.x * Transform3D._angleToRandin;\n            localRotationEuler.z = euler.z * Transform3D._angleToRandin;\n            this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER, false);\n        }\n        return this._localRotationEuler;\n    }\n    set localRotationEuler(value) {\n        if (this._localRotationEuler !== value)\n            value.cloneTo(this._localRotationEuler);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER, false);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION | Transform3D.TRANSFORM_LOCALMATRIX, true);\n        this._onWorldRotationTransform();\n    }\n    get localMatrix() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX)) {\n            Matrix4x4.createAffineTransformation(this._localPosition, this.localRotation, this._localScale, this._localMatrix);\n            this._isDefaultMatrix = this._localMatrix.isIdentity();\n            this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX, false);\n        }\n        return this._localMatrix;\n    }\n    set localMatrix(value) {\n        if (this._localMatrix !== value)\n            value.cloneTo(this._localMatrix);\n        this._isDefaultMatrix = this._localMatrix.isIdentity();\n        this._localMatrix.decomposeTransRotScale(this._localPosition, this._localRotation, this._localScale);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALEULER, true);\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALMATRIX, false);\n        this._onWorldTransform();\n    }\n    get position() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)) {\n            if (this._parent != null) {\n                var worldMatE = this.worldMatrix.elements;\n                this._position.x = worldMatE[12];\n                this._position.y = worldMatE[13];\n                this._position.z = worldMatE[14];\n            }\n            else {\n                this._localPosition.cloneTo(this._position);\n            }\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION, false);\n        }\n        return this._position;\n    }\n    set position(value) {\n        if (this._parent != null) {\n            var parentInvMat = _tempMatrix0;\n            this._parent.worldMatrix.invert(parentInvMat);\n            Vector3.transformCoordinate(value, parentInvMat, this._localPosition);\n        }\n        else {\n            value.cloneTo(this._localPosition);\n        }\n        this.localPosition = this._localPosition;\n        if (this._position !== value)\n            value.cloneTo(this._position);\n        this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION, false);\n    }\n    get rotation() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION)) {\n            if (this._parent != null)\n                Quaternion.multiply(this._parent.rotation, this.localRotation, this._rotation);\n            else\n                this.localRotation.cloneTo(this._rotation);\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION, false);\n        }\n        return this._rotation;\n    }\n    set rotation(value) {\n        if (this._parent != null) {\n            this._parent.rotation.invert(_tempQuaternion0);\n            Quaternion.multiply(_tempQuaternion0, value, this._localRotation);\n        }\n        else {\n            value.cloneTo(this._localRotation);\n        }\n        this.localRotation = this._localRotation;\n        if (value !== this._rotation)\n            value.cloneTo(this._rotation);\n        this._setTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION, false);\n    }\n    get rotationEuler() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER)) {\n            this.rotation.getYawPitchRoll(_tempVector30);\n            var eulerE = _tempVector30;\n            var rotationEulerE = this._rotationEuler;\n            rotationEulerE.x = eulerE.y * Transform3D._angleToRandin;\n            rotationEulerE.y = eulerE.x * Transform3D._angleToRandin;\n            rotationEulerE.z = eulerE.z * Transform3D._angleToRandin;\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDEULER, false);\n        }\n        return this._rotationEuler;\n    }\n    set rotationEuler(value) {\n        Quaternion.createFromYawPitchRoll(value.y / Transform3D._angleToRandin, value.x / Transform3D._angleToRandin, value.z / Transform3D._angleToRandin, this._rotation);\n        this.rotation = this._rotation;\n        if (this._rotationEuler !== value)\n            value.cloneTo(this._rotationEuler);\n        this._setTransformFlag(Transform3D.TRANSFORM_WORLDEULER, false);\n    }\n    get worldMatrix() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX)) {\n            if (this._parent != null) {\n                let effectiveTrans = this._parent;\n                while (effectiveTrans._parent && effectiveTrans.isDefaultMatrix) {\n                    effectiveTrans = effectiveTrans._parent;\n                }\n                Matrix4x4.multiply(effectiveTrans.worldMatrix, this.localMatrix, this._worldMatrix);\n            }\n            else\n                this.localMatrix.cloneTo(this._worldMatrix);\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX, false);\n        }\n        return this._worldMatrix;\n    }\n    set worldMatrix(value) {\n        if (this._parent === null) {\n            value.cloneTo(this._localMatrix);\n        }\n        else {\n            this._parent.worldMatrix.invert(this._localMatrix);\n            Matrix4x4.multiply(this._localMatrix, value, this._localMatrix);\n        }\n        this.localMatrix = this._localMatrix;\n        if (this._worldMatrix !== value)\n            value.cloneTo(this._worldMatrix);\n        this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX, false);\n    }\n    constructor(owner) {\n        super();\n        this._localPosition = new Vector3(0, 0, 0);\n        this._localRotation = new Quaternion(0, 0, 0, 1);\n        this._localScale = new Vector3(1, 1, 1);\n        this._localRotationEuler = new Vector3(0, 0, 0);\n        this._localMatrix = new Matrix4x4();\n        this._position = new Vector3(0, 0, 0);\n        this._rotation = new Quaternion(0, 0, 0, 1);\n        this._scale = new Vector3(1, 1, 1);\n        this._rotationEuler = new Vector3(0, 0, 0);\n        this._worldMatrix = new Matrix4x4();\n        this._children = null;\n        this._isDefaultMatrix = false;\n        this._faceInvert = false;\n        this._frontFaceValue = 1;\n        this._parent = null;\n        this._transformFlag = 0;\n        this._owner = owner;\n        this._children = [];\n        this._initProperty();\n    }\n    _initProperty() {\n        this._setTransformFlag(Transform3D.TRANSFORM_LOCALQUATERNION | Transform3D.TRANSFORM_LOCALEULER | Transform3D.TRANSFORM_LOCALMATRIX, false);\n        this._setTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION | Transform3D.TRANSFORM_WORLDQUATERNION | Transform3D.TRANSFORM_WORLDEULER | Transform3D.TRANSFORM_WORLDSCALE | Transform3D.TRANSFORM_WORLDMATRIX, true);\n    }\n    _getScaleMatrix() {\n        var invRotation = _tempQuaternion0;\n        var invRotationMat = _tempMatrix3x30;\n        var worldRotScaMat = _tempMatrix3x31;\n        var scaMat = _tempMatrix3x32;\n        Matrix3x3.createFromMatrix4x4(this.worldMatrix, worldRotScaMat);\n        this.rotation.invert(invRotation);\n        Matrix3x3.createRotationQuaternion(invRotation, invRotationMat);\n        Matrix3x3.multiply(invRotationMat, worldRotScaMat, scaMat);\n        return scaMat;\n    }\n    _setTransformFlag(type, value) {\n        if (value)\n            this._transformFlag |= type;\n        else\n            this._transformFlag &= ~type;\n    }\n    _getTransformFlag(type) {\n        return (this._transformFlag & type) != 0;\n    }\n    _setParent(value) {\n        if (this._parent !== value) {\n            if (this._parent) {\n                var parentChilds = this._parent._children;\n                var index = parentChilds.indexOf(this);\n                parentChilds.splice(index, 1);\n            }\n            if (value) {\n                value._children.push(this);\n                (value) && (this._onWorldTransform());\n            }\n            this._parent = value;\n        }\n    }\n    _onWorldPositionRotationTransform() {\n        if (!this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER)) {\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX | Transform3D.TRANSFORM_WORLDPOSITION | Transform3D.TRANSFORM_WORLDQUATERNION | Transform3D.TRANSFORM_WORLDEULER, true);\n            this.event(Event.TRANSFORM_CHANGED, this._transformFlag);\n        }\n        for (var i = 0, n = this._children.length; i < n; i++)\n            this._children[i]._onWorldPositionRotationTransform();\n    }\n    _onWorldPositionScaleTransform() {\n        if (!this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX | Transform3D.TRANSFORM_WORLDPOSITION | Transform3D.TRANSFORM_WORLDSCALE, true);\n            this.event(Event.TRANSFORM_CHANGED, this._transformFlag);\n        }\n        for (var i = 0, n = this._children.length; i < n; i++)\n            this._children[i]._onWorldPositionScaleTransform();\n    }\n    _onWorldPositionTransform() {\n        if (!this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION)) {\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX | Transform3D.TRANSFORM_WORLDPOSITION, true);\n            this.event(Event.TRANSFORM_CHANGED, this._transformFlag);\n        }\n        for (var i = 0, n = this._children.length; i < n; i++)\n            this._children[i]._onWorldPositionTransform();\n    }\n    _onWorldRotationTransform() {\n        if (!this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER)) {\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX | Transform3D.TRANSFORM_WORLDQUATERNION | Transform3D.TRANSFORM_WORLDEULER, true);\n            this.event(Event.TRANSFORM_CHANGED, this._transformFlag);\n        }\n        for (var i = 0, n = this._children.length; i < n; i++)\n            this._children[i]._onWorldPositionRotationTransform();\n    }\n    _onWorldScaleTransform() {\n        if (!this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX | Transform3D.TRANSFORM_WORLDSCALE, true);\n            this.event(Event.TRANSFORM_CHANGED, this._transformFlag);\n        }\n        for (var i = 0, n = this._children.length; i < n; i++)\n            this._children[i]._onWorldPositionScaleTransform();\n    }\n    _onWorldTransform() {\n        if (!this._getTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDPOSITION) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDQUATERNION) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDEULER) || !this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDMATRIX | Transform3D.TRANSFORM_WORLDPOSITION | Transform3D.TRANSFORM_WORLDQUATERNION | Transform3D.TRANSFORM_WORLDEULER | Transform3D.TRANSFORM_WORLDSCALE, true);\n            this.event(Event.TRANSFORM_CHANGED, this._transformFlag);\n        }\n        for (var i = 0, n = this._children.length; i < n; i++)\n            this._children[i]._onWorldTransform();\n    }\n    translate(translation, isLocal = true) {\n        if (isLocal) {\n            Matrix4x4.createFromQuaternion(this.localRotation, _tempMatrix0);\n            Vector3.transformCoordinate(translation, _tempMatrix0, _tempVector30);\n            Vector3.add(this.localPosition, _tempVector30, this._localPosition);\n            this.localPosition = this._localPosition;\n        }\n        else {\n            Vector3.add(this.position, translation, this._position);\n            this.position = this._position;\n        }\n    }\n    rotate(rotation, isLocal = true, isRadian = true) {\n        var rot;\n        if (isRadian) {\n            rot = rotation;\n        }\n        else {\n            Vector3.scale(rotation, Math.PI / 180.0, _tempVector30);\n            rot = _tempVector30;\n        }\n        Quaternion.createFromYawPitchRoll(rot.y, rot.x, rot.z, _tempQuaternion0);\n        if (isLocal) {\n            Quaternion.multiply(this.localRotation, _tempQuaternion0, this._localRotation);\n            this.localRotation = this._localRotation;\n        }\n        else {\n            Quaternion.multiply(_tempQuaternion0, this.rotation, this._rotation);\n            this.rotation = this._rotation;\n        }\n    }\n    getForward(forward) {\n        var worldMatElem = this.worldMatrix.elements;\n        forward.x = -worldMatElem[8];\n        forward.y = -worldMatElem[9];\n        forward.z = -worldMatElem[10];\n    }\n    getUp(up) {\n        var worldMatElem = this.worldMatrix.elements;\n        up.x = worldMatElem[4];\n        up.y = worldMatElem[5];\n        up.z = worldMatElem[6];\n    }\n    getRight(right) {\n        var worldMatElem = this.worldMatrix.elements;\n        right.x = worldMatElem[0];\n        right.y = worldMatElem[1];\n        right.z = worldMatElem[2];\n    }\n    lookAt(target, up, isLocal = false, isCamera = true) {\n        var eye;\n        if (isLocal) {\n            eye = this.localPosition;\n            if (Math.abs(eye.x - target.x) < MathUtils3D.zeroTolerance && Math.abs(eye.y - target.y) < MathUtils3D.zeroTolerance && Math.abs(eye.z - target.z) < MathUtils3D.zeroTolerance)\n                return;\n            if (isCamera) {\n                Quaternion.lookAt(this.localPosition, target, up, this._localRotation);\n                this._localRotation.invert(this._localRotation);\n            }\n            else {\n                Vector3.subtract(this.localPosition, target, _tempVector30);\n                Quaternion.rotationLookAt(_tempVector30, up, this._localRotation);\n                this._localRotation.invert(this._localRotation);\n            }\n            this.localRotation = this._localRotation;\n        }\n        else {\n            var worldPosition = this.position;\n            eye = worldPosition;\n            if (Math.abs(eye.x - target.x) < MathUtils3D.zeroTolerance && Math.abs(eye.y - target.y) < MathUtils3D.zeroTolerance && Math.abs(eye.z - target.z) < MathUtils3D.zeroTolerance)\n                return;\n            if (isCamera) {\n                Quaternion.lookAt(worldPosition, target, up, this._rotation);\n                this._rotation.invert(this._rotation);\n            }\n            else {\n                Vector3.subtract(this.position, target, _tempVector30);\n                Quaternion.rotationLookAt(_tempVector30, up, this._rotation);\n                this._rotation.invert(this._rotation);\n            }\n            this.rotation = this._rotation;\n        }\n    }\n    objLookat(target, up, isLocal = false) {\n        this.lookAt(target, up, isLocal, false);\n    }\n    getWorldLossyScale() {\n        if (this._getTransformFlag(Transform3D.TRANSFORM_WORLDSCALE)) {\n            if (this._parent !== null) {\n                var scaMatE = this._getScaleMatrix().elements;\n                this._scale.x = scaMatE[0];\n                this._scale.y = scaMatE[4];\n                this._scale.z = scaMatE[8];\n            }\n            else {\n                this._localScale.cloneTo(this._scale);\n            }\n            this._setTransformFlag(Transform3D.TRANSFORM_WORLDSCALE, false);\n        }\n        return this._scale;\n    }\n    setWorldLossyScale(value) {\n        if (this._parent !== null) {\n            var scaleMat = _tempMatrix3x33;\n            var localScaleMat = _tempMatrix3x33;\n            var localScaleMatE = localScaleMat.elements;\n            var parInvScaleMat = this._parent._getScaleMatrix();\n            parInvScaleMat.invert(parInvScaleMat);\n            Matrix3x3.createFromScaling(value, scaleMat);\n            Matrix3x3.multiply(parInvScaleMat, scaleMat, localScaleMat);\n            this._localScale.x = localScaleMatE[0];\n            this._localScale.y = localScaleMatE[4];\n            this._localScale.z = localScaleMatE[8];\n        }\n        else {\n            value.cloneTo(this._localScale);\n        }\n        this.localScale = this._localScale;\n        if (this._scale !== value)\n            value.cloneTo(this._scale);\n        this._setTransformFlag(Transform3D.TRANSFORM_WORLDSCALE, false);\n    }\n    localToGlobal(value, out) {\n        Vector3.transformV3ToV3(value, this.worldMatrix, out);\n    }\n    globalToLocal(pos, out) {\n        this.worldMatrix.invert(_tempMatrix0);\n        Vector3.transformV3ToV3(pos, _tempMatrix0, out);\n    }\n    toLocalNormal(pos, out) {\n        this.worldMatrix.invert(_tempMatrix0);\n        Vector3.TransformNormal(pos, _tempMatrix0, out);\n    }\n    toDir(forward, dir) {\n        this.rotationTo(this.rotation, forward, dir);\n        this.rotation = this.rotation;\n    }\n    rotationTo(out, a, b) {\n        var dot = Vector3.dot(a, b);\n        if (dot < -0.999999) {\n            Vector3.cross(Vector3.UnitX, a, tmpVec3);\n            if (Vector3.scalarLength(tmpVec3) < 0.000001)\n                Vector3.cross(Vector3.UnitY, a, tmpVec3);\n            Vector3.normalize(tmpVec3, tmpVec3);\n            Quaternion.createFromAxisAngle(tmpVec3, Math.PI, out);\n            return true;\n        }\n        else if (dot > 0.999999) {\n            out.x = 0;\n            out.y = 0;\n            out.z = 0;\n            out.w = 1;\n            return false;\n        }\n        else {\n            Vector3.cross(a, b, tmpVec3);\n            out.x = tmpVec3.x;\n            out.y = tmpVec3.y;\n            out.z = tmpVec3.z;\n            out.w = 1 + dot;\n            out.normalize(out);\n            return true;\n        }\n    }\n    get scale() {\n        console.warn(\"Transfrm3D: discard function,please use getWorldLossyScale instead.\");\n        return this.getWorldLossyScale();\n    }\n    set scale(value) {\n        console.warn(\"Transfrm3D: discard function,please use setWorldLossyScale instead.\");\n        this.setWorldLossyScale(value);\n    }\n}\nTransform3D.TRANSFORM_LOCALQUATERNION = 0x01;\nTransform3D.TRANSFORM_LOCALEULER = 0x02;\nTransform3D.TRANSFORM_LOCALMATRIX = 0x04;\nTransform3D.TRANSFORM_WORLDPOSITION = 0x08;\nTransform3D.TRANSFORM_WORLDQUATERNION = 0x10;\nTransform3D.TRANSFORM_WORLDSCALE = 0x20;\nTransform3D.TRANSFORM_WORLDMATRIX = 0x40;\nTransform3D.TRANSFORM_WORLDEULER = 0x80;\nTransform3D.TRANSFORM_LOCALPOS = 0x100;\nTransform3D.TRANSFORM_LOCALSCALE = 0x200;\nTransform3D._angleToRandin = 180 / Math.PI;\nconst _tempVector30 = new Vector3();\nconst _tempQuaternion0 = new Quaternion();\nconst _tempMatrix0 = new Matrix4x4();\nconst _tempMatrix3x30 = new Matrix3x3();\nconst _tempMatrix3x31 = new Matrix3x3();\nconst _tempMatrix3x32 = new Matrix3x3();\nconst _tempMatrix3x33 = new Matrix3x3();\nconst tmpVec3 = new Vector3();\n","import { LayaGL } from \"../../layagl/LayaGL\";\nexport class GeometryElement {\n    set bufferState(value) {\n        this._geometryElementOBj.bufferState = value._deviceBufferState;\n        this._bufferState = value;\n    }\n    get bufferState() {\n        return this._bufferState;\n    }\n    set mode(value) {\n        this._geometryElementOBj.mode = value;\n    }\n    get mode() {\n        return this._geometryElementOBj.mode;\n    }\n    set drawType(value) {\n        this._geometryElementOBj.drawType = value;\n    }\n    get drawType() {\n        return this._geometryElementOBj.drawType;\n    }\n    setDrawArrayParams(first, count) {\n        this._geometryElementOBj.setDrawArrayParams(first, count);\n    }\n    setDrawElemenParams(count, offset) {\n        this._geometryElementOBj.setDrawElemenParams(count, offset);\n    }\n    set instanceCount(value) {\n        this._geometryElementOBj.instanceCount = value;\n    }\n    get instanceCount() {\n        return this._geometryElementOBj.instanceCount;\n    }\n    set indexFormat(value) {\n        this._geometryElementOBj.indexFormat = value;\n    }\n    get indexFormat() {\n        return this._geometryElementOBj.indexFormat;\n    }\n    get destroyed() {\n        return this._destroyed;\n    }\n    constructor(mode, drawType) {\n        this._destroyed = false;\n        this._geometryElementOBj = LayaGL.renderDeviceFactory.createRenderGeometryElement(mode, drawType);\n        this._id = ++GeometryElement._uniqueIDCounter;\n    }\n    _getType() {\n        throw new Error(\"GeometryElement:must override it.\");\n    }\n    _prepareRender(state) {\n        return true;\n    }\n    _updateRenderParams(state) {\n        throw new Error(\"GeometryElement:must override it.\");\n    }\n    destroy() {\n        if (this._destroyed)\n            return;\n        this._destroyed = true;\n        this._geometryElementOBj.destroy();\n    }\n    clearRenderParams() {\n        this._geometryElementOBj.clearRenderParams();\n    }\n}\nGeometryElement._uniqueIDCounter = 0;\nGeometryElement._typeCounter = 0;\n","import { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { BufferState } from \"../../../webgl/utils/BufferState\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { GeometryElement } from \"../../core/GeometryElement\";\nexport class SkyBox extends GeometryElement {\n    static __init__() {\n        SkyBox.instance = new SkyBox();\n    }\n    constructor() {\n        super(MeshTopology.Triangles, DrawType.DrawElement);\n        var halfHeight = 1.0;\n        var halfWidth = 1.0;\n        var halfDepth = 1.0;\n        var vertices = new Float32Array([-halfDepth, halfHeight, -halfWidth, halfDepth, halfHeight, -halfWidth, halfDepth, halfHeight, halfWidth, -halfDepth, halfHeight, halfWidth,\n            -halfDepth, -halfHeight, -halfWidth, halfDepth, -halfHeight, -halfWidth, halfDepth, -halfHeight, halfWidth, -halfDepth, -halfHeight, halfWidth]);\n        var indices = new Uint16Array([\n            0, 2, 1, 2, 0, 3,\n            4, 6, 7, 6, 4, 5,\n            0, 7, 3, 7, 0, 4,\n            1, 6, 5, 6, 1, 2,\n            3, 6, 2, 6, 3, 7,\n            0, 5, 4, 5, 0, 1\n        ]);\n        var verDec = VertexMesh.getVertexDeclaration(\"POSITION\");\n        let vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(verDec.vertexStride * 8, BufferUsage.Static, false);\n        vertexBuffer.vertexDeclaration = verDec;\n        let indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, 36, BufferUsage.Static, false);\n        vertexBuffer.setData(vertices);\n        indexBuffer.setData(indices);\n        this.bufferState = new BufferState();\n        this.bufferState.applyState([vertexBuffer], indexBuffer);\n        this._geometryElementOBj.setDrawElemenParams(36, 0);\n        this.indexFormat = IndexFormat.UInt16;\n    }\n    _updateRenderParams(state) {\n    }\n}\n","import { VertexDeclaration } from \"../../../RenderEngine/VertexDeclaration\";\nimport { VertexElementFormat } from \"../../../renders/VertexElementFormat\";\nimport { VertexElement } from \"../../../renders/VertexElement\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nexport class VertexPositionTexture {\n    static get vertexDeclaration() {\n        return VertexPositionTexture._vertexDeclaration;\n    }\n    static __init__() {\n        VertexPositionTexture._vertexDeclaration = new VertexDeclaration(20, [new VertexElement(0, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0),\n            new VertexElement(12, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0)]);\n    }\n    get position() {\n        return this._position;\n    }\n    get textureCoordinate0() {\n        return this._textureCoordinate0;\n    }\n    get vertexDeclaration() {\n        return VertexPositionTexture._vertexDeclaration;\n    }\n    constructor(position, textureCoordinate0) {\n        this._position = position;\n        this._textureCoordinate0 = textureCoordinate0;\n    }\n}\n","import { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { GeometryElement } from \"../../core/GeometryElement\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { BufferState } from \"../../../webgl/utils/BufferState\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { VertexPositionTexture } from \"../../graphics/Vertex/VertexPositionTexture\";\nexport class SkyDome extends GeometryElement {\n    static __init__() {\n        SkyDome.instance = new SkyDome();\n    }\n    get stacks() {\n        return this._stacks;\n    }\n    get slices() {\n        return this._slices;\n    }\n    constructor(stacks = 48, slices = 48) {\n        super(MeshTopology.Triangles, DrawType.DrawElement);\n        this._stacks = stacks;\n        this._slices = slices;\n        var vertexDeclaration = VertexPositionTexture.vertexDeclaration;\n        var vertexFloatCount = vertexDeclaration.vertexStride / 4;\n        var numberVertices = (this._stacks + 1) * (this._slices + 1);\n        var numberIndices = (3 * this._stacks * (this._slices + 1)) * 2;\n        var vertices = new Float32Array(numberVertices * vertexFloatCount);\n        var indices = new Uint16Array(numberIndices);\n        var stackAngle = Math.PI / this._stacks;\n        var sliceAngle = (Math.PI * 2.0) / this._slices;\n        var vertexIndex = 0;\n        var vertexCount = 0;\n        var indexCount = 0;\n        for (var stack = 0; stack < (this._stacks + 1); stack++) {\n            var r = Math.sin(stack * stackAngle);\n            var y = Math.cos(stack * stackAngle);\n            for (var slice = 0; slice < (this._slices + 1); slice++) {\n                var x = r * Math.sin(slice * sliceAngle);\n                var z = r * Math.cos(slice * sliceAngle);\n                vertices[vertexCount + 0] = x * SkyDome._radius;\n                vertices[vertexCount + 1] = y * SkyDome._radius;\n                vertices[vertexCount + 2] = z * SkyDome._radius;\n                vertices[vertexCount + 3] = -(slice / this._slices) + 0.75;\n                vertices[vertexCount + 4] = stack / this._stacks;\n                vertexCount += vertexFloatCount;\n                if (stack != (this._stacks - 1)) {\n                    indices[indexCount++] = vertexIndex + 1;\n                    indices[indexCount++] = vertexIndex;\n                    indices[indexCount++] = vertexIndex + (this._slices + 1);\n                    indices[indexCount++] = vertexIndex + (this._slices + 1);\n                    indices[indexCount++] = vertexIndex;\n                    indices[indexCount++] = vertexIndex + (this._slices);\n                    vertexIndex++;\n                }\n            }\n        }\n        let vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vertices.length * 4, BufferUsage.Static, false);\n        vertexBuffer.vertexDeclaration = vertexDeclaration;\n        let indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, indices.length, BufferUsage.Static, false);\n        vertexBuffer.setData(vertices.buffer);\n        indexBuffer.setData(indices);\n        var bufferState = new BufferState();\n        bufferState.applyState([vertexBuffer], indexBuffer);\n        this.bufferState = bufferState;\n        this.indexFormat = IndexFormat.UInt16;\n        this._geometryElementOBj.setDrawElemenParams(indexBuffer.indexCount, 0);\n    }\n    _updateRenderParams(state) {\n    }\n}\nSkyDome._radius = 1;\n","import { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { Transform3D } from \"../../core/Transform3D\";\nimport { BaseRender } from \"../../core/render/BaseRender\";\nimport { SkyBox } from \"./SkyBox\";\nimport { SkyDome } from \"./SkyDome\";\nexport class SkyRenderer {\n    static __init__() {\n        SkyRenderer.SUNLIGHTDIRECTION = Shader3D.propertyNameToID(\"u_SunLight_direction\");\n        SkyRenderer.SUNLIGHTDIRCOLOR = Shader3D.propertyNameToID(\"u_SunLight_color\");\n        SkyRenderer.SKYVIEWMATRIX = Shader3D.propertyNameToID(\"u_SkyViewMat\");\n        SkyRenderer.SKYPROJECTIONMATRIX = Shader3D.propertyNameToID(\"u_SkyProjectionMat\");\n        SkyRenderer.SKYPROJECTIONVIEWMATRIX = Shader3D.propertyNameToID(\"u_SkyProjectionViewMat\");\n        const commandUniform = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"SkyRenderer\");\n        commandUniform.addShaderUniform(SkyRenderer.SUNLIGHTDIRECTION, \"u_SunLight_direction\", ShaderDataType.Vector3);\n        commandUniform.addShaderUniform(SkyRenderer.SUNLIGHTDIRCOLOR, \"u_SunLight_color\", ShaderDataType.Color);\n        commandUniform.addShaderUniform(SkyRenderer.SKYVIEWMATRIX, \"u_SkyViewMat\", ShaderDataType.Matrix4x4);\n        commandUniform.addShaderUniform(SkyRenderer.SKYPROJECTIONMATRIX, \"u_SkyProjectionMat\", ShaderDataType.Matrix4x4);\n        commandUniform.addShaderUniform(SkyRenderer.SKYPROJECTIONVIEWMATRIX, \"u_SkyProjectionViewMat\", ShaderDataType.Matrix4x4);\n    }\n    get material() {\n        return this._material;\n    }\n    set material(value) {\n        if (this._material !== value) {\n            (this._material) && (this._material._removeReference());\n            this._material = value;\n            this._cacheRenderElement && (this._cacheRenderElement.material = value);\n            if (value) {\n                value._addReference();\n            }\n        }\n    }\n    get mesh() {\n        return this._mesh;\n    }\n    set mesh(value) {\n        if (this._mesh !== value) {\n            this._mesh = value;\n            this._cacheRenderElement && this._cacheRenderElement.setGeometry(this.mesh);\n        }\n    }\n    get meshType() {\n        return this.mesh == SkyBox.instance ? \"box\" : (this.mesh == SkyDome.instance ? \"dome\" : \"\");\n    }\n    set meshType(value) {\n        if (value == \"dome\")\n            this.mesh = SkyDome.instance;\n        else\n            this.mesh = SkyBox.instance;\n    }\n    constructor() {\n        this.mesh = SkyDome.instance;\n        this._renderData = new BaseRender();\n        this._baseRenderNode = Laya3DRender.Render3DModuleDataFactory.createBaseRenderNode();\n        this._baseRenderNode.transform = new Transform3D(null);\n    }\n    _isAvailable() {\n        return this._material && this._mesh ? true : false;\n    }\n    renderUpdate(context) {\n        let geomettry = this.mesh;\n        this._renderGeometry = geomettry._prepareRender(context);\n        geomettry._updateRenderParams(context);\n    }\n    setRenderElement(skyRenderElement) {\n        if (!skyRenderElement)\n            return;\n        if (this._cacheRenderElement != skyRenderElement) {\n            skyRenderElement.setGeometry(this.mesh);\n            skyRenderElement.material = this._material;\n            skyRenderElement.render = this._renderData;\n            skyRenderElement._renderElementOBJ.isRender = this._renderGeometry;\n            this._baseRenderNode.setRenderelements([skyRenderElement._renderElementOBJ]);\n            this._baseRenderNode.setCommonUniformMap([\n                \"Sprite3D\",\n                \"SkyRenderer\"\n            ]);\n            this._cacheRenderElement = skyRenderElement;\n        }\n        else {\n            skyRenderElement.setGeometry(this.mesh);\n            skyRenderElement.material = this._material;\n            skyRenderElement.render = this._renderData;\n            skyRenderElement._renderElementOBJ.isRender = this._renderGeometry;\n        }\n    }\n    destroy() {\n        if (this._material) {\n            this._material._removeReference();\n            this._material = null;\n        }\n        this._renderData.destroy();\n        this._cacheRenderElement = null;\n        this._baseRenderNode.setRenderelements([]);\n        this._baseRenderNode.destroy();\n    }\n}\n","import { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { SkyRenderer } from \"../../resource/models/SkyRenderer\";\nimport { RenderElement } from \"./RenderElement\";\nconst InvertYScaleMat = new Matrix4x4(1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\nexport class SkyRenderElement extends RenderElement {\n    constructor() {\n        super();\n        this._viewMatrix = new Matrix4x4();\n        this._projectionMatrix = new Matrix4x4();\n        this._projectViewMatrix = new Matrix4x4();\n    }\n    calculateViewMatrix(cameraViewMat) {\n        cameraViewMat.cloneTo(this._viewMatrix);\n        this._viewMatrix.setTranslationVector(Vector3.ZERO);\n    }\n    caluclateProjectionMatrix(cameraProjMat, aspectRatio, nearPlane, farPlane, fov, orthographic) {\n        if (orthographic) {\n            let halfWidth = 0.2;\n            let halfHeight = halfWidth;\n            Matrix4x4.createOrthoOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, nearPlane, farPlane, this._projectionMatrix);\n        }\n        else {\n            cameraProjMat.cloneTo(this._projectionMatrix);\n            let epsilon = 1e-6;\n            let yScale = 1.0 / Math.tan(Math.PI * fov / 180 * 0.5);\n            this._projectionMatrix.elements[0] = yScale / aspectRatio;\n            this._projectionMatrix.elements[5] = yScale;\n            this._projectionMatrix.elements[10] = epsilon - 1.0;\n            this._projectionMatrix.elements[11] = -1.0;\n            this._projectionMatrix.elements[14] = -0;\n        }\n    }\n    renderpre(context) {\n        if (context.invertY) {\n            Matrix4x4.multiply(InvertYScaleMat, this._projectionMatrix, Matrix4x4.TEMP);\n            Matrix4x4.multiply(Matrix4x4.TEMP, this._viewMatrix, tmpMatrix);\n            this._renderElementOBJ.renderShaderData.setMatrix4x4(SkyRenderer.SKYPROJECTIONMATRIX, Matrix4x4.TEMP);\n            this._renderElementOBJ.renderShaderData.setMatrix4x4(SkyRenderer.SKYPROJECTIONVIEWMATRIX, tmpMatrix);\n        }\n        else {\n            Matrix4x4.multiply(this._projectionMatrix, this._viewMatrix, this._projectViewMatrix);\n            this._renderElementOBJ.renderShaderData.setMatrix4x4(SkyRenderer.SKYPROJECTIONMATRIX, this._projectionMatrix);\n            this._renderElementOBJ.renderShaderData.setMatrix4x4(SkyRenderer.SKYPROJECTIONVIEWMATRIX, this._projectViewMatrix);\n        }\n        this._renderElementOBJ.renderShaderData.setMatrix4x4(SkyRenderer.SKYVIEWMATRIX, this._viewMatrix);\n        this._renderElementOBJ.renderShaderData.setColor(SkyRenderer.SUNLIGHTDIRCOLOR, context.scene._sunColor);\n        this._renderElementOBJ.renderShaderData.setVector3(SkyRenderer.SUNLIGHTDIRECTION, context.scene._sundir);\n    }\n}\nconst tmpMatrix = new Matrix4x4();\n","import { Event } from \"../../events/Event\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { Sprite3D } from \"./Sprite3D\";\nimport { ILaya } from \"../../../ILaya\";\nimport { Color } from \"../../maths/Color\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { SkyRenderElement } from \"./render/SkyRenderElement\";\nexport class BaseCamera extends Sprite3D {\n    static shaderValueInit() {\n        BaseCamera.SHADERDEFINE_DEPTH = Shader3D.getDefineByName(\"DEPTHMAP\");\n        BaseCamera.SHADERDEFINE_DEPTHNORMALS = Shader3D.getDefineByName(\"DEPTHNORMALSMAP\");\n        BaseCamera.SHADERDEFINE_ORTHOGRAPHIC = Shader3D.getDefineByName(\"CAMERAORTHOGRAPHIC\");\n        BaseCamera.SHADERDEFINE_FXAA = Shader3D.getDefineByName(\"FXAA\");\n        BaseCamera.CAMERAPOS = Shader3D.propertyNameToID(\"u_CameraPos\");\n        BaseCamera.VIEWMATRIX = Shader3D.propertyNameToID(\"u_View\");\n        BaseCamera.VIEWPROJECTMATRIX = Shader3D.propertyNameToID(\"u_ViewProjection\");\n        BaseCamera.PROJECTMATRIX = Shader3D.propertyNameToID(\"u_Projection\");\n        BaseCamera.CAMERADIRECTION = Shader3D.propertyNameToID(\"u_CameraDirection\");\n        BaseCamera.CAMERAUP = Shader3D.propertyNameToID(\"u_CameraUp\");\n        BaseCamera.VIEWPORT = Shader3D.propertyNameToID(\"u_Viewport\");\n        BaseCamera.PROJECTION_PARAMS = Shader3D.propertyNameToID(\"u_ProjectionParams\");\n        BaseCamera.DEPTHTEXTURE = Shader3D.propertyNameToID(\"u_CameraDepthTexture\");\n        BaseCamera.DEPTHNORMALSTEXTURE = Shader3D.propertyNameToID(\"u_CameraDepthNormalsTexture\");\n        BaseCamera.OPAQUETEXTURE = Shader3D.propertyNameToID(\"u_CameraOpaqueTexture\");\n        BaseCamera.OPAQUETEXTUREPARAMS = Shader3D.propertyNameToID(\"u_OpaqueTextureParams\");\n        BaseCamera.DEPTHZBUFFERPARAMS = Shader3D.propertyNameToID(\"u_ZBufferParams\");\n        let camerauniformMap = BaseCamera.cameraUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(BaseCamera.cameraBlockName);\n        camerauniformMap.addShaderUniform(BaseCamera.CAMERAPOS, \"u_CameraPos\", ShaderDataType.Vector3);\n        camerauniformMap.addShaderUniform(BaseCamera.VIEWMATRIX, \"u_View\", ShaderDataType.Matrix4x4);\n        camerauniformMap.addShaderUniform(BaseCamera.PROJECTMATRIX, \"u_Projection\", ShaderDataType.Matrix4x4);\n        camerauniformMap.addShaderUniform(BaseCamera.VIEWPROJECTMATRIX, \"u_ViewProjection\", ShaderDataType.Matrix4x4);\n        camerauniformMap.addShaderUniform(BaseCamera.CAMERADIRECTION, \"u_CameraDirection\", ShaderDataType.Vector3);\n        camerauniformMap.addShaderUniform(BaseCamera.CAMERAUP, \"u_CameraUp\", ShaderDataType.Vector3);\n        camerauniformMap.addShaderUniform(BaseCamera.VIEWPORT, \"u_Viewport\", ShaderDataType.Vector4);\n        camerauniformMap.addShaderUniform(BaseCamera.PROJECTION_PARAMS, \"u_ProjectionParams\", ShaderDataType.Vector4);\n        camerauniformMap.addShaderUniform(BaseCamera.DEPTHTEXTURE, \"u_CameraDepthTexture\", ShaderDataType.Texture2D);\n        camerauniformMap.addShaderUniform(BaseCamera.DEPTHNORMALSTEXTURE, \"u_CameraDepthNormalsTexture\", ShaderDataType.Texture2D);\n        camerauniformMap.addShaderUniform(BaseCamera.OPAQUETEXTURE, \"u_CameraOpaqueTexture\", ShaderDataType.Texture2D);\n        camerauniformMap.addShaderUniform(BaseCamera.OPAQUETEXTUREPARAMS, \"u_OpaqueTextureParams\", ShaderDataType.Vector4);\n        camerauniformMap.addShaderUniform(BaseCamera.DEPTHZBUFFERPARAMS, \"u_ZBufferParams\", ShaderDataType.Vector4);\n    }\n    static __init__() {\n        BaseCamera.shaderValueInit();\n    }\n    get clearColor() {\n        return this._clearColor;\n    }\n    set clearColor(value) {\n        this._clearColor = value;\n        value.toLinear(this._linearClearColor);\n    }\n    get skyRenderElement() {\n        return this._skyRenderElement;\n    }\n    get fieldOfView() {\n        return this._fieldOfView;\n    }\n    set fieldOfView(value) {\n        this._fieldOfView = value;\n        this._calculateProjectionMatrix();\n        this._caculateMaxLocalYRange();\n    }\n    get maxlocalYDistance() {\n        return this._yrange;\n    }\n    get nearPlane() {\n        return this._nearPlane;\n    }\n    set nearPlane(value) {\n        this._nearPlane = value;\n        this._calculateProjectionMatrix();\n    }\n    get farPlane() {\n        return this._farPlane;\n    }\n    set farPlane(vaule) {\n        this._farPlane = vaule;\n        this._calculateProjectionMatrix();\n        this._caculateMaxLocalYRange();\n    }\n    get orthographic() {\n        return this._orthographic;\n    }\n    set orthographic(vaule) {\n        this._orthographic = vaule;\n        this._calculateProjectionMatrix();\n        if (vaule) {\n            this._shaderValues.addDefine(BaseCamera.SHADERDEFINE_ORTHOGRAPHIC);\n        }\n        else\n            this._shaderValues.removeDefine(BaseCamera.SHADERDEFINE_ORTHOGRAPHIC);\n    }\n    get orthographicVerticalSize() {\n        return this._orthographicVerticalSize;\n    }\n    set orthographicVerticalSize(vaule) {\n        this._orthographicVerticalSize = vaule;\n        this._calculateProjectionMatrix();\n    }\n    get cullingMask() {\n        return this._cullingMask;\n    }\n    set cullingMask(value) {\n        this._cullingMask = value;\n    }\n    get renderingOrder() {\n        return this._renderingOrder;\n    }\n    set renderingOrder(value) {\n        this._renderingOrder = value;\n        this._sortCamerasByRenderingOrder();\n    }\n    constructor(nearPlane = 0.3, farPlane = 1000) {\n        super();\n        this._forward = new Vector3();\n        this._up = new Vector3();\n        this._shaderValues = LayaGL.renderDeviceFactory.createShaderData(null);\n        this._linearClearColor = new Color();\n        this.clearColor = new Color(100 / 255, 149 / 255, 237 / 255, 255 / 255);\n        this._fieldOfView = 60;\n        this._useUserProjectionMatrix = false;\n        this._orthographicVerticalSize = 10;\n        this.renderingOrder = 0;\n        this._nearPlane = nearPlane;\n        this._farPlane = farPlane;\n        this.cullingMask = 2147483647;\n        this.staticMask = 0xffffffff;\n        this.useOcclusionCulling = true;\n        this._renderEngine = LayaGL.renderEngine;\n        this._orthographic = false;\n        this._skyRenderElement = new SkyRenderElement();\n    }\n    _caculateMaxLocalYRange() {\n        let halffield = 3.1416 * this.fieldOfView / 180.0 / 2;\n        let dist = this.farPlane;\n        this._yrange = Math.tan(halffield) * dist * 2;\n    }\n    _calculateProjectionMatrix() {\n    }\n    _onScreenSizeChanged() {\n        this._calculateProjectionMatrix();\n    }\n    _sortCamerasByRenderingOrder() {\n        if (this.displayedInStage) {\n            var cameraPool = this.scene._cameraPool;\n            var n = cameraPool.length - 1;\n            for (var i = 0; i < n; i++) {\n                if (cameraPool[i].renderingOrder > cameraPool[n].renderingOrder) {\n                    var tempCamera = cameraPool[i];\n                    cameraPool[i] = cameraPool[n];\n                    cameraPool[n] = tempCamera;\n                }\n            }\n        }\n    }\n    _prepareCameraToRender() {\n        this.transform.getForward(this._forward);\n        this.transform.getUp(this._up);\n        this._shaderValues.setVector3(BaseCamera.CAMERAPOS, this.transform.position);\n        this._shaderValues.setVector3(BaseCamera.CAMERADIRECTION, this._forward);\n        this._shaderValues.setVector3(BaseCamera.CAMERAUP, this._up);\n    }\n    render(scene) {\n    }\n    addLayer(layer) {\n        this.cullingMask |= Math.pow(2, layer);\n    }\n    removeLayer(layer) {\n        this.cullingMask &= ~Math.pow(2, layer);\n    }\n    addAllLayers() {\n        this.cullingMask = 2147483647;\n    }\n    removeAllLayers() {\n        this.cullingMask = 0;\n    }\n    resetProjectionMatrix() {\n        this._useUserProjectionMatrix = false;\n        this._calculateProjectionMatrix();\n    }\n    _onActive() {\n        this._scene._addCamera(this);\n        super._onActive();\n    }\n    _onInActive() {\n        this._scene._removeCamera(this);\n        super._onInActive();\n    }\n    destroy(destroyChild = true) {\n        this._skyRenderElement.destroy();\n        this._skyRenderElement = null;\n        ILaya.stage.off(Event.RESIZE, this, this._onScreenSizeChanged);\n        super.destroy(destroyChild);\n    }\n}\nBaseCamera.cameraBlockName = \"BaseCamera\";\nBaseCamera.RENDERINGTYPE_SHADERDEFINE_FXAA = \"FXAA\";\nBaseCamera.RENDERINGTYPE_DEFERREDLIGHTING = \"DEFERREDLIGHTING\";\nBaseCamera.RENDERINGTYPE_FORWARDRENDERING = \"FORWARDRENDERING\";\nBaseCamera._invertYScaleMatrix = new Matrix4x4(1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\nBaseCamera._invertYProjectionMatrix = new Matrix4x4();\nBaseCamera._invertYProjectionViewMatrix = new Matrix4x4();\n","export class LightQueue {\n    constructor() {\n        this._length = 0;\n        this._elements = [];\n    }\n    add(light) {\n        let index = this._elements.indexOf(light);\n        if (index != -1 && index < this._length) {\n            return;\n        }\n        if (this._length === this._elements.length)\n            this._elements.push(light);\n        else\n            this._elements[this._length] = light;\n        this._length++;\n    }\n    remove(light) {\n        var index = this._elements.indexOf(light);\n        if (index == -1)\n            return;\n        this._length--;\n        if (index !== this._length) {\n            var end = this._elements[this._length];\n            this._elements[index] = end;\n        }\n    }\n    shift() {\n        this._length--;\n        return this._elements.shift();\n    }\n    getBrightestLight() {\n        var maxIntIndex;\n        var maxIntensity = -1;\n        var elements = this._elements;\n        for (var i = 0; i < this._length; i++) {\n            var intensity = elements[i]._intensity;\n            if (maxIntensity < intensity) {\n                maxIntensity = intensity;\n                maxIntIndex = i;\n            }\n        }\n        return maxIntIndex;\n    }\n    normalLightOrdering(brightestIndex) {\n        var firstLight = this._elements[0];\n        this._elements[0] = this._elements[brightestIndex];\n        this._elements[brightestIndex] = firstLight;\n    }\n}\nexport class AlternateLightQueue extends LightQueue {\n    remove(light) {\n        var index = this._elements.indexOf(light);\n        this._elements.splice(index, 1);\n        this._length--;\n    }\n}\n","import { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nexport class Lightmap {\n    get lightmapColor() {\n        return this._lightmapColor;\n    }\n    set lightmapColor(value) {\n        if (this._lightmapColor == value)\n            return;\n        this._lightmapColor && this._lightmapColor._removeReference();\n        this._lightmapColor = value;\n        if (value) {\n            value._addReference();\n            this._dataModule.lightmapColor = value._texture;\n        }\n        else {\n            this._dataModule.lightmapColor = null;\n        }\n    }\n    get lightmapDirection() {\n        return this._lightmapDirection;\n    }\n    set lightmapDirection(value) {\n        if (this._lightmapDirection == value)\n            return;\n        this._lightmapDirection && this._lightmapDirection._removeReference();\n        this._lightmapDirection = value;\n        if (value) {\n            value._addReference();\n            this._dataModule.lightmapDirection = value._texture;\n        }\n        else {\n            this._dataModule.lightmapDirection = null;\n        }\n    }\n    constructor() {\n        this._dataModule = Laya3DRender.Render3DModuleDataFactory.createLightmapData();\n    }\n}\nLightmap.ApplyLightmapEvent = \"ApplyLightmap\";\n","export class Scene3DShaderDeclaration {\n}\n","export var ShadowCascadesMode;\n(function (ShadowCascadesMode) {\n    ShadowCascadesMode[ShadowCascadesMode[\"NoCascades\"] = 0] = \"NoCascades\";\n    ShadowCascadesMode[ShadowCascadesMode[\"TwoCascades\"] = 1] = \"TwoCascades\";\n    ShadowCascadesMode[ShadowCascadesMode[\"FourCascades\"] = 2] = \"FourCascades\";\n})(ShadowCascadesMode || (ShadowCascadesMode = {}));\n","import { Vector3 } from \"../../maths/Vector3\";\nexport class Plane {\n    constructor(normal = new Vector3, d = 0) {\n        this.normal = normal;\n        this.distance = d;\n    }\n    static createPlaneBy3P(point0, point1, point2, out) {\n        var x1 = point1.x - point0.x;\n        var y1 = point1.y - point0.y;\n        var z1 = point1.z - point0.z;\n        var x2 = point2.x - point0.x;\n        var y2 = point2.y - point0.y;\n        var z2 = point2.z - point0.z;\n        var yz = (y1 * z2) - (z1 * y2);\n        var xz = (z1 * x2) - (x1 * z2);\n        var xy = (x1 * y2) - (y1 * x2);\n        var invPyth = 1.0 / (Math.sqrt((yz * yz) + (xz * xz) + (xy * xy)));\n        var x = yz * invPyth;\n        var y = xz * invPyth;\n        var z = xy * invPyth;\n        var normal = out.normal;\n        normal.x = x;\n        normal.y = y;\n        normal.z = z;\n        out.normal = normal.normalize();\n        out.distance = -((x * point0.x) + (y * point0.y) + (z * point0.z));\n    }\n    normalize() {\n        var normalEX = this.normal.x;\n        var normalEY = this.normal.y;\n        var normalEZ = this.normal.z;\n        var magnitude = 1.0 / Math.sqrt(normalEX * normalEX + normalEY * normalEY + normalEZ * normalEZ);\n        this.normal.x = normalEX * magnitude;\n        this.normal.y = normalEY * magnitude;\n        this.normal.z = normalEZ * magnitude;\n        this.distance *= magnitude;\n    }\n    cloneTo(destObject) {\n        this.normal.cloneTo(destObject.normal);\n        destObject.distance = this.distance;\n    }\n    clone() {\n        var dest = new Plane();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nPlane.PlaneIntersectionType_Back = 0;\nPlane.PlaneIntersectionType_Front = 1;\nPlane.PlaneIntersectionType_Intersecting = 2;\n","import { Vector3 } from \"../../maths/Vector3\";\nexport class Ray {\n    constructor(origin, direction) {\n        this.origin = origin;\n        this.direction = direction;\n    }\n    at(t, out) {\n        Vector3.scale(this.direction, t, out);\n        Vector3.add(this.origin, out, out);\n    }\n}\n","export class ContainmentType {\n}\nContainmentType.Disjoint = 0;\nContainmentType.Contains = 1;\nContainmentType.Intersects = 2;\n","import { Plane } from \"./Plane\";\nimport { Ray } from \"./Ray\";\nimport { ContainmentType } from \"./ContainmentType\";\nimport { MathUtils3D } from \"../../maths/MathUtils3D\";\nimport { Vector3 } from \"../../maths/Vector3\";\nexport class CollisionUtils {\n    constructor() {\n    }\n    static distancePlaneToPoint(plane, point) {\n        var dot = Vector3.dot(plane.normal, point);\n        return dot + plane.distance;\n    }\n    static distanceBoxToPoint(box, point) {\n        var boxMin = box.min;\n        var boxMineX = boxMin.x;\n        var boxMineY = boxMin.y;\n        var boxMineZ = boxMin.z;\n        var boxMax = box.max;\n        var boxMaxeX = boxMax.x;\n        var boxMaxeY = boxMax.y;\n        var boxMaxeZ = boxMax.z;\n        var pointeX = point.x;\n        var pointeY = point.y;\n        var pointeZ = point.z;\n        var distance = 0;\n        if (pointeX < boxMineX)\n            distance += (boxMineX - pointeX) * (boxMineX - pointeX);\n        if (pointeX > boxMaxeX)\n            distance += (boxMaxeX - pointeX) * (boxMaxeX - pointeX);\n        if (pointeY < boxMineY)\n            distance += (boxMineY - pointeY) * (boxMineY - pointeY);\n        if (pointeY > boxMaxeY)\n            distance += (boxMaxeY - pointeY) * (boxMaxeY - pointeY);\n        if (pointeZ < boxMineZ)\n            distance += (boxMineZ - pointeZ) * (boxMineZ - pointeZ);\n        if (pointeZ > boxMaxeZ)\n            distance += (boxMaxeZ - pointeZ) * (boxMaxeZ - pointeZ);\n        return Math.sqrt(distance);\n    }\n    static distanceBoxToBox(box1, box2) {\n        var box1Mine = box1.min;\n        var box1MineX = box1Mine.x;\n        var box1MineY = box1Mine.y;\n        var box1MineZ = box1Mine.z;\n        var box1Maxe = box1.max;\n        var box1MaxeX = box1Maxe.x;\n        var box1MaxeY = box1Maxe.y;\n        var box1MaxeZ = box1Maxe.z;\n        var box2Mine = box2.min;\n        var box2MineX = box2Mine.x;\n        var box2MineY = box2Mine.y;\n        var box2MineZ = box2Mine.z;\n        var box2Maxe = box2.max;\n        var box2MaxeX = box2Maxe.x;\n        var box2MaxeY = box2Maxe.y;\n        var box2MaxeZ = box2Maxe.z;\n        var distance = 0;\n        var delta;\n        if (box1MineX > box2MaxeX) {\n            delta = box1MineX - box2MaxeX;\n            distance += delta * delta;\n        }\n        else if (box2MineX > box1MaxeX) {\n            delta = box2MineX - box1MaxeX;\n            distance += delta * delta;\n        }\n        if (box1MineY > box2MaxeY) {\n            delta = box1MineY - box2MaxeY;\n            distance += delta * delta;\n        }\n        else if (box2MineY > box1MaxeY) {\n            delta = box2MineY - box1MaxeY;\n            distance += delta * delta;\n        }\n        if (box1MineZ > box2MaxeZ) {\n            delta = box1MineZ - box2MaxeZ;\n            distance += delta * delta;\n        }\n        else if (box2MineZ > box1MaxeZ) {\n            delta = box2MineZ - box1MaxeZ;\n            distance += delta * delta;\n        }\n        return Math.sqrt(distance);\n    }\n    static distanceSphereToPoint(sphere, point) {\n        var distance = Math.sqrt(Vector3.distanceSquared(sphere.center, point));\n        distance -= sphere.radius;\n        return Math.max(distance, 0);\n    }\n    static distanceSphereToSphere(sphere1, sphere2) {\n        var distance = Math.sqrt(Vector3.distanceSquared(sphere1.center, sphere2.center));\n        distance -= sphere1.radius + sphere2.radius;\n        return Math.max(distance, 0);\n    }\n    static intersectsRayAndTriangleRD(ray, vertex1, vertex2, vertex3, out) {\n        var rayO = ray.origin;\n        var rayOeX = rayO.x;\n        var rayOeY = rayO.y;\n        var rayOeZ = rayO.z;\n        var rayD = ray.direction;\n        var rayDeX = rayD.x;\n        var rayDeY = rayD.y;\n        var rayDeZ = rayD.z;\n        var v1eX = vertex1.x;\n        var v1eY = vertex1.y;\n        var v1eZ = vertex1.z;\n        var v2eX = vertex2.x;\n        var v2eY = vertex2.y;\n        var v2eZ = vertex2.z;\n        var v3eX = vertex3.x;\n        var v3eY = vertex3.y;\n        var v3eZ = vertex3.z;\n        var _tempV30eX = _tempV30.x;\n        var _tempV30eY = _tempV30.y;\n        var _tempV30eZ = _tempV30.z;\n        _tempV30eX = v2eX - v1eX;\n        _tempV30eY = v2eY - v1eY;\n        _tempV30eZ = v2eZ - v1eZ;\n        var _tempV31eX = _tempV31.x;\n        var _tempV31eY = _tempV31.y;\n        var _tempV31eZ = _tempV31.z;\n        _tempV31eX = v3eX - v1eX;\n        _tempV31eY = v3eY - v1eY;\n        _tempV31eZ = v3eZ - v1eZ;\n        var _tempV32eX = _tempV32.x;\n        var _tempV32eY = _tempV32.y;\n        var _tempV32eZ = _tempV32.z;\n        _tempV32eX = (rayDeY * _tempV31eZ) - (rayDeZ * _tempV31eY);\n        _tempV32eY = (rayDeZ * _tempV31eX) - (rayDeX * _tempV31eZ);\n        _tempV32eZ = (rayDeX * _tempV31eY) - (rayDeY * _tempV31eX);\n        var determinant = (_tempV30eX * _tempV32eX) + (_tempV30eY * _tempV32eY) + (_tempV30eZ * _tempV32eZ);\n        if (MathUtils3D.isZero(determinant)) {\n            out = 0;\n            return false;\n        }\n        var inversedeterminant = 1 / determinant;\n        var _tempV33eX = _tempV33.x;\n        var _tempV33eY = _tempV33.y;\n        var _tempV33eZ = _tempV33.z;\n        _tempV33eX = rayOeX - v1eX;\n        _tempV33eY = rayOeY - v1eY;\n        _tempV33eZ = rayOeZ - v1eZ;\n        var triangleU = (_tempV33eX * _tempV32eX) + (_tempV33eY * _tempV32eY) + (_tempV33eZ * _tempV32eZ);\n        triangleU *= inversedeterminant;\n        if (triangleU < 0 || triangleU > 1) {\n            out = 0;\n            return false;\n        }\n        var _tempV34eX = _tempV34.x;\n        var _tempV34eY = _tempV34.y;\n        var _tempV34eZ = _tempV34.z;\n        _tempV34eX = (_tempV33eY * _tempV30eZ) - (_tempV33eZ * _tempV30eY);\n        _tempV34eY = (_tempV33eZ * _tempV30eX) - (_tempV33eX * _tempV30eZ);\n        _tempV34eZ = (_tempV33eX * _tempV30eY) - (_tempV33eY * _tempV30eX);\n        var triangleV = ((rayDeX * _tempV34eX) + (rayDeY * _tempV34eY)) + (rayDeZ * _tempV34eZ);\n        triangleV *= inversedeterminant;\n        if (triangleV < 0 || triangleU + triangleV > 1) {\n            out = 0;\n            return false;\n        }\n        var raydistance = (_tempV31eX * _tempV34eX) + (_tempV31eY * _tempV34eY) + (_tempV31eZ * _tempV34eZ);\n        raydistance *= inversedeterminant;\n        if (raydistance < 0) {\n            out = 0;\n            return false;\n        }\n        out = raydistance;\n        return true;\n    }\n    static intersectsRayAndTriangleRP(ray, vertex1, vertex2, vertex3, out) {\n        var distance;\n        if (!CollisionUtils.intersectsRayAndTriangleRD(ray, vertex1, vertex2, vertex3, distance)) {\n            Vector3.ZERO.cloneTo(out);\n            return false;\n        }\n        Vector3.scale(ray.direction, distance, _tempV30);\n        Vector3.add(ray.origin, _tempV30, out);\n        return true;\n    }\n    static intersectsRayAndPoint(ray, point) {\n        Vector3.subtract(ray.origin, point, _tempV30);\n        var b = Vector3.dot(_tempV30, ray.direction);\n        var c = Vector3.dot(_tempV30, _tempV30) - MathUtils3D.zeroTolerance;\n        if (c > 0 && b > 0)\n            return false;\n        var discriminant = b * b - c;\n        if (discriminant < 0)\n            return false;\n        return true;\n    }\n    static intersectsRayAndRay(ray1, ray2, out) {\n        var ray1o = ray1.origin;\n        var ray1oeX = ray1o.x;\n        var ray1oeY = ray1o.y;\n        var ray1oeZ = ray1o.z;\n        var ray1d = ray1.direction;\n        var ray1deX = ray1d.x;\n        var ray1deY = ray1d.y;\n        var ray1deZ = ray1d.z;\n        var ray2o = ray2.origin;\n        var ray2oeX = ray2o.x;\n        var ray2oeY = ray2o.y;\n        var ray2oeZ = ray2o.z;\n        var ray2d = ray2.direction;\n        var ray2deX = ray2d.x;\n        var ray2deY = ray2d.y;\n        var ray2deZ = ray2d.z;\n        Vector3.cross(ray1d, ray2d, _tempV30);\n        var tempV3 = _tempV30;\n        var denominator = Vector3.scalarLength(_tempV30);\n        if (MathUtils3D.isZero(denominator)) {\n            if (MathUtils3D.nearEqual(ray2oeX, ray1oeX) && MathUtils3D.nearEqual(ray2oeY, ray1oeY) && MathUtils3D.nearEqual(ray2oeZ, ray1oeZ)) {\n                Vector3.ZERO.cloneTo(out);\n                return true;\n            }\n        }\n        denominator = denominator * denominator;\n        var m11 = ray2oeX - ray1oeX;\n        var m12 = ray2oeY - ray1oeY;\n        var m13 = ray2oeZ - ray1oeZ;\n        var m21 = ray2deX;\n        var m22 = ray2deY;\n        var m23 = ray2deZ;\n        var m31 = tempV3.x;\n        var m32 = tempV3.y;\n        var m33 = tempV3.z;\n        var dets = m11 * m22 * m33 + m12 * m23 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 - m13 * m22 * m31;\n        m21 = ray1deX;\n        m22 = ray1deY;\n        m23 = ray1deZ;\n        var s = dets / denominator;\n        Vector3.scale(ray1d, s, _tempV30);\n        Vector3.scale(ray2d, s, _tempV31);\n        Vector3.add(ray1o, _tempV30, _tempV32);\n        Vector3.add(ray2o, _tempV31, _tempV33);\n        var point1e = _tempV32;\n        var point2e = _tempV33;\n        if (!MathUtils3D.nearEqual(point2e.x, point1e.x) || !MathUtils3D.nearEqual(point2e.y, point1e.y) || !MathUtils3D.nearEqual(point2e.z, point1e.z)) {\n            Vector3.ZERO.cloneTo(out);\n            return false;\n        }\n        out = _tempV32;\n        return true;\n    }\n    static intersectsPlaneAndTriangle(plane, vertex1, vertex2, vertex3) {\n        var test1 = CollisionUtils.intersectsPlaneAndPoint(plane, vertex1);\n        var test2 = CollisionUtils.intersectsPlaneAndPoint(plane, vertex2);\n        var test3 = CollisionUtils.intersectsPlaneAndPoint(plane, vertex3);\n        if (test1 == Plane.PlaneIntersectionType_Front && test2 == Plane.PlaneIntersectionType_Front && test3 == Plane.PlaneIntersectionType_Front)\n            return Plane.PlaneIntersectionType_Front;\n        if (test1 == Plane.PlaneIntersectionType_Back && test2 == Plane.PlaneIntersectionType_Back && test3 == Plane.PlaneIntersectionType_Back)\n            return Plane.PlaneIntersectionType_Back;\n        return Plane.PlaneIntersectionType_Intersecting;\n    }\n    static intersectsRayAndPlaneRD(ray, plane) {\n        var planeNor = plane.normal;\n        var direction = Vector3.dot(planeNor, ray.direction);\n        if (Math.abs(direction) < MathUtils3D.zeroTolerance)\n            return -1;\n        var position = Vector3.dot(planeNor, ray.origin);\n        var distance = (-plane.distance - position) / direction;\n        if (distance < 0) {\n            if (distance < -MathUtils3D.zeroTolerance)\n                return -1;\n            distance = 0;\n        }\n        return distance;\n    }\n    static intersectsRayAndPlaneRP(ray, plane, out) {\n        var distance = CollisionUtils.intersectsRayAndPlaneRD(ray, plane);\n        if (distance == -1) {\n            out.setValue(0, 0, 0);\n            return false;\n        }\n        var scaDis = _tempV30;\n        Vector3.scale(ray.direction, distance, scaDis);\n        Vector3.add(ray.origin, scaDis, out);\n        return true;\n    }\n    static intersectsRayAndBoxRD(ray, box) {\n        var rayoe = ray.origin;\n        var rayoeX = rayoe.x;\n        var rayoeY = rayoe.y;\n        var rayoeZ = rayoe.z;\n        var rayde = ray.direction;\n        var raydeX = rayde.x;\n        var raydeY = rayde.y;\n        var raydeZ = rayde.z;\n        var boxMine = box.min;\n        var boxMineX = boxMine.x;\n        var boxMineY = boxMine.y;\n        var boxMineZ = boxMine.z;\n        var boxMaxe = box.max;\n        var boxMaxeX = boxMaxe.x;\n        var boxMaxeY = boxMaxe.y;\n        var boxMaxeZ = boxMaxe.z;\n        var out = 0;\n        var tmax = MathUtils3D.MaxValue;\n        if (MathUtils3D.isZero(raydeX)) {\n            if (rayoeX < boxMineX || rayoeX > boxMaxeX) {\n                return -1;\n            }\n        }\n        else {\n            var inverse = 1 / raydeX;\n            var t1 = (boxMineX - rayoeX) * inverse;\n            var t2 = (boxMaxeX - rayoeX) * inverse;\n            if (t1 > t2) {\n                var temp = t1;\n                t1 = t2;\n                t2 = temp;\n            }\n            out = Math.max(t1, out);\n            tmax = Math.min(t2, tmax);\n            if (out > tmax) {\n                return -1;\n            }\n        }\n        if (MathUtils3D.isZero(raydeY)) {\n            if (rayoeY < boxMineY || rayoeY > boxMaxeY) {\n                return -1;\n            }\n        }\n        else {\n            var inverse1 = 1 / raydeY;\n            var t3 = (boxMineY - rayoeY) * inverse1;\n            var t4 = (boxMaxeY - rayoeY) * inverse1;\n            if (t3 > t4) {\n                var temp1 = t3;\n                t3 = t4;\n                t4 = temp1;\n            }\n            out = Math.max(t3, out);\n            tmax = Math.min(t4, tmax);\n            if (out > tmax) {\n                return -1;\n            }\n        }\n        if (MathUtils3D.isZero(raydeZ)) {\n            if (rayoeZ < boxMineZ || rayoeZ > boxMaxeZ) {\n                return -1;\n            }\n        }\n        else {\n            var inverse2 = 1 / raydeZ;\n            var t5 = (boxMineZ - rayoeZ) * inverse2;\n            var t6 = (boxMaxeZ - rayoeZ) * inverse2;\n            if (t5 > t6) {\n                var temp2 = t5;\n                t5 = t6;\n                t6 = temp2;\n            }\n            out = Math.max(t5, out);\n            tmax = Math.min(t6, tmax);\n            if (out > tmax) {\n                return -1;\n            }\n        }\n        return out;\n    }\n    static intersectsRayAndBoxRP(ray, box, out) {\n        var distance = CollisionUtils.intersectsRayAndBoxRD(ray, box);\n        if (distance === -1) {\n            Vector3.ZERO.cloneTo(out);\n            return distance;\n        }\n        Vector3.scale(ray.direction, distance, _tempV30);\n        Vector3.add(ray.origin, _tempV30, _tempV31);\n        _tempV31.cloneTo(out);\n        return distance;\n    }\n    static intersectsRayAndSphereRD(ray, sphere) {\n        var sphereR = sphere.radius;\n        Vector3.subtract(ray.origin, sphere.center, _tempV30);\n        var b = Vector3.dot(_tempV30, ray.direction);\n        var c = Vector3.dot(_tempV30, _tempV30) - (sphereR * sphereR);\n        if (c > 0 && b > 0) {\n            return -1;\n        }\n        var discriminant = b * b - c;\n        if (discriminant < 0) {\n            return -1;\n        }\n        var distance = -b - Math.sqrt(discriminant);\n        if (distance < 0)\n            distance = 0;\n        return distance;\n    }\n    static intersectsRayAndSphereRP(ray, sphere, out) {\n        var distance = CollisionUtils.intersectsRayAndSphereRD(ray, sphere);\n        if (distance === -1) {\n            Vector3.ZERO.cloneTo(out);\n            return distance;\n        }\n        Vector3.scale(ray.direction, distance, _tempV30);\n        Vector3.add(ray.origin, _tempV30, _tempV31);\n        _tempV31.cloneTo(out);\n        return distance;\n    }\n    static intersectsSphereAndTriangle(sphere, vertex1, vertex2, vertex3) {\n        var sphereC = sphere.center;\n        var sphereR = sphere.radius;\n        CollisionUtils.closestPointPointTriangle(sphereC, vertex1, vertex2, vertex3, _tempV30);\n        Vector3.subtract(_tempV30, sphereC, _tempV31);\n        var dot = Vector3.dot(_tempV31, _tempV31);\n        return dot <= sphereR * sphereR;\n    }\n    static intersectsPlaneAndPoint(plane, point) {\n        var distance = Vector3.dot(plane.normal, point) + plane.distance;\n        if (distance > 0)\n            return Plane.PlaneIntersectionType_Front;\n        if (distance < 0)\n            return Plane.PlaneIntersectionType_Back;\n        return Plane.PlaneIntersectionType_Intersecting;\n    }\n    static intersectsPlaneAndPlane(plane1, plane2) {\n        Vector3.cross(plane1.normal, plane2.normal, _tempV30);\n        var denominator = Vector3.dot(_tempV30, _tempV30);\n        if (MathUtils3D.isZero(denominator))\n            return false;\n        return true;\n    }\n    static intersectsPlaneAndPlaneRL(plane1, plane2, line) {\n        var plane1nor = plane1.normal;\n        var plane2nor = plane2.normal;\n        Vector3.cross(plane1nor, plane2nor, _tempV34);\n        var denominator = Vector3.dot(_tempV34, _tempV34);\n        if (MathUtils3D.isZero(denominator))\n            return false;\n        Vector3.scale(plane2nor, plane1.distance, _tempV30);\n        Vector3.scale(plane1nor, plane2.distance, _tempV31);\n        Vector3.subtract(_tempV30, _tempV31, _tempV32);\n        Vector3.cross(_tempV32, _tempV34, _tempV33);\n        Vector3.normalize(_tempV34, _tempV34);\n        line = new Ray(_tempV33, _tempV34);\n        return true;\n    }\n    static intersectsPlaneAndBox(plane, box) {\n        var planeD = plane.distance;\n        var planeNor = plane.normal;\n        var planeNoreX = planeNor.x;\n        var planeNoreY = planeNor.y;\n        var planeNoreZ = planeNor.z;\n        var boxMine = box.min;\n        var boxMineX = boxMine.x;\n        var boxMineY = boxMine.y;\n        var boxMineZ = boxMine.z;\n        var boxMaxe = box.max;\n        var boxMaxeX = boxMaxe.x;\n        var boxMaxeY = boxMaxe.y;\n        var boxMaxeZ = boxMaxe.z;\n        _tempV30.x = (planeNoreX > 0) ? boxMineX : boxMaxeX;\n        _tempV30.y = (planeNoreY > 0) ? boxMineY : boxMaxeY;\n        _tempV30.z = (planeNoreZ > 0) ? boxMineZ : boxMaxeZ;\n        _tempV31.x = (planeNoreX > 0) ? boxMaxeX : boxMineX;\n        _tempV31.y = (planeNoreY > 0) ? boxMaxeY : boxMineY;\n        _tempV31.z = (planeNoreZ > 0) ? boxMaxeZ : boxMineZ;\n        var distance = Vector3.dot(planeNor, _tempV30);\n        if (distance + planeD > 0)\n            return Plane.PlaneIntersectionType_Front;\n        distance = Vector3.dot(planeNor, _tempV31);\n        if (distance + planeD < 0)\n            return Plane.PlaneIntersectionType_Back;\n        return Plane.PlaneIntersectionType_Intersecting;\n    }\n    static intersectsPlaneAndSphere(plane, sphere) {\n        var sphereR = sphere.radius;\n        var distance = Vector3.dot(plane.normal, sphere.center) + plane.distance;\n        if (distance > sphereR)\n            return Plane.PlaneIntersectionType_Front;\n        if (distance < -sphereR)\n            return Plane.PlaneIntersectionType_Back;\n        return Plane.PlaneIntersectionType_Intersecting;\n    }\n    static intersectsBoxAndBox(box1, box2) {\n        var box1Mine = box1.min;\n        var box1Maxe = box1.max;\n        var box2Mine = box2.min;\n        var box2Maxe = box2.max;\n        if (box1Mine.x > box2Maxe.x || box2Mine.x > box1Maxe.x)\n            return false;\n        if (box1Mine.y > box2Maxe.y || box2Mine.y > box1Maxe.y)\n            return false;\n        if (box1Mine.z > box2Maxe.z || box2Mine.z > box1Maxe.z)\n            return false;\n        return true;\n    }\n    static intersectsBoxAndSphere(box, sphere) {\n        var center = sphere.center;\n        var radius = sphere.radius;\n        var nearest = _tempV30;\n        Vector3.Clamp(center, box.min, box.max, nearest);\n        var distance = Vector3.distanceSquared(center, nearest);\n        return distance <= radius * radius;\n    }\n    static intersectsSphereAndSphere(sphere1, sphere2) {\n        var radiisum = sphere1.radius + sphere2.radius;\n        return Vector3.distanceSquared(sphere1.center, sphere2.center) <= radiisum * radiisum;\n    }\n    static boxContainsPoint(box, point) {\n        var boxMine = box.min;\n        var boxMaxe = box.max;\n        if (boxMine.x <= point.x && boxMaxe.x >= point.x && boxMine.y <= point.y && boxMaxe.y >= point.y && boxMine.z <= point.z && boxMaxe.z >= point.z)\n            return ContainmentType.Contains;\n        return ContainmentType.Disjoint;\n    }\n    static boxContainsBox(box1, box2) {\n        var box1Mine = box1.min;\n        var box1MineX = box1Mine.x;\n        var box1MineY = box1Mine.y;\n        var box1MineZ = box1Mine.z;\n        var box1Maxe = box1.max;\n        var box1MaxeX = box1Maxe.x;\n        var box1MaxeY = box1Maxe.y;\n        var box1MaxeZ = box1Maxe.z;\n        var box2Mine = box2.min;\n        var box2MineX = box2Mine.x;\n        var box2MineY = box2Mine.y;\n        var box2MineZ = box2Mine.z;\n        var box2Maxe = box2.max;\n        var box2MaxeX = box2Maxe.x;\n        var box2MaxeY = box2Maxe.y;\n        var box2MaxeZ = box2Maxe.z;\n        if (box1MaxeX < box2MineX || box1MineX > box2MaxeX)\n            return ContainmentType.Disjoint;\n        if (box1MaxeY < box2MineY || box1MineY > box2MaxeY)\n            return ContainmentType.Disjoint;\n        if (box1MaxeZ < box2MineZ || box1MineZ > box2MaxeZ)\n            return ContainmentType.Disjoint;\n        if (box1MineX <= box2MineX && box2MaxeX <= box1MaxeX && box1MineY <= box2MineY && box2MaxeY <= box1MaxeY && box1MineZ <= box2MineZ && box2MaxeZ <= box1MaxeZ) {\n            return ContainmentType.Contains;\n        }\n        return ContainmentType.Intersects;\n    }\n    static boxContainsSphere(box, sphere) {\n        var boxMin = box.min;\n        var boxMineX = boxMin.x;\n        var boxMineY = boxMin.y;\n        var boxMineZ = boxMin.z;\n        var boxMax = box.max;\n        var boxMaxeX = boxMax.x;\n        var boxMaxeY = boxMax.y;\n        var boxMaxeZ = boxMax.z;\n        var sphereC = sphere.center;\n        var sphereCeX = sphereC.x;\n        var sphereCeY = sphereC.y;\n        var sphereCeZ = sphereC.z;\n        var sphereR = sphere.radius;\n        Vector3.Clamp(sphereC, boxMin, boxMax, _tempV30);\n        var distance = Vector3.distanceSquared(sphereC, _tempV30);\n        if (distance > sphereR * sphereR)\n            return ContainmentType.Disjoint;\n        if ((((boxMineX + sphereR <= sphereCeX) && (sphereCeX <= boxMaxeX - sphereR)) && ((boxMaxeX - boxMineX > sphereR) &&\n            (boxMineY + sphereR <= sphereCeY))) && (((sphereCeY <= boxMaxeY - sphereR) && (boxMaxeY - boxMineY > sphereR)) &&\n            (((boxMineZ + sphereR <= sphereCeZ) && (sphereCeZ <= boxMaxeZ - sphereR)) && (boxMaxeZ - boxMineZ > sphereR))))\n            return ContainmentType.Contains;\n        return ContainmentType.Intersects;\n    }\n    static sphereContainsPoint(sphere, point) {\n        if (Vector3.distanceSquared(point, sphere.center) <= sphere.radius * sphere.radius)\n            return ContainmentType.Contains;\n        return ContainmentType.Disjoint;\n    }\n    static sphereContainsTriangle(sphere, vertex1, vertex2, vertex3) {\n        var test1 = CollisionUtils.sphereContainsPoint(sphere, vertex1);\n        var test2 = CollisionUtils.sphereContainsPoint(sphere, vertex2);\n        var test3 = CollisionUtils.sphereContainsPoint(sphere, vertex3);\n        if (test1 == ContainmentType.Contains && test2 == ContainmentType.Contains && test3 == ContainmentType.Contains)\n            return ContainmentType.Contains;\n        if (CollisionUtils.intersectsSphereAndTriangle(sphere, vertex1, vertex2, vertex3))\n            return ContainmentType.Intersects;\n        return ContainmentType.Disjoint;\n    }\n    static sphereContainsBox(sphere, box) {\n        var sphereC = sphere.center;\n        var sphereCeX = sphereC.x;\n        var sphereCeY = sphereC.y;\n        var sphereCeZ = sphereC.z;\n        var sphereR = sphere.radius;\n        var boxMin = box.min;\n        var boxMineX = boxMin.x;\n        var boxMineY = boxMin.y;\n        var boxMineZ = boxMin.z;\n        var boxMax = box.max;\n        var boxMaxeX = boxMax.x;\n        var boxMaxeY = boxMax.y;\n        var boxMaxeZ = boxMax.z;\n        var _tempV30e = _tempV30;\n        var _tempV30eX = _tempV30e.x;\n        var _tempV30eY = _tempV30e.y;\n        var _tempV30eZ = _tempV30e.z;\n        if (!CollisionUtils.intersectsBoxAndSphere(box, sphere))\n            return ContainmentType.Disjoint;\n        var radiusSquared = sphereR * sphereR;\n        _tempV30eX = sphereCeX - boxMineX;\n        _tempV30eY = sphereCeY - boxMaxeY;\n        _tempV30eZ = sphereCeZ - boxMaxeZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        _tempV30eX = sphereCeX - boxMaxeX;\n        _tempV30eY = sphereCeY - boxMaxeY;\n        _tempV30eZ = sphereCeZ - boxMaxeZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        _tempV30eX = sphereCeX - boxMaxeX;\n        _tempV30eY = sphereCeY - boxMineY;\n        _tempV30eZ = sphereCeZ - boxMaxeZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        _tempV30eX = sphereCeX - boxMineX;\n        _tempV30eY = sphereCeY - boxMineY;\n        _tempV30eZ = sphereCeZ - boxMaxeZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        _tempV30eX = sphereCeX - boxMineX;\n        _tempV30eY = sphereCeY - boxMaxeY;\n        _tempV30eZ = sphereCeZ - boxMineZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        _tempV30eX = sphereCeX - boxMaxeX;\n        _tempV30eY = sphereCeY - boxMaxeY;\n        _tempV30eZ = sphereCeZ - boxMineZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        _tempV30eX = sphereCeX - boxMaxeX;\n        _tempV30eY = sphereCeY - boxMineY;\n        _tempV30eZ = sphereCeZ - boxMineZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        _tempV30eX = sphereCeX - boxMineX;\n        _tempV30eY = sphereCeY - boxMineY;\n        _tempV30eZ = sphereCeZ - boxMineZ;\n        if (Vector3.scalarLengthSquared(_tempV30) > radiusSquared)\n            return ContainmentType.Intersects;\n        return ContainmentType.Contains;\n    }\n    static sphereContainsSphere(sphere1, sphere2) {\n        var sphere1R = sphere1.radius;\n        var sphere2R = sphere2.radius;\n        var distance = Vector3.distance(sphere1.center, sphere2.center);\n        if (sphere1R + sphere2R < distance)\n            return ContainmentType.Disjoint;\n        if (sphere1R - sphere2R < distance)\n            return ContainmentType.Intersects;\n        return ContainmentType.Contains;\n    }\n    static closestPointPointTriangle(point, vertex1, vertex2, vertex3, out) {\n        Vector3.subtract(vertex2, vertex1, _tempV30);\n        Vector3.subtract(vertex3, vertex1, _tempV31);\n        Vector3.subtract(point, vertex1, _tempV32);\n        Vector3.subtract(point, vertex2, _tempV33);\n        Vector3.subtract(point, vertex3, _tempV34);\n        var d1 = Vector3.dot(_tempV30, _tempV32);\n        var d2 = Vector3.dot(_tempV31, _tempV32);\n        var d3 = Vector3.dot(_tempV30, _tempV33);\n        var d4 = Vector3.dot(_tempV31, _tempV33);\n        var d5 = Vector3.dot(_tempV30, _tempV34);\n        var d6 = Vector3.dot(_tempV31, _tempV34);\n        if (d1 <= 0 && d2 <= 0) {\n            vertex1.cloneTo(out);\n            return;\n        }\n        if (d3 >= 0 && d4 <= d3) {\n            vertex2.cloneTo(out);\n            return;\n        }\n        var vc = d1 * d4 - d3 * d2;\n        if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n            var v = d1 / (d1 - d3);\n            Vector3.scale(_tempV30, v, out);\n            Vector3.add(vertex1, out, out);\n            return;\n        }\n        if (d6 >= 0 && d5 <= d6) {\n            vertex3.cloneTo(out);\n            return;\n        }\n        var vb = d5 * d2 - d1 * d6;\n        if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n            var w = d2 / (d2 - d6);\n            Vector3.scale(_tempV31, w, out);\n            Vector3.add(vertex1, out, out);\n            return;\n        }\n        var va = d3 * d6 - d5 * d4;\n        if (va <= 0 && (d4 - d3) >= 0 && (d5 - d6) >= 0) {\n            var w3 = (d4 - d3) / ((d4 - d3) + (d5 - d6));\n            Vector3.subtract(vertex3, vertex2, out);\n            Vector3.scale(out, w3, out);\n            Vector3.add(vertex2, out, out);\n            return;\n        }\n        var denom = 1 / (va + vb + vc);\n        var v2 = vb * denom;\n        var w2 = vc * denom;\n        Vector3.scale(_tempV30, v2, _tempV35);\n        Vector3.scale(_tempV31, w2, _tempV36);\n        Vector3.add(_tempV35, _tempV36, out);\n        Vector3.add(vertex1, out, out);\n    }\n    static closestPointPlanePoint(plane, point, out) {\n        var planeN = plane.normal;\n        var t = Vector3.dot(planeN, point) - plane.distance;\n        Vector3.scale(planeN, t, _tempV30);\n        Vector3.subtract(point, _tempV30, out);\n    }\n    static closestPointBoxPoint(box, point, out) {\n        Vector3.max(point, box.min, _tempV30);\n        Vector3.min(_tempV30, box.max, out);\n    }\n    static closestPointSpherePoint(sphere, point, out) {\n        var sphereC = sphere.center;\n        Vector3.subtract(point, sphereC, out);\n        Vector3.normalize(out, out);\n        Vector3.scale(out, sphere.radius, out);\n        Vector3.add(out, sphereC, out);\n    }\n    static closestPointSphereSphere(sphere1, sphere2, out) {\n        var sphere1C = sphere1.center;\n        Vector3.subtract(sphere2.center, sphere1C, out);\n        Vector3.normalize(out, out);\n        Vector3.scale(out, sphere1.radius, out);\n        Vector3.add(out, sphere1C, out);\n    }\n}\nconst _tempV30 = new Vector3();\nconst _tempV31 = new Vector3();\nconst _tempV32 = new Vector3();\nconst _tempV33 = new Vector3();\nconst _tempV34 = new Vector3();\nconst _tempV35 = new Vector3();\nconst _tempV36 = new Vector3();\n","import { Plane } from \"./Plane\";\nimport { CollisionUtils } from \"./CollisionUtils\";\nimport { ContainmentType } from \"./ContainmentType\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../maths/Vector3\";\nexport var FrustumCorner;\n(function (FrustumCorner) {\n    FrustumCorner[FrustumCorner[\"FarBottomLeft\"] = 0] = \"FarBottomLeft\";\n    FrustumCorner[FrustumCorner[\"FarTopLeft\"] = 1] = \"FarTopLeft\";\n    FrustumCorner[FrustumCorner[\"FarTopRight\"] = 2] = \"FarTopRight\";\n    FrustumCorner[FrustumCorner[\"FarBottomRight\"] = 3] = \"FarBottomRight\";\n    FrustumCorner[FrustumCorner[\"nearBottomLeft\"] = 4] = \"nearBottomLeft\";\n    FrustumCorner[FrustumCorner[\"nearTopLeft\"] = 5] = \"nearTopLeft\";\n    FrustumCorner[FrustumCorner[\"nearTopRight\"] = 6] = \"nearTopRight\";\n    FrustumCorner[FrustumCorner[\"nearBottomRight\"] = 7] = \"nearBottomRight\";\n    FrustumCorner[FrustumCorner[\"unknown\"] = 8] = \"unknown\";\n})(FrustumCorner || (FrustumCorner = {}));\nexport class BoundFrustum {\n    static getPlanesFromMatrix(m, np, fp, lp, rp, tp, bp) {\n        var matrixE = m.elements;\n        var m11 = matrixE[0];\n        var m12 = matrixE[1];\n        var m13 = matrixE[2];\n        var m14 = matrixE[3];\n        var m21 = matrixE[4];\n        var m22 = matrixE[5];\n        var m23 = matrixE[6];\n        var m24 = matrixE[7];\n        var m31 = matrixE[8];\n        var m32 = matrixE[9];\n        var m33 = matrixE[10];\n        var m34 = matrixE[11];\n        var m41 = matrixE[12];\n        var m42 = matrixE[13];\n        var m43 = matrixE[14];\n        var m44 = matrixE[15];\n        var nearNorE = np.normal;\n        nearNorE.x = m13;\n        nearNorE.y = m23;\n        nearNorE.z = m33;\n        np.distance = m43;\n        np.normal = nearNorE;\n        np.normalize();\n        var farNorE = fp.normal;\n        farNorE.x = m14 - m13;\n        farNorE.y = m24 - m23;\n        farNorE.z = m34 - m33;\n        fp.distance = m44 - m43;\n        fp.normal = farNorE;\n        fp.normalize();\n        var leftNorE = lp.normal;\n        leftNorE.x = m14 + m11;\n        leftNorE.y = m24 + m21;\n        leftNorE.z = m34 + m31;\n        lp.distance = m44 + m41;\n        lp.normal = leftNorE;\n        lp.normalize();\n        var rightNorE = rp.normal;\n        rightNorE.x = m14 - m11;\n        rightNorE.y = m24 - m21;\n        rightNorE.z = m34 - m31;\n        rp.distance = m44 - m41;\n        rp.normal = rightNorE;\n        rp.normalize();\n        var topNorE = tp.normal;\n        topNorE.x = m14 - m12;\n        topNorE.y = m24 - m22;\n        topNorE.z = m34 - m32;\n        tp.distance = m44 - m42;\n        tp.normal = topNorE;\n        tp.normalize();\n        var bottomNorE = bp.normal;\n        bottomNorE.x = m14 + m12;\n        bottomNorE.y = m24 + m22;\n        bottomNorE.z = m34 + m32;\n        bp.distance = m44 + m42;\n        bp.normal = bottomNorE;\n        bp.normalize();\n    }\n    constructor(matrix) {\n        this._matrix = matrix;\n        this.initBoundingPlane();\n    }\n    initBoundingPlane() {\n        this._near = new Plane();\n        this._far = new Plane();\n        this._left = new Plane();\n        this._right = new Plane();\n        this._top = new Plane();\n        this._bottom = new Plane();\n        BoundFrustum.getPlanesFromMatrix(this._matrix, this._near, this._far, this._left, this._right, this._top, this._bottom);\n    }\n    get matrix() {\n        return this._matrix;\n    }\n    set matrix(matrix) {\n        matrix.cloneTo(this._matrix);\n        BoundFrustum.getPlanesFromMatrix(this._matrix, this._near, this._far, this._left, this._right, this._top, this._bottom);\n    }\n    get near() {\n        return this._near;\n    }\n    get far() {\n        return this._far;\n    }\n    get left() {\n        return this._left;\n    }\n    get right() {\n        return this._right;\n    }\n    get top() {\n        return this._top;\n    }\n    get bottom() {\n        return this._bottom;\n    }\n    equalsBoundFrustum(other) {\n        return this._matrix.equalsOtherMatrix(other.matrix);\n    }\n    equalsObj(obj) {\n        if (obj instanceof BoundFrustum) {\n            var bf = obj;\n            return this.equalsBoundFrustum(bf);\n        }\n        return false;\n    }\n    getPlane(index) {\n        switch (index) {\n            case 0:\n                return this._near;\n            case 1:\n                return this._far;\n            case 2:\n                return this._left;\n            case 3:\n                return this._right;\n            case 4:\n                return this._top;\n            case 5:\n                return this._bottom;\n            default:\n                return null;\n        }\n    }\n    static get3PlaneInterPoint(p1, p2, p3, out) {\n        var p1Nor = p1.normal;\n        var p2Nor = p2.normal;\n        var p3Nor = p3.normal;\n        Vector3.cross(p2Nor, p3Nor, _tempV30);\n        Vector3.cross(p3Nor, p1Nor, _tempV31);\n        Vector3.cross(p1Nor, p2Nor, _tempV32);\n        var a = Vector3.dot(p1Nor, _tempV30);\n        var b = Vector3.dot(p2Nor, _tempV31);\n        var c = Vector3.dot(p3Nor, _tempV32);\n        Vector3.scale(_tempV30, -p1.distance / a, _tempV33);\n        Vector3.scale(_tempV31, -p2.distance / b, _tempV34);\n        Vector3.scale(_tempV32, -p3.distance / c, _tempV35);\n        Vector3.add(_tempV33, _tempV34, _tempV36);\n        Vector3.add(_tempV35, _tempV36, out);\n    }\n    getCorners(corners) {\n        BoundFrustum.get3PlaneInterPoint(this._near, this._bottom, this._right, corners[FrustumCorner.nearBottomRight]);\n        BoundFrustum.get3PlaneInterPoint(this._near, this._top, this._right, corners[FrustumCorner.nearTopRight]);\n        BoundFrustum.get3PlaneInterPoint(this._near, this._top, this._left, corners[FrustumCorner.nearTopLeft]);\n        BoundFrustum.get3PlaneInterPoint(this._near, this._bottom, this._left, corners[FrustumCorner.nearBottomLeft]);\n        BoundFrustum.get3PlaneInterPoint(this._far, this._bottom, this._right, corners[FrustumCorner.FarBottomRight]);\n        BoundFrustum.get3PlaneInterPoint(this._far, this._top, this._right, corners[FrustumCorner.FarTopRight]);\n        BoundFrustum.get3PlaneInterPoint(this._far, this._top, this._left, corners[FrustumCorner.FarTopLeft]);\n        BoundFrustum.get3PlaneInterPoint(this._far, this._bottom, this._left, corners[FrustumCorner.FarBottomLeft]);\n    }\n    containsPoint(point) {\n        var result = Plane.PlaneIntersectionType_Front;\n        var planeResult = Plane.PlaneIntersectionType_Front;\n        for (var i = 0; i < 6; i++) {\n            switch (i) {\n                case 0:\n                    planeResult = CollisionUtils.intersectsPlaneAndPoint(this._near, point);\n                    break;\n                case 1:\n                    planeResult = CollisionUtils.intersectsPlaneAndPoint(this._far, point);\n                    break;\n                case 2:\n                    planeResult = CollisionUtils.intersectsPlaneAndPoint(this._left, point);\n                    break;\n                case 3:\n                    planeResult = CollisionUtils.intersectsPlaneAndPoint(this._right, point);\n                    break;\n                case 4:\n                    planeResult = CollisionUtils.intersectsPlaneAndPoint(this._top, point);\n                    break;\n                case 5:\n                    planeResult = CollisionUtils.intersectsPlaneAndPoint(this._bottom, point);\n                    break;\n            }\n            switch (planeResult) {\n                case Plane.PlaneIntersectionType_Back:\n                    return ContainmentType.Disjoint;\n                case Plane.PlaneIntersectionType_Intersecting:\n                    result = Plane.PlaneIntersectionType_Intersecting;\n                    break;\n            }\n        }\n        switch (result) {\n            case Plane.PlaneIntersectionType_Intersecting:\n                return ContainmentType.Intersects;\n            default:\n                return ContainmentType.Contains;\n        }\n    }\n    intersects(box) {\n        var min = box.min;\n        var max = box.max;\n        var minX = min.x;\n        var minY = min.y;\n        var minZ = min.z;\n        var maxX = max.x;\n        var maxY = max.y;\n        var maxZ = max.z;\n        var nearNormal = this._near.normal;\n        if (this._near.distance + (nearNormal.x * (nearNormal.x < 0 ? minX : maxX)) + (nearNormal.y * (nearNormal.y < 0 ? minY : maxY)) + (nearNormal.z * (nearNormal.z < 0 ? minZ : maxZ)) < 0)\n            return false;\n        var leftNormal = this._left.normal;\n        if (this._left.distance + (leftNormal.x * (leftNormal.x < 0 ? minX : maxX)) + (leftNormal.y * (leftNormal.y < 0 ? minY : maxY)) + (leftNormal.z * (leftNormal.z < 0 ? minZ : maxZ)) < 0)\n            return false;\n        var rightNormal = this._right.normal;\n        if (this._right.distance + (rightNormal.x * (rightNormal.x < 0 ? minX : maxX)) + (rightNormal.y * (rightNormal.y < 0 ? minY : maxY)) + (rightNormal.z * (rightNormal.z < 0 ? minZ : maxZ)) < 0)\n            return false;\n        var bottomNormal = this._bottom.normal;\n        if (this._bottom.distance + (bottomNormal.x * (bottomNormal.x < 0 ? minX : maxX)) + (bottomNormal.y * (bottomNormal.y < 0 ? minY : maxY)) + (bottomNormal.z * (bottomNormal.z < 0 ? minZ : maxZ)) < 0)\n            return false;\n        var topNormal = this._top.normal;\n        if (this._top.distance + (topNormal.x * (topNormal.x < 0 ? minX : maxX)) + (topNormal.y * (topNormal.y < 0 ? minY : maxY)) + (topNormal.z * (topNormal.z < 0 ? minZ : maxZ)) < 0)\n            return false;\n        var farNormal = this._far.normal;\n        if (this._far.distance + (farNormal.x * (farNormal.x < 0 ? minX : maxX)) + (farNormal.y * (farNormal.y < 0 ? minY : maxY)) + (farNormal.z * (farNormal.z < 0 ? minZ : maxZ)) < 0)\n            return false;\n        return true;\n    }\n    containsBoundBox(box) {\n        var p = _tempV30, n = _tempV31;\n        var boxMin = box.min;\n        var boxMax = box.max;\n        var result = ContainmentType.Contains;\n        for (var i = 0; i < 6; i++) {\n            var plane = this.getPlane(i);\n            var planeNor = plane.normal;\n            if (planeNor.x >= 0) {\n                p.x = boxMax.x;\n                n.x = boxMin.x;\n            }\n            else {\n                p.x = boxMin.x;\n                n.x = boxMax.x;\n            }\n            if (planeNor.y >= 0) {\n                p.y = boxMax.y;\n                n.y = boxMin.y;\n            }\n            else {\n                p.y = boxMin.y;\n                n.y = boxMax.y;\n            }\n            if (planeNor.z >= 0) {\n                p.z = boxMax.z;\n                n.z = boxMin.z;\n            }\n            else {\n                p.z = boxMin.z;\n                n.z = boxMax.z;\n            }\n            if (CollisionUtils.intersectsPlaneAndPoint(plane, p) === Plane.PlaneIntersectionType_Back)\n                return ContainmentType.Disjoint;\n            if (CollisionUtils.intersectsPlaneAndPoint(plane, n) === Plane.PlaneIntersectionType_Back)\n                result = ContainmentType.Intersects;\n        }\n        return result;\n    }\n    containsBoundSphere(sphere) {\n        var result = Plane.PlaneIntersectionType_Front;\n        var planeResult = Plane.PlaneIntersectionType_Front;\n        for (var i = 0; i < 6; i++) {\n            switch (i) {\n                case 0:\n                    planeResult = CollisionUtils.intersectsPlaneAndSphere(this._near, sphere);\n                    break;\n                case 1:\n                    planeResult = CollisionUtils.intersectsPlaneAndSphere(this._far, sphere);\n                    break;\n                case 2:\n                    planeResult = CollisionUtils.intersectsPlaneAndSphere(this._left, sphere);\n                    break;\n                case 3:\n                    planeResult = CollisionUtils.intersectsPlaneAndSphere(this._right, sphere);\n                    break;\n                case 4:\n                    planeResult = CollisionUtils.intersectsPlaneAndSphere(this._top, sphere);\n                    break;\n                case 5:\n                    planeResult = CollisionUtils.intersectsPlaneAndSphere(this._bottom, sphere);\n                    break;\n            }\n            switch (planeResult) {\n                case Plane.PlaneIntersectionType_Back:\n                    return ContainmentType.Disjoint;\n                case Plane.PlaneIntersectionType_Intersecting:\n                    result = Plane.PlaneIntersectionType_Intersecting;\n                    break;\n            }\n        }\n        switch (result) {\n            case Plane.PlaneIntersectionType_Intersecting:\n                return ContainmentType.Intersects;\n            default:\n                return ContainmentType.Contains;\n        }\n    }\n    cloneTo(dest) {\n        dest.matrix = this.matrix;\n    }\n    clone() {\n        let dest = new BoundFrustum(new Matrix4x4);\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nconst _tempV30 = new Vector3();\nconst _tempV31 = new Vector3();\nconst _tempV32 = new Vector3();\nconst _tempV33 = new Vector3();\nconst _tempV34 = new Vector3();\nconst _tempV35 = new Vector3();\nconst _tempV36 = new Vector3();\n","export var ShadowMode;\n(function (ShadowMode) {\n    ShadowMode[ShadowMode[\"None\"] = 0] = \"None\";\n    ShadowMode[ShadowMode[\"Hard\"] = 1] = \"Hard\";\n    ShadowMode[ShadowMode[\"SoftLow\"] = 2] = \"SoftLow\";\n    ShadowMode[ShadowMode[\"SoftHigh\"] = 3] = \"SoftHigh\";\n})(ShadowMode || (ShadowMode = {}));\n","import { Config3D } from \"../../../../Config3D\";\nimport { ShadowMode } from \"./ShadowMode\";\nimport { Component } from \"../../../components/Component\";\nimport { Color } from \"../../../maths/Color\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nexport var LightType;\n(function (LightType) {\n    LightType[LightType[\"Directional\"] = 0] = \"Directional\";\n    LightType[LightType[\"Spot\"] = 1] = \"Spot\";\n    LightType[LightType[\"Point\"] = 2] = \"Point\";\n    LightType[LightType[\"Area\"] = 3] = \"Area\";\n})(LightType || (LightType = {}));\nexport var LightMode;\n(function (LightMode) {\n    LightMode[LightMode[\"mix\"] = 0] = \"mix\";\n    LightMode[LightMode[\"realTime\"] = 1] = \"realTime\";\n    LightMode[LightMode[\"bakeOnly\"] = 2] = \"bakeOnly\";\n})(LightMode || (LightMode = {}));\nexport class Light extends Component {\n    get intensity() {\n        return this._intensity;\n    }\n    set intensity(value) {\n        this._intensity = value;\n    }\n    get shadowMode() {\n        return this._dataModule.shadowMode;\n    }\n    set shadowMode(value) {\n        this._dataModule.shadowMode = value;\n    }\n    get shadowDistance() {\n        return this._dataModule.shadowDistance;\n    }\n    set shadowDistance(value) {\n        this._dataModule.shadowDistance = value;\n    }\n    get shadowResolution() {\n        return this._dataModule.shadowResolution;\n    }\n    set shadowResolution(value) {\n        this._dataModule.shadowResolution = value;\n    }\n    get shadowDepthBias() {\n        return this._dataModule.shadowDepthBias;\n    }\n    set shadowDepthBias(value) {\n        this._dataModule.shadowDepthBias = value;\n    }\n    get shadowNormalBias() {\n        return this._dataModule.shadowNormalBias;\n    }\n    set shadowNormalBias(value) {\n        this._dataModule.shadowNormalBias = value;\n    }\n    get shadowStrength() {\n        return this._dataModule.shadowStrength;\n    }\n    set shadowStrength(value) {\n        this._dataModule.shadowStrength = value;\n    }\n    get shadowNearPlane() {\n        return this._dataModule.shadowNearPlane;\n    }\n    set shadowNearPlane(value) {\n        this._dataModule.shadowNearPlane = value;\n    }\n    get lightmapBakedType() {\n        return this._lightmapBakedType;\n    }\n    set lightmapBakedType(value) {\n        let premode = this._lightmapBakedType;\n        if (this._lightmapBakedType !== value) {\n            this._lightmapBakedType = value;\n            if (this._enabled) {\n                if (value == LightMode.bakeOnly)\n                    this._removeFromScene();\n                else if (premode == LightMode.bakeOnly)\n                    this._addToScene();\n            }\n        }\n    }\n    get lightWorldMatrix() {\n        var position = this.owner.transform.position;\n        var quaterian = this.owner.transform.rotation;\n        Matrix4x4.createAffineTransformation(position, quaterian, Vector3.ONE, this._lightWoldMatrix);\n        return this._lightWoldMatrix;\n    }\n    get lightType() {\n        return this._lightType;\n    }\n    constructor() {\n        super();\n        this._shadowMode = ShadowMode.None;\n        this._isAlternate = false;\n        this._lightWoldMatrix = new Matrix4x4();\n        this._creatModuleData();\n        this.runInEditor = true;\n        this._intensity = 1.0;\n        this._intensityColor = new Vector3();\n        this.color = new Color(1.0, 1.0, 1.0, 1.0);\n        this._lightmapBakedType = LightMode.realTime;\n        this.shadowResolution = 2048;\n        this.shadowDistance = 50.0;\n        this.shadowDepthBias = 1.0;\n        this.shadowNormalBias = 1.0;\n        this.shadowNearPlane = 0.1;\n        this.shadowStrength = 1.0;\n        this.shadowMode = ShadowMode.None;\n    }\n    _creatModuleData() {\n    }\n    _setOwner(node) {\n        super._setOwner(node);\n        this._dataModule.transform = this.owner.transform;\n    }\n    _getRenderDataModule() {\n        return this._dataModule;\n    }\n    _cloneTo(dest) {\n        super._cloneTo(dest);\n        dest.color = this.color.clone();\n        dest.intensity = this.intensity;\n        dest.lightmapBakedType = this.lightmapBakedType;\n    }\n    _addToScene() {\n        var scene = this.owner.scene;\n        var maxLightCount = Config3D.maxLightCount;\n        if (scene._lightCount < maxLightCount) {\n            scene._lightCount++;\n            this._addToLightQueue();\n            this._isAlternate = false;\n        }\n        else {\n            scene._alternateLights.add(this);\n            this._isAlternate = true;\n            console.warn(\"LightSprite:light count has large than maxLightCount,the latest added light will be ignore.\");\n        }\n    }\n    _removeFromScene() {\n        var scene = this.owner._scene;\n        if (!scene)\n            return;\n        if (this._isAlternate) {\n            scene._alternateLights.remove(this);\n        }\n        else {\n            scene._lightCount--;\n            this._removeFromLightQueue();\n            if (scene._alternateLights._length > 0) {\n                var alternateLight = scene._alternateLights.shift();\n                alternateLight._addToLightQueue();\n                alternateLight._isAlternate = false;\n                scene._lightCount++;\n            }\n        }\n    }\n    _addToLightQueue() {\n    }\n    _removeFromLightQueue() {\n    }\n    _onEnable() {\n        (this.lightmapBakedType !== LightMode.bakeOnly) && (this._addToScene());\n    }\n    _onDisable() {\n        (this.lightmapBakedType !== LightMode.bakeOnly) && (this._removeFromScene());\n    }\n}\n","import { BoundFrustum, FrustumCorner } from \"../../math/BoundFrustum\";\nimport { Plane } from \"../../math/Plane\";\nimport { Utils3D } from \"../../utils/Utils3D\";\nimport { ShadowCascadesMode } from \"./ShadowCascadesMode\";\nimport { ShadowMode } from \"./ShadowMode\";\nimport { LightType } from \"./Light\";\nimport { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { WrapMode } from \"../../../RenderEngine/RenderEnum/WrapMode\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureCompareMode } from \"../../../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { MathUtils3D } from \"../../../maths/MathUtils3D\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { RenderTexture } from \"../../../resource/RenderTexture\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nvar FrustumFace;\n(function (FrustumFace) {\n    FrustumFace[FrustumFace[\"Near\"] = 0] = \"Near\";\n    FrustumFace[FrustumFace[\"Far\"] = 1] = \"Far\";\n    FrustumFace[FrustumFace[\"Left\"] = 2] = \"Left\";\n    FrustumFace[FrustumFace[\"Right\"] = 3] = \"Right\";\n    FrustumFace[FrustumFace[\"Bottom\"] = 4] = \"Bottom\";\n    FrustumFace[FrustumFace[\"Top\"] = 5] = \"Top\";\n})(FrustumFace || (FrustumFace = {}));\nexport var ShadowMapFormat;\n(function (ShadowMapFormat) {\n    ShadowMapFormat[ShadowMapFormat[\"bit16\"] = 0] = \"bit16\";\n    ShadowMapFormat[ShadowMapFormat[\"bit24_8\"] = 1] = \"bit24_8\";\n    ShadowMapFormat[ShadowMapFormat[\"bit32\"] = 2] = \"bit32\";\n})(ShadowMapFormat || (ShadowMapFormat = {}));\nexport class ShadowUtils {\n    static init() {\n        ShadowUtils._adjustNearPlane = new Plane(new Vector3(), 0);\n        ShadowUtils._adjustFarPlane = new Plane(new Vector3(), 0);\n    }\n    static supportShadow() {\n        return LayaGL.renderEngine.getCapable(RenderCapable.RenderTextureFormat_Depth);\n    }\n    static getTemporaryShadowTexture(witdh, height, shadowFormat) {\n        let depthFormat = RenderTargetFormat.DEPTH_16;\n        switch (shadowFormat) {\n            case ShadowMapFormat.bit16:\n                depthFormat = RenderTargetFormat.DEPTH_16;\n                break;\n            case ShadowMapFormat.bit24_8:\n                depthFormat = RenderTargetFormat.DEPTHSTENCIL_24_8;\n                break;\n            case ShadowMapFormat.bit32:\n                depthFormat = RenderTargetFormat.DEPTH_32;\n                break;\n        }\n        var shadowMap = RenderTexture.createFromPool(witdh, height, depthFormat, RenderTargetFormat.None, false, 1);\n        shadowMap.compareMode = TextureCompareMode.LESS;\n        shadowMap.filterMode = FilterMode.Bilinear;\n        shadowMap.wrapModeU = WrapMode.Clamp;\n        shadowMap.wrapModeV = WrapMode.Clamp;\n        return shadowMap;\n    }\n    static getShadowBias(light, shadowProjectionMatrix, shadowResolution, out) {\n        var frustumSize;\n        if (light._lightType == LightType.Directional) {\n            frustumSize = 2.0 / shadowProjectionMatrix.elements[0];\n        }\n        else if (light._lightType == LightType.Spot) {\n            frustumSize = Math.tan(light.spotAngle * 0.5 * MathUtils3D.Deg2Rad) * light.range;\n        }\n        else {\n            console.warn(\"ShadowUtils:Only spot and directional shadow casters are supported now.\");\n            frustumSize = 0.0;\n        }\n        var texelSize = frustumSize / shadowResolution;\n        var depthBias = -light.shadowDepthBias * texelSize;\n        var normalBias = -light.shadowNormalBias * texelSize;\n        if (light.shadowMode == ShadowMode.SoftHigh) {\n            const kernelRadius = 2.5;\n            depthBias *= kernelRadius;\n            normalBias *= kernelRadius;\n        }\n        out.setValue(depthBias, normalBias, 0.0, 0.0);\n    }\n    static getCameraFrustumPlanes(cameraViewProjectMatrix, frustumPlanes) {\n        BoundFrustum.getPlanesFromMatrix(cameraViewProjectMatrix, frustumPlanes[FrustumFace.Near], frustumPlanes[FrustumFace.Far], frustumPlanes[FrustumFace.Left], frustumPlanes[FrustumFace.Right], frustumPlanes[FrustumFace.Top], frustumPlanes[FrustumFace.Bottom]);\n    }\n    static getFarWithRadius(radius, denominator) {\n        return Math.sqrt(radius * radius / denominator);\n    }\n    static getCascadesSplitDistance(twoSplitRatio, fourSplitRatio, cameraNear, shadowFar, fov, aspectRatio, cascadesMode, out) {\n        out[0] = cameraNear;\n        var range = shadowFar - cameraNear;\n        var tFov = Math.tan(fov * 0.5);\n        var denominator = 1.0 + tFov * tFov * (aspectRatio * aspectRatio + 1.0);\n        switch (cascadesMode) {\n            case ShadowCascadesMode.NoCascades:\n                out[1] = ShadowUtils.getFarWithRadius(shadowFar, denominator);\n                break;\n            case ShadowCascadesMode.TwoCascades:\n                out[1] = ShadowUtils.getFarWithRadius(cameraNear + range * twoSplitRatio, denominator);\n                out[2] = ShadowUtils.getFarWithRadius(shadowFar, denominator);\n                break;\n            case ShadowCascadesMode.FourCascades:\n                out[1] = ShadowUtils.getFarWithRadius(cameraNear + range * fourSplitRatio.x, denominator);\n                out[2] = ShadowUtils.getFarWithRadius(cameraNear + range * fourSplitRatio.y, denominator);\n                out[3] = ShadowUtils.getFarWithRadius(cameraNear + range * fourSplitRatio.z, denominator);\n                out[4] = ShadowUtils.getFarWithRadius(shadowFar, denominator);\n                break;\n        }\n    }\n    static applySliceTransform(shadowSliceData, atlasWidth, atlasHeight, cascadeIndex, outShadowMatrices) {\n        var sliceE = _tempMatrix0.elements;\n        var oneOverAtlasWidth = 1.0 / atlasWidth;\n        var oneOverAtlasHeight = 1.0 / atlasHeight;\n        sliceE[0] = shadowSliceData.resolution * oneOverAtlasWidth;\n        sliceE[5] = shadowSliceData.resolution * oneOverAtlasHeight;\n        sliceE[12] = shadowSliceData.offsetX * oneOverAtlasWidth;\n        sliceE[13] = shadowSliceData.offsetY * oneOverAtlasHeight;\n        sliceE[1] = sliceE[2] = sliceE[2] = sliceE[4] = sliceE[6] = sliceE[7] = sliceE[8] = sliceE[9] = sliceE[11] = sliceE[14] = 0;\n        sliceE[10] = sliceE[15] = 1;\n        var offset = cascadeIndex * 16;\n        Utils3D._mulMatrixArray(sliceE, outShadowMatrices, offset, outShadowMatrices, offset);\n    }\n    static getDirectionLightShadowCullPlanes(cameraFrustumPlanes, cascadeIndex, splitDistance, cameraNear, direction, shadowSliceData) {\n        var frustumCorners = _frustumCorners;\n        var backPlaneFaces = ShadowUtils._backPlaneFaces;\n        var planeNeighbors = _frustumPlaneNeighbors;\n        var twoPlaneCorners = _frustumTwoPlaneCorners;\n        var edgePlanePoint2 = ShadowUtils._edgePlanePoint2;\n        var out = shadowSliceData.cullPlanes;\n        var near = cameraFrustumPlanes[FrustumFace.Near], far = cameraFrustumPlanes[FrustumFace.Far];\n        var left = cameraFrustumPlanes[FrustumFace.Left], right = cameraFrustumPlanes[FrustumFace.Right];\n        var bottom = cameraFrustumPlanes[FrustumFace.Bottom], top = cameraFrustumPlanes[FrustumFace.Top];\n        var splitNearDistance = splitDistance[cascadeIndex] - cameraNear;\n        var splitNear = ShadowUtils._adjustNearPlane;\n        var splitFar = ShadowUtils._adjustFarPlane;\n        splitNear.normal = near.normal;\n        splitFar.normal = far.normal;\n        splitNear.distance = near.distance - splitNearDistance;\n        splitFar.distance = Math.min(-near.distance + shadowSliceData.sphereCenterZ + shadowSliceData.splitBoundSphere.radius, far.distance);\n        BoundFrustum.get3PlaneInterPoint(splitNear, bottom, right, frustumCorners[FrustumCorner.nearBottomRight]);\n        BoundFrustum.get3PlaneInterPoint(splitNear, top, right, frustumCorners[FrustumCorner.nearTopRight]);\n        BoundFrustum.get3PlaneInterPoint(splitNear, top, left, frustumCorners[FrustumCorner.nearTopLeft]);\n        BoundFrustum.get3PlaneInterPoint(splitNear, bottom, left, frustumCorners[FrustumCorner.nearBottomLeft]);\n        BoundFrustum.get3PlaneInterPoint(splitFar, bottom, right, frustumCorners[FrustumCorner.FarBottomRight]);\n        BoundFrustum.get3PlaneInterPoint(splitFar, top, right, frustumCorners[FrustumCorner.FarTopRight]);\n        BoundFrustum.get3PlaneInterPoint(splitFar, top, left, frustumCorners[FrustumCorner.FarTopLeft]);\n        BoundFrustum.get3PlaneInterPoint(splitFar, bottom, left, frustumCorners[FrustumCorner.FarBottomLeft]);\n        var backIndex = 0;\n        for (var i = 0; i < 6; i++) {\n            var plane;\n            switch (i) {\n                case FrustumFace.Near:\n                    plane = splitNear;\n                    break;\n                case FrustumFace.Far:\n                    plane = splitFar;\n                    break;\n                default:\n                    plane = cameraFrustumPlanes[i];\n                    break;\n            }\n            if (Vector3.dot(plane.normal, direction) < 0.0) {\n                plane.cloneTo(out[backIndex]);\n                backPlaneFaces[backIndex] = i;\n                backIndex++;\n            }\n        }\n        var edgeIndex = backIndex;\n        for (var i = 0; i < backIndex; i++) {\n            var backFace = backPlaneFaces[i];\n            var neighborFaces = planeNeighbors[backFace];\n            for (var j = 0; j < 4; j++) {\n                var neighborFace = neighborFaces[j];\n                var notBackFace = true;\n                for (var k = 0; k < backIndex; k++)\n                    if (neighborFace == backPlaneFaces[k]) {\n                        notBackFace = false;\n                        break;\n                    }\n                if (notBackFace) {\n                    var corners = twoPlaneCorners[backFace][neighborFace];\n                    var point0 = frustumCorners[corners[0]];\n                    var point1 = frustumCorners[corners[1]];\n                    Vector3.add(point0, direction, edgePlanePoint2);\n                    Plane.createPlaneBy3P(point0, point1, edgePlanePoint2, out[edgeIndex++]);\n                }\n            }\n        }\n        shadowSliceData.cullPlaneCount = edgeIndex;\n    }\n    static getBoundSphereByFrustum(near, far, fov, aspectRatio, cameraPos, forward, outBoundSphere) {\n        var centerZ;\n        var radius;\n        var k = Math.sqrt(1.0 + aspectRatio * aspectRatio) * Math.tan(fov / 2.0);\n        var k2 = k * k;\n        var farSNear = far - near;\n        var farANear = far + near;\n        if (k2 > farSNear / farANear) {\n            centerZ = far;\n            radius = far * k;\n        }\n        else {\n            centerZ = 0.5 * farANear * (1 + k2);\n            radius = 0.5 * Math.sqrt(farSNear * farSNear + 2.0 * (far * far + near * near) * k2 + farANear * farANear * k2 * k2);\n        }\n        var center = outBoundSphere.center;\n        outBoundSphere.radius = radius;\n        Vector3.scale(forward, centerZ, center);\n        Vector3.add(cameraPos, center, center);\n        outBoundSphere.center = center;\n        return centerZ;\n    }\n    static getMaxTileResolutionInAtlas(atlasWidth, atlasHeight, tileCount) {\n        var resolution = Math.min(atlasWidth, atlasHeight);\n        var currentTileCount = Math.floor(atlasWidth / resolution) * Math.floor(atlasHeight / resolution);\n        while (currentTileCount < tileCount) {\n            resolution = Math.floor(resolution >> 1);\n            currentTileCount = Math.floor(atlasWidth / resolution) * Math.floor(atlasHeight / resolution);\n        }\n        return resolution;\n    }\n    static getDirectionalLightMatrices(lightUp, lightSide, lightForward, cascadeIndex, nearPlane, shadowResolution, shadowSliceData, shadowMatrices) {\n        var boundSphere = shadowSliceData.splitBoundSphere;\n        var center = boundSphere.center;\n        var radius = boundSphere.radius;\n        var halfShadowResolution = shadowResolution / 2;\n        var borderRadius = radius * halfShadowResolution / (halfShadowResolution - ShadowUtils.atlasBorderSize);\n        var borderDiam = borderRadius * 2.0;\n        var sizeUnit = shadowResolution / borderDiam;\n        var radiusUnit = borderDiam / shadowResolution;\n        var upLen = Math.ceil(Vector3.dot(center, lightUp) * sizeUnit) * radiusUnit;\n        var sideLen = Math.ceil(Vector3.dot(center, lightSide) * sizeUnit) * radiusUnit;\n        var forwardLen = Vector3.dot(center, lightForward);\n        center.x = lightUp.x * upLen + lightSide.x * sideLen + lightForward.x * forwardLen;\n        center.y = lightUp.y * upLen + lightSide.y * sideLen + lightForward.y * forwardLen;\n        center.z = lightUp.z * upLen + lightSide.z * sideLen + lightForward.z * forwardLen;\n        boundSphere.center = center;\n        var origin = shadowSliceData.position;\n        var viewMatrix = shadowSliceData.viewMatrix;\n        var projectMatrix = shadowSliceData.projectionMatrix;\n        var viewProjectMatrix = shadowSliceData.viewProjectMatrix;\n        shadowSliceData.resolution = shadowResolution;\n        shadowSliceData.offsetX = (cascadeIndex % 2) * shadowResolution;\n        shadowSliceData.offsetY = Math.floor(cascadeIndex / 2) * shadowResolution;\n        Vector3.scale(lightForward, radius + nearPlane, origin);\n        Vector3.subtract(center, origin, origin);\n        Matrix4x4.createLookAt(origin, center, lightUp, viewMatrix);\n        Matrix4x4.createOrthoOffCenter(-borderRadius, borderRadius, -borderRadius, borderRadius, 0.0, radius * 2.0 + nearPlane, projectMatrix);\n        Matrix4x4.multiply(projectMatrix, viewMatrix, viewProjectMatrix);\n        let offsetMat = _shadowMapScaleOffsetMatrix.elements;\n        if (LayaGL.renderEngine._screenInvertY) {\n            offsetMat = _shadowMapInvertScaleOffsetMatrix.elements;\n        }\n        Utils3D._mulMatrixArray(offsetMat, viewProjectMatrix.elements, 0, shadowMatrices, cascadeIndex * 16);\n    }\n    static prepareShadowReceiverShaderValues(shadowMapWidth, shadowMapHeight, shadowSliceDatas, cascadeCount, shadowMapSize, shadowMatrices, splitBoundSpheres) {\n        shadowMapSize.setValue(1.0 / shadowMapWidth, 1.0 / shadowMapHeight, shadowMapWidth, shadowMapHeight);\n        if (cascadeCount > 1) {\n            const matrixFloatCount = 16;\n            for (var i = cascadeCount * matrixFloatCount, n = 4 * matrixFloatCount; i < n; i++)\n                shadowMatrices[i] = 0.0;\n            for (var i = 0; i < cascadeCount; i++) {\n                var boundSphere = shadowSliceDatas[i].splitBoundSphere;\n                var center = boundSphere.center;\n                var radius = boundSphere.radius;\n                var offset = i * 4;\n                splitBoundSpheres[offset] = center.x;\n                splitBoundSpheres[offset + 1] = center.y;\n                splitBoundSpheres[offset + 2] = center.z;\n                splitBoundSpheres[offset + 3] = radius * radius;\n            }\n            const sphereFloatCount = 4;\n            for (var i = cascadeCount * sphereFloatCount, n = 4 * sphereFloatCount; i < n; i++)\n                splitBoundSpheres[i] = 0.0;\n        }\n    }\n}\nShadowUtils._backPlaneFaces = new Array(5);\nShadowUtils._edgePlanePoint2 = new Vector3();\nShadowUtils.atlasBorderSize = 4.0;\nconst _tempMatrix0 = new Matrix4x4();\nconst _shadowMapScaleOffsetMatrix = new Matrix4x4(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.5, 0.5, 0.0, 1.0);\nconst _shadowMapInvertScaleOffsetMatrix = new Matrix4x4(0.5, 0.0, 0.0, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.5, 0.5, 0.0, 1.0);\nconst _frustumCorners = [new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3()];\nconst _frustumPlaneNeighbors = [\n    [FrustumFace.Left, FrustumFace.Right, FrustumFace.Top, FrustumFace.Bottom],\n    [FrustumFace.Left, FrustumFace.Right, FrustumFace.Top, FrustumFace.Bottom],\n    [FrustumFace.Near, FrustumFace.Far, FrustumFace.Top, FrustumFace.Bottom],\n    [FrustumFace.Near, FrustumFace.Far, FrustumFace.Top, FrustumFace.Bottom],\n    [FrustumFace.Near, FrustumFace.Far, FrustumFace.Left, FrustumFace.Right],\n    [FrustumFace.Near, FrustumFace.Far, FrustumFace.Left, FrustumFace.Right]\n];\nconst _frustumTwoPlaneCorners = [\n    [[FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.nearBottomLeft, FrustumCorner.nearTopLeft], [FrustumCorner.nearTopRight, FrustumCorner.nearBottomRight], [FrustumCorner.nearBottomRight, FrustumCorner.nearBottomLeft], [FrustumCorner.nearTopLeft, FrustumCorner.nearTopRight]],\n    [[FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.FarTopLeft, FrustumCorner.FarBottomLeft], [FrustumCorner.FarBottomRight, FrustumCorner.FarTopRight], [FrustumCorner.FarBottomLeft, FrustumCorner.FarBottomRight], [FrustumCorner.FarTopRight, FrustumCorner.FarTopLeft]],\n    [[FrustumCorner.nearTopLeft, FrustumCorner.nearBottomLeft], [FrustumCorner.FarBottomLeft, FrustumCorner.FarTopLeft], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.nearBottomLeft, FrustumCorner.FarBottomLeft], [FrustumCorner.FarTopLeft, FrustumCorner.nearTopLeft]],\n    [[FrustumCorner.nearBottomRight, FrustumCorner.nearTopRight], [FrustumCorner.FarTopRight, FrustumCorner.FarBottomRight], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.FarBottomRight, FrustumCorner.nearBottomRight], [FrustumCorner.nearTopRight, FrustumCorner.FarTopRight]],\n    [[FrustumCorner.nearBottomLeft, FrustumCorner.nearBottomRight], [FrustumCorner.FarBottomRight, FrustumCorner.FarBottomLeft], [FrustumCorner.FarBottomLeft, FrustumCorner.nearBottomLeft], [FrustumCorner.nearBottomRight, FrustumCorner.FarBottomRight], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.unknown, FrustumCorner.unknown]],\n    [[FrustumCorner.nearTopRight, FrustumCorner.nearTopLeft], [FrustumCorner.FarTopLeft, FrustumCorner.FarTopRight], [FrustumCorner.nearTopLeft, FrustumCorner.FarTopLeft], [FrustumCorner.FarTopRight, FrustumCorner.nearTopRight], [FrustumCorner.unknown, FrustumCorner.unknown], [FrustumCorner.unknown, FrustumCorner.unknown]]\n];\n","import { ShadowCascadesMode } from \"../core/light/ShadowCascadesMode\";\nimport { ShadowMapFormat, ShadowUtils } from \"../core/light/ShadowUtils\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { RenderTexture } from \"../../resource/RenderTexture\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class ShadowCasterPass {\n    static __init__() {\n        ShadowCasterPass.SHADOW_BIAS = Shader3D.propertyNameToID(\"u_ShadowBias\");\n        ShadowCasterPass.SHADOW_LIGHT_DIRECTION = Shader3D.propertyNameToID(\"u_ShadowLightDirection\");\n        ShadowCasterPass.SHADOW_SPLIT_SPHERES = Shader3D.propertyNameToID(\"u_ShadowSplitSpheres\");\n        ShadowCasterPass.SHADOW_MATRICES = Shader3D.propertyNameToID(\"u_ShadowMatrices\");\n        ShadowCasterPass.SHADOW_MAP_SIZE = Shader3D.propertyNameToID(\"u_ShadowMapSize\");\n        ShadowCasterPass.SHADOW_MAP = Shader3D.propertyNameToID(\"u_ShadowMap\");\n        ShadowCasterPass.SHADOW_PARAMS = Shader3D.propertyNameToID(\"u_ShadowParams\");\n        ShadowCasterPass.SHADOW_SPOTMAP_SIZE = Shader3D.propertyNameToID(\"u_SpotShadowMapSize\");\n        ShadowCasterPass.SHADOW_SPOTMAP = Shader3D.propertyNameToID(\"u_SpotShadowMap\");\n        ShadowCasterPass.SHADOW_SPOTMATRICES = Shader3D.propertyNameToID(\"u_SpotViewProjectMatrix\");\n        const shadowUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Shadow\");\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_LIGHT_DIRECTION, \"u_ShadowLightDirection\", ShaderDataType.Vector3);\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_BIAS, \"u_ShadowBias\", ShaderDataType.Vector4);\n        shadowUniformMap.addShaderUniformArray(ShadowCasterPass.SHADOW_SPLIT_SPHERES, \"u_ShadowSplitSpheres\", ShaderDataType.Vector4, 4);\n        shadowUniformMap.addShaderUniformArray(ShadowCasterPass.SHADOW_MATRICES, \"u_ShadowMatrices\", ShaderDataType.Matrix4x4, 4);\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_MAP_SIZE, \"u_ShadowMapSize\", ShaderDataType.Vector4);\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_MAP, \"u_ShadowMap\", ShaderDataType.Texture2D);\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_PARAMS, \"u_ShadowParams\", ShaderDataType.Vector4);\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_SPOTMAP_SIZE, \"u_SpotShadowMapSize\", ShaderDataType.Vector4);\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_SPOTMAP, \"u_SpotShadowMap\", ShaderDataType.Texture2D);\n        shadowUniformMap.addShaderUniform(ShadowCasterPass.SHADOW_SPOTMATRICES, \"u_SpotViewProjectMatrix\", ShaderDataType.Matrix4x4);\n        this.ShadowUniformMap = shadowUniformMap;\n    }\n    constructor() {\n    }\n    getDirectLightShadowMap(light) {\n        var shadowMapWidth;\n        var shadowMapHeight;\n        var atlasResolution = light.shadowResolution;\n        var cascadesMode = light.shadowCascadesMode;\n        var cascadesCount;\n        var shadowTileResolution;\n        if (cascadesMode == ShadowCascadesMode.NoCascades) {\n            shadowTileResolution = atlasResolution;\n            shadowMapWidth = atlasResolution;\n            shadowMapHeight = atlasResolution;\n        }\n        else {\n            cascadesCount = cascadesMode == ShadowCascadesMode.TwoCascades ? 2 : 4;\n            shadowTileResolution = ShadowUtils.getMaxTileResolutionInAtlas(atlasResolution, atlasResolution, cascadesCount);\n            shadowMapWidth = shadowTileResolution * 2;\n            shadowMapHeight = cascadesMode == ShadowCascadesMode.TwoCascades ? shadowTileResolution : shadowTileResolution * 2;\n        }\n        this._shadowDirectLightMap && RenderTexture.recoverToPool(this._shadowDirectLightMap);\n        this._shadowDirectLightMap = ShadowUtils.getTemporaryShadowTexture(shadowMapWidth, shadowMapHeight, ShadowMapFormat.bit16);\n        return this._shadowDirectLightMap;\n    }\n    getSpotLightShadowPassData(light) {\n        this._shadowSpotLightMap && RenderTexture.recoverToPool(this._shadowSpotLightMap);\n        var shadowResolution = light.shadowResolution;\n        var shadowMapWidth = shadowResolution;\n        var shadowMapHeight = shadowResolution;\n        this._shadowSpotLightMap = ShadowUtils.getTemporaryShadowTexture(shadowMapWidth, shadowMapHeight, ShadowMapFormat.bit16);\n        return this._shadowSpotLightMap;\n    }\n    getPointLightShadowPassData() {\n    }\n    cleanUp() {\n        this._shadowDirectLightMap && RenderTexture.recoverToPool(this._shadowDirectLightMap);\n        this._shadowSpotLightMap && RenderTexture.recoverToPool(this._shadowSpotLightMap);\n        this._shadowDirectLightMap = null;\n        this._shadowSpotLightMap = null;\n    }\n}\n","import { RenderTargetFormat } from \"../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { DepthTextureMode, RenderTexture } from \"../../resource/RenderTexture\";\nexport class DepthPass {\n    static __init__() {\n        DepthPass.DEPTHPASS = Shader3D.getDefineByName(\"DEPTHPASS\");\n        DepthPass.DEFINE_SHADOW_BIAS = Shader3D.propertyNameToID(\"u_ShadowBias\");\n        DepthPass.DEPTHTEXTURE = Shader3D.propertyNameToID(\"u_CameraDepthTexture\");\n        DepthPass.DEPTHNORMALSTEXTURE = Shader3D.propertyNameToID(\"u_CameraDepthNormalsTexture\");\n        DepthPass.DEPTHZBUFFERPARAMS = Shader3D.propertyNameToID(\"u_ZBufferParams\");\n    }\n    constructor() {\n    }\n    getTarget(camera, depthType, depthTextureFormat) {\n        this._viewPort = camera.viewport;\n        switch (depthType) {\n            case DepthTextureMode.Depth:\n                camera.depthTexture = this._depthTexture = RenderTexture.createFromPool(this._viewPort.width, this._viewPort.height, depthTextureFormat, RenderTargetFormat.None, false, 1);\n                break;\n            case DepthTextureMode.DepthNormals:\n                camera.depthNormalTexture = this._depthNormalsTexture = RenderTexture.createFromPool(this._viewPort.width, this._viewPort.height, RenderTargetFormat.R8G8B8A8, depthTextureFormat, false, 1);\n                break;\n            case DepthTextureMode.MotionVectors:\n                break;\n            default:\n                throw (\"there is UnDefined type of DepthTextureMode\");\n        }\n    }\n    _setupDepthModeShaderValue(depthType, camera) {\n        switch (depthType) {\n            case DepthTextureMode.Depth:\n                var far = camera.farPlane;\n                var near = camera.nearPlane;\n                this._zBufferParams.setValue(1.0 - far / near, far / near, (near - far) / (near * far), 1 / near);\n                camera._shaderValues.setVector(DepthPass.DEFINE_SHADOW_BIAS, DepthPass.SHADOW_BIAS);\n                camera._shaderValues.setTexture(DepthPass.DEPTHTEXTURE, this._depthTexture);\n                camera._shaderValues.setVector(DepthPass.DEPTHZBUFFERPARAMS, this._zBufferParams);\n                break;\n            default:\n                throw (\"there is UnDefined type of DepthTextureMode\");\n        }\n    }\n    cleanUp() {\n        (this._depthTexture instanceof RenderTexture) && this._depthTexture && RenderTexture.recoverToPool(this._depthTexture);\n        this._depthNormalsTexture && RenderTexture.recoverToPool(this._depthNormalsTexture);\n        this._depthTexture = null;\n        this._depthNormalsTexture = null;\n    }\n}\nDepthPass.SHADOW_BIAS = new Vector4();\n","import { Vector3 } from \"../../maths/Vector3\";\nexport class Picker {\n    constructor() {\n    }\n    static calculateCursorRay(point, viewPort, projectionMatrix, viewMatrix, world, out) {\n        var x = point.x;\n        var y = point.y;\n        var nearSource = _tempVector30;\n        var nerSourceE = nearSource;\n        nerSourceE.x = x;\n        nerSourceE.y = y;\n        nerSourceE.z = viewPort.minDepth;\n        var farSource = _tempVector31;\n        var farSourceE = farSource;\n        farSourceE.x = x;\n        farSourceE.y = y;\n        farSourceE.z = viewPort.maxDepth;\n        var nearPoint = out.origin;\n        var farPoint = _tempVector32;\n        viewPort.unprojectFromWVP(nearSource, projectionMatrix, viewMatrix, world, nearPoint);\n        viewPort.unprojectFromWVP(farSource, projectionMatrix, viewMatrix, world, farPoint);\n        var outDire = out.direction;\n        outDire.x = farPoint.x - nearPoint.x;\n        outDire.y = farPoint.y - nearPoint.y;\n        outDire.z = farPoint.z - nearPoint.z;\n        Vector3.normalize(out.direction, out.direction);\n    }\n    static rayIntersectsTriangle(ray, vertex1, vertex2, vertex3) {\n        var result;\n        var edge1 = _tempVector30, edge2 = _tempVector31;\n        Vector3.subtract(vertex2, vertex1, edge1);\n        Vector3.subtract(vertex3, vertex1, edge2);\n        var directionCrossEdge2 = _tempVector32;\n        Vector3.cross(ray.direction, edge2, directionCrossEdge2);\n        var determinant;\n        determinant = Vector3.dot(edge1, directionCrossEdge2);\n        if (determinant > -Number.MIN_VALUE && determinant < Number.MIN_VALUE) {\n            result = Number.NaN;\n            return result;\n        }\n        var inverseDeterminant = 1.0 / determinant;\n        var distanceVector = _tempVector33;\n        Vector3.subtract(ray.origin, vertex1, distanceVector);\n        var triangleU;\n        triangleU = Vector3.dot(distanceVector, directionCrossEdge2);\n        triangleU *= inverseDeterminant;\n        if (triangleU < 0 || triangleU > 1) {\n            result = Number.NaN;\n            return result;\n        }\n        var distanceCrossEdge1 = _tempVector34;\n        Vector3.cross(distanceVector, edge1, distanceCrossEdge1);\n        var triangleV;\n        triangleV = Vector3.dot(ray.direction, distanceCrossEdge1);\n        triangleV *= inverseDeterminant;\n        if (triangleV < 0 || triangleU + triangleV > 1) {\n            result = Number.NaN;\n            return result;\n        }\n        var rayDistance;\n        rayDistance = Vector3.dot(edge2, distanceCrossEdge1);\n        rayDistance *= inverseDeterminant;\n        if (rayDistance < 0) {\n            result = Number.NaN;\n            return result;\n        }\n        result = rayDistance;\n        return result;\n    }\n    static rayPlaneIntersection(ray, plane) {\n        let point = new Vector3();\n        let ddotn = Vector3.dot(ray.direction.normalize(), plane.normal.normalize());\n        if (ddotn == 0) {\n            return null;\n        }\n        let t = (-plane.distance - Vector3.dot(ray.origin, plane.normal)) / ddotn;\n        if (t < 0)\n            return null;\n        ray.at(t, point);\n        return point;\n    }\n}\nconst _tempVector30 = new Vector3();\nconst _tempVector31 = new Vector3();\nconst _tempVector32 = new Vector3();\nconst _tempVector33 = new Vector3();\nconst _tempVector34 = new Vector3();\n","import { LayaGL } from \"../../../../../layagl/LayaGL\";\nimport { BufferUsage } from \"../../../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../../../RenderEngine/RenderEnum/DrawType\";\nimport { MeshTopology } from \"../../../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { VertexDeclaration } from \"../../../../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../../../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../../../../renders/VertexElementFormat\";\nimport { BufferState } from \"../../../../../webgl/utils/BufferState\";\nimport { Laya3DRender } from \"../../../../RenderObjs/Laya3DRender\";\nimport { GeometryElement } from \"../../../GeometryElement\";\nexport class ScreenQuad extends GeometryElement {\n    static __init__() {\n        ScreenQuad._vertexDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, ScreenQuad.SCREENQUAD_POSITION_UV)]);\n        ScreenQuad.instance = new ScreenQuad();\n        ScreenQuad.instance.invertY = true;\n        ScreenQuad.InvertInstance = new ScreenQuad();\n        ScreenQuad.InvertInstance.invertY = false;\n    }\n    constructor() {\n        super(MeshTopology.TriangleStrip, DrawType.DrawArray);\n        this._bufferState = new BufferState();\n        this._bufferStateInvertUV = new BufferState();\n        this.setDrawArrayParams(0, 4);\n        this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(16 * 4, BufferUsage.Static, false);\n        this._vertexBuffer.vertexDeclaration = ScreenQuad._vertexDeclaration;\n        this._vertexBuffer.setData(ScreenQuad._vertices.buffer);\n        this._bufferState.applyState([this._vertexBuffer], null);\n        this._vertexBufferInvertUV = Laya3DRender.renderOBJCreate.createVertexBuffer3D(16 * 4, BufferUsage.Static, false);\n        this._vertexBufferInvertUV.vertexDeclaration = ScreenQuad._vertexDeclaration;\n        this._vertexBufferInvertUV.setData(ScreenQuad._verticesInvertUV.buffer);\n        this._bufferStateInvertUV.applyState([this._vertexBufferInvertUV], null);\n        this.invertY = false;\n    }\n    set invertY(value) {\n        value = LayaGL.renderEngine._screenInvertY ? !value : value;\n        this.bufferState = value ? this._bufferStateInvertUV : this._bufferState;\n    }\n    _updateRenderParams(state) {\n    }\n    destroy() {\n        super.destroy();\n        this._bufferState.destroy();\n        this._vertexBuffer.destroy();\n        this._bufferStateInvertUV.destroy();\n        this._vertexBufferInvertUV.destroy();\n    }\n}\nScreenQuad.SCREENQUAD_POSITION_UV = 0;\nScreenQuad._vertices = new Float32Array([\n    1, 1, 1, 1,\n    1, -1, 1, 0,\n    -1, 1, 0, 1,\n    -1, -1, 0, 0\n]);\nScreenQuad._verticesInvertUV = new Float32Array([\n    1, 1, 1, 0,\n    1, -1, 1, 1,\n    -1, 1, 0, 0,\n    -1, -1, 0, 1\n]);\n","import { Stat } from \"../../../../utils/Stat\";\nimport { RenderContext3D } from \"../RenderContext3D\";\nimport { RenderElement } from \"../RenderElement\";\nimport { Command } from \"./Command\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { Viewport } from \"../../../../maths/Viewport\";\nimport { ScreenQuad } from \"./geometry/ScreenQuad\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nexport class BlitScreenQuadCMD extends Command {\n    static create(source, dest, offsetScale = null, shader = null, shaderData = null, subShader = 0, screenType = BlitScreenQuadCMD._SCREENTYPE_QUAD, commandbuffer = null) {\n        var cmd;\n        cmd = BlitScreenQuadCMD._pool.length > 0 ? BlitScreenQuadCMD._pool.pop() : new BlitScreenQuadCMD();\n        cmd._source = source;\n        cmd.dest = dest;\n        cmd.offsetScale = offsetScale || BlitScreenQuadCMD._defaultOffsetScale;\n        cmd.setshader(shader, subShader, shaderData);\n        cmd._commandBuffer = commandbuffer;\n        return cmd;\n    }\n    constructor() {\n        super();\n        this._source = null;\n        this._dest = null;\n        this._offsetScale = new Vector4();\n        this._shader = null;\n        this._shaderData = null;\n        this._internalShaderData = null;\n        this._subShader = 0;\n        this._blitQuadCMDData = Laya3DRender.Render3DPassFactory.createBlitQuadCMDData();\n        this._transform3D = Laya3DRender.Render3DModuleDataFactory.createTransform(null);\n        this._renderElement = new RenderElement();\n        this._renderElement.setTransform(this._transform3D);\n        this._renderElement.setGeometry(ScreenQuad.instance);\n        this._blitQuadCMDData.element = this._renderElement._renderElementOBJ;\n        this._blitQuadCMDData.element.isRender = true;\n    }\n    get offsetScale() {\n        return this._offsetScale;\n    }\n    set offsetScale(value) {\n        value.cloneTo(this._offsetScale);\n        this._blitQuadCMDData.offsetScale = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n        this._blitQuadCMDData.dest = value ? value._renderTarget : null;\n    }\n    set shaderData(value) {\n        if (value) {\n            this._shaderData = value;\n        }\n        else {\n            if (!this._internalShaderData)\n                this._internalShaderData = LayaGL.renderDeviceFactory.createShaderData();\n            this._internalShaderData.clearData();\n            this._shaderData = this._internalShaderData;\n        }\n        this._renderElement._renderElementOBJ.materialShaderData = this._shaderData;\n    }\n    getRenderCMD() {\n        return this._blitQuadCMDData;\n    }\n    setshader(shader, subShader, shaderData) {\n        this._shader = shader || Command._screenShader;\n        this._subShader = subShader || 0;\n        this.shaderData = shaderData;\n        this._renderElement.renderSubShader = this._shader.getSubShaderAt(this._subShader);\n        this._renderElement._subShaderIndex = subShader;\n    }\n    run() {\n        var source;\n        if (!this._source) {\n            if (!this._commandBuffer._camera._internalRenderTexture)\n                throw \"camera internalRenderTexture is null,please set camera enableBuiltInRenderTexture\";\n            source = this._commandBuffer._camera._internalRenderTexture;\n        }\n        else\n            source = this._source;\n        this._blitQuadCMDData.source = source._texture;\n        var dest = this._dest ? this._dest : this._commandBuffer._camera._internalRenderTexture;\n        if (dest != this._dest)\n            this._blitQuadCMDData.dest = dest._renderTarget;\n        if (dest) {\n            Viewport.TEMP.set(0, 0, dest.width, dest.height);\n            Vector4.TEMP.setValue(0, 0, dest.width, dest.height);\n            this._blitQuadCMDData.viewport = Viewport.TEMP;\n            this._blitQuadCMDData.scissor = Vector4.TEMP;\n        }\n        else {\n            let camera = this._commandBuffer._camera;\n            let viewport = camera.viewport;\n            let vpH = viewport.height;\n            let vpY = RenderContext3D.clientHeight - viewport.y - vpH;\n            Viewport.TEMP.set(viewport.x, vpY, viewport.width, vpH);\n            Vector4.TEMP.setValue(viewport.x, vpY, viewport.width, vpH);\n            this._blitQuadCMDData.viewport = Viewport.TEMP;\n            this._blitQuadCMDData.scissor = Vector4.TEMP;\n        }\n        let invertY = dest ? true : false;\n        this._renderElement.setGeometry(invertY ? ScreenQuad.InvertInstance : ScreenQuad.instance);\n        Stat.blitDrawCall++;\n    }\n    recover() {\n        BlitScreenQuadCMD._pool.push(this);\n        this._source = null;\n        this._dest = null;\n        BlitScreenQuadCMD._defaultOffsetScale.cloneTo(this._offsetScale);\n        this._shader = null;\n        this._shaderData = null;\n        super.recover();\n    }\n    destroy() {\n        this._source = null;\n        this.dest = null;\n        this._offsetScale = null;\n        this._shader = null;\n        this._shaderData = null;\n        if (this._internalShaderData)\n            this._internalShaderData.destroy();\n        this._internalShaderData = null;\n        this._renderElement.destroy();\n    }\n}\nBlitScreenQuadCMD._SCREENTYPE_QUAD = 0;\nBlitScreenQuadCMD._SCREENTYPE_TRIANGLE = 1;\nBlitScreenQuadCMD._pool = [];\nBlitScreenQuadCMD._defaultOffsetScale = new Vector4(0, 0, 1, 1);\n","import { Command } from \"./Command\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nexport class SetShaderDataCMD extends Command {\n    static create(shaderData, nameID, value, shaderDataType, commandBuffer) {\n        var cmd;\n        cmd = SetShaderDataCMD._pool.length > 0 ? SetShaderDataCMD._pool.pop() : new SetShaderDataCMD();\n        cmd._setRenderDataCMD.dest = shaderData;\n        cmd._setRenderDataCMD.propertyID = nameID;\n        cmd._setRenderDataCMD.dataType = shaderDataType;\n        cmd._setRenderDataCMD.value = value;\n        cmd._commandBuffer = commandBuffer;\n        return cmd;\n    }\n    constructor() {\n        super();\n        this._setRenderDataCMD = Laya3DRender.Render3DPassFactory.createSetRenderDataCMD();\n    }\n    getRenderCMD() {\n        return this._setRenderDataCMD;\n    }\n    recover() {\n        SetShaderDataCMD._pool.push(this);\n    }\n}\nSetShaderDataCMD.ShaderDataType_define = -2;\nSetShaderDataCMD._pool = [];\nexport class SetDefineCMD extends Command {\n    static create(shaderData, define, addDefine, commandBuffer) {\n        var cmd;\n        cmd = SetDefineCMD._pool.length > 0 ? SetDefineCMD._pool.pop() : new SetDefineCMD();\n        cmd._setRenderDefineCMD.dest = shaderData;\n        cmd._setRenderDefineCMD.add = addDefine;\n        cmd._setRenderDefineCMD.define = define;\n        cmd._commandBuffer = commandBuffer;\n        return cmd;\n    }\n    constructor() {\n        super();\n        this._setRenderDefineCMD = Laya3DRender.Render3DPassFactory.createSetShaderDefineCMD();\n    }\n    getRenderCMD() {\n        return this._setRenderDefineCMD;\n    }\n    recover() {\n        SetDefineCMD._pool.push(this);\n    }\n}\nSetDefineCMD._pool = [];\n","import { Command } from \"./Command\";\nimport { MeshRenderer } from \"../../../core/MeshRenderer\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { RenderContext3D } from \"../RenderContext3D\";\nexport class DrawMeshCMD extends Command {\n    static create(mesh, matrix, material, subMeshIndex, subShaderIndex, commandBuffer) {\n        var cmd;\n        cmd = DrawMeshCMD._pool.length > 0 ? DrawMeshCMD._pool.pop() : new DrawMeshCMD();\n        cmd._matrix = matrix;\n        cmd._transform.worldMatrix = cmd._matrix;\n        cmd.material = material;\n        cmd.subMeshIndex = subMeshIndex;\n        cmd._subShaderIndex = subShaderIndex;\n        cmd.mesh = mesh;\n        cmd._commandBuffer = commandBuffer;\n        return cmd;\n    }\n    get subMeshIndex() {\n        return this._subMeshIndex;\n    }\n    set subMeshIndex(value) {\n        this._subMeshIndex = value;\n        this._drawRenderCMDDData.subMeshIndex = value;\n    }\n    constructor() {\n        super();\n        this._drawRenderCMDDData = Laya3DRender.Render3DPassFactory.createDrawNodeCMDData();\n        this._transform = Laya3DRender.Render3DModuleDataFactory.createTransform(null);\n        this._meshRender = new MeshRenderer();\n    }\n    set material(value) {\n        this._material && this._material._removeReference(1);\n        this._material = value;\n        this._material && this._material._addReference(1);\n    }\n    get material() {\n        return this._material;\n    }\n    set mesh(value) {\n        if (this._mesh == value)\n            return;\n        this._mesh = value;\n        this._meshRender._onMeshChange(this._mesh);\n        this._renderElemnts = this._meshRender._renderElements;\n        this._renderElemnts.forEach(element => {\n            element.material = this._material;\n            element.setTransform(this._transform);\n            element.renderSubShader = this._material._shader.getSubShaderAt(this._subShaderIndex);\n            element._subShaderIndex = this._subShaderIndex;\n        });\n    }\n    getRenderCMD() {\n        return this._drawRenderCMDDData;\n    }\n    run() {\n        this._meshRender.sharedMaterial = this.material;\n        this._meshRender._baseRenderNode.transform = this._transform;\n        this._meshRender.renderUpdate(RenderContext3D._instance);\n        this._meshRender.probReflection = RenderContext3D._instance.scene.sceneReflectionProb;\n        this._drawRenderCMDDData.destSubShader = this.material.shader.getSubShaderAt(this._subShaderIndex);\n        this._drawRenderCMDDData.destShaderData = this.material.shaderData;\n        this._drawRenderCMDDData.node = this._meshRender._baseRenderNode;\n    }\n    recover() {\n        DrawMeshCMD._pool.push(this);\n        super.recover();\n        this._material && (this.material = null);\n        this._mesh && (this.mesh = null);\n    }\n    destroy() {\n        super.destroy();\n        this._renderElemnts.forEach(element => {\n            element.destroy();\n        });\n        this._material && this._material._removeReference(1);\n        this._material = null;\n        this._renderElemnts = null;\n        this._transform = null;\n        this._material = null;\n        this._matrix = null;\n    }\n}\nDrawMeshCMD._pool = [];\n","import { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { Command } from \"./Command\";\nexport class DrawRenderCMD extends Command {\n    static create(render, material, subMeshIndex, commandBuffer) {\n        var cmd;\n        cmd = DrawRenderCMD._pool.length > 0 ? DrawRenderCMD._pool.pop() : new DrawRenderCMD();\n        cmd.render = render;\n        cmd.material = material;\n        cmd.subMeshIndex = subMeshIndex;\n        cmd._commandBuffer = commandBuffer;\n        return cmd;\n    }\n    get render() {\n        return this._render;\n    }\n    set render(render) {\n        this._drawNodeCMDData.node = render._baseRenderNode;\n        this._render = render;\n    }\n    get material() {\n        return this._material;\n    }\n    set material(value) {\n        this._material && this._material._removeReference(1);\n        if (value) {\n            value._addReference(1);\n            this._drawNodeCMDData.destShaderData = value.shaderData;\n            this._drawNodeCMDData.destSubShader = value.shader.getSubShaderAt(0);\n        }\n        else {\n            this._drawNodeCMDData.destShaderData = null;\n            this._drawNodeCMDData.destSubShader = null;\n        }\n        this._material = value;\n    }\n    get subMeshIndex() {\n        return this._subMeshIndex;\n    }\n    set subMeshIndex(value) {\n        this._subMeshIndex = value;\n        this._drawNodeCMDData.subMeshIndex = value;\n    }\n    constructor() {\n        super();\n        this._drawNodeCMDData = Laya3DRender.Render3DPassFactory.createDrawNodeCMDData();\n    }\n    getRenderCMD() {\n        return this._drawNodeCMDData;\n    }\n    run() {\n        if (this.render) {\n            this.render.renderUpdate(this._context);\n            this._prematerial = this.render.sharedMaterials[this.subMeshIndex];\n        }\n    }\n    recover() {\n        DrawRenderCMD._pool.push(this);\n        super.recover();\n        this.material = null;\n        this.render.sharedMaterials[this.subMeshIndex] = this._prematerial;\n        this._render = null;\n        this.subMeshIndex = 0;\n    }\n    destroy() {\n        super.destroy();\n        this.material = null;\n    }\n}\nDrawRenderCMD._pool = [];\n","import { Command } from \"./Command\";\nimport { RenderContext3D } from \"../RenderContext3D\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { SetShaderDataCMD } from \"./SetShaderDataCMD\";\nexport class SetGlobalShaderDataCMD extends Command {\n    static create(nameID, value, shaderDataType, commandBuffer) {\n        let context = RenderContext3D._instance;\n        let shaderData = context._contextOBJ.globalShaderData;\n        if (!shaderData)\n            shaderData = context._contextOBJ.globalShaderData = LayaGL.renderDeviceFactory.createShaderData(null);\n        var cmd = SetShaderDataCMD.create(shaderData, nameID, value, shaderDataType, commandBuffer);\n        return cmd;\n    }\n}\n","import { DrawType } from \"../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { GeometryElement } from \"../core/GeometryElement\";\nexport class MeshInstanceGeometry extends GeometryElement {\n    constructor(subMesh) {\n        super(subMesh ? subMesh._geometryElementOBj.mode : MeshTopology.Triangles, DrawType.DrawElementInstance);\n        this._subMesh = subMesh;\n        if (subMesh)\n            this.indexFormat = subMesh._mesh.indexFormat;\n    }\n    set subMesh(value) {\n        this._subMesh = value;\n        if (value)\n            this.indexFormat = value._mesh.indexFormat;\n        this.mode = value._geometryElementOBj.mode;\n    }\n    get subMesh() {\n        return this._subMesh;\n    }\n    _updateRenderParams(state) {\n        this.clearRenderParams();\n        let byteCount;\n        switch (this.indexFormat) {\n            case IndexFormat.UInt32:\n                byteCount = 4;\n                break;\n            case IndexFormat.UInt16:\n                byteCount = 2;\n                break;\n            case IndexFormat.UInt8:\n                byteCount = 1;\n                break;\n        }\n        this.setDrawElemenParams(this._subMesh.indexCount, this._subMesh._indexStart * byteCount);\n    }\n}\n","import { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Command } from \"./Command\";\nimport { RenderElement } from \"../RenderElement\";\nimport { MeshInstanceGeometry } from \"../../../graphics/MeshInstanceGeometry\";\nimport { RenderContext3D } from \"../RenderContext3D\";\nimport { BaseRender } from \"../../../core/render/BaseRender\";\nimport { MeshSprite3DShaderDeclaration } from \"../../MeshSprite3DShaderDeclaration\";\nimport { Camera } from \"../../Camera\";\nimport { BufferState } from \"../../../../webgl/utils/BufferState\";\nimport { VertexMesh } from \"../../../../RenderEngine/RenderShader/VertexMesh\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nexport class DrawMeshInstancedCMD extends Command {\n    static create(mesh, subMeshIndex, matrixs, material, subShaderIndex, instanceProperty, drawnums, commandBuffer) {\n        var cmd;\n        if ((matrixs && matrixs.length > DrawMeshInstancedCMD.maxInstanceCount) || drawnums > DrawMeshInstancedCMD.maxInstanceCount) {\n            throw \"the number of renderings exceeds the maximum number of merges\";\n        }\n        cmd = DrawMeshInstancedCMD._pool.length > 0 ? DrawMeshInstancedCMD._pool.pop() : new DrawMeshInstancedCMD();\n        cmd._matrixs = matrixs;\n        cmd.material = material;\n        cmd._subMeshIndex = subMeshIndex;\n        cmd._subShaderIndex = subShaderIndex;\n        cmd._commandBuffer = commandBuffer;\n        cmd._instanceProperty = instanceProperty;\n        cmd._drawnums = drawnums;\n        cmd.mesh = mesh;\n        matrixs && cmd._updateWorldMatrixBuffer();\n        cmd._setInstanceBuffer();\n        return cmd;\n    }\n    constructor() {\n        super();\n        this._subShaderIndex = 0;\n        this._transform = Laya3DRender.Render3DModuleDataFactory.createTransform(null);\n        this._instanceRenderElementArray = [];\n        this._instanceGeometryArray = [];\n        this._instanceWorldMatrixData = new Float32Array(DrawMeshInstancedCMD.maxInstanceCount * 20);\n        this._instanceWorldMatrixBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(this._instanceWorldMatrixData.length * 4, BufferUsage.Dynamic, false);\n        this._instanceWorldMatrixBuffer.vertexDeclaration = VertexMesh.instanceWorldMatrixDeclaration;\n        this._instanceWorldMatrixBuffer.instanceBuffer = true;\n        this._render = new BaseRender();\n        this._render._baseRenderNode.shaderData.addDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE);\n        this._instanceBufferState = new BufferState();\n        this._drawElementCMDData = Laya3DRender.Render3DPassFactory.createDrawElementCMDData();\n    }\n    set material(value) {\n        this._material && this._material._removeReference(1);\n        this._material = value;\n        this._material && this._material._addReference(1);\n    }\n    get bufferState() {\n        return this._instanceWorldMatrixBuffer;\n    }\n    get mesh() {\n        return this._mesh;\n    }\n    set mesh(value) {\n        if (this._mesh == value)\n            return;\n        BaseRender.changeVertexDefine(this._mesh, value, this._render._baseRenderNode.shaderData);\n        this._mesh = value;\n        if (!this._mesh)\n            return;\n        let submeshs = this._mesh._subMeshes;\n        if (this._subMeshIndex == -1) {\n            for (let i = 0, n = submeshs.length; i < n; i++) {\n                let element = this._instanceRenderElementArray[i] = this._instanceRenderElementArray[i] ? this._instanceRenderElementArray[i] : new RenderElement();\n                let geometry = this._instanceGeometryArray[i] = this._instanceGeometryArray[i] ? this._instanceGeometryArray[i] : new MeshInstanceGeometry(submeshs[i]);\n                element.setGeometry(geometry);\n                element.transform = this._transform;\n                element.material = this._material;\n                element._subShaderIndex = this._subShaderIndex;\n                element.render = this._render;\n                element._renderElementOBJ.owner = this._render._baseRenderNode;\n                geometry.bufferState = this._instanceBufferState;\n                geometry.instanceCount = this._drawnums;\n            }\n        }\n        else {\n            let element = this._instanceRenderElementArray[0] = this._instanceRenderElementArray[0] ? this._instanceRenderElementArray[0] : new RenderElement();\n            let geometry = this._instanceGeometryArray[0] = this._instanceGeometryArray[0] ? this._instanceGeometryArray[0] : new MeshInstanceGeometry(submeshs[this._subMeshIndex]);\n            element.setGeometry(geometry);\n            element.transform = this._transform;\n            element.material = this._material;\n            element.render = this._render;\n            geometry.bufferState = this._instanceBufferState;\n            geometry.instanceCount = this._drawnums;\n            element._renderElementOBJ.owner = this._render._baseRenderNode;\n        }\n    }\n    _setInstanceBuffer() {\n        let instanceBufferState = this._instanceBufferState;\n        let vertexArray = [];\n        let meshVertexBuffer = this._mesh._bufferState._vertexBuffers;\n        meshVertexBuffer.forEach(element => {\n            vertexArray.push(element);\n        });\n        vertexArray.push(this._instanceWorldMatrixBuffer);\n        let propertyMap = this._instanceProperty._propertyMap;\n        for (let i in propertyMap) {\n            vertexArray.push(propertyMap[i]._vertexBuffer);\n        }\n        instanceBufferState.applyState(vertexArray, this._mesh._indexBuffer);\n        this._instanceGeometryArray.forEach(element => {\n            element.bufferState = instanceBufferState;\n        });\n    }\n    _updateWorldMatrixBuffer() {\n        let worldMatrixData = this._instanceWorldMatrixData;\n        let count = this._drawnums;\n        for (let i = 0; i < count; i++) {\n            worldMatrixData.set(this._matrixs[i].elements, i * 20);\n        }\n        let worldBuffer = this._instanceWorldMatrixBuffer;\n        worldBuffer.setData(worldMatrixData.buffer, 0, 0, count * 80);\n    }\n    setWorldMatrix(worldMatrixArray) {\n        if (worldMatrixArray.length < this._drawnums)\n            throw \"worldMatrixArray length is less then drawnums\";\n        this._matrixs = worldMatrixArray;\n        this._matrixs && this._updateWorldMatrixBuffer();\n    }\n    setDrawNums(drawNums) {\n        if (this._matrixs && this._matrixs.length < drawNums)\n            throw \"worldMatrixArray length is less then drawnums\";\n        this._drawnums = drawNums;\n        let submeshs = this._mesh._subMeshes;\n        if (this._subMeshIndex == -1) {\n            for (let i = 0, n = submeshs.length; i < n; i++) {\n                let geometry = this._instanceGeometryArray[i] ? this._instanceGeometryArray[i] : new MeshInstanceGeometry(submeshs[i]);\n                geometry.instanceCount = this._drawnums;\n            }\n        }\n        else {\n            let geometry = this._instanceGeometryArray[0] ? this._instanceGeometryArray[0] : new MeshInstanceGeometry(submeshs[0]);\n            geometry.instanceCount = this._drawnums;\n        }\n        this._matrixs && this._updateWorldMatrixBuffer();\n    }\n    getRenderCMD() {\n        return this._drawElementCMDData;\n    }\n    renderUpdateElement(renderElement, context) {\n        let renderObj = renderElement._renderElementOBJ;\n        renderObj.isRender = renderElement._geometry._prepareRender(context);\n        renderElement._geometry._updateRenderParams(context);\n        return renderObj;\n    }\n    run() {\n        let context = RenderContext3D._instance;\n        context._contextOBJ.cameraUpdateMask = Camera._updateMark;\n        let propertyMap = this._instanceProperty._propertyMap;\n        for (let i in propertyMap) {\n            propertyMap[i].updateVertexBufferData(this._drawnums);\n        }\n        let submeshs = this.mesh._subMeshes;\n        if (this._subMeshIndex == -1) {\n            let arrayElement = [];\n            for (let i = 0, n = submeshs.length; i < n; i++) {\n                let renderElement = this._instanceRenderElementArray[i];\n                let renderObj = this.renderUpdateElement(renderElement, context);\n                arrayElement.push(renderObj);\n            }\n            this._drawElementCMDData.setRenderelements(arrayElement);\n        }\n        else {\n            let renderElement = this._instanceRenderElementArray[this._subMeshIndex];\n            let renderObj = this.renderUpdateElement(renderElement, context);\n            this._drawElementCMDData.setRenderelements([renderObj]);\n        }\n    }\n    recover() {\n        DrawMeshInstancedCMD._pool.push(this);\n        super.recover();\n        this._material && this._material._removeReference(1);\n        this._material = null;\n        this._instanceBufferState.destroy();\n        this._instanceBufferState = null;\n        delete this._instanceRenderElementArray;\n        this._instanceRenderElementArray = [];\n        delete this._instanceGeometryArray;\n        this._instanceGeometryArray = [];\n        this.mesh = null;\n    }\n    destroy() {\n        super.destroy();\n        this._material && this._material._removeReference(1);\n        this._material = null;\n        this._instanceBufferState.destroy();\n        this._instanceBufferState = null;\n        delete this._instanceRenderElementArray;\n        this._instanceRenderElementArray = [];\n        delete this._instanceGeometryArray;\n        this._instanceGeometryArray = [];\n        this.mesh = null;\n    }\n}\nDrawMeshInstancedCMD._pool = [];\nDrawMeshInstancedCMD.maxInstanceCount = 1024;\n","import { Command } from \"./Command\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { RenderClearFlag } from \"../../../../RenderEngine/RenderEnum/RenderClearFlag\";\nexport class SetRTCMD extends Command {\n    static create(renderTexture, clearColor, clearDepth, clearStencil, backgroundColor, depth = 1, stencil = 0, commandBuffer) {\n        var cmd;\n        cmd = SetRTCMD._pool.length > 0 ? SetRTCMD._pool.pop() : new SetRTCMD();\n        cmd.renderTexture = renderTexture;\n        let clearflag = 0;\n        if (clearColor) {\n            clearflag |= RenderClearFlag.Color;\n            cmd._setRenderTargetCMD.clearColorValue = backgroundColor;\n        }\n        if (clearDepth) {\n            clearflag |= RenderClearFlag.Depth;\n            cmd._setRenderTargetCMD.clearDepthValue = depth;\n        }\n        if (clearStencil) {\n            clearflag |= RenderClearFlag.Stencil;\n            cmd._setRenderTargetCMD.clearStencilValue = stencil;\n        }\n        cmd._setRenderTargetCMD.clearFlag = clearflag;\n        return cmd;\n    }\n    get renderTexture() {\n        return this._renderTexture;\n    }\n    set renderTexture(value) {\n        this._renderTexture = value;\n        this._setRenderTargetCMD.rt = value._renderTarget;\n    }\n    constructor() {\n        super();\n        this._renderTexture = null;\n        this._setRenderTargetCMD = Laya3DRender.Render3DPassFactory.createSetRenderTargetCMD();\n    }\n    getRenderCMD() {\n        return this._setRenderTargetCMD;\n    }\n    recover() {\n        SetRTCMD._pool.push(this);\n        this._renderTexture = null;\n    }\n}\nSetRTCMD._pool = [];\n","import { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { Command } from \"./Command\";\nexport class DrawRenderElementCMD extends Command {\n    static create(renderElement) {\n        var cmd;\n        cmd = DrawRenderElementCMD._pool.length > 0 ? DrawRenderElementCMD._pool.pop() : new DrawRenderElementCMD();\n        cmd.renderElement = renderElement;\n        return cmd;\n    }\n    get renderElement() {\n        return this._renderElement;\n    }\n    set renderElement(value) {\n        this._renderElement = value;\n        this._drawElementCMDData.setRenderelements([this._renderElement._renderElementOBJ]);\n    }\n    constructor() {\n        super();\n        this._drawElementCMDData = Laya3DRender.Render3DPassFactory.createDrawElementCMDData();\n    }\n    recover() {\n        super.recover();\n        DrawRenderElementCMD._pool.push(this);\n    }\n    getRenderCMD() {\n        return this._drawElementCMDData;\n    }\n    destroy() {\n        this._renderElement = null;\n        this._drawElementCMDData = null;\n    }\n}\nDrawRenderElementCMD._pool = [];\n","import { BlitScreenQuadCMD } from \"./BlitScreenQuadCMD\";\nimport { SetDefineCMD, SetShaderDataCMD } from \"./SetShaderDataCMD\";\nimport { DrawMeshCMD } from \"./DrawMeshCMD\";\nimport { DrawRenderCMD } from \"./DrawRenderCMD\";\nimport { SetGlobalShaderDataCMD } from \"./SetGlobalShaderDataCMD\";\nimport { DrawMeshInstancedCMD } from \"./DrawMeshInstancedCMD\";\nimport { RenderCapable } from \"../../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { Stat } from \"../../../../utils/Stat\";\nimport { Color } from \"../../../../maths/Color\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { SetRTCMD } from \"./SetRenderTargetCMD\";\nimport { DrawRenderElementCMD } from \"./DrawRenderElemenetCMD\";\nexport class CommandBuffer {\n    constructor(name = null, shadowCaster = false) {\n        this._shadow = false;\n        this._camera = null;\n        this._commands = [];\n        this._renderCMDs = [];\n        this._name = name;\n        this._shadow = shadowCaster;\n    }\n    get name() {\n        return this._name;\n    }\n    get casterShadow() {\n        return this._shadow;\n    }\n    get context() {\n        return this._context;\n    }\n    set context(value) {\n        this._context = value;\n    }\n    _apply(render = false) {\n        for (var i = 0, n = this._commands.length; i < n; i++) {\n            let cmd = this._commands[i];\n            cmd.run && cmd.run();\n        }\n        render && this.context._contextOBJ.runCMDList(this._renderCMDs);\n        Stat.cmdDrawCall += this._renderCMDs.length;\n    }\n    _applyOne() {\n        if (this._commands.length) {\n            var cmd = this._commands.shift();\n            cmd.run && cmd.run();\n            cmd.getRenderCMD && this.context._contextOBJ.runOneCMD(this._renderCMDs.shift());\n            cmd.recover();\n        }\n        return this._commands.length > 0;\n    }\n    getCommandsSize() {\n        return this._commands.length;\n    }\n    setShaderDataTexture(shaderData, nameID, source) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, source, ShaderDataType.Texture2D, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalTexture(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Texture2D, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDataColor(shaderData, nameID, value) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, value, ShaderDataType.Color, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalColor(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Color, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDataVector(shaderData, nameID, value) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, value, ShaderDataType.Vector4, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalVector(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Vector4, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDataVector3(shaderData, nameID, value) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, value, ShaderDataType.Vector3, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalVector3(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Vector3, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDataVector2(shaderData, nameID, value) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, value, ShaderDataType.Vector2, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalVector2(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Vector2, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDataNumber(shaderData, nameID, value) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, value, ShaderDataType.Float, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalNumber(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Float, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDataInt(shaderData, nameID, value) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, value, ShaderDataType.Int, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalInt(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Int, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDataMatrix(shaderData, nameID, value) {\n        let cmd = SetShaderDataCMD.create(shaderData, nameID, value, ShaderDataType.Matrix4x4, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setShaderDefine(shaderData, define, value) {\n        let cmd = SetDefineCMD.create(shaderData, define, value, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setGlobalMatrix(nameID, source) {\n        let cmd = SetGlobalShaderDataCMD.create(nameID, source, ShaderDataType.Matrix4x4, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    blitScreenQuad(source, dest, offsetScale = null, shader = null, shaderData = null, subShader = 0) {\n        let cmd = BlitScreenQuadCMD.create(source, dest, offsetScale, shader, shaderData, subShader, BlitScreenQuadCMD._SCREENTYPE_QUAD, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    blitScreenQuadByMaterial(source, dest, offsetScale = null, material = null, subShader = 0) {\n        var shader;\n        var shaderData;\n        if (material) {\n            shader = material._shader;\n            shaderData = material.shaderData;\n        }\n        let cmd = BlitScreenQuadCMD.create(source, dest, offsetScale, shader, shaderData, subShader, BlitScreenQuadCMD._SCREENTYPE_QUAD, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    blitScreenTriangle(source, dest, offsetScale = null, shader = null, shaderData = null, subShader = 0) {\n        let cmd = BlitScreenQuadCMD.create(source, dest, offsetScale, shader, shaderData, subShader, BlitScreenQuadCMD._SCREENTYPE_TRIANGLE, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    setRenderTarget(renderTexture, clearColor, clearDepth, backgroundColor = Color.BLACK, depth = 1) {\n        let cmd = SetRTCMD.create(renderTexture, clearColor, clearDepth, false, backgroundColor, depth, 0, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    drawMesh(mesh, matrix, material, submeshIndex, subShaderIndex) {\n        let cmd = DrawMeshCMD.create(mesh, matrix, material, submeshIndex, subShaderIndex, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    drawRender(render, material, subMeshIndex = 0) {\n        let cmd = DrawRenderCMD.create(render, material, subMeshIndex, this);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    drawRenderElement(renderElement) {\n        let cmd = DrawRenderElementCMD.create(renderElement);\n        this._commands.push(cmd);\n        cmd.getRenderCMD && this._renderCMDs.push(cmd.getRenderCMD());\n    }\n    drawMeshInstance(mesh, subMeshIndex = 0, matrixs, material, subShaderIndex = 0, instanceProperty, drawnums) {\n        if (!LayaGL.renderEngine.getCapable(RenderCapable.DrawElement_Instance))\n            return null;\n        var drawMeshInstancedCMD = DrawMeshInstancedCMD.create(mesh, subMeshIndex, matrixs, material, subShaderIndex, instanceProperty, drawnums, this);\n        this._commands.push(drawMeshInstancedCMD);\n        drawMeshInstancedCMD.getRenderCMD && this._renderCMDs.push(drawMeshInstancedCMD.getRenderCMD());\n        return drawMeshInstancedCMD;\n    }\n    addCustomCMD(command) {\n        command._commandBuffer = this;\n        this._commands.push(command);\n        command.getRenderCMD && this._renderCMDs.push(command.getRenderCMD());\n    }\n    clear() {\n        for (var i = 0, n = this._commands.length; i < n; i++)\n            this._commands[i].recover();\n        this._commands.length = 0;\n        this._renderCMDs.length = 0;\n    }\n}\n","import { Config3D } from \"../../../Config3D\";\nimport { Event } from \"../../events/Event\";\nimport { DepthPass } from \"../depthMap/DepthPass\";\nimport { BoundFrustum } from \"../math/BoundFrustum\";\nimport { Picker } from \"../utils/Picker\";\nimport { BaseCamera } from \"./BaseCamera\";\nimport { CommandBuffer } from \"./render/command/CommandBuffer\";\nimport { RenderContext3D } from \"./render/RenderContext3D\";\nimport { Scene3D } from \"./scene/Scene3D\";\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\nimport { RenderTargetFormat } from \"../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { RenderCapable } from \"../../RenderEngine/RenderEnum/RenderCapable\";\nimport { ILaya } from \"../../../ILaya\";\nimport { TextureCube } from \"../../resource/TextureCube\";\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\nimport { Texture2D } from \"../../resource/Texture2D\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Quaternion } from \"../../maths/Quaternion\";\nimport { Vector2 } from \"../../maths/Vector2\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { DepthTextureMode, RenderTexture } from \"../../resource/RenderTexture\";\nimport { Stat } from \"../../utils/Stat\";\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nimport { Transform3D } from \"./Transform3D\";\nimport { Cluster } from \"../graphics/renderPath/Cluster\";\nimport { Viewport } from \"../../maths/Viewport\";\nimport { RenderPassStatisticsInfo } from \"../../RenderEngine/RenderEnum/RenderStatInfo\";\nexport var CameraClearFlags;\n(function (CameraClearFlags) {\n    CameraClearFlags[CameraClearFlags[\"SolidColor\"] = 0] = \"SolidColor\";\n    CameraClearFlags[CameraClearFlags[\"Sky\"] = 1] = \"Sky\";\n    CameraClearFlags[CameraClearFlags[\"DepthOnly\"] = 2] = \"DepthOnly\";\n    CameraClearFlags[CameraClearFlags[\"Nothing\"] = 3] = \"Nothing\";\n    CameraClearFlags[CameraClearFlags[\"ColorOnly\"] = 4] = \"ColorOnly\";\n})(CameraClearFlags || (CameraClearFlags = {}));\nexport var CameraEventFlags;\n(function (CameraEventFlags) {\n    CameraEventFlags[CameraEventFlags[\"BeforeForwardOpaque\"] = 0] = \"BeforeForwardOpaque\";\n    CameraEventFlags[CameraEventFlags[\"BeforeSkyBox\"] = 2] = \"BeforeSkyBox\";\n    CameraEventFlags[CameraEventFlags[\"BeforeTransparent\"] = 4] = \"BeforeTransparent\";\n    CameraEventFlags[CameraEventFlags[\"BeforeImageEffect\"] = 6] = \"BeforeImageEffect\";\n    CameraEventFlags[CameraEventFlags[\"AfterEveryThing\"] = 8] = \"AfterEveryThing\";\n})(CameraEventFlags || (CameraEventFlags = {}));\nexport class Camera extends BaseCamera {\n    static get _updateMark() {\n        return RenderContext3D._instance._contextOBJ.cameraUpdateMask;\n    }\n    static set _updateMark(value) {\n        RenderContext3D._instance._contextOBJ.cameraUpdateMask = value;\n    }\n    static drawRenderTextureByScene(camera, scene, renderTexture) {\n        if (!renderTexture)\n            return null;\n        Scene3D._updateMark++;\n        if (!scene.parent)\n            scene._update();\n        else {\n            scene.sceneRenderableManager.renderUpdate();\n            scene.skyRenderer.renderUpdate(RenderContext3D._instance);\n        }\n        scene._prepareSceneToRender();\n        scene._setCullCamera(camera);\n        let recoverTexture = camera.renderTarget;\n        camera.renderTarget = renderTexture;\n        let originScene = camera.scene;\n        camera._scene = scene;\n        camera.render(scene);\n        camera.renderTarget = recoverTexture;\n        scene.recaculateCullCamera();\n        scene._componentDriver.callPostRender();\n        camera._aftRenderMainPass();\n        camera._scene = originScene;\n        return renderTexture;\n    }\n    static getTexturePixel(texture) {\n        let coverFilter = texture.filterMode;\n        texture.filterMode = FilterMode.Point;\n        let rtFormat = RenderTargetFormat.R8G8B8;\n        let pixelData;\n        let size = texture.width * texture.height;\n        switch (texture.format) {\n            case TextureFormat.R32G32B32A32:\n            case TextureFormat.R16G16B16A16:\n                rtFormat = RenderTargetFormat.R32G32B32A32;\n                pixelData = new Float32Array(size * 4);\n                break;\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R16G16B16:\n                rtFormat = RenderTargetFormat.R32G32B32;\n                pixelData = new Float32Array(size * 3);\n                break;\n            case TextureFormat.R5G6B5:\n            case TextureFormat.R8G8B8:\n                rtFormat = RenderTargetFormat.R8G8B8;\n                pixelData = new Uint8Array(size * 3);\n                break;\n            default:\n                rtFormat = RenderTargetFormat.R8G8B8A8;\n                pixelData = new Uint8Array(size * 4);\n                break;\n        }\n        let rt = RenderTexture.createFromPool(texture.width, texture.height, rtFormat, RenderTargetFormat.None, false, 0, false);\n        let cmd = new CommandBuffer();\n        cmd.blitScreenQuad(texture, rt);\n        cmd.context = RenderContext3D._instance;\n        cmd._applyOne();\n        texture.filterMode = coverFilter;\n        rt.getData(0, 0, texture.width, texture.height, pixelData);\n        rt.destroy();\n        return pixelData;\n    }\n    static getTexturePixelAsync(texture) {\n        let coverFilter = texture.filterMode;\n        texture.filterMode = FilterMode.Point;\n        let rtFormat = RenderTargetFormat.R8G8B8;\n        let pixelData;\n        let size = texture.width * texture.height;\n        switch (texture.format) {\n            case TextureFormat.R32G32B32A32:\n            case TextureFormat.R16G16B16A16:\n                rtFormat = RenderTargetFormat.R32G32B32A32;\n                pixelData = new Float32Array(size * 4);\n                break;\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R16G16B16:\n                rtFormat = RenderTargetFormat.R32G32B32;\n                pixelData = new Float32Array(size * 3);\n                break;\n            case TextureFormat.R5G6B5:\n            case TextureFormat.R8G8B8:\n                rtFormat = RenderTargetFormat.R8G8B8;\n                pixelData = new Uint8Array(size * 3);\n                break;\n            default:\n                rtFormat = RenderTargetFormat.R8G8B8A8;\n                pixelData = new Uint8Array(size * 4);\n                break;\n        }\n        let rt = RenderTexture.createFromPool(texture.width, texture.height, rtFormat, RenderTargetFormat.None, false, 0, false);\n        let cmd = new CommandBuffer();\n        cmd.blitScreenQuad(texture, rt);\n        cmd.context = RenderContext3D._instance;\n        cmd._applyOne();\n        texture.filterMode = coverFilter;\n        const pd = rt.getDataAsync(0, 0, texture.width, texture.height, pixelData);\n        rt.destroy();\n        return pd;\n    }\n    static drawTextureCubePixelByScene(camera, scene, renderCubeSize, format, cullingMask) {\n        let rtFormat = RenderTargetFormat.R8G8B8;\n        let pixelData;\n        let size = renderCubeSize * renderCubeSize;\n        let bytelength;\n        switch (format) {\n            case TextureFormat.R32G32B32A32:\n            case TextureFormat.R16G16B16A16:\n                rtFormat = RenderTargetFormat.R32G32B32A32;\n                size *= 4;\n                bytelength = 4;\n                break;\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R16G16B16:\n                rtFormat = RenderTargetFormat.R32G32B32;\n                size *= 3;\n                bytelength = 4;\n                break;\n            case TextureFormat.R5G6B5:\n            case TextureFormat.R8G8B8:\n                rtFormat = RenderTargetFormat.R8G8B8;\n                size *= 3;\n                bytelength = 1;\n                break;\n            case TextureFormat.R8G8B8A8:\n                rtFormat = RenderTargetFormat.R8G8B8A8;\n                pixelData = new Uint8Array(size * 4);\n                size *= 4;\n                bytelength = 1;\n                break;\n            default:\n                throw new Error(\"Type is not supported\");\n        }\n        let rt = new RenderTexture(renderCubeSize, renderCubeSize, rtFormat, RenderTargetFormat.DEPTH_16, false, 0, false, false);\n        camera.fieldOfView = 90;\n        camera.cullingMask = cullingMask;\n        let pixels = [];\n        let quaterionArray = [\n            new Quaternion(0, 1, 0, 0),\n            new Quaternion(0, 0, 0, 1),\n            new Quaternion(0, 0.7071068, 0, 0.7071068),\n            new Quaternion(0, 0.7071068, 0, -0.7071068),\n            new Quaternion(0, 0.7071068, -0.7071068, 0),\n            new Quaternion(0, -0.7071068, -0.7071068, 0),\n        ];\n        for (var i = 0; i < 6; i++) {\n            camera.transform.rotation = quaterionArray[i];\n            this.drawRenderTextureByScene(camera, scene, rt);\n            if (bytelength == 4)\n                pixelData = new Float32Array(size);\n            else\n                pixelData = new Uint8Array(size);\n            pixels[i] = rt.getData(0, 0, renderCubeSize, renderCubeSize, pixelData);\n        }\n        rt.destroy();\n        return pixels;\n    }\n    static drawTextureCubeByScene(camera, position, scene, renderCubeSize, format, cullingMask = 0) {\n        camera.transform.position = position;\n        let pixels = this.drawTextureCubePixelByScene(camera, scene, renderCubeSize, format, cullingMask);\n        let finalformat;\n        switch (format) {\n            case TextureFormat.R32G32B32A32:\n            case TextureFormat.R16G16B16A16:\n                finalformat = TextureFormat.R32G32B32A32;\n                break;\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R16G16B16:\n                finalformat = TextureFormat.R32G32B32;\n                break;\n            case TextureFormat.R5G6B5:\n            case TextureFormat.R8G8B8:\n                finalformat = TextureFormat.R8G8B8;\n                break;\n            case TextureFormat.R8G8B8A8:\n                finalformat = TextureFormat.R8G8B8A8;\n                break;\n            default:\n                throw new Error(\"Type is not supported\");\n        }\n        let textureCube = new TextureCube(renderCubeSize, format, true, false);\n        textureCube.setPixelsData(pixels, false, false);\n        return textureCube;\n    }\n    static __init__() {\n        Camera.depthPass = new DepthPass();\n    }\n    set nearPlane(value) {\n        super.nearPlane = value;\n        this._renderDataModule.nearplane = value;\n    }\n    get nearPlane() {\n        return this._nearPlane;\n    }\n    set farPlane(value) {\n        super.farPlane = value;\n        this._renderDataModule.farplane = value;\n    }\n    get farPlane() {\n        return this._farPlane;\n    }\n    set fieldOfView(value) {\n        super.fieldOfView = value;\n        this._renderDataModule.fieldOfView = value;\n    }\n    get fieldOfView() {\n        return this._fieldOfView;\n    }\n    get aspectRatio() {\n        if (this._aspectRatio === 0) {\n            var vp = this.viewport;\n            return vp.width / vp.height;\n        }\n        return this._aspectRatio;\n    }\n    set aspectRatio(value) {\n        if (value < 0)\n            throw new Error(\"Camera: the aspect ratio has to be a positive real number.\");\n        this._aspectRatio = value;\n        this._renderDataModule.aspectRatio = value;\n        this._calculateProjectionMatrix();\n    }\n    get viewport() {\n        if (this._offScreenRenderTexture)\n            this._calculationViewport(this._normalizedViewport, this._offScreenRenderTexture.width, this._offScreenRenderTexture.height);\n        else\n            this._calculationViewport(this._normalizedViewport, this.clientWidth, this.clientHeight);\n        return this._viewport;\n    }\n    set viewport(value) {\n        var width;\n        var height;\n        if (this._offScreenRenderTexture) {\n            width = this._offScreenRenderTexture.width;\n            height = this._offScreenRenderTexture.height;\n        }\n        else {\n            width = this.clientWidth;\n            height = this.clientHeight;\n        }\n        this._normalizedViewport.x = value.x / width;\n        this._normalizedViewport.y = value.y / height;\n        this._normalizedViewport.width = value.width / width;\n        this._normalizedViewport.height = value.height / height;\n        this._calculationViewport(this._normalizedViewport, width, height);\n        this._calculateProjectionMatrix();\n    }\n    get clientWidth() {\n        ILaya.stage.needUpdateCanvasSize();\n        if (Config3D.customResolution)\n            return Config3D.pixelRatio * Config3D._resoluWidth | 0;\n        else\n            return RenderContext3D.clientWidth * Config3D.pixelRatio | 0;\n    }\n    get clientHeight() {\n        ILaya.stage.needUpdateCanvasSize();\n        if (Config3D.customResolution)\n            return Config3D.pixelRatio * Config3D._resoluHeight | 0;\n        else\n            return RenderContext3D.clientHeight * Config3D.pixelRatio | 0;\n    }\n    set msaa(value) {\n        LayaGL.renderEngine.getCapable(RenderCapable.MSAA) ? this._msaa = value : this._msaa = false;\n    }\n    get msaa() {\n        return this._msaa && Stat.enablemsaa;\n    }\n    set fxaa(value) {\n        this._fxaa = value;\n    }\n    get fxaa() {\n        return this._fxaa;\n    }\n    get normalizedViewport() {\n        return this._normalizedViewport;\n    }\n    set normalizedViewport(value) {\n        var width;\n        var height;\n        if (this._offScreenRenderTexture) {\n            width = this._offScreenRenderTexture.width;\n            height = this._offScreenRenderTexture.height;\n        }\n        else {\n            width = this.clientWidth;\n            height = this.clientHeight;\n        }\n        if (this._normalizedViewport !== value)\n            value.cloneTo(this._normalizedViewport);\n        this._calculationViewport(value, width, height);\n        this._calculateProjectionMatrix();\n    }\n    get viewMatrix() {\n        if (this._updateViewMatrix) {\n            var scale = this.transform.getWorldLossyScale();\n            var scaleX = scale.x;\n            var scaleY = scale.y;\n            var scaleZ = scale.z;\n            var viewMatE = this._viewMatrix.elements;\n            this.transform.worldMatrix.cloneTo(this._viewMatrix);\n            viewMatE[0] /= scaleX;\n            viewMatE[1] /= scaleX;\n            viewMatE[2] /= scaleX;\n            viewMatE[4] /= scaleY;\n            viewMatE[5] /= scaleY;\n            viewMatE[6] /= scaleY;\n            viewMatE[8] /= scaleZ;\n            viewMatE[9] /= scaleZ;\n            viewMatE[10] /= scaleZ;\n            this._viewMatrix.invert(this._viewMatrix);\n            this._updateViewMatrix = false;\n            if (this.skyRenderElement._renderElementOBJ)\n                this.skyRenderElement.calculateViewMatrix(this._viewMatrix);\n        }\n        return this._viewMatrix;\n    }\n    get projectionMatrix() {\n        return this._projectionMatrix;\n    }\n    set projectionMatrix(value) {\n        this._projectionMatrix = value;\n        this._useUserProjectionMatrix = true;\n    }\n    get projectionViewMatrix() {\n        Matrix4x4.multiply(this.projectionMatrix, this.viewMatrix, this._projectionViewMatrix);\n        this._renderDataModule.setProjectionViewMatrix(this._projectionViewMatrix);\n        return this._projectionViewMatrix;\n    }\n    get boundFrustum() {\n        this._boundFrustum.matrix = this.projectionViewMatrix;\n        return this._boundFrustum;\n    }\n    get renderTarget() {\n        return this._offScreenRenderTexture;\n    }\n    set renderTarget(value) {\n        var lastValue = this._offScreenRenderTexture;\n        if (lastValue !== value) {\n            (lastValue) && (lastValue._isCameraTarget = false);\n            (value) && (value._isCameraTarget = true);\n            this._offScreenRenderTexture = value;\n            this._calculateProjectionMatrix();\n        }\n    }\n    get postProcess() {\n        return this._postProcess;\n    }\n    set postProcess(value) {\n        this._postProcess = value;\n    }\n    get enableHDR() {\n        return this._enableHDR;\n    }\n    set enableHDR(value) {\n        if (value && !LayaGL.renderEngine.getCapable(RenderCapable.RenderTextureFormat_R16G16B16A16)) {\n            console.warn(\"Camera:can't enable HDR in this device.\");\n            return;\n        }\n        this._enableHDR = value;\n    }\n    get enableBuiltInRenderTexture() {\n        return this._needBuiltInRenderTexture;\n    }\n    set enableBuiltInRenderTexture(value) {\n        this._needBuiltInRenderTexture = value;\n    }\n    get depthTextureMode() {\n        return this._depthTextureMode;\n    }\n    set depthTextureMode(value) {\n        this._depthTextureMode = value;\n        if (!LayaGL.renderEngine.getCapable(RenderCapable.RenderTextureFormat_Depth)) {\n            this._depthTextureMode &= ~DepthTextureMode.Depth;\n        }\n    }\n    set opaquePass(value) {\n        if (value == this._opaquePass)\n            return;\n        if (!value) {\n            this._shaderValues.setTexture(BaseCamera.OPAQUETEXTURE, Texture2D.blackTexture);\n            this._shaderValues.setVector(BaseCamera.OPAQUETEXTUREPARAMS, Vector4.ONE);\n            this._opaqueTexture && RenderTexture.recoverToPool(this._opaqueTexture);\n            this._opaqueTexture = null;\n        }\n        this._opaquePass = value;\n    }\n    get opaquePass() {\n        return this._opaquePass;\n    }\n    get depthTextureFormat() {\n        return this._depthTextureFormat;\n    }\n    set depthTextureFormat(value) {\n        this._depthTextureFormat = value;\n    }\n    set enableBlitDepth(value) {\n        if (value == this._canBlitDepth)\n            return;\n        this._canBlitDepth = value;\n        this._cacheDepth = value;\n        this._internalRenderTexture && RenderTexture.recoverToPool(this._internalRenderTexture);\n        this._internalRenderTexture = RenderTexture.createFromPool(this.viewport.width, this.viewport.height, this._getRenderTextureFormat(), this.depthTextureFormat, false, this.msaa ? 4 : 1, this._canBlitDepth, this._needRenderGamma(this._getRenderTextureFormat()));\n        if (!value) {\n            if (this._cacheDepthTexture)\n                this._cacheDepthTexture._inPool ? 0 : RenderTexture.recoverToPool(this._cacheDepthTexture);\n        }\n    }\n    get enableBlitDepth() {\n        return this._canBlitDepth;\n    }\n    get canblitDepth() {\n        return this._canBlitDepth && this._internalRenderTexture && this._internalRenderTexture.depthStencilFormat != null;\n    }\n    constructor(aspectRatio = 0, nearPlane = 0.3, farPlane = 1000) {\n        super(nearPlane, farPlane);\n        this._updateViewMatrix = true;\n        this._postProcess = null;\n        this._enableHDR = false;\n        this._viewportParams = new Vector4();\n        this._projectionParams = new Vector4();\n        this._needBuiltInRenderTexture = false;\n        this._msaa = false;\n        this._fxaa = false;\n        this._offScreenRenderTexture = null;\n        this._internalRenderTexture = null;\n        this._canBlitDepth = false;\n        this._internalCommandBuffer = new CommandBuffer();\n        this._depthTextureFormat = RenderTargetFormat.DEPTH_32;\n        this._cameraEventCommandBuffer = {};\n        this._shadowCasterCommanBuffer = [];\n        this._clusterPlaneCacheFlag = new Vector2(-1, -1);\n        this._screenOffsetScale = new Vector4();\n        this.enableRender = true;\n        this.clearFlag = CameraClearFlags.SolidColor;\n        this.opaqueTextureSize = 512;\n        this._renderDataModule = Laya3DRender.Render3DModuleDataFactory.createCameraModuleData();\n        this._Render3DProcess = Laya3DRender.Render3DPassFactory.createRender3DProcess();\n        this._renderDataModule.transform = this.transform;\n        this._viewMatrix = new Matrix4x4();\n        this._projectionMatrix = new Matrix4x4();\n        this._projectionViewMatrix = new Matrix4x4();\n        this._viewport = new Viewport(0, 0, 0, 0);\n        this._normalizedViewport = new Viewport(0, 0, 1, 1);\n        this._rayViewport = new Viewport(0, 0, 0, 0);\n        this._aspectRatio = aspectRatio;\n        this._boundFrustum = new BoundFrustum(new Matrix4x4());\n        this.depthTextureMode = 0;\n        this.opaquePass = false;\n        this._calculateProjectionMatrix();\n        ILaya.stage.on(Event.RESIZE, this, this._onScreenSizeChanged);\n        this.transform.on(Event.TRANSFORM_CHANGED, this, this._onTransformChanged);\n        this.opaquePass = false;\n        this._internalCommandBuffer.context = RenderContext3D._instance;\n        this._renderDataModule.farplane = this.farPlane;\n        this._renderDataModule.nearplane = this.nearPlane;\n        this._renderDataModule.fieldOfView = this.fieldOfView;\n        this._renderDataModule.aspectRatio = this.aspectRatio;\n    }\n    _calculationViewport(normalizedViewport, width, height) {\n        var lx = normalizedViewport.x * width;\n        var ly = normalizedViewport.y * height;\n        var rx = lx + Math.max(normalizedViewport.width * width, 0);\n        var ry = ly + Math.max(normalizedViewport.height * height, 0);\n        var ceilLeftX = Math.ceil(lx);\n        var ceilLeftY = Math.ceil(ly);\n        var floorRightX = Math.floor(rx);\n        var floorRightY = Math.floor(ry);\n        var pixelLeftX = ceilLeftX - lx >= 0.5 ? Math.floor(lx) : ceilLeftX;\n        var pixelLeftY = ceilLeftY - ly >= 0.5 ? Math.floor(ly) : ceilLeftY;\n        var pixelRightX = rx - floorRightX >= 0.5 ? Math.ceil(rx) : floorRightX;\n        var pixelRightY = ry - floorRightY >= 0.5 ? Math.ceil(ry) : floorRightY;\n        this._viewport.x = pixelLeftX;\n        this._viewport.y = pixelLeftY;\n        this._viewport.width = pixelRightX - pixelLeftX;\n        this._viewport.height = pixelRightY - pixelLeftY;\n    }\n    _calculateProjectionMatrix() {\n        if (!this._useUserProjectionMatrix) {\n            if (this._orthographic) {\n                var halfHeight = this.orthographicVerticalSize * 0.5;\n                var halfWidth = halfHeight * this.aspectRatio;\n                Matrix4x4.createOrthoOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, this.nearPlane, this.farPlane, this._projectionMatrix);\n            }\n            else {\n                Matrix4x4.createPerspective(3.1416 * this.fieldOfView / 180.0, this.aspectRatio, this.nearPlane, this.farPlane, this._projectionMatrix);\n            }\n            if (this.skyRenderElement._renderElementOBJ)\n                this.skyRenderElement.caluclateProjectionMatrix(this._projectionMatrix, this.aspectRatio, this.nearPlane, this.farPlane, this.fieldOfView, this.orthographic);\n        }\n    }\n    _isLayerVisible(layer) {\n        return (Math.pow(2, layer) & this.cullingMask) != 0;\n    }\n    _onTransformChanged(flag) {\n        flag &= Transform3D.TRANSFORM_WORLDMATRIX;\n        (flag) && (this._updateViewMatrix = true);\n    }\n    clone() {\n        let camera = super.clone();\n        camera.clearFlag = this.clearFlag;\n        this.clearColor.cloneTo(camera.clearColor);\n        camera.clearColor = camera.clearColor;\n        camera.viewport = this.viewport;\n        this.normalizedViewport.cloneTo(camera.normalizedViewport);\n        camera.enableHDR = this.enableHDR;\n        camera.farPlane = this.farPlane;\n        camera.nearPlane = this.nearPlane;\n        camera.fieldOfView = this.fieldOfView;\n        camera.orthographic = this.orthographic;\n        camera.orthographicVerticalSize = this.orthographicVerticalSize;\n        camera.opaquePass = this.opaquePass;\n        camera._cameraEventCommandBuffer = this._cameraEventCommandBuffer;\n        camera.opaquePass = this.opaquePass;\n        return camera;\n    }\n    _getCanvasWidth() {\n        if (this._offScreenRenderTexture)\n            return this._offScreenRenderTexture.width;\n        else\n            return this.clientWidth;\n    }\n    _getCanvasHeight() {\n        if (this._offScreenRenderTexture)\n            return this._offScreenRenderTexture.height;\n        else\n            return this.clientHeight;\n    }\n    _getRenderTexture() {\n        return this._internalRenderTexture || this._offScreenRenderTexture;\n    }\n    _needRenderGamma(rt) {\n        switch (rt) {\n            case RenderTargetFormat.R8G8B8:\n            case RenderTargetFormat.R8G8B8A8:\n                return true;\n            default:\n                return false;\n        }\n    }\n    _needInternalRenderTexture() {\n        let needInternalRT = this.enableBuiltInRenderTexture;\n        if (this.renderTarget) {\n            if (this.msaa) {\n                needInternalRT = needInternalRT || !(this.renderTarget.samples > 1);\n            }\n            if (this.enableHDR) {\n                switch (this.renderTarget.format) {\n                    case TextureFormat.R16G16B16A16:\n                    case TextureFormat.R16G16B16:\n                    case TextureFormat.R32G32B32A32:\n                    case TextureFormat.R32G32B32:\n                        break;\n                    default:\n                        needInternalRT = true;\n                        break;\n                }\n            }\n            if (this.postProcess && this.postProcess.enable && this.postProcess.effects.length > 0) {\n                needInternalRT = true;\n            }\n            if (this.normalizedViewport.width != 1 || this.normalizedViewport.height != 1 || this.normalizedViewport.x != 0 || this.normalizedViewport.y != 0) {\n                needInternalRT = true;\n            }\n        }\n        return needInternalRT;\n    }\n    _getRenderTextureFormat() {\n        if (this._enableHDR)\n            return RenderTargetFormat.R16G16B16A16;\n        else\n            return RenderTargetFormat.R8G8B8A8;\n    }\n    _updateCameraRenderData(context) {\n        this._prepareCameraToRender();\n        this._applyViewProject(this.viewMatrix, this._projectionMatrix, context.invertY);\n        this._contextApply(context);\n    }\n    _prepareCameraToRender() {\n        super._prepareCameraToRender();\n        var vp = this.viewport;\n        this._viewportParams.setValue(vp.x, vp.y, vp.width, vp.height);\n        let invertY = LayaGL.renderEngine._screenInvertY ? !RenderContext3D._instance.invertY : RenderContext3D._instance.invertY;\n        this._projectionParams.setValue(this._nearPlane, this._farPlane, invertY ? -1 : 1, 1 / this.farPlane);\n        this._shaderValues.setVector(BaseCamera.VIEWPORT, this._viewportParams);\n        this._shaderValues.setVector(BaseCamera.PROJECTION_PARAMS, this._projectionParams);\n    }\n    _contextApply(context) {\n        context.viewMatrix = this.viewMatrix;\n        context.projectionMatrix = this.projectionMatrix;\n        context.projectionViewMatrix = this.projectionViewMatrix;\n    }\n    _applyViewProject(viewMat, proMat, invertY) {\n        var projectView;\n        if (invertY) {\n            Matrix4x4.multiply(BaseCamera._invertYScaleMatrix, proMat, BaseCamera._invertYProjectionMatrix);\n            Matrix4x4.multiply(BaseCamera._invertYProjectionMatrix, viewMat, BaseCamera._invertYProjectionViewMatrix);\n            proMat = BaseCamera._invertYProjectionMatrix;\n            projectView = BaseCamera._invertYProjectionViewMatrix;\n        }\n        else {\n            Matrix4x4.multiply(proMat, viewMat, this._projectionViewMatrix);\n            this._renderDataModule.setProjectionViewMatrix(this._projectionViewMatrix);\n            projectView = this._projectionViewMatrix;\n        }\n        this._shaderValues.setMatrix4x4(BaseCamera.VIEWMATRIX, viewMat);\n        this._shaderValues.setMatrix4x4(BaseCamera.PROJECTMATRIX, proMat);\n        this._shaderValues.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX, projectView);\n    }\n    _updateClusterPlaneXY() {\n        var fieldOfView = this.fieldOfView;\n        var aspectRatio = this.aspectRatio;\n        if (this._clusterPlaneCacheFlag.x !== fieldOfView || this._clusterPlaneCacheFlag.y !== aspectRatio) {\n            var clusterCount = Config3D.lightClusterCount;\n            var xSlixe = clusterCount.x, ySlice = clusterCount.y;\n            var xCount = xSlixe + 1, yCount = ySlice + 1;\n            var xPlanes = this._clusterXPlanes, yPlanes = this._clusterYPlanes;\n            if (!xPlanes) {\n                xPlanes = this._clusterXPlanes = new Array(xCount);\n                yPlanes = this._clusterYPlanes = new Array(yCount);\n                for (var i = 0; i < xCount; i++)\n                    xPlanes[i] = new Vector3();\n                for (var i = 0; i < yCount; i++)\n                    yPlanes[i] = new Vector3();\n            }\n            var halfY = Math.tan((this.fieldOfView / 2) * Math.PI / 180);\n            var halfX = this.aspectRatio * halfY;\n            var yLengthPerCluster = 2 * halfY / ySlice;\n            var xLengthPerCluster = 2 * halfX / xSlixe;\n            for (var i = 0; i < xCount; i++) {\n                var angle = -halfX + xLengthPerCluster * i;\n                var bigHypot = Math.sqrt(1 + angle * angle);\n                var normX = 1 / bigHypot;\n                var xPlane = xPlanes[i];\n                xPlane.setValue(normX, 0, -angle * normX);\n            }\n            for (var i = 0; i < yCount; i++) {\n                var angle = halfY - yLengthPerCluster * i;\n                var bigHypot = Math.sqrt(1 + angle * angle);\n                var normY = -1 / bigHypot;\n                var yPlane = yPlanes[i];\n                yPlane.setValue(0, normY, -angle * normY);\n            }\n            this._clusterPlaneCacheFlag.x = fieldOfView;\n            this._clusterPlaneCacheFlag.y = aspectRatio;\n        }\n    }\n    _addCasterShadowCommandBuffer(commandBuffer) {\n        if (this._shadowCasterCommanBuffer.indexOf(commandBuffer) < 0)\n            this._shadowCasterCommanBuffer.push(commandBuffer);\n    }\n    _removeCasterShadowCommandBuffer(commandBuffer) {\n        var index = this._shadowCasterCommanBuffer.indexOf(commandBuffer);\n        if (index != -1)\n            this._shadowCasterCommanBuffer.splice(index, 1);\n    }\n    _preRenderMainPass(context, scene, needInternalRT, viewport) {\n        context.camera = this;\n        context.cameraShaderValue = this._shaderValues;\n        Camera._updateMark++;\n        if (needInternalRT && !this._offScreenRenderTexture && (this.clearFlag == CameraClearFlags.DepthOnly || this.clearFlag == CameraClearFlags.Nothing)) {\n            if (RenderTexture.bindCanvasRender) {\n                if (RenderTexture.bindCanvasRender != this._internalRenderTexture) {\n                    this._internalCommandBuffer.clear();\n                    this._internalCommandBuffer.blitScreenQuad(RenderTexture.bindCanvasRender, this._internalRenderTexture);\n                    this._internalCommandBuffer._applyOne();\n                }\n            }\n            else {\n                if (this._enableHDR) {\n                    var grabTexture = RenderTexture.createFromPool(viewport.width, viewport.height, RenderTargetFormat.R8G8B8, RenderTargetFormat.DEPTH_16, false, 1);\n                    grabTexture.filterMode = FilterMode.Bilinear;\n                    this._renderEngine.copySubFrameBuffertoTex(grabTexture._texture, 0, 0, 0, viewport.x, RenderContext3D.clientHeight - (viewport.y + viewport.height), viewport.width, viewport.height);\n                    this._internalCommandBuffer.clear();\n                    this._internalCommandBuffer.blitScreenQuad(grabTexture, this._internalRenderTexture);\n                    this._internalCommandBuffer._apply(true);\n                    RenderTexture.recoverToPool(grabTexture);\n                }\n            }\n        }\n    }\n    get depthTexture() {\n        return this._depthTexture;\n    }\n    set depthTexture(value) {\n        this._depthTexture = value;\n    }\n    get depthNormalTexture() {\n        return this._depthNormalsTexture;\n    }\n    set depthNormalTexture(value) {\n        this._depthNormalsTexture = value;\n    }\n    _aftRenderMainPass() {\n        if (this._cacheDepth && this._internalRenderTexture) {\n            if (this._cacheDepthTexture)\n                this._cacheDepthTexture._inPool ? 0 : RenderTexture.recoverToPool(this._cacheDepthTexture);\n            this._cacheDepthTexture = this._internalRenderTexture;\n        }\n        else {\n            this._internalRenderTexture && RenderTexture.recoverToPool(this._internalRenderTexture);\n        }\n    }\n    _createOpaqueTexture() {\n        if (!this._opaqueTexture) {\n            let tex = this._getRenderTexture();\n            let size = this.opaqueTextureSize;\n            this._opaqueTexture = RenderTexture.createFromPool(size, size, tex.colorFormat, RenderTargetFormat.None, true, 1, false, true);\n            this._opaqueTexture.filterMode = FilterMode.Bilinear;\n            this._opaqueTexture.wrapModeU = WrapMode.Clamp;\n            this._opaqueTexture.wrapModeV = WrapMode.Clamp;\n            this._shaderValues.setTexture(BaseCamera.OPAQUETEXTURE, this._opaqueTexture);\n            let opaqueTexParams = new Vector4();\n            opaqueTexParams.x = this._opaqueTexture.width;\n            opaqueTexParams.y = this._opaqueTexture.height;\n            opaqueTexParams.z = this._opaqueTexture.maxMipmapLevel;\n            this._shaderValues.setVector(BaseCamera.OPAQUETEXTUREPARAMS, opaqueTexParams);\n        }\n    }\n    render(scene) {\n        let context = RenderContext3D._instance;\n        context.scene = scene;\n        context.camera = this;\n        scene._setCullCamera(this);\n        this._Render3DProcess.render3DManager = scene.sceneRenderableManager._sceneManagerOBJ;\n        let viewport = this.viewport;\n        let needInternalRT = this._needInternalRenderTexture();\n        if (needInternalRT) {\n            let multiSampler = this.msaa ? 4 : 1;\n            let frameFormat = this._getRenderTextureFormat();\n            let depthFormat = this.depthTextureFormat;\n            let gamma = this._needRenderGamma(frameFormat);\n            let internalRT = RenderTexture.createFromPool(viewport.width, viewport.height, frameFormat, depthFormat, false, multiSampler, this.canblitDepth, gamma);\n            internalRT.filterMode = FilterMode.Bilinear;\n            this._internalRenderTexture = internalRT;\n        }\n        else {\n            this._internalRenderTexture = null;\n        }\n        if (this.opaquePass && !this._opaqueTexture) {\n            this._createOpaqueTexture();\n        }\n        context.invertY = false;\n        let renderRT = this._getRenderTexture();\n        if (renderRT) {\n            context.invertY = renderRT._isCameraTarget ? !LayaGL.renderEngine._screenInvertY : false;\n        }\n        this._prepareCameraToRender();\n        this._applyViewProject(this.viewMatrix, this.projectionMatrix, context.invertY);\n        this._contextApply(context);\n        if (this.clearFlag == CameraClearFlags.Sky) {\n            scene.skyRenderer.setRenderElement(this.skyRenderElement);\n            this.skyRenderElement.renderpre(context);\n        }\n        scene._componentDriver.callPreRender();\n        this._preRenderMainPass(context, scene, needInternalRT, viewport);\n        let multiLight = Config3D._multiLighting;\n        if (multiLight) {\n            Cluster.instance.update(this, scene);\n        }\n        var time = performance.now();\n        this._Render3DProcess.fowardRender(context._contextOBJ, this);\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_CameraRender] += (performance.now() - time);\n        scene._componentDriver.callPostRender();\n    }\n    viewportPointToRay(point, out) {\n        _tempVector20.setValue(point.x * ILaya.stage.clientScaleX * Config3D.pixelRatio, point.y * ILaya.stage.clientScaleY * Config3D.pixelRatio);\n        this._rayViewport.x = this.viewport.x;\n        this._rayViewport.y = this.viewport.y;\n        this._rayViewport.width = this.viewport.width;\n        this._rayViewport.height = this.viewport.height;\n        Picker.calculateCursorRay(_tempVector20, this._rayViewport, this._projectionMatrix, this.viewMatrix, null, out);\n    }\n    normalizedViewportPointToRay(point, out) {\n        var vp = this.normalizedViewport;\n        _tempVector20.x = point.x * Config3D.pixelRatio * vp.width;\n        _tempVector20.y = point.y * Config3D.pixelRatio * vp.height;\n        Picker.calculateCursorRay(_tempVector20, this.viewport, this._projectionMatrix, this.viewMatrix, null, out);\n    }\n    worldToViewportPoint(position, out) {\n        Matrix4x4.multiply(this._projectionMatrix, this._viewMatrix, this._projectionViewMatrix);\n        this.viewport.project(position, this._projectionViewMatrix, out);\n        var r = Config3D.pixelRatio;\n        let _wr = (out.x - this.viewport.x) / r;\n        let _hr = (out.y - this.viewport.y) / r;\n        out.x = _wr + this.viewport.x;\n        out.y = _hr + this.viewport.y;\n        out.x = (out.x / ILaya.stage.clientScaleX) | 0;\n        out.y = (out.y / ILaya.stage.clientScaleY) | 0;\n    }\n    worldToNormalizedViewportPoint(position, out) {\n        this.worldToViewportPoint(position, out);\n        out.x = out.x / ILaya.stage.width;\n        out.y = out.y / ILaya.stage.height;\n    }\n    convertScreenCoordToOrthographicCoord(source, out) {\n        if (this._orthographic) {\n            var clientWidth = this.clientWidth;\n            var clientHeight = this.clientHeight;\n            var ratioX = this.orthographicVerticalSize * this.aspectRatio / clientWidth;\n            var ratioY = this.orthographicVerticalSize / clientHeight;\n            out.x = (-clientWidth / 2 + source.x * ILaya.stage.clientScaleX) * ratioX;\n            out.y = (clientHeight / 2 - source.y * ILaya.stage.clientScaleY) * ratioY;\n            out.z = (this.nearPlane - this.farPlane) * (source.z + 1) / 2 - this.nearPlane;\n            Vector3.transformCoordinate(out, this.transform.worldMatrix, out);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    destroy(destroyChild = true) {\n        this._shaderValues.destroy();\n        this._internalRenderTexture && (!this._internalRenderTexture._inPool) && RenderTexture.recoverToPool(this._internalRenderTexture);\n        this._offScreenRenderTexture = null;\n        if (this._opaqueTexture) {\n            RenderTexture.recoverToPool(this._opaqueTexture);\n        }\n        this._Render3DProcess.destroy();\n        this.transform.off(Event.TRANSFORM_CHANGED, this, this._onTransformChanged);\n        ILaya.stage.off(Event.RESIZE, this, this._onScreenSizeChanged);\n        this._cameraEventCommandBuffer = {};\n        if (RenderContext3D._instance.camera == this) {\n            RenderContext3D._instance.cameraShaderValue = null;\n            RenderContext3D._instance.camera = null;\n        }\n        super.destroy(destroyChild);\n    }\n    addCommandBuffer(event, commandBuffer) {\n        var commandBufferArray = this._cameraEventCommandBuffer[event];\n        if (!commandBufferArray)\n            commandBufferArray = this._cameraEventCommandBuffer[event] = [];\n        if (commandBufferArray.indexOf(commandBuffer) < 0)\n            commandBufferArray.push(commandBuffer);\n        commandBuffer._camera = this;\n        if (commandBuffer.casterShadow) {\n            this._addCasterShadowCommandBuffer(commandBuffer);\n        }\n    }\n    removeCommandBuffer(event, commandBuffer) {\n        var commandBufferArray = this._cameraEventCommandBuffer[event];\n        if (commandBufferArray) {\n            var index = commandBufferArray.indexOf(commandBuffer);\n            if (index != -1)\n                commandBufferArray.splice(index, 1);\n            commandBuffer.casterShadow && this._removeCasterShadowCommandBuffer(commandBuffer);\n        }\n        else\n            throw \"Camera:unknown event.\";\n    }\n    removeCommandBuffers(event) {\n        if (this._cameraEventCommandBuffer[event])\n            this._cameraEventCommandBuffer[event].length = 0;\n    }\n}\nCamera._context3DViewPortCatch = new Viewport(0, 0, 0, 0);\nCamera._contextScissorPortCatch = new Vector4(0, 0, 0, 0);\nconst _tempVector20 = new Vector2();\n","import { RenderContext3D } from \"../RenderContext3D\";\nimport { Command } from \"./Command\";\nimport { RenderElement } from \"../RenderElement\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { Camera } from \"../../Camera\";\nimport { Stat } from \"../../../../utils/Stat\";\nimport { ScreenQuad } from \"./geometry/ScreenQuad\";\nexport class BlitFrameBufferCMD {\n    static __init__() {\n        BlitFrameBufferCMD.shaderdata = LayaGL.renderDeviceFactory.createShaderData(null);\n    }\n    static create(source, dest, viewport, offsetScale = null, shader = null, shaderData = null, subShader = 0) {\n        var cmd;\n        cmd = BlitFrameBufferCMD._pool.length > 0 ? BlitFrameBufferCMD._pool.pop() : new BlitFrameBufferCMD();\n        cmd._source = source;\n        cmd._dest = dest;\n        cmd._offsetScale = offsetScale;\n        cmd.setshader(shader, subShader, shaderData);\n        cmd._source && cmd._texture_size.setValue(source.width, source.height, 1.0 / source.width, 1.0 / source.height);\n        cmd._viewPort = viewport;\n        return cmd;\n    }\n    constructor() {\n        this._source = null;\n        this._dest = null;\n        this._offsetScale = null;\n        this._texture_size = null;\n        this._shader = null;\n        this._shaderData = null;\n        this._subShader = 0;\n        this._viewPort = null;\n        this._transform3D = Laya3DRender.Render3DModuleDataFactory.createTransform(null);\n        this._renderElement = new RenderElement();\n        this._renderElement.setTransform(this._transform3D);\n        this._renderElement.setGeometry(ScreenQuad.instance);\n        this._renderElement._renderElementOBJ.isRender = true;\n        this._texture_size = new Vector4();\n    }\n    set shaderData(value) {\n        this._shaderData = value || BlitFrameBufferCMD.shaderdata;\n        this._renderElement._renderElementOBJ.materialShaderData = this._shaderData;\n    }\n    setshader(shader, subShader, shaderData) {\n        this._shader = shader || Command._screenShader;\n        this._subShader = subShader || 0;\n        this.shaderData = shaderData;\n        this._renderElement.renderSubShader = this._shader.getSubShaderAt(this._subShader);\n    }\n    run() {\n        if (!this._source || !this._viewPort)\n            return;\n        var source = this._source;\n        var dest = this._dest;\n        var shaderData = this._shaderData;\n        let context = RenderContext3D._instance;\n        var viewport = this._viewPort;\n        let vph = RenderContext3D.clientHeight - viewport.y - viewport.height;\n        if (LayaGL.renderEngine._screenInvertY) {\n            context.changeViewport(viewport.x, viewport.y, viewport.width, viewport.height);\n            context.changeScissor(viewport.x, viewport.y, viewport.width, viewport.height);\n        }\n        else {\n            context.changeViewport(viewport.x, vph, viewport.width, viewport.height);\n            context.changeScissor(viewport.x, vph, viewport.width, viewport.height);\n        }\n        shaderData.setTexture(Command.SCREENTEXTURE_ID, source);\n        shaderData.setVector(Command.SCREENTEXTUREOFFSETSCALE_ID, this._offsetScale || BlitFrameBufferCMD._defaultOffsetScale);\n        source && (shaderData.setVector(Command.MAINTEXTURE_TEXELSIZE_ID, this._texture_size));\n        if (dest) {\n            shaderData.removeDefine(RenderContext3D.GammaCorrect);\n        }\n        else {\n            shaderData.addDefine(RenderContext3D.GammaCorrect);\n        }\n        this._renderElement.setGeometry(ScreenQuad.InvertInstance);\n        context.destTarget = dest;\n        context._contextOBJ.cameraUpdateMask = Camera._updateMark;\n        context.drawRenderElement(this._renderElement._renderElementOBJ);\n        Stat.blitDrawCall++;\n    }\n    recover() {\n        BlitFrameBufferCMD._pool.push(this);\n        this._source = null;\n        this._dest = null;\n        this._offsetScale = null;\n        this._shader = null;\n        this._shaderData = null;\n        this._viewPort = null;\n    }\n}\nBlitFrameBufferCMD._pool = [];\nBlitFrameBufferCMD._defaultOffsetScale = new Vector4(0, 0, 1, 1);\n","import { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { RenderContext3D } from \"../render/RenderContext3D\";\nexport class SceneRenderManager {\n    constructor() {\n        this._sceneManagerOBJ = Laya3DRender.Render3DPassFactory.createSceneRenderManager();\n    }\n    get list() {\n        return this._sceneManagerOBJ.list;\n    }\n    set list(value) {\n        this._sceneManagerOBJ.list = value;\n    }\n    addRenderObject(object) {\n        this._sceneManagerOBJ.addRenderObject(object);\n    }\n    removeRenderObject(object) {\n        this._sceneManagerOBJ.removeRenderObject(object);\n    }\n    removeMotionObject(object) {\n        this._sceneManagerOBJ.removeMotionObject(object);\n    }\n    updateMotionObjects() {\n        this._sceneManagerOBJ.updateMotionObjects();\n    }\n    renderUpdate() {\n        var context = RenderContext3D._instance;\n        let lists = this._sceneManagerOBJ.list.elements;\n        for (let i = 0, n = this.list.length; i < n; i++) {\n            lists[i].renderUpdate(context);\n        }\n    }\n    addMotionObject(object) {\n        this._sceneManagerOBJ.addMotionObject(object);\n    }\n    destroy() {\n        this._sceneManagerOBJ.destroy();\n    }\n}\n","import { FastSinglelist } from \"../../../utils/SingletonList\";\nexport class UI3DManager {\n    constructor() {\n        this._UI3Dlist = new FastSinglelist();\n    }\n    add(value) {\n        this._UI3Dlist.add(value);\n    }\n    remove(value) {\n        this._UI3Dlist.remove(value);\n    }\n    update() {\n        let elements = this._UI3Dlist.elements;\n        for (var i = 0, n = this._UI3Dlist.length; i < n; i++) {\n            elements[i]._submitRT();\n        }\n    }\n    rayCast(ray) {\n        let rayOri = ray.origin;\n        this._UI3Dlist.clean();\n        this._UI3Dlist.elements.sort((a, b) => {\n            return a._getCameraDistance(rayOri) - b._getCameraDistance(rayOri);\n        });\n        let elements = this._UI3Dlist.elements;\n        for (var i = 0, n = this._UI3Dlist.length; i < n; i++) {\n            let hit = elements[i]._checkUIPos(ray);\n            if (hit) {\n                return hit;\n            }\n        }\n        return null;\n    }\n    destory() {\n        this._UI3Dlist.destroy();\n    }\n}\n","import { Config3D } from \"../../../../Config3D\";\nimport { ILaya } from \"../../../../ILaya\";\nimport { Sprite } from \"../../../display/Sprite\";\nimport { Context } from \"../../../renders/Context\";\nimport { SubmitKey } from \"../../../webgl/submit/SubmitKey\";\nimport { Cluster } from \"../../graphics/renderPath/Cluster\";\nimport { PhysicsSettings } from \"../../physics/PhysicsSettings\";\nimport { SkyRenderer } from \"../../resource/models/SkyRenderer\";\nimport { Utils3D } from \"../../utils/Utils3D\";\nimport { BaseCamera } from \"../BaseCamera\";\nimport { AlternateLightQueue, LightQueue } from \"../light/LightQueue\";\nimport { RenderContext3D } from \"../render/RenderContext3D\";\nimport { Lightmap } from \"./Lightmap\";\nimport { Scene3DShaderDeclaration } from \"./Scene3DShaderDeclaration\";\nimport { ShadowCasterPass } from \"../../shadowMap/ShadowCasterPass\";\nimport { BlitFrameBufferCMD } from \"../render/command/BlitFrameBufferCMD\";\nimport { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { ComponentDriver } from \"../../../components/ComponentDriver\";\nimport { LayaEnv } from \"../../../../LayaEnv\";\nimport { SceneRenderManager } from \"./SceneRenderManager\";\nimport { VolumeManager } from \"../../component/Volume/VolumeManager\";\nimport { UI3DManager } from \"../UI3D/UI3DManager\";\nimport { Scene } from \"../../../display/Scene\";\nimport { ReflectionProbe } from \"../../component/Volume/reflectionProbe/ReflectionProbe\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { RenderTexture } from \"../../../resource/RenderTexture\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { RenderTexture2D } from \"../../../resource/RenderTexture2D\";\nimport { Viewport } from \"../../../maths/Viewport\";\nimport { Config } from \"../../../../Config\";\nimport { VolumetricGI } from \"../../component/Volume/VolumetricGI/VolumetricGI\";\nexport var FogMode;\n(function (FogMode) {\n    FogMode[FogMode[\"Linear\"] = 0] = \"Linear\";\n    FogMode[FogMode[\"EXP\"] = 1] = \"EXP\";\n    FogMode[FogMode[\"EXP2\"] = 2] = \"EXP2\";\n})(FogMode || (FogMode = {}));\nexport class Scene3D extends Sprite {\n    static get _updateMark() {\n        return RenderContext3D._instance._contextOBJ.cameraUpdateMask;\n    }\n    static set _updateMark(value) {\n        RenderContext3D._instance._contextOBJ.cameraUpdateMask = value;\n    }\n    static regManager(type, cla) {\n        Scene3D.componentManagerMap.set(type, cla);\n    }\n    static shaderValueInit() {\n        Scene3DShaderDeclaration.SHADERDEFINE_FOG = Shader3D.getDefineByName(\"FOG\");\n        Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR = Shader3D.getDefineByName(\"FOG_LINEAR\");\n        Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP = Shader3D.getDefineByName(\"FOG_EXP\");\n        Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2 = Shader3D.getDefineByName(\"FOG_EXP2\");\n        Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT = Shader3D.getDefineByName(\"DIRECTIONLIGHT\");\n        Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT = Shader3D.getDefineByName(\"POINTLIGHT\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT = Shader3D.getDefineByName(\"SPOTLIGHT\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SHADOW = Shader3D.getDefineByName(\"SHADOW\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE = Shader3D.getDefineByName(\"SHADOW_CASCADE\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW = Shader3D.getDefineByName(\"SHADOW_SOFT_SHADOW_LOW\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH = Shader3D.getDefineByName(\"SHADOW_SOFT_SHADOW_HIGH\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT = Shader3D.getDefineByName(\"SHADOW_SPOT\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW = Shader3D.getDefineByName(\"SHADOW_SPOT_SOFT_SHADOW_LOW\");\n        Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH = Shader3D.getDefineByName(\"SHADOW_SPOT_SOFT_SHADOW_HIGH\");\n        Scene3D.FOGCOLOR = Shader3D.propertyNameToID(\"u_FogColor\");\n        Scene3D.FOGPARAMS = Shader3D.propertyNameToID(\"u_FogParams\");\n        Scene3D.DIRECTIONLIGHTCOUNT = Shader3D.propertyNameToID(\"u_DirationLightCount\");\n        Scene3D.LIGHTBUFFER = Shader3D.propertyNameToID(\"u_LightBuffer\");\n        Scene3D.CLUSTERBUFFER = Shader3D.propertyNameToID(\"u_LightClusterBuffer\");\n        Scene3D.TIME = Shader3D.propertyNameToID(\"u_Time\");\n        Scene3D.GIRotate = Shader3D.propertyNameToID(\"u_GIRotate\");\n        let sceneUniformMap = Scene3D.sceneUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Scene3D\");\n        sceneUniformMap.addShaderUniform(Scene3D.TIME, \"u_Time\", ShaderDataType.Float);\n        sceneUniformMap.addShaderUniform(Scene3D.FOGPARAMS, \"u_FogParams\", ShaderDataType.Vector4);\n        sceneUniformMap.addShaderUniform(Scene3D.FOGCOLOR, \"u_FogColor\", ShaderDataType.Color);\n        sceneUniformMap.addShaderUniform(Scene3D.LIGHTBUFFER, \"u_LightBuffer\", ShaderDataType.Texture2D);\n        sceneUniformMap.addShaderUniform(Scene3D.CLUSTERBUFFER, \"u_LightClusterBuffer\", ShaderDataType.Texture2D);\n        sceneUniformMap.addShaderUniform(Scene3D.GIRotate, \"u_GIRotate\", ShaderDataType.Float);\n        sceneUniformMap.addShaderUniform(Scene3D.DIRECTIONLIGHTCOUNT, \"u_DirationLightCount\", ShaderDataType.Int);\n        ReflectionProbe.init();\n        VolumetricGI.init();\n    }\n    static legacyLightingValueInit() {\n        Scene3D.LIGHTDIRECTION = Shader3D.propertyNameToID(\"u_DirLightDirection\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.LIGHTDIRECTION, \"u_DirLightDirection\", ShaderDataType.Vector3);\n        Scene3D.LIGHTDIRCOLOR = Shader3D.propertyNameToID(\"u_DirLightColor\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.LIGHTDIRCOLOR, \"u_DirLightColor\", ShaderDataType.Vector3);\n        Scene3D.LIGHTMODE = Shader3D.propertyNameToID(\"u_DirLightMode\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.LIGHTMODE, \"u_DirLightMode\", ShaderDataType.Int);\n        Scene3D.POINTLIGHTPOS = Shader3D.propertyNameToID(\"u_PointLightPos\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTPOS, \"u_PointLightPos\", ShaderDataType.Vector3);\n        Scene3D.POINTLIGHTRANGE = Shader3D.propertyNameToID(\"u_PointLightRange\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTRANGE, \"u_PointLightRange\", ShaderDataType.Float);\n        Scene3D.POINTLIGHTCOLOR = Shader3D.propertyNameToID(\"u_PointLightColor\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTCOLOR, \"u_PointLightColor\", ShaderDataType.Vector3);\n        Scene3D.POINTLIGHTMODE = Shader3D.propertyNameToID(\"u_PointLightMode\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.POINTLIGHTMODE, \"u_PointLightMode\", ShaderDataType.Int);\n        Scene3D.SPOTLIGHTPOS = Shader3D.propertyNameToID(\"u_SpotLightPos\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTPOS, \"u_SpotLightPos\", ShaderDataType.Vector3);\n        Scene3D.SPOTLIGHTDIRECTION = Shader3D.propertyNameToID(\"u_SpotLightDirection\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTDIRECTION, \"u_SpotLightDirection\", ShaderDataType.Vector3);\n        Scene3D.SPOTLIGHTSPOTANGLE = Shader3D.propertyNameToID(\"u_SpotLightSpot\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTSPOTANGLE, \"u_SpotLightSpot\", ShaderDataType.Float);\n        Scene3D.SPOTLIGHTRANGE = Shader3D.propertyNameToID(\"u_SpotLightRange\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTRANGE, \"u_SpotLightRange\", ShaderDataType.Float);\n        Scene3D.SPOTLIGHTCOLOR = Shader3D.propertyNameToID(\"u_SpotLightColor\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTCOLOR, \"u_SpotLightColor\", ShaderDataType.Vector3);\n        Scene3D.SPOTLIGHTMODE = Shader3D.propertyNameToID(\"u_SpotLightMode\");\n        Scene3D.sceneUniformMap.addShaderUniform(Scene3D.SPOTLIGHTMODE, \"u_SpotLightMode\", ShaderDataType.Int);\n    }\n    static __init__() {\n        var multiLighting = Config3D._multiLighting;\n        if (multiLighting) {\n            const width = 4;\n            var maxLightCount = Config3D.maxLightCount;\n            var clusterSlices = Config3D.lightClusterCount;\n            Cluster.instance = new Cluster(clusterSlices.x, clusterSlices.y, clusterSlices.z, Math.min(Config3D.maxLightCount, Config3D._maxAreaLightCountPerClusterAverage));\n            Scene3D._lightTexture = Utils3D._createFloatTextureBuffer(width, maxLightCount);\n            Scene3D._lightTexture.lock = true;\n            Scene3D._lightPixles = new Float32Array(maxLightCount * width * 4);\n        }\n        Scene3D.shaderValueInit();\n        var configShaderValue = Shader3D._configDefineValues;\n        if (!Config3D._multiLighting) {\n            (configShaderValue.add(Shader3D.SHADERDEFINE_LEGACYSINGALLIGHTING));\n            Scene3D.legacyLightingValueInit();\n        }\n        Scene3D._shadowCasterPass = new ShadowCasterPass();\n        if (Config._uniformBlock)\n            configShaderValue.add(Shader3D.SHADERDEFINE_ENUNIFORMBLOCK);\n        let supportFloatTex = LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32);\n        if (supportFloatTex) {\n            configShaderValue.add(Shader3D.SHADERDEFINE_FLOATTEXTURE);\n        }\n        let supportFloatLinearFiltering = LayaGL.renderEngine.getCapable(RenderCapable.Texture_FloatLinearFiltering);\n        if (supportFloatLinearFiltering) {\n            configShaderValue.add(Shader3D.SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR);\n        }\n    }\n    static load(url, complete) {\n        ILaya.loader.load(url).then((res) => {\n            if (complete) {\n                let ret;\n                if (res) {\n                    let scene = res.create();\n                    if (scene instanceof Scene)\n                        ret = scene._scene3D;\n                    else\n                        ret = scene;\n                }\n                complete.runWith([ret]);\n            }\n        });\n    }\n    get scene2D() {\n        return this._scene2D;\n    }\n    get sceneRenderableManager() {\n        return this._sceneRenderManager;\n    }\n    set sceneRenderableManager(manager) {\n        manager.list = this._sceneRenderManager.list;\n        this._sceneRenderManager = manager;\n    }\n    get enableFog() {\n        return this._enableFog;\n    }\n    set enableFog(value) {\n        if (this._enableFog !== value) {\n            this._enableFog = value;\n            if (value) {\n                this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG);\n            }\n            else\n                this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG);\n        }\n    }\n    get fogMode() {\n        return this._fogMode;\n    }\n    set fogMode(value) {\n        this._fogMode = value;\n        switch (value) {\n            case FogMode.Linear:\n                this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR);\n                this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP);\n                this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2);\n                break;\n            case FogMode.EXP:\n                this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP);\n                this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR);\n                this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2);\n                break;\n            case FogMode.EXP2:\n                this._shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP2);\n                this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_LINEAR);\n                this._shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_FOG_EXP);\n                break;\n        }\n    }\n    get fogColor() {\n        return this._shaderValues.getColor(Scene3D.FOGCOLOR);\n    }\n    set fogColor(value) {\n        this._shaderValues.setColor(Scene3D.FOGCOLOR, value);\n    }\n    get fogStart() {\n        return this._fogParams.x;\n    }\n    set fogStart(value) {\n        this._fogParams.x = value;\n        this.fogParams = this._fogParams;\n    }\n    get fogEnd() {\n        return this._fogParams.y;\n    }\n    set fogEnd(value) {\n        this._fogParams.y = value;\n        this.fogParams = this._fogParams;\n    }\n    get fogDensity() {\n        return this._fogParams.z;\n    }\n    set fogDensity(value) {\n        this._fogParams.z = value;\n        this.fogParams = this._fogParams;\n    }\n    get fogParams() {\n        return this._shaderValues.getVector(Scene3D.FOGPARAMS);\n    }\n    set fogParams(value) {\n        this._shaderValues.setVector(Scene3D.FOGPARAMS, value);\n    }\n    get GIRotate() {\n        return this._shaderValues.getNumber(Scene3D.GIRotate);\n    }\n    set GIRotate(value) {\n        this._shaderValues.setNumber(Scene3D.GIRotate, value);\n    }\n    get ambientMode() {\n        return this._sceneReflectionProb.ambientMode;\n    }\n    set ambientMode(value) {\n        this._sceneReflectionProb.ambientMode = value;\n    }\n    get sceneReflectionProb() {\n        return this._sceneReflectionProb;\n    }\n    set sceneReflectionProb(value) {\n        this._sceneReflectionProb = value;\n    }\n    get ambientColor() {\n        return this._sceneReflectionProb.ambientColor;\n    }\n    set ambientColor(value) {\n        this._sceneReflectionProb.ambientColor = value;\n    }\n    get ambientIntensity() {\n        return this._sceneReflectionProb.ambientIntensity;\n    }\n    set ambientIntensity(value) {\n        this._sceneReflectionProb.ambientIntensity = value;\n    }\n    get reflectionIntensity() {\n        return this._sceneReflectionProb.reflectionIntensity;\n    }\n    set reflectionIntensity(value) {\n        this._sceneReflectionProb.reflectionIntensity = value;\n    }\n    get ambientSH() {\n        return this._sceneReflectionProb.ambientSH;\n    }\n    set ambientSH(value) {\n        this._sceneReflectionProb.ambientSH = value;\n    }\n    get iblTex() {\n        return this._sceneReflectionProb.iblTex;\n    }\n    set iblTex(value) {\n        this._sceneReflectionProb.iblTex = value;\n    }\n    get iblTexRGBD() {\n        return this._sceneReflectionProb.iblTexRGBD;\n    }\n    set iblTexRGBD(value) {\n        this._sceneReflectionProb.iblTexRGBD = value;\n    }\n    get skyRenderer() {\n        return this._skyRenderer;\n    }\n    get physicsSimulation() {\n        return this._physicsManager;\n    }\n    get timer() {\n        return this._timer;\n    }\n    set timer(value) {\n        this._timer = value;\n    }\n    get lightmaps() {\n        return this._lightmaps.slice();\n    }\n    set lightmaps(value) {\n        var maps = this._lightmaps;\n        if (maps) {\n            for (var i = 0, n = maps.length; i < n; i++) {\n                var map = maps[i];\n                map.lightmapColor && map.lightmapColor._removeReference();\n                map.lightmapDirection && map.lightmapDirection._removeReference();\n            }\n        }\n        if (value) {\n            var count = value.length;\n            maps.length = count;\n            for (i = 0; i < count; i++) {\n                var map = value[i];\n                map.lightmapColor && map.lightmapColor._addReference();\n                map.lightmapDirection && map.lightmapDirection._addReference();\n                maps[i] = map;\n            }\n        }\n        else {\n            maps.length = 0;\n        }\n        this._sceneModuleData.lightmapDirtyFlag = Scene3D._updateMark;\n    }\n    get shadowMapFrequency() {\n        return this._ShadowMapupdateFrequency;\n    }\n    set shadowMapFrequency(value) {\n        this._ShadowMapupdateFrequency = value;\n    }\n    constructor() {\n        super();\n        this._reflectionsSource = 0;\n        this._reflectionsResolution = \"256\";\n        this._reflectionsIblSamples = 128;\n        this._lightCount = 0;\n        this._pointLights = new LightQueue();\n        this._spotLights = new LightQueue();\n        this._directionLights = new LightQueue();\n        this._alternateLights = new AlternateLightQueue();\n        this._lightmaps = [];\n        this._skyRenderer = new SkyRenderer();\n        this._time = 0;\n        this._physicsStepTime = 0;\n        this._sunColor = new Color(1.0, 1.0, 1.0);\n        this._sundir = new Vector3();\n        this._collsionTestList = [];\n        this._key = new SubmitKey();\n        this._cameraPool = [];\n        this._UI3DManager = new UI3DManager();\n        this.currentCreationLayer = Math.pow(2, 0);\n        this.enableLight = true;\n        this._ShadowMapupdateFrequency = 1;\n        this.componentElementMap = new Map();\n        this._componentElementDatasMap = {};\n        this._nodeType = 1;\n        this._componentDriver = new ComponentDriver();\n        this._timer = ILaya.timer;\n        this._sceneModuleData = Laya3DRender.Render3DModuleDataFactory.createSceneModuleData();\n        if (LayaEnv.isConch && window.conchConfig.getGraphicsAPI() != 2) {\n            this._nativeObj = new window.conchSubmitScene3D(this.renderSubmit.bind(this));\n        }\n        if (ILaya.Laya3D.enablePhysics)\n            this._physicsManager = ILaya.Laya3D.PhysicsCreateUtil.createPhysicsManger(Scene3D.physicsSettings);\n        this._shaderValues = LayaGL.renderDeviceFactory.createShaderData(null);\n        this._shaderValues.addDefines(Shader3D._configDefineValues);\n        this._fogParams = new Vector4(300, 1000, 0.01, 0);\n        this.enableFog = false;\n        this.fogStart = 300;\n        this.fogEnd = 1000;\n        this.fogDensity = 0.01;\n        this.fogColor = new Color(0.7, 0.7, 0.7);\n        this.fogMode = FogMode.Linear;\n        this.GIRotate = 0;\n        this._scene = this;\n        this._sceneRenderManager = new SceneRenderManager();\n        if (Config3D.debugFrustumCulling) {\n        }\n        this._volumeManager = new VolumeManager();\n        this._UI3DManager = new UI3DManager();\n        this.sceneReflectionProb = this._volumeManager.reflectionProbeManager.sceneReflectionProbe;\n        this._sceneReflectionProb.reflectionIntensity = 1.0;\n        this.ambientColor = new Color(0.212, 0.227, 0.259);\n        Scene3D.componentManagerMap.forEach((val, key) => {\n            this.componentElementMap.set(key, new val());\n        });\n    }\n    get componentElementDatasMap() {\n        return this._componentElementDatasMap;\n    }\n    set componentElementDatasMap(value) {\n        this._componentElementDatasMap = value;\n        this.componentElementMap.forEach((value, key) => {\n            value.Init(this._componentElementDatasMap[key]);\n        });\n    }\n    _update() {\n        var delta = this.timer.delta / 1000;\n        this._time += delta;\n        this._shaderValues.setNumber(Scene3D.TIME, this._time);\n        if (LayaEnv.isPlaying) {\n            this._physicsStepTime += delta;\n            if (this._physicsStepTime > Scene3D.physicsSettings.fixedTimeStep) {\n                let physicsManager = this._physicsManager;\n                if (ILaya.Laya3D.enablePhysics && Stat.enablePhysicsUpdate) {\n                    physicsManager.update(this._physicsStepTime);\n                }\n                this._physicsStepTime = 0;\n            }\n        }\n        this._componentDriver.callStart();\n        this._componentDriver.callUpdate();\n        this._componentDriver.callLateUpdate();\n        this._componentDriver.callDestroy();\n        if (this._volumeManager.needreCaculateAllRenderObjects())\n            this._volumeManager.reCaculateAllRenderObjects(this._sceneRenderManager.list);\n        else\n            this._volumeManager.handleMotionlist();\n        this.componentElementMap.forEach((value) => {\n            value.update(delta);\n        });\n        this._sceneRenderManager.renderUpdate();\n        this.skyRenderer.renderUpdate(RenderContext3D._instance);\n        if (!this._renderByEditor)\n            this._UI3DManager.update();\n    }\n    _binarySearchIndexInCameraPool(camera) {\n        var start = 0;\n        var end = this._cameraPool.length - 1;\n        var mid;\n        while (start <= end) {\n            mid = Math.floor((start + end) / 2);\n            var midValue = this._cameraPool[mid]._renderingOrder;\n            if (midValue == camera._renderingOrder)\n                return mid;\n            else if (midValue > camera._renderingOrder)\n                end = mid - 1;\n            else\n                start = mid + 1;\n        }\n        return start;\n    }\n    _getGroup() {\n        return this._group;\n    }\n    _setGroup(value) {\n        this._group = value;\n    }\n    _onActive() {\n        super._onActive();\n        ILaya.stage._scene3Ds.push(this);\n    }\n    _onInActive() {\n        super._onInActive();\n        var scenes = ILaya.stage._scene3Ds;\n        scenes.splice(scenes.indexOf(this), 1);\n    }\n    _prepareSceneToRender() {\n        var shaderValues = this._shaderValues;\n        var multiLighting = Config3D._multiLighting && Stat.enableMulLight;\n        if (multiLighting) {\n            var ligTex = Scene3D._lightTexture;\n            var ligPix = Scene3D._lightPixles;\n            const pixelWidth = ligTex.width;\n            const floatWidth = pixelWidth * 4;\n            var curCount = 0;\n            var dirCount = Stat.enableLight ? this._directionLights._length : 0;\n            var dirElements = this._directionLights._elements;\n            if (dirCount > 0) {\n                var sunLightIndex = this._directionLights.getBrightestLight();\n                this._mainDirectionLight = dirElements[sunLightIndex];\n                this._directionLights.normalLightOrdering(sunLightIndex);\n                for (var i = 0; i < dirCount; i++, curCount++) {\n                    var dirLight = dirElements[i];\n                    var dir = dirLight.direction;\n                    var intCor = dirLight._intensityColor;\n                    var off = floatWidth * curCount;\n                    intCor.x = Color.gammaToLinearSpace(dirLight.color.r);\n                    intCor.y = Color.gammaToLinearSpace(dirLight.color.g);\n                    intCor.z = Color.gammaToLinearSpace(dirLight.color.b);\n                    Vector3.scale(intCor, dirLight._intensity, intCor);\n                    dirLight.owner.transform.worldMatrix.getForward(dir);\n                    Vector3.normalize(dir, dir);\n                    ligPix[off] = intCor.x;\n                    ligPix[off + 1] = intCor.y;\n                    ligPix[off + 2] = intCor.z;\n                    ligPix[off + 3] = dirLight._lightmapBakedType;\n                    ligPix[off + 4] = dir.x;\n                    ligPix[off + 5] = dir.y;\n                    ligPix[off + 6] = dir.z;\n                    if (i == 0) {\n                        this._sunColor = dirLight.color;\n                        this._sundir = dir;\n                    }\n                }\n                shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT);\n            }\n            else {\n                shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT);\n                this._mainDirectionLight = null;\n            }\n            var poiCount = Stat.enableLight ? this._pointLights._length : 0;\n            if (poiCount > 0) {\n                var poiElements = this._pointLights._elements;\n                var mainPointLightIndex = this._pointLights.getBrightestLight();\n                this._mainPointLight = poiElements[mainPointLightIndex];\n                this._pointLights.normalLightOrdering(mainPointLightIndex);\n                for (var i = 0; i < poiCount; i++, curCount++) {\n                    var poiLight = poiElements[i];\n                    var pos = poiLight.owner.transform.position;\n                    var intCor = poiLight._intensityColor;\n                    var off = floatWidth * curCount;\n                    intCor.x = Color.gammaToLinearSpace(poiLight.color.r);\n                    intCor.y = Color.gammaToLinearSpace(poiLight.color.g);\n                    intCor.z = Color.gammaToLinearSpace(poiLight.color.b);\n                    Vector3.scale(intCor, poiLight._intensity, intCor);\n                    ligPix[off] = intCor.x;\n                    ligPix[off + 1] = intCor.y;\n                    ligPix[off + 2] = intCor.z;\n                    ligPix[off + 3] = poiLight.range;\n                    ligPix[off + 4] = pos.x;\n                    ligPix[off + 5] = pos.y;\n                    ligPix[off + 6] = pos.z;\n                    ligPix[off + 7] = poiLight._lightmapBakedType;\n                }\n                shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\n            }\n            else {\n                shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\n                this._mainPointLight = null;\n            }\n            var spoCount = Stat.enableLight ? this._spotLights._length : 0;\n            if (spoCount > 0) {\n                var spoElements = this._spotLights._elements;\n                var mainSpotLightIndex = this._spotLights.getBrightestLight();\n                this._mainSpotLight = spoElements[mainSpotLightIndex];\n                this._spotLights.normalLightOrdering(mainSpotLightIndex);\n                for (var i = 0; i < spoCount; i++, curCount++) {\n                    var spoLight = spoElements[i];\n                    var dir = spoLight.direction;\n                    var pos = spoLight.owner.transform.position;\n                    var intCor = spoLight._intensityColor;\n                    var off = floatWidth * curCount;\n                    intCor.x = Color.gammaToLinearSpace(spoLight.color.r);\n                    intCor.y = Color.gammaToLinearSpace(spoLight.color.g);\n                    intCor.z = Color.gammaToLinearSpace(spoLight.color.b);\n                    Vector3.scale(intCor, spoLight._intensity, intCor);\n                    spoLight.owner.transform.worldMatrix.getForward(dir);\n                    Vector3.normalize(dir, dir);\n                    ligPix[off] = intCor.x;\n                    ligPix[off + 1] = intCor.y;\n                    ligPix[off + 2] = intCor.z;\n                    ligPix[off + 3] = spoLight.range;\n                    ligPix[off + 4] = pos.x;\n                    ligPix[off + 5] = pos.y;\n                    ligPix[off + 6] = pos.z;\n                    ligPix[off + 7] = spoLight.spotAngle * Math.PI / 180;\n                    ligPix[off + 8] = dir.x;\n                    ligPix[off + 9] = dir.y;\n                    ligPix[off + 10] = dir.z;\n                    ligPix[off + 11] = spoLight._lightmapBakedType;\n                }\n                shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT);\n            }\n            else {\n                shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT);\n                this._mainSpotLight = null;\n            }\n            (curCount > 0) && (ligTex.setSubPixelsData(0, 0, pixelWidth, curCount, ligPix, 0, false, false, false));\n            shaderValues.setTexture(Scene3D.LIGHTBUFFER, ligTex);\n            shaderValues.setInt(Scene3D.DIRECTIONLIGHTCOUNT, this._directionLights._length);\n            shaderValues.setTexture(Scene3D.CLUSTERBUFFER, Cluster.instance._clusterTexture);\n        }\n        else {\n            if (!Scene3D.LIGHTDIRECTION)\n                Scene3D.legacyLightingValueInit();\n            if (this._directionLights._length > 0 && Stat.enableLight) {\n                var dirLight = this._directionLights._elements[0];\n                this._mainDirectionLight = dirLight;\n                dirLight._intensityColor.x = Color.gammaToLinearSpace(dirLight.color.r);\n                dirLight._intensityColor.y = Color.gammaToLinearSpace(dirLight.color.g);\n                dirLight._intensityColor.z = Color.gammaToLinearSpace(dirLight.color.b);\n                Vector3.scale(dirLight._intensityColor, dirLight._intensity, dirLight._intensityColor);\n                dirLight.owner.transform.worldMatrix.getForward(dirLight.direction);\n                Vector3.normalize(dirLight.direction, dirLight.direction);\n                shaderValues.setVector3(Scene3D.LIGHTDIRCOLOR, dirLight._intensityColor);\n                shaderValues.setVector3(Scene3D.LIGHTDIRECTION, dirLight.direction);\n                shaderValues.setInt(Scene3D.LIGHTMODE, dirLight._lightmapBakedType);\n                if (i == 0) {\n                    this._sunColor = dirLight.color;\n                    this._sundir = dirLight.direction;\n                }\n                shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT);\n            }\n            else {\n                shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_DIRECTIONLIGHT);\n            }\n            if (this._pointLights._length > 0 && Stat.enableLight) {\n                var poiLight = this._pointLights._elements[0];\n                this._mainPointLight = poiLight;\n                poiLight._intensityColor.x = Color.gammaToLinearSpace(poiLight.color.r);\n                poiLight._intensityColor.y = Color.gammaToLinearSpace(poiLight.color.g);\n                poiLight._intensityColor.z = Color.gammaToLinearSpace(poiLight.color.b);\n                Vector3.scale(poiLight._intensityColor, poiLight._intensity, poiLight._intensityColor);\n                shaderValues.setVector3(Scene3D.POINTLIGHTCOLOR, poiLight._intensityColor);\n                shaderValues.setVector3(Scene3D.POINTLIGHTPOS, poiLight.owner.transform.position);\n                shaderValues.setNumber(Scene3D.POINTLIGHTRANGE, poiLight.range);\n                shaderValues.setInt(Scene3D.POINTLIGHTMODE, poiLight._lightmapBakedType);\n                shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\n            }\n            else {\n                shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_POINTLIGHT);\n            }\n            if (this._spotLights._length > 0 && Stat.enableLight) {\n                var spotLight = this._spotLights._elements[0];\n                this._mainSpotLight = spotLight;\n                spotLight._intensityColor.x = Color.gammaToLinearSpace(spotLight.color.r);\n                spotLight._intensityColor.y = Color.gammaToLinearSpace(spotLight.color.g);\n                spotLight._intensityColor.z = Color.gammaToLinearSpace(spotLight.color.b);\n                Vector3.scale(spotLight._intensityColor, spotLight._intensity, spotLight._intensityColor);\n                shaderValues.setVector3(Scene3D.SPOTLIGHTCOLOR, spotLight._intensityColor);\n                shaderValues.setVector3(Scene3D.SPOTLIGHTPOS, spotLight.owner.transform.position);\n                spotLight.owner.transform.worldMatrix.getForward(spotLight.direction);\n                Vector3.normalize(spotLight.direction, spotLight.direction);\n                shaderValues.setVector3(Scene3D.SPOTLIGHTDIRECTION, spotLight.direction);\n                shaderValues.setNumber(Scene3D.SPOTLIGHTRANGE, spotLight.range);\n                shaderValues.setNumber(Scene3D.SPOTLIGHTSPOTANGLE, spotLight.spotAngle * Math.PI / 180);\n                shaderValues.setInt(Scene3D.SPOTLIGHTMODE, spotLight._lightmapBakedType);\n                shaderValues.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT);\n            }\n            else {\n                shaderValues.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SPOTLIGHT);\n            }\n        }\n    }\n    get cullInfoCamera() {\n        return this._cullInfoCamera;\n    }\n    _setCullCamera(camera) {\n        this._cullInfoCamera = camera;\n        if (camera) {\n            this.skyRenderer.setRenderElement(camera.skyRenderElement);\n        }\n        else {\n            this.skyRenderer.setRenderElement(null);\n        }\n    }\n    recaculateCullCamera() {\n        this._setCullCamera(this._cameraPool[0]);\n        this._cameraPool.forEach(element => {\n            if (this.cullInfoCamera.maxlocalYDistance < element.maxlocalYDistance) {\n                this._setCullCamera(element);\n            }\n        });\n    }\n    _addCamera(camera) {\n        var index = this._binarySearchIndexInCameraPool(camera);\n        var order = camera._renderingOrder;\n        var count = this._cameraPool.length;\n        while (index < count && this._cameraPool[index]._renderingOrder <= order)\n            index++;\n        this._cameraPool.splice(index, 0, camera);\n    }\n    _removeCamera(camera) {\n        this._cameraPool.splice(this._cameraPool.indexOf(camera), 1);\n    }\n    _addRenderObject(render) {\n        this._sceneRenderManager.addRenderObject(render);\n        render._inRenderList = true;\n        render._addReflectionProbeUpdate();\n    }\n    _removeRenderObject(render) {\n        render._inRenderList = false;\n        this._sceneRenderManager.removeRenderObject(render);\n    }\n    destroy(destroyChild = true) {\n        if (this._destroyed)\n            return;\n        super.destroy(destroyChild);\n        this._nativeObj = null;\n        this._skyRenderer.destroy();\n        this._skyRenderer = null;\n        this._directionLights = null;\n        this._pointLights = null;\n        this._spotLights = null;\n        this._alternateLights = null;\n        (RenderContext3D._instance.scene == this) && (RenderContext3D._instance.scene = null);\n        this._shaderValues.destroy();\n        this._shaderValues = null;\n        this.sceneRenderableManager.destroy();\n        this._sceneRenderManager = null;\n        this._cameraPool = null;\n        this._physicsManager && this._physicsManager.destroy();\n        var maps = this._lightmaps;\n        if (maps) {\n            for (var i = 0, n = maps.length; i < n; i++) {\n                var map = maps[i];\n                map.lightmapColor && map.lightmapColor._removeReference();\n                map.lightmapDirection && map.lightmapDirection._removeReference();\n            }\n        }\n        this._lightmaps = null;\n        this._volumeManager.destroy();\n        this._componentDriver.callDestroy();\n    }\n    getComponentElementManager(type) {\n        return this.componentElementMap.get(type);\n    }\n    render(ctx) {\n        return;\n        if (this._children.length > 0) {\n            ctx.drawLeftData();\n            this.renderSubmit();\n        }\n    }\n    renderSubmit() {\n        if (this._children.length <= 0)\n            return;\n        if (this._renderByEditor)\n            return;\n        this._prepareSceneToRender();\n        var i, n, n1;\n        Scene3D._updateMark++;\n        for (i = 0, n = this._cameraPool.length, n1 = n - 1; i < n; i++) {\n            var camera = this._cameraPool[i];\n            if (camera.enableRender && camera.activeInHierarchy) {\n                if (camera.renderTarget) {\n                    camera.enableBuiltInRenderTexture || (camera.enableBuiltInRenderTexture = false);\n                }\n                else {\n                    camera.enableBuiltInRenderTexture || (camera.enableBuiltInRenderTexture = true);\n                }\n                camera.render(this);\n                if (!camera._offScreenRenderTexture) {\n                    this.blitMainCanvans(camera._internalRenderTexture, camera.normalizedViewport, camera);\n                }\n                camera._aftRenderMainPass();\n            }\n        }\n        Context.set2DRenderConfig();\n        RenderTexture.clearPool();\n    }\n    blitMainCanvans(source, normalizeViewPort, camera) {\n        if (!source)\n            return;\n        Scene3D.mainCavansViewPort.x = RenderContext3D.clientWidth * normalizeViewPort.x | 0;\n        Scene3D.mainCavansViewPort.y = RenderContext3D.clientHeight * normalizeViewPort.y | 0;\n        Scene3D.mainCavansViewPort.width = RenderContext3D.clientWidth * normalizeViewPort.width | 0;\n        Scene3D.mainCavansViewPort.height = RenderContext3D.clientHeight * normalizeViewPort.height | 0;\n        source.filterMode = FilterMode.Bilinear;\n        if (camera.fxaa)\n            BlitFrameBufferCMD.shaderdata.addDefine(BaseCamera.SHADERDEFINE_FXAA);\n        var cmd = BlitFrameBufferCMD.create(source, null, Scene3D.mainCavansViewPort, null, null, BlitFrameBufferCMD.shaderdata);\n        cmd.run();\n        cmd.recover();\n        RenderTexture2D._clear = false;\n        BlitFrameBufferCMD.shaderdata.removeDefine(BaseCamera.SHADERDEFINE_FXAA);\n    }\n    reUse(context, pos) {\n        return 0;\n    }\n    setGlobalShaderValue(name, type, value) {\n        var shaderOffset = Shader3D.propertyNameToID(name);\n        this._shaderValues.setShaderData(shaderOffset, type, value);\n    }\n    get fogRange() {\n        return this._fogParams.y - this.fogParams.x;\n    }\n    set fogRange(value) {\n        this._fogParams.y = value + this.fogParams.x;\n        this.fogParams = this._fogParams;\n    }\n    setlightmaps(value) {\n        var maps = this._lightmaps;\n        for (var i = 0, n = maps.length; i < n; i++)\n            maps[i].lightmapColor._removeReference();\n        if (value) {\n            var count = value.length;\n            maps.length = count;\n            for (i = 0; i < count; i++) {\n                var lightMap = value[i];\n                lightMap._addReference();\n                (maps[i]) || (maps[i] = new Lightmap());\n                maps[i].lightmapColor = lightMap;\n            }\n        }\n        else {\n            throw new Error(\"Scene3D: value value can't be null.\");\n        }\n    }\n    getlightmaps() {\n        var lightmapColors = new Array(this._lightmaps.length);\n        for (var i = 0; i < this._lightmaps.length; i++) {\n            lightmapColors[i] = this._lightmaps[i].lightmapColor;\n        }\n        return lightmapColors;\n    }\n}\nScene3D.physicsSettings = new PhysicsSettings();\nScene3D.mainCavansViewPort = new Viewport(0, 0, 1, 1);\nScene3D.componentManagerMap = new Map();\n","import { GeometryElement } from \"../core/GeometryElement\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { DrawType } from \"../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nexport class SubMeshInstanceBatch extends GeometryElement {\n    static __init__() {\n        SubMeshInstanceBatch.instance = new SubMeshInstanceBatch();\n    }\n    constructor() {\n        super(MeshTopology.Triangles, DrawType.DrawElementInstance);\n        this.instanceWorldMatrixData = new Float32Array(SubMeshInstanceBatch.maxInstanceCount * 20);\n        this.instanceSimpleAnimatorData = new Float32Array(SubMeshInstanceBatch.maxInstanceCount * 4);\n        this.indexFormat = IndexFormat.UInt16;\n        this.instanceWorldMatrixBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(this.instanceWorldMatrixData.length * 4, BufferUsage.Dynamic, false);\n        this.instanceWorldMatrixBuffer.vertexDeclaration = VertexMesh.instanceWorldMatrixDeclaration;\n        this.instanceWorldMatrixBuffer.instanceBuffer = true;\n        this.instanceSimpleAnimatorBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(this.instanceSimpleAnimatorData.length * 4, BufferUsage.Dynamic, false);\n        this.instanceSimpleAnimatorBuffer.vertexDeclaration = VertexMesh.instanceSimpleAnimatorDeclaration;\n        this.instanceSimpleAnimatorBuffer.instanceBuffer = true;\n    }\n    _updateRenderParams(state) {\n    }\n}\nSubMeshInstanceBatch.maxInstanceCount = 1024;\n","import { FastSinglelist } from \"../../../utils/SingletonList\";\nimport { MeshInstanceGeometry } from \"../../graphics/MeshInstanceGeometry\";\nimport { RenderElement } from \"./RenderElement\";\nexport class InstanceRenderElement extends RenderElement {\n    static create() {\n        let elemet = InstanceRenderElement._pool.length > 0 ? InstanceRenderElement._pool.pop() : new InstanceRenderElement();\n        elemet._isInPool = false;\n        elemet.clear();\n        return elemet;\n    }\n    constructor() {\n        super();\n        this._InvertFront = false;\n        this.setGeometry(new MeshInstanceGeometry(null));\n        this._instanceBatchElementList = new FastSinglelist();\n        this._isUpdataData = true;\n        this._invertFrontFace = false;\n    }\n    getInvertFront() {\n        return this._invertFrontFace;\n    }\n    set InvertFront(value) {\n        this._InvertFront = value;\n    }\n    _createRenderElementOBJ() {\n    }\n    compileShader(context) {\n        var passes = this._subShader._passes;\n    }\n    _renderUpdatePre(context) {\n    }\n    updateInstanceData(mesh) {\n    }\n    clear() {\n        this._instanceBatchElementList.length = 0;\n    }\n    recover() {\n    }\n}\nInstanceRenderElement.maxInstanceCount = 1024;\nInstanceRenderElement._pool = [];\n","import { GeometryElement } from \"../../core/GeometryElement\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { NotReadableError } from \"../../../utils/Error\";\nexport class SubMesh extends GeometryElement {\n    get indexCount() {\n        return this._indexCount;\n    }\n    constructor(mesh) {\n        super(MeshTopology.Triangles, DrawType.DrawElement);\n        this.indexFormat = mesh.indexFormat;\n        if (mesh.indexFormat === IndexFormat.UInt32 && !LayaGL.renderEngine.getCapable(RenderCapable.Element_Index_Uint32)) {\n            console.warn(\"SubMesh:this device do not support IndexFormat.UInt32.\");\n            return;\n        }\n        this._mesh = mesh;\n        this._boneIndicesList = [];\n        this._subIndexBufferStart = [];\n        this._subIndexBufferCount = [];\n        this.bufferState = mesh._bufferState;\n    }\n    _setIndexRange(indexStart, indexCount, indexFormat = IndexFormat.UInt16) {\n        this._indexStart = indexStart;\n        this._indexCount = indexCount;\n        if (this._indexBuffer.canRead) {\n            if (indexFormat == IndexFormat.UInt16) {\n                this._indices = new Uint16Array(this._indexBuffer.getData().buffer, indexStart * 2, indexCount);\n            }\n            else {\n                this._indices = new Uint32Array(this._indexBuffer.getData().buffer, indexStart * 4, indexCount);\n            }\n        }\n    }\n    _getType() {\n        return SubMesh._type;\n    }\n    _prepareRender(state) {\n        this._mesh._uploadVerticesData();\n        return true;\n    }\n    _updateRenderParams(state) {\n        var mesh = this._mesh;\n        var byteCount;\n        switch (mesh._indexFormat) {\n            case IndexFormat.UInt32:\n                byteCount = 4;\n                break;\n            case IndexFormat.UInt16:\n                byteCount = 2;\n                break;\n            case IndexFormat.UInt8:\n                byteCount = 1;\n                break;\n        }\n        this.clearRenderParams();\n        if (this._boneIndicesList && this._boneIndicesList.length > 1) {\n            for (var i = 0, n = this._boneIndicesList.length; i < n; i++) {\n                this.setDrawElemenParams(this._subIndexBufferCount[i], this._subIndexBufferStart[i] * byteCount);\n            }\n        }\n        else {\n            this.setDrawElemenParams(this._indexCount, this._indexStart * byteCount);\n        }\n    }\n    getIndices() {\n        if (this._mesh._isReadable)\n            return this._indices.slice();\n        else\n            throw new NotReadableError();\n    }\n    setIndices(indices) {\n        this._indexBuffer.setData(indices, this._indexStart, 0, this._indexCount);\n    }\n    destroy() {\n        if (this._destroyed)\n            return;\n        super.destroy();\n        this._indexBuffer = null;\n        this._vertexBuffer = null;\n        this._mesh = null;\n        this._boneIndicesList = null;\n        this._subIndexBufferStart = null;\n        this._subIndexBufferCount = null;\n    }\n}\nSubMesh._type = GeometryElement._typeCounter++;\n","export var EPhysicsCapable;\n(function (EPhysicsCapable) {\n    EPhysicsCapable[EPhysicsCapable[\"Physics_Gravity\"] = 0] = \"Physics_Gravity\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_StaticCollider\"] = 1] = \"Physics_StaticCollider\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_DynamicCollider\"] = 2] = \"Physics_DynamicCollider\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_CharacterCollider\"] = 3] = \"Physics_CharacterCollider\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_BoxColliderShape\"] = 4] = \"Physics_BoxColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_SphereColliderShape\"] = 5] = \"Physics_SphereColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_CapsuleColliderShape\"] = 6] = \"Physics_CapsuleColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_CylinderColliderShape\"] = 7] = \"Physics_CylinderColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_ConeColliderShape\"] = 8] = \"Physics_ConeColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_MeshColliderShape\"] = 9] = \"Physics_MeshColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_CompoundColliderShape\"] = 10] = \"Physics_CompoundColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_CreateCorveMesh\"] = 11] = \"Physics_CreateCorveMesh\";\n    EPhysicsCapable[EPhysicsCapable[\"physics_heightFieldColliderShape\"] = 12] = \"physics_heightFieldColliderShape\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_Joint\"] = 13] = \"Physics_Joint\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_FixedJoint\"] = 14] = \"Physics_FixedJoint\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_SpringJoint\"] = 15] = \"Physics_SpringJoint\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_HingeJoint\"] = 16] = \"Physics_HingeJoint\";\n    EPhysicsCapable[EPhysicsCapable[\"Physics_D6Joint\"] = 17] = \"Physics_D6Joint\";\n})(EPhysicsCapable || (EPhysicsCapable = {}));\n","import { ILaya } from \"../../../../ILaya\";\nimport { Loader } from \"../../../net/Loader\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { Resource } from \"../../../resource/Resource\";\nimport { InstanceRenderElement } from \"../../core/render/InstanceRenderElement\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { SubMesh } from \"./SubMesh\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { VertexElementFormat } from \"../../../renders/VertexElementFormat\";\nimport { BufferState } from \"../../../webgl/utils/BufferState\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { Config } from \"../../../../Config\";\nimport { EPhysicsCapable } from \"../../../Physics3D/physicsEnum/EPhycisCapable\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { NotReadableError } from \"../../../utils/Error\";\nexport class skinnedMatrixCache {\n    constructor(subMeshIndex, batchIndex, batchBoneIndex) {\n        this.subMeshIndex = subMeshIndex;\n        this.batchIndex = batchIndex;\n        this.batchBoneIndex = batchBoneIndex;\n    }\n}\nexport class Mesh extends Resource {\n    static load(url, complete) {\n        ILaya.loader.load(url, complete, null, Loader.MESH);\n    }\n    get inverseAbsoluteBindPoses() {\n        return this._inverseBindPoses;\n    }\n    get vertexCount() {\n        return this._vertexCount;\n    }\n    get indexCount() {\n        return this._indexBuffer.indexCount;\n    }\n    get subMeshCount() {\n        return this._subMeshes.length;\n    }\n    get bounds() {\n        return this._bounds;\n    }\n    set bounds(value) {\n        if (this._bounds !== value)\n            value.cloneTo(this._bounds);\n    }\n    get indexFormat() {\n        return this._indexFormat;\n    }\n    set indexFormat(value) {\n        this._indexFormat = value;\n        this._subMeshes.forEach(element => {\n            element.indexFormat = value;\n        });\n    }\n    constructor(isReadable = true) {\n        super();\n        this._minVerticesUpdate = -1;\n        this._maxVerticesUpdate = -1;\n        this._needUpdateBounds = true;\n        this._bufferState = new BufferState();\n        this._instanceBufferStateType = 0;\n        this._vertexBuffer = null;\n        this._indexBuffer = null;\n        this._skinnedMatrixCaches = [];\n        this._vertexCount = 0;\n        this._indexFormat = IndexFormat.UInt16;\n        this._bounds = new Bounds(new Vector3(), new Vector3());\n        this._isReadable = isReadable;\n        this._subMeshes = [];\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\n    }\n    _getPositionElement(vertexBuffer) {\n        var vertexElements = vertexBuffer.vertexDeclaration._vertexElements;\n        for (var i = 0, n = vertexElements.length; i < n; i++) {\n            var vertexElement = vertexElements[i];\n            if (vertexElement._elementFormat === VertexElementFormat.Vector3 && vertexElement._elementUsage === VertexMesh.MESH_POSITION0)\n                return vertexElement;\n        }\n        return null;\n    }\n    _getVerticeElementData(data, elementUsage) {\n        data.length = this._vertexCount;\n        var verDec = this._vertexBuffer.vertexDeclaration;\n        var element = verDec.getVertexElementByUsage(elementUsage);\n        if (element) {\n            var uint8Vertices = this._vertexBuffer.getUint8Data();\n            var floatVertices = this._vertexBuffer.getFloat32Data();\n            var uint8VerStr = verDec.vertexStride;\n            var floatVerStr = uint8VerStr / 4;\n            var uint8EleOffset = element._offset;\n            var floatEleOffset = uint8EleOffset / 4;\n            switch (elementUsage) {\n                case VertexMesh.MESH_TEXTURECOORDINATE0:\n                case VertexMesh.MESH_TEXTURECOORDINATE1:\n                    for (var i = 0; i < this._vertexCount; i++) {\n                        var offset = floatVerStr * i + floatEleOffset;\n                        data[i] = new Vector2(floatVertices[offset], floatVertices[offset + 1]);\n                    }\n                    break;\n                case VertexMesh.MESH_POSITION0:\n                case VertexMesh.MESH_NORMAL0:\n                    for (var i = 0; i < this._vertexCount; i++) {\n                        var offset = floatVerStr * i + floatEleOffset;\n                        data[i] = new Vector3(floatVertices[offset], floatVertices[offset + 1], floatVertices[offset + 2]);\n                    }\n                    break;\n                case VertexMesh.MESH_TANGENT0:\n                case VertexMesh.MESH_BLENDWEIGHT0:\n                    for (var i = 0; i < this._vertexCount; i++) {\n                        var offset = floatVerStr * i + floatEleOffset;\n                        data[i] = new Vector4(floatVertices[offset], floatVertices[offset + 1], floatVertices[offset + 2], floatVertices[offset + 3]);\n                    }\n                    break;\n                case VertexMesh.MESH_COLOR0:\n                    for (var i = 0; i < this._vertexCount; i++) {\n                        var offset = floatVerStr * i + floatEleOffset;\n                        data[i] = new Color(floatVertices[offset], floatVertices[offset + 1], floatVertices[offset + 2], floatVertices[offset + 3]);\n                    }\n                    break;\n                case VertexMesh.MESH_BLENDINDICES0:\n                    for (var i = 0; i < this._vertexCount; i++) {\n                        var offset = uint8VerStr * i + uint8EleOffset;\n                        data[i] = new Vector4(uint8Vertices[offset], uint8Vertices[offset + 1], uint8Vertices[offset + 2], uint8Vertices[offset + 3]);\n                    }\n                    break;\n                default:\n                    throw \"Mesh:Unknown elementUsage.\";\n            }\n        }\n    }\n    _setVerticeElementData(data, elementUsage) {\n        var verDec = this._vertexBuffer.vertexDeclaration;\n        var element = verDec.getVertexElementByUsage(elementUsage);\n        if (element) {\n            var uint8Vertices = this._vertexBuffer.getUint8Data();\n            var floatVertices = this._vertexBuffer.getFloat32Data();\n            var uint8VerStr = verDec.vertexStride;\n            var float8VerStr = uint8VerStr / 4;\n            var uint8EleOffset = element._offset;\n            var floatEleOffset = uint8EleOffset / 4;\n            switch (elementUsage) {\n                case VertexMesh.MESH_TEXTURECOORDINATE0:\n                case VertexMesh.MESH_TEXTURECOORDINATE1:\n                    for (var i = 0, n = data.length; i < n; i++) {\n                        var offset = float8VerStr * i + floatEleOffset;\n                        var vec2 = data[i];\n                        floatVertices[offset] = vec2.x;\n                        floatVertices[offset + 1] = vec2.y;\n                    }\n                    break;\n                case VertexMesh.MESH_POSITION0:\n                case VertexMesh.MESH_NORMAL0:\n                    for (var i = 0, n = data.length; i < n; i++) {\n                        var offset = float8VerStr * i + floatEleOffset;\n                        var vec3 = data[i];\n                        floatVertices[offset] = vec3.x;\n                        floatVertices[offset + 1] = vec3.y;\n                        floatVertices[offset + 2] = vec3.z;\n                    }\n                    break;\n                case VertexMesh.MESH_TANGENT0:\n                case VertexMesh.MESH_BLENDWEIGHT0:\n                    for (var i = 0, n = data.length; i < n; i++) {\n                        var offset = float8VerStr * i + floatEleOffset;\n                        var vec4 = data[i];\n                        floatVertices[offset] = vec4.x;\n                        floatVertices[offset + 1] = vec4.y;\n                        floatVertices[offset + 2] = vec4.z;\n                        floatVertices[offset + 3] = vec4.w;\n                    }\n                    break;\n                case VertexMesh.MESH_COLOR0:\n                    for (var i = 0, n = data.length; i < n; i++) {\n                        var offset = float8VerStr * i + floatEleOffset;\n                        var cor = data[i];\n                        floatVertices[offset] = cor.r;\n                        floatVertices[offset + 1] = cor.g;\n                        floatVertices[offset + 2] = cor.b;\n                        floatVertices[offset + 3] = cor.a;\n                    }\n                    break;\n                case VertexMesh.MESH_BLENDINDICES0:\n                    for (var i = 0, n = data.length; i < n; i++) {\n                        var offset = uint8VerStr * i + uint8EleOffset;\n                        var vec4 = data[i];\n                        uint8Vertices[offset] = vec4.x;\n                        uint8Vertices[offset + 1] = vec4.y;\n                        uint8Vertices[offset + 2] = vec4.z;\n                        uint8Vertices[offset + 3] = vec4.w;\n                    }\n                    break;\n                default:\n                    throw \"Mesh:Unknown elementUsage.\";\n            }\n            this._minVerticesUpdate = 0;\n            this._maxVerticesUpdate = Number.MAX_SAFE_INTEGER;\n            this._vertexBuffer.setData(floatVertices.buffer, 0, 0, floatVertices.byteLength);\n        }\n        else {\n            console.warn(\"Mesh: the mesh don't have  this VertexElement.\");\n        }\n    }\n    _disposeResource() {\n        for (var i = 0, n = this._subMeshes.length; i < n; i++)\n            this._subMeshes[i].destroy();\n        this._vertexBuffer && this._vertexBuffer.destroy();\n        this._indexBuffer && this._indexBuffer.destroy();\n        this._bufferState.destroy();\n        this._instanceBufferState && this._instanceBufferState.destroy();\n        this._instanceWorldVertexBuffer && this._instanceWorldVertexBuffer.destroy();\n        this._instanceSimpleAniVertexBuffer && this._instanceSimpleAniVertexBuffer.destroy();\n        this._instanceLightMapVertexBuffer && this._instanceLightMapVertexBuffer.destroy();\n        this.instanceLightMapScaleOffsetData && (this.instanceLightMapScaleOffsetData = null);\n        this._setCPUMemory(0);\n        this._setGPUMemory(0);\n        this._bufferState = null;\n        this._instanceBufferState = null;\n        this._vertexBuffer = null;\n        this._indexBuffer = null;\n        this._subMeshes = null;\n        this._btTriangleMesh = null;\n        this._indexBuffer = null;\n        this._boneNames = null;\n        this._inverseBindPoses = null;\n        this.morphTargetData && (this.morphTargetData.destroy());\n        this.__convexMesh && this.__convexMesh.destroy();\n    }\n    _setSubMeshes(subMeshes) {\n        this._subMeshes = subMeshes;\n        for (var i = 0, n = subMeshes.length; i < n; i++)\n            subMeshes[i]._indexInMesh = i;\n    }\n    _setBuffer(vertexBuffer, indexBuffer) {\n        var bufferState = this._bufferState;\n        bufferState.applyState([vertexBuffer], indexBuffer);\n    }\n    _setInstanceBuffer() {\n        if (this._instanceBufferState)\n            return;\n        var instanceBufferState = this._instanceBufferState = new BufferState();\n        var instanceBufferStateType = this._instanceBufferStateType;\n        let vertexArray = [];\n        vertexArray.push(this._vertexBuffer);\n        let instanceBuffer3D = this._instanceWorldVertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(InstanceRenderElement.maxInstanceCount * 16 * 4, BufferUsage.Dynamic, false);\n        ;\n        instanceBuffer3D.vertexDeclaration = VertexMesh.instanceWorldMatrixDeclaration;\n        instanceBuffer3D.instanceBuffer = true;\n        vertexArray.push(instanceBuffer3D);\n        switch (instanceBufferStateType) {\n            case Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR:\n                let instanceSimpleAnimatorBuffer = this._instanceSimpleAniVertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(InstanceRenderElement.maxInstanceCount * 4 * 4, BufferUsage.Dynamic, false);\n                instanceSimpleAnimatorBuffer.vertexDeclaration = VertexMesh.instanceSimpleAnimatorDeclaration;\n                instanceSimpleAnimatorBuffer.instanceBuffer = true;\n                vertexArray.push(instanceSimpleAnimatorBuffer);\n                break;\n            case Mesh.MESH_INSTANCEBUFFER_TYPE_NORMAL:\n                if (this.getVertexDeclaration().getVertexElementByUsage(VertexMesh.MESH_TEXTURECOORDINATE1)) {\n                    let instanceLightMapVertexBuffer = this._instanceLightMapVertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(InstanceRenderElement.maxInstanceCount * 4 * 4, BufferUsage.Dynamic, false);\n                    instanceLightMapVertexBuffer.vertexDeclaration = VertexMesh.instanceLightMapScaleOffsetDeclaration;\n                    instanceLightMapVertexBuffer.instanceBuffer = true;\n                    this.instanceLightMapScaleOffsetData = new Float32Array(InstanceRenderElement.maxInstanceCount * 4);\n                    vertexArray.push(instanceLightMapVertexBuffer);\n                }\n                break;\n        }\n        instanceBufferState.applyState(vertexArray, this._indexBuffer);\n    }\n    _uploadVerticesData() {\n        var min = this._minVerticesUpdate;\n        var max = this._maxVerticesUpdate;\n        if (min !== -1 && max !== -1) {\n            var offset = min;\n            this._vertexBuffer.setData(this._vertexBuffer.getUint8Data().buffer, offset, offset, max - min);\n            this._minVerticesUpdate = -1;\n            this._maxVerticesUpdate = -1;\n        }\n    }\n    getSubMesh(index) {\n        return this._subMeshes[index];\n    }\n    getPositions(positions) {\n        if (this._isReadable)\n            this._getVerticeElementData(positions, VertexMesh.MESH_POSITION0);\n        else\n            throw new NotReadableError();\n    }\n    setPositions(positions) {\n        if (this._isReadable) {\n            this._setVerticeElementData(positions, VertexMesh.MESH_POSITION0);\n            this._needUpdateBounds = true;\n        }\n        else {\n            throw new NotReadableError();\n        }\n    }\n    getColors(colors) {\n        if (this._isReadable)\n            this._getVerticeElementData(colors, VertexMesh.MESH_COLOR0);\n        else\n            throw new NotReadableError();\n    }\n    setColors(colors) {\n        if (this._isReadable)\n            this._setVerticeElementData(colors, VertexMesh.MESH_COLOR0);\n        else\n            throw new NotReadableError();\n    }\n    getUVs(uvs, channel = 0) {\n        if (this._isReadable) {\n            switch (channel) {\n                case 0:\n                    this._getVerticeElementData(uvs, VertexMesh.MESH_TEXTURECOORDINATE0);\n                    break;\n                case 1:\n                    this._getVerticeElementData(uvs, VertexMesh.MESH_TEXTURECOORDINATE1);\n                    break;\n                default:\n                    throw \"Mesh:Invalid channel.\";\n            }\n        }\n        else {\n            throw new NotReadableError();\n        }\n    }\n    setUVs(uvs, channel = 0) {\n        if (this._isReadable) {\n            switch (channel) {\n                case 0:\n                    this._setVerticeElementData(uvs, VertexMesh.MESH_TEXTURECOORDINATE0);\n                    break;\n                case 1:\n                    this._setVerticeElementData(uvs, VertexMesh.MESH_TEXTURECOORDINATE1);\n                    break;\n                default:\n                    throw \"Mesh:Invalid channel.\";\n            }\n        }\n        else {\n            throw new NotReadableError();\n        }\n    }\n    getNormals(normals) {\n        if (this._isReadable)\n            this._getVerticeElementData(normals, VertexMesh.MESH_NORMAL0);\n        else\n            throw new NotReadableError();\n    }\n    setNormals(normals) {\n        if (this._isReadable)\n            this._setVerticeElementData(normals, VertexMesh.MESH_NORMAL0);\n        else\n            throw new NotReadableError();\n    }\n    getTangents(tangents) {\n        if (this._isReadable)\n            this._getVerticeElementData(tangents, VertexMesh.MESH_TANGENT0);\n        else\n            throw new NotReadableError();\n    }\n    setTangents(tangents) {\n        if (this._isReadable)\n            this._setVerticeElementData(tangents, VertexMesh.MESH_TANGENT0);\n        else\n            throw new NotReadableError();\n    }\n    getBoneWeights(boneWeights) {\n        if (this._isReadable)\n            this._getVerticeElementData(boneWeights, VertexMesh.MESH_BLENDWEIGHT0);\n        else\n            throw new NotReadableError();\n    }\n    setBoneWeights(boneWeights) {\n        if (this._isReadable)\n            this._setVerticeElementData(boneWeights, VertexMesh.MESH_BLENDWEIGHT0);\n        else\n            throw new NotReadableError();\n    }\n    getBoneIndices(boneIndices) {\n        if (this._isReadable)\n            this._getVerticeElementData(boneIndices, VertexMesh.MESH_BLENDINDICES0);\n        else\n            throw new NotReadableError();\n    }\n    setBoneIndices(boneIndices) {\n        if (this._isReadable)\n            this._setVerticeElementData(boneIndices, VertexMesh.MESH_BLENDINDICES0);\n        else\n            throw new NotReadableError();\n    }\n    markAsUnreadbale() {\n        this._uploadVerticesData();\n        this._vertexBuffer.markAsUnreadbale();\n        this._isReadable = false;\n    }\n    getVertexDeclaration() {\n        return this._vertexBuffer.vertexDeclaration;\n    }\n    getVertices() {\n        if (this._isReadable)\n            return this._vertexBuffer.getUint8Data().buffer.slice(0);\n        else\n            throw new NotReadableError();\n    }\n    setVertices(vertices) {\n        this._vertexBuffer.setData(vertices);\n        this._needUpdateBounds = true;\n    }\n    getIndices() {\n        if (this._isReadable)\n            return this._indexBuffer.getData().slice();\n        else\n            throw new NotReadableError();\n    }\n    setIndices(indices) {\n        var format;\n        if (indices instanceof Uint32Array)\n            format = IndexFormat.UInt32;\n        else if (indices instanceof Uint16Array)\n            format = IndexFormat.UInt16;\n        else if (indices instanceof Uint8Array)\n            format = IndexFormat.UInt8;\n        var indexBuffer = this._indexBuffer;\n        if (this._indexFormat !== format || indexBuffer.indexCount !== indices.length) {\n            indexBuffer.destroy();\n            this._indexBuffer = indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(format, indices.length, BufferUsage.Static, this._isReadable);\n        }\n        indexBuffer.setData(indices);\n        this.indexFormat = format;\n    }\n    calculateBounds() {\n        if (this._isReadable) {\n            if (this._needUpdateBounds) {\n                var min = _tempVector30;\n                var max = _tempVector31;\n                min.x = min.y = min.z = Number.MAX_VALUE;\n                max.x = max.y = max.z = -Number.MAX_VALUE;\n                var vertexBuffer = this._vertexBuffer;\n                var positionElement = this._getPositionElement(vertexBuffer);\n                var verticesData = vertexBuffer.getFloat32Data();\n                var floatCount = vertexBuffer.vertexDeclaration.vertexStride / 4;\n                var posOffset = positionElement._offset / 4;\n                for (var j = 0, m = verticesData.length; j < m; j += floatCount) {\n                    var ofset = j + posOffset;\n                    var pX = verticesData[ofset];\n                    var pY = verticesData[ofset + 1];\n                    var pZ = verticesData[ofset + 2];\n                    min.x = Math.min(min.x, pX);\n                    min.y = Math.min(min.y, pY);\n                    min.z = Math.min(min.z, pZ);\n                    max.x = Math.max(max.x, pX);\n                    max.y = Math.max(max.y, pY);\n                    max.z = Math.max(max.z, pZ);\n                }\n                this._bounds.setMin(min);\n                this._bounds.setMax(max);\n                this._needUpdateBounds = false;\n            }\n        }\n        else {\n            throw new NotReadableError();\n        }\n    }\n    getCorveMesh() {\n        if (this._convexMesh == null) {\n            return null;\n        }\n        let util = ILaya.Laya3D._PhysicsCreateUtil;\n        if (this.__convexMesh == null && util && util.getPhysicsCapable(EPhysicsCapable.Physics_CreateCorveMesh)) {\n            this.__convexMesh = util.createCorveMesh(this);\n        }\n        return this.__convexMesh;\n    }\n    cloneTo(destObject) {\n        var vb = this._vertexBuffer;\n        var destVB = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vb._byteLength, vb.bufferUsage, vb.canRead);\n        destVB.vertexDeclaration = vb.vertexDeclaration;\n        destVB.setData(vb.getUint8Data().slice().buffer);\n        destObject._vertexBuffer = destVB;\n        destObject._vertexCount = this._vertexCount;\n        var ib = this._indexBuffer;\n        var destIB = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, ib.indexCount, ib.bufferUsage, ib.canRead);\n        destIB.setData(ib.getData().slice());\n        destObject._indexBuffer = destIB;\n        destObject._setBuffer(destObject._vertexBuffer, destIB);\n        destObject._instanceBufferStateType = this._instanceBufferStateType;\n        destObject._setCPUMemory(this.cpuMemory);\n        destObject._setGPUMemory(this.gpuMemory);\n        var i;\n        var boneNames = this._boneNames;\n        if (boneNames) {\n            var destBoneNames = destObject._boneNames = [];\n            for (i = 0; i < boneNames.length; i++)\n                destBoneNames[i] = boneNames[i];\n        }\n        var inverseBindPoses = this._inverseBindPoses;\n        if (inverseBindPoses) {\n            var destInverseBindPoses = destObject._inverseBindPoses = [];\n            for (i = 0; i < inverseBindPoses.length; i++)\n                destInverseBindPoses[i] = inverseBindPoses[i];\n        }\n        if (this._inverseBindPosesBuffer) {\n            let length = this._inverseBindPosesBuffer.byteLength;\n            destObject._inverseBindPosesBuffer = new ArrayBuffer(length);\n            new Uint8Array(destObject._inverseBindPosesBuffer).set(new Uint8Array(this._inverseBindPosesBuffer));\n        }\n        var cacheLength = this._skinnedMatrixCaches.length;\n        destObject._skinnedMatrixCaches.length = cacheLength;\n        for (i = 0; i < cacheLength; i++) {\n            var skinnedCache = this._skinnedMatrixCaches[i];\n            if (skinnedCache)\n                destObject._skinnedMatrixCaches[i] = new skinnedMatrixCache(skinnedCache.subMeshIndex, skinnedCache.batchIndex, skinnedCache.batchBoneIndex);\n        }\n        for (i = 0; i < this.subMeshCount; i++) {\n            var subMesh = this._subMeshes[i];\n            var subIndexBufferStart = subMesh._subIndexBufferStart;\n            var subIndexBufferCount = subMesh._subIndexBufferCount;\n            var boneIndicesList = subMesh._boneIndicesList;\n            var destSubmesh = new SubMesh(destObject);\n            destSubmesh._subIndexBufferStart.length = subIndexBufferStart.length;\n            destSubmesh._subIndexBufferCount.length = subIndexBufferCount.length;\n            destSubmesh._boneIndicesList.length = boneIndicesList.length;\n            for (var j = 0; j < subIndexBufferStart.length; j++)\n                destSubmesh._subIndexBufferStart[j] = subIndexBufferStart[j];\n            for (j = 0; j < subIndexBufferCount.length; j++)\n                destSubmesh._subIndexBufferCount[j] = subIndexBufferCount[j];\n            for (j = 0; j < boneIndicesList.length; j++)\n                destSubmesh._boneIndicesList[j] = new Uint16Array(boneIndicesList[j]);\n            destSubmesh._indexBuffer = destIB;\n            destSubmesh._indexStart = subMesh._indexStart;\n            destSubmesh._indexCount = subMesh._indexCount;\n            destSubmesh._indices = new Uint16Array(destIB.getData().buffer, subMesh._indexStart * 2, subMesh._indexCount);\n            var vertexBuffer = destObject._vertexBuffer;\n            destSubmesh._vertexBuffer = vertexBuffer;\n            destObject._subMeshes.push(destSubmesh);\n        }\n        destObject._setSubMeshes(destObject._subMeshes);\n        if (this.morphTargetData) {\n            destObject.morphTargetData = this.morphTargetData.clone();\n        }\n    }\n    clone() {\n        var dest = new Mesh();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nMesh.MESH_INSTANCEBUFFER_TYPE_NORMAL = 0;\nMesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR = 1;\nconst _tempVector30 = new Vector3();\nconst _tempVector31 = new Vector3();\n","import { Mesh } from \"./Mesh\";\nimport { SubMesh } from \"./SubMesh\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nexport class PrimitiveMesh {\n    static __init__() {\n    }\n    static _createMesh(vertexDeclaration, vertices, indices) {\n        var mesh = new Mesh();\n        var subMesh = new SubMesh(mesh);\n        var vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vertices.length * 4, BufferUsage.Static, true);\n        vertexBuffer.vertexDeclaration = vertexDeclaration;\n        vertexBuffer.setData(vertices.buffer);\n        mesh._vertexBuffer = vertexBuffer;\n        mesh._vertexCount = vertexBuffer._byteLength / vertexDeclaration.vertexStride;\n        var indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, indices.length, BufferUsage.Static, true);\n        indexBuffer.setData(indices);\n        mesh._indexBuffer = indexBuffer;\n        mesh._setBuffer(vertexBuffer, indexBuffer);\n        subMesh._vertexBuffer = vertexBuffer;\n        subMesh._indexBuffer = indexBuffer;\n        subMesh._setIndexRange(0, indexBuffer.indexCount);\n        var subIndexBufferStart = subMesh._subIndexBufferStart;\n        var subIndexBufferCount = subMesh._subIndexBufferCount;\n        var boneIndicesList = subMesh._boneIndicesList;\n        subIndexBufferStart.length = 1;\n        subIndexBufferCount.length = 1;\n        boneIndicesList.length = 1;\n        subIndexBufferStart[0] = 0;\n        subIndexBufferCount[0] = indexBuffer.indexCount;\n        var subMeshes = [];\n        subMeshes.push(subMesh);\n        mesh._setSubMeshes(subMeshes);\n        mesh.calculateBounds();\n        var memorySize = vertexBuffer._byteLength + indexBuffer._byteLength;\n        mesh._setCPUMemory(memorySize);\n        mesh._setGPUMemory(memorySize);\n        return mesh;\n    }\n    static createBox(long = 1, height = 1, width = 1) {\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var halfLong = long / 2;\n        var halfHeight = height / 2;\n        var halfWidth = width / 2;\n        var vertices = new Float32Array([\n            -halfLong, halfHeight, -halfWidth, 0, 1, 0, 0, 0, halfLong, halfHeight, -halfWidth, 0, 1, 0, 1, 0, halfLong, halfHeight, halfWidth, 0, 1, 0, 1, 1, -halfLong, halfHeight, halfWidth, 0, 1, 0, 0, 1,\n            -halfLong, -halfHeight, -halfWidth, 0, -1, 0, 0, 1, halfLong, -halfHeight, -halfWidth, 0, -1, 0, 1, 1, halfLong, -halfHeight, halfWidth, 0, -1, 0, 1, 0, -halfLong, -halfHeight, halfWidth, 0, -1, 0, 0, 0,\n            -halfLong, halfHeight, -halfWidth, -1, 0, 0, 0, 0, -halfLong, halfHeight, halfWidth, -1, 0, 0, 1, 0, -halfLong, -halfHeight, halfWidth, -1, 0, 0, 1, 1, -halfLong, -halfHeight, -halfWidth, -1, 0, 0, 0, 1,\n            halfLong, halfHeight, -halfWidth, 1, 0, 0, 1, 0, halfLong, halfHeight, halfWidth, 1, 0, 0, 0, 0, halfLong, -halfHeight, halfWidth, 1, 0, 0, 0, 1, halfLong, -halfHeight, -halfWidth, 1, 0, 0, 1, 1,\n            -halfLong, halfHeight, halfWidth, 0, 0, 1, 0, 0, halfLong, halfHeight, halfWidth, 0, 0, 1, 1, 0, halfLong, -halfHeight, halfWidth, 0, 0, 1, 1, 1, -halfLong, -halfHeight, halfWidth, 0, 0, 1, 0, 1,\n            -halfLong, halfHeight, -halfWidth, 0, 0, -1, 1, 0, halfLong, halfHeight, -halfWidth, 0, 0, -1, 0, 0, halfLong, -halfHeight, -halfWidth, 0, 0, -1, 0, 1, -halfLong, -halfHeight, -halfWidth, 0, 0, -1, 1, 1\n        ]);\n        var indices = new Uint16Array([\n            0, 1, 2, 2, 3, 0,\n            4, 7, 6, 6, 5, 4,\n            8, 9, 10, 10, 11, 8,\n            12, 15, 14, 14, 13, 12,\n            16, 17, 18, 18, 19, 16,\n            20, 23, 22, 22, 21, 20\n        ]);\n        return PrimitiveMesh._createMesh(vertexDeclaration, vertices, indices);\n    }\n    static createCapsule(radius = 0.5, height = 2, stacks = 16, slices = 32) {\n        var vertexCount = (stacks + 1) * (slices + 1) * 2 + (slices + 1) * 2;\n        var indexCount = (3 * stacks * (slices + 1)) * 2 * 2 + 2 * slices * 3;\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var vertexFloatStride = vertexDeclaration.vertexStride / 4;\n        var vertices = new Float32Array(vertexCount * vertexFloatStride);\n        var indices = new Uint16Array(indexCount);\n        var stackAngle = (Math.PI / 2.0) / stacks;\n        var sliceAngle = (Math.PI * 2.0) / slices;\n        var hcHeight = height / 2 - radius;\n        var posX = 0;\n        var posY = 0;\n        var posZ = 0;\n        var vc = 0;\n        var ic = 0;\n        var verticeCount = 0;\n        var stack, slice;\n        for (stack = 0; stack <= stacks; stack++) {\n            for (slice = 0; slice <= slices; slice++) {\n                posX = radius * Math.cos(stack * stackAngle) * Math.cos(slice * sliceAngle + Math.PI);\n                posY = radius * Math.sin(stack * stackAngle);\n                posZ = radius * Math.cos(stack * stackAngle) * Math.sin(slice * sliceAngle + Math.PI);\n                vertices[vc++] = posX;\n                vertices[vc++] = posY + hcHeight;\n                vertices[vc++] = posZ;\n                vertices[vc++] = posX;\n                vertices[vc++] = posY;\n                vertices[vc++] = posZ;\n                vertices[vc++] = 1 - slice / slices;\n                vertices[vc++] = (1 - stack / stacks) * ((Math.PI * radius / 2) / (height + Math.PI * radius));\n                if (stack < stacks) {\n                    indices[ic++] = (stack * (slices + 1)) + slice + (slices + 1);\n                    indices[ic++] = (stack * (slices + 1)) + slice;\n                    indices[ic++] = (stack * (slices + 1)) + slice + 1;\n                    indices[ic++] = (stack * (slices + 1)) + slice + (slices);\n                    indices[ic++] = (stack * (slices + 1)) + slice;\n                    indices[ic++] = (stack * (slices + 1)) + slice + (slices + 1);\n                }\n            }\n        }\n        verticeCount += (stacks + 1) * (slices + 1);\n        for (stack = 0; stack <= stacks; stack++) {\n            for (slice = 0; slice <= slices; slice++) {\n                posX = radius * Math.cos(stack * stackAngle) * Math.cos(slice * sliceAngle + Math.PI);\n                posY = radius * Math.sin(-stack * stackAngle);\n                posZ = radius * Math.cos(stack * stackAngle) * Math.sin(slice * sliceAngle + Math.PI);\n                vertices[vc++] = posX;\n                vertices[vc++] = posY - hcHeight;\n                vertices[vc++] = posZ;\n                vertices[vc++] = posX;\n                vertices[vc++] = posY;\n                vertices[vc++] = posZ;\n                vertices[vc++] = 1 - slice / slices;\n                vertices[vc++] = ((stack / stacks) * (Math.PI * radius / 2) + (height + Math.PI * radius / 2)) / (height + Math.PI * radius);\n                if (stack < stacks) {\n                    indices[ic++] = verticeCount + (stack * (slices + 1)) + slice;\n                    indices[ic++] = verticeCount + (stack * (slices + 1)) + slice + (slices + 1);\n                    indices[ic++] = verticeCount + (stack * (slices + 1)) + slice + 1;\n                    indices[ic++] = verticeCount + (stack * (slices + 1)) + slice;\n                    indices[ic++] = verticeCount + (stack * (slices + 1)) + slice + (slices);\n                    indices[ic++] = verticeCount + (stack * (slices + 1)) + slice + (slices + 1);\n                }\n            }\n        }\n        verticeCount += (stacks + 1) * (slices + 1);\n        for (slice = 0; slice <= slices; slice++) {\n            posX = radius * Math.cos(slice * sliceAngle + Math.PI);\n            posY = hcHeight;\n            posZ = radius * Math.sin(slice * sliceAngle + Math.PI);\n            vertices[vc++] = posX;\n            vertices[vc + (slices + 1) * 8 - 1] = posX;\n            vertices[vc++] = posY;\n            vertices[vc + (slices + 1) * 8 - 1] = -posY;\n            vertices[vc++] = posZ;\n            vertices[vc + (slices + 1) * 8 - 1] = posZ;\n            vertices[vc++] = posX;\n            vertices[vc + (slices + 1) * 8 - 1] = posX;\n            vertices[vc++] = 0;\n            vertices[vc + (slices + 1) * 8 - 1] = 0;\n            vertices[vc++] = posZ;\n            vertices[vc + (slices + 1) * 8 - 1] = posZ;\n            vertices[vc++] = 1 - slice * 1 / slices;\n            vertices[vc + (slices + 1) * 8 - 1] = 1 - slice * 1 / slices;\n            vertices[vc++] = (Math.PI * radius / 2) / (height + Math.PI * radius);\n            vertices[vc + (slices + 1) * 8 - 1] = (Math.PI * radius / 2 + height) / (height + Math.PI * radius);\n        }\n        for (slice = 0; slice < slices; slice++) {\n            indices[ic++] = slice + verticeCount + (slices + 1);\n            indices[ic++] = slice + verticeCount + 1;\n            indices[ic++] = slice + verticeCount;\n            indices[ic++] = slice + verticeCount + (slices + 1);\n            indices[ic++] = slice + verticeCount + (slices + 1) + 1;\n            indices[ic++] = slice + verticeCount + 1;\n        }\n        verticeCount += 2 * (slices + 1);\n        return PrimitiveMesh._createMesh(vertexDeclaration, vertices, indices);\n    }\n    static createCone(radius = 0.5, height = 1, slices = 32) {\n        var vertexCount = (slices + 1 + 1) + (slices + 1) * 2;\n        var indexCount = 6 * slices + 3 * slices;\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var vertexFloatStride = vertexDeclaration.vertexStride / 4;\n        var vertices = new Float32Array(vertexCount * vertexFloatStride);\n        var indices = new Uint16Array(indexCount);\n        var sliceAngle = (Math.PI * 2.0) / slices;\n        var halfHeight = height / 2;\n        var curAngle = 0;\n        var verticeCount = 0;\n        var posX = 0;\n        var posY = 0;\n        var posZ = 0;\n        var normal = new Vector3();\n        var downV3 = new Vector3(0, -1, 0);\n        var upPoint = new Vector3(0, halfHeight, 0);\n        var downPoint = new Vector3();\n        var v3 = new Vector3();\n        var q4 = new Quaternion();\n        var rotateAxis = new Vector3();\n        var rotateRadius;\n        var vc = 0;\n        var ic = 0;\n        for (var rv = 0; rv <= slices; rv++) {\n            curAngle = rv * sliceAngle;\n            posX = Math.cos(curAngle + Math.PI) * radius;\n            posY = halfHeight;\n            posZ = Math.sin(curAngle + Math.PI) * radius;\n            vertices[vc++] = 0;\n            vertices[vc + (slices + 1) * 8 - 1] = posX;\n            vertices[vc++] = posY;\n            vertices[vc + (slices + 1) * 8 - 1] = -posY;\n            vertices[vc++] = 0;\n            vertices[vc + (slices + 1) * 8 - 1] = posZ;\n            normal.x = posX;\n            normal.y = 0;\n            normal.z = posZ;\n            downPoint.x = posX;\n            downPoint.y = -posY;\n            downPoint.z = posZ;\n            Vector3.subtract(downPoint, upPoint, v3);\n            Vector3.normalize(v3, v3);\n            rotateRadius = Math.acos(Vector3.dot(downV3, v3));\n            Vector3.cross(downV3, v3, rotateAxis);\n            Vector3.normalize(rotateAxis, rotateAxis);\n            Quaternion.createFromAxisAngle(rotateAxis, rotateRadius, q4);\n            Vector3.normalize(normal, normal);\n            Vector3.transformQuat(normal, q4, normal);\n            Vector3.normalize(normal, normal);\n            vertices[vc++] = normal.x;\n            vertices[vc + (slices + 1) * 8 - 1] = normal.x;\n            vertices[vc++] = normal.y;\n            vertices[vc + (slices + 1) * 8 - 1] = normal.y;\n            vertices[vc++] = normal.z;\n            vertices[vc + (slices + 1) * 8 - 1] = normal.z;\n            vertices[vc++] = 1 - rv * 1 / slices;\n            vertices[vc + (slices + 1) * 8 - 1] = 1 - rv * 1 / slices;\n            vertices[vc++] = 0;\n            vertices[vc + (slices + 1) * 8 - 1] = 1;\n        }\n        vc += (slices + 1) * 8;\n        for (var ri = 0; ri < slices; ri++) {\n            indices[ic++] = ri + verticeCount + (slices + 1);\n            indices[ic++] = ri + verticeCount + 1;\n            indices[ic++] = ri + verticeCount;\n            indices[ic++] = ri + verticeCount + (slices + 1);\n            indices[ic++] = ri + verticeCount + (slices + 1) + 1;\n            indices[ic++] = ri + verticeCount + 1;\n        }\n        verticeCount += 2 * (slices + 1);\n        for (var bv = 0; bv <= slices; bv++) {\n            if (bv === 0) {\n                vertices[vc++] = 0;\n                vertices[vc++] = -halfHeight;\n                vertices[vc++] = 0;\n                vertices[vc++] = 0;\n                vertices[vc++] = -1;\n                vertices[vc++] = 0;\n                vertices[vc++] = 0.5;\n                vertices[vc++] = 0.5;\n            }\n            curAngle = bv * sliceAngle;\n            posX = Math.cos(curAngle + Math.PI) * radius;\n            posY = -halfHeight;\n            posZ = Math.sin(curAngle + Math.PI) * radius;\n            vertices[vc++] = posX;\n            vertices[vc++] = posY;\n            vertices[vc++] = posZ;\n            vertices[vc++] = 0;\n            vertices[vc++] = -1;\n            vertices[vc++] = 0;\n            vertices[vc++] = 0.5 + Math.cos(curAngle) * 0.5;\n            vertices[vc++] = 0.5 + Math.sin(curAngle) * 0.5;\n        }\n        for (var bi = 0; bi < slices; bi++) {\n            indices[ic++] = 0 + verticeCount;\n            indices[ic++] = bi + 2 + verticeCount;\n            indices[ic++] = bi + 1 + verticeCount;\n        }\n        verticeCount += slices + 1 + 1;\n        return PrimitiveMesh._createMesh(vertexDeclaration, vertices, indices);\n    }\n    static createCylinder(radius = 0.5, height = 2, slices = 32) {\n        var vertexCount = (slices + 1 + 1) + (slices + 1) * 2 + (slices + 1 + 1);\n        var indexCount = 3 * slices + 6 * slices + 3 * slices;\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var vertexFloatStride = vertexDeclaration.vertexStride / 4;\n        var vertices = new Float32Array(vertexCount * vertexFloatStride);\n        var indices = new Uint16Array(indexCount);\n        var sliceAngle = (Math.PI * 2.0) / slices;\n        var halfHeight = height / 2;\n        var curAngle = 0;\n        var verticeCount = 0;\n        var posX = 0;\n        var posY = 0;\n        var posZ = 0;\n        var vc = 0;\n        var ic = 0;\n        for (var tv = 0; tv <= slices; tv++) {\n            if (tv === 0) {\n                vertices[vc++] = 0;\n                vertices[vc++] = halfHeight;\n                vertices[vc++] = 0;\n                vertices[vc++] = 0;\n                vertices[vc++] = 1;\n                vertices[vc++] = 0;\n                vertices[vc++] = 0.5;\n                vertices[vc++] = 0.5;\n            }\n            curAngle = tv * sliceAngle;\n            posX = Math.cos(curAngle) * radius;\n            posY = halfHeight;\n            posZ = Math.sin(curAngle) * radius;\n            vertices[vc++] = posX;\n            vertices[vc++] = posY;\n            vertices[vc++] = posZ;\n            vertices[vc++] = 0;\n            vertices[vc++] = 1;\n            vertices[vc++] = 0;\n            vertices[vc++] = 0.5 + Math.cos(curAngle) * 0.5;\n            vertices[vc++] = 0.5 + Math.sin(curAngle) * 0.5;\n        }\n        for (var ti = 0; ti < slices; ti++) {\n            indices[ic++] = 0;\n            indices[ic++] = ti + 1;\n            indices[ic++] = ti + 2;\n        }\n        verticeCount += slices + 1 + 1;\n        for (var rv = 0; rv <= slices; rv++) {\n            curAngle = rv * sliceAngle;\n            posX = Math.cos(curAngle + Math.PI) * radius;\n            posY = halfHeight;\n            posZ = Math.sin(curAngle + Math.PI) * radius;\n            vertices[vc++] = posX;\n            vertices[vc + (slices + 1) * 8 - 1] = posX;\n            vertices[vc++] = posY;\n            vertices[vc + (slices + 1) * 8 - 1] = -posY;\n            vertices[vc++] = posZ;\n            vertices[vc + (slices + 1) * 8 - 1] = posZ;\n            vertices[vc++] = posX;\n            vertices[vc + (slices + 1) * 8 - 1] = posX;\n            vertices[vc++] = 0;\n            vertices[vc + (slices + 1) * 8 - 1] = 0;\n            vertices[vc++] = posZ;\n            vertices[vc + (slices + 1) * 8 - 1] = posZ;\n            vertices[vc++] = 1 - rv * 1 / slices;\n            vertices[vc + (slices + 1) * 8 - 1] = 1 - rv * 1 / slices;\n            vertices[vc++] = 0;\n            vertices[vc + (slices + 1) * 8 - 1] = 1;\n        }\n        vc += (slices + 1) * 8;\n        for (var ri = 0; ri < slices; ri++) {\n            indices[ic++] = ri + verticeCount + (slices + 1);\n            indices[ic++] = ri + verticeCount + 1;\n            indices[ic++] = ri + verticeCount;\n            indices[ic++] = ri + verticeCount + (slices + 1);\n            indices[ic++] = ri + verticeCount + (slices + 1) + 1;\n            indices[ic++] = ri + verticeCount + 1;\n        }\n        verticeCount += 2 * (slices + 1);\n        for (var bv = 0; bv <= slices; bv++) {\n            if (bv === 0) {\n                vertices[vc++] = 0;\n                vertices[vc++] = -halfHeight;\n                vertices[vc++] = 0;\n                vertices[vc++] = 0;\n                vertices[vc++] = -1;\n                vertices[vc++] = 0;\n                vertices[vc++] = 0.5;\n                vertices[vc++] = 0.5;\n            }\n            curAngle = bv * sliceAngle;\n            posX = Math.cos(curAngle + Math.PI) * radius;\n            posY = -halfHeight;\n            posZ = Math.sin(curAngle + Math.PI) * radius;\n            vertices[vc++] = posX;\n            vertices[vc++] = posY;\n            vertices[vc++] = posZ;\n            vertices[vc++] = 0;\n            vertices[vc++] = -1;\n            vertices[vc++] = 0;\n            vertices[vc++] = 0.5 + Math.cos(curAngle) * 0.5;\n            vertices[vc++] = 0.5 + Math.sin(curAngle) * 0.5;\n        }\n        for (var bi = 0; bi < slices; bi++) {\n            indices[ic++] = 0 + verticeCount;\n            indices[ic++] = bi + 2 + verticeCount;\n            indices[ic++] = bi + 1 + verticeCount;\n        }\n        verticeCount += slices + 1 + 1;\n        return PrimitiveMesh._createMesh(vertexDeclaration, vertices, indices);\n    }\n    static createPlane(long = 10, width = 10, stacks = 10, slices = 10) {\n        var vertexCount = (stacks + 1) * (slices + 1);\n        var indexCount = stacks * slices * 2 * 3;\n        var indices = new Uint16Array(indexCount);\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var vertexFloatStride = vertexDeclaration.vertexStride / 4;\n        var vertices = new Float32Array(vertexCount * vertexFloatStride);\n        var halfLong = long / 2;\n        var halfWidth = width / 2;\n        var stacksLong = long / stacks;\n        var slicesWidth = width / slices;\n        var verticeCount = 0;\n        for (var i = 0; i <= slices; i++) {\n            for (var j = 0; j <= stacks; j++) {\n                vertices[verticeCount++] = j * stacksLong - halfLong;\n                vertices[verticeCount++] = 0;\n                vertices[verticeCount++] = i * slicesWidth - halfWidth;\n                vertices[verticeCount++] = 0;\n                vertices[verticeCount++] = 1;\n                vertices[verticeCount++] = 0;\n                vertices[verticeCount++] = j * 1 / stacks;\n                vertices[verticeCount++] = i * 1 / slices;\n            }\n        }\n        var indiceIndex = 0;\n        for (i = 0; i < slices; i++) {\n            for (j = 0; j < stacks; j++) {\n                indices[indiceIndex++] = (i + 1) * (stacks + 1) + j;\n                indices[indiceIndex++] = i * (stacks + 1) + j;\n                indices[indiceIndex++] = (i + 1) * (stacks + 1) + j + 1;\n                indices[indiceIndex++] = i * (stacks + 1) + j;\n                indices[indiceIndex++] = i * (stacks + 1) + j + 1;\n                indices[indiceIndex++] = (i + 1) * (stacks + 1) + j + 1;\n            }\n        }\n        return PrimitiveMesh._createMesh(vertexDeclaration, vertices, indices);\n    }\n    static createQuad(long = 1, width = 1) {\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var halfLong = long / 2;\n        var halfWidth = width / 2;\n        var vertices = new Float32Array([-halfLong, halfWidth, 0, 0, 0, 1, 0, 0, halfLong, halfWidth, 0, 0, 0, 1, 1, 0, -halfLong, -halfWidth, 0, 0, 0, 1, 0, 1, halfLong, -halfWidth, 0, 0, 0, 1, 1, 1]);\n        var indices = new Uint16Array([0, 1, 2, 3, 2, 1]);\n        return PrimitiveMesh._createMesh(vertexDeclaration, vertices, indices);\n    }\n    static createSphere(radius = 0.5, stacks = 32, slices = 32) {\n        var vertexCount = (stacks + 1) * (slices + 1);\n        var indexCount = (3 * stacks * (slices + 1)) * 2;\n        var indices = new Uint16Array(indexCount);\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var vertexFloatStride = vertexDeclaration.vertexStride / 4;\n        var vertices = new Float32Array(vertexCount * vertexFloatStride);\n        var stackAngle = Math.PI / stacks;\n        var sliceAngle = (Math.PI * 2.0) / slices;\n        var vertexIndex = 0;\n        vertexCount = 0;\n        indexCount = 0;\n        for (var stack = 0; stack < (stacks + 1); stack++) {\n            var r = Math.sin(stack * stackAngle);\n            var y = Math.cos(stack * stackAngle);\n            for (var slice = 0; slice < (slices + 1); slice++) {\n                var x = r * Math.sin(slice * sliceAngle + Math.PI * 1 / 2);\n                var z = r * Math.cos(slice * sliceAngle + Math.PI * 1 / 2);\n                vertices[vertexCount + 0] = x * radius;\n                vertices[vertexCount + 1] = y * radius;\n                vertices[vertexCount + 2] = z * radius;\n                vertices[vertexCount + 3] = x;\n                vertices[vertexCount + 4] = y;\n                vertices[vertexCount + 5] = z;\n                vertices[vertexCount + 6] = slice / slices;\n                vertices[vertexCount + 7] = stack / stacks;\n                vertexCount += vertexFloatStride;\n                if (stack != (stacks - 1)) {\n                    indices[indexCount++] = vertexIndex + (slices + 1);\n                    indices[indexCount++] = vertexIndex;\n                    indices[indexCount++] = vertexIndex + 1;\n                    indices[indexCount++] = vertexIndex + (slices);\n                    indices[indexCount++] = vertexIndex;\n                    indices[indexCount++] = vertexIndex + (slices + 1);\n                    vertexIndex++;\n                }\n            }\n        }\n        return PrimitiveMesh._createMesh(vertexDeclaration, vertices, indices);\n    }\n}\n","#if !defined(Utils_lib)\n    #define Utils_lib\n\n#endif // Utils_lib","#if !defined(OutputTransform_lib)\n    #define OutputTransform_lib\n\nvec3 gammaCorrect(in vec3 color, float gammaValue)\n{\n    return pow(color, vec3(gammaValue));\n}\n\nvec4 gammaCorrect(in vec4 color)\n{\n    // todo color gamut gamma value\n    // default sRGB\n    float gammaValue = 1.0 / 2.2;\n    return vec4(gammaCorrect(color.rgb, gammaValue), color.a);\n}\n\nvec4 outputTransform(in vec4 color)\n{\n    #ifdef GAMMACORRECT\n    // render in linear, output gamma\n    return gammaCorrect(color);\n    #else // GAMMACORRECT\n    return color;\n    #endif // GAMMACORRECT\n}\n\n#endif // OutputTransform_lib\n","#if !defined(BakeBoneAnimSampler_lib)\n    #define BakeBoneAnimSampler_lib\n\nmat4 loadBakedMatMatrix(float FramePos, float boneIndices, float offset)\n{\n    vec2 uv;\n    float PixelPos = FramePos + boneIndices * 4.0;\n    float halfOffset = offset * 0.5;\n    float uvoffset = PixelPos / u_SimpleAnimatorTextureSize;\n    uv.y = floor(uvoffset) * offset + halfOffset;\n    uv.x = mod(float(PixelPos), u_SimpleAnimatorTextureSize) * offset + halfOffset;\n    vec4 mat0row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat1row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat2row = texture2D(u_SimpleAnimatorTexture, uv);\n    uv.x += offset;\n    vec4 mat3row = texture2D(u_SimpleAnimatorTexture, uv);\n    mat4 m = mat4(mat0row.x, mat0row.y, mat0row.z, mat0row.w,\n\tmat1row.x, mat1row.y, mat1row.z, mat1row.w,\n\tmat2row.x, mat2row.y, mat2row.z, mat2row.w,\n\tmat3row.x, mat3row.y, mat3row.z, mat3row.w);\n    return m;\n}\n\n#endif // BakeBoneAnimSampler_lib","#if !defined(MorphTarget_lib)\n    #define MorphTarget_lib\n\n    #ifdef GRAPHICS_API_GLES3\n\n/// static mesh property\nuniform sampler2DArray u_MorphTargetsTex;\n// xy: tex size, z: attribute count\nuniform vec4 u_MorphParams;\nuniform vec4 u_MorphAttrOffset;\n\n\t#define Morph_TexWidth\t   u_MorphParams.x\n\t#define Morph_TexHeight\t   u_MorphParams.y\n\t#define Morph_AttributeNum u_MorphParams.z\n\t#define Morph_TargetNum\t   u_MorphParams.w\n\n\t#define Morph_PositionOffset u_MorphAttrOffset.x\n\t#define Morph_NormalOffset   u_MorphAttrOffset.y\n\t#define Morph_TangentOffset  u_MorphAttrOffset.z\n\n//#define MORPH_MAX_COUNT 32 //兼容WGSL\n\n/// dynamic params\n//uniform float u_MorphActiveTargets[MORPH_MAX_COUNT];\n//uniform float u_MorphTargetWeights[MORPH_MAX_COUNT];\nuniform vec4 u_MorphActiveTargets[MORPH_MAX_COUNT];\nuniform int u_MorphTargetActiveCount;\n\n\t#define MORPH_ACTIVE_COUNT u_MorphTargetActiveCount\n\nvec4 sampleMorphTargets(in int vertexID, in float targetID)\n{\n    int v = vertexID / int(Morph_TexWidth);\n    int u = vertexID - v * int(Morph_TexWidth);\n\n    vec3 uvw = vec3((float(u) + 0.5) / Morph_TexWidth, (float(v) + 0.5) / Morph_TexHeight, targetID);\n\n    return texture(u_MorphTargetsTex, uvw);\n}\n\nvec3 positionMorph(in vec3 position)\n{\n    int vertexID = gl_VertexID * int(Morph_AttributeNum) + int(Morph_PositionOffset);\n\n    for (int i = 0; i < MORPH_ACTIVE_COUNT; i++)\n\t{\n\t    float index = u_MorphActiveTargets[i].x;\n\t\tfloat weight = u_MorphActiveTargets[i].y;\n\n\t    position += sampleMorphTargets(vertexID, index).xyz * weight;\n\t}\n\n    return position;\n}\n\nvec3 normalMorph(in vec3 normal)\n{\n    int vertexID = gl_VertexID * int(Morph_AttributeNum) + int(Morph_NormalOffset);\n    for (int i = 0; i < MORPH_ACTIVE_COUNT; i++)\n\t{\n\t    float index = u_MorphActiveTargets[i].x;\n\t\tfloat weight = u_MorphActiveTargets[i].y;\n\n\t    normal += sampleMorphTargets(vertexID, index).xyz * weight;\n\t}\n\n    return normal;\n}\n\nvec4 tangentMorph(in vec4 tangent)\n{\n    int vertexID = gl_VertexID * int(Morph_AttributeNum) + int(Morph_TangentOffset);\n    for (int i = 0; i < MORPH_ACTIVE_COUNT; i++)\n\t{\n\t    float index = u_MorphActiveTargets[i].x;\n\t\tfloat weight = u_MorphActiveTargets[i].y;\n\n\t    vec4 sampleTangent = sampleMorphTargets(vertexID, index);\n\n\t    tangent.xyz += sampleTangent.xyz * weight * tangent.w * sampleTangent.w;\n\t}\n\n    return tangent;\n}\n\n    #endif // GRAPHICS_API_GLES3\n\n#endif // MorphTarget_lib","#if !defined(VertexCommon_lib)\n    #define VertexCommon_lib\n\n    #ifdef MORPHTARGETS\n\t#include \"MorphTarget.glsl\";\n    #endif // MORPHTARGETS\n\nstruct Vertex {\n\n    vec3 positionOS;\n\n    vec3 normalOS;\n\n    #ifdef TANGENT\n    vec4 tangentOS;\n    #endif // TANGENT\n\n    // todo  uv define ?\n    #ifdef UV\n    vec2 texCoord0;\n    #endif // UV\n\n    #ifdef UV1\n    vec2 texCoord1;\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n\n    #ifdef LIGHTMAP\n    vec4 lightmapScaleOffset;\n\t#endif LIGHTMAP\n};\n\n/**\n * vertex position\n */\nvec4 getVertexPosition()\n{\n    vec4 position = a_Position;\n\n    #ifdef MORPHTARGETS\n\t#ifdef MORPHTARGETS_POSITION\n    #ifdef GRAPHICS_API_GLES3\n    position.xyz = positionMorph(position.xyz);\n    #endif // GRAPHICS_API_GLES3\n\t#endif // MORPHTARGETS_POSITION\n    #endif // MORPHTARGETS\n\n    return position;\n}\n\nvec3 getVertexNormal()\n{\n    vec3 normal = a_Normal.xyz;\n    #ifdef MORPHTARGETS\n\t#ifdef MORPHTARGETS_NORMAL\n    #ifdef GRAPHICS_API_GLES3\n    normal.xyz = normalMorph(normal);\n    #endif // GRAPHICS_API_GLES3\n\t#endif // MORPHTARGETS_NORMAL\n    #endif // MORPHTARGETS\n\n    return normal;\n}\n\n    #ifdef TANGENT\nvec4 getVertexTangent()\n{\n    vec4 tangent = a_Tangent0;\n\n\t#ifdef MORPHTARGETS\n\t#ifdef MORPHTARGETS_TANGENT\n    #ifdef GRAPHICS_API_GLES3\n    tangent = tangentMorph(tangent);\n    #endif // GRAPHICS_API_GLES3\n\t#endif // MORPHTARGETS_TANGENT\n\t#endif // MORPHTARGETS\n\n    return tangent;\n}\n    #endif // TANGENT\n\n    #ifdef LIGHTMAP\n#ifndef GPU_INSTANCE\n    uniform vec4 u_LightmapScaleOffset;\n#endif // GPU_INSTANCE\n\nvec4 getLightmapScaleOffset(){\n    \n    #ifdef GPU_INSTANCE\n        return a_LightmapScaleOffset;\n    #else\n        return u_LightmapScaleOffset;\n    #endif // GPU_INSTANCE\n}\n    #endif // LIGHTMAP\n\nvoid getVertexParams(inout Vertex vertex)\n{\n    vertex.positionOS = getVertexPosition().xyz;\n\n    vertex.normalOS = getVertexNormal();\n\n    #ifdef TANGENT\n    vertex.tangentOS = getVertexTangent();\n    #endif // TANGENT\n\n    #ifdef UV\n    vertex.texCoord0 = a_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n    vertex.texCoord1 = a_Texcoord1;\n    #endif // UV1\n\n    #ifdef COLOR\n    // consider vertexColor is gamma\n    vertex.vertexColor = vec4(pow(a_Color.rgb, vec3(2.2)), a_Color.a);\n    #endif // COLOR\n\n    #ifdef LIGHTMAP\n    vertex.lightmapScaleOffset = getLightmapScaleOffset();\n\t#endif LIGHTMAP\n}\n\n#endif // VertexCommon_lib","#if !defined(ShadingCommon_lib)\n    #define ShadingCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\n// todo\nvarying vec3 v_NormalWS;\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n    vec3 positionWS;\n\n    // todo\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    mat3 TBN;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n#endif // ShadingCommon_lib","#if !defined(ShadingVertex_lib)\n    #define ShadingVertex_lib\n\n    #include \"ShadingCommon.glsl\";\n\nvoid sharePixelParams(const in PixelParams params)\n{\n    v_PositionWS = params.positionWS;\n\n    v_NormalWS = params.normalWS;\n    v_TangentWS = params.tangentWS;\n    v_BiNormalWS = params.biNormalWS;\n\n    #ifdef UV\n    v_Texcoord0 = params.uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    v_Texcoord1 = params.uv1;\n\t#endif LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    v_VertexColor = params.vertexColor;\n    #endif // COLOR\n}\n\nvoid shadingPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    mat4 worldMat = getWorldMatrix();\n    vec4 pos = (worldMat * vec4(vertex.positionOS, 1.0));\n    params.positionWS = pos.xyz / pos.w;\n\n    mat3 normalMat = transpose(inverse(mat3(worldMat)));\n    params.normalWS = normalize((normalMat * vertex.normalOS).xyz);\n\n    #ifdef TANGENT\n    params.tangentWS = normalize((normalMat * vertex.tangentOS.xyz).xyz);\n    params.tangentWS *= WorldInvertFront;\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS) * sign(vertex.tangentOS.w));\n    #else // TANGENT\n    params.tangentWS = vec3(1.0, 0.0, 0.0);\n    params.tangentWS *= WorldInvertFront;\n    params.biNormalWS = normalize(cross(params.normalWS, params.tangentWS));\n    #endif // TANGENT\n\n    #ifdef UV\n    params.uv0 = vertex.texCoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = tranformLightMapUV(vertex.texCoord1, vertex.lightmapScaleOffset);\n\t#endif LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = vertex.vertexColor;\n    #endif // COLOR\n}\n\n#endif // ShadingVertex_lib","#if !defined(ShadingFrag_lib)\n    #define ShadingFrag_lib\n\n    #include \"ShadingCommon.glsl\";\n\n    #define _InvertNormal (float(gl_FrontFacing) * 2.0 - 1.0);\n\nvoid getPixelParams(inout PixelParams params)\n{\n    params.positionWS = v_PositionWS;\n\n    float invertN = _InvertNormal;\n\n    params.normalWS = normalize(v_NormalWS * invertN);\n    params.tangentWS = normalize(v_TangentWS * invertN);\n    params.biNormalWS = normalize(v_BiNormalWS * invertN);\n\n    params.TBN = mat3(params.tangentWS, params.biNormalWS, params.normalWS);\n\n    #ifdef UV\n    params.uv0 = v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    params.uv1 = v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    params.vertexColor = v_VertexColor;\n    #endif // COLOR\n}\n\n#endif // ShadingFrag_lib","#if !defined(SceneCommon_lib)\n    #define SceneCommon_lib\n\n    #ifdef ENUNIFORMBLOCK\nuniform Scene3D\n{\n    // time\n    float u_Time;\n    vec4 u_FogParams;// x start,y range,z Density\n    vec4 u_FogColor;\n    float u_GIRotate;\n    int u_DirationLightCount;\n};\n    #else // ENUNIFORMBLOCK\n// time\nuniform float u_Time;\nuniform vec4 u_FogParams;//x start,y range,z Density\nuniform vec4 u_FogColor;\nuniform float u_GIRotate;\nuniform mediump int u_DirationLightCount;\n    #endif // ENUNIFORMBLOCK\n    //rotate SH IBL\n\n#endif // SceneCommon_lib","#if !defined(CameraCommon_lib)\n    #define CameraCommon_lib\n\n    #ifdef ENUNIFORMBLOCK\n\nuniform BaseCamera\n{\n    vec3 u_CameraPos;\n    mat4 u_View;\n    mat4 u_Projection;\n    mat4 u_ViewProjection;\n    vec3 u_CameraDirection;\n    vec3 u_CameraUp;\n    vec4 u_Viewport;\n    vec4 u_ProjectionParams;\n    vec4 u_OpaqueTextureParams;\n    vec4 u_ZBufferParams;\n};\n    #else\nuniform vec3 u_CameraPos;\nuniform mat4 u_View;\nuniform mat4 u_Projection;\nuniform mat4 u_ViewProjection;\nuniform vec3 u_CameraDirection;\nuniform vec3 u_CameraUp;\nuniform vec4 u_Viewport;\nuniform vec4 u_ProjectionParams;\nuniform vec4 u_OpaqueTextureParams;\nuniform vec4 u_ZBufferParams;\n    #endif // ENUNIFORMBLOCK\n\nuniform sampler2D u_CameraDepthTexture;\nuniform sampler2D u_CameraDepthNormalsTexture;\nuniform sampler2D u_CameraOpaqueTexture;\n\n\nvec4 getPositionCS(in vec3 positionWS)\n{\n    return u_ViewProjection * vec4(positionWS, 1.0);\n}\n\nvec3 getViewDirection(in vec3 positionWS)\n{\n    return normalize(u_CameraPos - positionWS);\n}\n\n// 根据投影矩阵重映射深度\nvec4 remapPositionZ(vec4 position)\n{\n    #ifdef BLITSCREEN_INVERTY\n    position.y = -position.y;\n    #endif\n\n    #ifdef REMAP_Z\n    position.z = position.z * 2.0 - position.w;\n    #endif\n    return position;\n}\n\n#endif // CameraCommon_lib","#if !defined(SkyCommon_lib)\n    #define SkyCommon_lib\n\nuniform vec3 u_SunLight_direction;\nuniform vec4 u_SunLight_color;\nuniform mat4 u_SkyViewMat;\nuniform mat4 u_SkyProjectionMat;\nuniform mat4 u_SkyProjectionViewMat;\n\nvec4 remapSkyPositionZ(in vec4 position)\n{\n    position.z = position.w;\n    #ifdef BLITSCREEN_INVERTY\n    position.y = -position.y;\n    #endif\n    return position;\n}\n\nconst float c_deg2ang = 3.141593 / 180.0;\nvec4 rotateAroundYInDegrees(vec4 vertex, float deg)\n{\n    float angle = deg * c_deg2ang;\n    float sina = sin(angle);\n    float cosa = cos(angle);\n    mat2 m = mat2(cosa, -sina, sina, cosa);\n    return vec4(m * vertex.xz, vertex.yw).xzyw;\n}\n\n\n#endif // SkyCommon_lib","#if !defined(Sprite3DCommon_lib)\n    #define Sprite3DCommon_lib\n\nuniform mat4 u_WorldMat;\n\nuniform vec4 u_WorldInvertFront; // x: invert front face,yzw NodeCustomData\n\n    #ifdef GPU_INSTANCE\n\n\t#define WorldInvertFront a_WorldInvertFront.x\n    #define NodeCustomData0 a_WorldInvertFront.y\n    #define NodeCustomData1 a_WorldInvertFront.z\n    #define NodeCustomData2 a_WorldInvertFront.w\n\n    #else // GPU_INSTANCE\n\n\t#define WorldInvertFront u_WorldInvertFront.x\n    #define NodeCustomData0 u_WorldInvertFront.y\n    #define NodeCustomData1 u_WorldInvertFront.z\n    #define NodeCustomData2 u_WorldInvertFront.w\n\n    #endif // GPU_INSTANCE\n\nvec2 tranformLightMapUV(in vec2 texcoord, in vec4 tilingOffset)\n{\n    vec2 lightMapUV = vec2(texcoord.x, 1.0 - texcoord.y) * tilingOffset.xy + tilingOffset.zw;\n    lightMapUV.y = 1.0 - lightMapUV.y;\n    return lightMapUV;\n}\n\nvec2 transformUV(in vec2 texcoord, in vec4 tilingOffset)\n{\n    vec2 uv = texcoord * tilingOffset.xy + tilingOffset.zw * vec2(1.0, -1.0) + vec2(0.0, 1.0 - tilingOffset.y);\n    return uv;\n}\n\n#endif // Sprite3DCommon_lib","#if !defined(Sprite3DVertex_lib)\n    #define Sprite3DVertex_lib\n\n    #include \"Sprite3DCommon.glsl\";\n\n    #ifdef BONE\n// todo const int c_MaxBoneCount = 24\nuniform mat4 u_Bones[24];\n\n\t#ifdef SIMPLEBONE\nuniform vec4 u_SimpleAnimatorParams;\nuniform sampler2D u_SimpleAnimatorTexture;\nuniform float u_SimpleAnimatorTextureSize;\n\t    #include \"BakedBoneMatrixSampler.glsl\";\n\n\t#endif // SIMPLEBONE\n\n    #endif // BONE\n\n/**\n * world matrix\n */\nmat4 getWorldMatrix()\n{\n    #ifdef GPU_INSTANCE\n    mat4 worldMat = a_WorldMat;\n    #else\n    mat4 worldMat = u_WorldMat;\n    #endif // GPU_INSTANCE\n\n    #ifdef BONE\n\n\t#ifdef SIMPLEBONE\n\n\t    #ifdef GPU_INSTANCE\n    float currentPixelPos = a_SimpleTextureParams.x + a_SimpleTextureParams.y;\n\t    #else // GPU_INSTANCE\n    float currentPixelPos = u_SimpleAnimatorParams.x + u_SimpleAnimatorParams.y;\n\t    #endif // GPU_INSTANCE\n\n    float offset = 1.0 / u_SimpleAnimatorTextureSize;\n    mat4 skinTrans = loadBakedMatMatrix(currentPixelPos, a_BoneIndices.x, offset) * a_BoneWeights.x;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.y, offset) * a_BoneWeights.y;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.z, offset) * a_BoneWeights.z;\n    skinTrans += loadBakedMatMatrix(currentPixelPos, a_BoneIndices.w, offset) * a_BoneWeights.w;\n    worldMat = worldMat * skinTrans;\n\n\t#else // SIMPLEBONE\n\n    ivec4 boneIndex = ivec4(a_BoneIndices);\n    mat4 skinTrans = u_Bones[boneIndex.x] * a_BoneWeights.x;\n    skinTrans += u_Bones[boneIndex.y] * a_BoneWeights.y;\n    skinTrans += u_Bones[boneIndex.z] * a_BoneWeights.z;\n    skinTrans += u_Bones[boneIndex.w] * a_BoneWeights.w;\n    worldMat = worldMat * skinTrans;\n\n\t#endif // SIMPLEBONE\n\n    #endif // BONE\n\n    return worldMat;\n}\n\nvec2 getSimpleBoneCustomData(){\n    vec2 custom;\n   #ifdef BONE\n    #ifdef SIMPLEBONE\n    #ifdef GPU_INSTANCE\n    custom=a_SimpleTextureParams.zw;\n    #else// GPU_INSTANCE\n    custom=u_SimpleAnimatorParams.zw;\n    #endif// GPU_INSTANCE\n    #endif// SIMPLEBONE\n  #endif // BONE\n    return custom;\n}\n\n#endif // Sprite3DVertex_lib","#if !defined(Sprite3DFrag_lib)\n    #define Sprite3DFrag_lib\n\n    #include \"Sprite3DCommon.glsl\";\n\n#endif // Sprite3DFrag_lib","#if !defined(DepthVertex_lib)\n    #define DepthVertex_lib\n    #include \"Math.glsl\";\n    #include \"Scene.glsl\";\n    #include \"Camera.glsl\";\n    #include \"Sprite3DVertex.glsl\";\n\n    #include \"VertexCommon.glsl\";\n\n    #if defined(SHADOW) || defined(SHADOW_SPOT)\n\n\t#ifndef DEPTHPASS\n\n\t    #include \"ShadowCommon.glsl\"\n\nvec3 applyShadowBias(vec3 positionWS, vec3 normalWS, vec3 lightDirection)\n{\n    float invNdotL = 1.0 - clamp(dot(-lightDirection, normalWS), 0.0, 1.0);\n    float scale = invNdotL * u_ShadowBias.y;\n\n    // normal bias is negative since we want to apply an inset normal offset\n    positionWS += -lightDirection * u_ShadowBias.xxx;\n    positionWS += normalWS * vec3(scale);\n    return positionWS;\n}\n\t#endif // DEPTHPASS\n    #endif // SHADOW || SHADOW_SPOT\n\n    #ifdef DEPTHPASS\n\t#include \"Camera.glsl\";\n    #endif // DEPTHPASS\n\nvec4 DepthPositionCS(in vec3 positionWS, in vec3 normalWS)\n{\n    #ifdef DEPTHPASS\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    #endif // DEPTHPASS\n\n    #ifdef SHADOW\n\t#ifndef DEPTHPASS\n    positionWS = applyShadowBias(positionWS, normalWS, u_ShadowLightDirection);\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    positionCS.z = max(positionCS.z, 0.0); // min ndc z is 0.0\n\t#endif // DEPTHPASS\n    #endif // SHADOW\n\n    #ifdef SHADOW_SPOT\n\t#ifndef DEPTHPASS\n    vec4 positionCS = u_ViewProjection * vec4(positionWS, 1.0);\n    positionCS.z = positionCS.z - u_ShadowBias.x / positionCS.w;\n    positionCS.z = max(positionCS.z, 0.0); // min ndc z is 0.0\n\t#endif // DEPTHPASS\n    #endif // SHADOW_SPOT\n\n    return positionCS;\n}\n\n#endif // DepthVertex_lib","#if !defined(DepthFrag_lib)\n    #define DepthFrag_lib\n\nvec4 getDepthColor()\n{\n    return vec4(0.0);\n}\n\n#endif // DepthFrag_lib","#define SAMPLE_DEPTH_TEXTURE(textureName, coord2) (texture2D(textureName, coord2).r)\n//此方法库用来压缩解析深度贴图，法线深度贴图\n\n// Encoding/decoding view space normals into 2D 0..1 vector\nvec2 EncodeViewNormalStereo(vec3 n)\n{\n    n.z = abs(n.z);\n    float kScale = 1.7777;\n    vec2 enc;\n    enc = n.xy / (n.z + 1.0);\n    enc /= kScale;\n    enc = enc * 0.5 + 0.5;\n    return enc;\n}\n\nvec3 DecodeViewNormalStereo(vec4 enc4)\n{\n    float kScale = 1.7777;\n    vec3 nn = enc4.xyz * vec3(2.0 * kScale, 2.0 * kScale, 0.0) + vec3(-kScale, -kScale, 1.0);\n    float g = 2.0 / dot(nn.xyz, nn.xyz);\n    vec3 n;\n    n.xy = g * nn.xy;\n    n.z = g - 1.0;\n    return n;\n}\n\n// Encoding/decoding [0..1) floats into 8 bit/channel RG. Note that 1.0 will not be encoded properly.\nvec2 EncodeFloatRG(float v)\n{\n    vec2 kEncodeMul = vec2(1.0, 255.0);\n    float kEncodeBit = 1.0 / 255.0;\n    vec2 enc = kEncodeMul * v;\n    enc = fract(enc);\n    enc.x -= enc.y * kEncodeBit;\n    return enc;\n}\n\nfloat DecodeFloatRG(vec2 enc)\n{\n    vec2 kDecodeDot = vec2(1.0, 1.0 / 255.0);\n    return dot(enc, kDecodeDot);\n}\n\nvec4 EncodeDepthNormal(float depth, vec3 normals)\n{\n    vec4 encode;\n    encode.xy = EncodeViewNormalStereo(normals);\n    encode.zw = EncodeFloatRG(depth);\n    return encode;\n}\n\nvoid DecodeDepthNormal(vec4 enc, out float depth, out vec3 normal)\n{\n    depth = DecodeFloatRG(enc.zw);\n    normal = DecodeViewNormalStereo(enc);\n}\n\nvec4 depthNormalsFragment(vec4 depthNormal)\n{\n    return EncodeDepthNormal(depthNormal.w, depthNormal.xyz);\n}\n\n// Z buffer to linear 0..1 depth\nfloat Linear01Depth(float z, vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.x * z + zbufferParams.y);\n}\n// Z buffer to linear depth\nfloat LinearEyeDepth(float z, vec4 zbufferParams)\n{\n    return 1.0 / (zbufferParams.z * z + zbufferParams.w);\n}\n","#if !defined(DepthNormalFrag_lib)\n    #define DepthNormalFrag_lib\n\n    #include \"DepthNormalUtil.glsl\";\n\nvec4 encodeDepthNormal(const in vec4 positionCS, const in vec3 normalWS)\n{\n    float depth = (positionCS.z * 2.0 - positionCS.w) * u_ProjectionParams.w;\n\n    vec3 normalVS = mat3(u_View) * normalWS;\n\n    return EncodeDepthNormal(depth, normalVS);\n}\n\n#endif // DepthNormalFrag_lib","#if !defined(ShadowCommon_lib)\n    #define ShadowCommon_lib\n\n    #ifndef GRAPHICS_API_GLES3\n\t#define NO_NATIVE_SHADOWMAP\n    #endif // GRAPHICS_API_GLES3\n\n    #if defined(NO_NATIVE_SHADOWMAP)\n\t#define TEXTURE2D_SHADOW(textureName)\t\t     uniform mediump sampler2D textureName\n\t#define SAMPLE_TEXTURE2D_SHADOW(textureName, coord3) (texture2D(textureName, coord3.xy).r < coord3.z ? 0.0 : 1.0)\n\t#define TEXTURE2D_SHADOW_PARAM(shadowMap)\t     mediump sampler2D shadowMap\n    #else // NO_NATIVE_SHADOWMAP\n\t#define TEXTURE2D_SHADOW(textureName)\t\t     uniform mediump sampler2DShadow textureName\n\t#define SAMPLE_TEXTURE2D_SHADOW(textureName, coord3) textureLod(textureName, coord3, 0.0)\n\t#define TEXTURE2D_SHADOW_PARAM(shadowMap)\t     mediump sampler2DShadow shadowMap\n    #endif // NO_NATIVE_SHADOWMAP\n\n    #if defined(SHADOW) || defined(SHADOW_SPOT)\n\n\t#ifdef ENUNIFORMBLOCK\n\nuniform Shadow\n{\n    vec3 u_ShadowLightDirection;\n    vec4 u_ShadowBias;\n    vec4 u_ShadowSplitSpheres[4];\n    mat4 u_ShadowMatrices[4];\n    vec4 u_ShadowMapSize;\n    vec4 u_ShadowParams;\n    vec4 u_SpotShadowMapSize;\n    mat4 u_SpotViewProjectMatrix;\n};\nTEXTURE2D_SHADOW(u_ShadowMap);\nTEXTURE2D_SHADOW(u_SpotShadowMap);\n\n\t#else // ENUNIFORMBLOCK\n\nuniform vec3 u_ShadowLightDirection;\nuniform vec4 u_ShadowBias;\nuniform vec4 u_ShadowSplitSpheres[4];\nuniform mat4 u_ShadowMatrices[4];\nuniform vec4 u_ShadowMapSize;\nuniform vec4 u_ShadowParams;\nuniform vec4 u_SpotShadowMapSize;\nuniform mat4 u_SpotViewProjectMatrix;\n\nTEXTURE2D_SHADOW(u_ShadowMap);\nTEXTURE2D_SHADOW(u_SpotShadowMap);\n\n\t#endif // ENUNIFORMBLOCK\n\n    #endif // SHADOW || SHADOW_SPOT\n\n#endif // ShadowCommon_lib","// ------------------------------------------------------------------\n//  PCF Filtering Tent Functions\n// ------------------------------------------------------------------\n\n// Assuming a isoceles right angled triangle of height \"triangleHeight\" (as drawn below).\n// This function return the area of the triangle above the first texel(in Y the first texel).\n//\n// |\\      <-- 45 degree slop isosceles right angled triangle\n// | \\\n// ----    <-- length of this side is \"triangleHeight\"\n// _ _ _ _ <-- texels\nfloat sampleShadowGetIRTriangleTexelArea(float triangleHeight)\n{\n    return triangleHeight - 0.5;\n}\n\n// Assuming a isoceles triangle of 1.5 texels height and 3 texels wide lying on 4 texels.\n// This function return the area of the triangle above each of those texels.\n//    |    <-- offset from -0.5 to 0.5, 0 meaning triangle is exactly in the center\n//   / \\   <-- 45 degree slop isosceles triangle (ie tent projected in 2D)\n//  /   \\\n// _ _ _ _ <-- texels\n// X Y Z W <-- result indices (in computedArea.xyzw and computedAreaUncut.xyzw)\n// Top point at (right,top) in a texel,left bottom point at (middle,middle) in a texel,right bottom point at (middle,middle) in a texel.\nvoid sampleShadowGetTexelAreasTent3x3(float offset, out vec4 computedArea, out vec4 computedAreaUncut)\n{\n    // Compute the exterior areas,a and h is same.\n    float a = offset + 0.5;\n    float offsetSquaredHalved = a * a * 0.5;\n    computedAreaUncut.x = computedArea.x = offsetSquaredHalved - offset;\n    computedAreaUncut.w = computedArea.w = offsetSquaredHalved;\n\n    // Compute the middle areas\n    // For Y : We find the area in Y of as if the left section of the isoceles triangle would\n    // intersect the axis between Y and Z (ie where offset = 0).\n    computedAreaUncut.y = sampleShadowGetIRTriangleTexelArea(1.5 - offset);\n    // This area is superior to the one we are looking for if (offset < 0) thus we need to\n    // subtract the area of the triangle defined by (0,1.5-offset), (0,1.5+offset), (-offset,1.5).\n    float clampedOffsetLeft = min(offset,0.0);\n    float areaOfSmallLeftTriangle = clampedOffsetLeft * clampedOffsetLeft;\n    computedArea.y = computedAreaUncut.y - areaOfSmallLeftTriangle;\n\n    // We do the same for the Z but with the right part of the isoceles triangle\n    computedAreaUncut.z = sampleShadowGetIRTriangleTexelArea(1.5 + offset);\n    float clampedOffsetRight = max(offset,0.0);\n    float areaOfSmallRightTriangle = clampedOffsetRight * clampedOffsetRight;\n    computedArea.z = computedAreaUncut.z - areaOfSmallRightTriangle;\n}\n\n// Assuming a isoceles triangle of 2.5 texel height and 5 texels wide lying on 6 texels.\n// This function return the weight of each texels area relative to the full triangle area.\n//  /       \\\n// _ _ _ _ _ _ <-- texels\n// 0 1 2 3 4 5 <-- computed area indices (in texelsWeights[])\n// Top point at (right,top) in a texel,left bottom point at (middle,middle) in a texel,right bottom point at (middle,middle) in a texel.\nvoid sampleShadowGetTexelWeightsTent5x5(float offset, out vec3 texelsWeightsA, out vec3 texelsWeightsB)\n{\n    vec4 areaFrom3texelTriangle;\n    vec4 areaUncutFrom3texelTriangle;\n    sampleShadowGetTexelAreasTent3x3(offset, areaFrom3texelTriangle, areaUncutFrom3texelTriangle);\n\n    // Triangle slope is 45 degree thus we can almost reuse the result of the 3 texel wide computation.\n    // the 5 texel wide triangle can be seen as the 3 texel wide one but shifted up by one unit/texel.\n    // 0.16 is 1/(the triangle area)\n    texelsWeightsA.x = 0.16 * (areaFrom3texelTriangle.x);\n    texelsWeightsA.y = 0.16 * (areaUncutFrom3texelTriangle.y);\n    texelsWeightsA.z = 0.16 * (areaFrom3texelTriangle.y + 1.0);\n    texelsWeightsB.x = 0.16 * (areaFrom3texelTriangle.z + 1.0);\n    texelsWeightsB.y = 0.16 * (areaUncutFrom3texelTriangle.z);\n    texelsWeightsB.z = 0.16 * (areaFrom3texelTriangle.w);\n}\n\n// 5x5 Tent filter (45 degree sloped triangles in U and V)\nvoid sampleShadowComputeSamplesTent5x5(vec4 shadowMapTextureTexelSize, vec2 coord, out float fetchesWeights[9], out vec2 fetchesUV[9])\n{\n    // tent base is 5x5 base thus covering from 25 to 36 texels, thus we need 9 bilinear PCF fetches\n    vec2 tentCenterInTexelSpace = coord.xy * shadowMapTextureTexelSize.zw;\n    vec2 centerOfFetchesInTexelSpace = floor(tentCenterInTexelSpace + 0.5);\n    vec2 offsetFromTentCenterToCenterOfFetches = tentCenterInTexelSpace - centerOfFetchesInTexelSpace;\n\n    // find the weight of each texel based on the area of a 45 degree slop tent above each of them.\n    vec3 texelsWeightsUA, texelsWeightsUB;\n    vec3 texelsWeightsVA, texelsWeightsVB;\n    sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.x, texelsWeightsUA, texelsWeightsUB);\n    sampleShadowGetTexelWeightsTent5x5(offsetFromTentCenterToCenterOfFetches.y, texelsWeightsVA, texelsWeightsVB);\n\n    // each fetch will cover a group of 2x2 texels, the weight of each group is the sum of the weights of the texels\n    vec3 fetchesWeightsU = vec3(texelsWeightsUA.xz, texelsWeightsUB.y) + vec3(texelsWeightsUA.y, texelsWeightsUB.xz);\n    vec3 fetchesWeightsV = vec3(texelsWeightsVA.xz, texelsWeightsVB.y) + vec3(texelsWeightsVA.y, texelsWeightsVB.xz);\n\n    // move the PCF bilinear fetches to respect texels weights\n    vec3 fetchesOffsetsU = vec3(texelsWeightsUA.y, texelsWeightsUB.xz) / fetchesWeightsU.xyz + vec3(-2.5,-0.5,1.5);\n    vec3 fetchesOffsetsV = vec3(texelsWeightsVA.y, texelsWeightsVB.xz) / fetchesWeightsV.xyz + vec3(-2.5,-0.5,1.5);\n    fetchesOffsetsU *= shadowMapTextureTexelSize.xxx;\n    fetchesOffsetsV *= shadowMapTextureTexelSize.yyy;\n\n    vec2 bilinearFetchOrigin = centerOfFetchesInTexelSpace * shadowMapTextureTexelSize.xy;\n    fetchesUV[0] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.x);\n    fetchesUV[1] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.x);\n    fetchesUV[2] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.x);\n    fetchesUV[3] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.y);\n    fetchesUV[4] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.y);\n    fetchesUV[5] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.y);\n    fetchesUV[6] = bilinearFetchOrigin + vec2(fetchesOffsetsU.x, fetchesOffsetsV.z);\n    fetchesUV[7] = bilinearFetchOrigin + vec2(fetchesOffsetsU.y, fetchesOffsetsV.z);\n    fetchesUV[8] = bilinearFetchOrigin + vec2(fetchesOffsetsU.z, fetchesOffsetsV.z);\n\n    fetchesWeights[0] = fetchesWeightsU.x * fetchesWeightsV.x;\n    fetchesWeights[1] = fetchesWeightsU.y * fetchesWeightsV.x;\n    fetchesWeights[2] = fetchesWeightsU.z * fetchesWeightsV.x;\n    fetchesWeights[3] = fetchesWeightsU.x * fetchesWeightsV.y;\n    fetchesWeights[4] = fetchesWeightsU.y * fetchesWeightsV.y;\n    fetchesWeights[5] = fetchesWeightsU.z * fetchesWeightsV.y;\n    fetchesWeights[6] = fetchesWeightsU.x * fetchesWeightsV.z;\n    fetchesWeights[7] = fetchesWeightsU.y * fetchesWeightsV.z;\n    fetchesWeights[8] = fetchesWeightsU.z * fetchesWeightsV.z;\n}","// 兼容WGSL\n#if !defined(ShadowSampler_lib)\n    #define ShadowSampler_lib\n\n    // 计算阴影\n    #ifdef RECEIVESHADOW\n\n\t#include \"ShadowSampleTent.glsl\";\n\n\t#include \"ShadowCommon.glsl\"\n\n\t#define ShadowStrength\t   u_ShadowParams.x\n\t#define SpotShadowStrength u_ShadowParams.y\n\n    // 平行光阴影\n\t#ifdef SHADOW\n\t    #define CALCULATE_SHADOWS\nvarying vec4 v_ShadowCoord;\n\n\t// #ifdef SHADOW_CASCADE\n\t// const int c_MaxCascadeCount = 4;\n\t// #else //SHADOW_CASCADE\n\t// const int c_MaxCascadeCount = 1;\n\t// #endif//SHADOW_CASCADE\n\t// uniform mat4 u_ShadowMatrices[c_MaxCascadeCount];\n\t// uniform vec4 u_ShadowSplitSpheres[c_MaxCascadeCount];\n\n\t#endif // SHADOW\n\n\t// 聚光灯阴影\n\t#ifdef SHADOW_SPOT\n\t    #define CALCULATE_SPOTSHADOWS\nvarying vec4 v_SpotShadowCoord;\n\t#endif // SHADOW_SPOT\n\nfloat sampleShdowMapFiltered4(TEXTURE2D_SHADOW_PARAM(shadowMap), vec3 shadowCoord, vec4 shadowMapSize)\n{\n    float attenuation;\n    vec4 attenuation4;\n    vec2 offset = shadowMapSize.xy / 2.0;\n    vec3 shadowCoord0 = shadowCoord + vec3(-offset, 0.0);\n    vec3 shadowCoord1 = shadowCoord + vec3(offset.x, -offset.y, 0.0);\n    vec3 shadowCoord2 = shadowCoord + vec3(-offset.x, offset.y, 0.0);\n    vec3 shadowCoord3 = shadowCoord + vec3(offset, 0.0);\n    attenuation4.x = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord0);\n    attenuation4.y = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord1);\n    attenuation4.z = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord2);\n    attenuation4.w = SAMPLE_TEXTURE2D_SHADOW(shadowMap, shadowCoord3);\n    attenuation = dot(attenuation4, vec4(0.25));\n    return attenuation;\n}\n\nfloat sampleShdowMapFiltered9(TEXTURE2D_SHADOW_PARAM(shadowMap), vec3 shadowCoord, vec4 shadowmapSize)\n{\n    float attenuation;\n    float fetchesWeights[9];\n    vec2 fetchesUV[9];\n    sampleShadowComputeSamplesTent5x5(shadowmapSize, shadowCoord.xy, fetchesWeights, fetchesUV);\n    attenuation = fetchesWeights[0] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[0].xy, shadowCoord.z));\n    attenuation += fetchesWeights[1] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[1].xy, shadowCoord.z));\n    attenuation += fetchesWeights[2] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[2].xy, shadowCoord.z));\n    attenuation += fetchesWeights[3] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[3].xy, shadowCoord.z));\n    attenuation += fetchesWeights[4] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[4].xy, shadowCoord.z));\n    attenuation += fetchesWeights[5] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[5].xy, shadowCoord.z));\n    attenuation += fetchesWeights[6] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[6].xy, shadowCoord.z));\n    attenuation += fetchesWeights[7] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[7].xy, shadowCoord.z));\n    attenuation += fetchesWeights[8] * SAMPLE_TEXTURE2D_SHADOW(shadowMap, vec3(fetchesUV[8].xy, shadowCoord.z));\n    return attenuation;\n}\n    #endif // RECEIVESHADOW\n\n    // 计算平行光阴影\n    #if defined(CALCULATE_SHADOWS)\n\n\t#ifdef SHADOW_CASCADE\n// 平行光阴影级联索引\nmediump int computeCascadeIndex(in vec3 positionWS)\n{\n    vec3 fromCenter0 = positionWS - u_ShadowSplitSpheres[0].xyz;\n    vec3 fromCenter1 = positionWS - u_ShadowSplitSpheres[1].xyz;\n    vec3 fromCenter2 = positionWS - u_ShadowSplitSpheres[2].xyz;\n    vec3 fromCenter3 = positionWS - u_ShadowSplitSpheres[3].xyz;\n\n    mediump vec4 comparison = vec4(dot(fromCenter0, fromCenter0) < u_ShadowSplitSpheres[0].w,\n\tdot(fromCenter1, fromCenter1) < u_ShadowSplitSpheres[1].w,\n\tdot(fromCenter2, fromCenter2) < u_ShadowSplitSpheres[2].w,\n\tdot(fromCenter3, fromCenter3) < u_ShadowSplitSpheres[3].w);\n\n    comparison.yzw = clamp(comparison.yzw - comparison.xyz, 0.0, 1.0); // keep the nearest\n    mediump vec4 indexCoefficient = vec4(4.0, 3.0, 2.0, 1.0);\n    mediump int index = 4 - int(dot(comparison, indexCoefficient));\n    return index;\n}\n\t#endif\n\n// 平行光阴影坐标\nvec4 getShadowCoord(in vec3 positionWS)\n{\n\t#ifdef SHADOW_CASCADE\n    mediump int cascadeIndex = computeCascadeIndex(positionWS);\n\t    #ifdef GRAPHICS_API_GLES3\n    mat4 shadowMat = u_ShadowMatrices[cascadeIndex];\n\t    #else // GRAPHICS_API_GLES3\n    mat4 shadowMat;\n    if (cascadeIndex == 0)\n\t{\n\t    shadowMat = u_ShadowMatrices[0];\n\t}\n    else if (cascadeIndex == 1)\n\t{\n\t    shadowMat = u_ShadowMatrices[1];\n\t}\n    else if (cascadeIndex == 2)\n\t{\n\t    shadowMat = u_ShadowMatrices[2];\n\t}\n    else\n\t{\n\t    shadowMat = u_ShadowMatrices[3];\n\t}\n\t    #endif // GRAPHICS_API_GLES3\n\n    return shadowMat * vec4(positionWS, 1.0);\n\n\t#else // SHADOW_CASCADE\n\n    return u_ShadowMatrices[0] * vec4(positionWS, 1.0);\n\n\t#endif // SHADOW_CASCADE\n}\n\n// 采样平行光阴影\nfloat sampleShadowmap(in vec4 shadowCoord)\n{\n    float attenuation = 1.0;\n\n    vec3 coord = shadowCoord.xyz / shadowCoord.w;\n\n    vec4 shadowmapSize = u_ShadowMapSize;\n\n    // if (coord.z > 0.0 && coord.z < 1.0)\n    {\n\t#if defined(SHADOW_SOFT_SHADOW_HIGH)\n\tattenuation = sampleShdowMapFiltered9(u_ShadowMap, coord, shadowmapSize);\n\t#elif defined(SHADOW_SOFT_SHADOW_LOW)\n\tattenuation = sampleShdowMapFiltered4(u_ShadowMap, coord, shadowmapSize);\n\t#else // hard\n\tattenuation = SAMPLE_TEXTURE2D_SHADOW(u_ShadowMap, coord);\n\t#endif // SHADOW_SOFT_SHADOW_HIGH\n\tattenuation = mix(1.0, attenuation, ShadowStrength);\n    }\n\n    if (coord.z > 0.0 && coord.z < 1.0)\n\treturn attenuation;\n    return 1.0;\n}\n\n    #endif // CALCULATE_SHADOWS\n\n    // 计算 聚光灯 阴影\n    #if defined(CALCULATE_SPOTSHADOWS)\n\n// 聚光灯阴影坐标\nvec4 getSpotShadowCoord(in vec3 positionWS)\n{\n    vec4 coordinate = u_SpotViewProjectMatrix * vec4(positionWS, 1.0);\n\n    return coordinate;\n}\n\n// 采样聚光灯阴影\nfloat sampleSpotShadowmap(vec4 shadowCoord)\n{\n    float attenuation = 1.0;\n\n    vec3 coord = shadowCoord.xyz / shadowCoord.w;\n    coord.xy = coord.xy * 0.5 + 0.5;\n\n    vec4 shadowmapSize = u_SpotShadowMapSize;\n\t// todo\n\t// if (coord.z > 0.0 && coord.z < 1.0)\n\t//{\n\t#if defined(SHADOW_SPOT_SOFT_SHADOW_HIGH)\n    attenuation = sampleShdowMapFiltered9(u_SpotShadowMap, coord, shadowmapSize);\n\t#elif defined(SHADOW_SPOT_SOFT_SHADOW_LOW)\n    attenuation = sampleShdowMapFiltered4(u_SpotShadowMap, coord, shadowmapSize);\n\t#else // hard\n    attenuation = SAMPLE_TEXTURE2D_SHADOW(u_SpotShadowMap, coord);\n\t#endif\n    attenuation = mix(1.0, attenuation, SpotShadowStrength);\n    //}\n\n    if (coord.z > 0.0 && coord.z < 1.0)\n\treturn attenuation;\n    return 1.0;\n}\n\n    #endif // CALCULATE_SPOTSHADOWS\n\n#endif // ShadowSampler_lib","#if !defined(SceneFog_lib)\n    #define SceneFog_lib\n\n    #ifdef FOG\nvarying float v_fogFactor;\nfloat getFogFactor()\n{\n    return v_fogFactor;\n}\n\nvec3 scenUnlitFog(in vec3 color)\n{\n    float lerpFact = getFogFactor();\n\t#ifdef ADDTIVEFOG\n    lerpFact = clamp(lerpFact, 0.0, 1.0);\n    return mix(vec3(0.0), color, lerpFact);\n\t#else\n    lerpFact = clamp(lerpFact, 0.0, 1.0);\n    return mix(u_FogColor.rgb, color, lerpFact);\n\t#endif // ADDTIVEFOG\n}\n\nvec3 sceneLitFog(in vec3 color)\n{\n    float lerpFact = getFogFactor();\n    lerpFact = clamp(lerpFact, 0.0, 1.0);\n    return mix(u_FogColor.rgb, color, lerpFact);\n}\n\n    #endif\n#endif // SceneFog_lib","#if !defined(SceneFog_lib)\n    #define SceneFog_lib\n\n    #ifdef FOG\nvarying float v_fogFactor;\nvoid FogHandle(in float fact)\n{\n    float lerpFact = 0.0;\n\t#ifdef FOG_EXP\n    lerpFact = fact * (u_FogParams.z / log(2.0));\n    lerpFact = exp2(-lerpFact);\n\t#elif defined(FOG_EXP2)\n    lerpFact = fact * (u_FogParams.z / sqrt(log(2.0)));\n    lerpFact = exp2(-lerpFact);\n\t#else // default FOG_LINEAR\n    lerpFact = (-1.0 * fact / (u_FogParams.y - u_FogParams.x) + u_FogParams.y / (u_FogParams.y - u_FogParams.x));\n\t#endif\n    v_fogFactor = lerpFact;\n}\n    #endif\n#endif // SceneFog_lib","#if !defined(Lighting_lib)\n    #define Lighting_lib\n\n    #include \"ShadowSampler.glsl\";\n\nstruct Light {\n    vec3 color;\n    vec3 dir;\n    float attenuation;\n};\n\nstruct DirectionLight {\n    vec3 color;\n    vec3 direction;\n    float attenuation;\n    int lightMode;\n};\n\nstruct PointLight {\n    vec3 color;\n    vec3 position;\n    float range;\n    float attenuation;\n    int lightMode;\n};\n\nstruct SpotLight {\n    vec3 color;\n    vec3 position;\n    float range;\n    vec3 direction;\n    float spot;\n    float attenuation;\n    int lightMode;\n};\n\n    #define LightMode_Mix      0\n    #define LightMode_RealTime 1\n\nint getAttenuationByMode(float lightMapMode)\n{\n    #ifdef LIGHTMAP // mix 0 realtime 1\n    return int(lightMapMode);\n    #else // LIGHTMAP\n\n\t#ifdef VOLUMETRICGI\n    return int(lightMapMode);\n\t#endif // VOLUMETRICGI\n\n    #endif // LIGHTMAP\n    return LightMode_RealTime;\n}\n\n    #if defined(DIRECTIONLIGHT) || defined(POINTLIGHT) || defined(SPOTLIGHT)\n\n\t#define LIGHTING\n\n// 灯光衰减函数\nfloat attenuation(in vec3 L, in float invLightRadius)\n{\n    float fRatio = clamp(length(L) * invLightRadius, 0.0, 1.0);\n    fRatio *= fRatio;\n    return 1.0 / (1.0 + 25.0 * fRatio) * clamp(4.0 * (1.0 - fRatio), 0.0, 1.0);\n}\n\n// 平行光\nLight getLight(in DirectionLight directionLight)\n{\n    Light light;\n    light.color = directionLight.color;\n    light.dir = directionLight.direction;\n    light.attenuation = directionLight.attenuation;\n    return light;\n}\n\n// 点光\nLight getLight(in PointLight pointLight, in vec3 normalWS, in vec3 positionWS)\n{\n    vec3 lightDirection = positionWS - pointLight.position;\n    float rangeAttenuate = attenuation(lightDirection, 1.0 / pointLight.range);\n\n    Light light;\n    light.color = pointLight.color * rangeAttenuate;\n    light.dir = normalize(lightDirection);\n    light.attenuation = pointLight.attenuation;\n    return light;\n}\n\n// 聚光灯\nLight getLight(in SpotLight spotLight, in vec3 normalWS, in vec3 positionWS)\n{\n    vec3 lightDirection = positionWS - spotLight.position;\n    vec3 normalizeLightDir = normalize(lightDirection);\n\n    vec2 cosAngles = cos(vec2(spotLight.spot, spotLight.spot * 0.5) * 0.5);\n    float dirAttenuate = dot(spotLight.direction, normalizeLightDir);\n    dirAttenuate *= smoothstep(cosAngles.x, cosAngles.y, dirAttenuate);\n\n    float rangeAttenuate = attenuation(lightDirection, 1.0 / spotLight.range);\n\n    Light light;\n    light.color = spotLight.color * rangeAttenuate * dirAttenuate;\n    light.dir = normalizeLightDir;\n    light.attenuation = spotLight.attenuation;\n    return light;\n}\n\n\t#ifdef LEGACYSINGLELIGHTING\n\t    #define CalculateLightCount 1\n\t    #define DirectionCount\t1\n\n\t    #ifdef DIRECTIONLIGHT\nuniform vec3 u_DirLightColor;\nuniform vec3 u_DirLightDirection;\nuniform int u_DirLightMode;\n\t    #endif // DIRECTIONLIGHT\n\n\t    #ifdef POINTLIGHT\n// uniform PointLight u_PointLight;\nuniform vec3 u_PointLightColor;\nuniform vec3 u_PointLightPos;\nuniform float u_PointLightRange;\nuniform int u_PointLightMode;\n\t    #endif // POINTLIGHT\n\n\t    #ifdef SPOTLIGHT\n// uniform SpotLight u_SpotLight;\nuniform vec3 u_SpotLightPos;\nuniform vec3 u_SpotLightColor;\nuniform vec3 u_SpotLightDirection;\nuniform float u_SpotLightRange;\nuniform float u_SpotLightSpot;\nuniform int u_SpotLightMode;\n\t    #endif // SPOTLIGHT\n\n\t#else // LEGACYSINGLELIGHTING\n\t    #define CalculateLightCount MAX_LIGHT_COUNT\n\t    #define DirectionCount\tu_DirationLightCount\n\nuniform sampler2D u_LightBuffer;\n\n\t//\t    #ifdef DIRECTIONLIGHT\n\t// uniform mediump int u_DirationLightCount;\n\t//\t    #endif\n\n\t    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\nconst int c_ClusterBufferWidth = CLUSTER_X_COUNT * CLUSTER_Y_COUNT;\nint c_ClusterBufferHeight = CLUSTER_Z_COUNT * (1 + int(ceil(float(MAX_LIGHT_COUNT_PER_CLUSTER) / 4.0))); // 兼容WGSL\nconst int c_ClusterBufferFloatWidth = c_ClusterBufferWidth * 4;\nuniform sampler2D u_LightClusterBuffer;\n\nint getLightIndex(in int offset, in int index)\n{\n    int totalOffset = offset + index;\n    int row = totalOffset / c_ClusterBufferFloatWidth;\n    int lastRowFloat = totalOffset - row * c_ClusterBufferFloatWidth;\n    int col = lastRowFloat / 4;\n    vec2 uv = vec2((float(col) + 0.5) / float(c_ClusterBufferWidth), (float(row) + 0.5) / float(c_ClusterBufferHeight));\n    vec4 texPixel = texture2D(u_LightClusterBuffer, uv);\n    int pixelComponent = lastRowFloat - col * 4;\n\n\t\t#ifdef GRAPHICS_API_GLES3\n    return int(texPixel[pixelComponent]);\n\t\t#else\n    if (pixelComponent == 0)\n\treturn int(texPixel.x);\n    else if (pixelComponent == 1)\n\treturn int(texPixel.y);\n    else if (pixelComponent == 2)\n\treturn int(texPixel.z);\n    else\n\treturn int(texPixel.w);\n\t\t#endif\n}\n\t    #endif // POINTLIGHT || SPOTLIGHT\n\n\t#endif // LEGACYSINGLELIGHTING\n\n\t#ifdef DIRECTIONLIGHT\nDirectionLight getDirectionLight(in int index, in vec3 positionWS)\n{\n    DirectionLight light;\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_DirLightColor;\n    light.direction = u_DirLightDirection;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(float(u_DirLightMode));\n\t    #else // LEGACYSINGLELIGHTING\n    float v = (float(index) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    light.color = p1.rgb;\n    light.direction = p2.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p1.a);\n\t    #endif // LEGACYSINGLELIGHTING\n\n\t    #if defined(CALCULATE_SHADOWS)\n    if (index == 0)\n\t{\n\t    vec4 shadowCoord = getShadowCoord(positionWS);\n\t    float shadowAttenuation = sampleShadowmap(shadowCoord);\n\t    light.attenuation = shadowAttenuation;\n\t}\n\t    #endif // CALCULATE_SHADOWS\n\n    return light;\n}\n\t#endif // DIRECTIONLIGHT\n\n\t#if defined(POINTLIGHT) || defined(SPOTLIGHT)\nivec4 getClusterInfo(mat4 viewMatrix, vec4 viewport, vec3 positionWS, vec4 fragCoord, vec4 projectParams)\n{\n\t    #ifdef LEGACYSINGLELIGHTING\n    return ivec4(1, 1, 0, 0);\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  这个地方 用 positionVS 替换?\n    vec3 viewPos = vec3(viewMatrix * vec4(positionWS, 1.0));\n    int clusterXIndex = int(floor(fragCoord.x / (float(viewport.z) / float(CLUSTER_X_COUNT))));\n    int clusterYIndex = int(floor((viewport.w * (projectParams.z < 0.0 ? 0.0 : 1.0) - fragCoord.y * projectParams.z) / (float(viewport.w) / float(CLUSTER_Y_COUNT))));\n    float zSliceParam = float(CLUSTER_Z_COUNT) / log2(projectParams.y / projectParams.x);\n    int clusterZIndex = int(floor(log2(-viewPos.z) * zSliceParam - log2(projectParams.x) * zSliceParam));\n    // todo 化简\n    vec2 uv = vec2((float(clusterXIndex + clusterYIndex * CLUSTER_X_COUNT) + 0.5) / float(c_ClusterBufferWidth), (float(clusterZIndex) + 0.5) / float(c_ClusterBufferHeight));\n    vec4 clusterPixel = texture2D(u_LightClusterBuffer, uv);\n    return ivec4(clusterPixel); // X:Point Count Y:Spot Count Z、W:Light Offset\n\t    #endif // LEGACYSINGLELIGHTING\n}\n\t#endif // POINTLIGHT || SPOTLIGHT\n\n\t#ifdef POINTLIGHT\nPointLight getPointLight(in int index, in ivec4 clusterInfo, in vec3 positionWS)\n{\n\n    PointLight light;\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_PointLightColor;\n    light.position = u_PointLightPos;\n    light.range = u_PointLightRange;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(float(u_PointLightMode));\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  重复计算\n    int indexOffset = clusterInfo.z * c_ClusterBufferFloatWidth + clusterInfo.w;\n    int pointIndex = getLightIndex(indexOffset, index);\n    float v = (float(pointIndex) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    light.color = p1.rgb;\n    light.range = p1.a;\n    light.position = p2.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p2.a);\n\t    #endif // LEGACYSINGLELIGHTING\n    return light;\n}\n\t#endif // POINTLIGHT\n\n\t#ifdef SPOTLIGHT\nSpotLight getSpotLight(in int index, in ivec4 clusterInfo, in vec3 positionWS)\n{\n    SpotLight light;\n\n\t    #ifdef LEGACYSINGLELIGHTING\n    light.color = u_SpotLightColor;\n    light.position = u_SpotLightPos;\n    light.range = u_SpotLightRange;\n    light.direction = u_SpotLightDirection;\n    light.spot = u_SpotLightSpot;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(float(u_SpotLightMode));\n\t    #else // LEGACYSINGLELIGHTING\n    // todo  重复计算\n    int indexOffset = clusterInfo.z * c_ClusterBufferFloatWidth + clusterInfo.w;\n    int spotIndex = getLightIndex(indexOffset, index + clusterInfo.x);\n    float v = (float(spotIndex) + 0.5) / float(CalculateLightCount);\n    vec4 p1 = texture2D(u_LightBuffer, vec2(0.125, v));\n    vec4 p2 = texture2D(u_LightBuffer, vec2(0.375, v));\n    vec4 p3 = texture2D(u_LightBuffer, vec2(0.625, v));\n    light.color = p1.rgb;\n    light.range = p1.a;\n    light.position = p2.rgb;\n    light.spot = p2.a;\n    light.direction = p3.rgb;\n    light.attenuation = 1.0;\n    light.lightMode = getAttenuationByMode(p3.a);\n\t    #endif // LEGACYSINGLELIGHTING\n\n\t    #if defined(CALCULATE_SPOTSHADOWS)\n    if (index == 0)\n\t{\n\t    vec4 shadowCoord = getSpotShadowCoord(positionWS);\n\t    float shadowAttenuation = sampleSpotShadowmap(shadowCoord);\n\t    light.attenuation = shadowAttenuation;\n\t}\n\t    #endif // CALCULATE_SPOTSHADOWS\n\n    return light;\n}\n\t#endif // SPOTLIGHT\n\n    #endif // DIRECTIONLIGHT || POINTLIGHT || SPOTLIGHT\n\n#endif // Lighting_lib","#if !defined(globalIllumination_lib)\n    #define globalIllumination_lib\n\n    #ifdef ENUNIFORMBLOCK\n\nuniform ReflectionProbe\n{\n    vec4 u_AmbientColor;\n    vec3 u_IblSH[9];\n    float u_IBLRoughnessLevel;\n    float u_AmbientIntensity;\n    float u_ReflectionIntensity;\n};\nuniform samplerCube u_IBLTex;\n\n    #else // ENUNIFORMBLOCK\n\nuniform vec4 u_AmbientColor;\nuniform vec3 u_IblSH[9];\nuniform samplerCube u_IBLTex;\nuniform float u_IBLRoughnessLevel;\nuniform float u_AmbientIntensity;\nuniform float u_ReflectionIntensity;\n\n    #endif // ENUNIFORMBLOCK\n\n    #ifdef VOLUMETRICGI\n\t#include \"VolumetricGI.glsl\";\n    #endif // VOLUMETRICGI\n\nvec3 rotateByYAixs(in vec3 normal)\n{\n    float co = cos(u_GIRotate);\n    float si = sin(u_GIRotate);\n    float x = normal.x * co - normal.z * si;\n    float z = normal.x * si + normal.z * co;\n    return vec3(x, normal.y, z);\n}\n\nvec4 rotateByYAixs(in vec4 normal)\n{\n    float co = cos(u_GIRotate);\n    float si = sin(u_GIRotate);\n    float x = normal.x * co - normal.z * si;\n    float z = normal.x * si + normal.z * co;\n    return vec4(x, normal.y, z, normal.w);\n}\n\n    #ifdef GI_IBL\n\n// #define IBL_ROUGHNESS_LEVEL u_IBLRoughnessLevel //兼容WGSL\n\n// todo 格式\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    // todo cmeng 生成的数据问题， 临时转换下\n    vec3 n = normalWS * vec3(-1.0, 1.0, 1.0);\n    n = rotateByYAixs(n);\n    return max(\n\t       u_IblSH[0]\n\t\t   + u_IblSH[1] * n.y\n\t\t   + u_IblSH[2] * n.z\n\t\t   + u_IblSH[3] * n.x\n\t\t   + u_IblSH[4] * (n.y * n.x)\n\t\t   + u_IblSH[5] * (n.y * n.z)\n\t\t   + u_IblSH[6] * (3.0 * n.z * n.z - 1.0)\n\t\t   + u_IblSH[7] * (n.z * n.x)\n\t\t   + u_IblSH[8] * (n.x * n.x - n.y * n.y),\n\t       0.0)\n\t* u_AmbientIntensity;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS, in vec3 positionWS, in vec3 viewDir)\n{\n\t#ifdef VOLUMETRICGI\n    vec3 surfaceBias = VolumetricGISurfaceBias(normalWS, viewDir);\n    return VolumetricGIVolumeIrradiance(positionWS, surfaceBias, normalWS) * u_AmbientIntensity;\n\t#else // VOLUMETRICGI\n    return diffuseIrradiance(normalWS);\n\t#endif // VOLUMETRICGI\n}\n\nvec3 specularRadiance(in vec3 r, in float perceptualRoughness)\n{\n    float lod = u_IBLRoughnessLevel * perceptualRoughness * (2.0 - perceptualRoughness); // 兼容WGSL\n\n    // todo 临时转换\n    vec3 reflectDir = r * vec3(-1.0, 1.0, 1.0);\n\n    // todo rotateY SceneConfig\n    reflectDir = rotateByYAixs(reflectDir);\n\n\t// todo float 编码 ?\n\t#ifdef LOD_TEXTURE_SAMPLE\n    vec4 reflectSampler = textureCubeLodEXT(u_IBLTex, reflectDir, lod);\n\t#else\n    vec4 reflectSampler = textureLod(u_IBLTex, reflectDir, lod); // 兼容WGSL\n\t#endif\n\n\t#ifdef IBL_RGBD\n    return decodeRGBD(reflectSampler) * u_ReflectionIntensity;\n\t#else // IBL_RGBD\n    return reflectSampler.rgb * u_ReflectionIntensity;\n\t#endif // IBL_RGBD\n}\n\n    #endif // GI_IBL\n\n    #ifdef GI_LEGACYIBL\n\nuniform vec4 u_AmbientSHAr;\nuniform vec4 u_AmbientSHAg;\nuniform vec4 u_AmbientSHAb;\nuniform vec4 u_AmbientSHBr;\nuniform vec4 u_AmbientSHBg;\nuniform vec4 u_AmbientSHBb;\nuniform vec4 u_AmbientSHC;\n\n\t#define LAYA_SPECCUBE_LOD_STEPS 6.0\nuniform samplerCube u_ReflectTexture;\nuniform vec4 u_ReflectCubeHDRParams;\n\nvec3 shEvalLinearL0L1(in vec4 normal)\n{\n    vec3 x;\n    x.r = dot(u_AmbientSHAr, normal);\n    x.g = dot(u_AmbientSHAg, normal);\n    x.b = dot(u_AmbientSHAb, normal);\n    return x;\n}\n\nvec3 shEvalLinearL2(in vec4 normal)\n{\n    vec3 x1, x2;\n    // 4 of the quadratic (L2) polynomials\n    vec4 vB = normal.xyzz * normal.yzzx;\n    x1.r = dot(u_AmbientSHBr, vB);\n    x1.g = dot(u_AmbientSHBg, vB);\n    x1.b = dot(u_AmbientSHBb, vB);\n\n    // Final (5th) quadratic (L2) polynomial\n    float vC = normal.x * normal.x - normal.y * normal.y;\n    x2 = u_AmbientSHC.rgb * vC;\n\n    return x1 + x2;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    // todo -x 坐标转换\n    vec4 normal = vec4(-normalWS.x, normalWS.yz, 1.0);\n\n    // TODO rotate y SceneConfig\n\n    normal = rotateByYAixs(normal);\n\n    vec3 ambientContrib = shEvalLinearL0L1(normal);\n    ambientContrib += shEvalLinearL2(normal);\n    vec3 ambient = max(vec3(0.0), ambientContrib);\n\n    return ambient * u_AmbientIntensity;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS, in vec3 positionWS, in vec3 viewDir)\n{\n\t#ifdef VOLUMETRICGI\n    vec3 surfaceBias = VolumetricGISurfaceBias(normalWS, viewDir);\n    return VolumetricGIVolumeIrradiance(positionWS, surfaceBias, normalWS) * u_AmbientIntensity;\n\t#else // VOLUMETRICGI\n    return diffuseIrradiance(normalWS);\n\t#endif // VOLUMETRICGI\n}\n\nvec3 specularRadiance(in vec3 r, in float perceptualRoughness)\n{\n    float roughness = perceptualRoughness * (1.7 - 0.7 * perceptualRoughness);\n    // todo 临时转换\n    r *= vec3(-1.0, 1.0, 1.0);\n    r = rotateByYAixs(r);\n\n    float lod = roughness * LAYA_SPECCUBE_LOD_STEPS;\n    vec4 rgbm = textureCubeLodEXT(u_ReflectTexture, r, lod);\n    float range = u_ReflectCubeHDRParams.x;\n    vec3 color = decodeRGBM(rgbm, range);\n    color = gammaToLinear(color);\n    return color * u_ReflectionIntensity;\n}\n\n    #endif // GI_LEGACYIBL\n\n    #ifndef GI_IBL\n\t#ifndef GI_LEGACYIBL\n\nvec3 diffuseIrradiance(in vec3 normalWS)\n{\n    return u_AmbientColor.rgb * u_AmbientIntensity;\n}\n\nvec3 diffuseIrradiance(in vec3 normalWS, in vec3 positionWS, in vec3 viewDir)\n{\n    return diffuseIrradiance(normalWS);\n}\n\nvec3 specularRadiance(in vec3 r, in float perceptualRoughness)\n{\n    // todo\n    return u_AmbientColor.rgb * u_ReflectionIntensity;\n}\n\n\t#endif // GI_LEGACYIBL\n    #endif // GI_IBL\n\n    #ifdef LIGHTMAP\n\n\t#ifdef UV1\n\t    #define USELIGHTMAP\n\t#endif // UV1\n\nuniform sampler2D u_LightMap;\n\n\t#ifdef LIGHTMAP_DIRECTIONAL\n\nuniform sampler2D u_LightMapDirection;\n\nvec3 DecodeDirectionalLightmap(in vec2 lightmapUV, in vec3 bakeColor, in vec3 normalWS)\n{\n    vec4 dirLightmap = texture2D(u_LightMapDirection, lightmapUV);\n    vec3 lightdir = normalize(dirLightmap.xyz - vec3(0.5)); // 0-1  => -0.5-0.5\n    // 根据法线计算半兰伯特\n    float halfLambert = clamp(dot(normalWS, lightdir), 0.0, 1.0) * 0.5 + 0.5;\n    return bakeColor * halfLambert / max(dirLightmap.w, 0.001);\n}\n\n\t#endif // LIGHTMAP_DIRECTIONAL\n\nvec3 getBakedLightmapColor(in vec2 lightmapUV, in vec3 normalWS)\n{\n    vec4 lightmapSampler = texture2D(u_LightMap, lightmapUV);\n    // todo lightmap rgbm encode color space\n    lightmapSampler.rgb = decodeRGBM(lightmapSampler, 5.0);\n\n    // #ifdef Gamma_u_LightMap\n    lightmapSampler = gammaToLinear(lightmapSampler);\n\t// #endif // Gamma_u_LightMap\n\n\t#ifdef LIGHTMAP_DIRECTIONAL\n    lightmapSampler.rgb = DecodeDirectionalLightmap(lightmapUV, lightmapSampler.rgb, normalWS);\n\t#endif // LIGHTMAP_DIRECTIONAL\n\n    return lightmapSampler.rgb;\n}\n\n    #endif // LIGHTMAP\n\n    #ifdef SPECCUBE_BOX_PROJECTION\n\nuniform vec3 u_SpecCubeProbePosition;\nuniform vec3 u_SpecCubeBoxMax;\nuniform vec3 u_SpecCubeBoxMin;\n\nvec3 getBoxProjectionReflectedVector(vec3 r, vec3 positionWS)\n{\n    vec3 boxCenter = u_SpecCubeProbePosition;\n    vec3 boxMin = u_SpecCubeBoxMin;\n    vec3 boxMax = u_SpecCubeBoxMax;\n\n    vec3 nr = normalize(r);\n    vec3 rbmax = boxMax - positionWS;\n    vec3 rbmin = boxMin - positionWS;\n    vec3 select = step(vec3(0.0), r);\n    vec3 rbminmax = mix(rbmin, rbmax, select) / nr;\n    float scalar = vecmin(rbminmax);\n    vec3 boxr = nr * scalar + positionWS - boxCenter;\n    return boxr;\n}\n\n    #endif // SPECCUBE_BOX_PROJECTION\n\n#endif // globalIllumination_lib","#if !defined(Oct_lib)\n    #define Oct_lib\n\nfloat signNotZero(in float k) { return k >= 0.0 ? 1.0 : -1.0; }\n\nvec2 signNotZero(in vec2 v) { return vec2(signNotZero(v.x), signNotZero(v.y)); }\n\n/**\n * v: normalized sample dir\n * @return: oct encode uv [-1, 1]\n */\nvec2 octEncode(in vec3 v)\n{\n    float l1norm = abs(v.x) + abs(v.y) + abs(v.z);\n    vec2 result = v.xy * (1.0 / l1norm);\n    if (v.z < 0.0)\n\t{\n\t    result = (1.0 - abs(result.yx)) * signNotZero(result.xy);\n\t}\n\n    return result;\n}\n\n/**\n * x: u [-1, 1]\n * y: v [-1, 1]\n * @return: normalized sample dir\n */\nvec3 finalDecode(float x, float y)\n{\n    vec3 v = vec3(x, y, 1.0 - abs(x) - abs(y));\n    if (v.z < 0.0)\n\t{\n\t    v.xy = (1.0 - abs(v.yx)) * signNotZero(v.xy);\n\t}\n    return normalize(v);\n}\n\n/**\n * dir: cubemap sample dir\n * outsize: probe size with border (x: probe x, y: probe y, z: 1 / probe x, w: 1\n * / probe y) gridsize: probe grid size (x: probe x index, y: probe y index, z:\n * grid x size, w: grid y size)\n * @return texture coord [0, 1]\n */\nvec2 textureCoordFromDirection(in vec3 dir, vec4 outSize, vec4 gridSize)\n{\n    vec2 uv = (octEncode(normalize(dir))) * 0.5 + 0.5;\n    uv = uv * (outSize.xy - vec2(2.0, 2.0)) * outSize.zw + outSize.zw;\n    uv = gridSize.xy * (1.0 / gridSize.zw) + uv * (1.0 / gridSize.zw);\n    return uv;\n}\n\n#endif // Oct_lib","#if !defined(GridHelpers_lib)\n    #define GridHelpers_lib\n\nint imod(int x, int y)\n{\n    #ifdef GRAPHICS_API_GLES3\n    return x % y;\n    #else // GRAPHICS_API_GLES3\n    return x - (x / y) * y;\n    #endif // GRAPHICS_API_GLES3\n}\n\nint gridCoordToProbeIndex(in ivec3 probeCoords, const in ivec3 probeCounts)\n{\n    return probeCoords.x + probeCoords.y * probeCounts.x + probeCoords.z * probeCounts.x * probeCounts.y;\n}\n\nivec3 probeIndexToGridcoord(in int probeIndex, const in ivec3 probeCounts)\n{\n    ivec3 iPos;\n    iPos.x = imod(probeIndex, probeCounts.x);\n    iPos.y = imod(probeIndex, (probeCounts.x * probeCounts.y)) / probeCounts.x;\n    iPos.z = probeIndex / (probeCounts.x * probeCounts.y);\n    return iPos;\n\n    //   ivec3 iPos;\n    //   iPos.x = probeIndex & (probeCounts.x - 1);\n    //   iPos.y = (probeIndex & ((probeCounts.x * probeCounts.y) - 1)) >>\n    //            findMSB(probeCounts.x);\n    //   iPos.z = probeIndex >> findMSB(probeCounts.x * probeCounts.y);\n    //   return iPos;\n}\n\nvec3 gridCoordToPosition(in ivec3 coord, const in vec3 probeStep,\n    const in vec3 probeStartPosition)\n{\n    return (vec3(coord) + 0.5) * probeStep + probeStartPosition;\n}\n\nivec3 baseGridCoord(in vec3 position, in vec3 probeStep,\n    in vec3 probeStartPosition, in ivec3 probeCounts)\n{\n    probeStartPosition += 0.5 * probeStep;\n    return ivec3(clamp(vec3((position - probeStartPosition) / probeStep),\n\tvec3(0, 0, 0), vec3(probeCounts) - vec3(1, 1, 1)));\n}\n\n#endif // GridHelpers_lib","// https://jcgt.org/published/0008/02/01/\n\n#if !defined(VolumetricGI_lib)\n    #define VolumetricGI_lib\n\n    #include \"Oct.glsl\";\n    #include \"GridHelpers.glsl\";\n\n    #ifdef ENUNIFORMBLOCK\n\nuniform VolumetricGIProbe\n{\n    vec3 u_VolGIProbeCounts;\n    vec3 u_VolGIProbeStep;\n    vec3 u_VolGIProbeStartPosition;\n    vec4 u_VolGIProbeParams;\n};\n\nuniform sampler2D u_ProbeIrradiance;\nuniform sampler2D u_ProbeDistance;\n\n    #else // ENUNIFORMBLOCK\n\nuniform vec3 u_VolGIProbeCounts;\nuniform vec3 u_VolGIProbeStep;\nuniform vec3 u_VolGIProbeStartPosition;\nuniform vec4 u_VolGIProbeParams;\n\nuniform sampler2D u_ProbeIrradiance;\nuniform sampler2D u_ProbeDistance;\n\n    #endif // ENUNIFORMBLOCK\n\nstruct VolumetricGI {\n    vec3 probeCounts;\n    vec3 probeStep;\n    vec3 probeStartPosition;\n    vec4 probeParams; // x: irradianceTexels, y: distanceTexels, z: normalBias, w: viewBias\n};\n\nvec2 porbeGridCoordToTextureGridCoord(in ivec3 porbeGridCoord,\n    in ivec3 probeCounts,\n    in vec2 textureGridSize)\n{\n    int probeIndex = gridCoordToProbeIndex(porbeGridCoord, probeCounts);\n    ivec2 index;\n    index.x = imod(probeIndex, (probeCounts.x * probeCounts.y));\n    index.y = probeIndex / (probeCounts.x * probeCounts.y);\n\n    vec2 textureGridCoord = vec2(index);\n    textureGridCoord.y = textureGridCoord.y;\n    return textureGridCoord;\n}\n\nvec3 VolumetricGISurfaceBias(in vec3 surfaceNormal, in vec3 cameraDirection)\n{\n    return surfaceNormal * u_VolGIProbeParams.z + cameraDirection * u_VolGIProbeParams.w;\n}\n\nvec3 VolumetricGIVolumeIrradiance(in vec3 worldPosition, in vec3 surfaceBias,\n    in vec3 direction)\n{\n    // direction *= vec3(-1.0, 1.0, 1.0);\n    ivec3 porbeCounts = ivec3(u_VolGIProbeCounts);\n    vec3 probeStep = u_VolGIProbeStep;\n    vec3 probeStartPosition = u_VolGIProbeStartPosition;\n    vec2 volumeCounts = vec2(porbeCounts.x * porbeCounts.y, porbeCounts.z);\n    vec4 irradianceTexels = vec4(u_VolGIProbeParams.x, u_VolGIProbeParams.x, 1.0 / u_VolGIProbeParams.x, 1.0 / u_VolGIProbeParams.x);\n    vec4 distanceTexels = vec4(u_VolGIProbeParams.y, u_VolGIProbeParams.y, 1.0 / u_VolGIProbeParams.y, 1.0 / u_VolGIProbeParams.y);\n\n    ivec3 maxGridCoord = porbeCounts - ivec3(1);\n\n    vec3 irradiance = vec3(0.0);\n    float accumulatedWeights = 0.0;\n\n    // Bias the world space position\n    vec3 biasedWorldPosition = worldPosition + surfaceBias;\n\n    // Get the 3D grid coordinates of the probe nearest the biased world position\n    // (i.e. the \"base\" probe)\n    ivec3 baseProbeCoords = baseGridCoord(biasedWorldPosition, probeStep,\n\tprobeStartPosition, porbeCounts);\n\n    // Get the world-space position of the base probe (ignore relocation)\n    vec3 baseProbeWorldPosition = gridCoordToPosition(baseProbeCoords, probeStep, probeStartPosition);\n\n    // Clamp the distance (in grid space) between the given point and the base\n    // probe's world position (on each axis) to [0, 1]\n    vec3 gridSpaceDistance = biasedWorldPosition - baseProbeWorldPosition;\n\n    vec3 alpha = clamp(gridSpaceDistance / probeStep, vec3(0.0), vec3(1.0));\n\n    // Iterate over the 8 closest probes and accumulate their contributions\n    for (int probeIndex = 0; probeIndex < 8; probeIndex++)\n\t{\n\t    // Compute the offset to the adjacent probe in grid coordinates by sourcing\n\t    // the offsets from the bits of the loop index: x = bit 0, y = bit 1, z =\n\t    // bit 2\n\t    // ivec3 adjacentProbeOffset = ivec3(probeIndex, probeIndex >> 1, probeIndex >> 2) & ivec3(1, 1, 1);\n\t    ivec3 adjacentProbeOffset = ivec3(imod(probeIndex, 2), imod((probeIndex / 2), 2), imod((probeIndex / 4), 2));\n\n\t    // Get the 3D grid coordinates of the adjacent probe by adding the offset to\n\t    // the base probe and clamping to the grid boundaries\n\t    ivec3 adjacentProbeCoords = ivec3(clamp(vec3(baseProbeCoords + adjacentProbeOffset), vec3(0), vec3(maxGridCoord)));\n\n\t    // Get the adjacent probe's world position\n\t    vec3 adjacentProbeWorldPosition = gridCoordToPosition(adjacentProbeCoords, probeStep, probeStartPosition);\n\n\t    // Compute the distance and direction from the (biased and non-biased)\n\t    // shading point and the adjacent probe\n\t    vec3 worldPosToAdjProbe = normalize(adjacentProbeWorldPosition - worldPosition);\n\t    vec3 biasedPosToAdjProbe = normalize(adjacentProbeWorldPosition - biasedWorldPosition);\n\t    float biasedPosToAdjProbeDist = distance(adjacentProbeWorldPosition, biasedWorldPosition);\n\n\t    // Compute trilinear weights based on the distance to each adjacent probe to\n\t    // smoothly transition between probes. adjacentProbeOffset is binary, so\n\t    // we're using a 1-alpha when adjacentProbeOffset = 0 and alpha when\n\t    // adjacentProbeOffset = 1.\n\t    vec3 trilinear = max(vec3(0.001), mix(1.0 - alpha, alpha, vec3(adjacentProbeOffset)));\n\t    float trilinearWeight = trilinear.x * trilinear.y * trilinear.z;\n\t    float weight = 1.0;\n\n\t    // A naive soft backface weight would ignore a probe when\n\t    // it is behind the surface. That's good for walls, but for\n\t    // small details inside of a room, the normals on the details\n\t    // might rule out all of the probes that have mutual visibility\n\t    // to the point. We instead use a \"wrap shading\" test. The small\n\t    // offset at the end reduces the \"going to zero\" impact.\n\t    float warpShading = (dot(worldPosToAdjProbe, direction) + 1.0) * 0.5;\n\t    weight *= (warpShading * warpShading) * 0.2;\n\n\t    vec2 textureGridCoord = porbeGridCoordToTextureGridCoord(\n\t\tadjacentProbeCoords, porbeCounts, volumeCounts);\n\t    // compute the octahedral coordinates of the adjacent probe\n\t    vec2 probeTextureUV = textureCoordFromDirection(-biasedPosToAdjProbe, distanceTexels,\n\t\tvec4(textureGridCoord, volumeCounts));\n\t    // Sample the probe's distance texture to get the mean distance to nearby\n\t    // surfaces\n\t    vec3 filteredDistance = texture2D(u_ProbeDistance, probeTextureUV).xyz;\n\t    // Find the variance of the mean distance\n\t    float variance = abs(filteredDistance.x * filteredDistance.x - filteredDistance.y);\n\n\t    // Occlusion test\n\t    float chebyshevWeight = 1.0;\n\t    if (biasedPosToAdjProbeDist > filteredDistance.x)\n\t\t{\n\t\t    float v = biasedPosToAdjProbeDist - filteredDistance.x;\n\t\t    // v must be greater than 0, which is guaranteed by the if condition\n\t\t    // above.\n\t\t    chebyshevWeight = variance / (variance + (v * v));\n\n\t\t    // Increase the contrast in the weight\n\t\t    chebyshevWeight = max(chebyshevWeight * chebyshevWeight * chebyshevWeight, 0.0);\n\t\t}\n\n\t    if (filteredDistance.z < 1.0)\n\t\t{\n\t\t    chebyshevWeight = 1.0;\n\t\t}\n\n\t    // Avoid visibility weights ever going all the way to zero because\n\t    // when *no* probe has visibility we need a fallback value\n\t    weight *= max(0.05, chebyshevWeight);\n\n\t    // Avoid a weight of zero\n\t    weight = max(0.000001, weight);\n\n\t    // A small amount of light is visible due to logarithmic perception, so\n\t    // crush tiny weights but keep the curve continuous\n\t    const float crushThreshold = 0.2;\n\t    if (weight < crushThreshold)\n\t\t{\n\t\t    weight *= (weight * weight) * (1.0 / (crushThreshold * crushThreshold));\n\t\t}\n\n\t    // Apply the trilinear weights\n\t    weight *= trilinearWeight;\n\n\t    probeTextureUV = textureCoordFromDirection(\n\t\tdirection, irradianceTexels, vec4(textureGridCoord, volumeCounts));\n\n\t    // Sample the probe's irradiance\n\t    vec3 probeIrradiance = linearToGamma(texture2D(u_ProbeIrradiance, probeTextureUV).rgb);\n\n\t    irradiance += (probeIrradiance * weight);\n\t    accumulatedWeights += weight;\n\t}\n\n    if (accumulatedWeights == 0.0)\n\t{\n\t    return vec3(0.0);\n\t}\n\n    irradiance *= (1.0 / accumulatedWeights); // Normalize by the accumulated weights\n\n    irradiance = gammaToLinear(irradiance);\n\n    return irradiance;\n}\n\n#endif // VolumetricGI_lib","#if !defined(BlinnPhongLighting_lib)\n    #define BlinnPhongLighting_lib\n\n    #include \"Lighting.glsl\";\n    #include \"globalIllumination.glsl\";\n\nstruct PixelInfo {\n    vec3 positionWS;\n\n    vec3 vertexNormalWS;\n    vec3 normalWS;\n\n    vec3 viewDir;\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    vec2 lightmapUV;\n\t#endif // UV1\n    #endif // LIGHTMAP\n};\n\nstruct Surface {\n    vec3 diffuseColor;\n    vec3 specularColor;\n    float shininess;\n    vec3 gloss;\n\n    vec3 normalTS;\n\n    float alpha;\n    float alphaClip;\n};\n\nvec3 BlinnPhongLighting(in Surface surface, in Light light, in PixelInfo pixel)\n{\n    vec3 l = normalize(-light.dir);\n    vec3 v = pixel.viewDir;\n\n    vec3 normalWS = pixel.normalWS;\n\n    vec3 diffuseColor = surface.diffuseColor;\n    float shininess = surface.shininess;\n    vec3 specularColor = surface.specularColor;\n    vec3 gloss = surface.gloss;\n\n    // difffuse\n    float ndl = max(0.0, dot(normalWS, l));\n    vec3 lightDiffuse = light.color * diffuseColor * ndl;\n\n    // specular\n    mediump vec3 h = normalize(v + l);\n    lowp float ndh = max(0.0, dot(h, normalWS));\n    float specularIntensity = pow(ndh, shininess * 128.0);\n    vec3 lightSpecular = light.color * specularColor * specularIntensity * gloss;\n\n    return lightDiffuse + lightSpecular;\n}\n\nvec3 BlinnPhongGI(const in Surface surface, const in PixelInfo info)\n{\n    vec3 indirect = vec3(0.0);\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n\n    vec2 lightmapUV = info.lightmapUV;\n    vec3 bakedColor = getBakedLightmapColor(lightmapUV, info.normalWS);\n\n    // todo  surface.diffuseColor ？\n    indirect = bakedColor * surface.diffuseColor;\n\n\t#endif // UV1\n\n    #else // LIGHTMAP\n\n    vec3 n = info.normalWS;\n    indirect = diffuseIrradiance(n) * surface.diffuseColor;\n\n    #endif // LIGHTMAP\n\n    return indirect;\n}\n\n#endif // BlinnPhongLighting_lib","#if !defined(PBRLighting_lib)\n    #define PBRLighting_lib\n\n    #include \"Lighting.glsl\";\n\n    // 精度\n    #if !defined(GL_FRAGMENT_PRECISION_HIGH)\n\t#define MIN_PERCEPTUAL_ROUGHNESS 0.089\n\t#define MIN_ROUGHNESS\t\t 0.007921\n    #else\n\t#define MIN_PERCEPTUAL_ROUGHNESS 0.045\n\t#define MIN_ROUGHNESS\t\t 0.002025\n    #endif\n\n    #define MIN_N_DOT_V 1e-4\n\n    #include \"BRDF.glsl\";\n\nstruct PixelInfo {\n    vec3 positionWS;\n\n    vec3 vertexNormalWS;\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n\n    vec3 viewDir;\n    float NoV;\n\n    vec3 dfg;\n    vec3 energyCompensation;\n\n    #ifdef IRIDESCENCE\n    vec3 iridescenceFresnel;\n    #endif // IRIDESCENCE\n\n    #ifdef CLEARCOAT\n    vec3 clearCoatNormal;\n    float clearCoatNoV;\n    #endif // CLEARCOAT\n\n    #ifdef SHEEN\n    float sheenScaling;\n    float sheenDfg;\n    #endif // SHEEN\n\n    #ifdef ANISOTROPIC\n    vec3 anisotropicT;\n    vec3 anisotropicB;\n    float ToV;\n    float BoV;\n    float at;\n    float ab;\n    #endif // ANISOTROPIC\n\n    #ifdef THICKNESS\n    vec4 worldScale;\n    #endif // THICKNESS\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    vec2 lightmapUV;\n\t#endif // UV1\n    #endif // LIGHTMAP\n};\n\nstruct Surface {\n    vec3 diffuseColor;\n    float alpha;\n    vec3 f0;\n    vec3 f90;\n    float roughness;\n    float perceptualRoughness;\n    float occlusion;\n\n    #ifdef EMISSION\n    vec3 emissionColor;\n    #endif // EMISSION\n\n    vec3 normalTS;\n\n    float ior;\n\n    #ifdef CLEARCOAT\n    float clearCoat;\n    float clearCoatRoughness;\n    float clearCoatPerceptualRoughness;\n\t#ifdef CLEARCOAT_NORMAL\n    vec3 clearCoatNormalTS;\n\t#endif // CLEARCOAT_NORMAL\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    float anisotropy;\n    vec2 anisotropyDirection;\n    #endif // ANISOTROPIC\n\n    #ifdef IRIDESCENCE\n    float iridescence;\n    float iridescenceIor;\n    float iridescenceThickness;\n    #endif // IRIDESCENCE\n\n    #ifdef SHEEN\n    vec3 sheenColor;\n    float sheenRoughness;\n    float sheenPerceptualRoughness;\n    #endif // SHEEN\n\n    #ifdef TRANSMISSION\n    float transmission;\n    #endif // TRANSMISSION\n\n    #ifdef THICKNESS\n    float thickness;\n    vec3 attenuationColor;\n    float attenuationDistance;\n    #endif // THICKNESS\n};\n\nstruct LightParams {\n    vec3 l;\n    vec3 h;\n    float NoL;\n    float NoH;\n    float LoH;\n    float VoH;\n\n    #ifdef CLEARCOAT\n    float clearCoatNoH;\n    float clearCoatNoL;\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    float ToL;\n    float BoL;\n    #endif // ANISOTROPIC\n};\n\nvoid initLightParams(inout LightParams params, const in PixelInfo pixel, const in Light light)\n{\n    vec3 v = pixel.viewDir;\n    vec3 n = pixel.normalWS;\n\n    vec3 l = normalize(-light.dir);\n    params.l = l;\n\n    vec3 h = SafeNormalize(v + l);\n    params.h = h;\n    params.NoL = saturate(dot(n, l));\n    params.NoH = saturate(dot(n, h));\n    params.LoH = saturate(dot(l, h));\n    params.VoH = saturate(dot(v, h));\n\n    #ifdef CLEARCOAT\n    params.clearCoatNoL = saturate(dot(pixel.clearCoatNormal, l));\n    params.clearCoatNoH = saturate(dot(pixel.clearCoatNormal, h));\n    #endif // CLEARCOAT\n\n    #ifdef ANISOTROPIC\n    vec3 t = pixel.anisotropicT;\n    vec3 b = pixel.anisotropicB;\n    params.ToL = dot(t, l);\n    params.BoL = dot(b, l);\n    #endif // ANISOTROPIC\n}\n\nvec3 prefilteredDFG_LUT(float roughness, float NoV)\n{\n    vec2 samplePoint = clamp(vec2(NoV, roughness), vec2(0.0, 0.0), vec2(1.0, 1.0));\n    samplePoint.y = 1.0 - samplePoint.y;\n    #if defined(FLOATTEXTURE) && defined(FLOATTEXTURE_FIL_LINEAR)\n    return (texture2D(u_IBLDFG, samplePoint)).rgb;\n    #else\n    return decodeRGBD(texture2D(u_IBLDFG, samplePoint));\n    #endif\n}\n\n// todo remove\nvec2 EnvBRDFApproxLazarov(float roughness, float NoV)\n{\n    vec4 c0 = vec4(-1, -0.0275, -0.572, 0.022);\n    vec4 c1 = vec4(1, 0.0425, 1.04, -0.04);\n    vec4 r = roughness * c0 + c1;\n    float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n    vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n    return AB;\n}\n\nfloat dielectricSpecularToF0(float specular)\n{\n    return 0.08 * specular;\n}\n\nfloat dielectricF0ToIor(float f0)\n{\n    return 2.0 / (1.0 - sqrt(min(f0, 0.99))) - 1.0;\n}\n\nfloat dielectricIorToF0(float ior)\n{\n    return pow2((ior - 1.0) / (ior + 1.0));\n}\n\n// input dielectric f0, output surface f0\nvec3 computeF0(vec3 f0, vec3 baseColor, float metallic)\n{\n    return mix(f0, baseColor, metallic);\n}\n\n// input surface f0, output surface f90\nvec3 computeF90(vec3 f0)\n{\n    return vec3(saturate(dot(f0, vec3(50.0 * 0.33))));\n}\n\nvec3 computeDiffuse(vec3 baseColor, float metallic)\n{\n    return (1.0 - metallic) * baseColor;\n}\n\nfloat specularAA(float roughness, in vec3 normalWS)\n{\n\n    #if !defined(GRAPHICS_API_GLES3) && !defined(GL_OES_standard_derivatives)\n\n    return roughness;\n\n    #else // !GRAPHICS_API_GLES3 && !GL_OES_standard_derivatives\n\n    vec3 du = dFdx(normalWS);\n    vec3 dv = dFdy(normalWS);\n\n    float specularAAVariance = 0.15;\n    float specularAAThreshold = 0.04;\n\n    float variance = specularAAVariance * (dot(du, du) + dot(dv, dv));\n    float kernelRoughness = min(2.0 * variance, specularAAThreshold);\n\n    float squareRoughness = saturate(roughness * roughness + kernelRoughness);\n\n    return sqrt(squareRoughness);\n\n    #endif // !GRAPHICS_API_GLES3 && !GL_OES_standard_derivatives\n}\n\nvec3 diffuseLobe(in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    return surface.diffuseColor * Fd_Lambert();\n    // return surface.diffuseColor * Fd_Burley(surface.roughness, pixel.NoV, lightParams.NoL, lightParams.LoH);\n}\n\nvec3 specularLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float roughness = surface.roughness;\n\n    float D = distribution(roughness, lightParams.NoH, lightParams.h, pixel.normalWS);\n    float V = visibility(roughness, pixel.NoV, lightParams.NoL);\n    vec3 F = fresnel(surface.f0, surface.f90, lightParams.LoH);\n\n    return (D * V) * F;\n}\n\n    #ifdef IRIDESCENCE\nvec3 iridescenceDiffuseLobe(in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    vec3 f0 = surface.f0;\n    vec3 f90 = vec3(1.0);\n    vec3 iridescenceFresnel = pixel.iridescenceFresnel;\n    float iridescence = surface.iridescence;\n    float VoH = lightParams.VoH;\n    return surface.diffuseColor * Fd_IridescenceLambert(f0, f90, iridescenceFresnel, iridescence, VoH);\n}\n\nvec3 iridescenceSpecularLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float roughness = surface.roughness;\n    float D = distribution(roughness, lightParams.NoH, lightParams.h, pixel.normalWS);\n    float V = visibility(roughness, pixel.NoV, lightParams.NoL);\n\n    float iridescenceFactor = surface.iridescence;\n    vec3 iridescenceFresnel = pixel.iridescenceFresnel;\n    vec3 F = mix(fresnel(surface.f0, lightParams.LoH), iridescenceFresnel, vec3(iridescenceFactor));\n\n    return (D * V) * F;\n}\n    #endif // IRIDESCENCE\n\n    #ifdef CLEARCOAT\nfloat clearCoatLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float roughness = surface.clearCoatRoughness;\n    float clearCoat = surface.clearCoat;\n    vec3 n = pixel.clearCoatNormal;\n    vec3 h = lightParams.h;\n    float LoH = lightParams.LoH;\n\n    float clearCoatNoH = lightParams.clearCoatNoH;\n\n    float D = distribution(roughness, clearCoatNoH, h, n);\n    float V = V_kelemen(LoH);\n\n    return D * V;\n}\n    #endif // CLEARCOAT\n\n    #ifdef SHEEN\nvec3 sheenLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float roughness = surface.sheenRoughness;\n    float NoV = pixel.NoV;\n    float NoH = lightParams.NoH;\n    float NoL = lightParams.NoL;\n\n    float D = D_Charlie(roughness, NoH);\n    float V = V_Neubelt(NoV, NoL);\n    // F = 1.0\n    return D * V * surface.sheenColor;\n}\n    #endif // SHEEN\n\n    #ifdef ANISOTROPIC\nvec3 anisotropyLobe(const in Surface surface, const in PixelInfo pixel, const in LightParams lightParams)\n{\n    float anisotropy = surface.anisotropy;\n    float at = pixel.at;\n    float ab = pixel.ab;\n    vec3 anisotropicT = pixel.anisotropicT;\n    vec3 anisotropicB = pixel.anisotropicB;\n\n    float NoV = pixel.NoV;\n    float ToV = pixel.ToV;\n    float BoV = pixel.BoV;\n\n    vec3 h = lightParams.h;\n    float NoL = lightParams.NoL;\n    float NoH = lightParams.NoH;\n    float VoH = lightParams.VoH;\n    float ToL = lightParams.ToL;\n    float BoL = lightParams.BoL;\n\n    float V = V_SmithGGXCorrelated_Anisotropic(at, ab, ToV, BoV, ToL, BoL, NoV, NoL);\n    float D = D_GGX_Anisotropic(NoH, h, anisotropicT, anisotropicB, at, ab);\n    vec3 F = fresnel(surface.f0, surface.f90, lightParams.LoH);\n    return V * D * F;\n}\n    #endif // ANISOTROPIC\n\nvec3 PBRLighting(const in Surface surface, const in PixelInfo pixel, const in Light light)\n{\n    LightParams lightParams;\n    initLightParams(lightParams, pixel, light);\n\n    float NoL = lightParams.NoL;\n\n    #ifdef IRIDESCENCE\n    vec3 Fd = iridescenceDiffuseLobe(surface, pixel, lightParams);\n    vec3 Fr = iridescenceSpecularLobe(surface, pixel, lightParams);\n    #elif defined(ANISOTROPIC)\n    vec3 Fd = diffuseLobe(surface, pixel, lightParams);\n    vec3 Fr = anisotropyLobe(surface, pixel, lightParams);\n    #else\n    vec3 Fd = diffuseLobe(surface, pixel, lightParams);\n    vec3 Fr = specularLobe(surface, pixel, lightParams);\n    #endif\n\n    #ifdef TRANSMISSION\n    Fd *= 1.0 - surface.transmission;\n    #endif // TRANSMISSION\n\n    vec3 shading = (Fd + Fr * pixel.energyCompensation);\n\n    #ifdef SHEEN\n    vec3 fSheen = sheenLobe(surface, pixel, lightParams);\n    shading *= pixel.sheenScaling;\n    shading += fSheen;\n    #endif // SHEEN\n\n    #ifdef CLEARCOAT\n    float clearCoatNoL = lightParams.clearCoatNoL;\n    float LoH = lightParams.LoH;\n    // default IOR 1.5\n    float FccClearCoat = F_Schlick(0.04, 1.0, LoH) * surface.clearCoat;\n    float attenuation = 1.0 - FccClearCoat;\n    shading *= attenuation * NoL;\n\n    float clearcoat = clearCoatLobe(surface, pixel, lightParams) * FccClearCoat;\n    shading += clearcoat * clearCoatNoL;\n    // NoL has alread multiply\n    NoL = 1.0;\n    #endif // CLEARCOAT\n\n    return shading * light.color * NoL;\n}\n\n    // gi\n    #include \"PBRGI.glsl\";\n\n#endif // PBRLighting_lib","#define SHADER_NAME BlitVS\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n    gl_Position = vec4(u_OffsetScale.x * 2.0 - 1.0 + (a_PositionTexcoord.x + 1.0) * u_OffsetScale.z, (1.0 - ((u_OffsetScale.y * 2.0 - 1.0 + (-a_PositionTexcoord.y + 1.0) * u_OffsetScale.w) + 1.0) / 2.0) * 2.0 - 1.0, 0.0, 1.0);\n\n    v_Texcoord0 = a_PositionTexcoord.zw;\n}","#define SHADER_NAME BlitFS\n\n#include \"Color.glsl\";\n#include \"FastApproximateAntiAliasing.glsl\";\n\nvarying vec2 v_Texcoord0;\n\nvoid main()\n{\n#ifdef FXAA\n    gl_FragColor = FXAAMain(u_MainTex, v_Texcoord0, u_MainTex_TexelSize.zw);\n#else\n    vec4 mainColor = texture2D(u_MainTex, v_Texcoord0);\n    #ifdef Gamma_u_MainTex\n    mainColor = gammaToLinear(mainColor);\n    #endif // Gamma_u_AlbedoTexture\n    gl_FragColor = mainColor;\n#endif\n\n    gl_FragColor = outputTransform(gl_FragColor);\n}\n","#if !defined(FXAA_lib)\n    #define FXAA_lib\n#ifdef FXAA\n    #define EDGE_THRESHOLD_MIN 0.0312\n    #define EDGE_THRESHOLD_MAX 0.125\n    #define QUALITY(q)\t       ((q) < 5 ? 1.0 : ((q) > 5 ? ((q) < 10 ? 2.0 : ((q) < 11 ? 4.0 : 8.0)) : 1.5))\n    #define ITERATIONS\t       12\n    #define SUBPIXEL_QUALITY   0.75\n\nfloat rgb2luma(in vec3 rgb)\n{\n    return dot(rgb, vec3(0.299, 0.587, 0.114));\n}\n\nvec3 textureOffsetbyScreenSize(in sampler2D mainTex, in vec2 uv, in vec2 offset, in vec2 inverseScreenSize)\n{\n    vec2 sampleruv = uv + inverseScreenSize * offset; // u_texturesize表示每个像素的偏移量\n    return texture2D(mainTex, sampleruv).rgb;\n}\n\nvec4 FXAAMain(in sampler2D mainTex, in vec2 texuv, in vec2 inverseScreenSize)\n{\n\n    vec4 mainColor = texture2D(mainTex, texuv);\n    vec3 colorCenter = mainColor.rgb;\n    // Luma at the current fragment\n    float lumaCenter = rgb2luma(colorCenter);\n\n    // Luma at the four direct neighbours of the current fragment.\n    float lumaDown = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(0, -1), inverseScreenSize));\n    float lumaUp = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(0, 1), inverseScreenSize));\n    float lumaLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, 0), inverseScreenSize));\n    float lumaRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, 0), inverseScreenSize));\n\n    // Find the maximum and minimum luma around the current fragment.\n    float lumaMin = min(lumaCenter, min(min(lumaDown, lumaUp), min(lumaLeft, lumaRight)));\n    float lumaMax = max(lumaCenter, max(max(lumaDown, lumaUp), max(lumaLeft, lumaRight)));\n\n    // Compute the delta.\n    float lumaRange = lumaMax - lumaMin;\n\n    // If the luma variation is lower that a threshold (or if we are in a really dark area), we are not on an edge, don't perform any AA.\n    if (lumaRange < max(EDGE_THRESHOLD_MIN, lumaMax * EDGE_THRESHOLD_MAX))\n\t{\n\t    return mainColor;\n\t}\n\n    // Query the 4 remaining corners lumas.\n    float lumaDownLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, -1), inverseScreenSize));\n    float lumaUpRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, 1), inverseScreenSize));\n    float lumaUpLeft = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(-1, 1), inverseScreenSize));\n    float lumaDownRight = rgb2luma(textureOffsetbyScreenSize(mainTex, texuv, vec2(1, -1), inverseScreenSize));\n\n    // Combine the four edges lumas (using intermediary variables for future computations with the same values).\n    float lumaDownUp = lumaDown + lumaUp;\n    float lumaLeftRight = lumaLeft + lumaRight;\n\n    // Same for corners\n    float lumaLeftCorners = lumaDownLeft + lumaUpLeft;\n    float lumaDownCorners = lumaDownLeft + lumaDownRight;\n    float lumaRightCorners = lumaDownRight + lumaUpRight;\n    float lumaUpCorners = lumaUpRight + lumaUpLeft;\n\n    // Compute an estimation of the gradient along the horizontal and vertical axis.\n    float edgeHorizontal = abs(-2.0 * lumaLeft + lumaLeftCorners) + abs(-2.0 * lumaCenter + lumaDownUp) * 2.0 + abs(-2.0 * lumaRight + lumaRightCorners);\n    float edgeVertical = abs(-2.0 * lumaUp + lumaUpCorners) + abs(-2.0 * lumaCenter + lumaLeftRight) * 2.0 + abs(-2.0 * lumaDown + lumaDownCorners);\n\n    // Is the local edge horizontal or vertical ?\n    bool isHorizontal = (edgeHorizontal >= edgeVertical);\n\n    // Choose the step size (one pixel) accordingly.\n    float stepLength = isHorizontal ? inverseScreenSize.y : inverseScreenSize.x;\n\n    // Select the two neighboring texels lumas in the opposite direction to the local edge.\n    float luma1 = isHorizontal ? lumaDown : lumaLeft;\n    float luma2 = isHorizontal ? lumaUp : lumaRight;\n    // Compute gradients in this direction.\n    float gradient1 = luma1 - lumaCenter;\n    float gradient2 = luma2 - lumaCenter;\n\n    // Which direction is the steepest ?\n    bool is1Steepest = abs(gradient1) >= abs(gradient2);\n\n    // Gradient in the corresponding direction, normalized.\n    float gradientScaled = 0.25 * max(abs(gradient1), abs(gradient2));\n\n    // Average luma in the correct direction.\n    float lumaLocalAverage = 0.0;\n    if (is1Steepest)\n\t{\n\t    // Switch the direction\n\t    stepLength = -stepLength;\n\t    lumaLocalAverage = 0.5 * (luma1 + lumaCenter);\n\t}\n    else\n\t{\n\t    lumaLocalAverage = 0.5 * (luma2 + lumaCenter);\n\t}\n\n    // Shift UV in the correct direction by half a pixel.\n    vec2 currentUv = texuv;\n    if (isHorizontal)\n\t{\n\t    currentUv.y += stepLength * 0.5;\n\t}\n    else\n\t{\n\t    currentUv.x += stepLength * 0.5;\n\t}\n\n    // Compute offset (for each iteration step) in the right direction.\n    vec2 offset = isHorizontal ? vec2(inverseScreenSize.x, 0.0) : vec2(0.0, inverseScreenSize.y);\n    // Compute UVs to explore on each side of the edge, orthogonally. The QUALITY allows us to step faster.\n    vec2 uv1 = currentUv - offset * QUALITY(0);\n    vec2 uv2 = currentUv + offset * QUALITY(0);\n\n    // Read the lumas at both current extremities of the exploration segment, and compute the delta wrt to the local average luma.\n    float lumaEnd1 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv1, vec2(0.0, 0.0), inverseScreenSize));\n    float lumaEnd2 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv2, vec2(0.0, 0.0), inverseScreenSize));\n    lumaEnd1 -= lumaLocalAverage;\n    lumaEnd2 -= lumaLocalAverage;\n\n    // If the luma deltas at the current extremities is larger than the local gradient, we have reached the side of the edge.\n    bool reached1 = abs(lumaEnd1) >= gradientScaled;\n    bool reached2 = abs(lumaEnd2) >= gradientScaled;\n    bool reachedBoth = reached1 && reached2;\n\n    // If the side is not reached, we continue to explore in this direction.\n    if (!reached1)\n\t{\n\t    uv1 -= offset * QUALITY(1);\n\t}\n    if (!reached2)\n\t{\n\t    uv2 += offset * QUALITY(1);\n\t}\n\n    // If both sides have not been reached, continue to explore.\n    if (!reachedBoth)\n\t{\n\n\t    for (int i = 2; i < ITERATIONS; i++)\n\t\t{\n\t\t    // If needed, read luma in 1st direction, compute delta.\n\t\t    if (!reached1)\n\t\t\t{\n\t\t\t    lumaEnd1 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv1, vec2(0.0, 0.0), inverseScreenSize));\n\t\t\t    lumaEnd1 = lumaEnd1 - lumaLocalAverage;\n\t\t\t}\n\t\t    // If needed, read luma in opposite direction, compute delta.\n\t\t    if (!reached2)\n\t\t\t{\n\t\t\t    lumaEnd2 = rgb2luma(textureOffsetbyScreenSize(mainTex, uv2, vec2(0.0, 0.0), inverseScreenSize));\n\t\t\t    lumaEnd2 = lumaEnd2 - lumaLocalAverage;\n\t\t\t}\n\t\t    // If the luma deltas at the current extremities is larger than the local gradient, we have reached the side of the edge.\n\t\t    reached1 = abs(lumaEnd1) >= gradientScaled;\n\t\t    reached2 = abs(lumaEnd2) >= gradientScaled;\n\t\t    reachedBoth = reached1 && reached2;\n\n\t\t    // If the side is not reached, we continue to explore in this direction, with a variable quality.\n\t\t    if (!reached1)\n\t\t\t{\n\t\t\t    uv1 -= offset * QUALITY(i);\n\t\t\t}\n\t\t    if (!reached2)\n\t\t\t{\n\t\t\t    uv2 += offset * QUALITY(i);\n\t\t\t}\n\n\t\t    // If both sides have been reached, stop the exploration.\n\t\t    if (reachedBoth)\n\t\t\t{\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\t}\n\n    // Compute the distances to each side edge of the edge (!).\n    float distance1 = isHorizontal ? (texuv.x - uv1.x) : (texuv.y - uv1.y);\n    float distance2 = isHorizontal ? (uv2.x - texuv.x) : (uv2.y - texuv.y);\n\n    // In which direction is the side of the edge closer ?\n    bool isDirection1 = distance1 < distance2;\n    float distanceFinal = min(distance1, distance2);\n\n    // Thickness of the edge.\n    float edgeThickness = (distance1 + distance2);\n\n    // Is the luma at center smaller than the local average ?\n    bool isLumaCenterSmaller = lumaCenter < lumaLocalAverage;\n\n    // If the luma at center is smaller than at its neighbour, the delta luma at each end should be positive (same variation).\n    bool correctVariation1 = (lumaEnd1 < 0.0) != isLumaCenterSmaller;\n    bool correctVariation2 = (lumaEnd2 < 0.0) != isLumaCenterSmaller;\n\n    // Only keep the result in the direction of the closer side of the edge.\n    bool correctVariation = isDirection1 ? correctVariation1 : correctVariation2;\n\n    // UV offset: read in the direction of the closest side of the edge.\n    float pixelOffset = -distanceFinal / edgeThickness + 0.5;\n\n    // If the luma variation is incorrect, do not offset.\n    float finalOffset = correctVariation ? pixelOffset : 0.0;\n\n    // Sub-pixel shifting\n    // Full weighted average of the luma over the 3x3 neighborhood.\n    float lumaAverage = (1.0 / 12.0) * (2.0 * (lumaDownUp + lumaLeftRight) + lumaLeftCorners + lumaRightCorners);\n    // Ratio of the delta between the global average and the center luma, over the luma range in the 3x3 neighborhood.\n    float subPixelOffset1 = clamp(abs(lumaAverage - lumaCenter) / lumaRange, 0.0, 1.0);\n    float subPixelOffset2 = (-2.0 * subPixelOffset1 + 3.0) * subPixelOffset1 * subPixelOffset1;\n    // Compute a sub-pixel offset based on this delta.\n    float subPixelOffsetFinal = subPixelOffset2 * subPixelOffset2 * SUBPIXEL_QUALITY;\n\n    // Pick the biggest of the two offsets.\n    finalOffset = max(finalOffset, subPixelOffsetFinal);\n\n    // Compute the final UV coordinates.\n    vec2 finalUv = texuv;\n    if (isHorizontal)\n\t{\n\t    finalUv.y += finalOffset * stepLength;\n\t}\n    else\n\t{\n\t    finalUv.x += finalOffset * stepLength;\n\t}\n\n    // Read the color at the new UV coordinates, and use it.\n    return texture2D(mainTex, finalUv);\n}\n#endif//FXAA\n#endif // Color_lib\n","import { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport BlitVS from \"./BlitScreen.vs\";\nimport BlitFS from \"./BlitScreen.fs\";\nimport FXAA from \"./FastApproximateAntiAliasing.glsl\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nexport class BlitScreenShaderInit {\n    static init() {\n        Shader3D.addInclude(\"FastApproximateAntiAliasing.glsl\", FXAA);\n        let attributeMap = {\n            \"a_PositionTexcoord\": [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4]\n        };\n        let uniformMap = {\n            \"u_OffsetScale\": ShaderDataType.Vector4,\n            \"u_MainTex\": ShaderDataType.Texture2D,\n            \"u_MainTex_TexelSize\": ShaderDataType.Vector4,\n        };\n        let shader = Shader3D.add(\"BlitScreen\");\n        shader.shaderType = ShaderFeatureType.PostProcess;\n        let subShader = new SubShader(attributeMap, uniformMap);\n        shader.addSubShader(subShader);\n        let blitPass = subShader.addShaderPass(BlitVS, BlitFS);\n        blitPass.statefirst = true;\n        let blitState = blitPass.renderState;\n        blitState.depthTest = RenderState.DEPTHTEST_ALWAYS;\n        blitState.depthWrite = false;\n        blitState.cull = RenderState.CULL_NONE;\n        blitState.blend = RenderState.BLEND_DISABLE;\n        let transparentShader = Shader3D.add(\"BlitScreen_Transparnet\");\n        shader.shaderType = ShaderFeatureType.PostProcess;\n        let transparentSubShader = new SubShader(attributeMap, uniformMap);\n        transparentShader.addSubShader(transparentSubShader);\n        let blitPassTrans = transparentSubShader.addShaderPass(BlitVS, BlitFS);\n        blitPass.statefirst = true;\n        blitState = blitPassTrans.renderState;\n        blitState.depthTest = RenderState.DEPTHTEST_ALWAYS;\n        blitState.depthWrite = false;\n        blitState.cull = RenderState.CULL_NONE;\n        blitState.blend = RenderState.BLEND_ENABLE_ALL;\n        blitState.srcBlend = RenderState.BLENDPARAM_SRC_ALPHA;\n        blitState.dstBlend = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n    }\n}\n","\n#define SHADER_NAME UnlitVS\n\n#include \"Math.glsl\";\n\n#include \"Scene.glsl\";\n#include \"SceneFogInput.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DVertex.glsl\";\n\n#include \"VertexCommon.glsl\";\n\n#ifdef UV\nvarying vec2 v_Texcoord0;\n#endif // UV\n\n#ifdef COLOR\nvarying vec4 v_VertexColor;\n#endif // COLOR\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n#ifdef UV\n    v_Texcoord0 = transformUV(vertex.texCoord0, u_TilingOffset);\n#endif // UV\n\n#ifdef COLOR\n    v_VertexColor = vertex.vertexColor;\n#endif // COLOR\n\n    mat4 worldMat = getWorldMatrix();\n    vec4 pos = (worldMat * vec4(vertex.positionOS, 1.0));\n    vec3 positionWS = pos.xyz / pos.w;\n\n    gl_Position = getPositionCS(positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n\n#ifdef FOG\n    FogHandle(gl_Position.z);\n#endif\n}\n","\n#define SHADER_NAME UNLITFS\n\n#include \"Color.glsl\";\n\n#include \"Scene.glsl\";\n#include \"SceneFog.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DFrag.glsl\";\n\n#ifdef UV\nvarying vec2 v_Texcoord0;\n#endif // UV\n\n#ifdef COLOR\nvarying vec4 v_VertexColor;\n#endif // COLOR\n\nvoid main()\n{\n    vec3 color = u_AlbedoColor.rgb;\n    float alpha = u_AlbedoColor.a;\n\n#ifdef COLOR\n    #ifdef ENABLEVERTEXCOLOR\n    vec4 vertexColor = v_VertexColor;\n    color *= vertexColor.rgb;\n    alpha *= vertexColor.a;\n    #endif // ENABLEVERTEXCOLOR\n#endif // COLOR\n\n#ifdef UV\n    vec2 uv = v_Texcoord0;\n\n    #ifdef ALBEDOTEXTURE\n    vec4 albedoSampler = texture2D(u_AlbedoTexture, uv);\n\n\t#ifdef Gamma_u_AlbedoTexture\n    albedoSampler = gammaToLinear(albedoSampler);\n\t#endif // Gamma_u_AlbedoTexture\n\n    color *= albedoSampler.rgb;\n    alpha *= albedoSampler.a;\n    #endif // ALBEDOTEXTURE\n#endif // UV\n\n#ifdef ALPHATEST\n    if (alpha < u_AlphaTestValue)\n\tdiscard;\n#endif // ALPHATEST\n\n#ifdef FOG\n    color = scenUnlitFog(color);\n#endif // FOG\n\n    gl_FragColor = vec4(color, alpha);\n    gl_FragColor = outputTransform(gl_FragColor);\n}","#define SHADER_NAME DepthVS\n\n#include \"DepthVertex.glsl\";\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    mat4 worldMat = getWorldMatrix();\n    vec4 pos = (worldMat * vec4(vertex.positionOS, 1.0));\n    vec3 positionWS = pos.xyz / pos.w;\n\n    mat4 normalMat = transpose(inverse(worldMat));\n    vec3 normalWS = normalize((normalMat * vec4(vertex.normalOS, 0.0)).xyz);\n\n    vec4 positionCS = DepthPositionCS(positionWS, normalWS);\n    gl_Position = remapPositionZ(positionCS);\n}","#define SHADER_NAME DepthFS\n\n#include \"DepthFrag.glsl\";\n\nvoid main()\n{\n    gl_FragColor = getDepthColor();\n}","import UnlitVS from \"./Unlit.vs\";\nimport UnlitFS from \"./Unlit.fs\";\nimport DepthVS from \"../depth/Depth.vs\";\nimport DepthFS from \"../depth/Depth.fs\";\nimport { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class UnlitShaderInit {\n    static init() {\n        let uniformMap = {\n            \"UnlitBlock\": {\n                \"u_AlbedoColor\": ShaderDataType.Color,\n                \"u_TilingOffset\": ShaderDataType.Vector4,\n            },\n            \"u_AlbedoTexture\": ShaderDataType.Texture2D,\n            \"u_AlphaTestValue\": ShaderDataType.Float,\n        };\n        let defaultValue = {\n            \"u_AlbedoColor\": Color.WHITE,\n            \"u_TilingOffset\": new Vector4(1, 1, 0, 0),\n            \"u_AlphaTestValue\": 0.5\n        };\n        let shader = Shader3D.add(\"Unlit\", true, false);\n        shader.shaderType = ShaderFeatureType.D3;\n        let subShader = new SubShader(SubShader.DefaultAttributeMap, uniformMap, defaultValue);\n        shader.addSubShader(subShader);\n        let forwardPass = subShader.addShaderPass(UnlitVS, UnlitFS);\n        let shadowPass = subShader.addShaderPass(DepthVS, DepthFS, \"ShadowCaster\");\n    }\n}\n","#if !defined(BlinnPhongCommon_lib)\n    #define BlinnPhongCommon_lib\n\n// varying\nvarying vec3 v_PositionWS;\n// todo\nvarying vec3 v_NormalWS;\nvarying vec3 v_TangentWS;\nvarying vec3 v_BiNormalWS;\n\n    #ifdef UV\nvarying vec2 v_Texcoord0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\nvarying vec2 v_Texcoord1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\nvarying vec4 v_VertexColor;\n    #endif // COLOR\n\n// 记录顶点信息, 用于由vs向fs传递数据\nstruct PixelParams {\n    vec3 positionWS;\n\n    vec3 normalWS;\n    vec3 tangentWS;\n    vec3 biNormalWS;\n    mat3 TBN;\n\n    #ifdef UV\n    vec2 uv0;\n    #endif // UV\n\n    #ifdef UV1\n\t#ifdef LIGHTMAP\n    vec2 uv1;\n\t#endif // LIGHTMAP\n    #endif // UV1\n\n    #ifdef COLOR\n    vec4 vertexColor;\n    #endif // COLOR\n};\n\n#endif // BlinnPhongCommon_lib","#if !defined(BlinnPhongVertex_lib)\n    #define BlinnPhongVertex_lib\n\n    #include \"ShadingVertex.glsl\";\n\nvoid initPixelParams(inout PixelParams params, in Vertex vertex)\n{\n    shadingPixelParams(params, vertex);\n    sharePixelParams(params);\n}\n\n#endif // BlinnPhongVertex_lib","#if !defined(BlinnPhongFrag_lib)\n    #define BlinnPhongFrag_lib\n\n    #include \"BlinnPhongLighting.glsl\";\n\n    #include \"ShadingFrag.glsl\";\n\nvoid getPixelInfo(inout PixelInfo info, const in PixelParams pixel, const in Surface surface)\n{\n    info.positionWS = pixel.positionWS;\n\n    info.vertexNormalWS = pixel.normalWS;\n\n    #ifdef TANGENT\n    info.normalWS = normalize(pixel.TBN * surface.normalTS);\n    #else // TANGENT\n    info.normalWS = pixel.normalWS;\n    #endif // TANGENT\n\n    info.viewDir = normalize(u_CameraPos - info.positionWS);\n\n    #ifdef LIGHTMAP\n\t#ifdef UV1\n    info.lightmapUV = pixel.uv1;\n\t#endif // UV1\n    #endif // LIGHTMAP\n}\n\nvec3 BlinnPhongLighting(const in Surface surface, const in PixelParams pixel)\n{\n    PixelInfo info;\n    getPixelInfo(info, pixel, surface);\n\n    vec3 positionWS = info.positionWS;\n    vec3 normalWS = info.normalWS;\n    vec3 v = info.viewDir;\n\n    vec3 lightColor = vec3(0.0, 0.0, 0.0);\n\n    #ifdef DIRECTIONLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n\t    if (i >= DirectionCount) break;\n\t    DirectionLight directionLight = getDirectionLight(i, positionWS);\n\t    // if (directionLight.lightMode == LightMode_Mix) //兼容WGSL\n\t\t// {\n\t\t//     continue;\n\t\t// }\n        if (directionLight.lightMode != LightMode_Mix) {\n\t        Light light = getLight(directionLight);\n\t        lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n        }\n\t}\n    #endif // DIRECTIONLIGHT\n\n    #if defined(POINTLIGHT) || defined(SPOTLIGHT)\n    ivec4 clusterInfo = getClusterInfo(u_View, u_Viewport, positionWS, gl_FragCoord, u_ProjectionParams);\n    #endif // POINTLIGHT || SPOTLIGHT\n\n    #ifdef POINTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n        #ifdef BREAK_TEXTURE_SAMPLE\n\t    if (i >= clusterInfo.x) break; //兼容WGSL\n        #endif\n\t    PointLight pointLight = getPointLight(i, clusterInfo, positionWS);\n\t    // if (pointLight.lightMode == LightMode_Mix)\n\t\t// {\n\t\t//     continue;\n\t\t// }\n        if (pointLight.lightMode != LightMode_Mix) {\n\t        Light light = getLight(pointLight, normalWS, positionWS);\n            #ifndef BREAK_TEXTURE_SAMPLE\n            if (i < clusterInfo.x)\n            #endif\n\t            lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n        }\n\t}\n    #endif // POINTLIGHT\n\n    #ifdef SPOTLIGHT\n    for (int i = 0; i < CalculateLightCount; i++)\n\t{\n        #ifdef BREAK_TEXTURE_SAMPLE\n\t    if (i >= clusterInfo.y) break; //兼容WGSL\n        #endif\n\t    SpotLight spotLight = getSpotLight(i, clusterInfo, positionWS);\n\t    // if (spotLight.lightMode == LightMode_Mix)\n\t\t// {\n\t\t//     continue;\n\t\t// }\n        if (spotLight.lightMode != LightMode_Mix) {\n\t        Light light = getLight(spotLight, normalWS, positionWS);\n            #ifndef BREAK_TEXTURE_SAMPLE\n            if (i < clusterInfo.y)\n            #endif\n\t            lightColor += BlinnPhongLighting(surface, light, info) * light.attenuation;\n        }\n\t}\n    #endif // SPOTLIGHT\n\n    vec3 giColor = BlinnPhongGI(surface, info);\n\n    return lightColor + giColor;\n}\n\n#endif // BlinnPhongFrag_lib","#define SHADER_NAME BlinnPhongVS\n\n#include \"Math.glsl\";\n\n#include \"Scene.glsl\";\n#include \"SceneFogInput.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DVertex.glsl\";\n\n#include \"VertexCommon.glsl\";\n\n#include \"BlinnPhongVertex.glsl\";\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    gl_Position = getPositionCS(pixel.positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n\n#ifdef FOG\n    FogHandle(gl_Position.z);\n#endif\n}\n","#define SHADER_NAME BlinnPhongFS\n\n#include \"Color.glsl\";\n\n#include \"Scene.glsl\";\n#include \"SceneFog.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DFrag.glsl\";\n\n#include \"BlinnPhongFrag.glsl\";\n\nvoid getBinnPhongSurfaceParams(inout Surface surface, in PixelParams pixel)\n{\n#ifdef UV\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n#else // UV\n    vec2 uv = vec2(0.0);\n#endif // UV\n\n    surface.diffuseColor = u_DiffuseColor.rgb;\n    surface.alpha = u_DiffuseColor.a;\n\n#ifdef COLOR\n    #ifdef ENABLEVERTEXCOLOR\n    surface.diffuseColor *= pixel.vertexColor.xyz;\n    surface.alpha *= pixel.vertexColor.a;\n    #endif // ENABLEVERTEXCOLOR\n#endif // COLOR\n\n#ifdef DIFFUSEMAP\n    vec4 diffuseSampler = texture2D(u_DiffuseTexture, uv);\n    #ifdef Gamma_u_DiffuseTexture\n    diffuseSampler = gammaToLinear(diffuseSampler);\n    #endif // Gamma_u_DiffuseTexture\n    surface.diffuseColor *= u_DiffuseColor.rgb * diffuseSampler.rgb * u_AlbedoIntensity;\n    surface.alpha *= diffuseSampler.a;\n#endif // DIFFUSEMAP\n\n    surface.diffuseColor *= u_AlbedoIntensity;\n\n    surface.normalTS = vec3(0.0, 0.0, 1.0);\n#ifdef NORMALMAP\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    surface.normalTS = normalSampler;\n#endif // NORMALMAP\n\n#ifdef SPECULARMAP\n    vec4 specularSampler = texture2D(u_SpecularTexture, uv);\n    #ifdef Gamma_u_SpecularTexture\n    specularSampler = gammaToLinear(specularSampler);\n    #endif // Gamma_u_SpecularTexture\n    surface.gloss = specularSampler.rgb;\n#else // SPECULARMAP\n    #ifdef DIFFUSEMAP\n    surface.gloss = vec3(diffuseSampler.a);\n    #else // DIFFUSEMAP\n    surface.gloss = vec3(1.0, 1.0, 1.0);\n    #endif // DIFFUSEMAP\n#endif // SPECULARMAP\n    surface.specularColor = u_MaterialSpecular.rgb;\n    surface.shininess = u_Shininess;\n}\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    Surface surface;\n    getBinnPhongSurfaceParams(surface, pixel);\n\n#ifdef ALPHATEST\n    if (surface.alpha < u_AlphaTestValue)\n\t{\n\t    discard;\n\t}\n#endif // ALPHATEST\n\n    vec3 surfaceColor = vec3(0.0);\n\n    surfaceColor = BlinnPhongLighting(surface, pixel);\n\n#ifdef FOG\n    surfaceColor = sceneLitFog(surfaceColor);\n#endif // FOG\n\n    gl_FragColor = vec4(surfaceColor, surface.alpha);\n\n    gl_FragColor = outputTransform(gl_FragColor);\n}\n","#define SHADER_NAME BlinnPhongDephtNormalVS\n\n#include \"Math.glsl\";\n\n#include \"Camera.glsl\";\n\n#include \"Sprite3DVertex.glsl\";\n\n#include \"VertexCommon.glsl\";\n\n#include \"BlinnPhongVertex.glsl\";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    vec4 positionCS = getPositionCS(pixel.positionWS);\n    v_PositionCS = positionCS;\n    gl_Position = positionCS;\n    gl_Position = remapPositionZ(gl_Position);\n}","#define SHADER_NAME BlinnPhongDephtNormalFS\n\n#include \"Color.glsl\";\n\n#include \"Scene.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DFrag.glsl\";\n\n#include \"ShadingFrag.glsl\";\n\n#include \"DepthNormalFrag.glsl\";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    vec3 normalWS = pixel.normalWS;\n\n#ifdef NORMALMAP\n    #ifdef UV\n\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    vec3 normalTS = normalSampler;\n    normalWS = normalize(pixel.TBN * normalTS);\n\n    #endif // UV\n#endif // NORMALMAP\n\n    vec4 positionCS = v_PositionCS;\n\n    vec4 dephtNormal = encodeDepthNormal(positionCS, normalWS);\n\n    gl_FragColor = dephtNormal;\n}","import { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport BlinnPhongCommonGLSL from \"./BlinnPhongCommon.glsl\";\nimport BlinnPhongVertexGLSL from \"./BlinnPhongVertex.glsl\";\nimport BlinnPhongFragGLSL from \"./BlinnPhongFrag.glsl\";\nimport BlinnPhongVS from \"./BlinnPhong.vs\";\nimport BlinnPhongFS from \"./BlinnPhong.fs\";\nimport DepthVS from \"../depth/Depth.vs\";\nimport DepthFS from \"../depth/Depth.fs\";\nimport DepthNormalVS from \"./BlinnPhongDepthNormal.vs\";\nimport DepthNormalFS from \"./BlinnPhongDepthNormal.fs\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class BlinnPhongShaderInit {\n    static init() {\n        Shader3D.addInclude(\"BlinnPhongCommon.glsl\", BlinnPhongCommonGLSL);\n        Shader3D.addInclude(\"BlinnPhongVertex.glsl\", BlinnPhongVertexGLSL);\n        Shader3D.addInclude(\"BlinnPhongFrag.glsl\", BlinnPhongFragGLSL);\n        let uniformMap = {\n            \"u_AlphaTestValue\": ShaderDataType.Float,\n            \"u_TilingOffset\": ShaderDataType.Vector4,\n            \"u_DiffuseColor\": ShaderDataType.Color,\n            \"u_DiffuseTexture\": ShaderDataType.Texture2D,\n            \"u_AlbedoIntensity\": ShaderDataType.Float,\n            \"u_MaterialSpecular\": ShaderDataType.Color,\n            \"u_SpecularTexture\": ShaderDataType.Texture2D,\n            \"u_Shininess\": ShaderDataType.Float,\n            \"u_NormalTexture\": ShaderDataType.Texture2D,\n        };\n        let defaultValue = {\n            \"u_AlbedoIntensity\": 1.0,\n            \"u_DiffuseColor\": Color.WHITE,\n            \"u_MaterialSpecular\": Color.WHITE,\n            \"u_Shininess\": 0.078125,\n            \"u_AlphaTestValue\": 0.5,\n            \"u_TilingOffset\": new Vector4(1, 1, 0, 0),\n        };\n        let shader = Shader3D.add(\"BLINNPHONG\", true, true);\n        shader.shaderType = ShaderFeatureType.D3;\n        let subShader = new SubShader(SubShader.DefaultAttributeMap, uniformMap, defaultValue);\n        shader.addSubShader(subShader);\n        let shadingPass = subShader.addShaderPass(BlinnPhongVS, BlinnPhongFS);\n        let shadowPass = subShader.addShaderPass(DepthVS, DepthFS, \"ShadowCaster\");\n        let depthNormal = subShader.addShaderPass(DepthNormalVS, DepthNormalFS, \"DepthNormal\");\n    }\n}\n","#define SHADER_NAME PBRStandardVS\n\n#include \"Math.glsl\";\n\n#include \"Scene.glsl\";\n#include \"SceneFogInput.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DVertex.glsl\";\n\n#include \"VertexCommon.glsl\";\n\n#include \"PBRVertex.glsl\";\n\n#if defined(DETAILTEXTURE) || defined(DETAILNORMAL)\nvarying vec2 v_DetailUV;\n#endif\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n#if defined(DETAILTEXTURE) || defined(DETAILNORMAL)\n    #ifdef UV\n    v_DetailUV = transformUV(vertex.texCoord0, u_DetailTillingOffset);\n    #else // UV\n    v_DetailUV = vec2(0.0);\n    #endif\n#endif\n\n    gl_Position = getPositionCS(pixel.positionWS);\n\n    gl_Position = remapPositionZ(gl_Position);\n\n#ifdef FOG\n    FogHandle(gl_Position.z);\n#endif\n}","#define SHADER_NAME PBRStandardFS\n\n#include \"Color.glsl\";\n\n#include \"Scene.glsl\";\n#include \"SceneFog.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DFrag.glsl\";\n\n#include \"PBRMetallicFrag.glsl\";\n\n#if defined(DETAILTEXTURE) || defined(DETAILNORMAL)\nvarying vec2 v_DetailUV;\n    #define ColorSpaceDouble vec3(4.59479380, 4.59479380, 4.59479380);\nvec3 BlendNormals(vec3 n1, vec3 n2)\n{\n    return normalize(vec3(n1.xy + n2.xy, n1.z * n2.z));\n}\n#endif // DETAILTEXTURE || DETAILNORMAL\n\nvoid initSurfaceInputs(inout SurfaceInputs inputs, const in PixelParams pixel)\n{\n#ifdef UV\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n#else // UV\n    vec2 uv = vec2(0.0);\n#endif // UV\n\n    inputs.diffuseColor = u_AlbedoColor.rgb;\n    inputs.alpha = u_AlbedoColor.a;\n\n#ifdef COLOR\n    #ifdef ENABLEVERTEXCOLOR\n    inputs.diffuseColor *= pixel.vertexColor.xyz;\n    inputs.alpha *= pixel.vertexColor.a;\n    #endif // ENABLEVERTEXCOLOR\n#endif // COLOR\n\n    inputs.alphaTest = u_AlphaTestValue;\n\n#ifdef ALBEDOTEXTURE\n    vec4 albedoSampler = texture2D(u_AlbedoTexture, uv);\n    #ifdef Gamma_u_AlbedoTexture\n    albedoSampler = gammaToLinear(albedoSampler);\n    #endif // Gamma_u_AlbedoTexture\n    inputs.diffuseColor *= albedoSampler.rgb;\n    inputs.alpha *= albedoSampler.a;\n#endif // ALBEDOTEXTURE\n\n// Detail Albedo\n#ifdef DETAILTEXTURE\n    vec3 detailSampler = texture2D(u_DetailAlbedoTexture, v_DetailUV).rgb;\n    #ifdef Gamma_u_DetailAlbedoTexture\n    detailSampler = gammaToLinear(detailSampler);\n    #endif // Gamma_u_DetailAlbedoTexture\n    detailSampler *= ColorSpaceDouble;\n    inputs.diffuseColor *= detailSampler;\n#endif\n\n    inputs.normalTS = vec3(0.0, 0.0, 1.0);\n#ifdef NORMALTEXTURE\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    inputs.normalTS = normalScale(normalSampler, u_NormalScale);\n#endif\n\n#ifdef DETAILNORMAL\n    vec3 detailnormalSampler = texture2D(u_DetailNormalTexture, v_DetailUV).rgb;\n    detailnormalSampler = normalize(detailnormalSampler * 2.0 - 1.0);\n    detailnormalSampler.y *= -1.0;\n    detailnormalSampler = normalScale(detailnormalSampler, u_DetailNormalScale);\n    inputs.normalTS = BlendNormals(inputs.normalTS, detailnormalSampler);\n#endif\n\n    inputs.metallic = u_Metallic;\n    inputs.smoothness = u_Smoothness;\n\n#ifdef METALLICGLOSSTEXTURE\n\n    vec4 metallicSampler = texture2D(u_MetallicGlossTexture, uv);\n    #ifdef Gamma_u_MetallicGlossTexture\n    metallicSampler = gammaToLinear(metallicSampler);\n    #endif // Gamma_u_MetallicGlossTexture\n\n    inputs.metallic = metallicSampler.x;\n\n    #ifdef SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n\t#ifdef ALBEDOTEXTURE\n    inputs.smoothness = (albedoSampler.a * u_Smoothness);\n\t#endif // ALBEDOTEXTURE\n    #else // SMOOTHNESSSOURCE_METALLICTEXTURE_ALPHA\n    inputs.smoothness = (metallicSampler.a * u_Smoothness);\n    #endif // SMOOTHNESSSOURCE_ALBEDOTEXTURE_ALPHA\n\n#endif // METALLICGLOSSTEXTURE\n\n    inputs.occlusion = 1.0;\n#ifdef OCCLUSIONTEXTURE\n    vec4 occlusionSampler = texture2D(u_OcclusionTexture, uv);\n    #ifdef Gamma_u_OcclusionTexture\n    occlusionSampler = gammaToLinear(occlusionSampler);\n    #endif // Gamma_u_OcclusionTexture\n\n    float occlusion = occlusionSampler.g;\n    inputs.occlusion = (1.0 - u_OcclusionStrength) + occlusion * u_OcclusionStrength;\n#endif // OCCLUSIONTEXTURE\n\n    inputs.emissionColor = vec3(0.0);\n#ifdef EMISSION\n    inputs.emissionColor = u_EmissionColor.rgb * u_EmissionIntensity;\n    #ifdef EMISSIONTEXTURE\n    vec4 emissionSampler = texture2D(u_EmissionTexture, uv);\n\t#ifdef Gamma_u_EmissionTexture\n    emissionSampler = gammaToLinear(emissionSampler);\n\t#endif // Gamma_u_EmissionTexture\n    inputs.emissionColor *= emissionSampler.rgb;\n    #endif // EMISSIONTEXTURE\n#endif // EMISSION\n\n#ifdef CLEARCOAT\n    inputs.clearCoat = u_ClearCoatFactor;\n    inputs.clearCoatRoughness = u_ClearCoatRoughness;\n\n    #ifdef CLEARCOATMAP\n    // todo\n    // linear tex no need gamma\n    vec4 clearCoatSampler = texture2D(u_ClearCoatTexture, uv);\n    inputs.clearCoat *= clearCoatSampler.r;\n    #endif // CLEARCOATMAP\n\n    #ifdef CLEARCOAT_ROUGHNESSMAP\n    // todo\n    // linear tex no need gamma\n    vec4 clearcoatSampleRoughness = texture2D(u_ClearCoatRoughnessTexture, uv);\n    inputs.clearCoatRoughness *= clearcoatSampleRoughness.g;\n    #endif // CLEARCOAT_ROUGHNESSMAP\n\n    #ifdef CLEARCOAT_NORMAL\n    vec3 clearCoatNormalSampler = texture2D(u_ClearCoatNormalTexture, uv).rgb;\n    clearCoatNormalSampler = normalize(clearCoatNormalSampler * 2.0 - 1.0);\n    clearCoatNormalSampler.y *= -1.0;\n    inputs.clearCoatNormalTS = clearCoatNormalSampler;\n    #endif // CLEARCOAT_NORMAL\n#endif // CLEARCOAT\n\n#ifdef ANISOTROPIC\n    inputs.anisotropy = u_AnisotropyStrength;\n    vec2 direction = vec2(1.0, 0.0);\n\n    #ifdef ANISOTROPYMAP\n    vec3 anisotropySampler = texture2D(u_AnisotropyTexture, uv).rgb;\n\n    inputs.anisotropy *= anisotropySampler.b;\n    direction = anisotropySampler.xy * 2.0 - 1.0;\n    #endif // ANISOTROPYMAP\n\n    vec2 anisotropyRotation = vec2(cos(u_AnisotropyRotation), sin(u_AnisotropyRotation));\n    mat2 rotationMatrix = mat2(anisotropyRotation.x, anisotropyRotation.y, -anisotropyRotation.y, anisotropyRotation.x);\n    inputs.anisotropyDirection = rotationMatrix * direction;\n\n#endif // ANISOTROPIC\n}\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    SurfaceInputs inputs;\n    initSurfaceInputs(inputs, pixel);\n\n    vec4 surfaceColor = PBR_Metallic_Flow(inputs, pixel);\n\n#ifdef FOG\n    surfaceColor.rgb = sceneLitFog(surfaceColor.rgb);\n#endif // FOG\n\n    gl_FragColor = surfaceColor;\n\n    gl_FragColor = outputTransform(gl_FragColor);\n}","#define SHADER_NAME PBRStandardDepthNormalVS\n\n#include \"Math.glsl\";\n\n#include \"Camera.glsl\";\n\n#include \"Sprite3DVertex.glsl\";\n\n#include \"VertexCommon.glsl\";\n\n#include \"PBRVertex.glsl\";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    Vertex vertex;\n    getVertexParams(vertex);\n\n    PixelParams pixel;\n    initPixelParams(pixel, vertex);\n\n    sharePixelParams(pixel);\n\n    vec4 positionCS = getPositionCS(pixel.positionWS);\n    v_PositionCS = positionCS;\n    gl_Position = positionCS;\n    gl_Position = remapPositionZ(gl_Position);\n}","#define SHADER_NAME PBRStandardDepthNormalFS\n\n#include \"Color.glsl\";\n\n#include \"Scene.glsl\";\n\n#include \"Camera.glsl\";\n#include \"Sprite3DFrag.glsl\";\n\n#include \"ShadingFrag.glsl\";\n\n#include \"DepthNormalFrag.glsl\";\n\nvarying vec4 v_PositionCS;\n\nvoid main()\n{\n    PixelParams pixel;\n    getPixelParams(pixel);\n\n    vec3 normalWS = pixel.normalWS;\n\n#ifdef NORMALTEXTURE\n    #ifdef UV\n\n    vec2 uv = transformUV(pixel.uv0, u_TilingOffset);\n    vec3 normalSampler = texture2D(u_NormalTexture, uv).rgb;\n    normalSampler = normalize(normalSampler * 2.0 - 1.0);\n    normalSampler.y *= -1.0;\n    vec3 normalTS = normalScale(normalSampler, u_NormalScale);\n    normalWS = normalize(pixel.TBN * normalTS);\n\n    #endif // UV\n#endif // NORMALTEXTURE\n\n    vec4 positionCS = v_PositionCS;\n\n    vec4 dephtNormal = encodeDepthNormal(positionCS, normalWS);\n\n    gl_FragColor = dephtNormal;\n}","import { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport PBRStandardVS from \"./pbrStandard.vs\";\nimport PBRStandardFS from \"./pbrStandard.fs\";\nimport PBRDepthVS from \"../depth/Depth.vs\";\nimport PBRDepthFS from \"../depth/Depth.fs\";\nimport DepthNormalVS from \"./PBRStandardDepthNormal.vs\";\nimport DepthNormalFS from \"./PBRStandardDepthNormal.fs\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class PBRStandardShaderInit {\n    static init() {\n        let uniformMap = {\n            \"u_AlbedoColor\": ShaderDataType.Color,\n            \"u_TilingOffset\": ShaderDataType.Vector4,\n            \"u_NormalScale\": ShaderDataType.Float,\n            \"u_Metallic\": ShaderDataType.Float,\n            \"u_Smoothness\": ShaderDataType.Float,\n            \"u_OcclusionStrength\": ShaderDataType.Float,\n            \"u_AlphaTestValue\": ShaderDataType.Float,\n            \"u_EmissionColor\": ShaderDataType.Color,\n            \"u_EmissionIntensity\": ShaderDataType.Float,\n            \"u_AlbedoTexture\": ShaderDataType.Texture2D,\n            \"u_NormalTexture\": ShaderDataType.Texture2D,\n            \"u_OcclusionTexture\": ShaderDataType.Texture2D,\n            \"u_EmissionTexture\": ShaderDataType.Texture2D,\n            \"u_MetallicGlossTexture\": ShaderDataType.Texture2D,\n            \"u_AnisotropyStrength\": ShaderDataType.Float,\n            \"u_AnisotropyTexture\": ShaderDataType.Texture2D,\n            \"u_AnisotropyRotation\": ShaderDataType.Float,\n            \"u_ClearCoatFactor\": ShaderDataType.Float,\n            \"u_ClearCoatTexture\": ShaderDataType.Texture2D,\n            \"u_ClearCoatRoughness\": ShaderDataType.Float,\n            \"u_ClearCoatRoughnessTexture\": ShaderDataType.Texture2D,\n            \"u_ClearCoatNormalTexture\": ShaderDataType.Texture2D,\n            \"u_DetailAlbedoTexture\": ShaderDataType.Texture2D,\n            \"u_DetailNormalTexture\": ShaderDataType.Texture2D,\n            \"u_DetailNormalScale\": ShaderDataType.Float,\n            \"u_DetailTillingOffset\": ShaderDataType.Vector4\n        };\n        let defaultValue = {\n            \"u_AlbedoColor\": Color.WHITE,\n            \"u_TilingOffset\": new Vector4(1, 1, 0, 0),\n            \"u_DetailTillingOffset\": new Vector4(1, 1, 0, 0),\n            \"u_NormalScale\": 1,\n            \"u_DetailNormalScale\": 1,\n            \"u_Metallic\": 0,\n            \"u_Smoothness\": 0.5,\n            \"u_OcclusionStrength\": 1,\n            \"u_EmissionColor\": Color.WHITE,\n            \"u_EmissionIntensity\": 1,\n            \"u_AlphaTestValue\": 0.5,\n            \"u_AnisotropyStrength\": 0,\n            \"u_AnisotropyRotation\": 0,\n            \"u_ClearCoatFactor\": 0,\n            \"u_ClearCoatRoughness\": 0,\n        };\n        let shader = Shader3D.add(\"PBR\", true, true);\n        shader.shaderType = ShaderFeatureType.D3;\n        shader._surportVolumetricGI = true;\n        let subShader = new SubShader(SubShader.DefaultAttributeMap, uniformMap, defaultValue);\n        shader.addSubShader(subShader);\n        let shadingPass = subShader.addShaderPass(PBRStandardVS, PBRStandardFS);\n        let shadowPass = subShader.addShaderPass(PBRDepthVS, PBRDepthFS, \"ShadowCaster\");\n        let depthNormal = subShader.addShaderPass(DepthNormalVS, DepthNormalFS, \"DepthNormal\");\n    }\n}\n","#define SHADER_NAME SkyBoxVS\n\n#include \"SkyCommon.glsl\";\n\nvarying vec3 v_Texcoord;\n\nvoid main()\n{\n    // todo 这个转换 ？\n    v_Texcoord = vec3(-a_Position.x, a_Position.yz); //转换坐标系\n\n    vec4 position = rotateAroundYInDegrees(a_Position, u_Rotation);\n    // gl_Position = getPositionCS(position.xyz);\n\n    gl_Position = u_SkyProjectionViewMat * position;\n\n    gl_Position = remapSkyPositionZ(gl_Position);\n}","#define SHADER_NAME SkyBoxFS\n\n#include \"Color.glsl\";\n\nvarying vec3 v_Texcoord;\n\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvoid main()\n{\n    vec3 uv = v_Texcoord;\n    vec4 cubeSampler = textureCube(u_CubeTexture, uv);\n#ifdef Gamma_u_CubeTexture\n    cubeSampler = gammaToLinear(cubeSampler);\n#endif // Gamma_u_CubeTexture\n\n    vec3 color = cubeSampler.rgb * u_TintColor.rgb * pow(u_Exposure, 2.2) * c_ColorSpace.rgb;\n\n    gl_FragColor = vec4(color, 1.0);\n\n    gl_FragColor = outputTransform(gl_FragColor);\n}","import { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport SkyboxVS from \"./SkyBox.vs\";\nimport SkyboxFS from \"./SkyBox.fs\";\nimport { Color } from \"../../../maths/Color\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { CullMode } from \"../../../RenderEngine/RenderEnum/CullMode\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nexport class SkyBoxShaderInit {\n    static init() {\n        let attributeMap = {\n            \"a_Position\": [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4]\n        };\n        let uniformMap = {\n            \"u_TintColor\": ShaderDataType.Color,\n            \"u_Exposure\": ShaderDataType.Float,\n            \"u_Rotation\": ShaderDataType.Float,\n            \"u_CubeTexture\": ShaderDataType.TextureCube\n        };\n        let defaultValue = {\n            \"u_TintColor\": new Color(0.5, 0.5, 0.5, 0.5),\n            \"u_Exposure\": 1,\n            \"u_Rotation\": 0\n        };\n        let shader = Shader3D.add(\"SkyBox\");\n        shader.shaderType = ShaderFeatureType.Sky;\n        let subShader = new SubShader(attributeMap, uniformMap, defaultValue);\n        shader.addSubShader(subShader);\n        let pass = subShader.addShaderPass(SkyboxVS, SkyboxFS);\n        pass.renderState.depthTest = RenderState.DEPTHTEST_LEQUAL;\n        pass.renderState.cull = CullMode.Back;\n        pass.renderState.depthWrite = false;\n        pass.renderState.stencilWrite = false;\n        pass.statefirst = true;\n    }\n}\n","#define SHADER_NAME SkyProceduralVS\n\n#include \"SkyCommon.glsl\";\n\n\n#define OUTER_RADIUS 1.025\n#define RAYLEIGH (mix(0.0, 0.0025, pow(u_AtmosphereThickness,2.5)))// Rayleigh constant Rayleigh为夜空光和极光亮度单位\n#define MIE 0.0010             // Mie constant 米氏散射\n#define SUN_BRIGHTNESS 20.0    // Sun brightness\n#define MAX_SCATTER 50.0 // Maximum scattering value, to prevent math overflows on Adrenos\n\nconst float SKY_GROUND_THRESHOLD = 0.02;\nconst float outerRadius = OUTER_RADIUS;\nconst float outerRadius2 = OUTER_RADIUS*OUTER_RADIUS;\nconst float innerRadius = 1.0;\nconst float innerRadius2 = 1.0;\nconst float cameraHeight = 0.0001;\n\nconst float HDSundiskIntensityFactor = 15.0;\nconst float simpleSundiskIntensityFactor = 27.0;\n\nconst float sunScale = 400.0 * SUN_BRIGHTNESS;\nconst float kmESun = MIE * SUN_BRIGHTNESS;\nconst float km4PI = MIE * 4.0 * 3.14159265;\nconst float scale = 1.0 / (OUTER_RADIUS - 1.0);\nconst float scaleDepth = 0.25;\nconst float scaleOverScaleDepth = (1.0 / (OUTER_RADIUS - 1.0)) / 0.25;\nconst float samples = 2.0; // THIS IS UNROLLED MANUALLY, DON'T TOUCH\n\n// RGB wavelengths        .35 (.62=158), .43 (.68=174), .525 (.75=190)\nconst vec3 c_DefaultScatteringWavelength = vec3(0.65, 0.57, 0.475);//默认散射波长\nconst vec3 c_VariableRangeForScatteringWavelength = vec3(0.15, 0.15, 0.15);//散射播放的可变范围\n\nvarying vec3 v_GroundColor;\nvarying vec3 v_SkyColor;\n\n#ifdef SUN_HIGH_QUALITY\n\tvarying vec3 v_Vertex;\n#elif defined(SUN_SIMPLE)\n\tvarying vec3 v_RayDir;\n#else\n\tvarying float v_SkyGroundFactor;\n#endif\n\n#if defined(SUN_HIGH_QUALITY)||defined(SUN_SIMPLE)\n\tvarying vec3 v_SunColor;\n#endif\n\n// Calculates the Rayleigh phase function\nfloat getRayleighPhase(vec3 light, vec3 ray) \n{\n\tfloat eyeCos = dot(light, ray);\n\treturn 0.75 + 0.75*eyeCos*eyeCos;\n}\n\nfloat scaleAngle(float inCos)\n{\n\tfloat x = 1.0 - inCos;\n\treturn 0.25 * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n}\n\n\nvoid main(){\n    gl_Position = u_SkyProjectionViewMat*a_Position;\n\n    vec3 skyTintInGammaSpace = pow(u_SkyTint.xyz,vec3(0.45));//u_SkyTint.xyz;//支持非GAMMA空间后要调整\n\tvec3 scatteringWavelength = mix(c_DefaultScatteringWavelength-c_VariableRangeForScatteringWavelength,c_DefaultScatteringWavelength+c_VariableRangeForScatteringWavelength,vec3(1.0) - skyTintInGammaSpace); // using Tint in sRGB+ gamma allows for more visually linear interpolation and to keep (0.5) at (128, gray in sRGB) point\n\tvec3 invWavelength = 1.0 / pow(scatteringWavelength, vec3(4.0));\n\n\tfloat krESun = RAYLEIGH * SUN_BRIGHTNESS;\n\tfloat kr4PI = RAYLEIGH * 4.0 * 3.14159265;\n\n\tvec3 cameraPos = vec3(0.0,innerRadius + cameraHeight,0.0); // The camera's current position\n\n\t// Get the ray from the camera to the vertex and its length (which is the far point of the ray passing through the atmosphere)\n\tvec3 eyeRay = normalize(a_Position.xyz);\n\n\tfloat far = 0.0;\n\tvec3 cIn, cOut;\n\tif (eyeRay.y >= 0.0) {// Sky\n\t\t// Calculate the length of the \"atmosphere\"\n\t\tfar = sqrt(outerRadius2 + innerRadius2 * eyeRay.y * eyeRay.y - innerRadius2) - innerRadius * eyeRay.y;\n\n\t\t// Calculate the ray's starting position, then calculate its scattering offset\n\t\tfloat height = innerRadius + cameraHeight;\n\t\tfloat depth = exp(scaleOverScaleDepth * -cameraHeight);\n\t\tfloat startAngle = dot(eyeRay, cameraPos) / height;\n\t\tfloat startOffset = depth*scaleAngle(startAngle);\n\n\t\t// Initialize the scattering loop variables\n\t\tfloat sampleLength = far / samples;\n\t\tfloat scaledLength = sampleLength * scale;\n\t\tvec3 sampleRay = eyeRay * sampleLength;\n\t\tvec3 samplePoint = cameraPos + sampleRay * 0.5;\n\n\t\tvec3 frontColor = vec3(0.0);\n\t\t//unrolling this manually to avoid some platform for loop slow\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat lightAngle = dot(-u_SunLight_direction, samplePoint) / height;\n\t\t\tfloat cameraAngle = dot(eyeRay, samplePoint) / height;\n\t\t\tfloat scatter = (startOffset + depth*(scaleAngle(lightAngle) - scaleAngle(cameraAngle)));\n\t\t\tvec3 attenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat lightAngle = dot(-u_SunLight_direction, samplePoint) / height;\n\t\t\tfloat cameraAngle = dot(eyeRay, samplePoint) / height;\n\t\t\tfloat scatter = (startOffset + depth*(scaleAngle(lightAngle) - scaleAngle(cameraAngle)));\n\t\t\tvec3 attenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\n\t\t// Finally, scale the Mie and Rayleigh colors and set up the varying variables for the pixel shader\n\t\tcIn = frontColor * (invWavelength * krESun);\n\t\tcOut = frontColor * kmESun;\n\t} else {// Ground\n\t\tfar = (-cameraHeight) / (min(-0.001, eyeRay.y));\n\t\tvec3 pos = cameraPos + far * eyeRay;\n\n\t\t// Calculate the ray's starting position, then calculate its scattering offset\n\t\tfloat depth = exp((-cameraHeight) * (1.0/scaleDepth));\n\t\tfloat cameraAngle = dot(-eyeRay, pos);\n\t\tfloat lightAngle = dot(-u_SunLight_direction, pos);\n\t\tfloat cameraScale = scaleAngle(cameraAngle);\n\t\tfloat lightScale = scaleAngle(lightAngle);\n\t\tfloat cameraOffset = depth*cameraScale;\n\t\tfloat temp = lightScale + cameraScale;\n\n\t\t// Initialize the scattering loop variables\n\t\tfloat sampleLength = far / samples;\n\t\tfloat scaledLength = sampleLength * scale;\n\t\tvec3 sampleRay = eyeRay * sampleLength;\n\t\tvec3 samplePoint = cameraPos + sampleRay * 0.5;\n\n\t\t// Now loop through the sample rays\n\t\tvec3 frontColor = vec3(0.0, 0.0, 0.0);\n\t\tvec3 attenuate;\n\n\t\t// Loop removed because we kept hitting SM2.0 temp variable limits. Doesn't affect the image too much.\n\t\t{\n\t\t\tfloat height = length(samplePoint);\n\t\t\tfloat depth = exp(scaleOverScaleDepth * (innerRadius - height));\n\t\t\tfloat scatter = depth*temp - cameraOffset;\n\t\t\tattenuate = exp(-clamp(scatter, 0.0, MAX_SCATTER) * (invWavelength * kr4PI + km4PI));\n\t\t\tfrontColor += attenuate * (depth * scaledLength);\n\t\t\tsamplePoint += sampleRay;\n\t\t}\n\n\t\tcIn = frontColor * (invWavelength * krESun + kmESun);\n\t\tcOut = clamp(attenuate, 0.0, 1.0);\n\t}\n\n\t#ifdef SUN_HIGH_QUALITY\n\t\tv_Vertex = -a_Position.xyz;\n\t#elif defined(SUN_SIMPLE) \n\t\tv_RayDir = -eyeRay;\n\t#else\n\t\tv_SkyGroundFactor = -eyeRay.y / SKY_GROUND_THRESHOLD;\n\t#endif\n\n\t// if we want to calculate color in vprog:\n\t// in case of linear: multiply by _Exposure in here (even in case of lerp it will be common multiplier, so we can skip mul in fshader)\n\tv_GroundColor = u_Exposure * (cIn + u_GroundTint.xyz * cOut);//u_GroundColor*u_GroundColor is gamma space convert to linear space\n\tv_SkyColor    = u_Exposure * (cIn * getRayleighPhase(-u_SunLight_direction, -eyeRay));\n\n\t\n\t// The sun should have a stable intensity in its course in the sky. Moreover it should match the highlight of a purely specular material.\n\t// This matching was done using the Unity3D standard shader BRDF1 on the 5/31/2017\n\t// Finally we want the sun to be always bright even in LDR thus the normalization of the lightColor for low intensity.\n\tfloat lightColorIntensity = clamp(length(u_SunLight_color.xyz), 0.25, 1.0);\n\n\t#ifdef SUN_HIGH_QUALITY \n\t\tv_SunColor = HDSundiskIntensityFactor * clamp(cOut,0.0,1.0) * u_SunLight_color.xyz / lightColorIntensity;\n\t#elif defined(SUN_SIMPLE) \n\t\tv_SunColor = simpleSundiskIntensityFactor * clamp(cOut * sunScale,0.0,1.0) * u_SunLight_color.xyz / lightColorIntensity;\n\t#endif\n\tgl_Position= remapSkyPositionZ(gl_Position);\n}","#define SHADER_NAME SkyProceduralFS\n\n#include \"Color.glsl\";\n\nconst float MIE_G = -0.990;\nconst float MIE_G2 = 0.9801;\nconst float SKY_GROUND_THRESHOLD = 0.02;\n\n// uniform float u_SunSize;\n// uniform float u_SunSizeConvergence;\n\nuniform vec3 u_SunLight_direction;\n\nvarying vec3 v_GroundColor;\nvarying vec3 v_SkyColor;\n\n#ifdef SUN_HIGH_QUALITY\nvarying vec3 v_Vertex;\n#elif defined(SUN_SIMPLE)\nvarying vec3 v_RayDir;\n#else\nvarying float v_SkyGroundFactor;\n#endif\n\n#if defined(SUN_HIGH_QUALITY) || defined(SUN_SIMPLE)\nvarying vec3 v_SunColor;\n#endif\n\n// Calculates the Mie phase function\nfloat getMiePhase(float eyeCos, float eyeCos2)\n{\n    float temp = 1.0 + MIE_G2 - 2.0 * MIE_G * eyeCos;\n    temp = pow(temp, pow(u_SunSize, 0.65) * 10.0);\n    temp = max(temp, 1.0e-4); // prevent division by zero, esp. in half precision\n    temp = 1.5 * ((1.0 - MIE_G2) / (2.0 + MIE_G2)) * (1.0 + eyeCos2) / temp;\n    return temp;\n}\n\n// Calculates the sun shape\nfloat calcSunAttenuation(vec3 lightPos, vec3 ray)\n{\n#ifdef SUN_HIGH_QUALITY\n    float focusedEyeCos = pow(clamp(dot(lightPos, ray), 0.0, 1.0), u_SunSizeConvergence);\n    return getMiePhase(-focusedEyeCos, focusedEyeCos * focusedEyeCos);\n#else // SUN_SIMPLE\n    vec3 delta = lightPos - ray;\n    float dist = length(delta);\n    float spot = 1.0 - smoothstep(0.0, u_SunSize, dist);\n    return spot * spot;\n#endif\n}\n\nvoid main()\n{\n    // if y > 1 [eyeRay.y < -SKY_GROUND_THRESHOLD] - ground\n    // if y >= 0 and < 1 [eyeRay.y <= 0 and > -SKY_GROUND_THRESHOLD] - horizon\n    // if y < 0 [eyeRay.y > 0] - sky\n    vec3 col = vec3(0.0, 0.0, 0.0);\n\n#ifdef SUN_HIGH_QUALITY\n    vec3 ray = normalize(v_Vertex);\n    float y = ray.y / SKY_GROUND_THRESHOLD;\n#elif defined(SUN_SIMPLE)\n    vec3 ray = v_RayDir;\n    float y = ray.y / SKY_GROUND_THRESHOLD;\n#else\n    float y = v_SkyGroundFactor;\n#endif\n\n    // if we did precalculate color in vprog: just do lerp between them\n    col = mix(v_SkyColor, v_GroundColor, clamp(y, 0.0, 1.0));\n\n#if defined(SUN_HIGH_QUALITY) || defined(SUN_SIMPLE)\n    if (y < 0.0)\n\tcol += v_SunColor * calcSunAttenuation(-u_SunLight_direction, -ray);\n#endif\n\n    // col = sqrt(col);//linear space convert to gamma space\n    gl_FragColor = vec4(col, 1.0);\n\n    gl_FragColor = outputTransform(gl_FragColor);\n}\n","import { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport SkyProceduralVS from \"./SkyProceduralShader.vs\";\nimport SkyProceduralFS from \"./SkyProceduralShader.fs\";\nimport { Color } from \"../../../maths/Color\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { CullMode } from \"../../../RenderEngine/RenderEnum/CullMode\";\nimport { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class SkyProceduralShaderInit {\n    static init() {\n        let attributeMap = {\n            \"a_Position\": [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4]\n        };\n        let uniformMap = {\n            \"u_SunSize\": ShaderDataType.Float,\n            \"u_SunSizeConvergence\": ShaderDataType.Float,\n            \"u_AtmosphereThickness\": ShaderDataType.Float,\n            \"u_SkyTint\": ShaderDataType.Color,\n            \"u_GroundTint\": ShaderDataType.Color,\n            \"u_Exposure\": ShaderDataType.Float,\n        };\n        let defaultValue = {\n            \"u_SunSize\": 0.04,\n            \"u_SunSizeConvergence\": 5,\n            \"u_AtmosphereThickness\": 1.0,\n            \"u_SkyTint\": new Color(0.5, 0.5, 0.5, 1.0),\n            \"u_GroundTint\": new Color(0.369, 0.349, 0.341, 1.0),\n            \"u_Exposure\": 1.3,\n        };\n        let shader = Shader3D.add(\"SkyProcedural\");\n        shader.shaderType = ShaderFeatureType.Sky;\n        let subShader = new SubShader(attributeMap, uniformMap, defaultValue);\n        shader.addSubShader(subShader);\n        let pass = subShader.addShaderPass(SkyProceduralVS, SkyProceduralFS);\n        pass.renderState.depthTest = RenderState.DEPTHTEST_LEQUAL;\n        pass.renderState.cull = CullMode.Back;\n        pass.renderState.depthWrite = false;\n        pass.renderState.stencilWrite = false;\n        pass.statefirst = true;\n    }\n}\n","#define SHADER_NAME SkyPanoramicVS\n\n#include \"SkyCommon.glsl\";\n\n\nvarying vec3 v_Texcoord;\nvarying vec2 v_Image180ScaleAndCutoff;\nvarying vec4 v_Layout3DScaleAndOffset;\n\nvoid main()\n{\n\tvec4 position = rotateAroundYInDegrees(a_Position, u_Rotation);\n\t\n\n\tv_Texcoord=vec3(-a_Position.x,-a_Position.y,a_Position.z);// NOTE: -a_Position.x convert coords system\n\n\t// Calculate constant horizontal scale and cutoff for 180 (vs 360) image type\n\tv_Image180ScaleAndCutoff = vec2(1.0, 1.0);// 360 degree mode\n\n\t// Calculate constant scale and offset for 3D layouts\n\tv_Layout3DScaleAndOffset = vec4(0,0,1,1);\n\tgl_Position = u_SkyProjectionViewMat*position;\n\tgl_Position=remapSkyPositionZ(gl_Position);\n\n}\n","#define SHADER_NAME SkyPanoramicVS\n\n#include \"Color.glsl\";\n\nvarying vec3 v_Texcoord;\nvarying vec2 v_Image180ScaleAndCutoff;\nvarying vec4 v_Layout3DScaleAndOffset;\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvec2 ToRadialCoords(vec3 coords)\n{\n    vec3 normalizedCoords = normalize(coords);\n    float latitude = acos(normalizedCoords.y);\n    float longitude = atan(normalizedCoords.z, normalizedCoords.x);\n    vec2 sphereCoords = vec2(longitude, latitude) * vec2(0.5 / PI, 1.0 / PI);\n    return vec2(0.5, 1.0) - sphereCoords;\n}\n\nvoid main()\n{\n    vec2 tc = ToRadialCoords(v_Texcoord);\n    if (tc.x > v_Image180ScaleAndCutoff.y)\n\tgl_FragColor = vec4(0, 0, 0, 1);\n    tc.x = mod(tc.x * v_Image180ScaleAndCutoff.x, 1.0);\n    tc = (tc + v_Layout3DScaleAndOffset.xy) * v_Layout3DScaleAndOffset.zw;\n\n    mediump vec4 tex = texture2D(u_Texture, tc);\n#ifdef Gamma_u_Texture\n    tex = gammaToLinear(tex);\n#endif // Gamma_u_Texture\n    mediump vec3 c = tex.xyz;\n    c = c * u_TintColor.rgb * c_ColorSpace.rgb;\n    c *= pow(u_Exposure, 2.2);\n    gl_FragColor = vec4(c, 1.0);\n\n    gl_FragColor = outputTransform(gl_FragColor);\n}\n","import { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport SkyPanoramicVS from \"./SkyPanoramic.vs\";\nimport SkyPanoramicFS from \"./SkyPanoramic.fs\";\nimport { Texture2D } from \"../../../resource/Texture2D\";\nimport { Color } from \"../../../maths/Color\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { CullMode } from \"../../../RenderEngine/RenderEnum/CullMode\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nexport class SkyPanoramicShaderInit {\n    static init() {\n        let attributeMap = {\n            \"a_Position\": [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4]\n        };\n        let uniformMap = {\n            'u_TintColor': ShaderDataType.Color,\n            'u_Rotation': ShaderDataType.Float,\n            'u_Texture': ShaderDataType.Texture2D,\n            'u_Exposure': ShaderDataType.Float,\n        };\n        let defaultValue = {\n            'u_TintColor': new Color(0.5, 0.5, 0.5, 1.0),\n            'u_Exposure': 1.3,\n            'u_Rotation': 0,\n            'u_Texture': Texture2D.grayTexture,\n        };\n        let shader = Shader3D.add(\"SkyPanoramic\");\n        shader.shaderType = ShaderFeatureType.Sky;\n        let subShader = new SubShader(attributeMap, uniformMap, defaultValue);\n        shader.addSubShader(subShader);\n        let pass = subShader.addShaderPass(SkyPanoramicVS, SkyPanoramicFS);\n        pass.renderState.depthTest = RenderState.DEPTHTEST_LEQUAL;\n        pass.renderState.cull = CullMode.Back;\n        pass.renderState.depthWrite = false;\n        pass.renderState.stencilWrite = false;\n        pass.statefirst = true;\n    }\n}\n","import { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport UtilsGLSL from \"./utils/Utils.glsl\";\nimport OutputTransformGLSL from \"./common/OutputTransform.glsl\";\nimport BakedBoneMatrixSamplerGLSL from \"./utils/BakedBoneMatrixSampler.glsl\";\nimport MorphTargetGLSL from \"./common/MorphTarget.glsl\";\nimport VertexGLSL from \"./common/VertexCommon.glsl\";\nimport ShadingCommonGLSL from \"./common/ShadingCommon.glsl\";\nimport ShadingVertexGLSL from \"./common/ShadingVertex.glsl\";\nimport ShadingFragGLSL from \"./common/ShadingFrag.glsl\";\nimport SceneGLSL from \"./common/SceneCommon.glsl\";\nimport CameraGLSL from \"./common/CameraCommon.glsl\";\nimport SkyCommon from \"./common/SkyCommon.glsl\";\nimport Sprite3DCommonGLSL from \"./common/Sprite3DCommon.glsl\";\nimport Sprite3DVertexGLSL from \"./common/Sprite3DVertex.glsl\";\nimport Sprite3DFragGLSL from \"./common/Sprite3DFrag.glsl\";\nimport DepthVertexGLSL from \"./depth/DepthVertex.glsl\";\nimport DepthFragGLSL from \"./depth/DepthFrag.glsl\";\nimport DepthNormalUtilGLSL from \"./depth/DepthNormalUtil.glsl\";\nimport DepthNormalFragGLSL from \"./depth/DepthNormalFrag.glsl\";\nimport ShadowCommonGLSL from \"./lighting/ShadowCommon.glsl\";\nimport ShadowSampleTentGLSL from \"./lighting/ShadowSampleTent.glsl\";\nimport ShadowSamplerGLSL from \"./lighting/ShadowSampler.glsl\";\nimport SceneFogGLSL from \"./utils/SceneFog.glsl\";\nimport SceneFogInputGLSL from \"./utils/SceneFogInput.glsl\";\nimport LightingGLSL from \"./lighting/Lighting.glsl\";\nimport GlobalIlluminationGLSL from \"./lighting/globalIllumination.glsl\";\nimport OctGLSL from \"./lighting/volumetricGI/Oct.glsl\";\nimport GridHelpersGLSL from \"./lighting/volumetricGI/GridHelpers.glsl\";\nimport VolumetricGIGLSL from \"./lighting/volumetricGI/VolumetricGI.glsl\";\nimport BlinnPhongLightingGLSL from \"./lightingmode/BlinnPhongLighting.glsl\";\nimport PBRLightingGLSL from \"./lightingmode/PBRLighting.glsl\";\nimport { BlitScreenShaderInit } from \"./postprocess/BlitScreenShaderInit\";\nimport { UnlitShaderInit } from \"./unlit/UnlitShaderInit\";\nimport { BlinnPhongShaderInit } from \"./blinnphong/BlinnPhongShaderInit\";\nimport { PBRShaderLib } from \"./pbr/PBRShaderLib\";\nimport { PBRStandardShaderInit } from \"./pbr/PBRStandardShaderInit\";\nimport { SkyBoxShaderInit } from \"./sky/SkyBoxShaderInit\";\nimport { SkyProceduralShaderInit } from \"./sky/SkyProceduralShaderInit\";\nimport { SkyPanoramicShaderInit } from \"./sky/SkyPanoramicShaderInit\";\nexport class ShaderInit3D {\n    static __init__() {\n        Shader3D.addInclude(\"Utils.glsl\", UtilsGLSL);\n        Shader3D.addInclude(\"BakedBoneMatrixSampler.glsl\", BakedBoneMatrixSamplerGLSL);\n        Shader3D.addInclude(\"MorphTarget.glsl\", MorphTargetGLSL);\n        Shader3D.addInclude(\"VertexCommon.glsl\", VertexGLSL);\n        Shader3D.addInclude(\"ShadingCommon.glsl\", ShadingCommonGLSL);\n        Shader3D.addInclude(\"ShadingVertex.glsl\", ShadingVertexGLSL);\n        Shader3D.addInclude(\"ShadingFrag.glsl\", ShadingFragGLSL);\n        Shader3D.addInclude(\"OutputTransform.glsl\", OutputTransformGLSL);\n        Shader3D.addInclude(\"Scene.glsl\", SceneGLSL);\n        Shader3D.addInclude(\"Camera.glsl\", CameraGLSL);\n        Shader3D.addInclude(\"SkyCommon.glsl\", SkyCommon);\n        Shader3D.addInclude(\"Sprite3DCommon.glsl\", Sprite3DCommonGLSL);\n        Shader3D.addInclude(\"Sprite3DVertex.glsl\", Sprite3DVertexGLSL);\n        Shader3D.addInclude(\"Sprite3DFrag.glsl\", Sprite3DFragGLSL);\n        Shader3D.addInclude(\"DepthVertex.glsl\", DepthVertexGLSL);\n        Shader3D.addInclude(\"DepthFrag.glsl\", DepthFragGLSL);\n        Shader3D.addInclude(\"DepthNormalUtil.glsl\", DepthNormalUtilGLSL);\n        Shader3D.addInclude(\"DepthNormalFrag.glsl\", DepthNormalFragGLSL);\n        Shader3D.addInclude(\"SceneFog.glsl\", SceneFogGLSL);\n        Shader3D.addInclude(\"SceneFogInput.glsl\", SceneFogInputGLSL);\n        Shader3D.addInclude(\"ShadowCommon.glsl\", ShadowCommonGLSL);\n        Shader3D.addInclude(\"ShadowSampleTent.glsl\", ShadowSampleTentGLSL);\n        Shader3D.addInclude(\"ShadowSampler.glsl\", ShadowSamplerGLSL);\n        Shader3D.addInclude(\"Lighting.glsl\", LightingGLSL);\n        Shader3D.addInclude(\"globalIllumination.glsl\", GlobalIlluminationGLSL);\n        Shader3D.addInclude(\"Oct.glsl\", OctGLSL);\n        Shader3D.addInclude(\"GridHelpers.glsl\", GridHelpersGLSL);\n        Shader3D.addInclude(\"VolumetricGI.glsl\", VolumetricGIGLSL);\n        Shader3D.addInclude(\"BlinnPhongLighting.glsl\", BlinnPhongLightingGLSL);\n        Shader3D.addInclude(\"PBRLighting.glsl\", PBRLightingGLSL);\n        PBRShaderLib.init();\n        BlitScreenShaderInit.init();\n        UnlitShaderInit.init();\n        PBRStandardShaderInit.init();\n        BlinnPhongShaderInit.init();\n        SkyBoxShaderInit.init();\n        SkyProceduralShaderInit.init();\n        SkyPanoramicShaderInit.init();\n        Shader3D.SHADERDEFINE_LEGACYSINGALLIGHTING = Shader3D.getDefineByName(\"LEGACYSINGLELIGHTING\");\n        Shader3D.SHADERDEFINE_ENUNIFORMBLOCK = Shader3D.getDefineByName(\"ENUNIFORMBLOCK\");\n        Shader3D.SHADERDEFINE_FLOATTEXTURE = Shader3D.getDefineByName(\"FLOATTEXTURE\");\n        Shader3D.SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR = Shader3D.getDefineByName(\"FLOATTEXTURE_FIL_LINEAR\");\n        Shader3D.SHADERDEFINE_BLITSCREEN_INVERTY = Shader3D.getDefineByName(\"BLITSCREEN_INVERTY\");\n        Shader3D.SHADERDEFINE_REMAP_POSITIONZ = Shader3D.getDefineByName(\"REMAP_Z\");\n        Shader3D.SHADERDEFINE_LOD_TEXTURE_SAMPLE = Shader3D.getDefineByName(\"LOD_TEXTURE_SAMPLE\");\n    }\n}\n","export class SkinnedMeshSprite3DShaderDeclaration {\n}\n","import { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { RenderElement } from \"./RenderElement\";\nexport class SkinRenderElement extends RenderElement {\n    setSkinData(value) {\n        this._renderElementOBJ.skinnedData = value;\n    }\n    constructor() {\n        super();\n    }\n    _createRenderElementOBJ() {\n        this._renderElementOBJ = Laya3DRender.Render3DPassFactory.createSkinRenderElement();\n    }\n    _render(context) {\n    }\n}\n","import { Event } from \"../../events/Event\";\nimport { Stat } from \"../../utils/Stat\";\nimport { Utils3D } from \"../utils/Utils3D\";\nimport { MeshRenderer } from \"./MeshRenderer\";\nimport { Sprite3D } from \"./Sprite3D\";\nimport { SkinnedMeshSprite3DShaderDeclaration } from \"./SkinnedMeshSprite3DShaderDeclaration\";\nimport { SkinRenderElement } from \"./render/SkinRenderElement\";\nimport { BlinnPhongMaterial } from \"./material/BlinnPhongMaterial\";\nimport { Bounds } from \"../math/Bounds\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { Transform3D } from \"./Transform3D\";\nimport { BaseRenderType } from \"../../RenderDriver/RenderModuleData/Design/3D/I3DRenderModuleData\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nexport class SkinnedMeshRenderer extends MeshRenderer {\n    static __init__() {\n        SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_BONE = Shader3D.getDefineByName(\"BONE\");\n        SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_SIMPLEBONE = Shader3D.getDefineByName(\"SIMPLEBONE\");\n        const commandUniform = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"SkinSprite3D\");\n        SkinnedMeshRenderer.BONES = Shader3D.propertyNameToID(\"u_Bones\");\n        commandUniform.addShaderUniform(SkinnedMeshRenderer.BONES, \"u_Bones\", ShaderDataType.Buffer);\n    }\n    get _bones() {\n        return this.__bones;\n    }\n    set _bones(value) {\n        this.__bones = value;\n        this._isISkinRenderNode() && this._ownerSkinRenderNode.setBones(value);\n    }\n    get localBounds() {\n        return this._localBounds;\n    }\n    set localBounds(value) {\n        this._localBounds = value;\n        this.geometryBounds = this._localBounds;\n    }\n    get rootBone() {\n        return this._cacheRootBone;\n    }\n    set rootBone(value) {\n        if (this._cacheRootBone != value) {\n            if (this._cacheRootBone)\n                this._cacheRootBone.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n            else\n                this.owner.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n            if (value) {\n                value.transform.on(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n                this._baseRenderNode.transform = value.transform;\n            }\n            else {\n                this.owner.transform.on(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n                this._baseRenderNode.transform = this.owner.transform;\n            }\n            this._cacheRootBone = value;\n            this._onWorldMatNeedChange(Transform3D.TRANSFORM_WORLDPOSITION | Transform3D.TRANSFORM_WORLDQUATERNION | Transform3D.TRANSFORM_WORLDSCALE);\n            let count = this._renderElements.length;\n            for (var i = 0; i < count; i++) {\n                var renderElement = this._renderElements[i];\n                renderElement.setTransform(value.transform);\n            }\n            this._isISkinRenderNode() && this._ownerSkinRenderNode.setRootBoneTransfom(this._cacheRootBone);\n        }\n        this._baseRenderNode.transform = this.rootBone ? this.rootBone.transform : this.owner.transform;\n    }\n    get bones() {\n        return this._bones;\n    }\n    set bones(value) {\n        this._bones = value;\n    }\n    constructor() {\n        super();\n        this.__bones = [];\n        this._worldParams = new Vector4();\n        this.localBounds = new Bounds(Vector3.ZERO, Vector3.ZERO);\n        this._baseRenderNode.shaderData.addDefine(SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_BONE);\n        this._baseRenderNode.renderNodeType = BaseRenderType.SkinnedMeshRender;\n    }\n    _createBaseRenderNode() {\n        this._ownerSkinRenderNode = Laya3DRender.Render3DModuleDataFactory.createSkinRenderNode();\n        return this._ownerSkinRenderNode;\n    }\n    _getcommonUniformMap() {\n        return [\"Sprite3D\", \"SkinSprite3D\"];\n    }\n    _needRender(boundFrustum, context) {\n        if (!Stat.enableSkin)\n            return false;\n        return super._needRender(boundFrustum, context);\n    }\n    _createRenderElement() {\n        let renderelement = new SkinRenderElement();\n        return renderelement;\n    }\n    _isISkinRenderNode() {\n        return this._ownerSkinRenderNode.setCacheMesh;\n    }\n    _onSkinMeshChange(mesh) {\n        if (mesh && this._mesh != mesh) {\n            this._changeVertexDefine(mesh);\n            this._changeMorphData(mesh);\n            this._mesh = mesh;\n            this._isISkinRenderNode() && this._ownerSkinRenderNode.setCacheMesh(mesh);\n            var count = mesh.subMeshCount;\n            this._renderElements.length = count;\n            let materials = this.sharedMaterials;\n            materials.length = count;\n            for (var i = 0; i < count; i++) {\n                let renderElement = this._renderElements[i];\n                if (!renderElement) {\n                    renderElement = this._renderElements[i] = this._createRenderElement();\n                    if (this._cacheRootBone) {\n                        renderElement.setTransform(this._cacheRootBone.transform);\n                    }\n                    else {\n                        renderElement.setTransform(this.owner._transform);\n                    }\n                    renderElement.render = this;\n                }\n                materials[i] = materials[i] || BlinnPhongMaterial.defaultMaterial;\n                renderElement.setGeometry(mesh.getSubMesh(i));\n            }\n            this.sharedMaterials = materials;\n            this.boundsChange = true;\n        }\n        else if (!mesh) {\n            this._renderElements.length = 0;\n            this._mesh = null;\n            this._changeVertexDefine(null);\n            this._changeMorphData(null);\n            this.boundsChange = false;\n        }\n        this._meshChange = true;\n    }\n    _onMeshChange(value) {\n        this._onSkinMeshChange(value);\n        this._setRenderElements();\n        if (!value)\n            return;\n        this._cacheMesh = value;\n        var subMeshCount = value.subMeshCount;\n        this._skinnedData = [];\n        for (var i = 0; i < subMeshCount; i++) {\n            var subBoneIndices = value.getSubMesh(i)._boneIndicesList;\n            var subCount = subBoneIndices.length;\n            var subData = this._skinnedData[i] = [];\n            for (var j = 0; j < subCount; j++)\n                subData[j] = new Float32Array(subBoneIndices[j].length * 16);\n            this._renderElements[i].setSkinData(subData);\n        }\n        this._isISkinRenderNode() && this._ownerSkinRenderNode.setSkinnedData(this._skinnedData);\n    }\n    _setBelongScene(scene) {\n        super._setBelongScene(scene);\n        this._isISkinRenderNode() && this._ownerSkinRenderNode.setOwnerTransform(this.owner);\n    }\n    _setUnBelongScene() {\n        super._setUnBelongScene();\n    }\n    _statAdd() {\n        Stat.renderNode++;\n        Stat.skinRenderNode++;\n    }\n    _statRemove() {\n        Stat.renderNode--;\n        Stat.skinRenderNode--;\n    }\n    renderUpdate(context) {\n        super.renderUpdate(context);\n        this._isISkinRenderNode() && this._ownerSkinRenderNode.computeSkinnedData();\n    }\n    _cloneTo(dest) {\n        let getCommomParent = (rootNode, rootCheckNode) => {\n            let nodeArray = [];\n            let node = rootNode;\n            while (!!node) {\n                if (node instanceof Sprite3D)\n                    nodeArray.push(node);\n                node = node.parent;\n            }\n            let checkNode = rootCheckNode;\n            while (!!checkNode && nodeArray.indexOf(checkNode) == -1) {\n                checkNode = checkNode.parent;\n            }\n            return checkNode;\n        };\n        let cloneHierachFun = (rootNode, rootCheckNode, destNode) => {\n            let rootparent = getCommomParent(rootNode, rootCheckNode);\n            if (!rootparent)\n                return null;\n            let path = [];\n            Utils3D._getHierarchyPath(rootparent, rootNode, path);\n            let pathcheck = [];\n            Utils3D._getHierarchyPath(rootparent, rootCheckNode, pathcheck);\n            let destParent = Utils3D._getParentNodeByHierarchyPath(destNode, path);\n            if (!destParent)\n                return null;\n            return Utils3D._getNodeByHierarchyPath(destParent, pathcheck);\n        };\n        var rootBone = this.rootBone;\n        if (rootBone) {\n            let node = cloneHierachFun(this.owner, this.rootBone, dest.owner);\n            if (node)\n                dest.rootBone = node;\n            else\n                dest.rootBone = rootBone;\n        }\n        var bones = this.bones;\n        var destBone = dest.bones;\n        let n = destBone.length = bones.length;\n        for (var i = 0; i < n; i++) {\n            let ceckNode = bones[i];\n            destBone[i] = cloneHierachFun(this.owner, ceckNode, dest.owner);\n        }\n        dest.bones = dest.bones;\n        var lbb = this.localBounds;\n        (lbb) && (lbb.cloneTo(dest.localBounds));\n        (dest.localBounds) && (dest.localBounds = dest.localBounds);\n        super._cloneTo(dest);\n    }\n    _onDestroy() {\n        if (this._cacheRootBone)\n            (!this._cacheRootBone._destroyed) && (this._cacheRootBone.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange));\n        else\n            (this.owner && !this.owner._destroyed) && (this.owner.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange));\n        super._onDestroy();\n    }\n}\n","import { Event } from \"../../events/Event\";\nimport { SkinnedMeshRenderer } from \"./SkinnedMeshRenderer\";\nimport { SubMeshRenderElement } from \"./render/SubMeshRenderElement\";\nimport { SkinnedMeshSprite3DShaderDeclaration } from \"./SkinnedMeshSprite3DShaderDeclaration\";\nimport { Vector2 } from \"../../maths/Vector2\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { BaseRenderType } from \"../../RenderDriver/RenderModuleData/Design/3D/I3DRenderModuleData\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nimport { SimpleSkinnedMeshSprite3D } from \"./SimpleSkinnedMeshSprite3D\";\nexport class SimpleSkinnedMeshRenderer extends SkinnedMeshRenderer {\n    get simpleAnimatorTexture() {\n        return this._simpleAnimatorTexture;\n    }\n    set simpleAnimatorTexture(value) {\n        this._simpleAnimatorTexture = value;\n        this._simpleAnimatorTextureSize = value.width;\n        this._baseRenderNode.shaderData.setTexture(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURE, value);\n        this._baseRenderNode.shaderData.setNumber(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURESIZE, this._simpleAnimatorTextureSize);\n    }\n    get simpleAnimatorOffset() {\n        return this._simpleAnimatorOffset;\n    }\n    set simpleAnimatorOffset(value) {\n        value.cloneTo(this._simpleAnimatorOffset);\n    }\n    _isISkinRenderNode() {\n        return null;\n    }\n    constructor() {\n        super();\n        this._simpleAnimatorParams = new Vector4();\n        this._simpleAnimatorOffset = new Vector2();\n        this._baseRenderNode.shaderData.addDefine(SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_SIMPLEBONE);\n        this._baseRenderNode.shaderData.addDefine(SkinnedMeshSprite3DShaderDeclaration.SHADERDEFINE_BONE);\n        this._baseRenderNode.renderNodeType = BaseRenderType.SimpleSkinRender;\n        this._baseRenderNode.shaderData.setVector(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS, new Vector4());\n    }\n    _createBaseRenderNode() {\n        this._ownerSimpleRenderNode = Laya3DRender.Render3DModuleDataFactory.createSimpleSkinRenderNode();\n        return this._ownerSimpleRenderNode;\n    }\n    _getcommonUniformMap() {\n        return [\"Sprite3D\", \"SimpleSkinnedMesh\"];\n    }\n    _computeSkinnedData() {\n        this._computeAnimatorParamsData();\n    }\n    renderUpdate(context) {\n        super.renderUpdate(context);\n        this._computeSkinnedData();\n    }\n    _createRenderElement() {\n        let renderelement = new SubMeshRenderElement();\n        return renderelement;\n    }\n    _computeAnimatorParamsData() {\n        if (this._cacheMesh) {\n            this._simpleAnimatorParams.x = this._simpleAnimatorOffset.x;\n            this._simpleAnimatorParams.y = Math.round(this._simpleAnimatorOffset.y) * this._bonesNums * 4;\n            this._ownerSimpleRenderNode.setSimpleAnimatorParams(this._simpleAnimatorParams);\n        }\n    }\n    setCustomData(value1, value2 = 0) {\n        this._simpleAnimatorParams.z = value1;\n        this._simpleAnimatorParams.w = value2;\n        this._ownerSimpleRenderNode.setSimpleAnimatorParams(this._simpleAnimatorParams);\n    }\n    _onMeshChange(value) {\n        this._onSkinMeshChange(value);\n        if (!value)\n            return;\n        this._cacheMesh = value;\n        this._setRenderElements();\n    }\n    _cloneTo(dest) {\n        dest.simpleAnimatorOffset = this.simpleAnimatorOffset;\n        dest.simpleAnimatorTexture = this.simpleAnimatorTexture;\n        dest._bonesNums = this._bonesNums;\n        super._cloneTo(dest);\n    }\n    _onDestroy() {\n        if (this._cacheRootBone)\n            (!this._cacheRootBone._destroyed) && (this._cacheRootBone.transform.off(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange));\n        this._simpleAnimatorTexture = null;\n        super._onDestroy();\n    }\n}\n","import { MeshFilter } from \"./MeshFilter\";\nimport { RenderableSprite3D } from \"./RenderableSprite3D\";\nimport { SimpleSkinnedMeshRenderer } from \"./SimpleSkinnedMeshRenderer\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nexport class SimpleSkinnedMeshSprite3D extends RenderableSprite3D {\n    static __init__() {\n        SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURE = Shader3D.propertyNameToID(\"u_SimpleAnimatorTexture\");\n        SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS = Shader3D.propertyNameToID(\"u_SimpleAnimatorParams\");\n        SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURESIZE = Shader3D.propertyNameToID(\"u_SimpleAnimatorTextureSize\");\n        const commandUniform = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"SimpleSkinnedMesh\");\n        commandUniform.addShaderUniform(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURE, \"u_SimpleAnimatorTexture\", ShaderDataType.Texture2D);\n        commandUniform.addShaderUniform(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS, \"u_SimpleAnimatorParams\", ShaderDataType.Vector4);\n        commandUniform.addShaderUniform(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORTEXTURESIZE, \"u_SimpleAnimatorTextureSize\", ShaderDataType.Float);\n    }\n    get meshFilter() {\n        return this._meshFilter;\n    }\n    get simpleSkinnedMeshRenderer() {\n        return this._render;\n    }\n    constructor(mesh = null, name = null) {\n        super(name);\n        this._meshFilter = this.addComponent(MeshFilter);\n        this._render = this.addComponent(SimpleSkinnedMeshRenderer);\n        (mesh) && (this._meshFilter.sharedMesh = mesh);\n    }\n    destroy(destroyChild = true) {\n        if (this._destroyed)\n            return;\n        super.destroy(destroyChild);\n        this._meshFilter.destroy();\n    }\n}\nSimpleSkinnedMeshSprite3D._tempArray0 = [];\n","import { Material } from \"../../../resource/Material\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nexport class SkyPanoramicMaterial extends Material {\n    static __init__() {\n        SkyPanoramicMaterial.TINTCOLOR = Shader3D.propertyNameToID(\"u_TintColor\");\n        SkyPanoramicMaterial.EXPOSURE = Shader3D.propertyNameToID(\"u_Exposure\");\n        SkyPanoramicMaterial.ROTATION = Shader3D.propertyNameToID(\"u_Rotation\");\n        SkyPanoramicMaterial.TEXTURE = Shader3D.propertyNameToID(\"u_Texture\");\n        SkyPanoramicMaterial.TEXTURE_HDR_PARAMS = Shader3D.propertyNameToID(\"u_Texture_HDR_params\");\n    }\n    get tintColor() {\n        return this.getColorByIndex(SkyPanoramicMaterial.TINTCOLOR);\n    }\n    set tintColor(value) {\n        this.setColorByIndex(SkyPanoramicMaterial.TINTCOLOR, value);\n    }\n    get exposure() {\n        return this.getFloatByIndex(SkyPanoramicMaterial.EXPOSURE);\n    }\n    set exposure(value) {\n        this.setFloatByIndex(SkyPanoramicMaterial.EXPOSURE, value);\n    }\n    get rotation() {\n        return this.getFloatByIndex(SkyPanoramicMaterial.ROTATION);\n    }\n    set rotation(value) {\n        this.setFloatByIndex(SkyPanoramicMaterial.ROTATION, value);\n    }\n    get panoramicTexture() {\n        return this.getTextureByIndex(SkyPanoramicMaterial.TEXTURE);\n    }\n    set panoramicTexture(value) {\n        this.setTextureByIndex(SkyPanoramicMaterial.TEXTURE, value);\n    }\n    constructor() {\n        super();\n        this._textureHDRParams = new Vector4(1.0, 0.0, 0.0, 1.0);\n        this.setShaderName(\"SkyPanoramic\");\n        this.setColorByIndex(SkyPanoramicMaterial.TINTCOLOR, new Color(0.5, 0.5, 0.5, 0.5));\n        this.setFloatByIndex(SkyPanoramicMaterial.ROTATION, 0.0);\n        this.setVector4ByIndex(SkyPanoramicMaterial.TEXTURE_HDR_PARAMS, this._textureHDRParams);\n        this.exposure = 1.3;\n    }\n}\n","import { Vector4 } from \"../../../maths/Vector4\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../../../resource/Material\";\nexport class PixelLineMaterial extends Material {\n    static __initDefine__() {\n        PixelLineMaterial.COLOR = Shader3D.propertyNameToID(\"u_Color\");\n    }\n    get color() {\n        return this._shaderValues.getVector(PixelLineMaterial.COLOR);\n    }\n    set color(value) {\n        this._shaderValues.setVector(PixelLineMaterial.COLOR, value);\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"LineShader\");\n        this._shaderValues.setVector(PixelLineMaterial.COLOR, new Vector4(1.0, 1.0, 1.0, 1.0));\n    }\n    clone() {\n        var dest = new PixelLineMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","export var EPhysicsStatisticsInfo;\n(function (EPhysicsStatisticsInfo) {\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"C_PhysicsEventCount\"] = 0] = \"C_PhysicsEventCount\";\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"FrameClearCount\"] = 1] = \"FrameClearCount\";\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"C_PhysicaDynamicRigidBody\"] = 2] = \"C_PhysicaDynamicRigidBody\";\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"C_PhysicaStaticRigidBody\"] = 3] = \"C_PhysicaStaticRigidBody\";\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"C_PhysicaKinematicRigidBody\"] = 4] = \"C_PhysicaKinematicRigidBody\";\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"C_PhysicaCharacterController\"] = 5] = \"C_PhysicaCharacterController\";\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"C_PhysicsJoint\"] = 6] = \"C_PhysicsJoint\";\n    EPhysicsStatisticsInfo[EPhysicsStatisticsInfo[\"Count\"] = 7] = \"Count\";\n})(EPhysicsStatisticsInfo || (EPhysicsStatisticsInfo = {}));\n","import { ILaya } from \"../../../ILaya\";\nimport { EPhysicsStatisticsInfo } from \"../physicsEnum/EPhysicsStatisticsInfo\";\nexport class Physics3DStatInfo {\n    static initStatisticsInfo() {\n        for (let i = 0; i < EPhysicsStatisticsInfo.Count; i++) {\n            this._PhysicsStatisticsInfo.set(i, 0);\n        }\n        if (Physics3DStatInfo.enableStatistics && Physics3DStatInfo.autoFrameClear) {\n            ILaya.timer.frameLoop(1, null, Physics3DStatInfo.clearStatisticsInfo);\n        }\n    }\n    static addStatisticsInfo(info, value) {\n        Physics3DStatInfo.enableStatistics && (Physics3DStatInfo._PhysicsStatisticsInfo.set(info, Physics3DStatInfo._PhysicsStatisticsInfo.get(info) + value));\n    }\n    static getStatisticsInfo(info) {\n        let value = 0;\n        if (Physics3DStatInfo.enableStatistics) {\n            value = Physics3DStatInfo._PhysicsStatisticsInfo.get(info);\n        }\n        return value;\n    }\n    static clearStatisticsInfo() {\n        if (Physics3DStatInfo.enableStatistics) {\n            for (let i = 0; i < EPhysicsStatisticsInfo.FrameClearCount; i++) {\n                Physics3DStatInfo._PhysicsStatisticsInfo.set(i, 0);\n            }\n        }\n    }\n    static stopAndClearAllStatisticsInfo() {\n        for (let i = 0; i < EPhysicsStatisticsInfo.Count; i++) {\n            this._PhysicsStatisticsInfo.set(i, 0);\n        }\n        if (Physics3DStatInfo.enableStatistics && Physics3DStatInfo.autoFrameClear) {\n            ILaya.timer.clear(null, Physics3DStatInfo.clearStatisticsInfo);\n        }\n    }\n}\nPhysics3DStatInfo._PhysicsStatisticsInfo = new Map();\nPhysics3DStatInfo.enableStatistics = false;\nPhysics3DStatInfo.autoFrameClear = false;\n","export class PostProcessRenderContext {\n    constructor() {\n        this.source = null;\n        this.indirectTarget = null;\n        this.destination = null;\n        this.camera = null;\n        this.compositeShaderData = null;\n        this.command = null;\n        this.deferredReleaseTextures = [];\n    }\n    createRTByContextReleaseTexture(width, height, colorFormat, depthFormat, mipmap = false, multiSamples = 1, depthTexture = false, sRGB = false) {\n        let n = this.deferredReleaseTextures.length;\n        for (let index = 0; index < n; index++) {\n            let rt = this.deferredReleaseTextures[index];\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\n                rt._inPool = false;\n                let end = this.deferredReleaseTextures[n - 1];\n                this.deferredReleaseTextures[index] = end;\n                this.deferredReleaseTextures.length -= 1;\n                return rt;\n            }\n        }\n        return null;\n    }\n}\n","import { Texture2D } from \"../../../../resource/Texture2D\";\nimport { CommandBuffer } from \"../command/CommandBuffer\";\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\nimport { RenderTargetFormat } from \"../../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { DepthTextureMode, RenderTexture } from \"../../../../resource/RenderTexture\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { PostProcessRenderContext } from \"./PostProcessRenderContext\";\nimport { ColorGradEffect } from \"../../../postProcessEffect/ColorGradEffect\";\nexport class PostProcess {\n    static __init__() {\n        PostProcess.SHADERDEFINE_BLOOM_LOW = Shader3D.getDefineByName(\"BLOOM_LOW\");\n        PostProcess.SHADERDEFINE_BLOOM = Shader3D.getDefineByName(\"BLOOM\");\n        PostProcess.SHADERDEFINE_FINALPASS = Shader3D.getDefineByName(\"FINALPASS\");\n        PostProcess.SHADERVALUE_MAINTEX = Shader3D.propertyNameToID(\"u_MainTex\");\n        PostProcess.SHADERVALUE_BLOOMTEX = Shader3D.propertyNameToID(\"u_BloomTex\");\n        PostProcess.SHADERVALUE_AUTOEXPOSURETEX = Shader3D.propertyNameToID(\"u_AutoExposureTex\");\n        PostProcess.SHADERVALUE_BLOOM_DIRTTEX = Shader3D.propertyNameToID(\"u_Bloom_DirtTex\");\n        PostProcess.SHADERVALUE_BLOOMTEX_TEXELSIZE = Shader3D.propertyNameToID(\"u_BloomTex_TexelSize\");\n        PostProcess.SHADERVALUE_BLOOM_DIRTTILEOFFSET = Shader3D.propertyNameToID(\"u_Bloom_DirtTileOffset\");\n        PostProcess.SHADERVALUE_BLOOM_SETTINGS = Shader3D.propertyNameToID(\"u_Bloom_Settings\");\n        PostProcess.SHADERVALUE_BLOOM_COLOR = Shader3D.propertyNameToID(\"u_Bloom_Color\");\n    }\n    recaculateCameraFlag() {\n        this._depthtextureFlag = DepthTextureMode.None;\n        let n = this.effects.length;\n        for (let i = 0; i < n; i++) {\n            this._depthtextureFlag |= this.effects[i].getCameraDepthTextureModeFlag();\n        }\n    }\n    constructor() {\n        this._compositeShader = Shader3D.find(\"PostProcessComposite\");\n        this._compositeShaderData = LayaGL.renderDeviceFactory.createShaderData(null);\n        this._effects = [];\n        this._enable = true;\n        this._enableColorGrad = false;\n        this._context = new PostProcessRenderContext();\n        this._context.compositeShaderData = this._compositeShaderData;\n        this._context.command = new CommandBuffer();\n        this._depthtextureFlag = 0;\n    }\n    get enable() {\n        return this._enable;\n    }\n    set enable(value) {\n        this._enable = value;\n    }\n    set commandContext(oriContext) {\n        this._context.command._context = oriContext;\n    }\n    get effects() {\n        return this._effects;\n    }\n    set effects(value) {\n        this.clearEffect();\n        for (var i = 0, n = value.length; i < n; i++) {\n            if (value[i])\n                this.addEffect(value[i]);\n        }\n    }\n    get cameraDepthTextureMode() {\n        return this._depthtextureFlag;\n    }\n    _init(camera) {\n        this._context.camera = camera;\n        this._context.command._camera = camera;\n    }\n    _render(camera) {\n        this._init(camera);\n        let context = this._context;\n        var camera = context.camera;\n        var viewport = camera.viewport;\n        var internalRT = camera._needInternalRenderTexture();\n        var cameraTarget = !internalRT ? RenderTexture.createFromPool(camera._offScreenRenderTexture.width, camera._offScreenRenderTexture.height, camera._getRenderTextureFormat(), RenderTargetFormat.None, false, 1, false, true) : camera._internalRenderTexture;\n        var screenTexture = RenderTexture.createFromPool(cameraTarget.width, cameraTarget.height, camera._getRenderTextureFormat(), RenderTargetFormat.None, false, 1, false, true);\n        var Indirect = [RenderTexture.createFromPool(cameraTarget.width, cameraTarget.height, camera._getRenderTextureFormat(), RenderTargetFormat.None, false, 1, false, true), RenderTexture.createFromPool(cameraTarget.width, cameraTarget.height, camera._getRenderTextureFormat(), RenderTargetFormat.None, false, 1, false, true)];\n        context.command.clear();\n        context.source = screenTexture;\n        context.indirectTarget = screenTexture;\n        context.destination = this._effects.length == 2 ? Indirect[0] : cameraTarget;\n        context.compositeShaderData.clearDefine();\n        if (internalRT) {\n            context.command.blitScreenTriangle(camera._internalRenderTexture, screenTexture);\n        }\n        else {\n            context.command.blitScreenTriangle(camera._offScreenRenderTexture, screenTexture);\n        }\n        context.compositeShaderData.setTexture(PostProcess.SHADERVALUE_AUTOEXPOSURETEX, Texture2D.whiteTexture);\n        if (this._enableColorGrad) {\n            this._ColorGradEffect._buildLUT();\n        }\n        for (var i = 0, n = this._effects.length; i < n; i++) {\n            if (this._effects[i].active) {\n                this._effects[i].render(context);\n                if (i == n - 2) {\n                    context.indirectTarget = context.destination;\n                    context.destination = cameraTarget;\n                }\n                else {\n                    context.indirectTarget = context.destination;\n                    context.destination = Indirect[(i + 1) % 2];\n                }\n            }\n            else if (i == n - 1) {\n                context.command.blitScreenTriangle(context.indirectTarget, cameraTarget);\n            }\n        }\n        this._compositeShaderData.addDefine(PostProcess.SHADERDEFINE_FINALPASS);\n        if (camera._offScreenRenderTexture) {\n            if (internalRT) {\n                context.destination = camera._offScreenRenderTexture;\n                var canvasWidth = camera._getCanvasWidth(), canvasHeight = camera._getCanvasHeight();\n                if (LayaGL.renderEngine._screenInvertY) {\n                    camera._screenOffsetScale.setValue(viewport.x / canvasWidth, viewport.y / canvasHeight, viewport.width / canvasWidth, viewport.height / canvasHeight);\n                }\n                else {\n                    camera._screenOffsetScale.setValue(viewport.x / canvasWidth, 1.0 - viewport.y / canvasHeight, viewport.width / canvasWidth, -viewport.height / canvasHeight);\n                }\n                context.command.blitScreenTriangle(cameraTarget, camera._offScreenRenderTexture, camera._screenOffsetScale, null, this._compositeShaderData, 0);\n            }\n        }\n        if (internalRT)\n            RenderTexture.recoverToPool(cameraTarget);\n        RenderTexture.recoverToPool(screenTexture);\n        RenderTexture.recoverToPool(Indirect[0]);\n        RenderTexture.recoverToPool(Indirect[1]);\n        var tempRenderTextures = context.deferredReleaseTextures;\n        for (i = 0, n = tempRenderTextures.length; i < n; i++)\n            RenderTexture.recoverToPool(tempRenderTextures[i]);\n        tempRenderTextures.length = 0;\n    }\n    addEffect(effect) {\n        if (effect.singleton && this.getEffect(effect.constructor)) {\n            console.error(\"无法增加已经存在的Effect\");\n            return;\n        }\n        if (!this._enableColorGrad || effect instanceof ColorGradEffect) {\n            this._effects.push(effect);\n        }\n        else {\n            this._effects.splice(this._effects.length - 1, 0, effect);\n        }\n        this.recaculateCameraFlag();\n        effect.effectInit(this);\n    }\n    getEffect(classReg) {\n        let size = this._effects.length;\n        for (let i = 0; i < size; i++) {\n            let element = this._effects[i];\n            if (element instanceof classReg) {\n                return element;\n            }\n        }\n        return null;\n    }\n    removeEffect(effect) {\n        var index = this._effects.indexOf(effect);\n        if (index !== -1) {\n            this._effects.splice(index, 1);\n            effect.release(this);\n            this.recaculateCameraFlag();\n        }\n    }\n    clearEffect() {\n        let i = this.effects.length - 1;\n        for (; i >= 0; i--) {\n            this.removeEffect(this.effects[i]);\n        }\n        this._effects.length = 0;\n    }\n    _applyPostProcessCommandBuffers() {\n        this._context.command._apply();\n    }\n}\n","import { Config3D } from \"./Config3D\";\nimport { ILaya } from \"./ILaya\";\nimport { BlinnPhongMaterial } from \"./laya/d3/core/material/BlinnPhongMaterial\";\nimport { PBRMaterial } from \"./laya/d3/core/material/PBRMaterial\";\nimport { PBRStandardMaterial } from \"./laya/d3/core/material/PBRStandardMaterial\";\nimport { SkyBoxMaterial } from \"./laya/d3/core/material/SkyBoxMaterial\";\nimport { SkyProceduralMaterial } from \"./laya/d3/core/material/SkyProceduralMaterial\";\nimport { UnlitMaterial } from \"./laya/d3/core/material/UnlitMaterial\";\nimport { MeshRenderer } from \"./laya/d3/core/MeshRenderer\";\nimport { MeshSprite3D } from \"./laya/d3/core/MeshSprite3D\";\nimport { PixelLineVertex } from \"./laya/d3/core/pixelLine/PixelLineVertex\";\nimport { Command } from \"./laya/d3/core/render/command/Command\";\nimport { RenderContext3D } from \"./laya/d3/core/render/RenderContext3D\";\nimport { RenderableSprite3D } from \"./laya/d3/core/RenderableSprite3D\";\nimport { Scene3D } from \"./laya/d3/core/scene/Scene3D\";\nimport { Sprite3D } from \"./laya/d3/core/Sprite3D\";\nimport { SubMeshInstanceBatch } from \"./laya/d3/graphics/SubMeshInstanceBatch\";\nimport { VertexPositionTexture } from \"./laya/d3/graphics/Vertex/VertexPositionTexture\";\nimport { PrimitiveMesh } from \"./laya/d3/resource/models/PrimitiveMesh\";\nimport { SkyBox } from \"./laya/d3/resource/models/SkyBox\";\nimport { SkyDome } from \"./laya/d3/resource/models/SkyDome\";\nimport { ShaderInit3D } from \"./laya/d3/shader/ShaderInit3D\";\nimport { ShadowUtils } from \"./laya/d3/core/light/ShadowUtils\";\nimport { ShadowCasterPass } from \"./laya/d3/shadowMap/ShadowCasterPass\";\nimport { SimpleSkinnedMeshSprite3D } from \"./laya/d3/core/SimpleSkinnedMeshSprite3D\";\nimport { Camera } from \"./laya/d3/core/Camera\";\nimport { BaseCamera } from \"./laya/d3/core/BaseCamera\";\nimport { BaseRender } from \"./laya/d3/core/render/BaseRender\";\nimport { DepthPass } from \"./laya/d3/depthMap/DepthPass\";\nimport { RenderCapable } from \"./laya/RenderEngine/RenderEnum/RenderCapable\";\nimport { BlitFrameBufferCMD } from \"./laya/d3/core/render/command/BlitFrameBufferCMD\";\nimport { SkyRenderer } from \"./laya/d3/resource/models/SkyRenderer\";\nimport { SkyPanoramicMaterial } from \"./laya/d3/core/material/SkyPanoramicMaterial\";\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\nimport { Laya } from \"./Laya\";\nimport { PixelLineMaterial } from \"./laya/d3/core/pixelLine/PixelLineMaterial\";\nimport { PlayerConfig } from \"./Config\";\nimport { Physics3DStatInfo } from \"./laya/Physics3D/interface/Physics3DStatInfo\";\nimport { PostProcess } from \"./laya/d3/core/render/postProcessBase/PostProcess\";\nimport { ScreenQuad } from \"./laya/d3/core/render/command/geometry/ScreenQuad\";\nimport { SkinnedMeshRenderer } from \"./laya/d3/core/SkinnedMeshRenderer\";\nexport class Laya3D {\n    static get PhysicsCreateUtil() {\n        return this._PhysicsCreateUtil;\n    }\n    static set PhysicsCreateUtil(value) {\n        if (value && !Laya3D._PhysicsCreateUtil) {\n            Laya3D._PhysicsCreateUtil = value;\n            Laya3D._enablePhysics = true;\n        }\n    }\n    static get enablePhysics() {\n        return Laya3D._enablePhysics;\n    }\n    static _changeWebGLSize(width, height) {\n        RenderContext3D.clientWidth = width;\n        RenderContext3D.clientHeight = height;\n    }\n    static __init__() {\n        Config3D._multiLighting = Config3D.enableMultiLight && LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32);\n        if (Config3D.maxLightCount > 2048) {\n            Config3D.maxLightCount = 2048;\n            console.warn(\"Config3D: maxLightCount must less equal 2048.\");\n        }\n        let lcc = Config3D.lightClusterCount;\n        if (lcc.x > 128 || lcc.y > 128 || lcc.z > 128) {\n            lcc.setValue(Math.min(lcc.x, 128), Math.min(lcc.y, 128), Math.min(lcc.z, 128));\n            console.warn(\"Config3D: lightClusterCount X and Y、Z must less equal 128.\");\n        }\n        let maxAreaLightCountWithZ = Math.floor(2048 / Config3D.lightClusterCount.z - 1) * 4;\n        if (maxAreaLightCountWithZ < Config3D.maxLightCount)\n            console.warn(\"Config3D: if the area light(PointLight、SpotLight) count is large than \" + maxAreaLightCountWithZ + \",maybe the far away culster will ingonre some light.\");\n        Config3D._maxAreaLightCountPerClusterAverage = Math.min(maxAreaLightCountWithZ, Config3D.maxLightCount);\n        ILaya.Scene3D = Scene3D;\n        ILaya.Laya3D = Laya3D;\n        VertexPositionTexture.__init__();\n        PixelLineVertex.__init__();\n        SubMeshInstanceBatch.__init__();\n        ShaderInit3D.__init__();\n        PBRMaterial.__init__();\n        PBRStandardMaterial.__init__();\n        SkyPanoramicMaterial.__init__();\n        PrimitiveMesh.__init__();\n        Sprite3D.__init__();\n        RenderableSprite3D.__init__();\n        MeshSprite3D.__init__();\n        SkinnedMeshRenderer.__init__();\n        DepthPass.__init__();\n        SimpleSkinnedMeshSprite3D.__init__();\n        PostProcess.__init__();\n        Scene3D.__init__();\n        ShadowCasterPass.__init__();\n        BaseCamera.__init__();\n        BaseRender.__init__();\n        MeshRenderer.__init__();\n        SkyRenderer.__init__();\n        Camera.__init__();\n        ShadowUtils.init();\n        RenderContext3D.__init__();\n        BlinnPhongMaterial.__initDefine__();\n        SkyProceduralMaterial.__initDefine__();\n        UnlitMaterial.__initDefine__();\n        SkyBoxMaterial.__initDefine__();\n        Command.__init__();\n        BlitFrameBufferCMD.__init__();\n        BlinnPhongMaterial.defaultMaterial = new BlinnPhongMaterial();\n        BlinnPhongMaterial.defaultMaterial.lock = true;\n        UnlitMaterial.defaultMaterial = new UnlitMaterial();\n        UnlitMaterial.defaultMaterial.lock = true;\n        let pixelLineMaterial = new UnlitMaterial();\n        pixelLineMaterial.lock = true;\n        pixelLineMaterial.enableVertexColor = true;\n        PixelLineMaterial.defaultMaterial = pixelLineMaterial;\n        SkyBox.__init__();\n        SkyDome.__init__();\n        ScreenQuad.__init__();\n    }\n    static __initPhysics__() {\n        if (!Laya3D._PhysicsCreateUtil) {\n            Laya3D._enablePhysics = false;\n            return Promise.resolve();\n        }\n        else {\n            Laya3D._enablePhysics = true;\n            Physics3DStatInfo.initStatisticsInfo();\n            if (PlayerConfig.physics3D)\n                Object.assign(Scene3D.physicsSettings, PlayerConfig.physics3D);\n            return Laya3D._PhysicsCreateUtil.initialize();\n        }\n    }\n}\nLaya3D._enablePhysics = false;\nwindow.Laya3D = Laya3D;\nLaya.addInitCallback(() => Laya3D.__initPhysics__());\n","export var D6MotionType;\n(function (D6MotionType) {\n    D6MotionType[D6MotionType[\"eX\"] = 0] = \"eX\";\n    D6MotionType[D6MotionType[\"eY\"] = 1] = \"eY\";\n    D6MotionType[D6MotionType[\"eZ\"] = 2] = \"eZ\";\n    D6MotionType[D6MotionType[\"eTWIST\"] = 3] = \"eTWIST\";\n    D6MotionType[D6MotionType[\"eSWING1\"] = 4] = \"eSWING1\";\n    D6MotionType[D6MotionType[\"eSWING2\"] = 5] = \"eSWING2\";\n})(D6MotionType || (D6MotionType = {}));\nexport var D6Axis;\n(function (D6Axis) {\n    D6Axis[D6Axis[\"eLOCKED\"] = 0] = \"eLOCKED\";\n    D6Axis[D6Axis[\"eLIMITED\"] = 1] = \"eLIMITED\";\n    D6Axis[D6Axis[\"eFREE\"] = 2] = \"eFREE\";\n})(D6Axis || (D6Axis = {}));\nexport var D6Drive;\n(function (D6Drive) {\n    D6Drive[D6Drive[\"eX\"] = 0] = \"eX\";\n    D6Drive[D6Drive[\"eY\"] = 1] = \"eY\";\n    D6Drive[D6Drive[\"eZ\"] = 2] = \"eZ\";\n    D6Drive[D6Drive[\"eSWING\"] = 3] = \"eSWING\";\n    D6Drive[D6Drive[\"eTWIST\"] = 4] = \"eTWIST\";\n    D6Drive[D6Drive[\"eSLERP\"] = 5] = \"eSLERP\";\n})(D6Drive || (D6Drive = {}));\n","export var ECharacterCapable;\n(function (ECharacterCapable) {\n    ECharacterCapable[ECharacterCapable[\"Charcater_Gravity\"] = 0] = \"Charcater_Gravity\";\n    ECharacterCapable[ECharacterCapable[\"Charcater_CollisionGroup\"] = 1] = \"Charcater_CollisionGroup\";\n    ECharacterCapable[ECharacterCapable[\"Charcater_WorldPosition\"] = 2] = \"Charcater_WorldPosition\";\n    ECharacterCapable[ECharacterCapable[\"Charcater_Move\"] = 3] = \"Charcater_Move\";\n    ECharacterCapable[ECharacterCapable[\"Charcater_Jump\"] = 4] = \"Charcater_Jump\";\n    ECharacterCapable[ECharacterCapable[\"Charcater_StepOffset\"] = 5] = \"Charcater_StepOffset\";\n    ECharacterCapable[ECharacterCapable[\"Character_UpDirection\"] = 6] = \"Character_UpDirection\";\n    ECharacterCapable[ECharacterCapable[\"Character_FallSpeed\"] = 7] = \"Character_FallSpeed\";\n    ECharacterCapable[ECharacterCapable[\"Character_SlopeLimit\"] = 8] = \"Character_SlopeLimit\";\n    ECharacterCapable[ECharacterCapable[\"Character_PushForce\"] = 9] = \"Character_PushForce\";\n    ECharacterCapable[ECharacterCapable[\"Character_Radius\"] = 10] = \"Character_Radius\";\n    ECharacterCapable[ECharacterCapable[\"Character_Height\"] = 11] = \"Character_Height\";\n    ECharacterCapable[ECharacterCapable[\"Character_offset\"] = 12] = \"Character_offset\";\n    ECharacterCapable[ECharacterCapable[\"Character_Skin\"] = 13] = \"Character_Skin\";\n    ECharacterCapable[ECharacterCapable[\"Character_minDistance\"] = 14] = \"Character_minDistance\";\n    ECharacterCapable[ECharacterCapable[\"Character_EventFilter\"] = 15] = \"Character_EventFilter\";\n    ECharacterCapable[ECharacterCapable[\"Character_SimulateGravity\"] = 16] = \"Character_SimulateGravity\";\n})(ECharacterCapable || (ECharacterCapable = {}));\n","export var EColliderCapable;\n(function (EColliderCapable) {\n    EColliderCapable[EColliderCapable[\"Collider_CollisionGroup\"] = 0] = \"Collider_CollisionGroup\";\n    EColliderCapable[EColliderCapable[\"Collider_Friction\"] = 1] = \"Collider_Friction\";\n    EColliderCapable[EColliderCapable[\"Collider_RollingFriction\"] = 2] = \"Collider_RollingFriction\";\n    EColliderCapable[EColliderCapable[\"Collider_Restitution\"] = 3] = \"Collider_Restitution\";\n    EColliderCapable[EColliderCapable[\"Collider_AllowTrigger\"] = 4] = \"Collider_AllowTrigger\";\n    EColliderCapable[EColliderCapable[\"Collider_DynamicFriction\"] = 5] = \"Collider_DynamicFriction\";\n    EColliderCapable[EColliderCapable[\"Collider_StaticFriction\"] = 6] = \"Collider_StaticFriction\";\n    EColliderCapable[EColliderCapable[\"Collider_BounceCombine\"] = 7] = \"Collider_BounceCombine\";\n    EColliderCapable[EColliderCapable[\"Collider_FrictionCombine\"] = 8] = \"Collider_FrictionCombine\";\n    EColliderCapable[EColliderCapable[\"Collider_EventFilter\"] = 9] = \"Collider_EventFilter\";\n    EColliderCapable[EColliderCapable[\"Collider_CollisionDetectionMode\"] = 10] = \"Collider_CollisionDetectionMode\";\n    EColliderCapable[EColliderCapable[\"RigidBody_CanKinematic\"] = 11] = \"RigidBody_CanKinematic\";\n    EColliderCapable[EColliderCapable[\"RigidBody_AllowSleep\"] = 12] = \"RigidBody_AllowSleep\";\n    EColliderCapable[EColliderCapable[\"RigidBody_Gravity\"] = 13] = \"RigidBody_Gravity\";\n    EColliderCapable[EColliderCapable[\"RigidBody_LinearDamp\"] = 14] = \"RigidBody_LinearDamp\";\n    EColliderCapable[EColliderCapable[\"RigidBody_AngularDamp\"] = 15] = \"RigidBody_AngularDamp\";\n    EColliderCapable[EColliderCapable[\"RigidBody_LinearVelocity\"] = 16] = \"RigidBody_LinearVelocity\";\n    EColliderCapable[EColliderCapable[\"RigidBody_AngularVelocity\"] = 17] = \"RigidBody_AngularVelocity\";\n    EColliderCapable[EColliderCapable[\"RigidBody_Mass\"] = 18] = \"RigidBody_Mass\";\n    EColliderCapable[EColliderCapable[\"RigidBody_WorldPosition\"] = 19] = \"RigidBody_WorldPosition\";\n    EColliderCapable[EColliderCapable[\"RigidBody_WorldOrientation\"] = 20] = \"RigidBody_WorldOrientation\";\n    EColliderCapable[EColliderCapable[\"RigidBody_InertiaTensor\"] = 21] = \"RigidBody_InertiaTensor\";\n    EColliderCapable[EColliderCapable[\"RigidBody_MassCenter\"] = 22] = \"RigidBody_MassCenter\";\n    EColliderCapable[EColliderCapable[\"RigidBody_MaxAngularVelocity\"] = 23] = \"RigidBody_MaxAngularVelocity\";\n    EColliderCapable[EColliderCapable[\"RigidBody_MaxDepenetrationVelocity\"] = 24] = \"RigidBody_MaxDepenetrationVelocity\";\n    EColliderCapable[EColliderCapable[\"RigidBody_SleepThreshold\"] = 25] = \"RigidBody_SleepThreshold\";\n    EColliderCapable[EColliderCapable[\"RigidBody_SleepAngularVelocity\"] = 26] = \"RigidBody_SleepAngularVelocity\";\n    EColliderCapable[EColliderCapable[\"RigidBody_SolverIterations\"] = 27] = \"RigidBody_SolverIterations\";\n    EColliderCapable[EColliderCapable[\"RigidBody_AllowDetectionMode\"] = 28] = \"RigidBody_AllowDetectionMode\";\n    EColliderCapable[EColliderCapable[\"RigidBody_AllowKinematic\"] = 29] = \"RigidBody_AllowKinematic\";\n    EColliderCapable[EColliderCapable[\"RigidBody_AllowCharacter\"] = 30] = \"RigidBody_AllowCharacter\";\n    EColliderCapable[EColliderCapable[\"RigidBody_LinearFactor\"] = 31] = \"RigidBody_LinearFactor\";\n    EColliderCapable[EColliderCapable[\"RigidBody_AngularFactor\"] = 32] = \"RigidBody_AngularFactor\";\n    EColliderCapable[EColliderCapable[\"RigidBody_ApplyForce\"] = 33] = \"RigidBody_ApplyForce\";\n    EColliderCapable[EColliderCapable[\"RigidBody_ClearForce\"] = 34] = \"RigidBody_ClearForce\";\n    EColliderCapable[EColliderCapable[\"RigidBody_ApplyForceWithOffset\"] = 35] = \"RigidBody_ApplyForceWithOffset\";\n    EColliderCapable[EColliderCapable[\"RigidBody_ApplyTorque\"] = 36] = \"RigidBody_ApplyTorque\";\n    EColliderCapable[EColliderCapable[\"RigidBody_ApplyImpulse\"] = 37] = \"RigidBody_ApplyImpulse\";\n    EColliderCapable[EColliderCapable[\"RigidBody_ApplyTorqueImpulse\"] = 38] = \"RigidBody_ApplyTorqueImpulse\";\n})(EColliderCapable || (EColliderCapable = {}));\n","export var EJointCapable;\n(function (EJointCapable) {\n    EJointCapable[EJointCapable[\"Joint_Anchor\"] = 0] = \"Joint_Anchor\";\n    EJointCapable[EJointCapable[\"Joint_ConnectAnchor\"] = 1] = \"Joint_ConnectAnchor\";\n})(EJointCapable || (EJointCapable = {}));\n","import { NotImplementedError } from \"../../../utils/Error\";\nexport class DrawNodeCMDData {\n    get node() {\n        return this._node;\n    }\n    set node(value) {\n        this._node = value;\n    }\n    get destShaderData() {\n        return this._destShaderData;\n    }\n    set destShaderData(value) {\n        this._destShaderData = value;\n    }\n    get destSubShader() {\n        return this._destSubShader;\n    }\n    set destSubShader(value) {\n        this._destSubShader = value;\n    }\n    get subMeshIndex() {\n        return this._subMeshIndex;\n    }\n    set subMeshIndex(value) {\n        this._subMeshIndex = value;\n    }\n    apply(context) {\n        throw new NotImplementedError();\n    }\n}\nexport class BlitQuadCMDData {\n    get element() {\n        return this._element;\n    }\n    set element(value) {\n        this._element = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    get viewport() {\n        return this._viewport;\n    }\n    set viewport(value) {\n        this._viewport = value;\n    }\n    get scissor() {\n        return this._scissor;\n    }\n    set scissor(value) {\n        this._scissor = value;\n    }\n    get source() {\n        return this._source;\n    }\n    set source(value) {\n        this._source = value;\n    }\n    get offsetScale() {\n        return this._offsetScale;\n    }\n    set offsetScale(value) {\n        this._offsetScale = value;\n    }\n    apply(context) {\n        throw new NotImplementedError();\n    }\n}\nexport class DrawElementCMDData {\n    setRenderelements(value) {\n        throw new NotImplementedError();\n    }\n    apply(context) {\n        throw new NotImplementedError();\n    }\n}\nexport class SetViewportCMD {\n    get viewport() {\n        return this._viewport;\n    }\n    set viewport(value) {\n        this._viewport = value;\n    }\n    get scissor() {\n        return this._scissor;\n    }\n    set scissor(value) {\n        this._scissor = value;\n    }\n    apply(context) {\n        throw new NotImplementedError();\n    }\n}\nexport class SetRenderTargetCMD {\n    get rt() {\n        return this._rt;\n    }\n    set rt(value) {\n        this._rt = value;\n    }\n    get clearFlag() {\n        return this._clearFlag;\n    }\n    set clearFlag(value) {\n        this._clearFlag = value;\n    }\n    get clearDepthValue() {\n        return this._clearDepthValue;\n    }\n    set clearDepthValue(value) {\n        this._clearDepthValue = value;\n    }\n    get clearStencilValue() {\n        return this._clearStencilValue;\n    }\n    set clearStencilValue(value) {\n        this._clearStencilValue = value;\n    }\n    get clearColorValue() {\n        return this._clearColorValue;\n    }\n    set clearColorValue(value) {\n        this._clearColorValue = value;\n    }\n    apply(context) {\n        throw new NotImplementedError();\n    }\n}\n","import { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { NotReadableError } from \"../../utils/Error\";\nexport class IndexBuffer3D {\n    get indexType() {\n        return this._indexType;\n    }\n    get indexTypeByteCount() {\n        return this._indexTypeByteCount;\n    }\n    get indexCount() {\n        return this._indexCount;\n    }\n    get canRead() {\n        return this._canRead;\n    }\n    constructor(indexType, indexCount, bufferUsage = BufferUsage.Static, canRead = false) {\n        this._indexType = IndexFormat.UInt16;\n        this._deviceBuffer = LayaGL.renderDeviceFactory.createIndexBuffer(bufferUsage);\n        this._deviceBuffer.indexType = this._indexType = indexType;\n        this._deviceBuffer.indexCount = this._indexCount = indexCount;\n        this._canRead = canRead;\n        this.bufferUsage = bufferUsage;\n        switch (indexType) {\n            case IndexFormat.UInt32:\n                this._indexTypeByteCount = 4;\n                break;\n            case IndexFormat.UInt16:\n                this._indexTypeByteCount = 2;\n                break;\n            case IndexFormat.UInt8:\n                this._indexTypeByteCount = 1;\n                break;\n            default:\n                throw new Error(\"unknown index type: \" + indexType);\n        }\n        var byteLength = this._indexTypeByteCount * indexCount;\n        this._byteLength = byteLength;\n        this._deviceBuffer._setIndexDataLength(byteLength);\n        if (canRead) {\n            switch (indexType) {\n                case IndexFormat.UInt32:\n                    this._buffer = new Uint32Array(indexCount);\n                    break;\n                case IndexFormat.UInt16:\n                    this._buffer = new Uint16Array(indexCount);\n                    break;\n                case IndexFormat.UInt8:\n                    this._buffer = new Uint8Array(indexCount);\n                    break;\n            }\n        }\n    }\n    setData(data, bufferOffset = 0, dataStartIndex = 0, dataCount = 4294967295) {\n        var byteCount = this._indexTypeByteCount;\n        if (dataStartIndex !== 0 || dataCount !== 4294967295) {\n            switch (this._indexType) {\n                case IndexFormat.UInt32:\n                    data = new Uint32Array(data.buffer, dataStartIndex * byteCount, dataCount);\n                    break;\n                case IndexFormat.UInt16:\n                    data = new Uint16Array(data.buffer, dataStartIndex * byteCount, dataCount);\n                    break;\n                case IndexFormat.UInt8:\n                    data = new Uint8Array(data.buffer, dataStartIndex * byteCount, dataCount);\n                    break;\n            }\n        }\n        this._deviceBuffer._setIndexData(data, bufferOffset * byteCount);\n        if (this._canRead) {\n            if (bufferOffset !== 0 || dataStartIndex !== 0 || dataCount !== 4294967295) {\n                var maxLength = this._buffer.length - bufferOffset;\n                if (dataCount > maxLength)\n                    dataCount = maxLength;\n                if (typeof data == typeof this._buffer && data.length == dataCount)\n                    this._buffer.set(data, bufferOffset);\n                else\n                    for (var i = 0; i < dataCount; i++)\n                        this._buffer[bufferOffset + i] = data[i];\n            }\n            else {\n                this._buffer = data;\n            }\n        }\n    }\n    getData() {\n        if (this._canRead)\n            return this._buffer;\n        else\n            throw new NotReadableError();\n    }\n    destroy() {\n        this._deviceBuffer.destroy();\n        this._buffer = null;\n        this._byteLength = 0;\n        this._indexCount = 0;\n    }\n}\n","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { NotReadableError } from \"../../utils/Error\";\nexport class VertexBuffer3D {\n    get vertexDeclaration() {\n        return this._deviceBuffer.vertexDeclaration;\n    }\n    set vertexDeclaration(value) {\n        this._deviceBuffer.vertexDeclaration = value;\n    }\n    get instanceBuffer() {\n        return this._deviceBuffer.instanceBuffer;\n    }\n    set instanceBuffer(value) {\n        this._deviceBuffer.instanceBuffer = value;\n    }\n    get canRead() {\n        return this._canRead;\n    }\n    constructor(byteLength, bufferUsage, canRead = false) {\n        this._float32Reader = null;\n        this._deviceBuffer = LayaGL.renderDeviceFactory.createVertexBuffer(bufferUsage);\n        this._canRead = canRead;\n        this._byteLength = byteLength;\n        this._deviceBuffer.setDataLength(byteLength);\n        this.bufferUsage = bufferUsage;\n        if (this._canRead) {\n            this._buffer = new Uint8Array(byteLength);\n            this._float32Reader = new Float32Array(this._buffer.buffer);\n        }\n    }\n    setData(buffer, bufferOffset = 0, dataStartIndex = 0, dataCount = Number.MAX_SAFE_INTEGER) {\n        this._deviceBuffer.setData(buffer, bufferOffset, dataStartIndex, dataCount);\n        var needSubData = dataStartIndex !== 0 || dataCount !== Number.MAX_SAFE_INTEGER;\n        if (needSubData) {\n            var subData = new Uint8Array(buffer, dataStartIndex, dataCount);\n            if (this._canRead)\n                this._buffer.set(subData, bufferOffset);\n        }\n        else {\n            if (this._canRead)\n                this._buffer.set(new Uint8Array(buffer), bufferOffset);\n        }\n    }\n    getUint8Data() {\n        if (this._canRead)\n            return this._buffer;\n        else\n            throw new NotReadableError();\n    }\n    getFloat32Data() {\n        if (this._canRead)\n            return this._float32Reader;\n        else\n            throw new NotReadableError();\n    }\n    markAsUnreadbale() {\n        this._canRead = false;\n        this._buffer = null;\n        this._float32Reader = null;\n    }\n    destroy() {\n        this._deviceBuffer.destroy();\n        this._buffer = null;\n        this._float32Reader = null;\n        this._byteLength = 0;\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Laya3DRender } from \"../../../d3/RenderObjs/Laya3DRender\";\nimport { IndexBuffer3D } from \"../../../d3/graphics/IndexBuffer3D\";\nimport { VertexBuffer3D } from \"../../../d3/graphics/VertexBuffer3D\";\nexport class LengencyRenderEngine3DFactory {\n    createVertexBuffer3D(byteLength, bufferUsage, canRead = false) {\n        return new VertexBuffer3D(byteLength, bufferUsage, canRead);\n    }\n    createIndexBuffer3D(indexType, indexCount, bufferUsage = BufferUsage.Static, canRead = false) {\n        return new IndexBuffer3D(indexType, indexCount, bufferUsage, canRead);\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!Laya3DRender.renderOBJCreate)\n        Laya3DRender.renderOBJCreate = new LengencyRenderEngine3DFactory();\n});\n","export class CommandUniformMap {\n    constructor(stateName) {\n    }\n    addShaderUniform(propertyID, propertyKey, uniformtype) {\n        throw \"need override it\";\n    }\n    addShaderUniformArray(propertyID, propertyName, uniformtype, arrayLength) {\n        throw \"need override it\";\n    }\n}\n","import { NotImplementedError } from \"../../../utils/Error\";\nexport var RenderCMDType;\n(function (RenderCMDType) {\n    RenderCMDType[RenderCMDType[\"DrawNode\"] = 0] = \"DrawNode\";\n    RenderCMDType[RenderCMDType[\"DrawElement\"] = 1] = \"DrawElement\";\n    RenderCMDType[RenderCMDType[\"Blit\"] = 2] = \"Blit\";\n    RenderCMDType[RenderCMDType[\"ChangeData\"] = 3] = \"ChangeData\";\n    RenderCMDType[RenderCMDType[\"ChangeShaderDefine\"] = 4] = \"ChangeShaderDefine\";\n    RenderCMDType[RenderCMDType[\"ChangeViewPort\"] = 5] = \"ChangeViewPort\";\n    RenderCMDType[RenderCMDType[\"ChangeRenderTarget\"] = 6] = \"ChangeRenderTarget\";\n})(RenderCMDType || (RenderCMDType = {}));\nexport class SetRenderDataCMD {\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    get dataType() {\n        return this._dataType;\n    }\n    set dataType(value) {\n        this._dataType = value;\n    }\n    get propertyID() {\n        return this._propertyID;\n    }\n    set propertyID(value) {\n        this._propertyID = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    apply(context) {\n        throw new NotImplementedError();\n    }\n}\nexport class SetShaderDefineCMD {\n    get define() {\n        return this._define;\n    }\n    set define(value) {\n        this._define = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    get add() {\n        return this._add;\n    }\n    set add(value) {\n        this._add = value;\n    }\n    apply(context) {\n        throw new NotImplementedError();\n    }\n}\n","export class UniformBufferBlock {\n    constructor(cluster, index, size, alignedSize, user) {\n        this._destroyed = false;\n        this._id = UniformBufferBlock._idCounter++;\n        this.cluster = cluster;\n        this.index = index;\n        this.size = size;\n        this._alignedSize = alignedSize;\n        this.offset = alignedSize * index;\n        this.user = user;\n        this.uploadNum = 0;\n        this.moved = false;\n    }\n    needUpload() {\n        this.cluster._addUploadBlock(this.index);\n        if (!this.moved && this.uploadNum++ > this.cluster.manager.uploadThreshold)\n            this.cluster.manager._addOptimizeBufferPos(this.cluster);\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this.cluster = null;\n            this.user = null;\n            return true;\n        }\n        console.warn('UniformBufferBlock: object alreay destroyed!');\n        return false;\n    }\n}\nUniformBufferBlock._idCounter = 0;\n","import { UniformBufferBlock } from \"./UniformBufferBlock\";\nimport { roundUp } from \"./UniformBufferManager\";\nexport class UniformBufferCluster {\n    constructor(blockSize, blockNum, manager) {\n        this._inManagerUpdateArray = false;\n        this._sn = 0;\n        this._id = 0;\n        this._destroyed = false;\n        this._blocks = [];\n        this._holeNum = 0;\n        this._expand = 16;\n        this._id = UniformBufferCluster._idCounter++;\n        this.manager = manager;\n        this._blockSize = blockSize;\n        this._blockNum = blockNum;\n        this._totalSize = blockSize * blockNum;\n        this._needUpload = new Array(blockNum).fill(false);\n        this.data = new ArrayBuffer(this._totalSize);\n        this._move = new Uint8Array(this._blockSize);\n        this.buffer = this.manager.createGPUBuffer(this._totalSize);\n        this.manager.statisGPUMemory(this._totalSize);\n    }\n    get usedNum() {\n        return this._blocks.length;\n    }\n    _expandBuffer() {\n        let expandNum = this._blockNum;\n        this._blockNum += this._expand;\n        if (this._blockNum > this.manager.clusterMaxBlock)\n            this._blockNum = this.manager.clusterMaxBlock;\n        expandNum = this._blockNum - expandNum;\n        if (expandNum < 1)\n            return false;\n        this._totalSize = this._blockSize * this._blockNum;\n        const expandSize = this._blockSize * this._expand;\n        this._needUpload = this._needUpload.concat(new Array(expandNum).fill(false));\n        const newArrayBuffer = new ArrayBuffer(this._totalSize);\n        new Uint8Array(newArrayBuffer).set(new Uint8Array(this.data));\n        this.data = newArrayBuffer;\n        this.buffer = this.manager.createGPUBuffer(this._totalSize);\n        this.manager.statisGPUMemory(expandSize);\n        this._blocks.forEach(block => block && block.user.notifyGPUBufferChange('expand'));\n        return true;\n    }\n    _moveBlock(index) {\n        const len = this._blocks.length;\n        if (index >= len)\n            return false;\n        const dataView = new Uint8Array(this.data);\n        const size = this._blockSize;\n        for (let i = index + 1; i < len; i++) {\n            const start = i * size;\n            const end = start + size;\n            const target = start - size;\n            dataView.copyWithin(target, start, end);\n            this._needUpload[i - 1] = this._needUpload[i];\n            this._blocks[i - 1] = this._blocks[i];\n            if (this._blocks[i - 1]) {\n                this._blocks[i - 1].index--;\n                this._blocks[i - 1].offset -= size;\n                this._blocks[i - 1].user.notifyGPUBufferChange('moveBlock');\n            }\n        }\n        this._blocks.length--;\n        return true;\n    }\n    _createBufferBlock(index, size, alignedSize, user) {\n        return new UniformBufferBlock(this, index, size, alignedSize, user);\n    }\n    getBlock(size, user) {\n        const alignedSize = roundUp(size, this.manager.byteAlign);\n        if (alignedSize !== this._blockSize) {\n            console.warn('WebGPUBufferCluster: 获取内存块时, 长度错误!');\n            return null;\n        }\n        const index = this._getBlockWithExpand();\n        const bb = this._createBufferBlock(index, size, alignedSize, user);\n        this._blocks[index] = bb;\n        return bb;\n    }\n    freeBlock(bb) {\n        const index = this._blocks.indexOf(bb);\n        if (index !== -1) {\n            if (index === this._blocks.length - 1)\n                this._blocks.length--;\n            else {\n                this._blocks[index] = null;\n                this._holeNum++;\n            }\n            bb.destroy();\n            if (this._holeNum > this.manager.removeHoleThreshold) {\n                this.manager._addRemoveHoleCluster(this);\n                this._holeNum = 0;\n            }\n            return true;\n        }\n        return false;\n    }\n    upload() {\n        var _a;\n        let count = 0;\n        let bytes = 0;\n        let next = false;\n        let startIndex = -1;\n        let endIndex = -1;\n        let offset = 0;\n        let size = 0;\n        for (let i = 0, len = this._blocks.length; i < len; i++) {\n            if (this._needUpload[i]) {\n                if (startIndex === -1)\n                    startIndex = i;\n                endIndex = i;\n                next = true;\n                this._needUpload[i] = false;\n                (_a = this._blocks[i]) === null || _a === void 0 ? void 0 : _a.user.updateOver();\n            }\n            else {\n                if (next) {\n                    offset = startIndex * this._blockSize;\n                    size = (endIndex - startIndex + 1) * this._blockSize;\n                    this.manager.writeBuffer(this.buffer, this.data, offset, size);\n                    count++;\n                    bytes += size;\n                    startIndex = -1;\n                    endIndex = -1;\n                    next = false;\n                }\n            }\n        }\n        if (next) {\n            offset = startIndex * this._blockSize;\n            size = (endIndex - startIndex + 1) * this._blockSize;\n            this.manager.writeBuffer(this.buffer, this.data, offset, size);\n            count++;\n            bytes += size;\n        }\n        this.manager.statisUpload(count, bytes);\n    }\n    _addUploadBlock(index) {\n        this._needUpload[index] = true;\n        if (!this._inManagerUpdateArray)\n            this.manager._addUpdateArray(this);\n    }\n    optimize() {\n        let ret = false;\n        for (let i = 0, len = this._blocks.length; i < len; i++) {\n            const bb = this._blocks[i];\n            if (bb && !bb.moved && bb.uploadNum > this.manager.uploadThreshold && i > 0) {\n                const size = this._blockSize;\n                const dataView = new Uint8Array(this.data);\n                this._move.set(new Uint8Array(this.data, size * i, size));\n                for (let j = i - 1; j >= 0; j--) {\n                    const start = j * size;\n                    const end = start + size;\n                    const target = start + size;\n                    dataView.copyWithin(target, start, end);\n                    this._needUpload[j + 1] = this._needUpload[j];\n                    this._blocks[j + 1] = this._blocks[j];\n                    if (this._blocks[j + 1]) {\n                        this._blocks[j + 1].index++;\n                        this._blocks[j + 1].offset += size;\n                        this._blocks[j + 1].user.notifyGPUBufferChange('optimize');\n                    }\n                }\n                dataView.set(this._move);\n                bb.index = 0;\n                bb.offset = 0;\n                bb.moved = true;\n                this._blocks[0] = bb;\n                this._blocks[0].user.notifyGPUBufferChange('optimize');\n                ret = true;\n                if (this.manager._enableStat)\n                    this.manager._stat.moveNum++;\n            }\n        }\n        return ret;\n    }\n    removeHole() {\n        let ret = false;\n        for (let i = this._blocks.length - 1; i > -1; i--) {\n            if (!this._blocks[i]) {\n                if (this._moveBlock(i)) {\n                    ret = true;\n                    if (this.manager._enableStat)\n                        this.manager._stat.moveNum++;\n                }\n            }\n        }\n        this._holeNum = 0;\n        return ret;\n    }\n    clear(blockNum) {\n        this._blocks.forEach(block => block && block.destroy());\n        this._blocks.length = 0;\n        if (blockNum != undefined && blockNum > 0 && blockNum !== this._blockNum) {\n            this._blockNum = blockNum;\n            this._totalSize = this._blockSize * this._blockNum;\n            this.buffer = this.manager.createGPUBuffer(this._totalSize);\n            this.data = new ArrayBuffer(this._totalSize);\n        }\n        else {\n            this._blockNum = 0;\n            this._totalSize = 0;\n            this.buffer = null;\n            this.data = null;\n        }\n        this._needUpload.length = this._blockNum;\n        this._needUpload.fill(false);\n    }\n    _getBlockWithExpand() {\n        for (let i = this._blocks.length - 1; i > -1; i--) {\n            if (!this._blocks[i]) {\n                this._holeNum--;\n                return i;\n            }\n        }\n        if (this._blocks.length < this._blockNum)\n            return this._blocks.length;\n        else {\n            this._expandBuffer();\n            return this._blocks.length;\n        }\n    }\n    destroy() {\n        var _a;\n        if (!this._destroyed) {\n            this.clear();\n            (_a = this.buffer.destroy) !== null && _a !== void 0 ? _a : this.buffer.destroy();\n            this.manager.statisGPUMemory(-this._totalSize);\n            this._destroyed = true;\n            return true;\n        }\n        console.warn('UniformBufferCluster: object alreay destroyed!');\n        return false;\n    }\n}\nUniformBufferCluster._idCounter = 0;\n","import { UniformBufferCluster } from \"./UniformBufferCluster\";\nexport function roundUp(n, align) {\n    return (((n + align - 1) / align) | 0) * align;\n}\nexport function roundDown(n, align) {\n    const res = (((n + align - 1) / align) | 0) * align;\n    return res > n ? res - align : res;\n}\nexport class UBOStat {\n    constructor() {\n        this.moveNum = 0;\n        this.uploadNum = 0;\n        this.uploadByte = 0;\n        this.timeCostAvg = 0;\n        this.timeCostSum = 0;\n        this.timeCostCount = 0;\n    }\n}\nexport class UniformBufferManager {\n    constructor(useBigBuffer) {\n        this._destroyed = false;\n        this._needUpdateClusters = [];\n        this._removeHoleArray = [];\n        this._optimizeBufferPosArray = [];\n        this._useBigBuffer = true;\n        this.byteAlign = 256;\n        this.clusterMaxBlock = 256;\n        this.uploadThreshold = 200;\n        this.removeHoleThreshold = 10;\n        this._enableStat = true;\n        this.aloneBuffers = [];\n        this._useBigBuffer = useBigBuffer;\n        this._clustersAll = new Map();\n        this._clustersCur = new Map();\n        this._stat = new UBOStat();\n    }\n    _createBufferCluster(size, blockNum) {\n        return new UniformBufferCluster(size, blockNum, this);\n    }\n    _addCluster(size, blockNum = 16) {\n        const alignedSize = roundUp(size, this.byteAlign);\n        const cluster = this._createBufferCluster(alignedSize, blockNum);\n        const clusters = this._clustersAll.get(alignedSize);\n        if (clusters) {\n            clusters.push(cluster);\n            cluster._sn = clusters.length - 1;\n        }\n        else\n            this._clustersAll.set(alignedSize, [cluster]);\n        this._clustersCur.set(alignedSize, cluster);\n        return cluster;\n    }\n    startFrame() { }\n    endFrame() {\n        if (this._enableStat) {\n            this._stat.moveNum = 0;\n            this._stat.uploadNum = 0;\n            this._stat.uploadByte = 0;\n            this._stat.timeCostCount++;\n        }\n        if (this._useBigBuffer) {\n            if (this._removeHoleArray.length > 0) {\n                for (let i = this._removeHoleArray.length - 1; i > -1; i--)\n                    this._removeHoleArray[i].removeHole();\n                this._removeHoleArray.length = 0;\n            }\n            if (this._optimizeBufferPosArray.length > 0) {\n                for (let i = this._optimizeBufferPosArray.length - 1; i > -1; i--)\n                    this._optimizeBufferPosArray[i].optimize();\n                this._optimizeBufferPosArray.length = 0;\n            }\n        }\n    }\n    getBufferAlone(size, name) {\n        const alignedSize = roundUp(size, this.byteAlign);\n        this.statisGPUMemory(alignedSize);\n        return this.createGPUBuffer(alignedSize, name);\n    }\n    removeCluster(size, sn) {\n        var _a;\n        const alignedSize = roundUp(size, this.byteAlign);\n        if (sn < 0) {\n            this._clustersAll.delete(alignedSize);\n            this._clustersCur.delete(alignedSize);\n            return;\n        }\n        const cluster_sn = (_a = this._clustersCur.get(alignedSize)) === null || _a === void 0 ? void 0 : _a._sn;\n        const clusters = this._clustersAll.get(alignedSize);\n        if (clusters.length > sn) {\n            clusters.splice(sn, 1);\n            if (clusters.length === 0) {\n                this._clustersAll.delete(alignedSize);\n                this._clustersCur.delete(alignedSize);\n                return;\n            }\n            else {\n                for (let i = sn; i < clusters.length; i++)\n                    clusters[i]._sn--;\n            }\n        }\n        else\n            return;\n        if (cluster_sn !== undefined\n            && cluster_sn === sn) {\n            let usedNumMax = -1, usedNum = -1, index = -1;\n            for (let i = clusters.length - 1; i > -1; i--) {\n                usedNum = clusters[i].usedNum;\n                if (usedNum > usedNumMax\n                    && usedNum < this.clusterMaxBlock) {\n                    index = i;\n                    usedNumMax = usedNum;\n                }\n            }\n            if (index >= 0)\n                this._clustersCur.set(alignedSize, clusters[index]);\n            else\n                this._clustersCur.delete(alignedSize);\n        }\n    }\n    getBlock(size, user) {\n        const alignedSize = roundUp(size, this.byteAlign);\n        let cluster = this._clustersCur.get(alignedSize);\n        if (!cluster)\n            return this._addCluster(alignedSize).getBlock(size, user);\n        if (cluster.usedNum < this.clusterMaxBlock)\n            return cluster.getBlock(size, user);\n        cluster = null;\n        const clusters = this._clustersAll.get(alignedSize);\n        let usedNumMax = -1, usedNum = -1, index = -1;\n        for (let i = clusters.length - 1; i > 0; i--) {\n            usedNum = clusters[i].usedNum;\n            if (usedNum > usedNumMax\n                && usedNum < this.clusterMaxBlock) {\n                index = i;\n                usedNumMax = usedNum;\n            }\n        }\n        if (index >= 0) {\n            cluster = clusters[index];\n            this._clustersCur.set(alignedSize, cluster);\n        }\n        else\n            this._clustersCur.delete(alignedSize);\n        if (cluster)\n            return cluster.getBlock(size, user);\n        return this._addCluster(alignedSize).getBlock(size, user);\n    }\n    freeBlock(bb) {\n        const cluster = bb.cluster;\n        if (cluster) {\n            if (cluster.freeBlock(bb)) {\n                if (cluster.usedNum === 0)\n                    this.removeCluster(cluster._blockSize, cluster._sn);\n                return true;\n            }\n            return false;\n        }\n        return false;\n    }\n    upload() {\n        if (this._useBigBuffer) {\n            let t;\n            if (this._enableStat)\n                t = performance.now();\n            let cluster;\n            for (let i = this._needUpdateClusters.length - 1; i > -1; i--) {\n                cluster = this._needUpdateClusters[i];\n                cluster.upload();\n                cluster._inManagerUpdateArray = false;\n            }\n            this._needUpdateClusters.length = 0;\n            if (this._enableStat)\n                this.statisTimeCostAvg(performance.now() - t);\n        }\n    }\n    _addUpdateArray(cluster) {\n        if (!cluster._inManagerUpdateArray) {\n            this._needUpdateClusters.push(cluster);\n            cluster._inManagerUpdateArray = true;\n        }\n    }\n    _addRemoveHoleCluster(cluster) {\n        if (this._removeHoleArray.indexOf(cluster) === -1)\n            this._removeHoleArray.push(cluster);\n    }\n    _addOptimizeBufferPos(cluster) {\n        if (this._optimizeBufferPosArray.indexOf(cluster) === -1)\n            this._optimizeBufferPosArray.push(cluster);\n    }\n    clear() {\n        this._clustersAll.forEach(clusters => {\n            for (let i = clusters.length - 1; i > -1; i--)\n                clusters[i].clear();\n        });\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this.clear();\n            this._clustersAll.clear();\n            this._clustersCur.clear();\n            this._destroyed = true;\n            return true;\n        }\n        console.warn('UniformBufferManager: object alreay destroyed!');\n        return false;\n    }\n    createGPUBuffer(size, name) {\n    }\n    writeBuffer(buffer, data, offset, size) {\n    }\n    statisGPUMemory(bytes) {\n    }\n    statisTimeCostAvg(time) {\n        this._stat.timeCostSum += time;\n        if (this._stat.timeCostCount > 100) {\n            this._stat.timeCostAvg = ((this._stat.timeCostSum / this._stat.timeCostCount) * 10000 | 0) / 10;\n            this._stat.timeCostSum = 0;\n            this._stat.timeCostCount = 0;\n        }\n    }\n    statisUpload(count, bytes) {\n        this._stat.uploadNum += count;\n        this._stat.uploadByte += bytes;\n    }\n}\n","import { roundUp } from \"./UniformBufferManager\";\nexport class UniformBufferAlone {\n    constructor(size, manager, user) {\n        this._destroyed = false;\n        this.uploadNum = 0;\n        this.data = new ArrayBuffer(size);\n        this.buffer = manager.getBufferAlone(size);\n        this._manager = manager;\n        this._size = size;\n        this._alignedSize = roundUp(size, manager.byteAlign);\n        this.user = user;\n        manager.aloneBuffers.push(this);\n    }\n    upload() {\n        let t;\n        if (this._manager._enableStat)\n            t = performance.now();\n        this.uploadNum++;\n        this._manager.writeBuffer(this.buffer, this.data, 0, this._size);\n        if (this._manager._enableStat) {\n            this._manager.statisUpload(1, this._size);\n            this._manager.statisTimeCostAvg(performance.now() - t);\n        }\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this.data = null;\n            if (this.buffer.destroy)\n                this.buffer.destroy();\n            this._manager.statisGPUMemory(-this._size);\n            this._manager.aloneBuffers.splice(this._manager.aloneBuffers.indexOf(this), 1);\n            this._destroyed = true;\n            return true;\n        }\n        console.warn('UniformBufferAlone: object alreay destroyed!');\n        return false;\n    }\n}\n","import { UniformBufferAlone } from \"./UniformBufferAlone\";\nexport class UniformBufferUser {\n    constructor(name, size, manager, data) {\n        this.destroyed = false;\n        this.name = name;\n        this._strId = '';\n        this._items = new Map();\n        this._itemNum = 0;\n        this.data = data;\n        this._size = size;\n        this.manager = manager;\n        this.needUpload = false;\n        if (manager._useBigBuffer) {\n            this.bufferBlock = manager.getBlock(size, this);\n            this.offset = this.bufferBlock.offset;\n        }\n        else\n            this.bufferAlone = this._createBufferAlone(size, manager);\n    }\n    _createBufferAlone(size, manager) {\n        return new UniformBufferAlone(size, manager, this);\n    }\n    updateOver() {\n        this.needUpload = false;\n    }\n    notifyGPUBufferChange() {\n        const offset = this.bufferBlock.offset - this.offset;\n        this.offset = this.bufferBlock.offset;\n        this._items.forEach(item => {\n            const tac = UniformBufferUser._typeArray(item.type);\n            item.view = new tac(this.bufferBlock.cluster.data, item.view.byteOffset + offset, item.size / tac.BYTES_PER_ELEMENT);\n        });\n        this.clearGPUBufferBind();\n        this.needUpload = true;\n    }\n    clearGPUBufferBind() { }\n    addUniform(id, name, type, offset, align, size, elements, count) {\n        if (this._items.has(id))\n            return;\n        this._items.set(id, this._getUniformItem(name, UniformBufferUser._typeArray(type), type, offset, align, size, elements, count));\n        if (this._strId.length > 0)\n            this._strId += '|';\n        this._strId += id;\n        this._itemNum++;\n    }\n    setUniformData(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            this.needUpload = true;\n            if (item.count == 1) {\n                switch (item.type) {\n                    case 'int':\n                    case 'float':\n                        item.view[0] = data;\n                        break;\n                    case 'vec2':\n                        item.view[0] = data.x;\n                        item.view[1] = data.y;\n                        break;\n                    case 'vec3':\n                        item.view[0] = data.x;\n                        item.view[1] = data.y;\n                        item.view[2] = data.z;\n                        break;\n                    case 'vec4':\n                        item.view[0] = data.x;\n                        item.view[1] = data.y;\n                        item.view[2] = data.z;\n                        item.view[3] = data.w;\n                        break;\n                    case 'mat3':\n                        for (let i = 0; i < 3; i++) {\n                            item.view[i * 4 + 0] = data.elements[i * 3 + 0];\n                            item.view[i * 4 + 1] = data.elements[i * 3 + 1];\n                            item.view[i * 4 + 2] = data.elements[i * 3 + 2];\n                        }\n                        break;\n                    case 'mat4':\n                        item.view.set(data.elements);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            else {\n                const arraySize = item.count * item.elements;\n                const alignElements = item.size / item.count / item.view.BYTES_PER_ELEMENT;\n                for (let i = 0, j = 0; i < arraySize; i += item.elements, j += alignElements)\n                    item.view.set(data.subarray(i, i + item.elements), j);\n            }\n        }\n    }\n    setBool(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            item.view[0] = data ? 1 : 0;\n            this.needUpload = true;\n        }\n    }\n    setBoolArray(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\n                item.view[i] = data[i] ? 1 : 0;\n            this.needUpload = true;\n        }\n    }\n    setInt(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            item.view[0] = data;\n            this.needUpload = true;\n        }\n    }\n    setIntArray(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\n                item.view[i] = data[i];\n            this.needUpload = true;\n        }\n    }\n    setFloat(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            item.view[0] = data;\n            this.needUpload = true;\n        }\n    }\n    setFloatArray(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\n                item.view[i] = data[i];\n            this.needUpload = true;\n        }\n    }\n    setVector2(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            item.view[0] = data.x;\n            item.view[1] = data.y;\n            this.needUpload = true;\n        }\n    }\n    setVector2Array(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++) {\n                item.view[i * 2 + 0] = data[i].x;\n                item.view[i * 2 + 1] = data[i].y;\n            }\n            this.needUpload = true;\n        }\n    }\n    setVector3(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            item.view[0] = data.x;\n            item.view[1] = data.y;\n            item.view[2] = data.z;\n            this.needUpload = true;\n        }\n    }\n    setVector3Array(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++) {\n                item.view[i * 4 + 0] = data[i].x;\n                item.view[i * 4 + 1] = data[i].y;\n                item.view[i * 4 + 2] = data[i].z;\n            }\n            this.needUpload = true;\n        }\n    }\n    setVector4(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            item.view[0] = data.x;\n            item.view[1] = data.y;\n            item.view[2] = data.z;\n            item.view[3] = data.w;\n            this.needUpload = true;\n        }\n    }\n    setVector4Array(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++) {\n                item.view[i * 4 + 0] = data[i].x;\n                item.view[i * 4 + 1] = data[i].y;\n                item.view[i * 4 + 2] = data[i].z;\n                item.view[i * 4 + 3] = data[i].w;\n            }\n            this.needUpload = true;\n        }\n    }\n    setMatrix3x3(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0; i < 3; i++) {\n                item.view[i * 4 + 0] = data.elements[i * 3 + 0];\n                item.view[i * 4 + 1] = data.elements[i * 3 + 1];\n                item.view[i * 4 + 2] = data.elements[i * 3 + 2];\n            }\n            this.needUpload = true;\n        }\n    }\n    setMatrix3x3Array(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let j = 0, len = Math.min(item.count, data.length); j < len; j++) {\n                for (let i = 0; i < 3; i++) {\n                    item.view[j * 16 + i * 4 + 0] = data[j].elements[i * 3 + 0];\n                    item.view[j * 16 + i * 4 + 1] = data[j].elements[i * 3 + 1];\n                    item.view[j * 16 + i * 4 + 2] = data[j].elements[i * 3 + 2];\n                }\n            }\n            this.needUpload = true;\n        }\n    }\n    setMatrix4x4(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            item.view.set(data.elements);\n            this.needUpload = true;\n        }\n    }\n    setMatrix4x4Array(id, data) {\n        const item = this._items.get(id);\n        if (item) {\n            for (let i = 0, len = Math.min(item.count, data.length); i < len; i++)\n                item.view.set(data[i].elements, i * 16);\n            this.needUpload = true;\n        }\n    }\n    setBuffer(id, data) {\n        this.setUniformData(id, data);\n    }\n    getUniform(id) {\n        return this._items.get(id);\n    }\n    hasUniform(id) {\n        return this._items.has(id);\n    }\n    isMe(strId) {\n        return this._strId === strId;\n    }\n    upload() {\n        if (this.needUpload) {\n            if (this.manager._useBigBuffer)\n                this.bufferBlock.needUpload();\n            else\n                this.bufferAlone.upload();\n            this.needUpload = false;\n        }\n    }\n    clear() {\n        if (this.manager._useBigBuffer)\n            new Uint8Array(this.bufferBlock.cluster.data).fill(0, this.bufferBlock.offset, this.bufferBlock.offset + this.bufferBlock.size);\n        else\n            new Uint8Array(this.bufferAlone.data).fill(0);\n        this._strId = '';\n        this._items.clear();\n        this._itemNum = 0;\n        this.needUpload = false;\n    }\n    destroy() {\n        if (!this.destroyed) {\n            if (this.manager._useBigBuffer)\n                this.manager.freeBlock(this.bufferBlock);\n            else\n                this.bufferAlone.destroy();\n            this.destroyed = true;\n            return true;\n        }\n        console.warn('UniformBufferUser: object alreay destroyed!');\n        return false;\n    }\n    _getUniformItem(name, tac, type, offset, align, size, elements, count) {\n        let view;\n        if (this.manager._useBigBuffer)\n            view = new tac(this.bufferBlock.cluster.data, this.bufferBlock.offset + offset, size / tac.BYTES_PER_ELEMENT);\n        else\n            view = new tac(this.bufferAlone.data, offset, size / tac.BYTES_PER_ELEMENT);\n        return { name, view, type, align, size, elements, count };\n    }\n    static _typeArray(type) {\n        switch (type) {\n            case 'int':\n                return Int32Array;\n            case 'float':\n            case 'vec2':\n            case 'vec3':\n            case 'vec4':\n            case 'mat3':\n            case 'mat4':\n                return Float32Array;\n            default:\n                return Float32Array;\n        }\n    }\n}\n","export class ShaderDefine {\n    constructor(index, value) {\n        this._index = index;\n        this._value = value;\n    }\n}\n","export class KeyframeNode {\n    constructor() {\n        this._ownerPath = [];\n        this._propertys = [];\n        this._keyFrames = [];\n    }\n    get ownerPathCount() {\n        return this._ownerPath.length;\n    }\n    get propertyCount() {\n        return this._propertys.length;\n    }\n    get keyFramesCount() {\n        return this._keyFrames.length;\n    }\n    _setOwnerPathCount(value) {\n        this._ownerPath.length = value;\n    }\n    _setOwnerPathByIndex(index, value) {\n        this._ownerPath[index] = value;\n    }\n    _joinOwnerPath(sep) {\n        return this._ownerPath.join(sep);\n    }\n    _setPropertyCount(value) {\n        this._propertys.length = value;\n    }\n    _setPropertyByIndex(index, value) {\n        this._propertys[index] = value;\n    }\n    _joinProperty(sep) {\n        return this._propertys.join(sep);\n    }\n    _setKeyframeCount(value) {\n        this._keyFrames.length = value;\n    }\n    _setKeyframeByIndex(index, value) {\n        this._keyFrames[index] = value;\n    }\n    getOwnerPathByIndex(index) {\n        return this._ownerPath[index];\n    }\n    getPropertyByIndex(index) {\n        return this._propertys[index];\n    }\n    getKeyframeByIndex(index) {\n        return this._keyFrames[index];\n    }\n}\n","export class AnimationEvent {\n    constructor() {\n    }\n}\n","import { KeyframeNode } from \"./KeyframeNode\";\nimport { AnimationEvent } from \"./AnimationEvent\";\nimport { FloatKeyframe } from \"../../maths/FloatKeyframe\";\nimport { QuaternionKeyframe } from \"../../maths/QuaternionKeyframe\";\nimport { Vector3Keyframe } from \"../../maths/Vector3Keyframe\";\nexport class AnimationClipParser03 {\n    static READ_DATA() {\n        AnimationClipParser03._DATA.offset = AnimationClipParser03._reader.getUint32();\n        AnimationClipParser03._DATA.size = AnimationClipParser03._reader.getUint32();\n    }\n    static READ_BLOCK() {\n        var count = AnimationClipParser03._BLOCK.count = AnimationClipParser03._reader.getUint16();\n        var blockStarts = AnimationClipParser03._BLOCK.blockStarts = [];\n        var blockLengths = AnimationClipParser03._BLOCK.blockLengths = [];\n        for (var i = 0; i < count; i++) {\n            blockStarts.push(AnimationClipParser03._reader.getUint32());\n            blockLengths.push(AnimationClipParser03._reader.getUint32());\n        }\n    }\n    static READ_STRINGS() {\n        var offset = AnimationClipParser03._reader.getUint32();\n        var count = AnimationClipParser03._reader.getUint16();\n        var prePos = AnimationClipParser03._reader.pos;\n        AnimationClipParser03._reader.pos = offset + AnimationClipParser03._DATA.offset;\n        for (var i = 0; i < count; i++)\n            AnimationClipParser03._strings[i] = AnimationClipParser03._reader.readUTFString();\n        AnimationClipParser03._reader.pos = prePos;\n    }\n    static parse(clip, reader) {\n        AnimationClipParser03._animationClip = clip;\n        AnimationClipParser03._reader = reader;\n        AnimationClipParser03.READ_DATA();\n        AnimationClipParser03.READ_BLOCK();\n        AnimationClipParser03.READ_STRINGS();\n        for (var i = 0, n = AnimationClipParser03._BLOCK.count; i < n; i++) {\n            var index = reader.getUint16();\n            var blockName = AnimationClipParser03._strings[index];\n            var fn = AnimationClipParser03[\"READ_\" + blockName];\n            if (fn == null)\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\n            else\n                fn.call(null);\n        }\n    }\n    static READ_ANIMATIONS() {\n        var i, j;\n        var node;\n        var reader = AnimationClipParser03._reader;\n        var startTimeTypes = [];\n        var startTimeTypeCount = reader.getUint16();\n        startTimeTypes.length = startTimeTypeCount;\n        for (i = 0; i < startTimeTypeCount; i++)\n            startTimeTypes[i] = reader.getFloat32();\n        var clip = AnimationClipParser03._animationClip;\n        clip.name = AnimationClipParser03._strings[reader.getUint16()];\n        var clipDur = clip._duration = reader.getFloat32();\n        clip.islooping = !!reader.getByte();\n        clip._frameRate = reader.getInt16();\n        var nodeCount = reader.getInt16();\n        var nodes = clip._nodes;\n        nodes.count = nodeCount;\n        var nodesMap = clip._nodesMap = {};\n        var nodesDic = clip._nodesDic = {};\n        for (i = 0; i < nodeCount; i++) {\n            node = new KeyframeNode();\n            nodes.setNodeByIndex(i, node);\n            node._indexInList = i;\n            var type = node.type = reader.getUint8();\n            var pathLength = reader.getUint16();\n            node._setOwnerPathCount(pathLength);\n            for (j = 0; j < pathLength; j++)\n                node._setOwnerPathByIndex(j, AnimationClipParser03._strings[reader.getUint16()]);\n            var nodePath = node._joinOwnerPath(\"/\");\n            var mapArray = nodesMap[nodePath];\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\n            mapArray.push(node);\n            node.propertyOwner = AnimationClipParser03._strings[reader.getUint16()];\n            var propertyLength = reader.getUint16();\n            node._setPropertyCount(propertyLength);\n            for (j = 0; j < propertyLength; j++)\n                node._setPropertyByIndex(j, AnimationClipParser03._strings[reader.getUint16()]);\n            var fullPath = nodePath + \".\" + node.propertyOwner + \".\" + node._joinProperty(\".\");\n            nodesDic[fullPath] = node;\n            node.fullPath = fullPath;\n            var keyframeCount = reader.getUint16();\n            node._setKeyframeCount(keyframeCount);\n            for (j = 0; j < keyframeCount; j++) {\n                switch (type) {\n                    case 0:\n                        var floatKeyframe = new FloatKeyframe();\n                        node._setKeyframeByIndex(j, floatKeyframe);\n                        floatKeyframe.time = startTimeTypes[reader.getUint16()];\n                        floatKeyframe.inTangent = reader.getFloat32();\n                        floatKeyframe.outTangent = reader.getFloat32();\n                        floatKeyframe.value = reader.getFloat32();\n                        break;\n                    case 1:\n                    case 3:\n                    case 4:\n                        var floatArrayKeyframe = new Vector3Keyframe();\n                        node._setKeyframeByIndex(j, floatArrayKeyframe);\n                        floatArrayKeyframe.time = startTimeTypes[reader.getUint16()];\n                        var inTangent = floatArrayKeyframe.inTangent;\n                        var outTangent = floatArrayKeyframe.outTangent;\n                        var value = floatArrayKeyframe.value;\n                        inTangent.x = reader.getFloat32();\n                        inTangent.y = reader.getFloat32();\n                        inTangent.z = reader.getFloat32();\n                        outTangent.x = reader.getFloat32();\n                        outTangent.y = reader.getFloat32();\n                        outTangent.z = reader.getFloat32();\n                        value.x = reader.getFloat32();\n                        value.y = reader.getFloat32();\n                        value.z = reader.getFloat32();\n                        break;\n                    case 2:\n                        var quaArrayKeyframe = new QuaternionKeyframe();\n                        node._setKeyframeByIndex(j, quaArrayKeyframe);\n                        quaArrayKeyframe.time = startTimeTypes[reader.getUint16()];\n                        var inTangentQua = quaArrayKeyframe.inTangent;\n                        var outTangentQua = quaArrayKeyframe.outTangent;\n                        var valueQua = quaArrayKeyframe.value;\n                        inTangentQua.x = reader.getFloat32();\n                        inTangentQua.y = reader.getFloat32();\n                        inTangentQua.z = reader.getFloat32();\n                        inTangentQua.w = reader.getFloat32();\n                        outTangentQua.x = reader.getFloat32();\n                        outTangentQua.y = reader.getFloat32();\n                        outTangentQua.z = reader.getFloat32();\n                        outTangentQua.w = reader.getFloat32();\n                        valueQua.x = reader.getFloat32();\n                        valueQua.y = reader.getFloat32();\n                        valueQua.z = reader.getFloat32();\n                        valueQua.w = reader.getFloat32();\n                        break;\n                    default:\n                        throw new Error(\"AnimationClipParser03:unknown type.\");\n                }\n            }\n        }\n        var eventCount = reader.getUint16();\n        for (i = 0; i < eventCount; i++) {\n            var event = new AnimationEvent();\n            event.time = Math.min(clipDur, reader.getFloat32());\n            event.eventName = AnimationClipParser03._strings[reader.getUint16()];\n            var params = [];\n            var paramCount = reader.getUint16();\n            (paramCount > 0) && (event.params = params = []);\n            for (j = 0; j < paramCount; j++) {\n                var eventType = reader.getByte();\n                switch (eventType) {\n                    case 0:\n                        params.push(!!reader.getByte());\n                        break;\n                    case 1:\n                        params.push(reader.getInt32());\n                        break;\n                    case 2:\n                        params.push(reader.getFloat32());\n                        break;\n                    case 3:\n                        params.push(AnimationClipParser03._strings[reader.getUint16()]);\n                        break;\n                    default:\n                        throw new Error(\"unknown type.\");\n                }\n            }\n            clip.addEvent(event);\n        }\n    }\n}\nAnimationClipParser03._strings = [];\nAnimationClipParser03._BLOCK = { count: 0 };\nAnimationClipParser03._DATA = { offset: 0, size: 0 };\n","export var KeyFrameValueType;\n(function (KeyFrameValueType) {\n    KeyFrameValueType[KeyFrameValueType[\"None\"] = -1] = \"None\";\n    KeyFrameValueType[KeyFrameValueType[\"Float\"] = 0] = \"Float\";\n    KeyFrameValueType[KeyFrameValueType[\"Position\"] = 1] = \"Position\";\n    KeyFrameValueType[KeyFrameValueType[\"Rotation\"] = 2] = \"Rotation\";\n    KeyFrameValueType[KeyFrameValueType[\"Scale\"] = 3] = \"Scale\";\n    KeyFrameValueType[KeyFrameValueType[\"RotationEuler\"] = 4] = \"RotationEuler\";\n    KeyFrameValueType[KeyFrameValueType[\"Vector2\"] = 5] = \"Vector2\";\n    KeyFrameValueType[KeyFrameValueType[\"Vector3\"] = 6] = \"Vector3\";\n    KeyFrameValueType[KeyFrameValueType[\"Vector4\"] = 7] = \"Vector4\";\n    KeyFrameValueType[KeyFrameValueType[\"Color\"] = 8] = \"Color\";\n    KeyFrameValueType[KeyFrameValueType[\"Boolean\"] = 9] = \"Boolean\";\n})(KeyFrameValueType || (KeyFrameValueType = {}));\nexport class KeyframeNodeOwner {\n    constructor() {\n        this.indexInList = -1;\n        this.referenceCount = 0;\n        this.updateMark = -1;\n        this.type = -1;\n        this.fullPath = null;\n        this.nodePath = null;\n        this.propertyOwner = null;\n        this.property = null;\n        this.defaultValue = null;\n        this.value = null;\n        this.crossFixedValue = null;\n        this.isMaterial = false;\n    }\n    saveCrossFixedValue() {\n        var pro = this.propertyOwner;\n        if (pro) {\n            switch (this.type) {\n                case 0:\n                    this.crossFixedValue = this.value;\n                    break;\n                case 1:\n                case 3:\n                case 4:\n                    this.value.cloneTo(this.crossFixedValue);\n                    break;\n                case 2:\n                    this.value.cloneTo(this.crossFixedValue);\n                    break;\n                default:\n                    throw new Error(\"Animator:unknown type.\");\n            }\n        }\n    }\n    animatorDataSetCallBack() {\n        let fn = this.callBackOwner[this.callbackFun];\n        fn.apply(this.callBackOwner, this.callParams);\n    }\n    getCallbackNode() {\n        if (this.propertyOwner && this.callbackFunData) {\n            let funPropertys = this.callbackFunData.split(\".\");\n            this.callBackOwner = this.propertyOwner;\n            for (let i = 0, n = funPropertys.length - 1; i < n; i++) {\n                this.callBackOwner = this.callBackOwner[funPropertys[i]];\n            }\n            this.callbackFun = funPropertys[funPropertys.length - 1];\n        }\n    }\n}\n","import { KeyframeNode } from \"./KeyframeNode\";\nimport { AnimationEvent } from \"./AnimationEvent\";\nimport { HalfFloatUtils } from \"../../utils/HalfFloatUtils\";\nimport { KeyFrameValueType } from \"../component/Animator/KeyframeNodeOwner\";\nimport { FloatKeyframe } from \"../../maths/FloatKeyframe\";\nimport { WeightedMode } from \"../../maths/Keyframe\";\nimport { QuaternionKeyframe } from \"../../maths/QuaternionKeyframe\";\nimport { Vector2Keyframe } from \"../../maths/Vector2Keyframe\";\nimport { Vector3Keyframe } from \"../../maths/Vector3Keyframe\";\nimport { Vector4Keyframe } from \"../../maths/Vector4Keyframe\";\nimport { BooleanKeyframe } from \"../../maths/BooleanKeyframe\";\nexport class AnimationClipParser04 {\n    static READ_DATA() {\n        AnimationClipParser04._DATA.offset = AnimationClipParser04._reader.getUint32();\n        AnimationClipParser04._DATA.size = AnimationClipParser04._reader.getUint32();\n    }\n    static READ_BLOCK() {\n        var count = AnimationClipParser04._BLOCK.count = AnimationClipParser04._reader.getUint16();\n        var blockStarts = AnimationClipParser04._BLOCK.blockStarts = [];\n        var blockLengths = AnimationClipParser04._BLOCK.blockLengths = [];\n        for (var i = 0; i < count; i++) {\n            blockStarts.push(AnimationClipParser04._reader.getUint32());\n            blockLengths.push(AnimationClipParser04._reader.getUint32());\n        }\n    }\n    static READ_STRINGS() {\n        var offset = AnimationClipParser04._reader.getUint32();\n        var count = AnimationClipParser04._reader.getUint16();\n        var prePos = AnimationClipParser04._reader.pos;\n        AnimationClipParser04._reader.pos = offset + AnimationClipParser04._DATA.offset;\n        for (var i = 0; i < count; i++)\n            AnimationClipParser04._strings[i] = AnimationClipParser04._reader.readUTFString();\n        AnimationClipParser04._reader.pos = prePos;\n    }\n    static parse(clip, reader, version) {\n        AnimationClipParser04._animationClip = clip;\n        AnimationClipParser04._reader = reader;\n        AnimationClipParser04._version = version;\n        AnimationClipParser04.READ_DATA();\n        AnimationClipParser04.READ_BLOCK();\n        AnimationClipParser04.READ_STRINGS();\n        for (var i = 0, n = AnimationClipParser04._BLOCK.count; i < n; i++) {\n            var index = reader.getUint16();\n            var blockName = AnimationClipParser04._strings[index];\n            var fn = AnimationClipParser04[\"READ_\" + blockName];\n            if (fn == null)\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\n            else\n                fn.call(null);\n        }\n        AnimationClipParser04._version = null;\n        AnimationClipParser04._reader = null;\n        AnimationClipParser04._animationClip = null;\n    }\n    static READ_ANIMATIONS() {\n        var i, j;\n        var node;\n        var reader = AnimationClipParser04._reader;\n        var startTimeTypes = [];\n        var startTimeTypeCount = reader.getUint16();\n        startTimeTypes.length = startTimeTypeCount;\n        for (i = 0; i < startTimeTypeCount; i++)\n            startTimeTypes[i] = reader.getFloat32();\n        var clip = AnimationClipParser04._animationClip;\n        clip.name = AnimationClipParser04._strings[reader.getUint16()];\n        var clipDur = clip._duration = reader.getFloat32();\n        clip.islooping = !!reader.getByte();\n        clip._frameRate = reader.getInt16();\n        var nodeCount = reader.getInt16();\n        var nodes = clip._nodes;\n        nodes.count = nodeCount;\n        var nodesMap = clip._nodesMap = {};\n        var nodesDic = clip._nodesDic = {};\n        for (i = 0; i < nodeCount; i++) {\n            node = new KeyframeNode();\n            if (\"LAYAANIMATION:WEIGHT_05\" == AnimationClipParser04._version) {\n                if (1 == reader.getByte()) {\n                    node.propertyChangePath = AnimationClipParser04._strings[reader.getUint16()];\n                }\n                if (1 == reader.getByte()) {\n                    node.callbackFunData = AnimationClipParser04._strings[reader.getUint16()];\n                }\n                let paramLen = reader.getUint8();\n                let callParms = null;\n                for (j = 0; j < paramLen; j++) {\n                    if (null == callParms) {\n                        callParms = [];\n                    }\n                    callParms.push(AnimationClipParser04._strings[reader.getUint16()]);\n                }\n                node.callParams = callParms;\n            }\n            nodes.setNodeByIndex(i, node);\n            node._indexInList = i;\n            var type = node.type = reader.getUint8();\n            var pathLength = reader.getUint16();\n            node._setOwnerPathCount(pathLength);\n            for (j = 0; j < pathLength; j++)\n                node._setOwnerPathByIndex(j, AnimationClipParser04._strings[reader.getUint16()]);\n            var nodePath = node._joinOwnerPath(\"/\");\n            var mapArray = nodesMap[nodePath];\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\n            mapArray.push(node);\n            node.propertyOwner = AnimationClipParser04._strings[reader.getUint16()];\n            var propertyLength = reader.getUint16();\n            node._setPropertyCount(propertyLength);\n            for (j = 0; j < propertyLength; j++)\n                node._setPropertyByIndex(j, AnimationClipParser04._strings[reader.getUint16()]);\n            var fullPath = nodePath + \".\" + node.propertyOwner + \".\" + node._joinProperty(\".\");\n            nodesDic[fullPath] = node;\n            node.fullPath = fullPath;\n            node.nodePath = nodePath;\n            var keyframeCount = reader.getUint16();\n            node._setKeyframeCount(keyframeCount);\n            switch (AnimationClipParser04._version) {\n                case \"LAYAANIMATION:04\":\n                    for (j = 0; j < keyframeCount; j++) {\n                        switch (type) {\n                            case KeyFrameValueType.Float:\n                                var floatKeyframe = new FloatKeyframe();\n                                node._setKeyframeByIndex(j, floatKeyframe);\n                                floatKeyframe.time = startTimeTypes[reader.getUint16()];\n                                floatKeyframe.inTangent = reader.getFloat32();\n                                floatKeyframe.outTangent = reader.getFloat32();\n                                floatKeyframe.value = reader.getFloat32();\n                                break;\n                            case KeyFrameValueType.Position:\n                            case KeyFrameValueType.Scale:\n                            case KeyFrameValueType.RotationEuler:\n                            case KeyFrameValueType.Vector3:\n                                var floatArrayKeyframe = new Vector3Keyframe();\n                                node._setKeyframeByIndex(j, floatArrayKeyframe);\n                                floatArrayKeyframe.time = startTimeTypes[reader.getUint16()];\n                                var inTangent = floatArrayKeyframe.inTangent;\n                                var outTangent = floatArrayKeyframe.outTangent;\n                                var value = floatArrayKeyframe.value;\n                                inTangent.x = reader.getFloat32();\n                                inTangent.y = reader.getFloat32();\n                                inTangent.z = reader.getFloat32();\n                                outTangent.x = reader.getFloat32();\n                                outTangent.y = reader.getFloat32();\n                                outTangent.z = reader.getFloat32();\n                                value.x = reader.getFloat32();\n                                value.y = reader.getFloat32();\n                                value.z = reader.getFloat32();\n                                break;\n                            case KeyFrameValueType.Rotation:\n                                var quaternionKeyframe = new QuaternionKeyframe();\n                                node._setKeyframeByIndex(j, quaternionKeyframe);\n                                quaternionKeyframe.time = startTimeTypes[reader.getUint16()];\n                                var inTangentQua = quaternionKeyframe.inTangent;\n                                var outTangentQua = quaternionKeyframe.outTangent;\n                                var valueQua = quaternionKeyframe.value;\n                                inTangentQua.x = reader.getFloat32();\n                                inTangentQua.y = reader.getFloat32();\n                                inTangentQua.z = reader.getFloat32();\n                                inTangentQua.w = reader.getFloat32();\n                                outTangentQua.x = reader.getFloat32();\n                                outTangentQua.y = reader.getFloat32();\n                                outTangentQua.z = reader.getFloat32();\n                                outTangentQua.w = reader.getFloat32();\n                                valueQua.x = reader.getFloat32();\n                                valueQua.y = reader.getFloat32();\n                                valueQua.z = reader.getFloat32();\n                                valueQua.w = reader.getFloat32();\n                                break;\n                            case KeyFrameValueType.Vector2:\n                                var vec2Keyfram = new Vector2Keyframe();\n                                node._setKeyframeByIndex(j, vec2Keyfram);\n                                vec2Keyfram.time = startTimeTypes[reader.getUint16()];\n                                var inTangentV2 = vec2Keyfram.inTangent;\n                                var outTangentV2 = vec2Keyfram.outTangent;\n                                var valueV2 = vec2Keyfram.value;\n                                inTangentV2.x = reader.getFloat32();\n                                inTangentV2.y = reader.getFloat32();\n                                outTangentV2.x = reader.getFloat32();\n                                outTangentV2.y = reader.getFloat32();\n                                valueV2.x = reader.getFloat32();\n                                valueV2.y = reader.getFloat32();\n                                break;\n                            case KeyFrameValueType.Vector4:\n                            case KeyFrameValueType.Color:\n                                var vec4Keyfram = new Vector4Keyframe();\n                                node._setKeyframeByIndex(j, vec4Keyfram);\n                                vec4Keyfram.time = startTimeTypes[reader.getUint16()];\n                                var inTangentV4 = vec4Keyfram.inTangent;\n                                var outTangentV4 = vec4Keyfram.outTangent;\n                                var valueV4 = vec4Keyfram.value;\n                                inTangentV4.x = reader.getFloat32();\n                                inTangentV4.y = reader.getFloat32();\n                                inTangentV4.z = reader.getFloat32();\n                                inTangentV4.w = reader.getFloat32();\n                                outTangentV4.x = reader.getFloat32();\n                                outTangentV4.y = reader.getFloat32();\n                                outTangentV4.z = reader.getFloat32();\n                                outTangentV4.w = reader.getFloat32();\n                                valueV4.x = reader.getFloat32();\n                                valueV4.y = reader.getFloat32();\n                                valueV4.z = reader.getFloat32();\n                                valueV4.w = reader.getFloat32();\n                                break;\n                            default:\n                                throw new Error(\"AnimationClipParser04:unknown type.\");\n                        }\n                    }\n                    break;\n                case \"LAYAANIMATION:WEIGHT_04\":\n                case \"LAYAANIMATION:WEIGHT_05\":\n                    for (j = 0; j < keyframeCount; j++) {\n                        let isWeight = 1;\n                        switch (type) {\n                            case KeyFrameValueType.Boolean:\n                                let booleanKeyframe = new BooleanKeyframe();\n                                node._setKeyframeByIndex(j, booleanKeyframe);\n                                booleanKeyframe.time = startTimeTypes[reader.getUint16()];\n                                booleanKeyframe.value = reader.getByte() == 1;\n                                break;\n                            case KeyFrameValueType.Float:\n                                var floatKeyframe = new FloatKeyframe();\n                                node._setKeyframeByIndex(j, floatKeyframe);\n                                floatKeyframe.time = startTimeTypes[reader.getUint16()];\n                                floatKeyframe.inTangent = reader.getFloat32();\n                                floatKeyframe.outTangent = reader.getFloat32();\n                                floatKeyframe.value = reader.getFloat32();\n                                floatKeyframe.weightedMode = reader.getUint8();\n                                if (\"LAYAANIMATION:WEIGHT_05\" == AnimationClipParser04._version) {\n                                    if (WeightedMode.In == floatKeyframe.weightedMode || WeightedMode.Both == floatKeyframe.weightedMode) {\n                                        floatKeyframe.inWeight = reader.getFloat32();\n                                    }\n                                    if (WeightedMode.Out == floatKeyframe.weightedMode || WeightedMode.Both == floatKeyframe.weightedMode) {\n                                        floatKeyframe.outWeight = reader.getFloat32();\n                                    }\n                                }\n                                else {\n                                    floatKeyframe.inWeight = reader.getFloat32();\n                                    floatKeyframe.outWeight = reader.getFloat32();\n                                }\n                                break;\n                            case KeyFrameValueType.Position:\n                            case KeyFrameValueType.Scale:\n                            case KeyFrameValueType.RotationEuler:\n                            case KeyFrameValueType.Vector3:\n                                var floatArrayKeyframe = new Vector3Keyframe(true);\n                                node._setKeyframeByIndex(j, floatArrayKeyframe);\n                                floatArrayKeyframe.time = startTimeTypes[reader.getUint16()];\n                                var inTangent = floatArrayKeyframe.inTangent;\n                                var outTangent = floatArrayKeyframe.outTangent;\n                                var value = floatArrayKeyframe.value;\n                                let weidhtMode = floatArrayKeyframe.weightedMode;\n                                let inWeight = floatArrayKeyframe.inWeight;\n                                let outWeight = floatArrayKeyframe.outWeight;\n                                inTangent.x = reader.getFloat32();\n                                inTangent.y = reader.getFloat32();\n                                inTangent.z = reader.getFloat32();\n                                outTangent.x = reader.getFloat32();\n                                outTangent.y = reader.getFloat32();\n                                outTangent.z = reader.getFloat32();\n                                value.x = reader.getFloat32();\n                                value.y = reader.getFloat32();\n                                value.z = reader.getFloat32();\n                                if (\"LAYAANIMATION:WEIGHT_05\" == AnimationClipParser04._version) {\n                                    isWeight = reader.getByte();\n                                }\n                                if (1 == isWeight) {\n                                    weidhtMode.x = reader.getUint8();\n                                    weidhtMode.y = reader.getUint8();\n                                    weidhtMode.z = reader.getUint8();\n                                    inWeight.x = reader.getFloat32();\n                                    inWeight.y = reader.getFloat32();\n                                    inWeight.z = reader.getFloat32();\n                                    outWeight.x = reader.getFloat32();\n                                    outWeight.y = reader.getFloat32();\n                                    outWeight.z = reader.getFloat32();\n                                }\n                                break;\n                            case KeyFrameValueType.Rotation:\n                                var quaternionKeyframe = new QuaternionKeyframe(true);\n                                node._setKeyframeByIndex(j, quaternionKeyframe);\n                                quaternionKeyframe.time = startTimeTypes[reader.getUint16()];\n                                var inTangentQua = quaternionKeyframe.inTangent;\n                                var outTangentQua = quaternionKeyframe.outTangent;\n                                var valueQua = quaternionKeyframe.value;\n                                let weightModeV4 = quaternionKeyframe.weightedMode;\n                                let inWeightQua = quaternionKeyframe.inWeight;\n                                let outWeightQua = quaternionKeyframe.outWeight;\n                                inTangentQua.x = reader.getFloat32();\n                                inTangentQua.y = reader.getFloat32();\n                                inTangentQua.z = reader.getFloat32();\n                                inTangentQua.w = reader.getFloat32();\n                                outTangentQua.x = reader.getFloat32();\n                                outTangentQua.y = reader.getFloat32();\n                                outTangentQua.z = reader.getFloat32();\n                                outTangentQua.w = reader.getFloat32();\n                                valueQua.x = reader.getFloat32();\n                                valueQua.y = reader.getFloat32();\n                                valueQua.z = reader.getFloat32();\n                                valueQua.w = reader.getFloat32();\n                                if (\"LAYAANIMATION:WEIGHT_05\" == AnimationClipParser04._version) {\n                                    isWeight = reader.getByte();\n                                }\n                                if (1 == isWeight) {\n                                    weightModeV4.x = reader.getUint8();\n                                    weightModeV4.y = reader.getUint8();\n                                    weightModeV4.z = reader.getUint8();\n                                    weightModeV4.w = reader.getUint8();\n                                    inWeightQua.x = reader.getFloat32();\n                                    inWeightQua.y = reader.getFloat32();\n                                    inWeightQua.z = reader.getFloat32();\n                                    inWeightQua.w = reader.getFloat32();\n                                    outWeightQua.x = reader.getFloat32();\n                                    outWeightQua.y = reader.getFloat32();\n                                    outWeightQua.z = reader.getFloat32();\n                                    outWeightQua.w = reader.getFloat32();\n                                }\n                                break;\n                            case KeyFrameValueType.Vector2:\n                                var vec2Keyfram = new Vector2Keyframe(true);\n                                node._setKeyframeByIndex(j, vec2Keyfram);\n                                vec2Keyfram.time = startTimeTypes[reader.getUint16()];\n                                var inTangentV2 = vec2Keyfram.inTangent;\n                                var outTangentV2 = vec2Keyfram.outTangent;\n                                var valueV2 = vec2Keyfram.value;\n                                let weightModeV2 = vec2Keyfram.weightedMode;\n                                let inWeightV2 = vec2Keyfram.inWeight;\n                                let outWeightV2 = vec2Keyfram.outWeight;\n                                inTangentV2.x = reader.getFloat32();\n                                inTangentV2.y = reader.getFloat32();\n                                outTangentV2.x = reader.getFloat32();\n                                outTangentV2.y = reader.getFloat32();\n                                valueV2.x = reader.getFloat32();\n                                valueV2.y = reader.getFloat32();\n                                if (\"LAYAANIMATION:WEIGHT_05\" == AnimationClipParser04._version) {\n                                    isWeight = reader.getByte();\n                                }\n                                if (1 == isWeight) {\n                                    weightModeV2.x = reader.getUint8();\n                                    weightModeV2.y = reader.getUint8();\n                                    inWeightV2.x = reader.getFloat32();\n                                    inWeightV2.y = reader.getFloat32();\n                                    outWeightV2.x = reader.getFloat32();\n                                    outWeightV2.y = reader.getFloat32();\n                                }\n                                break;\n                            case KeyFrameValueType.Vector4:\n                            case KeyFrameValueType.Color:\n                                var vec4Keyfram = new Vector4Keyframe(true);\n                                node._setKeyframeByIndex(j, vec4Keyfram);\n                                vec4Keyfram.time = startTimeTypes[reader.getUint16()];\n                                var inTangentV4 = vec4Keyfram.inTangent;\n                                var outTangentV4 = vec4Keyfram.outTangent;\n                                var valueV4 = vec4Keyfram.value;\n                                var weightMode_V4 = vec4Keyfram.weightedMode;\n                                var inWeightV4 = vec4Keyfram.inWeight;\n                                var outWeightV4 = vec4Keyfram.outWeight;\n                                inTangentV4.x = reader.getFloat32();\n                                inTangentV4.y = reader.getFloat32();\n                                inTangentV4.z = reader.getFloat32();\n                                inTangentV4.w = reader.getFloat32();\n                                outTangentV4.x = reader.getFloat32();\n                                outTangentV4.y = reader.getFloat32();\n                                outTangentV4.z = reader.getFloat32();\n                                outTangentV4.w = reader.getFloat32();\n                                valueV4.x = reader.getFloat32();\n                                valueV4.y = reader.getFloat32();\n                                valueV4.z = reader.getFloat32();\n                                valueV4.w = reader.getFloat32();\n                                if (\"LAYAANIMATION:WEIGHT_05\" == AnimationClipParser04._version) {\n                                    isWeight = reader.getByte();\n                                }\n                                if (1 == isWeight) {\n                                    weightMode_V4.x = reader.getUint8();\n                                    weightMode_V4.y = reader.getUint8();\n                                    weightMode_V4.z = reader.getUint8();\n                                    weightMode_V4.w = reader.getUint8();\n                                    inWeightV4.x = reader.getFloat32();\n                                    inWeightV4.y = reader.getFloat32();\n                                    inWeightV4.z = reader.getFloat32();\n                                    inWeightV4.w = reader.getFloat32();\n                                    outWeightV4.x = reader.getFloat32();\n                                    outWeightV4.y = reader.getFloat32();\n                                    outWeightV4.z = reader.getFloat32();\n                                    outWeightV4.w = reader.getFloat32();\n                                }\n                                break;\n                            default:\n                                throw \"AnimationClipParser04:unknown type.\";\n                        }\n                    }\n                    break;\n                case \"LAYAANIMATION:COMPRESSION_04\":\n                    for (j = 0; j < keyframeCount; j++) {\n                        switch (type) {\n                            case KeyFrameValueType.Float:\n                                floatKeyframe = new FloatKeyframe();\n                                node._setKeyframeByIndex(j, floatKeyframe);\n                                floatKeyframe.time = startTimeTypes[reader.getUint16()];\n                                floatKeyframe.inTangent = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                floatKeyframe.outTangent = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                floatKeyframe.value = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                break;\n                            case KeyFrameValueType.Position:\n                            case KeyFrameValueType.Scale:\n                            case KeyFrameValueType.RotationEuler:\n                            case KeyFrameValueType.Vector3:\n                                floatArrayKeyframe = new Vector3Keyframe();\n                                node._setKeyframeByIndex(j, floatArrayKeyframe);\n                                floatArrayKeyframe.time = startTimeTypes[reader.getUint16()];\n                                inTangent = floatArrayKeyframe.inTangent;\n                                outTangent = floatArrayKeyframe.outTangent;\n                                value = floatArrayKeyframe.value;\n                                inTangent.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangent.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangent.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangent.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangent.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangent.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                value.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                value.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                value.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                break;\n                            case KeyFrameValueType.Rotation:\n                                quaternionKeyframe = new QuaternionKeyframe();\n                                node._setKeyframeByIndex(j, quaternionKeyframe);\n                                quaternionKeyframe.time = startTimeTypes[reader.getUint16()];\n                                inTangentQua = quaternionKeyframe.inTangent;\n                                outTangentQua = quaternionKeyframe.outTangent;\n                                valueQua = quaternionKeyframe.value;\n                                inTangentQua.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangentQua.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangentQua.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangentQua.w = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentQua.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentQua.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentQua.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentQua.w = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueQua.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueQua.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueQua.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueQua.w = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                break;\n                            case KeyFrameValueType.Vector2:\n                                var vec2Keyfram = new Vector2Keyframe();\n                                node._setKeyframeByIndex(j, vec2Keyfram);\n                                vec2Keyfram.time = startTimeTypes[reader.getUint16()];\n                                var inTangentV2 = vec2Keyfram.inTangent;\n                                var outTangentV2 = vec2Keyfram.outTangent;\n                                var valueV2 = vec2Keyfram.value;\n                                inTangentV2.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangentV2.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentV2.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentV2.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueV2.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueV2.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                break;\n                            case KeyFrameValueType.Vector4:\n                            case KeyFrameValueType.Color:\n                                var vec4Keyfram = new Vector4Keyframe();\n                                node._setKeyframeByIndex(j, vec4Keyfram);\n                                vec4Keyfram.time = startTimeTypes[reader.getUint16()];\n                                var inTangentV4 = vec4Keyfram.inTangent;\n                                var outTangentV4 = vec4Keyfram.outTangent;\n                                var valueV4 = vec4Keyfram.value;\n                                inTangentV4.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangentV4.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangentV4.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                inTangentV4.w = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentV4.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentV4.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentV4.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                outTangentV4.w = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueV4.x = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueV4.y = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueV4.z = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                valueV4.w = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                break;\n                            default:\n                                throw \"AnimationClipParser04:unknown type.\";\n                        }\n                    }\n                    break;\n            }\n        }\n        var eventCount = reader.getUint16();\n        for (i = 0; i < eventCount; i++) {\n            var event = new AnimationEvent();\n            event.time = Math.min(clipDur, reader.getFloat32());\n            event.eventName = AnimationClipParser04._strings[reader.getUint16()];\n            var params = [];\n            var paramCount = reader.getUint16();\n            (paramCount > 0) && (event.params = params = []);\n            for (j = 0; j < paramCount; j++) {\n                var eventType = reader.getByte();\n                switch (eventType) {\n                    case 0:\n                        params.push(!!reader.getByte());\n                        break;\n                    case 1:\n                        params.push(reader.getInt32());\n                        break;\n                    case 2:\n                        params.push(reader.getFloat32());\n                        break;\n                    case 3:\n                        params.push(AnimationClipParser04._strings[reader.getUint16()]);\n                        break;\n                    default:\n                        throw new Error(\"unknown type.\");\n                }\n            }\n            clip.addEvent(event);\n        }\n    }\n}\nAnimationClipParser04._strings = [];\nAnimationClipParser04._BLOCK = { count: 0 };\nAnimationClipParser04._DATA = { offset: 0, size: 0 };\n","export class KeyframeNodeList {\n    get count() {\n        return this._nodes.length;\n    }\n    set count(value) {\n        this._nodes.length = value;\n    }\n    constructor() {\n        this._nodes = [];\n    }\n    getNodeByIndex(index) {\n        return this._nodes[index];\n    }\n    setNodeByIndex(index, node) {\n        this._nodes[index] = node;\n    }\n}\n","import { AnimationClipParser03 } from \"./AnimationClipParser03\";\nimport { AnimationClipParser04 } from \"./AnimationClipParser04\";\nimport { KeyframeNodeList } from \"./KeyframeNodeList\";\nimport { Utils3D } from \"../utils/Utils3D\";\nimport { Resource } from \"../../resource/Resource\";\nimport { Byte } from \"../../utils/Byte\";\nimport { ILaya } from \"../../../ILaya\";\nimport { Loader } from \"../../net/Loader\";\nimport { KeyFrameValueType } from \"../component/Animator/KeyframeNodeOwner\";\nimport { Quaternion } from \"../../maths/Quaternion\";\nimport { WeightedMode } from \"../../maths/Keyframe\";\nexport class AnimationClip extends Resource {\n    static _parse(data) {\n        var clip = new AnimationClip();\n        var reader = new Byte(data);\n        var version = reader.readUTFString();\n        switch (version) {\n            case \"LAYAANIMATION:03\":\n                AnimationClipParser03.parse(clip, reader);\n                break;\n            case \"LAYAANIMATION:04\":\n            case \"LAYAANIMATION:COMPRESSION_04\":\n            case \"LAYAANIMATION:WEIGHT_04\":\n            case \"LAYAANIMATION:WEIGHT_05\":\n                AnimationClipParser04.parse(clip, reader, version);\n                break;\n            default:\n                throw new Error(\"unknown animationClip version.\");\n        }\n        return clip;\n    }\n    static load(url, complete) {\n        ILaya.loader.load(url, complete, null, Loader.ANIMATIONCLIP);\n    }\n    duration() {\n        return this._duration;\n    }\n    constructor() {\n        super();\n        this._duration = 0;\n        this._frameRate = 0;\n        this._nodes = new KeyframeNodeList();\n        this.islooping = false;\n        this._animationEvents = [];\n    }\n    _weightModeHermite(weightMode, nextweightMode) {\n        return (((weightMode & WeightedMode.Out) == 0) && ((nextweightMode & WeightedMode.In) == 0));\n    }\n    _hermiteInterpolate(frame, nextFrame, t, dur) {\n        var t0 = frame.outTangent, t1 = nextFrame.inTangent;\n        if (Number.isFinite(t0) && Number.isFinite(t1)) {\n            var t2 = t * t;\n            var t3 = t2 * t;\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\n            var b = t3 - 2.0 * t2 + t;\n            var c = t3 - t2;\n            var d = -2.0 * t3 + 3.0 * t2;\n            return a * frame.value + b * t0 * dur + c * t1 * dur + d * nextFrame.value;\n        }\n        else\n            return frame.value;\n    }\n    _hermiteInterpolateVector3(frame, nextFrame, t, dur, out) {\n        var p0 = frame.value;\n        var tan0 = frame.outTangent;\n        var p1 = nextFrame.value;\n        var tan1 = nextFrame.inTangent;\n        var t2 = t * t;\n        var t3 = t2 * t;\n        var a = 2.0 * t3 - 3.0 * t2 + 1.0;\n        var b = t3 - 2.0 * t2 + t;\n        var c = t3 - t2;\n        var d = -2.0 * t3 + 3.0 * t2;\n        var t0 = tan0.x, t1 = tan1.x;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.x, nextFrame.weightedMode.x)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.x = a * p0.x + b * t0 * dur + c * t1 * dur + d * p1.x;\n            else\n                out.x = p0.x;\n        }\n        else {\n            out.x = this._hermiteCurveSplineWeight(frame.value.x, frame.time, frame.outWeight.x, frame.outTangent.x, nextFrame.value.x, nextFrame.time, nextFrame.inWeight.x, nextFrame.inTangent.x, t);\n        }\n        t0 = tan0.y, t1 = tan1.y;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.y, nextFrame.weightedMode.y)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.y = a * p0.y + b * t0 * dur + c * t1 * dur + d * p1.y;\n            else\n                out.y = p0.y;\n        }\n        else {\n            out.y = this._hermiteCurveSplineWeight(frame.value.y, frame.time, frame.outWeight.y, frame.outTangent.y, nextFrame.value.y, nextFrame.time, nextFrame.inWeight.y, nextFrame.inTangent.y, t);\n        }\n        t0 = tan0.z, t1 = tan1.z;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.z, nextFrame.weightedMode.z)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.z = a * p0.z + b * t0 * dur + c * t1 * dur + d * p1.z;\n            else\n                out.z = p0.z;\n        }\n        else {\n            out.z = this._hermiteCurveSplineWeight(frame.value.z, frame.time, frame.outWeight.z, frame.outTangent.z, nextFrame.value.z, nextFrame.time, nextFrame.inWeight.z, nextFrame.inTangent.z, t);\n        }\n    }\n    _hermiteInterpolateQuaternion(frame, nextFrame, t, dur, out) {\n        var p0 = frame.value;\n        var tan0 = frame.outTangent;\n        var p1 = nextFrame.value;\n        var tan1 = nextFrame.inTangent;\n        var t2 = t * t;\n        var t3 = t2 * t;\n        var a = 2.0 * t3 - 3.0 * t2 + 1.0;\n        var b = t3 - 2.0 * t2 + t;\n        var c = t3 - t2;\n        var d = -2.0 * t3 + 3.0 * t2;\n        var t0 = tan0.x, t1 = tan1.x;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.x, nextFrame.weightedMode.x)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.x = a * p0.x + b * t0 * dur + c * t1 * dur + d * p1.x;\n            else\n                out.x = p0.x;\n        }\n        else {\n            out.x = this._hermiteCurveSplineWeight(frame.value.x, frame.time, frame.outWeight.x, frame.outTangent.x, nextFrame.value.x, nextFrame.time, nextFrame.inWeight.x, nextFrame.inTangent.x, t);\n        }\n        t0 = tan0.y, t1 = tan1.y;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.y, nextFrame.weightedMode.y)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.y = a * p0.y + b * t0 * dur + c * t1 * dur + d * p1.y;\n            else\n                out.y = p0.y;\n        }\n        else {\n            out.y = this._hermiteCurveSplineWeight(frame.value.y, frame.time, frame.outWeight.y, frame.outTangent.y, nextFrame.value.y, nextFrame.time, nextFrame.inWeight.y, nextFrame.inTangent.y, t);\n        }\n        t0 = tan0.z, t1 = tan1.z;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.z, nextFrame.weightedMode.z)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.z = a * p0.z + b * t0 * dur + c * t1 * dur + d * p1.z;\n            else\n                out.z = p0.z;\n        }\n        else {\n            out.z = this._hermiteCurveSplineWeight(frame.value.z, frame.time, frame.outWeight.z, frame.outTangent.z, nextFrame.value.z, nextFrame.time, nextFrame.inWeight.z, nextFrame.inTangent.z, t);\n        }\n        t0 = tan0.w, t1 = tan1.w;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.w, nextFrame.weightedMode.w)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.w = a * p0.w + b * t0 * dur + c * t1 * dur + d * p1.w;\n            else\n                out.w = p0.w;\n        }\n        else {\n            out.w = this._hermiteCurveSplineWeight(frame.value.w, frame.time, frame.outWeight.w, frame.outTangent.w, nextFrame.value.w, nextFrame.time, nextFrame.inWeight.w, nextFrame.inTangent.w, t);\n        }\n    }\n    _hermiteInterpolateVector4(frame, nextFrame, t, dur, out) {\n        var p0 = frame.value;\n        var tan0 = frame.outTangent;\n        var p1 = nextFrame.value;\n        var tan1 = nextFrame.inTangent;\n        var t2 = t * t;\n        var t3 = t2 * t;\n        var a = 2.0 * t3 - 3.0 * t2 + 1.0;\n        var b = t3 - 2.0 * t2 + t;\n        var c = t3 - t2;\n        var d = -2.0 * t3 + 3.0 * t2;\n        var t0 = tan0.x, t1 = tan1.x;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.x, nextFrame.weightedMode.x)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.x = a * p0.x + b * t0 * dur + c * t1 * dur + d * p1.x;\n            else\n                out.x = p0.x;\n        }\n        else {\n            out.x = this._hermiteCurveSplineWeight(frame.value.x, frame.time, frame.outWeight.x, frame.outTangent.x, nextFrame.value.x, nextFrame.time, nextFrame.inWeight.x, nextFrame.inTangent.x, t);\n        }\n        t0 = tan0.y, t1 = tan1.y;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.y, nextFrame.weightedMode.y)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.y = a * p0.y + b * t0 * dur + c * t1 * dur + d * p1.y;\n            else\n                out.y = p0.y;\n        }\n        else {\n            out.y = this._hermiteCurveSplineWeight(frame.value.y, frame.time, frame.outWeight.y, frame.outTangent.y, nextFrame.value.y, nextFrame.time, nextFrame.inWeight.y, nextFrame.inTangent.y, t);\n        }\n        t0 = tan0.z, t1 = tan1.z;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.z, nextFrame.weightedMode.z)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.z = a * p0.z + b * t0 * dur + c * t1 * dur + d * p1.z;\n            else\n                out.z = p0.z;\n        }\n        else {\n            out.z = this._hermiteCurveSplineWeight(frame.value.z, frame.time, frame.outWeight.z, frame.outTangent.z, nextFrame.value.z, nextFrame.time, nextFrame.inWeight.z, nextFrame.inTangent.z, t);\n        }\n        t0 = tan0.w, t1 = tan1.w;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.w, nextFrame.weightedMode.w)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.w = a * p0.w + b * t0 * dur + c * t1 * dur + d * p1.w;\n            else\n                out.w = p0.w;\n        }\n        else {\n            out.w = this._hermiteCurveSplineWeight(frame.value.w, frame.time, frame.outWeight.w, frame.outTangent.w, nextFrame.value.w, nextFrame.time, nextFrame.inWeight.w, nextFrame.inTangent.w, t);\n        }\n    }\n    _hermiteInterpolateVector2(frame, nextFrame, t, dur, out) {\n        var p0 = frame.value;\n        var tan0 = frame.outTangent;\n        var p1 = nextFrame.value;\n        var tan1 = nextFrame.inTangent;\n        var t2 = t * t;\n        var t3 = t2 * t;\n        var a = 2.0 * t3 - 3.0 * t2 + 1.0;\n        var b = t3 - 2.0 * t2 + t;\n        var c = t3 - t2;\n        var d = -2.0 * t3 + 3.0 * t2;\n        var t0 = tan0.x, t1 = tan1.x;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.x, nextFrame.weightedMode.x)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.x = a * p0.x + b * t0 * dur + c * t1 * dur + d * p1.x;\n            else\n                out.x = p0.x;\n        }\n        else {\n            out.x = this._hermiteCurveSplineWeight(frame.value.x, frame.time, frame.outWeight.x, frame.outTangent.x, nextFrame.value.x, nextFrame.time, nextFrame.inWeight.x, nextFrame.inTangent.x, t);\n        }\n        t0 = tan0.y, t1 = tan1.y;\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode.y, nextFrame.weightedMode.y)) {\n            if (Number.isFinite(t0) && Number.isFinite(t1))\n                out.y = a * p0.y + b * t0 * dur + c * t1 * dur + d * p1.y;\n            else\n                out.y = p0.y;\n        }\n        else {\n            out.y = this._hermiteCurveSplineWeight(frame.value.y, frame.time, frame.outWeight.y, frame.outTangent.y, nextFrame.value.y, nextFrame.time, nextFrame.inWeight.y, nextFrame.inTangent.y, t);\n        }\n    }\n    _hermiteCurveSplineWeight(frameValue, frametime, frameOutWeight, frameOutTangent, nextframeValue, nextframetime, nextframeInweight, nextframeIntangent, time) {\n        let Eps = 2.22e-16;\n        let x = time;\n        let x1 = frametime;\n        let y1 = frameValue;\n        let wt1 = frameOutWeight;\n        let x2 = nextframetime;\n        let y2 = nextframeValue;\n        let wt2 = nextframeInweight;\n        let dx = x2 - x1;\n        let dy = y2 - y1;\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\n        let yp1 = frameOutTangent;\n        let yp2 = nextframeIntangent;\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\n            return frameValue;\n        }\n        yp1 = yp1 * dx / dy;\n        yp2 = yp2 * dx / dy;\n        let wt2s = 1 - wt2;\n        let t = 0.5;\n        let t2 = 0;\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\n            t = x;\n            t2 = 1 - t;\n        }\n        else {\n            while (true) {\n                t2 = (1 - t);\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\n                if (Math.abs(fg) <= 2.5 * Eps)\n                    break;\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\n            }\n        }\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\n        return y * dy + y1;\n    }\n    _curveInterpolate(frame, nextFrame, t, dur) {\n        if ((!frame.weightedMode) || this._weightModeHermite(frame.weightedMode, nextFrame.weightedMode)) {\n            return this._hermiteInterpolate(frame, nextFrame, t, dur);\n        }\n        else {\n            return this._hermiteCurveSplineWeight(frame.value, frame.time, frame.outWeight, frame.outTangent, nextFrame.value, nextFrame.time, nextFrame.inWeight, nextFrame.inTangent, t);\n        }\n    }\n    _evaluateClipDatasRealTime(nodes, playCurTime, realTimeCurrentFrameIndexes, addtive, frontPlay, outDatas, avatarMask) {\n        for (var i = 0, n = nodes.count; i < n; i++) {\n            var node = nodes.getNodeByIndex(i);\n            var type = node.type;\n            var nextFrameIndex;\n            var keyFrames = node._keyFrames;\n            var keyFramesCount = keyFrames.length;\n            var frameIndex = realTimeCurrentFrameIndexes[i];\n            if (avatarMask && (!avatarMask.getTransformActive(node.nodePath))) {\n                continue;\n            }\n            if (frontPlay) {\n                if ((frameIndex !== -1) && (playCurTime < keyFrames[frameIndex].time)) {\n                    frameIndex = -1;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n                nextFrameIndex = frameIndex + 1;\n                while (nextFrameIndex < keyFramesCount) {\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\n                        break;\n                    frameIndex++;\n                    nextFrameIndex++;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n            }\n            else {\n                nextFrameIndex = frameIndex + 1;\n                if ((nextFrameIndex !== keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {\n                    frameIndex = keyFramesCount - 1;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n                nextFrameIndex = frameIndex + 1;\n                while (frameIndex > -1) {\n                    if (keyFrames[frameIndex].time < playCurTime)\n                        break;\n                    frameIndex--;\n                    nextFrameIndex--;\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\n                }\n            }\n            var isEnd = nextFrameIndex === keyFramesCount;\n            switch (type) {\n                case KeyFrameValueType.Boolean:\n                    if (frameIndex !== -1) {\n                        outDatas[i] = keyFrames[frameIndex].value;\n                    }\n                    else {\n                        outDatas[i] = keyFrames[0].value;\n                    }\n                    break;\n                case KeyFrameValueType.Float:\n                    if (frameIndex !== -1) {\n                        var frame = keyFrames[frameIndex];\n                        if (isEnd) {\n                            outDatas[i] = frame.value;\n                        }\n                        else {\n                            var nextFarme = keyFrames[nextFrameIndex];\n                            var d = nextFarme.time - frame.time;\n                            var t;\n                            if (d !== 0)\n                                t = (playCurTime - frame.time) / d;\n                            else\n                                t = 0;\n                            outDatas[i] = this._curveInterpolate(frame, nextFarme, t, d);\n                        }\n                    }\n                    else {\n                        outDatas[i] = keyFrames[0].value;\n                    }\n                    if (addtive)\n                        outDatas[i] = outDatas[i] - keyFrames[0].value;\n                    break;\n                case KeyFrameValueType.Position:\n                case KeyFrameValueType.RotationEuler:\n                case KeyFrameValueType.Vector3:\n                    var clipData = outDatas[i];\n                    this._evaluateFrameNodeVector3DatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, clipData);\n                    if (addtive) {\n                        var firstFrameValue = keyFrames[0].value;\n                        clipData.x -= firstFrameValue.x;\n                        clipData.y -= firstFrameValue.y;\n                        clipData.z -= firstFrameValue.z;\n                    }\n                    break;\n                case KeyFrameValueType.Rotation:\n                    var clipQuat = outDatas[i];\n                    this._evaluateFrameNodeQuaternionDatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, clipQuat);\n                    if (addtive) {\n                        var tempQuat = AnimationClip._tempQuaternion0;\n                        var firstFrameValueQua = keyFrames[0].value;\n                        Utils3D.quaternionConjugate(firstFrameValueQua, tempQuat);\n                        Quaternion.multiply(tempQuat, clipQuat, clipQuat);\n                    }\n                    break;\n                case KeyFrameValueType.Scale:\n                    clipData = outDatas[i];\n                    this._evaluateFrameNodeVector3DatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, clipData);\n                    if (addtive) {\n                        firstFrameValue = keyFrames[0].value;\n                        clipData.x /= firstFrameValue.x;\n                        clipData.y /= firstFrameValue.y;\n                        clipData.z /= firstFrameValue.z;\n                    }\n                    break;\n                case KeyFrameValueType.Vector2:\n                    var v2Data = outDatas[i];\n                    this._evaluateFrameNodeVector2DatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, v2Data);\n                    if (addtive) {\n                        var v2FrameValue = keyFrames[0].value;\n                        v2Data.x -= v2FrameValue.x;\n                        v2Data.y -= v2FrameValue.y;\n                    }\n                    break;\n                case KeyFrameValueType.Vector4:\n                case KeyFrameValueType.Color:\n                    var v4Data = outDatas[i];\n                    this._evaluateFrameNodeVector4DatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, v4Data);\n                    if (addtive) {\n                        var v4FrameValue = keyFrames[0].value;\n                        v4Data.x -= v4FrameValue.x;\n                        v4Data.y -= v4FrameValue.y;\n                        v4Data.z -= v4FrameValue.z;\n                        v4Data.w -= v4FrameValue.w;\n                    }\n                    break;\n                default:\n                    throw new Error(\"AnimationClip:unknown node type.\");\n            }\n        }\n    }\n    _evaluateFrameNodeVector3DatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, outDatas) {\n        if (frameIndex !== -1) {\n            var frame = keyFrames[frameIndex];\n            if (isEnd) {\n                var frameData = frame.value;\n                outDatas.x = frameData.x;\n                outDatas.y = frameData.y;\n                outDatas.z = frameData.z;\n            }\n            else {\n                var nextKeyFrame = keyFrames[frameIndex + 1];\n                var t;\n                var startTime = frame.time;\n                var d = nextKeyFrame.time - startTime;\n                if (d !== 0)\n                    t = (playCurTime - startTime) / d;\n                else\n                    t = 0;\n                this._hermiteInterpolateVector3(frame, nextKeyFrame, t, d, outDatas);\n            }\n        }\n        else {\n            var firstFrameDatas = keyFrames[0].value;\n            outDatas.x = firstFrameDatas.x;\n            outDatas.y = firstFrameDatas.y;\n            outDatas.z = firstFrameDatas.z;\n        }\n    }\n    _evaluateFrameNodeVector2DatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, outDatas) {\n        if (frameIndex !== -1) {\n            var frame = keyFrames[frameIndex];\n            if (isEnd) {\n                var frameData = frame.value;\n                outDatas.x = frameData.x;\n                outDatas.y = frameData.y;\n            }\n            else {\n                var nextKeyFrame = keyFrames[frameIndex + 1];\n                var t;\n                var startTime = frame.time;\n                var d = nextKeyFrame.time - startTime;\n                if (d !== 0)\n                    t = (playCurTime - startTime) / d;\n                else\n                    t = 0;\n                this._hermiteInterpolateVector2(frame, nextKeyFrame, t, d, outDatas);\n            }\n        }\n        else {\n            var firstFrameDatas = keyFrames[0].value;\n            outDatas.x = firstFrameDatas.x;\n            outDatas.y = firstFrameDatas.y;\n        }\n    }\n    _evaluateFrameNodeVector4DatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, outDatas) {\n        if (frameIndex !== -1) {\n            var frame = keyFrames[frameIndex];\n            if (isEnd) {\n                var frameData = frame.value;\n                outDatas.x = frameData.x;\n                outDatas.y = frameData.y;\n                outDatas.z = frameData.z;\n            }\n            else {\n                var nextKeyFrame = keyFrames[frameIndex + 1];\n                var t;\n                var startTime = frame.time;\n                var d = nextKeyFrame.time - startTime;\n                if (d !== 0)\n                    t = (playCurTime - startTime) / d;\n                else\n                    t = 0;\n                this._hermiteInterpolateVector4(frame, nextKeyFrame, t, d, outDatas);\n            }\n        }\n        else {\n            var firstFrameDatas = keyFrames[0].value;\n            outDatas.x = firstFrameDatas.x;\n            outDatas.y = firstFrameDatas.y;\n            outDatas.z = firstFrameDatas.z;\n        }\n    }\n    _evaluateFrameNodeQuaternionDatasRealTime(keyFrames, frameIndex, isEnd, playCurTime, outDatas) {\n        if (frameIndex !== -1) {\n            var frame = keyFrames[frameIndex];\n            if (isEnd) {\n                var frameData = frame.value;\n                outDatas.x = frameData.x;\n                outDatas.y = frameData.y;\n                outDatas.z = frameData.z;\n                outDatas.w = frameData.w;\n            }\n            else {\n                var nextKeyFrame = keyFrames[frameIndex + 1];\n                var t;\n                var startTime = frame.time;\n                var d = nextKeyFrame.time - startTime;\n                if (d !== 0)\n                    t = (playCurTime - startTime) / d;\n                else\n                    t = 0;\n                this._hermiteInterpolateQuaternion(frame, nextKeyFrame, t, d, outDatas);\n            }\n        }\n        else {\n            var firstFrameDatas = keyFrames[0].value;\n            outDatas.x = firstFrameDatas.x;\n            outDatas.y = firstFrameDatas.y;\n            outDatas.z = firstFrameDatas.z;\n            outDatas.w = firstFrameDatas.w;\n        }\n    }\n    _binarySearchEventIndex(time) {\n        var start = 0;\n        var end = this._animationEvents.length - 1;\n        var mid;\n        while (start <= end) {\n            mid = Math.floor((start + end) / 2);\n            var midValue = this._animationEvents[mid].time;\n            if (midValue == time)\n                return mid;\n            else if (midValue > time)\n                end = mid - 1;\n            else\n                start = mid + 1;\n        }\n        return start;\n    }\n    addEvent(event) {\n        var index = this._binarySearchEventIndex(event.time);\n        this._animationEvents.splice(index, 0, event);\n    }\n    _disposeResource() {\n        this._nodes = null;\n        this._nodesMap = null;\n    }\n}\nAnimationClip._tempQuaternion0 = new Quaternion();\n","import { Sprite3D } from \"../Sprite3D\";\nexport class LightSprite extends Sprite3D {\n    get color() {\n        return this._light.color;\n    }\n    set color(value) {\n        this._light.color = value;\n    }\n    get mode() {\n        return this._light.lightmapBakedType;\n    }\n    set mode(value) {\n        this._light.lightmapBakedType = value;\n    }\n    get intensity() {\n        return this._light.intensity;\n    }\n    set intensity(value) {\n        this._light.intensity = value;\n    }\n    get shadowMode() {\n        return this._light.shadowMode;\n    }\n    set shadowMode(value) {\n        this._light.shadowMode = value;\n    }\n    get shadowDistance() {\n        return this._light.shadowDistance;\n    }\n    set shadowDistance(value) {\n        this._light.shadowDistance = value;\n    }\n    get shadowResolution() {\n        return this._light.shadowResolution;\n    }\n    set shadowResolution(value) {\n        this._light.shadowResolution = value;\n    }\n    get shadowDepthBias() {\n        return this._light.shadowDepthBias;\n    }\n    set shadowDepthBias(value) {\n        this._light.shadowDepthBias = value;\n    }\n    get shadowNormalBias() {\n        return this._light.shadowNormalBias;\n    }\n    set shadowNormalBias(value) {\n        this._light.shadowNormalBias = value;\n    }\n    get shadowStrength() {\n        return this._light.shadowStrength;\n    }\n    set shadowStrength(value) {\n        this._light.shadowStrength = value;\n    }\n    get shadowNearPlane() {\n        return this._light.shadowNearPlane;\n    }\n    set shadowNearPlane(value) {\n        this._light.shadowNearPlane = value;\n    }\n    get lightmapBakedType() {\n        return this._light.lightmapBakedType;\n    }\n    set lightmapBakedType(value) {\n        this._light.lightmapBakedType = value;\n    }\n    get lightWorldMatrix() {\n        return this._light.lightWorldMatrix;\n    }\n    constructor() {\n        super();\n    }\n    _cloneTo(destObject, rootSprite, dstSprite) {\n        super._cloneTo(destObject, rootSprite, dstSprite);\n        destObject.color = this.color.clone();\n        destObject.intensity = this.intensity;\n        destObject.lightmapBakedType = this.lightmapBakedType;\n    }\n    _addToLightQueue() {\n    }\n    _removeFromLightQueue() {\n    }\n}\n","import { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Material } from \"../../../resource/Material\";\nimport { UnlitMaterial } from \"./UnlitMaterial\";\nexport class EffectMaterial extends Material {\n    get color() {\n        return this.getColorByIndex(UnlitMaterial.ALBEDOCOLOR);\n    }\n    set color(value) {\n        this.setColorByIndex(UnlitMaterial.ALBEDOCOLOR, value);\n    }\n    get texture() {\n        return this.getTextureByIndex(UnlitMaterial.ALBEDOTEXTURE);\n    }\n    set texture(value) {\n        if (value)\n            this.addDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n        else\n            this.removeDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n        this.setTextureByIndex(UnlitMaterial.ALBEDOTEXTURE, value);\n    }\n    get tilingOffset() {\n        return this.getVector4ByIndex(UnlitMaterial.TILINGOFFSET);\n    }\n    set tilingOffset(value) {\n        if (value) {\n            this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET, value);\n        }\n        else {\n            this.getVector4ByIndex(UnlitMaterial.TILINGOFFSET).setValue(1.0, 1.0, 0.0, 0.0);\n        }\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"Unlit\");\n        this.setVector4ByIndex(UnlitMaterial.TILINGOFFSET, new Vector4(1.0, 1.0, 0.0, 0.0));\n        this.setColorByIndex(UnlitMaterial.ALBEDOCOLOR, new Color(1.0, 1.0, 1.0, 1.0));\n        this.renderMode = EffectMaterial.RENDERMODE_ADDTIVE;\n    }\n    clone() {\n        var dest = new EffectMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n    set renderMode(value) {\n        switch (value) {\n            case EffectMaterial.RENDERMODE_ADDTIVE:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_NONE;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE;\n                this.depthTest = RenderState.DEPTHTEST_LEQUAL;\n                this.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);\n                break;\n            case EffectMaterial.RENDERMODE_ALPHABLENDED:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.alphaTest = false;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_NONE;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LEQUAL;\n                this.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);\n                break;\n            default:\n                throw new Error(\"unknown renderMode: \" + value);\n        }\n    }\n}\nEffectMaterial.RENDERMODE_ADDTIVE = 0;\nEffectMaterial.RENDERMODE_ALPHABLENDED = 1;\n","import { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../../../resource/Material\";\nexport class ExtendTerrainMaterial extends Material {\n    static __initDefine__() {\n        ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1 = Shader3D.getDefineByName(\"ExtendTerrain_DETAIL_NUM1\");\n        ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2 = Shader3D.getDefineByName(\"ExtendTerrain_DETAIL_NUM2\");\n        ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3 = Shader3D.getDefineByName(\"ExtendTerrain_DETAIL_NUM3\");\n        ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4 = Shader3D.getDefineByName(\"ExtendTerrain_DETAIL_NUM4\");\n        ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5 = Shader3D.getDefineByName(\"ExtendTerrain_DETAIL_NUM5\");\n        ExtendTerrainMaterial.SPLATALPHATEXTURE = Shader3D.propertyNameToID(\"u_SplatAlphaTexture\");\n        ExtendTerrainMaterial.DIFFUSETEXTURE1 = Shader3D.propertyNameToID(\"u_DiffuseTexture1\");\n        ExtendTerrainMaterial.DIFFUSETEXTURE2 = Shader3D.propertyNameToID(\"u_DiffuseTexture2\");\n        ExtendTerrainMaterial.DIFFUSETEXTURE3 = Shader3D.propertyNameToID(\"u_DiffuseTexture3\");\n        ExtendTerrainMaterial.DIFFUSETEXTURE4 = Shader3D.propertyNameToID(\"u_DiffuseTexture4\");\n        ExtendTerrainMaterial.DIFFUSETEXTURE5 = Shader3D.propertyNameToID(\"u_DiffuseTexture5\");\n        ExtendTerrainMaterial.DIFFUSESCALEOFFSET1 = Shader3D.propertyNameToID(\"u_DiffuseScaleOffset1\");\n        ExtendTerrainMaterial.DIFFUSESCALEOFFSET2 = Shader3D.propertyNameToID(\"u_DiffuseScaleOffset2\");\n        ExtendTerrainMaterial.DIFFUSESCALEOFFSET3 = Shader3D.propertyNameToID(\"u_DiffuseScaleOffset3\");\n        ExtendTerrainMaterial.DIFFUSESCALEOFFSET4 = Shader3D.propertyNameToID(\"u_DiffuseScaleOffset4\");\n        ExtendTerrainMaterial.DIFFUSESCALEOFFSET5 = Shader3D.propertyNameToID(\"u_DiffuseScaleOffset5\");\n    }\n    get splatAlphaTexture() {\n        return this._shaderValues.getTexture(ExtendTerrainMaterial.SPLATALPHATEXTURE);\n    }\n    set splatAlphaTexture(value) {\n        this._shaderValues.setTexture(ExtendTerrainMaterial.SPLATALPHATEXTURE, value);\n    }\n    get diffuseTexture1() {\n        return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE1);\n    }\n    set diffuseTexture1(value) {\n        this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE1, value);\n        this._setDetailNum(1);\n    }\n    get diffuseTexture2() {\n        return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE2);\n    }\n    set diffuseTexture2(value) {\n        this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE2, value);\n        this._setDetailNum(2);\n    }\n    get diffuseTexture3() {\n        return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE3);\n    }\n    set diffuseTexture3(value) {\n        this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE3, value);\n        this._setDetailNum(3);\n    }\n    get diffuseTexture4() {\n        return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE4);\n    }\n    set diffuseTexture4(value) {\n        this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE4, value);\n        this._setDetailNum(4);\n    }\n    get diffuseTexture5() {\n        return this._shaderValues.getTexture(ExtendTerrainMaterial.DIFFUSETEXTURE5);\n    }\n    set diffuseTexture5(value) {\n        this._shaderValues.setTexture(ExtendTerrainMaterial.DIFFUSETEXTURE5, value);\n        this._setDetailNum(5);\n    }\n    set diffuseScaleOffset1(scaleOffset1) {\n        this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET1, scaleOffset1);\n    }\n    set diffuseScaleOffset2(scaleOffset2) {\n        this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET2, scaleOffset2);\n    }\n    set diffuseScaleOffset3(scaleOffset3) {\n        this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET3, scaleOffset3);\n    }\n    set diffuseScaleOffset4(scaleOffset4) {\n        this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET4, scaleOffset4);\n    }\n    set diffuseScaleOffset5(scaleOffset5) {\n        this._shaderValues.setVector(ExtendTerrainMaterial.DIFFUSESCALEOFFSET5, scaleOffset5);\n    }\n    set renderMode(value) {\n        switch (value) {\n            case ExtendTerrainMaterial.RENDERMODE_OPAQUE:\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\n                this.depthWrite = true;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_DISABLE;\n                this.depthTest = RenderState.DEPTHTEST_LESS;\n                break;\n            case ExtendTerrainMaterial.RENDERMODE_TRANSPARENT:\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_BACK;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.depthTest = RenderState.DEPTHTEST_LEQUAL;\n                break;\n            default:\n                throw new Error(\"unknown renderMode: \" + value);\n        }\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"ExtendTerrain\");\n        this.renderMode = ExtendTerrainMaterial.RENDERMODE_OPAQUE;\n    }\n    _setDetailNum(value) {\n        switch (value) {\n            case 1:\n                this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);\n                break;\n            case 2:\n                this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);\n                break;\n            case 3:\n                this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);\n                break;\n            case 4:\n                this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);\n                break;\n            case 5:\n                this._shaderValues.addDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM5);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM1);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM2);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM3);\n                this._shaderValues.removeDefine(ExtendTerrainMaterial.SHADERDEFINE_DETAIL_NUM4);\n                break;\n        }\n    }\n    clone() {\n        var dest = new ExtendTerrainMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nExtendTerrainMaterial.RENDERMODE_OPAQUE = 1;\nExtendTerrainMaterial.RENDERMODE_TRANSPARENT = 2;\n","import { MeshFilter } from \"./MeshFilter\";\nimport { RenderableSprite3D } from \"./RenderableSprite3D\";\nimport { SkinnedMeshRenderer } from \"./SkinnedMeshRenderer\";\nexport class SkinnedMeshSprite3D extends RenderableSprite3D {\n    get meshFilter() {\n        return this._meshFilter;\n    }\n    get skinnedMeshRenderer() {\n        return this._render;\n    }\n    constructor(mesh = null, name = null) {\n        super(name);\n        this._meshFilter = this.addComponent(MeshFilter);\n        this._render = this.addComponent(SkinnedMeshRenderer);\n        (mesh) && (this._meshFilter.sharedMesh = mesh);\n    }\n    destroy(destroyChild = true) {\n        if (this._destroyed)\n            return;\n        super.destroy(destroyChild);\n        this._meshFilter.destroy();\n    }\n}\nSkinnedMeshSprite3D._tempArray0 = [];\n","import { Color } from \"../../maths/Color\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { TextureCubeFace } from \"../../resource/TextureCube\";\nexport class SphericalHarmonicsL2 {\n    constructor() {\n        this._coefficients = new Float32Array(27);\n    }\n    getCoefficient(i, j) {\n        return this._coefficients[i * 9 + j];\n    }\n    setCoefficient(i, j, coefficient) {\n        this._coefficients[i * 9 + j] = coefficient;\n    }\n    setCoefficients(i, coefficient0, coefficient1, coefficient2, coefficient3, coefficient4, coefficient5, coefficient6, coefficient7, coefficient8) {\n        var offset = i * 9;\n        this._coefficients[offset] = coefficient0;\n        this._coefficients[++offset] = coefficient1;\n        this._coefficients[++offset] = coefficient2;\n        this._coefficients[++offset] = coefficient3;\n        this._coefficients[++offset] = coefficient4;\n        this._coefficients[++offset] = coefficient5;\n        this._coefficients[++offset] = coefficient6;\n        this._coefficients[++offset] = coefficient7;\n        this._coefficients[++offset] = coefficient8;\n    }\n    cloneTo(dest) {\n        if (this === dest)\n            return;\n        var coes = this._coefficients;\n        var destCoes = dest._coefficients;\n        for (var i = 0; i < 27; i++)\n            destCoes[i] = coes[i];\n    }\n}\nSphericalHarmonicsL2._default = new SphericalHarmonicsL2();\nconst _tempSHR = new Float32Array(9);\nconst _tempSHG = new Float32Array(9);\nconst _tempSHB = new Float32Array(9);\nexport class SphericalHarmonicsL2Generater {\n    static surfaceArea(u, v) {\n        return Math.atan2(u * v, Math.sqrt(u * u + v * v + 1.0));\n    }\n    static uv2Dir(u, v, face, out_dir) {\n        switch (face) {\n            case TextureCubeFace.PositiveX:\n                out_dir.x = 1.0;\n                out_dir.y = -v;\n                out_dir.z = -u;\n                break;\n            case TextureCubeFace.NegativeX:\n                out_dir.x = -1.0;\n                out_dir.y = -v;\n                out_dir.z = u;\n                break;\n            case TextureCubeFace.PositiveY:\n                out_dir.x = u;\n                out_dir.y = 1.0;\n                out_dir.z = v;\n                break;\n            case TextureCubeFace.NegativeY:\n                out_dir.x = u;\n                out_dir.y = -1.0;\n                out_dir.z = -v;\n                break;\n            case TextureCubeFace.PositiveZ:\n                out_dir.x = u;\n                out_dir.y = -v;\n                out_dir.z = 1.0;\n                break;\n            case TextureCubeFace.NegativeZ:\n                out_dir.x = -u;\n                out_dir.y = -v;\n                out_dir.z = -1.0;\n                break;\n            default:\n                break;\n        }\n    }\n    static sh_eval_9(i, x, y, z) {\n        const sqrt = Math.sqrt;\n        const M_PI = Math.PI;\n        switch (i) {\n            case 0:\n                return 0.5 * sqrt(1.0 / M_PI);\n            case 1:\n                return -y * 0.5 * sqrt(3.0 / M_PI);\n            case 2:\n                return z * 0.5 * sqrt(3.0 / M_PI);\n            case 3:\n                return -x * 0.5 * sqrt(3.0 / M_PI);\n            case 4:\n                return x * y * 0.5 * sqrt(15.0 / M_PI);\n            case 5:\n                return -y * z * 0.5 * sqrt(15.0 / M_PI);\n            case 6:\n                return (3.0 * z * z - 1.0) * 0.25 * sqrt(5.0 / M_PI);\n            case 7:\n                return -x * z * 0.5 * sqrt(15.0 / M_PI);\n            case 8:\n                return (x * x - y * y) * 0.25 * sqrt(15.0 / M_PI);\n            default:\n                return 0;\n        }\n    }\n    static CalCubemapSH(cubemapPixels, pixelComponentSize, cubemapSize, isGamma = true) {\n        let width = cubemapSize;\n        let height = cubemapSize;\n        let shr = _tempSHR.fill(0);\n        let shg = _tempSHG.fill(0);\n        let shb = _tempSHB.fill(0);\n        let dir = new Vector3();\n        for (let face = 0; face < 6; face++) {\n            let facePixels = cubemapPixels[face];\n            for (let y = 0; y < height; y++) {\n                for (let x = 0; x < width; x++) {\n                    let px = x + 0.5;\n                    let py = y + 0.5;\n                    let u = 2.0 * (px / width) - 1.0;\n                    let v = 2.0 * (py / height) - 1.0;\n                    let dx = 1.0 / width;\n                    let dy = 1.0 / height;\n                    let x0 = u - dx;\n                    let y0 = v - dy;\n                    let x1 = u + dx;\n                    let y1 = v + dy;\n                    let da = this.surfaceArea(x0, y0) - this.surfaceArea(x0, y1) - this.surfaceArea(x1, y0) + this.surfaceArea(x1, y1);\n                    this.uv2Dir(u, v, face, dir);\n                    Vector3.normalize(dir, dir);\n                    let pixelOffset = (x + y * width) * pixelComponentSize;\n                    let r = facePixels[pixelOffset];\n                    let g = facePixels[pixelOffset + 1];\n                    let b = facePixels[pixelOffset + 2];\n                    if (isGamma) {\n                        r = Color.gammaToLinearSpace(r);\n                        g = Color.gammaToLinearSpace(g);\n                        b = Color.gammaToLinearSpace(b);\n                    }\n                    for (let s = 0; s < this.SH_Count; s++) {\n                        let sh_val = this.sh_eval_9(s, dir.x, dir.y, dir.z);\n                        shr[s] += r * sh_val * da;\n                        shg[s] += g * sh_val * da;\n                        shb[s] += b * sh_val * da;\n                    }\n                }\n            }\n        }\n        let sh = new SphericalHarmonicsL2();\n        for (let index = 0; index < this.SH_Count; index++) {\n            let scale = this.k[index];\n            let r = shr[index];\n            sh.setCoefficient(0, index, r * scale);\n            let g = shg[index];\n            sh.setCoefficient(1, index, g * scale);\n            let b = shb[index];\n            sh.setCoefficient(2, index, b * scale);\n        }\n        return sh;\n    }\n    static CalGradientSH(skyColor, equatorColor, groundColor, isGamma = true) {\n        console.time(\"Gradient SH\");\n        let skyPixels = this._tempSkyPixels;\n        let equatorPixels = this._tempEquatorPixels;\n        let groundPixels = this._tempGroundPixels;\n        const fillPixelBuffer = (float32, color, isGamma) => {\n            let fillColor = new Color(color.x, color.y, color.z, 1.0);\n            if (isGamma) {\n                fillColor.toLinear(fillColor);\n            }\n            let r = Math.min(fillColor.r, 1.0);\n            let g = Math.min(fillColor.g, 1.0);\n            let b = Math.min(fillColor.b, 1.0);\n            for (let index = 0; index < float32.length; index += 3) {\n                float32[index] = r;\n                float32[index + 1] = g;\n                float32[index + 2] = b;\n            }\n        };\n        fillPixelBuffer(skyPixels, skyColor, isGamma);\n        fillPixelBuffer(equatorPixels, equatorColor, isGamma);\n        fillPixelBuffer(groundPixels, groundColor, isGamma);\n        let gradientPixles = [];\n        gradientPixles[TextureCubeFace.PositiveY] = skyPixels;\n        gradientPixles[TextureCubeFace.NegativeY] = groundPixels;\n        gradientPixles[TextureCubeFace.PositiveX] = equatorPixels;\n        gradientPixles[TextureCubeFace.NegativeX] = equatorPixels;\n        gradientPixles[TextureCubeFace.PositiveZ] = equatorPixels;\n        gradientPixles[TextureCubeFace.NegativeZ] = equatorPixels;\n        let sh = SphericalHarmonicsL2Generater.CalCubemapSH(gradientPixles, 3, this.GradientSimulateSize, false);\n        console.timeEnd(\"Gradient SH\");\n        return sh;\n    }\n}\nSphericalHarmonicsL2Generater.k = [\n    0.28209479177387814347,\n    -0.32573500793527994772, 0.32573500793527994772, -0.32573500793527994772,\n    0.27313710764801976764, -0.27313710764801976764, 0.07884789131313000151, -0.27313710764801976764, 0.13656855382400988382\n];\nSphericalHarmonicsL2Generater.GradientSimulateSize = 3;\nSphericalHarmonicsL2Generater.SH_Count = 9;\nSphericalHarmonicsL2Generater._tempSkyPixels = new Float32Array(SphericalHarmonicsL2Generater.GradientSimulateSize * SphericalHarmonicsL2Generater.GradientSimulateSize * 3);\nSphericalHarmonicsL2Generater._tempEquatorPixels = new Float32Array(SphericalHarmonicsL2Generater.GradientSimulateSize * SphericalHarmonicsL2Generater.GradientSimulateSize * 3);\nSphericalHarmonicsL2Generater._tempGroundPixels = new Float32Array(SphericalHarmonicsL2Generater.GradientSimulateSize * SphericalHarmonicsL2Generater.GradientSimulateSize * 3);\n","import { Vector3 } from \"../../maths/Vector3\";\nexport class BoundBox {\n    constructor(min, max) {\n        this.min = min;\n        this.max = max;\n    }\n    _rotateExtents(extents, rotation, out) {\n        var extentsX = extents.x;\n        var extentsY = extents.y;\n        var extentsZ = extents.z;\n        var matElements = rotation.elements;\n        out.x = Math.abs(matElements[0] * extentsX) + Math.abs(matElements[4] * extentsY) + Math.abs(matElements[8] * extentsZ);\n        out.y = Math.abs(matElements[1] * extentsX) + Math.abs(matElements[5] * extentsY) + Math.abs(matElements[9] * extentsZ);\n        out.z = Math.abs(matElements[2] * extentsX) + Math.abs(matElements[6] * extentsY) + Math.abs(matElements[10] * extentsZ);\n    }\n    getCorners(corners) {\n        corners.length = 8;\n        var minX = this.min.x;\n        var minY = this.min.y;\n        var minZ = this.min.z;\n        var maxX = this.max.x;\n        var maxY = this.max.y;\n        var maxZ = this.max.z;\n        corners[0] = new Vector3(minX, maxY, maxZ);\n        corners[1] = new Vector3(maxX, maxY, maxZ);\n        corners[2] = new Vector3(maxX, minY, maxZ);\n        corners[3] = new Vector3(minX, minY, maxZ);\n        corners[4] = new Vector3(minX, maxY, minZ);\n        corners[5] = new Vector3(maxX, maxY, minZ);\n        corners[6] = new Vector3(maxX, minY, minZ);\n        corners[7] = new Vector3(minX, minY, minZ);\n    }\n    getCenter(out) {\n        Vector3.add(this.min, this.max, out);\n        Vector3.scale(out, 0.5, out);\n    }\n    getExtent(out) {\n        Vector3.subtract(this.max, this.min, out);\n        Vector3.scale(out, 0.5, out);\n    }\n    setCenterAndExtent(center, extent) {\n        Vector3.subtract(center, extent, this.min);\n        Vector3.add(center, extent, this.max);\n    }\n    tranform(matrix, out) {\n        var center = _tempVector30;\n        var extent = _tempVector31;\n        this.getCenter(center);\n        this.getExtent(extent);\n        Vector3.transformCoordinate(center, matrix, center);\n        this._rotateExtents(extent, matrix, extent);\n        out.setCenterAndExtent(center, extent);\n    }\n    toDefault() {\n        this.min.toDefault();\n        this.max.toDefault();\n    }\n    static createfromPoints(points, out) {\n        if (points == null)\n            throw new Error(\"points\");\n        var min = out.min;\n        var max = out.max;\n        min.x = Number.MAX_VALUE;\n        min.y = Number.MAX_VALUE;\n        min.z = Number.MAX_VALUE;\n        max.x = -Number.MAX_VALUE;\n        max.y = -Number.MAX_VALUE;\n        max.z = -Number.MAX_VALUE;\n        for (var i = 0, n = points.length; i < n; ++i) {\n            Vector3.min(min, points[i], min);\n            Vector3.max(max, points[i], max);\n        }\n    }\n    static merge(box1, box2, out) {\n        Vector3.min(box1.min, box2.min, out.min);\n        Vector3.max(box1.max, box2.max, out.max);\n    }\n    cloneTo(destObject) {\n        this.min.cloneTo(destObject.min);\n        this.max.cloneTo(destObject.max);\n    }\n    clone() {\n        var dest = new BoundBox(new Vector3(), new Vector3());\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nconst _tempVector30 = new Vector3();\nconst _tempVector31 = new Vector3();\n","import { ShadowCascadesMode } from \"./ShadowCascadesMode\";\nimport { Light, LightType } from \"./Light\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nexport class DirectionLightCom extends Light {\n    get direction() {\n        return this._direction;\n    }\n    set direction(value) {\n        value.cloneTo(this.direction);\n        this._dataModule.setDirection(this._direction);\n    }\n    ;\n    get shadowCascadesMode() {\n        return this._dataModule.shadowCascadesMode;\n    }\n    set shadowCascadesMode(value) {\n        this._dataModule.shadowCascadesMode = value;\n    }\n    get shadowTwoCascadeSplits() {\n        return this._dataModule.shadowTwoCascadeSplits;\n    }\n    set shadowTwoCascadeSplits(value) {\n        this._dataModule.shadowTwoCascadeSplits = value;\n    }\n    get shadowFourCascadeSplits() {\n        return this._shadowFourCascadeSplits;\n    }\n    set shadowFourCascadeSplits(value) {\n        if (value.x > value.y || value.y > value.z || value.z > 1.0)\n            throw \"DiretionLight:Invalid value.\";\n        value.cloneTo(this._shadowFourCascadeSplits);\n        this._dataModule.setShadowFourCascadeSplits(this._shadowFourCascadeSplits);\n    }\n    constructor() {\n        super();\n        this._direction = new Vector3();\n        this._shadowTwoCascadeSplits = 1.0 / 3.0;\n        this._shadowFourCascadeSplits = new Vector3();\n        this._lightType = LightType.Directional;\n        this.shadowCascadesMode = ShadowCascadesMode.NoCascades;\n        this.shadowFourCascadeSplits = new Vector3(1.0 / 15, 3.0 / 15.0, 7.0 / 15.0);\n        this.shadowTwoCascadeSplits = 1.0 / 3.0;\n    }\n    _creatModuleData() {\n        this._dataModule = Laya3DRender.Render3DModuleDataFactory.createDirectLight();\n    }\n    _addToLightQueue() {\n        this.owner.scene._directionLights.add(this);\n    }\n    _removeFromLightQueue() {\n        this.owner.scene._directionLights.remove(this);\n    }\n}\n","import { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { Light, LightType } from \"./Light\";\nexport class PointLightCom extends Light {\n    get range() {\n        return this._range;\n    }\n    set range(value) {\n        this._range = value;\n        this._dataModule.range = value;\n    }\n    constructor() {\n        super();\n        this._lightType = LightType.Point;\n        this.range = 6.0;\n    }\n    _creatModuleData() {\n        this._dataModule = Laya3DRender.Render3DModuleDataFactory.createPointLight();\n    }\n    _addToLightQueue() {\n        this.owner.scene._pointLights.add(this);\n    }\n    _removeFromLightQueue() {\n        this.owner.scene._pointLights.remove(this);\n    }\n    _cloneTo(dest) {\n        super._cloneTo(dest);\n        dest.range = this.range;\n        dest._lightType = LightType.Point;\n    }\n}\n","import { Light, LightType } from \"./Light\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nexport class SpotLightCom extends Light {\n    get direction() {\n        return this._direction;\n    }\n    set direction(value) {\n        value.cloneTo(this.direction);\n        this._dataModule.setDirection(this._direction);\n    }\n    ;\n    get spotAngle() {\n        return this._dataModule.spotAngle;\n    }\n    set spotAngle(value) {\n        this._dataModule.spotAngle = Math.max(Math.min(value, 179), 0);\n    }\n    get range() {\n        return this._dataModule.spotRange;\n    }\n    set range(value) {\n        this._dataModule.spotRange = value;\n    }\n    constructor() {\n        super();\n        this.spotAngle = 30.0;\n        this.range = 10.0;\n        this._direction = new Vector3();\n        this._lightType = LightType.Spot;\n    }\n    _creatModuleData() {\n        this._dataModule = Laya3DRender.Render3DModuleDataFactory.createSpotLight();\n    }\n    _addToLightQueue() {\n        this.owner.scene._spotLights.add(this);\n    }\n    _removeFromLightQueue() {\n        this.owner.scene._spotLights.remove(this);\n    }\n    _cloneTo(dest) {\n        super._cloneTo(dest);\n        dest.range = this.range;\n        dest.spotAngle = this.spotAngle;\n    }\n}\n","import { Vector2 } from \"../../../maths/Vector2\";\nimport { Light, LightMode, LightType } from \"./Light\";\nexport var AreaShape;\n(function (AreaShape) {\n    AreaShape[AreaShape[\"rectangle\"] = 0] = \"rectangle\";\n    AreaShape[AreaShape[\"ellipse\"] = 1] = \"ellipse\";\n})(AreaShape || (AreaShape = {}));\nexport class AreaLightCom extends Light {\n    constructor() {\n        super();\n        this._lightType = LightType.Area;\n        this._lightmapBakedType = LightMode.bakeOnly;\n        this._spread = 90;\n        this._maxBounces = 1024;\n        this._size = new Vector2(1, 1);\n        this._areaShape = AreaShape.rectangle;\n        this._power = 100;\n    }\n    _creatModuleData() {\n        this._dataModule = {\n            transform: null,\n            range: 0,\n            shadowResolution: 1,\n            shadowDistance: 1,\n            shadowMode: null,\n            shadowStrength: 1,\n            shadowDepthBias: 1,\n            shadowNormalBias: 1,\n            shadowNearPlane: 1\n        };\n    }\n    get lightmapBakedType() {\n        return LightMode.bakeOnly;\n    }\n    set lightmapBakedType(value) {\n        this._lightmapBakedType = LightMode.bakeOnly;\n    }\n    get shape() {\n        return this._areaShape;\n    }\n    set shape(value) {\n        this._areaShape = value;\n    }\n    get power() {\n        return this._power;\n    }\n    set power(value) {\n        this._power = value;\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        value && value.cloneTo(this._size);\n    }\n    get spread() {\n        return this._spread;\n    }\n    set spread(value) {\n        this._spread = Math.min((Math.max(0, value)), 180);\n    }\n    get maxBounces() {\n        return this._maxBounces;\n    }\n    set maxBounces(value) {\n        this._maxBounces = value;\n    }\n    _addToLightQueue() {\n    }\n    _removeFromLightQueue() {\n    }\n}\n","import { Component } from \"../../components/Component\";\nimport { BaseRender, RenderBitFlag } from \"../core/render/BaseRender\";\nimport { Sprite3D } from \"../core/Sprite3D\";\nimport { Bounds } from \"../math/Bounds\";\nimport { Event } from \"../../events/Event\";\nimport { Utils3D } from \"../utils/Utils3D\";\nimport { Vector3 } from \"../../maths/Vector3\";\nconst tempVec = new Vector3();\nexport class LODInfo {\n    constructor(mincullRate) {\n        this._mincullRate = mincullRate;\n        this._renders = [];\n        this._cachSprite3D = [];\n    }\n    get mincullRate() {\n        return this._mincullRate;\n    }\n    set mincullRate(value) {\n        this._mincullRate = value;\n    }\n    set group(value) {\n        if (value == this._group)\n            return;\n        if (this._group) {\n            for (let i = 0, n = this._renders.length; i < n; i++) {\n                let element = this._renders[i];\n                element.owner.transform.off(Event.TRANSFORM_CHANGED, this._group._updateRecaculateFlag);\n                element._LOD = -1;\n            }\n        }\n        this._group = value;\n        for (let i = 0, n = this._renders.length; i < n; i++) {\n            let element = this._renders[i];\n            element.owner.transform.on(Event.TRANSFORM_CHANGED, this._group, this._group._updateRecaculateFlag);\n            element._LOD = this._lodIndex;\n        }\n    }\n    get renders() {\n        return this._cachSprite3D;\n    }\n    set renders(value) {\n        this._cachSprite3D = value;\n        for (var i = 0, n = value.length; i < n; i++) {\n            this.addNode(value[i]);\n        }\n    }\n    addNode(node) {\n        if (!node)\n            return;\n        let ren = node;\n        if (ren._isRenderNode > 0) {\n            let components = ren.components;\n            for (let comp of components) {\n                if ((comp instanceof BaseRender) && this._renders.indexOf(comp) == -1)\n                    this._renders.push(comp);\n            }\n            this._group && node.transform.on(Event.TRANSFORM_CHANGED, this._group, this._group._updateRecaculateFlag);\n        }\n        for (var i = 0, n = node.numChildren; i < n; i++) {\n            this.addNode(node.getChildAt(i));\n        }\n    }\n    removeNode(node) {\n        let ren = node;\n        if (ren._isRenderNode > 0) {\n            let components = ren.components;\n            let index;\n            for (let comp of components) {\n                if ((comp instanceof BaseRender) && (index = this._renders.indexOf(comp)) == -1) {\n                    this._renders.splice(index, 1);\n                    comp.setRenderbitFlag(RenderBitFlag.RenderBitFlag_CullFlag, false);\n                    this._group && node.transform.off(Event.TRANSFORM_CHANGED, this._group._updateRecaculateFlag);\n                }\n            }\n        }\n        for (var i = 0, n = node.numChildren; i < n; i++) {\n            this.removeNode(node.getChildAt(i));\n        }\n    }\n    removeAllRender() {\n        this._renders.forEach(element => {\n            element.setRenderbitFlag(RenderBitFlag.RenderBitFlag_CullFlag, false);\n        });\n    }\n}\nexport class LODGroup extends Component {\n    constructor() {\n        super();\n        this._needcaculateBounds = false;\n        this._lods = [];\n        this._visialIndex = -1;\n        this._bounds = new Bounds();\n        this._lodPosition = new Vector3();\n        this.runInEditor = true;\n    }\n    shadowCullPass() {\n        return false;\n    }\n    get visialIndex() {\n        return this._visialIndex;\n    }\n    get lods() {\n        return this._lods;\n    }\n    set lods(data) {\n        this._lods = data;\n        for (var i = 0, n = this._lods.length; i < n; i++) {\n            let element = this._lods[i];\n            element._lodIndex = i;\n            element.group = this;\n        }\n        this._updateRecaculateFlag();\n        this._lodCount = this._lods.length;\n    }\n    get nowRate() {\n        return this._nowRate;\n    }\n    get bounds() {\n        this.recalculateBounds();\n        return this._bounds;\n    }\n    _onEnable() {\n        super._onEnable();\n        for (var i = 0, n = this._lods.length; i < n; i++) {\n            this._setLODinvisible(i);\n        }\n        this._visialIndex = -1;\n        this._applyVisibleRate(1);\n    }\n    _onDisable() {\n        super._onDisable();\n        this._lods.forEach(element => {\n            element.removeAllRender();\n        });\n    }\n    _applyVisibleRate(rate) {\n        for (var i = 0; i < this._lodCount; i++) {\n            let lod = this._lods[i];\n            if (rate > lod.mincullRate) {\n                if (i == -1) {\n                    this._setLODvisible(i);\n                    this._visialIndex = i;\n                    return;\n                }\n                if (i == this._visialIndex)\n                    return;\n                else {\n                    (this._visialIndex != -1) && this._setLODinvisible(this._visialIndex);\n                    this._setLODvisible(i);\n                    this._visialIndex = i;\n                    return;\n                }\n            }\n        }\n        if (this._visialIndex != -1) {\n            this._setLODinvisible(this._visialIndex);\n            this._visialIndex = -1;\n        }\n    }\n    _setLODvisible(index) {\n        let lod = this._lods[index];\n        for (var i = 0, n = lod._renders.length; i < n; i++) {\n            lod._renders[i].setRenderbitFlag(RenderBitFlag.RenderBitFlag_CullFlag, false);\n        }\n    }\n    _setLODinvisible(index) {\n        let lod = this._lods[index];\n        for (var i = 0, n = lod._renders.length; i < n; i++) {\n            lod._renders[i].setRenderbitFlag(RenderBitFlag.RenderBitFlag_CullFlag, true);\n        }\n    }\n    onDestroy() {\n        this._lods.forEach(element => {\n            let renderarray = element._renders;\n            for (var i = 0; i < renderarray.length; i++) {\n                element.removeNode(renderarray[i].owner);\n            }\n        });\n    }\n    _updateRecaculateFlag() {\n        this._needcaculateBounds = true;\n    }\n    _cloneTo(lodGroup) {\n        super._cloneTo(lodGroup);\n        let getCommomParent = (rootNode, rootCheckNode) => {\n            let nodeArray = [];\n            let node = rootNode;\n            while (!!node) {\n                if (node instanceof Sprite3D)\n                    nodeArray.push(node);\n                node = node.parent;\n            }\n            let checkNode = rootCheckNode;\n            while (!!checkNode && nodeArray.indexOf(checkNode) == -1) {\n                checkNode = checkNode.parent;\n            }\n            return checkNode;\n        };\n        let cloneHierachFun = (rootNode, rootCheckNode, destNode) => {\n            let rootparent = getCommomParent(rootNode, rootCheckNode);\n            if (!rootparent)\n                return null;\n            let path = [];\n            Utils3D._getHierarchyPath(rootparent, rootNode, path);\n            let pathcheck = [];\n            Utils3D._getHierarchyPath(rootparent, rootCheckNode, pathcheck);\n            let destParent = Utils3D._getParentNodeByHierarchyPath(destNode, path);\n            if (!destParent)\n                return null;\n            return Utils3D._getNodeByHierarchyPath(destParent, pathcheck);\n        };\n        let lodArray = [];\n        for (let i = 0, n = this._lodCount; i < n; i++) {\n            let lod = this._lods[i];\n            let cloneLOD = new LODInfo(lod.mincullRate);\n            lodArray.push(cloneLOD);\n            lod._renders.forEach(element => {\n                let node = cloneHierachFun(this.owner, element.owner, lodGroup.owner);\n                if (node)\n                    cloneLOD.addNode(node);\n            });\n        }\n        lodGroup.lods = lodArray;\n    }\n    recalculateBounds() {\n        if (!this._needcaculateBounds) {\n            return;\n        }\n        let firstBounds = true;\n        for (let i = 0, n = this._lods.length; i < n; i++) {\n            let lod = this._lods[i];\n            lod._renders.forEach(element => {\n                if (firstBounds) {\n                    element.bounds.cloneTo(this._bounds);\n                    firstBounds = false;\n                }\n                else\n                    Bounds.merge(this._bounds, element.bounds, this._bounds);\n            });\n        }\n        this._lodPosition = this._bounds._imp.getCenter();\n        let extend = this._bounds.getExtent();\n        this._size = 2 * Math.max(extend.x, extend.y, extend.z);\n        this._needcaculateBounds = false;\n    }\n    onPreRender() {\n        this.recalculateBounds();\n        let checkCamera = this.owner.scene.cullInfoCamera;\n        let maxYDistance = checkCamera.maxlocalYDistance;\n        let cameraFrustum = checkCamera.boundFrustum;\n        Vector3.subtract(this._lodPosition, checkCamera.transform.position, tempVec);\n        let length = tempVec.length();\n        if (length > checkCamera.farPlane || cameraFrustum.containsPoint(this._lodPosition) == 0) {\n            return;\n        }\n        let rateYDistance = length / checkCamera.farPlane * maxYDistance;\n        let rate = (this._size / rateYDistance);\n        this._nowRate = rate;\n        this._applyVisibleRate(rate);\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nexport class PixelLineData {\n    constructor() {\n        this.startPosition = new Vector3();\n        this.endPosition = new Vector3();\n        this.startColor = new Color();\n        this.endColor = new Color();\n        this.startNormal = new Vector3();\n        this.endNormal = new Vector3();\n    }\n    cloneTo(destObject) {\n        this.startPosition.cloneTo(destObject.startPosition);\n        this.endPosition.cloneTo(destObject.endPosition);\n        this.startColor.cloneTo(destObject.startColor);\n        this.endColor.cloneTo(destObject.endColor);\n        this.startNormal.cloneTo(destObject.startPosition);\n        this.endNormal.cloneTo(destObject.endPosition);\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { BufferState } from \"../../../webgl/utils/BufferState\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { GeometryElement } from \"../GeometryElement\";\nimport { PixelLineVertex } from \"./PixelLineVertex\";\nexport class PixelLineFilter extends GeometryElement {\n    constructor(owner, maxLineCount) {\n        super(MeshTopology.Lines, DrawType.DrawArray);\n        this._floatCountPerVertices = 10;\n        this._minUpdate = Number.MAX_VALUE;\n        this._maxUpdate = Number.MIN_VALUE;\n        this._floatBound = new Float32Array(6);\n        this._calculateBound = true;\n        this._maxLineCount = 0;\n        this._lineCount = 0;\n        var pointCount = maxLineCount * 2;\n        this._ownerRender = owner;\n        this._maxLineCount = maxLineCount;\n        this._vertices = new Float32Array(pointCount * this._floatCountPerVertices);\n        this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(PixelLineVertex.vertexDeclaration.vertexStride * pointCount, BufferUsage.Static, false);\n        this._vertexBuffer.vertexDeclaration = PixelLineVertex.vertexDeclaration;\n        var bufferState = new BufferState();\n        this.bufferState = bufferState;\n        this.bufferState.applyState([this._vertexBuffer], null);\n        var min = _tempVector0;\n        var max = _tempVector1;\n        min.setValue(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n        max.setValue(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n        this._bounds = new Bounds(min, max);\n    }\n    _getType() {\n        return PixelLineFilter._type;\n    }\n    _resizeLineData(maxCount) {\n        var pointCount = maxCount * 2;\n        var lastVertices = this._vertices;\n        this._vertexBuffer.destroy();\n        this._maxLineCount = maxCount;\n        var vertexCount = pointCount * this._floatCountPerVertices;\n        this._vertices = new Float32Array(vertexCount);\n        this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(PixelLineVertex.vertexDeclaration.vertexStride * pointCount, BufferUsage.Static, false);\n        this._vertexBuffer.vertexDeclaration = PixelLineVertex.vertexDeclaration;\n        if (vertexCount < lastVertices.length) {\n            this._vertices.set(new Float32Array(lastVertices.buffer, 0, vertexCount));\n            this._vertexBuffer.setData(this._vertices.buffer, 0, 0, vertexCount * 4);\n        }\n        else {\n            this._vertices.set(lastVertices);\n            this._vertexBuffer.setData(this._vertices.buffer, 0, 0, lastVertices.length * 4);\n        }\n        this.bufferState.applyState([this._vertexBuffer], null);\n        this._minUpdate = Number.MAX_VALUE;\n        this._maxUpdate = Number.MIN_VALUE;\n    }\n    _updateLineVertices(offset, startPosition, endPosition, startColor, endColor, startNormal = null, endNormal = null) {\n        if (startPosition) {\n            this._vertices[offset + 0] = startPosition.x;\n            this._vertices[offset + 1] = startPosition.y;\n            this._vertices[offset + 2] = startPosition.z;\n        }\n        if (startColor) {\n            this._vertices[offset + 3] = startColor.r;\n            this._vertices[offset + 4] = startColor.g;\n            this._vertices[offset + 5] = startColor.b;\n            this._vertices[offset + 6] = startColor.a;\n        }\n        if (startNormal) {\n            this._vertices[offset + 7] = startNormal.x;\n            this._vertices[offset + 8] = startNormal.y;\n            this._vertices[offset + 9] = startNormal.z;\n        }\n        if (endPosition) {\n            this._vertices[offset + 10] = endPosition.x;\n            this._vertices[offset + 11] = endPosition.y;\n            this._vertices[offset + 12] = endPosition.z;\n        }\n        if (endColor) {\n            this._vertices[offset + 13] = endColor.r;\n            this._vertices[offset + 14] = endColor.g;\n            this._vertices[offset + 15] = endColor.b;\n            this._vertices[offset + 16] = endColor.a;\n        }\n        if (endNormal) {\n            this._vertices[offset + 17] = endNormal.x;\n            this._vertices[offset + 18] = endNormal.y;\n            this._vertices[offset + 19] = endNormal.z;\n        }\n        this._minUpdate = Math.min(this._minUpdate, offset);\n        this._maxUpdate = Math.max(this._maxUpdate, offset + this._floatCountPerVertices * 2);\n        var bounds = this._bounds;\n        var floatBound = this._floatBound;\n        var min = bounds.getMin(), max = bounds.getMax();\n        Vector3.min(min, startPosition, min);\n        Vector3.min(min, endPosition, min);\n        Vector3.max(max, startPosition, max);\n        Vector3.max(max, endPosition, max);\n        bounds.setMin(min);\n        bounds.setMax(max);\n        floatBound[0] = min.x, floatBound[1] = min.y, floatBound[2] = min.z;\n        floatBound[3] = max.x, floatBound[4] = max.y, floatBound[5] = max.z;\n        this._ownerRender.boundsChange = true;\n    }\n    _reCalculateBound() {\n        if (this._calculateBound) {\n            var vertices = this._vertices;\n            var min = _tempVector0;\n            var max = _tempVector1;\n            min.setValue(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n            max.setValue(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n            for (var i = 0; i < this._lineCount * 2; ++i) {\n                var offset = this._floatCountPerVertices * i;\n                var x = vertices[offset + 0], y = vertices[offset + 1], z = vertices[offset + 2];\n                min.x = Math.min(x, min.x);\n                min.y = Math.min(y, min.y);\n                min.z = Math.min(z, min.z);\n                max.x = Math.max(x, max.x);\n                max.y = Math.max(y, max.y);\n                max.z = Math.max(z, max.z);\n            }\n            this._bounds.setMin(min);\n            this._bounds.setMax(max);\n            var floatBound = this._floatBound;\n            floatBound[0] = min.x, floatBound[1] = min.y, floatBound[2] = min.z;\n            floatBound[3] = max.x, floatBound[4] = max.y, floatBound[5] = max.z;\n            this._calculateBound = false;\n        }\n    }\n    _removeLineData(index) {\n        var floatCount = this._floatCountPerVertices * 2;\n        var nextIndex = index + 1;\n        var offset = index * floatCount;\n        var vertices = this._vertices;\n        var rightPartVertices = new Float32Array(vertices.buffer, nextIndex * floatCount * 4, (this._lineCount - nextIndex) * floatCount);\n        vertices.set(rightPartVertices, offset);\n        this._minUpdate = Math.min(this._minUpdate, offset);\n        this._maxUpdate = Math.max(this._maxUpdate, offset + rightPartVertices.length);\n        this._lineCount--;\n        var floatBound = this._floatBound;\n        var startX = vertices[offset], startY = vertices[offset + 1], startZ = vertices[offset + 2];\n        var endX = vertices[offset + 7], endY = vertices[offset + 8], endZ = vertices[offset + 9];\n        var minX = floatBound[0], minY = floatBound[1], minZ = floatBound[2];\n        var maxX = floatBound[3], maxY = floatBound[4], maxZ = floatBound[5];\n        if ((startX === minX) || (startX === maxX) || (startY === minY) || (startY === maxY) || (startZ === minZ) || (startZ === maxZ) ||\n            (endX === minX) || (endX === maxX) || (endY === minY) || (endY === maxY) || (endZ === minZ) || (endZ === maxZ))\n            this._calculateBound = true;\n    }\n    _updateLineData(index, startPosition, endPosition, startColor, endColor, startNormal = null, endNormal = null) {\n        var floatCount = this._floatCountPerVertices * 2;\n        this._updateLineVertices(index * floatCount, startPosition, endPosition, startColor, endColor, startNormal, endNormal);\n        this._calculateBound = true;\n    }\n    _updateLineDatas(index, data) {\n        var floatCount = this._floatCountPerVertices * 2;\n        var count = data.length;\n        for (var i = 0; i < count; i++) {\n            var line = data[i];\n            this._updateLineVertices((index + i) * floatCount, line.startPosition, line.endPosition, line.startColor, line.endColor, line.startNormal, line.endNormal);\n        }\n        this._calculateBound = data.length > 0;\n    }\n    _getLineData(index, out) {\n        var startPosition = out.startPosition;\n        var startColor = out.startColor;\n        var endPosition = out.endPosition;\n        var endColor = out.endColor;\n        var startNormal = out.startNormal;\n        var endNormal = out.endNormal;\n        var vertices = this._vertices;\n        var offset = index * this._floatCountPerVertices * 2;\n        startPosition.x = vertices[offset + 0];\n        startPosition.y = vertices[offset + 1];\n        startPosition.z = vertices[offset + 2];\n        startColor.r = vertices[offset + 3];\n        startColor.g = vertices[offset + 4];\n        startColor.b = vertices[offset + 5];\n        startColor.a = vertices[offset + 6];\n        startNormal.x = vertices[offset + 7];\n        startNormal.y = vertices[offset + 8];\n        startNormal.z = vertices[offset + 9];\n        endPosition.x = vertices[offset + 10];\n        endPosition.y = vertices[offset + 11];\n        endPosition.z = vertices[offset + 12];\n        endColor.r = vertices[offset + 13];\n        endColor.g = vertices[offset + 14];\n        endColor.b = vertices[offset + 15];\n        endColor.a = vertices[offset + 16];\n        endNormal.x = vertices[offset + 17];\n        endNormal.y = vertices[offset + 18];\n        endNormal.z = vertices[offset + 19];\n    }\n    _prepareRender(state) {\n        return true;\n    }\n    _updateRenderParams(state) {\n        this.clearRenderParams();\n        if (this._minUpdate !== Number.MAX_VALUE && this._maxUpdate !== Number.MIN_VALUE) {\n            this._vertexBuffer.setData(this._vertices.buffer, this._minUpdate * 4, this._minUpdate * 4, (this._maxUpdate - this._minUpdate) * 4);\n            this._minUpdate = Number.MAX_VALUE;\n            this._maxUpdate = Number.MIN_VALUE;\n        }\n        if (this._lineCount > 0) {\n            this.setDrawArrayParams(0, this._lineCount * 2);\n        }\n    }\n    destroy() {\n        if (this._destroyed)\n            return;\n        super.destroy();\n        this.bufferState.destroy();\n        this._vertexBuffer.destroy();\n        this._bufferState = null;\n        this._vertexBuffer = null;\n        this._vertices = null;\n    }\n}\nPixelLineFilter._type = GeometryElement._typeCounter++;\nconst _tempVector0 = new Vector3();\nconst _tempVector1 = new Vector3();\n","import { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { OutOfRangeError } from \"../../../utils/Error\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { UnlitMaterial } from \"../material/UnlitMaterial\";\nimport { MeshSprite3DShaderDeclaration } from \"../MeshSprite3DShaderDeclaration\";\nimport { BaseRender } from \"../render/BaseRender\";\nimport { RenderElement } from \"../render/RenderElement\";\nimport { PixelLineData } from \"./PixelLineData\";\nimport { PixelLineFilter } from \"./PixelLineFilter\";\nimport { PixelLineMaterial } from \"./PixelLineMaterial\";\nexport class PixelLineRenderer extends BaseRender {\n    constructor() {\n        super();\n        this._isRenderActive = false;\n        this._isInRenders = false;\n        this._needUpdatelines = false;\n        this._lines = [];\n        this._projectionViewWorldMatrix = new Matrix4x4();\n        this._pixelLineFilter = new PixelLineFilter(this, 20);\n        this._baseRenderNode.shaderData.addDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR);\n        this.geometryBounds = this._pixelLineFilter._bounds;\n    }\n    get bounds() {\n        var lineFilter = this._pixelLineFilter;\n        lineFilter._reCalculateBound();\n        return super.bounds;\n    }\n    get pixelLinesDatas() {\n        if (this._needUpdatelines) {\n            this._updateLineDatas();\n        }\n        return this._lines;\n    }\n    set pixelLinesDatas(value) {\n        this.clear();\n        if (value.length > this._pixelLineFilter._maxLineCount) {\n            value = value.slice(0, this._pixelLineFilter._maxLineCount);\n            console.warn(\"reach max line count\");\n        }\n        this.addLines(value);\n    }\n    get maxLineCount() {\n        return this._pixelLineFilter._maxLineCount;\n    }\n    set maxLineCount(value) {\n        this._pixelLineFilter._resizeLineData(value);\n        this._pixelLineFilter._lineCount = Math.min(this._pixelLineFilter._lineCount, value);\n    }\n    get lineCount() {\n        return this._pixelLineFilter._lineCount;\n    }\n    _onAdded() {\n        super._onAdded();\n        this._changeRenderObjects(0, PixelLineMaterial.defaultMaterial);\n    }\n    _onEnable() {\n        this._isRenderActive = true;\n        if (this._pixelLineFilter._lineCount != 0) {\n            (this.owner.scene)._addRenderObject(this);\n            this._isInRenders = true;\n        }\n        this._setBelongScene(this.owner.scene);\n    }\n    _onDisable() {\n        if (this._pixelLineFilter && this._pixelLineFilter._lineCount != 0 && this._isRenderActive) {\n            this.owner.scene._removeRenderObject(this);\n            this._isInRenders = false;\n        }\n        this._isRenderActive = false;\n        this._setUnBelongScene();\n    }\n    _createBaseRenderNode() {\n        return Laya3DRender.Render3DModuleDataFactory.createMeshRenderNode();\n    }\n    renderUpdate(context) {\n        this._renderElements.forEach((element, index) => {\n            var _a, _b;\n            element._renderElementOBJ.isRender = element._geometry._prepareRender(context);\n            element._geometry._updateRenderParams(context);\n            let material = (_a = this.sharedMaterial) !== null && _a !== void 0 ? _a : UnlitMaterial.defaultMaterial;\n            material = (_b = this.sharedMaterials[index]) !== null && _b !== void 0 ? _b : material;\n            element.material = material;\n            element._renderElementOBJ.materialRenderQueue = material.renderQueue;\n        });\n    }\n    _changeRenderObjects(index, material) {\n        var renderObjects = this._renderElements;\n        (material) || (material = PixelLineMaterial.defaultMaterial);\n        var renderElement = renderObjects[index];\n        (renderElement) || (renderElement = renderObjects[index] = new RenderElement());\n        renderElement.setTransform(this.owner._transform);\n        renderElement.setGeometry(this._pixelLineFilter);\n        renderElement.render = this;\n        renderElement.material = material;\n        this._setRenderElements();\n    }\n    _pixelLinesDataChange(key) {\n        if (key != null) {\n            let keyN = parseInt(key);\n            let line = this._lines[keyN];\n            if (line) {\n                this.setLine(keyN, line.startPosition, line.endPosition, line.startColor, line.endColor);\n            }\n        }\n    }\n    addLine(startPosition, endPosition, startColor, endColor) {\n        if (this._pixelLineFilter._lineCount !== this._pixelLineFilter._maxLineCount) {\n            this._pixelLineFilter._updateLineData(this._pixelLineFilter._lineCount++, startPosition, endPosition, startColor, endColor);\n        }\n        else {\n            throw new Error(\"reach max line count\");\n        }\n        if (this._isRenderActive && !this._isInRenders && this._pixelLineFilter._lineCount > 0) {\n            this.owner.scene && this.owner.scene._addRenderObject(this);\n            this._isInRenders = true;\n        }\n        this._needUpdatelines = true;\n    }\n    addLineWithNormal(startPosition, endPosition, startColor, endColor, startNormal, endNormal) {\n        if (this._pixelLineFilter._lineCount !== this._pixelLineFilter._maxLineCount) {\n            this._pixelLineFilter._updateLineData(this._pixelLineFilter._lineCount++, startPosition, endPosition, startColor, endColor, startNormal, endNormal);\n        }\n        else {\n            throw new Error(\"reach max line count\");\n        }\n        if (this._isRenderActive && !this._isInRenders && this._pixelLineFilter._lineCount > 0) {\n            this.owner.scene && this.owner.scene._addRenderObject(this);\n            this._isInRenders = true;\n        }\n        this._needUpdatelines = true;\n    }\n    addLines(lines) {\n        var lineCount = this._pixelLineFilter._lineCount;\n        var addCount = lines.length;\n        if (lineCount + addCount > this._pixelLineFilter._maxLineCount) {\n            throw new Error(\"reach max line count\");\n        }\n        else {\n            this._pixelLineFilter._updateLineDatas(lineCount, lines);\n            this._pixelLineFilter._lineCount += addCount;\n            this.boundsChange = true;\n        }\n        if (this._isRenderActive && !this._isInRenders && this._pixelLineFilter._lineCount > 0) {\n            this.owner.scene && this.owner.scene._addRenderObject(this);\n            this._isInRenders = true;\n        }\n        this._needUpdatelines = true;\n    }\n    removeLine(index) {\n        if (index < this._pixelLineFilter._lineCount)\n            this._pixelLineFilter._removeLineData(index);\n        else\n            throw new OutOfRangeError(index);\n        if (this._isRenderActive && this._isInRenders && this._pixelLineFilter._lineCount == 0) {\n            this.owner.scene && this.owner.scene._removeRenderObject(this);\n            this._isInRenders = false;\n        }\n        this._needUpdatelines = true;\n    }\n    setLine(index, startPosition, endPosition, startColor, endColor) {\n        if (index < this._pixelLineFilter._lineCount) {\n            this._pixelLineFilter._updateLineData(index, startPosition, endPosition, startColor, endColor);\n            let pixeldata = this._lines[index];\n            if (pixeldata) {\n                startColor.cloneTo(pixeldata.startColor);\n                endColor.cloneTo(pixeldata.endColor);\n                startPosition.cloneTo(pixeldata.startPosition);\n                endPosition.cloneTo(pixeldata.endPosition);\n            }\n        }\n        else\n            throw new OutOfRangeError(index);\n    }\n    setLineWithNormal(index, startPosition, endPosition, startColor, endColor, startNormal, endNormal) {\n        if (index < this._pixelLineFilter._lineCount) {\n            this._pixelLineFilter._updateLineData(index, startPosition, endPosition, startColor, endColor, startNormal, endNormal);\n            let pixeldata = this._lines[index];\n            if (pixeldata) {\n                startColor.cloneTo(pixeldata.startColor);\n                endColor.cloneTo(pixeldata.endColor);\n                startPosition.cloneTo(pixeldata.startPosition);\n                endPosition.cloneTo(pixeldata.endPosition);\n                startNormal && startNormal.cloneTo(pixeldata.startNormal);\n                endNormal && endNormal.cloneTo(pixeldata.endNormal);\n            }\n        }\n        else\n            throw new OutOfRangeError(index);\n    }\n    getLine(index, out) {\n        if (index < this.lineCount)\n            this._pixelLineFilter._getLineData(index, out);\n        else\n            throw new OutOfRangeError(index);\n    }\n    _updateLineDatas() {\n        let n = this.lineCount;\n        this._lines = [];\n        for (let i = 0; i < n; i++) {\n            let pixelLineDatas = new PixelLineData();\n            this.getLine(i, pixelLineDatas);\n            this._lines.push(pixelLineDatas);\n        }\n        this._needUpdatelines = false;\n    }\n    clear() {\n        this._pixelLineFilter._lineCount = 0;\n        if (this._isRenderActive && this._isInRenders) {\n            this.owner.scene && this.owner.scene._removeRenderObject(this);\n            this._isInRenders = false;\n        }\n    }\n    _onDestroy() {\n        this._pixelLineFilter.destroy();\n        this._pixelLineFilter = null;\n        super._onDestroy();\n    }\n    _cloneTo(dest) {\n        super._cloneTo(dest);\n        dest.maxLineCount = this.maxLineCount;\n        const lineCount = this.lineCount;\n        let linedata = new PixelLineData();\n        for (let i = 0, n = lineCount; i < n; i++) {\n            this.getLine(i, linedata);\n            dest.addLine(linedata.startPosition, linedata.endPosition, linedata.startColor, linedata.endColor);\n        }\n    }\n}\n","export class AnimatorPlayState {\n    get currentState() {\n        return this._currentState;\n    }\n    set currentState(value) {\n        this._currentState = value;\n        this._currentState.curTransition = null;\n    }\n    get normalizedTime() {\n        return this._normalizedTime;\n    }\n    get duration() {\n        return this._duration;\n    }\n    get animatorState() {\n        return this._currentState;\n    }\n    constructor() {\n        this._currentState = null;\n    }\n    _resetPlayState(startTime, clipDuration) {\n        this._finish = false;\n        this._playEventIndex = 0;\n        this._startPlayTime = startTime;\n        this._elapsedTime = startTime;\n        this._lastIsFront = true;\n        this._normalizedTime = this._elapsedTime / clipDuration;\n        var playTime = this._normalizedTime % 1.0;\n        this._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n    }\n    _cloneTo(dest) {\n        dest._finish = this._finish;\n        dest._startPlayTime = this._startPlayTime;\n        dest._playEventIndex = this._playEventIndex;\n        dest._elapsedTime = this._elapsedTime;\n        dest._normalizedTime = this._normalizedTime;\n        dest._normalizedPlayTime = this._normalizedPlayTime;\n        dest._lastIsFront = this._lastIsFront;\n    }\n}\n","import { AnimatorPlayState } from \"./AnimatorPlayState\";\nexport class AnimatorControllerLayer {\n    get defaultState() {\n        return this._defaultState;\n    }\n    set defaultState(value) {\n        this._defaultState = value;\n    }\n    get avatarMask() {\n        return this._avatarMask;\n    }\n    set avatarMask(value) {\n        this._avatarMask = value;\n    }\n    get defaultStateName() {\n        if (!this._defaultState) {\n            return null;\n        }\n        return this._defaultState.name;\n    }\n    set defaultStateName(value) {\n        this._defaultState = this.getAnimatorState(value);\n        if (null == this._defaultState) {\n            if (0 == this._states.length) {\n                this._defaultStateNameCatch = value;\n            }\n            else {\n                for (var i = this._states.length - 1; i >= 0; i--) {\n                    if (this._states[i].name == value) {\n                        this._defaultState = this._states[i];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    get states() {\n        return this._states;\n    }\n    set states(states) {\n        if (this._states === states)\n            return;\n        if (this._states.length > 0) {\n            let removed = this._states.filter(s => states.indexOf(s) == -1);\n            for (let state of removed)\n                this.removeState(state);\n        }\n        if (states.length > 0) {\n            let newAdded = states.filter(s => this._states.indexOf(s) == -1);\n            for (let state of newAdded)\n                this.addState(state);\n        }\n        this._states.length = 0;\n        this._states.push(...states);\n    }\n    constructor(name) {\n        this._referenceCount = 0;\n        this._playType = -1;\n        this._crossDuration = -1;\n        this._crossMark = 0;\n        this._crossNodesOwnersCount = 0;\n        this._crossNodesOwners = [];\n        this._crossNodesOwnersIndicesMap = {};\n        this._srcCrossClipNodeIndices = [];\n        this._destCrossClipNodeIndices = [];\n        this._states = [];\n        this._playStateInfo = new AnimatorPlayState();\n        this._crossPlayStateInfo = new AnimatorPlayState();\n        this.blendingMode = AnimatorControllerLayer.BLENDINGMODE_OVERRIDE;\n        this.defaultWeight = 1.0;\n        this.playOnWake = true;\n        this.enable = true;\n        this.name = name;\n    }\n    _removeClip(clipStateInfos, index, state) {\n        var clip = state._clip;\n        var clipStateInfo = clipStateInfos[index];\n        clipStateInfos.splice(index, 1);\n        if (this._animator) {\n            var frameNodes = clip._nodes;\n            var nodeOwners = clipStateInfo._nodeOwners;\n            clip._removeReference();\n            for (var i = 0, n = frameNodes.count; i < n; i++)\n                this._animator._removeKeyframeNodeOwner(nodeOwners, frameNodes.getNodeByIndex(i));\n        }\n    }\n    _getReferenceCount() {\n        return this._referenceCount;\n    }\n    _addReference(count = 1) {\n        for (var i = 0, n = this._states.length; i < n; i++)\n            this._states[i]._addReference(count);\n        this._referenceCount += count;\n    }\n    _removeReference(count = 1) {\n        for (var i = 0, n = this._states.length; i < n; i++)\n            this._states[i]._removeReference(count);\n        this._referenceCount -= count;\n    }\n    _clearReference() {\n        this._removeReference(-this._referenceCount);\n    }\n    getCurrentPlayState() {\n        return this._playStateInfo;\n    }\n    getAnimatorState(name) {\n        var state;\n        ;\n        for (let i = 0; i < this._states.length; i++) {\n            if (this._states[i].name == name) {\n                state = this._states[i];\n                break;\n            }\n        }\n        return state ? state : null;\n    }\n    addState(state) {\n        var stateName = state.name;\n        if (this.getAnimatorState(stateName)) {\n            throw new Error(\"AnimatorControllerLayer:this stat's name has exist.\");\n        }\n        else {\n            this._states.push(state);\n            if (stateName == this._defaultStateNameCatch) {\n                this._defaultState = state;\n                this._defaultStateNameCatch = null;\n            }\n            if (this._animator) {\n                (state._clip) && (state._clip._addReference());\n                this._animator._getOwnersByClip(state);\n            }\n        }\n    }\n    removeState(state) {\n        var states = this._states;\n        var index = -1;\n        for (var i = 0, n = states.length; i < n; i++) {\n            if (states[i] === state) {\n                index = i;\n                break;\n            }\n        }\n        if (index !== -1)\n            this._removeClip(states, index, state);\n    }\n    destroy() {\n        this._clearReference();\n        this._states = [];\n        this._playStateInfo = null;\n        this._crossPlayStateInfo = null;\n        this._defaultState = null;\n    }\n    cloneTo(destObject) {\n        destObject.name = this.name;\n        destObject.blendingMode = this.blendingMode;\n        destObject.defaultWeight = this.defaultWeight;\n        destObject.playOnWake = this.playOnWake;\n        this.avatarMask && (destObject.avatarMask = this._avatarMask.clone());\n    }\n    clone() {\n        var dest = new AnimatorControllerLayer(this.name);\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nAnimatorControllerLayer.BLENDINGMODE_OVERRIDE = 0;\nAnimatorControllerLayer.BLENDINGMODE_ADDTIVE = 1;\n","import { ClassUtils } from \"../../../utils/ClassUtils\";\nimport { SimpleSkinnedMeshRenderer } from \"../../core/SimpleSkinnedMeshRenderer\";\nexport class AnimatorResource {\n    static getAnimatorResource(sprite, propertyKey) {\n        switch (propertyKey) {\n            case \"simpleSkinnedMeshRenderer\":\n                return sprite.getComponent(SimpleSkinnedMeshRenderer);\n            default:\n                return sprite.getComponent(ClassUtils.getClass(propertyKey));\n                break;\n        }\n        return null;\n    }\n}\n","import { Component } from \"../../../components/Component\";\nimport { NodeFlags } from \"../../../Const\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { Material } from \"../../../resource/Material\";\nimport { Utils3D } from \"../../utils/Utils3D\";\nimport { AnimatorControllerLayer } from \"./AnimatorControllerLayer\";\nimport { AnimatorResource } from \"./AnimatorResource\";\nimport { KeyframeNodeOwner, KeyFrameValueType } from \"./KeyframeNodeOwner\";\nimport { Color } from \"../../../maths/Color\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { AnimatorUpdateMode } from \"../../../components/AnimatorUpdateMode\";\nimport { AnimatorStateCondition } from \"../../../components/AnimatorStateCondition\";\nimport { Delegate } from \"../../../utils/Delegate\";\nexport class Animator extends Component {\n    get controller() {\n        return this._controller;\n    }\n    set controller(val) {\n        if (this._controller)\n            this._controller._removeReference();\n        this._controller = val;\n        if (val) {\n            val._addReference();\n            val.updateTo(this);\n        }\n    }\n    get speed() {\n        return this._speed;\n    }\n    set speed(value) {\n        this._speed = value;\n    }\n    set updateMode(value) {\n        this._updateMode = value;\n    }\n    set lowUpdateDelty(value) {\n        this._lowUpdateDelty = value;\n    }\n    get controllerLayerCount() {\n        return this._controllerLayers.length;\n    }\n    get animatorParams() {\n        return this._animatorParams;\n    }\n    set animatorParams(values) {\n        this._animatorParams = values;\n    }\n    get sleep() {\n        return this._finishSleep;\n    }\n    set sleep(value) {\n        this._finishSleep = value;\n    }\n    constructor() {\n        super();\n        this._keyframeNodeOwners = [];\n        this._updateMode = AnimatorUpdateMode.Normal;\n        this._lowUpdateDelty = 20;\n        this._animatorParams = {};\n        this._linkAvatarSpritesData = {};\n        this._linkAvatarSprites = [];\n        this.cullingMode = Animator.CULLINGMODE_CULLCOMPLETELY;\n        this._finishSleep = false;\n        this._LateUpdateEvents = new Delegate();\n        this._controllerLayers = [];\n        this._speed = 1.0;\n        this._keyframeNodeOwnerMap = {};\n        this._updateMark = 0;\n    }\n    _addKeyframeNodeOwner(clipOwners, node, propertyOwner) {\n        var nodeIndex = node._indexInList;\n        var fullPath = node.fullPath;\n        var keyframeNodeOwner = this._keyframeNodeOwnerMap[fullPath];\n        let mat = false;\n        if (keyframeNodeOwner) {\n            keyframeNodeOwner.referenceCount++;\n            clipOwners[nodeIndex] = keyframeNodeOwner;\n        }\n        else {\n            var property = propertyOwner;\n            for (var i = 0, n = node.propertyCount; i < n; i++) {\n                property = property[node.getPropertyByIndex(i)];\n                if (property instanceof Material) {\n                    mat = true;\n                }\n                if (!property)\n                    break;\n            }\n            keyframeNodeOwner = this._keyframeNodeOwnerMap[fullPath] = new KeyframeNodeOwner();\n            keyframeNodeOwner.isMaterial = mat;\n            keyframeNodeOwner.fullPath = fullPath;\n            keyframeNodeOwner.indexInList = this._keyframeNodeOwners.length;\n            keyframeNodeOwner.referenceCount = 1;\n            keyframeNodeOwner.propertyOwner = propertyOwner;\n            keyframeNodeOwner.nodePath = node.nodePath;\n            keyframeNodeOwner.callbackFunData = node.callbackFunData;\n            keyframeNodeOwner.callParams = node.callParams;\n            keyframeNodeOwner.getCallbackNode();\n            var propertyCount = node.propertyCount;\n            var propertys = [];\n            for (i = 0; i < propertyCount; i++)\n                propertys[i] = node.getPropertyByIndex(i);\n            keyframeNodeOwner.property = propertys;\n            keyframeNodeOwner.type = node.type;\n            if (property) {\n                if (node.type === KeyFrameValueType.Float || node.type === KeyFrameValueType.Boolean) {\n                    keyframeNodeOwner.defaultValue = property;\n                }\n                else {\n                    var defaultValue = new property.constructor();\n                    property.cloneTo(defaultValue);\n                    keyframeNodeOwner.defaultValue = defaultValue;\n                    keyframeNodeOwner.value = new property.constructor();\n                    keyframeNodeOwner.crossFixedValue = new property.constructor();\n                }\n            }\n            this._keyframeNodeOwners.push(keyframeNodeOwner);\n            clipOwners[nodeIndex] = keyframeNodeOwner;\n        }\n    }\n    _removeKeyframeNodeOwner(nodeOwners, node) {\n        var fullPath = node.fullPath;\n        var keyframeNodeOwner = this._keyframeNodeOwnerMap[fullPath];\n        if (keyframeNodeOwner) {\n            keyframeNodeOwner.referenceCount--;\n            if (keyframeNodeOwner.referenceCount === 0) {\n                delete this._keyframeNodeOwnerMap[fullPath];\n                this._keyframeNodeOwners.splice(this._keyframeNodeOwners.indexOf(keyframeNodeOwner), 1);\n            }\n            nodeOwners[node._indexInList] = null;\n        }\n    }\n    _getOwnersByClip(clipStateInfo) {\n        if (!clipStateInfo._clip)\n            return;\n        var frameNodes = clipStateInfo._clip._nodes;\n        var frameNodesCount = frameNodes.count;\n        var nodeOwners = clipStateInfo._nodeOwners;\n        nodeOwners.length = frameNodesCount;\n        for (var i = 0; i < frameNodesCount; i++) {\n            var node = frameNodes.getNodeByIndex(i);\n            var property = this.owner;\n            for (var j = 0, m = node.ownerPathCount; j < m; j++) {\n                var ownPat = node.getOwnerPathByIndex(j);\n                if (ownPat === \"\") {\n                    break;\n                }\n                else {\n                    property = property.getChild(ownPat);\n                    if (!property)\n                        break;\n                }\n            }\n            if (property) {\n                var propertyOwner = node.propertyOwner;\n                const oriProperty = property;\n                (propertyOwner) && (property = property[propertyOwner]);\n                if (!property) {\n                    property = AnimatorResource.getAnimatorResource(oriProperty, propertyOwner);\n                }\n                property && this._addKeyframeNodeOwner(nodeOwners, node, property);\n            }\n        }\n    }\n    _updatePlayer(animatorState, playState, elapsedTime, islooping, layerIndex) {\n        var clipDuration = animatorState._clip._duration * (animatorState.clipEnd - animatorState.clipStart);\n        var lastElapsedTime = playState._elapsedTime;\n        var elapsedPlaybackTime = lastElapsedTime + elapsedTime;\n        playState._lastElapsedTime = lastElapsedTime;\n        playState._elapsedTime = elapsedPlaybackTime;\n        var normalizedTime = elapsedPlaybackTime / clipDuration;\n        playState._normalizedTime = normalizedTime;\n        var playTime = normalizedTime % 1.0;\n        playState._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\n        playState._duration = clipDuration;\n        if (elapsedPlaybackTime >= clipDuration) {\n            if (!islooping) {\n                playState._finish = true;\n                playState._elapsedTime = clipDuration;\n                playState._normalizedPlayTime = 1.0;\n            }\n            else {\n                let loopNum = Math.floor(elapsedPlaybackTime / clipDuration);\n                let pLoopNum = Math.floor(lastElapsedTime / clipDuration);\n                if (pLoopNum != loopNum) {\n                    animatorState._eventLoop();\n                }\n            }\n        }\n        (!playState._finish) && animatorState._eventStateUpdate(playState._normalizedPlayTime);\n        this._applyTransition(animatorState, layerIndex, animatorState._eventtransition(playState._normalizedPlayTime, this.animatorParams));\n        return;\n    }\n    _applyTransition(state, layerindex, transition) {\n        if (!transition) {\n            if (state.curTransition)\n                state.curTransition = null;\n            return;\n        }\n        if (transition == state.curTransition)\n            return;\n        state.curTransition = transition;\n        this._LateUpdateEvents.add(this.crossFade, this, [transition.destState.name, transition.transduration, layerindex, transition.transstartoffset]);\n    }\n    _updateStateFinish(animatorState, playState) {\n        if (playState._finish) {\n            animatorState._eventExit();\n        }\n    }\n    _updateEventScript(stateInfo, playStateInfo) {\n        if (!this.owner._getBit(NodeFlags.HAS_SCRIPT))\n            return;\n        let clip = stateInfo._clip;\n        let events = clip._animationEvents;\n        if (!events || 0 == events.length || null == playStateInfo.animatorState)\n            return;\n        let clipDuration = clip._duration;\n        let time = playStateInfo._normalizedPlayTime * clipDuration;\n        let parentPlayTime = playStateInfo._parentPlayTime;\n        if (null == parentPlayTime) {\n            parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\n        }\n        if (time < parentPlayTime) {\n            this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipEnd);\n        }\n        this._eventScript(events, parentPlayTime, time);\n        playStateInfo._parentPlayTime = time;\n    }\n    _eventScript(events, parentPlayTime, currPlayTime) {\n        let scripts = this.owner.components;\n        for (let i = 0, len = events.length; i < len; i++) {\n            let e = events[i];\n            if (e.time > parentPlayTime && e.time <= currPlayTime) {\n                for (let j = 0, m = scripts.length; j < m; j++) {\n                    let script = scripts[j];\n                    if (script._isScript()) {\n                        let fun = script[e.eventName];\n                        (fun) && (fun.apply(script, e.params));\n                    }\n                }\n            }\n            else if (e.time > currPlayTime) {\n                break;\n            }\n        }\n    }\n    _updateClipDatas(animatorState, addtive, playStateInfo, animatorMask = null) {\n        var clip = animatorState._clip;\n        var clipDuration = clip._duration;\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\n        var currentFrameIndices = animatorState._currentFrameIndices;\n        var frontPlay = playStateInfo._elapsedTime > playStateInfo._lastElapsedTime;\n        clip._evaluateClipDatasRealTime(clip._nodes, curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas, animatorMask);\n    }\n    _applyFloat(defaultValue, nodeOwner, additive, weight, isFirstLayer, data) {\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                defaultValue += weight * data;\n            }\n            else {\n                var oriValue = defaultValue;\n                defaultValue = oriValue + weight * (data - oriValue);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive)\n                    defaultValue = nodeOwner.defaultValue + data;\n                else\n                    defaultValue = data;\n            }\n            else {\n                if (additive) {\n                    defaultValue = nodeOwner.defaultValue + weight * (data);\n                }\n                else {\n                    var defValue = nodeOwner.defaultValue;\n                    defaultValue = defValue + weight * (data - defValue);\n                }\n            }\n        }\n        return defaultValue;\n    }\n    _applyVec2(defaultValue, nodeOwner, additive, weight, isFirstLayer, data) {\n        if (!defaultValue)\n            return null;\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                defaultValue.x += weight * data.x;\n                defaultValue.y += weight * data.y;\n            }\n            else {\n                var oriValue = defaultValue;\n                defaultValue.x = oriValue.x + weight * (data.x - oriValue.x);\n                defaultValue.y = oriValue.y + weight * (data.y - oriValue.y);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive) {\n                    defaultValue.x = nodeOwner.defaultValue.x + data.x;\n                    defaultValue.y = nodeOwner.defaultValue.y + data.y;\n                }\n                else\n                    data.cloneTo(defaultValue);\n            }\n            else {\n                if (additive) {\n                    defaultValue.x = nodeOwner.defaultValue.x + weight * (data.x);\n                    defaultValue.y = nodeOwner.defaultValue.y + weight * (data.y);\n                }\n                else {\n                    var defValue = nodeOwner.defaultValue;\n                    defaultValue.x = defValue.x + weight * (data.x - defValue.x);\n                    defaultValue.y = defValue.y + weight * (data.y - defValue.y);\n                }\n            }\n        }\n        return defaultValue;\n    }\n    _applyVec3(defaultValue, nodeOwner, additive, weight, isFirstLayer, data) {\n        if (!defaultValue)\n            return null;\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                defaultValue.x += weight * data.x;\n                defaultValue.y += weight * data.y;\n                defaultValue.z += weight * data.z;\n            }\n            else {\n                var oriValue = defaultValue;\n                defaultValue.x = oriValue.x + weight * (data.x - oriValue.x);\n                defaultValue.y = oriValue.y + weight * (data.y - oriValue.y);\n                defaultValue.z = oriValue.z + weight * (data.z - oriValue.z);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive) {\n                    defaultValue.x = nodeOwner.defaultValue.x + data.x;\n                    defaultValue.y = nodeOwner.defaultValue.y + data.y;\n                    defaultValue.z = nodeOwner.defaultValue.z + data.z;\n                }\n                else\n                    data.cloneTo(defaultValue);\n            }\n            else {\n                if (additive) {\n                    defaultValue.x = nodeOwner.defaultValue.x + weight * (data.x);\n                    defaultValue.y = nodeOwner.defaultValue.y + weight * (data.y);\n                    defaultValue.z = nodeOwner.defaultValue.z + weight * (data.z);\n                }\n                else {\n                    var defValue = nodeOwner.defaultValue;\n                    defaultValue.x = defValue.x + weight * (data.x - defValue.x);\n                    defaultValue.y = defValue.y + weight * (data.y - defValue.y);\n                    defaultValue.z = defValue.z + weight * (data.z - defValue.z);\n                }\n            }\n        }\n        return defaultValue;\n    }\n    _applyVec4(defaultValue, nodeOwner, additive, weight, isFirstLayer, data) {\n        if (!defaultValue)\n            return null;\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                defaultValue.x += weight * data.x;\n                defaultValue.y += weight * data.y;\n                defaultValue.z += weight * data.z;\n                defaultValue.w += weight * data.w;\n            }\n            else {\n                var oriValue = defaultValue;\n                defaultValue.x = oriValue.x + weight * (data.x - oriValue.x);\n                defaultValue.y = oriValue.y + weight * (data.y - oriValue.y);\n                defaultValue.z = oriValue.z + weight * (data.z - oriValue.z);\n                defaultValue.w = oriValue.w + weight * (data.w - oriValue.w);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive) {\n                    defaultValue.x = nodeOwner.defaultValue.x + data.x;\n                    defaultValue.y = nodeOwner.defaultValue.y + data.y;\n                    defaultValue.z = nodeOwner.defaultValue.z + data.z;\n                    defaultValue.w = nodeOwner.defaultValue.w + data.w;\n                }\n                else\n                    data.cloneTo(defaultValue);\n            }\n            else {\n                if (additive) {\n                    defaultValue.x = nodeOwner.defaultValue.x + weight * (data.x);\n                    defaultValue.y = nodeOwner.defaultValue.y + weight * (data.y);\n                    defaultValue.z = nodeOwner.defaultValue.z + weight * (data.z);\n                    defaultValue.w = nodeOwner.defaultValue.w + weight * (data.w);\n                }\n                else {\n                    var defValue = nodeOwner.defaultValue;\n                    defaultValue.x = defValue.x + weight * (data.x - defValue.x);\n                    defaultValue.y = defValue.y + weight * (data.y - defValue.y);\n                    defaultValue.z = defValue.z + weight * (data.z - defValue.z);\n                    defaultValue.w = defValue.w + weight * (data.w - defValue.w);\n                }\n            }\n        }\n        return defaultValue;\n    }\n    _applyColor(defaultValue, nodeOwner, additive, weight, isFirstLayer, data) {\n        if (!defaultValue)\n            return null;\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                defaultValue.r += weight * data.x;\n                defaultValue.g += weight * data.y;\n                defaultValue.b += weight * data.z;\n                defaultValue.a += weight * data.w;\n            }\n            else {\n                var oriValue = defaultValue;\n                defaultValue.r = oriValue.r + weight * (data.x - oriValue.r);\n                defaultValue.g = oriValue.g + weight * (data.y - oriValue.g);\n                defaultValue.b = oriValue.b + weight * (data.z - oriValue.b);\n                defaultValue.a = oriValue.a + weight * (data.w - oriValue.a);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive) {\n                    defaultValue.r = nodeOwner.defaultValue.r + data.x;\n                    defaultValue.g = nodeOwner.defaultValue.g + data.y;\n                    defaultValue.b = nodeOwner.defaultValue.b + data.z;\n                    defaultValue.a = nodeOwner.defaultValue.a + data.w;\n                }\n                else {\n                    defaultValue.setValue(data.x, data.y, data.z, data.w);\n                }\n            }\n            else {\n                if (additive) {\n                    defaultValue.r = nodeOwner.defaultValue.r + weight * (data.x);\n                    defaultValue.g = nodeOwner.defaultValue.g + weight * (data.y);\n                    defaultValue.b = nodeOwner.defaultValue.b + weight * (data.z);\n                    defaultValue.a = nodeOwner.defaultValue.a + weight * (data.w);\n                }\n                else {\n                    var defValue = nodeOwner.defaultValue;\n                    defaultValue.r = defValue.r + weight * (data.x - defValue.r);\n                    defaultValue.g = defValue.g + weight * (data.y - defValue.g);\n                    defaultValue.b = defValue.b + weight * (data.z - defValue.b);\n                    defaultValue.a = defValue.a + weight * (data.w - defValue.a);\n                }\n            }\n        }\n        return defaultValue;\n    }\n    _applyPositionAndRotationEuler(nodeOwner, additive, weight, isFirstLayer, data, out) {\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                out.x += weight * data.x;\n                out.y += weight * data.y;\n                out.z += weight * data.z;\n            }\n            else {\n                var oriX = out.x;\n                var oriY = out.y;\n                var oriZ = out.z;\n                out.x = oriX + weight * (data.x - oriX);\n                out.y = oriY + weight * (data.y - oriY);\n                out.z = oriZ + weight * (data.z - oriZ);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive) {\n                    var defValue = nodeOwner.defaultValue;\n                    out.x = defValue.x + data.x;\n                    out.y = defValue.y + data.y;\n                    out.z = defValue.z + data.z;\n                }\n                else {\n                    out.x = data.x;\n                    out.y = data.y;\n                    out.z = data.z;\n                }\n            }\n            else {\n                defValue = nodeOwner.defaultValue;\n                if (additive) {\n                    out.x = defValue.x + weight * data.x;\n                    out.y = defValue.y + weight * data.y;\n                    out.z = defValue.z + weight * data.z;\n                }\n                else {\n                    var defX = defValue.x;\n                    var defY = defValue.y;\n                    var defZ = defValue.z;\n                    out.x = defX + weight * (data.x - defX);\n                    out.y = defY + weight * (data.y - defY);\n                    out.z = defZ + weight * (data.z - defZ);\n                }\n            }\n        }\n    }\n    _applyRotation(nodeOwner, additive, weight, isFirstLayer, clipRot, localRotation) {\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                Utils3D.quaternionWeight(clipRot, weight, _tempQuaternion1);\n                _tempQuaternion1.normalize(_tempQuaternion1);\n                Quaternion.multiply(localRotation, _tempQuaternion1, localRotation);\n            }\n            else {\n                Quaternion.lerp(localRotation, clipRot, weight, localRotation);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive) {\n                    var defaultRot = nodeOwner.defaultValue;\n                    Quaternion.multiply(defaultRot, clipRot, localRotation);\n                }\n                else {\n                    localRotation.x = clipRot.x;\n                    localRotation.y = clipRot.y;\n                    localRotation.z = clipRot.z;\n                    localRotation.w = clipRot.w;\n                }\n            }\n            else {\n                defaultRot = nodeOwner.defaultValue;\n                if (additive) {\n                    Utils3D.quaternionWeight(clipRot, weight, _tempQuaternion1);\n                    _tempQuaternion1.normalize(_tempQuaternion1);\n                    Quaternion.multiply(defaultRot, _tempQuaternion1, localRotation);\n                }\n                else {\n                    Quaternion.lerp(defaultRot, clipRot, weight, localRotation);\n                }\n            }\n        }\n    }\n    _applyScale(nodeOwner, additive, weight, isFirstLayer, clipSca, localScale) {\n        if (nodeOwner.updateMark === this._updateMark) {\n            if (additive) {\n                Utils3D.scaleWeight(clipSca, weight, _tempVector31);\n                localScale.x = localScale.x * _tempVector31.x;\n                localScale.y = localScale.y * _tempVector31.y;\n                localScale.z = localScale.z * _tempVector31.z;\n            }\n            else {\n                Utils3D.scaleBlend(localScale, clipSca, weight, localScale);\n            }\n        }\n        else {\n            if (isFirstLayer) {\n                if (additive) {\n                    var defaultSca = nodeOwner.defaultValue;\n                    localScale.x = defaultSca.x * clipSca.x;\n                    localScale.y = defaultSca.y * clipSca.y;\n                    localScale.z = defaultSca.z * clipSca.z;\n                }\n                else {\n                    localScale.x = clipSca.x;\n                    localScale.y = clipSca.y;\n                    localScale.z = clipSca.z;\n                }\n            }\n            else {\n                defaultSca = nodeOwner.defaultValue;\n                if (additive) {\n                    Utils3D.scaleWeight(clipSca, weight, _tempVector31);\n                    localScale.x = defaultSca.x * _tempVector31.x;\n                    localScale.y = defaultSca.y * _tempVector31.y;\n                    localScale.z = defaultSca.z * _tempVector31.z;\n                }\n                else {\n                    Utils3D.scaleBlend(defaultSca, clipSca, weight, localScale);\n                }\n            }\n        }\n    }\n    _applyCrossData(nodeOwner, additive, weight, isFirstLayer, srcValue, desValue, crossWeight) {\n        var pro = nodeOwner.propertyOwner;\n        let lastpro;\n        if (pro) {\n            switch (nodeOwner.type) {\n                case KeyFrameValueType.Boolean:\n                    console.log(\"Animator:Boolean not support3\");\n                    break;\n                case KeyFrameValueType.Float:\n                    var proPat = nodeOwner.property;\n                    var m = proPat.length - 1;\n                    for (var j = 0; j < m; j++) {\n                        pro = pro[proPat[j]];\n                        if (!pro)\n                            break;\n                    }\n                    var crossValue = srcValue + crossWeight * (desValue - srcValue);\n                    nodeOwner.value = crossValue;\n                    lastpro = proPat[m];\n                    if (!nodeOwner.isMaterial) {\n                        pro && (pro[lastpro] = this._applyFloat(pro[lastpro], nodeOwner, additive, weight, isFirstLayer, crossValue));\n                    }\n                    else {\n                        pro && pro.setFloat(lastpro, this._applyFloat(pro.getFloat(lastpro), nodeOwner, additive, weight, isFirstLayer, crossValue));\n                    }\n                    if (nodeOwner.callbackFun) {\n                        nodeOwner.animatorDataSetCallBack();\n                    }\n                    break;\n                case KeyFrameValueType.Position:\n                    var localPos = pro.localPosition;\n                    var position = nodeOwner.value;\n                    var srcX = srcValue.x, srcY = srcValue.y, srcZ = srcValue.z;\n                    position.x = srcX + crossWeight * (desValue.x - srcX);\n                    position.y = srcY + crossWeight * (desValue.y - srcY);\n                    position.z = srcZ + crossWeight * (desValue.z - srcZ);\n                    this._applyPositionAndRotationEuler(nodeOwner, additive, weight, isFirstLayer, position, localPos);\n                    pro.localPosition = localPos;\n                    break;\n                case KeyFrameValueType.Rotation:\n                    var localRot = pro.localRotation;\n                    var rotation = nodeOwner.value;\n                    Quaternion.lerp(srcValue, desValue, crossWeight, rotation);\n                    this._applyRotation(nodeOwner, additive, weight, isFirstLayer, rotation, localRot);\n                    pro.localRotation = localRot;\n                    break;\n                case KeyFrameValueType.Scale:\n                    var localSca = pro.localScale;\n                    var scale = nodeOwner.value;\n                    Utils3D.scaleBlend(srcValue, desValue, crossWeight, scale);\n                    this._applyScale(nodeOwner, additive, weight, isFirstLayer, scale, localSca);\n                    pro.localScale = localSca;\n                    break;\n                case KeyFrameValueType.RotationEuler:\n                    var localEuler = pro.localRotationEuler;\n                    var rotationEuler = nodeOwner.value;\n                    srcX = srcValue.x, srcY = srcValue.y, srcZ = srcValue.z;\n                    rotationEuler.x = srcX + crossWeight * (desValue.x - srcX);\n                    rotationEuler.y = srcY + crossWeight * (desValue.y - srcY);\n                    rotationEuler.z = srcZ + crossWeight * (desValue.z - srcZ);\n                    this._applyPositionAndRotationEuler(nodeOwner, additive, weight, isFirstLayer, rotationEuler, localEuler);\n                    pro.localRotationEuler = localEuler;\n                    break;\n                case KeyFrameValueType.Color:\n                    var proPat = nodeOwner.property;\n                    var m = proPat.length - 1;\n                    for (var j = 0; j < m; j++) {\n                        pro = pro[proPat[j]];\n                        if (!pro)\n                            break;\n                    }\n                    let v44 = nodeOwner.value;\n                    v44.x = srcValue.r + crossWeight * (desValue.r - srcValue.r);\n                    v44.y = srcValue.g + crossWeight * (desValue.g - srcValue.g);\n                    v44.z = srcValue.b + crossWeight * (desValue.b - srcValue.b);\n                    v44.w = srcValue.a + crossWeight * (desValue.a - srcValue.a);\n                    nodeOwner.value = v44;\n                    lastpro = proPat[m];\n                    if (!nodeOwner.isMaterial) {\n                        pro && (pro[lastpro] = this._applyColor(pro[lastpro], nodeOwner, additive, weight, isFirstLayer, v44));\n                    }\n                    else {\n                        pro && pro.setColor(lastpro, this._applyColor(pro.getColor(lastpro), nodeOwner, additive, weight, isFirstLayer, v44));\n                    }\n                    if (nodeOwner.callbackFun) {\n                        nodeOwner.animatorDataSetCallBack();\n                    }\n                    break;\n                case KeyFrameValueType.Vector2:\n                    var proPat = nodeOwner.property;\n                    var m = proPat.length - 1;\n                    for (var j = 0; j < m; j++) {\n                        pro = pro[proPat[j]];\n                        if (!pro)\n                            break;\n                    }\n                    let v2 = nodeOwner.value;\n                    v2.x = srcValue.r + crossWeight * (desValue.r - srcValue.r);\n                    v2.y = srcValue.g + crossWeight * (desValue.g - srcValue.g);\n                    nodeOwner.value = v2;\n                    lastpro = proPat[m];\n                    if (!nodeOwner.isMaterial) {\n                        pro && (pro[lastpro] = this._applyVec2(pro[lastpro], nodeOwner, additive, weight, isFirstLayer, v2));\n                    }\n                    else {\n                        pro && pro.setVector2(lastpro, this._applyVec2(pro.getVector2(lastpro), nodeOwner, additive, weight, isFirstLayer, v2));\n                    }\n                    if (nodeOwner.callbackFun) {\n                        nodeOwner.animatorDataSetCallBack();\n                    }\n                    break;\n                case KeyFrameValueType.Vector4:\n                    var proPat = nodeOwner.property;\n                    var m = proPat.length - 1;\n                    for (var j = 0; j < m; j++) {\n                        pro = pro[proPat[j]];\n                        if (!pro)\n                            break;\n                    }\n                    let v4 = nodeOwner.value;\n                    v4.x = srcValue.x + crossWeight * (desValue.x - srcValue.x);\n                    v4.y = srcValue.y + crossWeight * (desValue.y - srcValue.y);\n                    v4.z = srcValue.z + crossWeight * (desValue.z - srcValue.z);\n                    nodeOwner.value = v4;\n                    lastpro = proPat[m];\n                    if (!nodeOwner.isMaterial) {\n                        pro && (pro[lastpro] = this._applyVec4(pro[lastpro], nodeOwner, additive, weight, isFirstLayer, v4));\n                    }\n                    else {\n                        pro && pro.setVector4(lastpro, this._applyVec4(pro.getVector4(lastpro), nodeOwner, additive, weight, isFirstLayer, v4));\n                    }\n                    if (nodeOwner.callbackFun) {\n                        nodeOwner.animatorDataSetCallBack();\n                    }\n                    break;\n                case KeyFrameValueType.Vector3:\n                    var proPat = nodeOwner.property;\n                    var m = proPat.length - 1;\n                    for (var j = 0; j < m; j++) {\n                        pro = pro[proPat[j]];\n                        if (!pro)\n                            break;\n                    }\n                    let v3 = nodeOwner.value;\n                    v3.x = srcValue.x + crossWeight * (desValue.x - srcValue.x);\n                    v3.y = srcValue.y + crossWeight * (desValue.y - srcValue.y);\n                    v3.z = srcValue.z + crossWeight * (desValue.z - srcValue.z);\n                    nodeOwner.value = v3;\n                    lastpro = proPat[m];\n                    if (!nodeOwner.isMaterial) {\n                        pro && (pro[lastpro] = this._applyVec3(pro[lastpro], nodeOwner, additive, weight, isFirstLayer, v3));\n                    }\n                    else {\n                        pro && pro.setVector3(lastpro, this._applyVec3(pro.getVector3(lastpro), nodeOwner, additive, weight, isFirstLayer, v3));\n                    }\n                    if (nodeOwner.callbackFun) {\n                        nodeOwner.animatorDataSetCallBack();\n                    }\n                    break;\n            }\n            nodeOwner.updateMark = this._updateMark;\n        }\n    }\n    _setClipDatasToNode(stateInfo, additive, weight, isFirstLayer, controllerLayer = null) {\n        var realtimeDatas = stateInfo._realtimeDatas;\n        var nodes = stateInfo._clip._nodes;\n        var nodeOwners = stateInfo._nodeOwners;\n        for (var i = 0, n = nodes.count; i < n; i++) {\n            var nodeOwner = nodeOwners[i];\n            if (nodeOwner) {\n                var node = nodes.getNodeByIndex(i);\n                if (controllerLayer.avatarMask && (!controllerLayer.avatarMask.getTransformActive(node.nodePath))) {\n                    continue;\n                }\n                var pro = nodeOwner.propertyOwner;\n                let value;\n                if (pro) {\n                    switch (nodeOwner.type) {\n                        case KeyFrameValueType.Boolean:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            let lastBoolPro = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[lastBoolPro] = realtimeDatas[i]);\n                            }\n                            break;\n                        case KeyFrameValueType.Float:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            let lastpro = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[lastpro] = this._applyFloat(pro[lastpro], nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.setFloat(lastpro, this._applyFloat(0, nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                            }\n                            break;\n                        case KeyFrameValueType.Position:\n                            var localPos = pro.localPosition;\n                            this._applyPositionAndRotationEuler(nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i], localPos);\n                            pro.localPosition = localPos;\n                            break;\n                        case KeyFrameValueType.Rotation:\n                            var localRot = pro.localRotation;\n                            this._applyRotation(nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i], localRot);\n                            pro.localRotation = localRot;\n                            break;\n                        case KeyFrameValueType.Scale:\n                            var localSca = pro.localScale;\n                            this._applyScale(nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i], localSca);\n                            pro.localScale = localSca;\n                            break;\n                        case KeyFrameValueType.RotationEuler:\n                            var localEuler = pro.localRotationEuler;\n                            this._applyPositionAndRotationEuler(nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i], localEuler);\n                            pro.localRotationEuler = localEuler;\n                            break;\n                        case KeyFrameValueType.Vector2:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = this._applyVec2(pro[value], nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getVector2(value) && pro.setVector2(value, this._applyVec2(pro.getVector2(value), nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                            }\n                            break;\n                        case KeyFrameValueType.Vector3:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = this._applyVec3(pro[value], nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getVector3(value) && pro.setVector3(value, this._applyVec3(pro.getVector3(value), nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                            }\n                            break;\n                        case KeyFrameValueType.Vector4:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = this._applyVec4(pro[value], nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getVector4(value) && pro.setVector4(value, this._applyVec4(pro.getVector4(value), nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                            }\n                            break;\n                        case KeyFrameValueType.Color:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = this._applyColor(pro[value], nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getColor(value) && pro.setColor(value, this._applyColor(pro.getColor(value), nodeOwner, additive, weight, isFirstLayer, realtimeDatas[i]));\n                            }\n                            break;\n                    }\n                    nodeOwner.updateMark = this._updateMark;\n                }\n            }\n        }\n    }\n    _setCrossClipDatasToNode(controllerLayer, srcState, destState, crossWeight, isFirstLayer) {\n        var nodeOwners = controllerLayer._crossNodesOwners;\n        var ownerCount = controllerLayer._crossNodesOwnersCount;\n        var additive = controllerLayer.blendingMode !== AnimatorControllerLayer.BLENDINGMODE_OVERRIDE;\n        var weight = controllerLayer.defaultWeight;\n        var destRealtimeDatas = destState._realtimeDatas;\n        var destDataIndices = controllerLayer._destCrossClipNodeIndices;\n        var destNodeOwners = destState._nodeOwners;\n        var srcRealtimeDatas = srcState._realtimeDatas;\n        var srcDataIndices = controllerLayer._srcCrossClipNodeIndices;\n        var srcNodeOwners = srcState._nodeOwners;\n        for (var i = 0; i < ownerCount; i++) {\n            var nodeOwner = nodeOwners[i];\n            if (nodeOwner) {\n                var srcIndex = srcDataIndices[i];\n                var destIndex = destDataIndices[i];\n                if (-1 == srcIndex && -1 == destIndex)\n                    continue;\n                var srcValue = srcIndex !== -1 ? srcRealtimeDatas[srcIndex] : destNodeOwners[destIndex].defaultValue;\n                if (null == srcValue)\n                    continue;\n                var desValue = destIndex !== -1 ? destRealtimeDatas[destIndex] : srcNodeOwners[srcIndex].defaultValue;\n                if (!desValue) {\n                    desValue = srcNodeOwners[srcIndex].defaultValue;\n                }\n                if (null == desValue)\n                    continue;\n                if (!controllerLayer.avatarMask || controllerLayer.avatarMask.getTransformActive(nodeOwner.nodePath)) {\n                    this._applyCrossData(nodeOwner, additive, weight, isFirstLayer, srcValue, desValue, crossWeight);\n                }\n            }\n        }\n    }\n    _setFixedCrossClipDatasToNode(controllerLayer, destState, crossWeight, isFirstLayer) {\n        var nodeOwners = controllerLayer._crossNodesOwners;\n        var ownerCount = controllerLayer._crossNodesOwnersCount;\n        var additive = controllerLayer.blendingMode !== AnimatorControllerLayer.BLENDINGMODE_OVERRIDE;\n        var weight = controllerLayer.defaultWeight;\n        var destRealtimeDatas = destState._realtimeDatas;\n        var destDataIndices = controllerLayer._destCrossClipNodeIndices;\n        for (var i = 0; i < ownerCount; i++) {\n            var nodeOwner = nodeOwners[i];\n            if (nodeOwner) {\n                var destIndex = destDataIndices[i];\n                var srcValue = nodeOwner.crossFixedValue;\n                var desValue;\n                if (destIndex == -1 || !destRealtimeDatas[destIndex]) {\n                    desValue = nodeOwner.defaultValue;\n                }\n                else {\n                    desValue = destRealtimeDatas[destIndex];\n                }\n                this._applyCrossData(nodeOwner, additive, weight, isFirstLayer, srcValue, desValue, crossWeight);\n            }\n        }\n    }\n    _revertDefaultKeyframeNodes(clipStateInfo) {\n        var nodeOwners = clipStateInfo._nodeOwners;\n        for (var i = 0, n = nodeOwners.length; i < n; i++) {\n            var nodeOwner = nodeOwners[i];\n            if (nodeOwner) {\n                var pro = nodeOwner.propertyOwner;\n                let value;\n                if (pro) {\n                    switch (nodeOwner.type) {\n                        case KeyFrameValueType.Boolean:\n                            console.log(\"Animator:Boolean not support2\");\n                            break;\n                        case KeyFrameValueType.Float:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            let lastpro = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[lastpro] = nodeOwner.defaultValue);\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.setFloat(lastpro, nodeOwner.defaultValue);\n                            }\n                            break;\n                        case KeyFrameValueType.Position:\n                            var locPos = pro.localPosition;\n                            var def = nodeOwner.defaultValue;\n                            locPos.x = def.x;\n                            locPos.y = def.y;\n                            locPos.z = def.z;\n                            pro.localPosition = locPos;\n                            break;\n                        case KeyFrameValueType.Rotation:\n                            var locRot = pro.localRotation;\n                            var defQua = nodeOwner.defaultValue;\n                            locRot.x = defQua.x;\n                            locRot.y = defQua.y;\n                            locRot.z = defQua.z;\n                            locRot.w = defQua.w;\n                            pro.localRotation = locRot;\n                            break;\n                        case KeyFrameValueType.Scale:\n                            var locSca = pro.localScale;\n                            def = nodeOwner.defaultValue;\n                            locSca.x = def.x;\n                            locSca.y = def.y;\n                            locSca.z = def.z;\n                            pro.localScale = locSca;\n                            break;\n                        case KeyFrameValueType.RotationEuler:\n                            var locEul = pro.localRotationEuler;\n                            def = nodeOwner.defaultValue;\n                            locEul.x = def.x;\n                            locEul.y = def.y;\n                            locEul.z = def.z;\n                            pro.localRotationEuler = locEul;\n                            break;\n                        case KeyFrameValueType.Vector2:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = nodeOwner.defaultValue);\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getVector2(value) && pro.setVector2(value, nodeOwner.defaultValue);\n                            }\n                            break;\n                        case KeyFrameValueType.Vector3:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = nodeOwner.defaultValue);\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getVector3(value) && pro.setVector3(value, nodeOwner.defaultValue);\n                            }\n                            break;\n                        case KeyFrameValueType.Vector4:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = nodeOwner.defaultValue);\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getVector3(value) && pro.setVector3(value, nodeOwner.defaultValue);\n                            }\n                            break;\n                        case KeyFrameValueType.Color:\n                            var proPat = nodeOwner.property;\n                            var m = proPat.length - 1;\n                            for (var j = 0; j < m; j++) {\n                                pro = pro[proPat[j]];\n                                if (!pro)\n                                    break;\n                            }\n                            value = proPat[m];\n                            _tempColor.r = nodeOwner.defaultValue.x;\n                            _tempColor.g = nodeOwner.defaultValue.y;\n                            _tempColor.b = nodeOwner.defaultValue.z;\n                            _tempColor.a = nodeOwner.defaultValue.w;\n                            if (!nodeOwner.isMaterial) {\n                                pro && (pro[value] = _tempColor);\n                                if (nodeOwner.callbackFun) {\n                                    nodeOwner.animatorDataSetCallBack();\n                                }\n                            }\n                            else {\n                                pro && pro.getColor(value) && pro.setColor(value, _tempColor);\n                            }\n                            break;\n                        default:\n                            throw \"Animator:unknown type.\";\n                    }\n                }\n            }\n        }\n    }\n    onAfterDeserialize() {\n        let arr = this.controllerLayers;\n        if (!arr || null != this.controller)\n            return;\n        delete this.controllerLayers;\n        this._controllerLayers.length = 0;\n        for (let layer of arr) {\n            this.addControllerLayer(layer);\n        }\n    }\n    _onEnable() {\n        for (let i = 0, n = this._controllerLayers.length; i < n; i++) {\n            if (this._controllerLayers[i].playOnWake) {\n                let defaultClip = this.getDefaultState(i);\n                (defaultClip) && (this.play(null, i, defaultClip.cycleOffset));\n            }\n        }\n    }\n    _onDestroy() {\n        if (this._controller) {\n            this._controller._removeReference();\n            this._controller = null;\n        }\n        for (let i = 0, n = this._controllerLayers.length; i < n; i++)\n            this._controllerLayers[i]._removeReference();\n    }\n    _applyUpdateMode(delta) {\n        let ret;\n        switch (this._updateMode) {\n            case AnimatorUpdateMode.Normal:\n                ret = delta;\n                break;\n            case AnimatorUpdateMode.LowFrame:\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\n                break;\n            case AnimatorUpdateMode.UnScaleTime:\n                ret = 0;\n                break;\n        }\n        return ret;\n    }\n    _handleSpriteOwnersBySprite(isLink, path, sprite) {\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\n            if (!this._controllerLayers[i].enable)\n                continue;\n            var clipStateInfos = this._controllerLayers[i]._states;\n            for (var j = 0, m = clipStateInfos.length; j < m; j++) {\n                var clipStateInfo = clipStateInfos[j];\n                var clip = clipStateInfo._clip;\n                var nodePath = path.join(\"/\");\n                var ownersNodes = clip._nodesMap[nodePath];\n                if (ownersNodes) {\n                    var nodeOwners = clipStateInfo._nodeOwners;\n                    for (var k = 0, p = ownersNodes.length; k < p; k++) {\n                        if (isLink)\n                            this._addKeyframeNodeOwner(nodeOwners, ownersNodes[k], sprite);\n                        else\n                            this._removeKeyframeNodeOwner(nodeOwners, ownersNodes[k]);\n                    }\n                }\n            }\n        }\n    }\n    onUpdate() {\n        let timer = this.owner._scene.timer;\n        let delta = timer.delta / 1000.0;\n        delta = this._applyUpdateMode(delta);\n        if (this._speed === 0 || delta === 0)\n            return;\n        if (!Stat.enableAnimatorUpdate)\n            return;\n        var needRender = true;\n        var i, n;\n        this._updateMark++;\n        for (i = 0, n = this._controllerLayers.length; i < n; i++) {\n            var controllerLayer = this._controllerLayers[i];\n            if (!controllerLayer.enable)\n                continue;\n            var playStateInfo = controllerLayer._playStateInfo;\n            if (this.sleep && playStateInfo._finish && controllerLayer._playType == 0) {\n                continue;\n            }\n            var crossPlayStateInfo = controllerLayer._crossPlayStateInfo;\n            addtive = controllerLayer.blendingMode !== AnimatorControllerLayer.BLENDINGMODE_OVERRIDE;\n            switch (controllerLayer._playType) {\n                case 0:\n                    var animatorState = playStateInfo.currentState;\n                    var clip = animatorState._clip;\n                    var speed = this._speed * animatorState.speed;\n                    var finish = playStateInfo._finish;\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed, animatorState.islooping, i);\n                    if (needRender) {\n                        var addtive = controllerLayer.blendingMode !== AnimatorControllerLayer.BLENDINGMODE_OVERRIDE;\n                        this._updateClipDatas(animatorState, addtive, playStateInfo, controllerLayer.avatarMask);\n                        this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, i === 0, controllerLayer);\n                        finish || this._updateEventScript(animatorState, playStateInfo);\n                    }\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\n                    break;\n                case 1:\n                    animatorState = playStateInfo.currentState;\n                    clip = animatorState._clip;\n                    var crossState = controllerLayer._crossPlayState;\n                    var crossClip = crossState._clip;\n                    var crossDuratuion = controllerLayer._crossDuration;\n                    var startPlayTime = crossPlayStateInfo._startPlayTime;\n                    var crossClipDuration = crossClip._duration - startPlayTime;\n                    var crossScale = (crossDuratuion > crossClipDuration && 0 != crossClipDuration) ? crossClipDuration / crossDuratuion : 1.0;\n                    var crossSpeed = this._speed * crossState.speed;\n                    this._updatePlayer(crossState, crossPlayStateInfo, delta * crossScale * crossSpeed, crossClip.islooping, i);\n                    var crossWeight = ((crossPlayStateInfo._elapsedTime - startPlayTime) / crossScale) / crossDuratuion;\n                    var needUpdateFinishcurrentState = false;\n                    if (crossWeight >= 1.0) {\n                        if (needRender) {\n                            this._updateClipDatas(crossState, addtive, crossPlayStateInfo, controllerLayer.avatarMask);\n                            this._setClipDatasToNode(crossState, addtive, controllerLayer.defaultWeight, i === 0, controllerLayer);\n                            controllerLayer._playType = 0;\n                            playStateInfo.currentState = crossState;\n                            crossPlayStateInfo._cloneTo(playStateInfo);\n                        }\n                    }\n                    else {\n                        if (!playStateInfo._finish) {\n                            speed = this._speed * animatorState.speed;\n                            needUpdateFinishcurrentState = true;\n                            this._updatePlayer(animatorState, playStateInfo, delta * speed, animatorState.islooping, i);\n                            if (needRender)\n                                this._updateClipDatas(animatorState, addtive, playStateInfo, controllerLayer.avatarMask);\n                        }\n                        if (needRender) {\n                            this._updateClipDatas(crossState, addtive, crossPlayStateInfo, controllerLayer.avatarMask);\n                            this._setCrossClipDatasToNode(controllerLayer, animatorState, crossState, crossWeight, i === 0);\n                        }\n                    }\n                    if (needRender) {\n                        this._updateEventScript(animatorState, playStateInfo);\n                        this._updateEventScript(crossState, crossPlayStateInfo);\n                    }\n                    this._updateStateFinish(crossState, crossPlayStateInfo);\n                    needUpdateFinishcurrentState && this._updateStateFinish(playStateInfo.currentState, playStateInfo);\n                    break;\n                case 2:\n                    crossState = controllerLayer._crossPlayState;\n                    crossClip = crossState._clip;\n                    crossDuratuion = controllerLayer._crossDuration;\n                    startPlayTime = crossPlayStateInfo._startPlayTime;\n                    crossClipDuration = crossClip._duration - startPlayTime;\n                    crossScale = crossDuratuion > crossClipDuration ? crossClipDuration / crossDuratuion : 1.0;\n                    crossSpeed = this._speed * crossState.speed;\n                    this._updatePlayer(crossState, crossPlayStateInfo, delta * crossScale * crossSpeed, crossState.islooping, i);\n                    if (needRender) {\n                        crossWeight = ((crossPlayStateInfo._elapsedTime - startPlayTime) / crossScale) / crossDuratuion;\n                        if (crossWeight >= 1.0) {\n                            this._updateClipDatas(crossState, addtive, crossPlayStateInfo, controllerLayer.avatarMask);\n                            this._setClipDatasToNode(crossState, addtive, 1.0, i === 0, controllerLayer);\n                            controllerLayer._playType = 0;\n                            playStateInfo.currentState = crossState;\n                            crossPlayStateInfo._cloneTo(playStateInfo);\n                        }\n                        else {\n                            this._updateClipDatas(crossState, addtive, crossPlayStateInfo, controllerLayer.avatarMask);\n                            this._setFixedCrossClipDatasToNode(controllerLayer, crossState, crossWeight, i === 0);\n                        }\n                        this._updateEventScript(crossState, crossPlayStateInfo);\n                    }\n                    this._updateStateFinish(crossState, crossPlayStateInfo);\n                    break;\n            }\n        }\n        this._LateUpdateEvents.invoke();\n        this._LateUpdateEvents.clear();\n    }\n    _cloneTo(dest) {\n        dest.cullingMode = this.cullingMode;\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\n            var controllLayer = this._controllerLayers[i];\n            dest.addControllerLayer(controllLayer.clone());\n            var animatorStates = controllLayer._states;\n            for (var j = 0, m = animatorStates.length; j < m; j++) {\n                var state = animatorStates[j].clone();\n                var cloneLayer = dest.getControllerLayer(i);\n                cloneLayer.addState(state);\n                (j == 0) && (cloneLayer.defaultState = state);\n            }\n        }\n        dest.controller = this._controller;\n    }\n    getDefaultState(layerIndex = 0) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        return controllerLayer.defaultState;\n    }\n    addState(state, layerIndex = 0) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        controllerLayer.addState(state);\n        console.warn(\"Animator:this function is discard,please use animatorControllerLayer.addState() instead.\");\n    }\n    removeState(state, layerIndex = 0) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        controllerLayer.removeState(state);\n        console.warn(\"Animator:this function is discard,please use animatorControllerLayer.removeState() instead.\");\n    }\n    addControllerLayer(controllerLayer) {\n        this._controllerLayers.push(controllerLayer);\n        controllerLayer._animator = this;\n        controllerLayer._addReference();\n        var states = controllerLayer._states;\n        for (var i = 0, n = states.length; i < n; i++)\n            this._getOwnersByClip(states[i]);\n    }\n    getControllerLayer(layerIndex = 0) {\n        return this._controllerLayers[layerIndex];\n    }\n    play(name = null, layerIndex = 0, normalizedTime = Number.NEGATIVE_INFINITY) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var defaultState = controllerLayer.defaultState;\n            if (!name && !defaultState)\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\n            var playStateInfo = controllerLayer._playStateInfo;\n            var curPlayState = playStateInfo.currentState;\n            var animatorState = name ? controllerLayer.getAnimatorState(name) : defaultState;\n            if (!animatorState._clip)\n                return;\n            var clipDuration = animatorState._clip._duration;\n            var calclipduration = animatorState._clip._duration * (animatorState.clipEnd - animatorState.clipStart);\n            if (curPlayState !== animatorState) {\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\n                else\n                    playStateInfo._resetPlayState(0.0, calclipduration);\n                (curPlayState !== null && curPlayState !== animatorState) && (this._revertDefaultKeyframeNodes(curPlayState));\n                controllerLayer._playType = 0;\n                playStateInfo.currentState = animatorState;\n            }\n            else {\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\n                    controllerLayer._playType = 0;\n                }\n            }\n            var scripts = animatorState._scripts;\n            animatorState._eventStart(this, layerIndex);\n        }\n        else {\n            console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\n        }\n        if (this.owner._scene) {\n            this.onUpdate();\n        }\n    }\n    crossFade(name, transitionDuration, layerIndex = 0, normalizedTime = Number.NEGATIVE_INFINITY) {\n        var controllerLayer = this._controllerLayers[layerIndex];\n        if (controllerLayer) {\n            var destAnimatorState = controllerLayer.getAnimatorState(name);\n            if (destAnimatorState) {\n                var playType = controllerLayer._playType;\n                if (playType === -1) {\n                    this.play(name, layerIndex, normalizedTime);\n                    return;\n                }\n                var crossPlayStateInfo = controllerLayer._crossPlayStateInfo;\n                var crossNodeOwners = controllerLayer._crossNodesOwners;\n                var crossNodeOwnerIndicesMap = controllerLayer._crossNodesOwnersIndicesMap;\n                var srcAnimatorState = controllerLayer._playStateInfo.currentState;\n                var destNodeOwners = destAnimatorState._nodeOwners;\n                var destCrossClipNodeIndices = controllerLayer._destCrossClipNodeIndices;\n                var destClip = destAnimatorState._clip;\n                var destNodes = destClip._nodes;\n                var destNodesMap = destClip._nodesDic;\n                var crossCount = 0;\n                switch (playType) {\n                    case 0:\n                        var srcNodeOwners = srcAnimatorState._nodeOwners;\n                        var scrCrossClipNodeIndices = controllerLayer._srcCrossClipNodeIndices;\n                        var srcClip = srcAnimatorState._clip;\n                        var srcNodes = srcClip._nodes;\n                        var srcNodesMap = srcClip._nodesDic;\n                        controllerLayer._playType = 1;\n                        var crossMark = ++controllerLayer._crossMark;\n                        crossCount = controllerLayer._crossNodesOwnersCount = 0;\n                        for (var i = 0, n = srcNodes.count; i < n; i++) {\n                            var srcNode = srcNodes.getNodeByIndex(i);\n                            var srcIndex = srcNode._indexInList;\n                            var srcNodeOwner = srcNodeOwners[srcIndex];\n                            if (srcNodeOwner) {\n                                var srcFullPath = srcNode.fullPath;\n                                scrCrossClipNodeIndices[crossCount] = srcIndex;\n                                var destNode = destNodesMap[srcFullPath];\n                                if (destNode)\n                                    destCrossClipNodeIndices[crossCount] = destNode._indexInList;\n                                else\n                                    destCrossClipNodeIndices[crossCount] = -1;\n                                crossNodeOwnerIndicesMap[srcFullPath] = crossMark;\n                                crossNodeOwners[crossCount] = srcNodeOwner;\n                                crossCount++;\n                            }\n                        }\n                        for (i = 0, n = destNodes.count; i < n; i++) {\n                            destNode = destNodes.getNodeByIndex(i);\n                            var destIndex = destNode._indexInList;\n                            var destNodeOwner = destNodeOwners[destIndex];\n                            if (destNodeOwner) {\n                                var destFullPath = destNode.fullPath;\n                                if (!srcNodesMap[destFullPath]) {\n                                    scrCrossClipNodeIndices[crossCount] = -1;\n                                    destCrossClipNodeIndices[crossCount] = destIndex;\n                                    crossNodeOwnerIndicesMap[destFullPath] = crossMark;\n                                    crossNodeOwners[crossCount] = destNodeOwner;\n                                    crossCount++;\n                                }\n                            }\n                        }\n                        break;\n                    case 1:\n                    case 2:\n                        controllerLayer._playType = 2;\n                        for (i = 0, n = crossNodeOwners.length; i < n; i++) {\n                            var nodeOwner = crossNodeOwners[i];\n                            nodeOwner.saveCrossFixedValue();\n                            destNode = destNodesMap[nodeOwner.fullPath];\n                            if (destNode)\n                                destCrossClipNodeIndices[i] = destNode._indexInList;\n                            else\n                                destCrossClipNodeIndices[i] = -1;\n                        }\n                        crossCount = controllerLayer._crossNodesOwnersCount;\n                        crossMark = controllerLayer._crossMark;\n                        for (i = 0, n = destNodes.count; i < n; i++) {\n                            destNode = destNodes.getNodeByIndex(i);\n                            destIndex = destNode._indexInList;\n                            destNodeOwner = destNodeOwners[destIndex];\n                            if (destNodeOwner) {\n                                destFullPath = destNode.fullPath;\n                                if (crossNodeOwnerIndicesMap[destFullPath] !== crossMark) {\n                                    destCrossClipNodeIndices[crossCount] = destIndex;\n                                    crossNodeOwnerIndicesMap[destFullPath] = crossMark;\n                                    nodeOwner = destNodeOwners[destIndex];\n                                    crossNodeOwners[crossCount] = nodeOwner;\n                                    nodeOwner.saveCrossFixedValue();\n                                    crossCount++;\n                                }\n                            }\n                        }\n                        break;\n                    default:\n                }\n                controllerLayer._crossNodesOwnersCount = crossCount;\n                controllerLayer._crossPlayState = destAnimatorState;\n                controllerLayer._crossDuration = srcAnimatorState._clip._duration * transitionDuration;\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\n                    crossPlayStateInfo._resetPlayState(destClip._duration * normalizedTime, controllerLayer._crossDuration);\n                else\n                    crossPlayStateInfo._resetPlayState(0.0, controllerLayer._crossDuration);\n                destAnimatorState._eventStart(this, layerIndex);\n            }\n            else {\n                console.warn(\"Invalid name \" + layerIndex + \".\");\n            }\n        }\n        else {\n            console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\n        }\n    }\n    setParamsTrigger(name) {\n        let id;\n        if (typeof name == \"number\")\n            id = name;\n        else\n            id = AnimatorStateCondition.conditionNameToID(name);\n        this._animatorParams[id] = true;\n    }\n    setParamsNumber(name, value) {\n        let id;\n        if (typeof name == \"number\")\n            id = name;\n        else\n            id = AnimatorStateCondition.conditionNameToID(name);\n        this._animatorParams[id] = value;\n    }\n    setParamsBool(name, value) {\n        let id;\n        if (typeof name == \"number\")\n            id = name;\n        else\n            id = AnimatorStateCondition.conditionNameToID(name);\n        this._animatorParams[id] = value;\n    }\n    getParamsvalue(name) {\n        let id;\n        if (typeof name == \"number\")\n            id = name;\n        else\n            id = AnimatorStateCondition.conditionNameToID(name);\n        return this._animatorParams[id];\n    }\n    getCurrentAnimatorPlayState(layerIndex = 0) {\n        return this._controllerLayers[layerIndex]._playStateInfo;\n    }\n}\nAnimator.CULLINGMODE_ALWAYSANIMATE = 0;\nAnimator.CULLINGMODE_CULLCOMPLETELY = 2;\nconst _tempVector31 = new Vector3();\nconst _tempColor = new Color();\nconst _tempQuaternion1 = new Quaternion();\n","import { EventDispatcher } from \"../../../events/EventDispatcher\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { KeyFrameValueType } from \"./KeyframeNodeOwner\";\nexport class AnimatorState extends EventDispatcher {\n    get clip() {\n        return this._clip;\n    }\n    set clip(value) {\n        if (this._clip !== value) {\n            if (this._clip)\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\n            if (value) {\n                var realtimeDatas = this._realtimeDatas;\n                var clipNodes = value._nodes;\n                var count = clipNodes.count;\n                this._currentFrameIndices = new Int16Array(count);\n                this._resetFrameIndices();\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\n                this._realtimeDatas.length = count;\n                for (var i = 0; i < count; i++) {\n                    switch (clipNodes.getNodeByIndex(i).type) {\n                        case KeyFrameValueType.Boolean:\n                        case KeyFrameValueType.Float:\n                            break;\n                        case KeyFrameValueType.Position:\n                        case KeyFrameValueType.Scale:\n                        case KeyFrameValueType.RotationEuler:\n                        case KeyFrameValueType.Vector3:\n                            realtimeDatas[i] = new Vector3();\n                            break;\n                        case KeyFrameValueType.Rotation:\n                            realtimeDatas[i] = new Quaternion();\n                            break;\n                        case KeyFrameValueType.Vector2:\n                            realtimeDatas[i] = new Vector2();\n                            break;\n                        case KeyFrameValueType.Vector4:\n                        case KeyFrameValueType.Color:\n                            realtimeDatas[i] = new Vector4();\n                            break;\n                        default:\n                            throw new Error(\"AnimationClipParser04:unknown type.\");\n                    }\n                }\n            }\n            this._clip = value;\n        }\n    }\n    get islooping() {\n        if (0 != this._isLooping) {\n            return 1 == this._isLooping;\n        }\n        return this._clip.islooping;\n    }\n    get transitions() {\n        return this._transitions;\n    }\n    set transitions(value) {\n        this._transitions = value;\n    }\n    get soloTransitions() {\n        return this._soloTransitions;\n    }\n    set soloTransitions(value) {\n        this._soloTransitions = value;\n    }\n    constructor() {\n        super();\n        this._referenceCount = 0;\n        this._clip = null;\n        this._nodeOwners = [];\n        this._currentFrameIndices = null;\n        this._isLooping = 0;\n        this._realtimeDatas = [];\n        this._scripts = null;\n        this._transitions = [];\n        this._soloTransitions = [];\n        this.speed = 1.0;\n        this.clipStart = 0.0;\n        this.clipEnd = 1.0;\n        this.cycleOffset = 0;\n    }\n    _eventStart(animator, layerIndex) {\n        this.event(AnimatorState.EVENT_OnStateEnter);\n        if (this._scripts) {\n            for (var i = 0, n = this._scripts.length; i < n; i++) {\n                this._scripts[i].setPlayScriptInfo(animator, layerIndex, this);\n                this._scripts[i].onStateEnter();\n            }\n        }\n    }\n    _eventExit() {\n        this.event(AnimatorState.EVENT_OnStateExit);\n        this.curTransition = null;\n        if (this._scripts) {\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\n                this._scripts[i].onStateExit();\n            }\n        }\n    }\n    _eventStateUpdate(value) {\n        this.event(AnimatorState.EVENT_OnStateUpdate, value);\n        if (this._scripts) {\n            for (var i = 0, n = this._scripts.length; i < n; i++)\n                this._scripts[i].onStateUpdate(value);\n        }\n    }\n    _eventLoop() {\n        this.event(AnimatorState.EVENT_OnStateLoop);\n        if (this._scripts) {\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\n                if (this._scripts[i].onStateLoop)\n                    this._scripts[i].onStateLoop();\n            }\n        }\n    }\n    _eventtransition(normalizeTime, paramsMap) {\n        let soloNums = this._soloTransitions.length;\n        if (soloNums > 0) {\n            for (var i = 0; i < soloNums; i++) {\n                if (this._soloTransitions[i].check(normalizeTime, paramsMap))\n                    return this._soloTransitions[i];\n            }\n            return null;\n        }\n        let transNums = this._transitions.length;\n        for (var i = 0; i < transNums; i++) {\n            if (this._transitions[i].check(normalizeTime, paramsMap))\n                return this._transitions[i];\n        }\n        return null;\n    }\n    _getReferenceCount() {\n        return this._referenceCount;\n    }\n    _addReference(count = 1) {\n        (this._clip) && (this._clip._addReference(count));\n        this._referenceCount += count;\n    }\n    _removeReference(count = 1) {\n        (this._clip) && (this._clip._removeReference(count));\n        this._referenceCount -= count;\n    }\n    _clearReference() {\n        this._removeReference(-this._referenceCount);\n    }\n    _resetFrameIndices() {\n        for (var i = 0, n = this._currentFrameIndices.length; i < n; i++)\n            this._currentFrameIndices[i] = -1;\n    }\n    addScript(type) {\n        var script = new type();\n        this._scripts = this._scripts || [];\n        this._scripts.push(script);\n        return script;\n    }\n    getScript(type) {\n        if (this._scripts) {\n            for (var i = 0, n = this._scripts.length; i < n; i++) {\n                var script = this._scripts[i];\n                if (script instanceof type)\n                    return script;\n            }\n        }\n        return null;\n    }\n    getScripts(type) {\n        var coms = null;\n        if (this._scripts) {\n            for (var i = 0, n = this._scripts.length; i < n; i++) {\n                var script = this._scripts[i];\n                if (script instanceof type) {\n                    coms = coms || [];\n                    coms.push(script);\n                }\n            }\n        }\n        return coms;\n    }\n    cloneTo(destObject) {\n        destObject.name = this.name;\n        destObject.speed = this.speed;\n        destObject.clipStart = this.clipStart;\n        destObject.clipEnd = this.clipEnd;\n        destObject.clip = this._clip;\n    }\n    clone() {\n        var dest = new AnimatorState();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nAnimatorState.EVENT_OnStateEnter = \"OnStartEnter\";\nAnimatorState.EVENT_OnStateUpdate = \"OnStateUpdate\";\nAnimatorState.EVENT_OnStateLoop = 'OnStateLoop';\nAnimatorState.EVENT_OnStateExit = \"OnStateExit\";\n","export class AvatarMask {\n    constructor(data) {\n        this._avatarPathMap = (data === null || data === void 0 ? void 0 : data._avatarPathMap) || {};\n    }\n    getTransformActive(path) {\n        return this._avatarPathMap[path];\n    }\n    setTransformActive(path, value) {\n        this._avatarPathMap[path] = value;\n    }\n    getAllTranfromPath() {\n        return this._avatarPathMap;\n    }\n    clone() {\n        var dest = new AvatarMask();\n        this.cloneTo(dest);\n        return dest;\n    }\n    cloneTo(destObject) {\n        for (var key in this._avatarPathMap) {\n            destObject.setTransformActive(key, this._avatarPathMap[key]);\n        }\n    }\n}\n","export class PostProcessEffect {\n    constructor() {\n        this._active = true;\n        this._singleton = true;\n    }\n    get singleton() {\n        return this._singleton;\n    }\n    set singleton(value) {\n        this._singleton = value;\n    }\n    get active() {\n        return this._active;\n    }\n    set active(value) {\n        this._active = value;\n    }\n    getCameraDepthTextureModeFlag() {\n        return 0;\n    }\n    effectInit(postprocess) {\n        return;\n    }\n    release(postprocess) {\n    }\n    render(context) {\n    }\n}\n","import { AniStateConditionType } from \"../../../components/AnimatorControllerParse\";\nexport class AnimatorTransition {\n    constructor() {\n        this._conditions = [];\n        this._exitByTime = true;\n        this._exitTime = 0.85;\n        this._transduration = 0.15;\n        this._transstartoffset = 0;\n        this._mute = false;\n    }\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n    }\n    get mute() {\n        return this._mute;\n    }\n    set mute(value) {\n        this._mute = value;\n    }\n    get destState() {\n        return this._destState;\n    }\n    set destState(value) {\n        this._destState = value;\n    }\n    get conditions() {\n        return this._conditions;\n    }\n    set conditions(value) {\n        for (var i = this._conditions.length - 1; i >= 0; i--) {\n            this.removeCondition(this._conditions[i]);\n        }\n        for (var i = 0; i < value.length; i++) {\n            this.addCondition(value[i]);\n        }\n    }\n    get exitByTime() {\n        return this._exitByTime;\n    }\n    set exitByTime(value) {\n        this._exitByTime = value;\n    }\n    set transduration(value) {\n        this._transduration = Math.max(0, Math.min(value, 1.0));\n    }\n    get transduration() {\n        return this._transduration;\n    }\n    set transstartoffset(value) {\n        this._transstartoffset = Math.max(0, Math.min(value, 1.0));\n    }\n    get transstartoffset() {\n        return this._transstartoffset;\n    }\n    get exitTime() {\n        return this._exitTime;\n    }\n    set exitTime(value) {\n        this._exitTime = Math.max(0, Math.min(value, 1.0));\n    }\n    addCondition(condition) {\n        if (this._conditions.indexOf(condition) == -1) {\n            this._conditions.push(condition);\n        }\n    }\n    removeCondition(condition) {\n        let index = this._conditions.indexOf(condition);\n        if (index != -1) {\n            this._conditions.splice(index, 0);\n        }\n    }\n    get isAndOperEnabled() {\n        return this._isAndOperEnabled;\n    }\n    set isAndOperEnabled(vlaue) {\n        this._isAndOperEnabled = vlaue;\n    }\n    check(normalizeTime, paramsMap) {\n        if (this._mute) {\n            return false;\n        }\n        if (this._conditions.length == 0) {\n            if (normalizeTime >= this._exitTime)\n                return true;\n        }\n        else {\n            if (this._exitByTime && normalizeTime < this._exitTime) {\n                return false;\n            }\n            if (this._isAndOperEnabled) {\n                for (var i = 0; i < this._conditions.length; i++) {\n                    let con = this._conditions[i];\n                    let out = con.checkState(paramsMap[con.id]);\n                    if (!out) {\n                        return false;\n                    }\n                    if (con.type == AniStateConditionType.Trigger) {\n                        paramsMap[con.id] = false;\n                    }\n                }\n                return true;\n            }\n            else {\n                for (var i = 0; i < this._conditions.length; i++) {\n                    let con = this._conditions[i];\n                    let out = con.checkState(paramsMap[con.id]);\n                    if (out) {\n                        if (con.type == AniStateConditionType.Trigger)\n                            paramsMap[con.id] = false;\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","import { AnimatorControllerParse, AniParmType } from \"../../../components/AnimatorControllerParse\";\nimport { AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"../../../components/AnimatorStateCondition\";\nimport { Resource } from \"../../../resource/Resource\";\nimport { ClassUtils } from \"../../../utils/ClassUtils\";\nimport { AnimatorControllerLayer } from \"./AnimatorControllerLayer\";\nimport { AnimatorState } from \"./AnimatorState\";\nimport { AnimatorTransition } from \"./AnimatorTransition\";\nexport class AnimatorController extends Resource {\n    constructor(data) {\n        super();\n        let obj = AnimatorControllerParse.parse(data);\n        this.data = obj.ret;\n        this.clipsID = obj.clipsID;\n    }\n    getLayers() {\n        let layers = this.data.controllerLayers;\n        let lArr = [];\n        for (let i = layers.length - 1; i >= 0; i--) {\n            let l = layers[i];\n            let acl = new AnimatorControllerLayer(l.name);\n            if (l.avatarMask) {\n                acl.avatarMask = l.avatarMask;\n            }\n            lArr.unshift(acl);\n            for (let k in l) {\n                if (\"avatarMask\" == k || \"name\" == k || \"states\" == k || null == l[k]) {\n                    continue;\n                }\n                try {\n                    acl[k] = l[k];\n                }\n                catch (err) { }\n            }\n            this.getState(l.states, acl, this.data);\n        }\n        return lArr;\n    }\n    updateTo(a) {\n        let currLayer = a._controllerLayers;\n        for (let i = 0, len = currLayer.length; i < len; i++) {\n            currLayer[i]._removeReference();\n        }\n        currLayer.length = 0;\n        let layers = this.getLayers();\n        for (let i = 0, len = layers.length; i < len; i++) {\n            a.addControllerLayer(layers[i]);\n        }\n        let parms = this.data.animatorParams;\n        if (parms) {\n            for (let i = parms.length - 1; i >= 0; i--) {\n                let p = parms[i];\n                if (AniParmType.Bool == p.type) {\n                    a.setParamsBool(p.name, Boolean(p.val));\n                }\n                else if (AniParmType.Float == p.type) {\n                    let val = Number(p.val);\n                    if (isNaN(val)) {\n                        val = 0;\n                    }\n                    a.setParamsNumber(p.name, val);\n                }\n                else if (AniParmType.Trigger == p.type) {\n                    if (p.val) {\n                        a.setParamsTrigger(p.name);\n                    }\n                }\n            }\n        }\n    }\n    createState(states, idCatch, acl) {\n        if (!states)\n            return null;\n        let ret = {};\n        let defID = null;\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n            let childStates = obj.states;\n            if (childStates) {\n                let groupRet = this.createState(childStates, idCatch, acl);\n                if (groupRet) {\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\n                }\n                continue;\n            }\n            if (0 > Number(obj.id)) {\n                if (\"-1\" == obj.id) {\n                    let transitions = obj.soloTransitions;\n                    if (transitions && 0 < transitions.length) {\n                        defID = transitions[0].id;\n                    }\n                }\n                continue;\n            }\n            let state = new AnimatorState();\n            idCatch[obj.id] = state;\n            ret[obj.id] = state;\n            for (let k in obj) {\n                try {\n                    if (\"scripts\" == k) {\n                        let scripts = obj[k];\n                        if (scripts && Array.isArray(scripts)) {\n                            for (let k = scripts.length - 1; k >= 0; k--) {\n                                let uuid = scripts[k];\n                                if (uuid && 0 == uuid.indexOf(\"res://\")) {\n                                    uuid = uuid.substring(6);\n                                }\n                                let c = ClassUtils.getClass(uuid);\n                                if (c) {\n                                    state.addScript(c);\n                                }\n                            }\n                        }\n                        continue;\n                    }\n                    else if (\"soloTransitions\" == k) {\n                        continue;\n                    }\n                    else if (null != obj[k]) {\n                        state[k] = obj[k];\n                    }\n                }\n                catch (err) { }\n            }\n            acl.addState(state);\n        }\n        return { id: defID, states: ret };\n    }\n    setExitTransition(exitRet, transitions, idCatch, data, pExitRet) {\n        for (let id in exitRet) {\n            let state = idCatch[id];\n            if (state) {\n                let ats = state.transitions;\n                let sts = state.soloTransitions;\n                let linArr = exitRet[id];\n                for (let i = transitions.length - 1; i >= 0; i--) {\n                    let t = transitions[i];\n                    if (\"-3\" == t.id) {\n                        if (null == pExitRet[id]) {\n                            pExitRet[id] = [];\n                        }\n                        pExitRet[id].push(t);\n                        continue;\n                    }\n                    for (let j = linArr.length - 1; j >= 0; j--) {\n                        let t2 = linArr[j];\n                        let ato = new AnimatorTransition();\n                        ato.destState = idCatch[t.id];\n                        if (t.conditions) {\n                            this.addConditions(t.conditions, ato, data);\n                        }\n                        if (t2.conditions) {\n                            this.addConditions(t2.conditions, ato, data);\n                        }\n                        for (let k in t) {\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                                continue;\n                            }\n                            else {\n                                ato[k] = t[k];\n                            }\n                        }\n                        if (t.solo) {\n                            sts.unshift(ato);\n                        }\n                        else {\n                            ats.unshift(ato);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    setTransitions(states, idCatch, acl, data, pState) {\n        if (!states)\n            return null;\n        let exitRet = {};\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n            if (obj.states) {\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\n                if (exitTransition) {\n                    let transitions = obj.soloTransitions;\n                    if (transitions) {\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\n                    }\n                }\n            }\n        }\n        for (let i = states.length - 1; i >= 0; i--) {\n            let obj = states[i];\n            if (obj.states) {\n                continue;\n            }\n            if (\"-1\" == obj.id) {\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\n                    if (null == pState) {\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\n                    }\n                    else {\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\n                    }\n                    continue;\n                }\n            }\n            else if (\"-2\" == obj.id) {\n                let transitions = obj.soloTransitions;\n                if (transitions) {\n                    for (let j = transitions.length - 1; j >= 0; j--) {\n                        let o = transitions[j];\n                        let destState = idCatch[o.id];\n                        if (destState) {\n                            for (let idk in idCatch) {\n                                let state = idCatch[idk];\n                                let ato = new AnimatorTransition();\n                                ato.destState = destState;\n                                if (o.conditions) {\n                                    this.addConditions(o.conditions, ato, data);\n                                }\n                                for (let k in o) {\n                                    if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                                        continue;\n                                    }\n                                    else {\n                                        ato[k] = o[k];\n                                    }\n                                }\n                                if (o.solo) {\n                                    state.soloTransitions.unshift(ato);\n                                }\n                                else {\n                                    state.transitions.unshift(ato);\n                                }\n                            }\n                        }\n                    }\n                }\n                continue;\n            }\n            else if (\"-3\" == obj.id) {\n                continue;\n            }\n            let soloTransitions = obj.soloTransitions;\n            if (soloTransitions && idCatch[obj.id]) {\n                let ats = idCatch[obj.id].transitions;\n                let sts = idCatch[obj.id].soloTransitions;\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\n                    let o = soloTransitions[j];\n                    if (\"-3\" == o.id) {\n                        if (null == exitRet[obj.id]) {\n                            exitRet[obj.id] = [];\n                        }\n                        exitRet[obj.id].push(o);\n                        continue;\n                    }\n                    let ato = new AnimatorTransition();\n                    if (idCatch[o.id]) {\n                        ato.destState = idCatch[o.id];\n                    }\n                    if (o.conditions) {\n                        this.addConditions(o.conditions, ato, data);\n                    }\n                    for (let k in o) {\n                        if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\n                            continue;\n                        }\n                        else {\n                            ato[k] = o[k];\n                        }\n                    }\n                    if (o.solo) {\n                        sts.unshift(ato);\n                    }\n                    else {\n                        ats.unshift(ato);\n                    }\n                }\n            }\n        }\n        return exitRet;\n    }\n    getState(states, acl, data) {\n        if (states) {\n            let idCatch = {};\n            this.createState(states, idCatch, acl);\n            this.setTransitions(states, idCatch, acl, data);\n        }\n    }\n    addConditions(arr, ato, data) {\n        let parms = data.animatorParams;\n        if (null == parms || 0 == parms.length)\n            return;\n        for (let i = 0, len = arr.length; i < len; i++) {\n            let o = arr[i];\n            let parm = null;\n            for (let j = parms.length - 1; j >= 0; j--) {\n                if (parms[j].id == o.id) {\n                    parm = parms[j];\n                    break;\n                }\n            }\n            if (null == parm) {\n                return;\n            }\n            let c;\n            if (parm.type == AniParmType.Bool) {\n                let b = new AnimatorStateBoolCondition(parm.name);\n                b.compareFlag = Boolean(o.checkValue);\n                c = b;\n            }\n            else if (parm.type == AniParmType.Float) {\n                let n = new AnimatorStateNumberCondition(parm.name);\n                n.numberValue = Number(o.checkValue);\n                n.compareFlag = o.type;\n                c = n;\n            }\n            else if (parm.type == AniParmType.Trigger) {\n                let t = new AnimatorStateTriggerCondition(parm.name);\n                c = t;\n            }\n            ato.addCondition(c);\n        }\n    }\n}\n","export class BatchMark {\n    constructor() {\n        this.updateMark = -1;\n        this.indexInList = -1;\n        this.batched = false;\n    }\n}\n","import { BatchMark } from \"../../core/render/BatchMark\";\nexport class InstanceBatchManager {\n    constructor() {\n        this._instanceBatchOpaqueMarks = [];\n        this.updateCountMark = 0;\n    }\n    _getData(key, data, cls) {\n        if (null == cls) {\n            cls = Array;\n        }\n        if (\"boolean\" == typeof key) {\n            return (data[key ? 0 : 1]) || (data[key ? 0 : 1] = new cls());\n        }\n        else {\n            return data[key] || (data[key] = new cls());\n        }\n    }\n    getInstanceBatchOpaquaMark(element) {\n        let invertFrontFace = element._transform ? element._transform._isFrontFaceInvert : false;\n        let receiveShadow = element._baseRender._receiveShadow;\n        let matID_geometry = (element._material._id << 17) + (element._geometry._id << 2) + (Number(invertFrontFace) << 1) + Number(receiveShadow);\n        let reflectid = (element._baseRender._probReflection ? element._baseRender._probReflection._reflectionProbeID : -1) + 1;\n        let lightmapid = (element._baseRender.lightmapIndex) + 1;\n        let lightprobid = (element._baseRender._lightProb ? element._baseRender._lightProb._volumetricProbeID : -1) + 1;\n        let giID = (reflectid << 10) + (lightmapid << 20) + lightprobid;\n        var data = this._getData(matID_geometry, this._instanceBatchOpaqueMarks);\n        return this._getData(giID, data, BatchMark);\n    }\n}\nInstanceBatchManager.instance = new InstanceBatchManager();\n","import { Vector3 } from \"../../../../maths/Vector3\";\nimport { SingletonList } from \"../../../../utils/SingletonList\";\nimport { BaseRender, RenderBitFlag } from \"../../../core/render/BaseRender\";\nexport class BatchRender extends BaseRender {\n    constructor() {\n        super();\n        this._lodInstanceRenderElement = {};\n        this._RenderBitFlag = RenderBitFlag.RenderBitFlag_Batch;\n        this._renderElements = [];\n        this._lodInstanceRenderElement[-1] = [];\n        this._batchList = new SingletonList();\n    }\n    get checkLOD() {\n        return this._checkLOD;\n    }\n    set checkLOD(value) {\n        this._checkLOD = value;\n    }\n    get lodCullRateArray() {\n        return this._lodRateArray;\n    }\n    set lodCullRateArray(value) {\n        if (!this._checkLOD) {\n            return;\n        }\n        value.sort((a, b) => b - a);\n        this._lodRateArray = value;\n    }\n    _canBatch(render) {\n        if (render._batchRender) {\n            return false;\n        }\n        return false;\n    }\n    _onEnable() {\n        super._onEnable();\n        if (this._batchList) {\n            for (let i = 0, n = this._batchList.length; i < n; i++) {\n                this._batchList.elements[i].setRenderbitFlag(this._RenderBitFlag, true);\n            }\n        }\n    }\n    _onDisable() {\n        super._onDisable();\n        if (this._batchList) {\n            for (let i = 0, n = this._batchList.length; i < n; i++) {\n                this._batchList.elements[i].setRenderbitFlag(this._RenderBitFlag, false);\n            }\n        }\n    }\n    _changeLOD(lod) {\n        if (this._cacheLod == lod) {\n            return;\n        }\n        if (this._cacheLod == this.lodCullRateArray.length - 1) {\n            lod = -1;\n        }\n        this._renderElements = this._lodInstanceRenderElement[lod];\n        if (this._lodInstanceRenderElement[lod] && lod != -1) {\n            this._renderElements || (this._renderElements = []);\n            this._renderElements = this._renderElements.concat(this._lodInstanceRenderElement[-1]);\n        }\n        else {\n            this._renderElements = this._lodInstanceRenderElement[-1];\n        }\n    }\n    onPreRender() {\n        if (!this.checkLOD || !this._lodRateArray || this._lodRateArray.length < 1) {\n            this._changeLOD(0);\n        }\n        else {\n            let checkCamera = this.owner.scene.cullInfoCamera;\n            let maxYDistance = checkCamera.maxlocalYDistance;\n            Vector3.subtract(this._bounds._imp.getCenter(), checkCamera.transform.position, tempVec);\n            let length = tempVec.length();\n            let rateYDistance = length / checkCamera.farPlane * maxYDistance;\n            let rate = (this._lodsize / rateYDistance);\n            for (let i = 0; i < this._lodRateArray.length; i++) {\n                if (rate < this._lodRateArray[i])\n                    continue;\n                this._changeLOD(i);\n                break;\n            }\n        }\n    }\n    _batchOneRender(render) {\n        return false;\n    }\n    _removeOneRender(render) {\n    }\n    _updateOneRender(render) {\n    }\n    addList(renderNode) {\n        for (var i = 0, n = renderNode.length; i < n; i++) {\n            let baseRender = renderNode[i];\n            if (this._canBatch(baseRender)) {\n                this._batchList.add(baseRender);\n            }\n        }\n    }\n    reBatch() {\n        let renderNums = this._batchList.length;\n        let renders = this._batchList.elements;\n        for (var i = 0; i < renderNums; i++) {\n            let render = renders[i];\n            this._batchOneRender(render);\n        }\n    }\n    _restorRenderNode() {\n        for (let i = 0, n = this._batchList.length; i < n; i++) {\n            this._removeOneRender(this._batchList.elements[i]);\n        }\n    }\n    _clear() {\n        this._restorRenderNode();\n        this._renderElements = [];\n        this._batchList.destroy();\n        this._batchList = new SingletonList();\n        this._lodInstanceRenderElement = {};\n        this._lodInstanceRenderElement[-1] = [];\n    }\n}\nconst tempVec = new Vector3();\n","import { SingletonList } from \"../../../../utils/SingletonList\";\nimport { RenderBitFlag } from \"../../../core/render/BaseRender\";\nimport { InstanceRenderElement } from \"../../../core/render/InstanceRenderElement\";\nimport { InstanceBatchManager } from \"../../../graphics/Batch/InstanceBatchManager\";\nimport { Bounds } from \"../../../math/Bounds\";\nimport { BatchRender } from \"./BatchRender\";\nexport class StaticInstanceBatchRender extends BatchRender {\n    constructor() {\n        super();\n        this._insBatchMarksNums = [];\n        this._insElementMarksArray = [];\n        this._instanceBatchminNums = 10;\n        this._updateChangeElement = [];\n        this.checkLOD = true;\n        this._batchManager = new InstanceBatchManager();\n        this._RenderBitFlag = RenderBitFlag.RenderBitFlag_InstanceBatch;\n    }\n    _isRenderNodeAllCanInstanceBatch(render) {\n        let elements = render._renderElements;\n        for (var i = 0, n = elements.length; i < n; i++) {\n            let element = elements[i];\n            if (!element.material._shader._enableInstancing) {\n                return false;\n            }\n        }\n        return true;\n    }\n    _sumInstanceBatch(render) {\n        let elements = render._renderElements;\n        for (var i = 0, n = elements.length; i < n; i++) {\n            let element = elements[i];\n            var insBatchMarks = this._batchManager.getInstanceBatchOpaquaMark(element);\n            if (insBatchMarks.indexInList == -1) {\n                insBatchMarks.indexInList = this._insBatchMarksNums.length;\n                this._insBatchMarksNums.push(0);\n            }\n            this._insBatchMarksNums[insBatchMarks.indexInList] += 1;\n        }\n    }\n    _batchOneElement(element, render) {\n        var insBatchMarks = this._batchManager.getInstanceBatchOpaquaMark(element);\n        if (insBatchMarks.indexInList == -1)\n            return;\n        let instanceelement = this._insElementMarksArray[insBatchMarks.indexInList];\n        if (!instanceelement) {\n            instanceelement = this._createInstanceElement(element, render, insBatchMarks);\n        }\n        let list = instanceelement._instanceBatchElementList;\n        if (list.length == InstanceRenderElement.maxInstanceCount) {\n            this._insBatchMarksNums.push(this._insBatchMarksNums[insBatchMarks.indexInList]);\n            insBatchMarks.indexInList = this._insBatchMarksNums.length - 1;\n            instanceelement = this._createInstanceElement(element, render, insBatchMarks);\n            list = instanceelement._instanceBatchElementList;\n        }\n        if (list.indexof(element) == -1) {\n            list.add(element);\n            instanceelement._isUpdataData = true;\n            (this._updateChangeElement.indexOf(instanceelement) == -1) && this._updateChangeElement.push(instanceelement);\n        }\n    }\n    _removeOneElement(element, render) {\n        var insBatchMarks = this._batchManager.getInstanceBatchOpaquaMark(element);\n        if (insBatchMarks.indexInList == -1)\n            return;\n    }\n    _updateOneElement(element, render) {\n    }\n    _createInstanceElement(element, render, batchMark) {\n        let instanceRenderElement = new InstanceRenderElement();\n        instanceRenderElement.render = render;\n        instanceRenderElement._geometry.subMesh = element._geometry;\n        instanceRenderElement.material = element.material;\n        instanceRenderElement.setTransform(null);\n        instanceRenderElement.renderSubShader = element.renderSubShader;\n        let list = instanceRenderElement._instanceBatchElementList;\n        list.length = 0;\n        list.add(element);\n        this._insElementMarksArray[batchMark.indexInList] = instanceRenderElement;\n        batchMark.batched = true;\n        if (!this._lodInstanceRenderElement[render._LOD]) {\n            this._lodInstanceRenderElement[render._LOD] = [];\n        }\n        this._lodInstanceRenderElement[render._LOD].push(instanceRenderElement);\n        return instanceRenderElement;\n    }\n    _canBatch(render) {\n        let elements = render._renderElements;\n        for (var i = 0, n = elements.length; i < n; i++) {\n            let element = elements[i];\n            var insBatchMarks = this._batchManager.getInstanceBatchOpaquaMark(element);\n            if (this._insBatchMarksNums[insBatchMarks.indexInList] < this._instanceBatchminNums || element.material.renderQueue >= 3000) {\n                return false;\n            }\n        }\n        return true;\n    }\n    _calculateBoundingBox() {\n        let bound = this._bounds;\n        for (let i = 0, n = this._batchList.length; i < n; i++) {\n            if (i == 0) {\n                this._batchList.elements[i].bounds.cloneTo(bound);\n            }\n            else {\n                Bounds.merge(bound, this._batchList.elements[i].bounds, bound);\n            }\n        }\n        let extend = this._bounds.getExtent();\n        this._lodsize = 2 * Math.max(extend.x, extend.y, extend.z);\n        return this._bounds;\n    }\n    _onDestroy() {\n        super._onDestroy();\n    }\n    _batchOneRender(render) {\n        if (!this._canBatch(render))\n            return false;\n        this.boundsChange = true;\n        let elements = render._renderElements;\n        for (let i = 0, n = elements.length; i < n; i++) {\n            let renderelement = elements[i];\n            this._batchOneElement(renderelement, render);\n        }\n        render._batchRender = this;\n        render.setRenderbitFlag(RenderBitFlag.RenderBitFlag_InstanceBatch, true);\n        return true;\n    }\n    _removeOneRender(render) {\n        if (!this._canBatch(render))\n            return;\n        if (this._batchList.indexof(render) != -1) {\n            this.boundsChange = true;\n            let elements = render._renderElements;\n            for (let i = 0, n = elements.length; i < n; i++) {\n                let renderelement = elements[i];\n                this._removeOneElement(renderelement, render);\n            }\n            render._batchRender = null;\n            render.setRenderbitFlag(RenderBitFlag.RenderBitFlag_InstanceBatch, false);\n        }\n    }\n    _updateOneRender(render) {\n        if (!this._canBatch(render))\n            return;\n        if (this._batchList.indexof(render) != -1) {\n            this.boundsChange = true;\n            let elements = render._renderElements;\n            for (let i = 0, n = elements.length; i < n; i++) {\n                let renderelement = elements[i];\n                this._updateOneElement(renderelement, render);\n            }\n        }\n    }\n    _clear() {\n        super._clear();\n        this._insElementMarksArray.forEach(element => {\n            element && element.destroy();\n        });\n        this._insElementMarksArray = [];\n        this._updateChangeElement = [];\n        this._insBatchMarksNums = [];\n    }\n    addList(renderNodes) {\n        if (!this._batchList) {\n            this._batchList = new SingletonList();\n        }\n        let renders = [];\n        for (var i = 0; i < renderNodes.length; i++) {\n            let baseRender = renderNodes[i];\n            if (baseRender._batchRender) {\n                continue;\n            }\n            if (this._isRenderNodeAllCanInstanceBatch(baseRender)) {\n                renders.push(baseRender);\n                this._sumInstanceBatch(baseRender);\n            }\n        }\n        for (var i = 0, n = renders.length; i < n; i++) {\n            let baseRender = renders[i];\n            if (this._canBatch(baseRender)) {\n                this._batchList.add(baseRender);\n            }\n        }\n    }\n    reBatch() {\n        let renderNums = this._batchList.length;\n        let renders = this._batchList.elements;\n        for (var i = 0; i < renderNums; i++) {\n            let render = renders[i];\n            this._batchOneRender(render);\n        }\n    }\n}\n","import { BatchRender } from \"./BatchRender\";\nexport class StatiVertexMergeBatchRender extends BatchRender {\n    _addList(renderNodes) {\n    }\n}\n","import { SingletonList } from \"../../../../utils/SingletonList\";\nimport { StaticFlag } from \"../../../core/Sprite3D\";\nimport { Volume } from \"../Volume\";\nimport { StaticInstanceBatchRender } from \"./StaticInstanceBatchRender\";\nimport { StatiVertexMergeBatchRender } from \"./StatiVertexMergeBatchRender\";\nexport class StaticBatchVolume extends Volume {\n    _getStaticInstanceBatchRender() {\n        let render = this.owner.getComponent(StaticInstanceBatchRender);\n        if (!render) {\n            render = this.owner.addComponent(StaticInstanceBatchRender);\n        }\n        return render;\n    }\n    _getStatiVertexMergeBatchRender() {\n        let render = this.owner.getComponent(StatiVertexMergeBatchRender);\n        if (!render) {\n            render = this.owner.addComponent(StatiVertexMergeBatchRender);\n        }\n        return render;\n    }\n    get checkLOD() {\n        return this._checkLOD;\n    }\n    set checkLOD(value) {\n        this._checkLOD = value;\n        if (this._enableStaticInstanceBatch) {\n            this._instanceBatchRender.checkLOD = value;\n        }\n        if (this._enableStaticVertexMergeBatch) {\n            this._vertexMergeBatchRender.checkLOD = value;\n        }\n        if (this._enableCustomBatch) {\n            this._customBatchs.forEach(element => {\n                element.checkLOD = value;\n            });\n        }\n    }\n    get enableStaticInstanceBatchRender() {\n        return this._enableStaticInstanceBatch;\n    }\n    set enableStaticInstanceBatchRender(value) {\n        if (!this._instanceBatchRender && value) {\n            this._instanceBatchRender = this._getStaticInstanceBatchRender();\n        }\n        if (value == this._enableStaticInstanceBatch)\n            return;\n        if (value) {\n            this._instanceBatchRender.enabled = true;\n        }\n        else {\n            this._instanceBatchRender.enabled = false;\n        }\n        this._enableStaticInstanceBatch = value;\n    }\n    get enableMergeBatchRender() {\n        return this._enableStaticVertexMergeBatch;\n    }\n    set enableMergeBatchRender(value) {\n        if (!this._vertexMergeBatchRender && value) {\n            this._vertexMergeBatchRender = this._getStatiVertexMergeBatchRender();\n        }\n        if (value == this._enableStaticVertexMergeBatch)\n            return;\n        if (value) {\n            this._vertexMergeBatchRender.enabled = true;\n        }\n        else {\n            this._vertexMergeBatchRender.enabled = false;\n        }\n        this._enableStaticVertexMergeBatch = value;\n    }\n    get enableCustomBatchRender() {\n        return this._enableCustomBatch;\n    }\n    set enableCustomBatchRender(value) {\n        this._enableCustomBatch = value;\n        this._customBatchs.forEach(element => {\n            element.enabled = value;\n        });\n    }\n    get customBatchRenders() {\n        return this._customBatchs;\n    }\n    set customBatchRenders(value) {\n        if (this._customBatchs) {\n            this._customBatchs.forEach(element => {\n                this.owner._destroyComponent(element);\n            });\n        }\n        this._customBatchs = value;\n        this._customBatchs.forEach(element => {\n            this.owner.addComponentInstance(element);\n        });\n        this.enableCustomBatchRender = this._enableCustomBatch;\n    }\n    constructor() {\n        super();\n        this._customBatchs = [];\n        this.checkLOD = true;\n        this._enableStaticInstanceBatch = false;\n        this._enableStaticVertexMergeBatch = false;\n        this._cacheRender = new SingletonList();\n        this._batchRender = new SingletonList();\n        this._enableCustomBatch = false;\n    }\n    _restorRenderNode() {\n        if (this.enableCustomBatchRender) {\n            this._customBatchs.forEach(element => {\n                element._clear();\n            });\n        }\n        if (this._enableStaticInstanceBatch) {\n            this._instanceBatchRender._clear();\n        }\n        if (this.enableCustomBatchRender) {\n            this._vertexMergeBatchRender._clear();\n        }\n    }\n    __addRenderNodeToBatch(renderNode) {\n        if (this.enableCustomBatchRender) {\n            this._customBatchs.forEach(element => {\n                if (element._batchOneRender(renderNode))\n                    return;\n            });\n        }\n        if (this._enableStaticInstanceBatch) {\n            if (this._instanceBatchRender._batchOneRender(renderNode))\n                return;\n        }\n        if (this.enableCustomBatchRender) {\n            if (this._vertexMergeBatchRender._batchOneRender(renderNode))\n                return;\n        }\n    }\n    __removeRenderNodeFromBatch(renderNode) {\n        renderNode._batchRender._removeOneRender(renderNode);\n    }\n    _onEnable() {\n        super._onEnable();\n        if (this._enableStaticInstanceBatch)\n            this._instanceBatchRender && (this._instanceBatchRender.enabled = true);\n        if (this._enableStaticVertexMergeBatch)\n            this._vertexMergeBatchRender && (this._vertexMergeBatchRender.enabled = true);\n        if (this.enableCustomBatchRender) {\n            this._customBatchs.forEach(element => {\n                element.enabled = true;\n            });\n        }\n    }\n    _onDisable() {\n        super._onDisable();\n        if (this._enableStaticInstanceBatch)\n            this._instanceBatchRender && (this._instanceBatchRender.enabled = false);\n        if (this._enableStaticVertexMergeBatch)\n            this._vertexMergeBatchRender && (this._vertexMergeBatchRender.enabled = false);\n        if (this.enableCustomBatchRender) {\n            this._customBatchs.forEach(element => {\n                element.enabled = false;\n            });\n        }\n    }\n    _addRenderNode(renderNode) {\n        if (renderNode.renderNode.staticMask == StaticFlag.StaticBatch) {\n            if (this._cacheRender.indexof(renderNode) != -1) {\n                return;\n            }\n            this._cacheRender.add(renderNode);\n            if (this._batchRender.length > 0) {\n                this.__addRenderNodeToBatch(renderNode);\n            }\n        }\n    }\n    _removeRenderNode(renderNode) {\n        if (renderNode.renderNode.staticMask == StaticFlag.StaticBatch) {\n            if (this._batchRender.indexof(renderNode) != -1) {\n                this.__removeRenderNodeFromBatch(renderNode);\n                this._batchRender.remove(renderNode);\n            }\n        }\n    }\n    _VolumeChange() {\n        super._VolumeChange();\n        this._cacheRender.clear();\n    }\n    onStart() {\n        this.reBatch();\n    }\n    reBatch() {\n        this._cacheRender.elements.length = this._cacheRender.length;\n        this._batchRender.clear();\n        this._restorRenderNode();\n        if (this.enableCustomBatchRender) {\n            this._customBatchs.forEach(element => {\n                element.addList(this._cacheRender.elements);\n                element.reBatch();\n            });\n        }\n        if (this._enableStaticInstanceBatch) {\n            this._instanceBatchRender.addList(this._cacheRender.elements);\n            this._instanceBatchRender.reBatch();\n        }\n        if (this.enableCustomBatchRender) {\n            this._vertexMergeBatchRender.addList(this._cacheRender.elements);\n            this._vertexMergeBatchRender.reBatch();\n        }\n        for (var i = 0, n = this._cacheRender.length; i < n; i++) {\n            (this._cacheRender.elements[i]._batchRender) && this._batchRender.add(this._cacheRender.elements[i]);\n        }\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { BufferState } from \"../../../webgl/utils/BufferState\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { GeometryElement } from \"../GeometryElement\";\nexport class UI3DGeometry extends GeometryElement {\n    constructor(owner) {\n        super(MeshTopology.Triangles, DrawType.DrawElement);\n        this._owner = owner;\n        this.bufferState = new BufferState();\n        this._bound = new Bounds();\n        this._createBuffer();\n        this.indexFormat = IndexFormat.UInt16;\n    }\n    get bounds() {\n        return this._bound;\n    }\n    _createBuffer() {\n        var vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL,UV\");\n        var halfLong = 1 / 2;\n        var halfWidth = 1 / 2;\n        this._vertex = new Float32Array([-halfLong, halfWidth, 0, 0, 0, 1, 0, 0,\n            halfLong, halfWidth, 0, 0, 0, 1, 1, 0,\n            -halfLong, -halfWidth, 0, 0, 0, 1, 0, 1,\n            halfLong, -halfWidth, 0, 0, 0, 1, 1, 1]);\n        this._index = new Uint16Array([0, 1, 2, 3, 2, 1]);\n        this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(this._vertex.length * 4, BufferUsage.Dynamic, false);\n        this._vertexBuffer.vertexDeclaration = vertexDeclaration;\n        this._vertexBuffer.setData(this._vertex.buffer);\n        this._indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, this._index.length, BufferUsage.Static, false);\n        this._indexBuffer.setData(this._index);\n        this.bufferState = new BufferState();\n        this.bufferState.applyState([this._vertexBuffer], this._indexBuffer);\n        this._bound.setExtent(new Vector3(halfLong, halfWidth, halfLong));\n        this._bound.setCenter(new Vector3(0, 0, 0));\n        this._positionArray = [new Vector3(), new Vector3(), new Vector3(), new Vector3()];\n        this._positionArray[0].set(-halfWidth, halfLong, 0.0);\n        this._positionArray[1].set(halfWidth, halfLong, 0.0);\n        this._positionArray[2].set(-halfWidth, -halfLong, 0.0);\n        this._positionArray[3].set(halfWidth, -halfLong, 0.0);\n    }\n    _updateRenderParams(state) {\n        this.clearRenderParams();\n        this.setDrawElemenParams(6, 0);\n    }\n    destroy() {\n        super.destroy();\n        this.bufferState.destroy();\n        this._vertexBuffer.destroy();\n        this._indexBuffer.destroy();\n        this.bufferState = null;\n        this._vertexBuffer = null;\n        this._indexBuffer = null;\n        delete this._vertex;\n        delete this._index;\n    }\n}\nUI3DGeometry._type = GeometryElement._typeCounter++;\nconst tempV0 = new Vector3();\n","import { Sprite } from \"../../../display/Sprite\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { RenderTexture2D } from \"../../../resource/RenderTexture2D\";\nimport { Ray } from \"../../math/Ray\";\nimport { MaterialRenderMode } from \"../../../resource/Material\";\nimport { MeshSprite3DShaderDeclaration } from \"../MeshSprite3DShaderDeclaration\";\nimport { BaseRender } from \"../render/BaseRender\";\nimport { RenderElement } from \"../render/RenderElement\";\nimport { Sprite3D } from \"../Sprite3D\";\nimport { UI3DGeometry } from \"./UI3DGeometry\";\nimport { Event } from \"../../../events/Event\";\nimport { UnlitMaterial } from \"../material/UnlitMaterial\";\nimport { InputManager } from \"../../../events/InputManager\";\nimport { NodeFlags } from \"../../../Const\";\nimport { ILaya } from \"../../../../ILaya\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { LayaEnv } from \"../../../../LayaEnv\";\nimport { RenderState } from \"../../../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Utils } from \"../../../utils/Utils\";\nexport class UI3D extends BaseRender {\n    get sprite() {\n        return this._uisprite;\n    }\n    set sprite(value) {\n        if (value == this._uisprite)\n            return;\n        this._uisprite = value;\n        this._shellSprite.removeChildren(0, this._shellSprite.numChildren - 1);\n        if (value)\n            this._shellSprite.addChild(value);\n        this._resizeRT();\n        this.boundsChange = true;\n    }\n    get prefab() {\n        return this._prefab;\n    }\n    set prefab(value) {\n        this._prefab = value;\n        if (value)\n            this.sprite = value.create();\n        else\n            this.sprite = null;\n    }\n    get scale() {\n        return this._size;\n    }\n    set scale(value) {\n        if (value.x <= 0 || value.y <= 0 || Vector2.equals(value, this._size))\n            return;\n        value.cloneTo(this._size);\n        this._resizeRT();\n        this.boundsChange = true;\n        this._scale.setValue(value.x, value.y, 1);\n    }\n    get renderMode() {\n        if (!this.sharedMaterial)\n            this.sharedMaterial = this._ui3DMat;\n        return this.sharedMaterial.materialRenderMode;\n    }\n    set renderMode(value) {\n        this.sharedMaterial.materialRenderMode = value;\n        this.boundsChange = true;\n    }\n    get cull() {\n        let mat = this.sharedMaterial;\n        if (!mat) {\n            mat = this._ui3DMat;\n        }\n        return mat.cull;\n    }\n    set cull(value) {\n        this.sharedMaterial && (this.sharedMaterial.cull = value);\n    }\n    get resolutionRate() {\n        return this._resolutionRate;\n    }\n    set resolutionRate(value) {\n        if (value <= 0)\n            return;\n        if (this._resolutionRate == value)\n            return;\n        this._resolutionRate = value;\n        this._resizeRT();\n    }\n    get billboard() {\n        return this._view;\n    }\n    set billboard(value) {\n        this._view = value;\n        this._sizeChange = true;\n        this.boundsChange = true;\n    }\n    get enableHit() {\n        return this._hit;\n    }\n    set enableHit(value) {\n        this._hit = value;\n    }\n    set cameraSpace(value) {\n        if (this._cameraSpace == value) {\n            return;\n        }\n        this._cameraSpace = value;\n        this._resizeRT();\n    }\n    get cameraSpace() {\n        return this._cameraSpace;\n    }\n    set cameraPlaneDistance(value) {\n        value = Math.max(0, value);\n        this._cameraPlaneDistance = value;\n    }\n    get cameraPlaneDistance() {\n        return this._cameraPlaneDistance;\n    }\n    set attachCamera(value) {\n        if (this._camera == value)\n            return;\n        this._camera = value;\n        this._resizeRT();\n    }\n    get attachCamera() {\n        return this._camera;\n    }\n    constructor() {\n        super();\n        this._sizeChange = true;\n        this._view = true;\n        this._bindPropertyName = \"u_AlbedoTexture\";\n        this._hit = false;\n        this._cameraSpace = false;\n        this._worldParams = new Vector4();\n        this._size = new Vector2(1, 1);\n        this._resolutionRate = 128;\n        this._shellSprite = new Sprite();\n        this._shellSprite.name = \"UI3D\";\n        this._shellSprite._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\n        this._shellSprite._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\n        this._shellSprite._parent = ILaya.stage;\n        this._baseRenderNode.shaderData.addDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0);\n        this._matrix = new Matrix4x4();\n        this._scale = new Vector3(1.0, 1.0, 1.0);\n    }\n    _creatDefaultMat() {\n        if (this._ui3DMat)\n            return;\n        this._ui3DMat = new UnlitMaterial();\n        this._ui3DMat.materialRenderMode = MaterialRenderMode.RENDERMODE_OPAQUE;\n        this._ui3DMat.cull = RenderState.CULL_BACK;\n    }\n    _addRenderElement() {\n        var elements = this._renderElements;\n        if (!this.sharedMaterial) {\n            this._creatDefaultMat();\n            this.sharedMaterial = this._ui3DMat;\n        }\n        this._setMaterialTexture();\n        var material = this.sharedMaterial;\n        var element = new RenderElement();\n        element.setTransform(this.owner._transform);\n        element.render = this;\n        element.material = material;\n        element.renderSubShader = element.material.shader.getSubShaderAt(0);\n        this._geometry = new UI3DGeometry(this);\n        element.setGeometry(this._geometry);\n        elements.push(element);\n        this._setRenderElements();\n        this.geometryBounds = this._geometry.bounds;\n    }\n    _isCameraSpaceMode() {\n        return this._cameraSpace && this._camera;\n    }\n    _parseHit(ray) {\n        let _tempRay = UI3D._ray;\n        let u, v;\n        if (!this._uisprite || !LayaEnv.isPlaying)\n            return null;\n        this._matrix.invert(tempMatrix);\n        Vector3.transformCoordinate(ray.origin, tempMatrix, _tempRay.origin);\n        Vector3.TransformNormal(ray.direction, tempMatrix, _tempRay.direction);\n        _tempRay.direction.normalize();\n        let normalizeHitWidth = 0;\n        let normalizeHitHeight = 0;\n        let t = -_tempRay.origin.z / _tempRay.direction.z;\n        if (t < 0) {\n            return null;\n        }\n        else {\n            u = _tempRay.origin.x + t * _tempRay.direction.x;\n            v = _tempRay.origin.y + t * _tempRay.direction.y;\n        }\n        normalizeHitWidth = u + 0.5;\n        normalizeHitHeight = v + 0.5;\n        let cx = normalizeHitWidth * this._rendertexure2D.width;\n        let cy = (1.0 - normalizeHitHeight) * this._rendertexure2D.height;\n        let target = InputManager.inst.getSpriteUnderPoint(this._uisprite, cx, cy);\n        if (target)\n            return target;\n        else\n            return null;\n    }\n    _resizeRT() {\n        let width;\n        let height;\n        if (this._isCameraSpaceMode()) {\n            width = this._camera.viewport.width;\n            height = this._camera.viewport.height;\n        }\n        else {\n            width = this._size.x * this._resolutionRate;\n            height = this._size.y * this._resolutionRate;\n        }\n        let invertY = !LayaGL.renderEngine._screenInvertY;\n        if (!this._rendertexure2D) {\n            this._rendertexure2D = new RenderTexture2D(width, height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n            this._rendertexure2D._invertY = invertY;\n        }\n        else {\n            if (this._rendertexure2D.width != width || this._rendertexure2D.height != height) {\n                this._rendertexure2D.destroy();\n                this._rendertexure2D = new RenderTexture2D(width, height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\n                this._rendertexure2D._invertY = invertY;\n                this._setMaterialTexture();\n            }\n        }\n        this._submitRT();\n    }\n    onPreRender() {\n        if (this._isCameraSpaceMode()) {\n            this.boundsChange = true;\n            let cameraforward = Vector3.TEMP;\n            let rotate = Quaternion.TEMP;\n            let scale = tempVec3;\n            let camera = this._camera;\n            camera.transform.getForward(cameraforward);\n            cameraforward = cameraforward.normalize();\n            Vector3.scale(cameraforward, this._cameraPlaneDistance, cameraforward);\n            Vector3.add(camera.transform.position, cameraforward, cameraforward);\n            camera.transform.rotation.cloneTo(rotate);\n            if (camera.orthographic) {\n                scale.setValue(camera.orthographicVerticalSize * camera.aspectRatio, camera.orthographicVerticalSize, 1);\n            }\n            else {\n                let height = Math.tan(Utils.toRadian(camera.fieldOfView / 2)) * this._cameraPlaneDistance * 2;\n                scale.setValue(height * camera.aspectRatio, height, 1);\n            }\n            Matrix4x4.createAffineTransformation(cameraforward, rotate, scale, this._matrix);\n        }\n        else {\n            if (this.billboard) {\n                this._sizeChange = false;\n                let camera = this.owner.scene.cullInfoCamera;\n                Matrix4x4.createAffineTransformation(this._transform.position, camera.transform.rotation, this._scale, this._matrix);\n            }\n            else if (this._sizeChange) {\n                this.boundsChange = true;\n                this._transform.worldMatrix.cloneTo(this._matrix);\n            }\n        }\n    }\n    getUITexture() {\n        return this._rendertexure2D;\n    }\n    _getCameraDistance(rayOri) {\n        return Vector3.distance(rayOri, this.owner.transform.position);\n    }\n    _renderUpdate(context) {\n        let shaderData = this._baseRenderNode.shaderData;\n        shaderData.setMatrix4x4(Sprite3D.WORLDMATRIX, this._matrix);\n        let transform = this.owner.transform;\n        let worldParams = this._worldParams;\n        worldParams.x = transform.getFrontFaceValue();\n        shaderData.setVector(Sprite3D.WORLDINVERTFRONT, worldParams);\n    }\n    renderUpdate(context) {\n        this._renderElements.forEach(element => {\n            let geometry = element._geometry;\n            element._renderElementOBJ.isRender = geometry._prepareRender(context);\n            geometry._updateRenderParams(context);\n        });\n    }\n    _submitRT() {\n        this._rendertexure2D && this._shellSprite.drawToRenderTexture2D(this._rendertexure2D.width, this._rendertexure2D.height, 0, 0, this._rendertexure2D, false);\n        this._setMaterialTexture();\n    }\n    _setMaterialTexture() {\n        if (this._rendertexure2D) {\n            this.sharedMaterial.addDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n            this.sharedMaterial.setTexture(this._bindPropertyName, this._rendertexure2D);\n        }\n        else {\n            this.sharedMaterial.removeDefine(UnlitMaterial.SHADERDEFINE_ALBEDOTEXTURE);\n        }\n    }\n    _checkUIPos(ray) {\n        if (!this.enableHit)\n            return false;\n        return this._parseHit(ray);\n    }\n    _calculateBoundingBox() {\n        this._geometry.bounds._tranform(this._matrix, this._bounds);\n    }\n    _onAdded() {\n        super._onAdded();\n        this._addRenderElement();\n    }\n    _onDisable() {\n        super._onDisable();\n        this.owner.transform.off(Event.TRANSFORM_CHANGED, this, this._transByRotate);\n        this.owner.scene._UI3DManager.remove(this);\n    }\n    _onEnable() {\n        super._onEnable();\n        this.owner.scene._UI3DManager.add(this);\n        this.owner.transform.on(Event.TRANSFORM_CHANGED, this, this._transByRotate);\n        this._transByRotate();\n    }\n    _onDestroy() {\n        super._onDestroy();\n        this._rendertexure2D && this._rendertexure2D.destroy();\n        this._shellSprite && (this._shellSprite._parent = null);\n        this._uisprite && this._uisprite.destroy();\n        this._shellSprite && this._shellSprite.destroy();\n        this._ui3DMat && this._ui3DMat.destroy();\n        this._resolutionRate = null;\n        this._size = null;\n        this._scale = null;\n        this._matrix = null;\n    }\n    _transByRotate() {\n        if (!this.billboard) {\n            this._sizeChange = true;\n        }\n        this.boundsChange = true;\n    }\n}\nUI3D.DEBUG = false;\nUI3D._ray = new Ray(new Vector3(), new Vector3());\nconst tempMatrix = new Matrix4x4();\nconst tempVec3 = new Vector3();\n","import { Loader } from \"../../net/Loader\";\nimport { AssetDb } from \"../../resource/AssetDb\";\nimport { AnimationClip } from \"../animation/AnimationClip\";\nclass AnimationClipLoader {\n    load(task) {\n        let url = AssetDb.inst.getSubAssetURL(task.url, task.uuid, null, \"lani\");\n        return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n            if (!data) {\n                return null;\n            }\n            return AnimationClip._parse(data);\n        });\n    }\n}\nLoader.registerLoader([\"lani\"], AnimationClipLoader, Loader.ANIMATIONCLIP);\n","import { Loader } from \"../../net/Loader\";\nimport { URL } from \"../../net/URL\";\nimport { KTXTextureInfo } from \"../../RenderEngine/KTXTextureInfo\";\nimport { TextureDimension } from \"../../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\nimport { AssetDb } from \"../../resource/AssetDb\";\nimport { Resource } from \"../../resource/Resource\";\nimport { Byte } from \"../../utils/Byte\";\nimport { Utils } from \"../../utils/Utils\";\nimport { TextureCube } from \"../../resource/TextureCube\";\nvar internalResources;\nexport class CubemapLoader {\n    constructor() {\n        if (!internalResources) {\n            internalResources = {\n                \"WhiteTextureCube.ltc\": TextureCube.whiteTexture,\n                \"BlackTextureCube.ltc\": TextureCube.blackTexture,\n                \"GrayTextureCube.ltc\": TextureCube.grayTexture,\n            };\n        }\n    }\n    load(task) {\n        if (task.url.indexOf(\"internal/\") != -1) {\n            let tex = internalResources[Utils.getBaseName(task.url)];\n            if (tex)\n                return Promise.resolve(tex);\n        }\n        if (task.ext == \"ktx\" || task.ext == \"cubemap\") {\n            let url = task.url;\n            if (task.ext == \"cubemap\")\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"ktx\");\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n                if (!data)\n                    return null;\n                let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\n                if (ktxInfo.dimension != TextureDimension.Cube) {\n                    Loader.warn(\"ktxInfo.dimension != TextureDimension.Cube! \" + task.url);\n                    return null;\n                }\n                let tex = new TextureCube(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\n                tex.setKTXData(ktxInfo);\n                let obsoluteInst = task.obsoluteInst;\n                if (obsoluteInst && (obsoluteInst instanceof TextureCube))\n                    tex = this.move(obsoluteInst, tex);\n                return tex;\n            });\n        }\n        else if (task.ext == \"ltcb\" || task.ext == \"ltcb.ls\") {\n            return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\n                if (!data)\n                    return null;\n                let byte = new Byte(data);\n                let version = byte.readUTFString();\n                if (version !== \"LAYATEXTURECUBE:0000\") {\n                    console.warn(`CubemapBinLoader: unknow version. ${version}`);\n                    return null;\n                }\n                let format = byte.readUint8();\n                let mipCount = byte.getUint8();\n                let size = byte.readUint16();\n                let filterMode = byte.getUint8();\n                let wrapModeU = byte.getUint8();\n                let wrapModev = byte.getUint8();\n                let anisoLevel = byte.getUint8();\n                let tex = new TextureCube(size, format, mipCount > 1 ? true : false);\n                tex.setPixelsData(null, false, false);\n                tex.filterMode = filterMode;\n                tex.wrapModeU = wrapModeU;\n                tex.wrapModeV = wrapModev;\n                tex.anisoLevel = anisoLevel;\n                let pos = byte.pos;\n                let mipSize = size;\n                for (let i = 0; i < mipCount; i++) {\n                    let uint8Arrays = new Array(6);\n                    let mipPixelLength = mipSize * mipSize * tex._getFormatByteCount();\n                    for (let j = 0; j < 6; j++) {\n                        uint8Arrays[j] = new Uint8Array(data, pos, mipPixelLength);\n                        pos += mipPixelLength;\n                    }\n                    tex.updateSubPixelsData(uint8Arrays, 0, 0, mipSize, mipSize, i, false, false, false);\n                    mipSize /= 2;\n                }\n                let obsoluteInst = task.obsoluteInst;\n                if (obsoluteInst && (obsoluteInst instanceof TextureCube))\n                    tex = this.move(obsoluteInst, tex);\n                return tex;\n            });\n        }\n        else {\n            return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\n                if (!data)\n                    return null;\n                let ltcBasePath = URL.getPath(task.url);\n                let urls = [\n                    URL.join(ltcBasePath, data.front),\n                    URL.join(ltcBasePath, data.back),\n                    URL.join(ltcBasePath, data.left),\n                    URL.join(ltcBasePath, data.right),\n                    URL.join(ltcBasePath, data.up),\n                    URL.join(ltcBasePath, data.down)\n                ];\n                return Promise.all(urls.map(url => {\n                    if (url)\n                        return task.loader.fetch(url, \"image\", task.progress.createCallback(), task.options);\n                    else\n                        return Promise.resolve(null);\n                })).then(images => {\n                    var _a, _b;\n                    let constructParams = task.options.constructParams;\n                    let size = constructParams ? constructParams[0] : ((_b = ((_a = images[0]) === null || _a === void 0 ? void 0 : _a.width)) !== null && _b !== void 0 ? _b : 1);\n                    let format = constructParams ? constructParams[1] : TextureFormat.R8G8B8A8;\n                    let mipmap = constructParams ? constructParams[3] : false;\n                    let srgb = constructParams ? constructParams[5] : true;\n                    let tex = new TextureCube(size, format, mipmap, srgb);\n                    tex.setImageData(images, false, false);\n                    let obsoluteInst = task.obsoluteInst;\n                    if (obsoluteInst && (obsoluteInst instanceof TextureCube))\n                        tex = this.move(obsoluteInst, tex);\n                    return tex;\n                });\n            });\n        }\n    }\n    move(obsoluteInst, tex) {\n        obsoluteInst._texture = tex._texture;\n        obsoluteInst._format = tex.format;\n        obsoluteInst.width = tex.width;\n        obsoluteInst.height = tex.height;\n        obsoluteInst.obsolute = false;\n        delete Resource._idResourcesMap[tex.id];\n        return obsoluteInst;\n    }\n}\nLoader.registerLoader([\"ltc\", \"ltcb\", \"ltcb.ls\", \"cubemap\"], CubemapLoader, Loader.TEXTURECUBE);\n","import { Loader } from \"../../net/Loader\";\nimport { Texture2DArray } from \"../../resource/Texture2DArray\";\nimport { URL } from \"../../net/URL\";\nclass Texture2DArrayLoader {\n    load(task) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n            let textures = data.textures;\n            if (textures) {\n                let urls = [];\n                let basePath = URL.getPath(task.url);\n                for (let i = textures.length - 1; i >= 0; i--) {\n                    urls.unshift(URL.join(basePath, textures[i]));\n                }\n                return Promise.all(urls.map(url => {\n                    if (url)\n                        return task.loader.fetch(url, \"image\", task.progress.createCallback(), task.options);\n                    else\n                        return Promise.resolve(null);\n                })).then(images => {\n                    let rt = new Texture2DArray(data.width, data.height, data.depth, data.format, data.mipmap, false, data.sRGB);\n                    rt.setImageData(images, data.premultiplyAlpha, data.invertY);\n                    return rt;\n                });\n            }\n            else {\n                return new Texture2DArray(data.width, data.height, data.depth, data.format, data.mipmap, false, data.sRGB);\n            }\n        });\n    }\n}\nLoader.registerLoader([\"tex2darray\"], Texture2DArrayLoader, Loader.TEXTURECUBE);\n","import { Loader } from \"../../net/Loader\";\nimport { AvatarMask } from \"../component/Animator/AvatarMask\";\nclass AvatarMaskLoader {\n    load(task) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\n            if (!data)\n                return null;\n            return new AvatarMask(data);\n        });\n    }\n}\nLoader.registerLoader([\"lavm\"], AvatarMaskLoader);\n","import { Loader } from \"../../net/Loader\";\nimport { AnimatorController } from \"../component/Animator/AnimatorController\";\nimport { URL } from \"../../net/URL\";\nclass AnimationControllerLoader {\n    load(task) {\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\n            let ret = new AnimatorController(data);\n            if (ret.data && ret.data.controllerLayers) {\n                let layers = ret.data.controllerLayers;\n                let promises = [];\n                for (let i = layers.length - 1; i >= 0; i--) {\n                    if (layers[i].avatarMask) {\n                        this.loadAvatarMask(layers[i], promises, task);\n                    }\n                    let states = layers[i].states;\n                    this.loadStates(states, promises, task);\n                }\n                return Promise.all(promises).then(deps => {\n                    ret.addDeps(deps);\n                    return ret;\n                });\n            }\n            else\n                return ret;\n        });\n    }\n    loadAvatarMask(l, promises, task) {\n        let basePath = URL.getPath(task.url);\n        if (l.avatarMask && l.avatarMask._$uuid && '' != l.avatarMask._$uuid) {\n            let url = URL.getResURLByUUID(l.avatarMask._$uuid);\n            if (!url.startsWith(\"res://\"))\n                url = URL.join(basePath, url);\n            promises.push(task.loader.load(url).then(res => {\n                l.avatarMask = res;\n                return res;\n            }));\n        }\n        else {\n            l.avatarMask = null;\n        }\n    }\n    loadStates(states, promises, task) {\n        let basePath = URL.getPath(task.url);\n        for (let j = states.length - 1; j >= 0; j--) {\n            if (states[j].clip && states[j].clip._$uuid) {\n                let url = URL.getResURLByUUID(states[j].clip._$uuid);\n                if (!url.startsWith(\"res://\"))\n                    url = URL.join(basePath, url);\n                promises.push(task.loader.load(url).then(res => {\n                    states[j].clip = res;\n                    return res;\n                }));\n            }\n            if (states[j].states) {\n                this.loadStates(states[j].states, promises, task);\n            }\n        }\n    }\n}\nLoader.registerLoader([\"controller\"], AnimationControllerLoader);\n","import { Vector3 } from \"../../maths/Vector3\";\nexport class HitResult {\n    constructor() {\n        this.succeeded = false;\n        this.collider = null;\n        this.point = new Vector3();\n        this.normal = new Vector3();\n        this.hitFraction = 0;\n        this._inPool = false;\n    }\n}\n","import { CameraClearFlags } from \"../Camera\";\nimport { Ray } from \"../../math/Ray\";\nimport { HitResult } from \"../../physics/HitResult\";\nimport { Config3D } from \"../../../../Config3D\";\nimport { InputManager } from \"../../../events/InputManager\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Browser } from \"../../../utils/Browser\";\nconst _vec2 = new Vector2();\nconst _ray = new Ray(new Vector3(), new Vector3());\nconst _hitResult = new HitResult();\nInputManager.prototype.getSprite3DUnderPoint = function (x, y) {\n    _hitResult.succeeded = false;\n    x = x * this._stage.clientScaleX;\n    y = y * this._stage.clientScaleY;\n    var pageX = x;\n    var pageY = y;\n    var normalWidth = x / Browser.mainCanvas.width;\n    var normalHeight = y / Browser.mainCanvas.height;\n    x = this._stage.width * normalWidth;\n    y = this._stage.height * normalHeight;\n    _vec2.setValue(x, y);\n    for (let scene of this._stage._scene3Ds) {\n        let sim = scene._physicsManager;\n        let uiManager = scene._UI3DManager;\n        let cameras = scene._cameraPool;\n        for (let i = cameras.length - 1; i >= 0; i--) {\n            let camera = cameras[i];\n            let viewport = camera.viewport;\n            let ratio = Config3D.pixelRatio;\n            if (pageX >= viewport.x && pageY >= viewport.y && pageX <= (viewport.width / ratio + viewport.x) && pageY <= (viewport.height / ratio + viewport.y)) {\n                camera.viewportPointToRay(_vec2, _ray);\n                let sprite = uiManager.rayCast(_ray);\n                if (sprite)\n                    return sprite;\n                if (!sim)\n                    continue;\n                var sucess = sim.rayCast(_ray, _hitResult);\n                if (sucess || (camera.clearFlag === CameraClearFlags.SolidColor || camera.clearFlag === CameraClearFlags.Sky))\n                    break;\n            }\n        }\n        if (_hitResult.succeeded)\n            return _hitResult.collider.owner;\n    }\n    return null;\n};\n","import { Mesh, skinnedMatrixCache } from \"../resource/models/Mesh\";\nimport { SubMesh } from \"../resource/models/SubMesh\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nexport class LoadModelV04 {\n    static parse(readData, version, mesh, subMeshes) {\n        LoadModelV04._mesh = mesh;\n        LoadModelV04._subMeshes = subMeshes;\n        LoadModelV04._version = version;\n        LoadModelV04._readData = readData;\n        LoadModelV04.READ_DATA();\n        LoadModelV04.READ_BLOCK();\n        LoadModelV04.READ_STRINGS();\n        for (var i = 0, n = LoadModelV04._BLOCK.count; i < n; i++) {\n            LoadModelV04._readData.pos = LoadModelV04._BLOCK.blockStarts[i];\n            var index = LoadModelV04._readData.getUint16();\n            var blockName = LoadModelV04._strings[index];\n            var fn = LoadModelV04[\"READ_\" + blockName];\n            if (fn == null)\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\n            else\n                fn.call(null);\n        }\n        LoadModelV04._strings.length = 0;\n        LoadModelV04._readData = null;\n        LoadModelV04._version = null;\n        LoadModelV04._mesh = null;\n        LoadModelV04._subMeshes = null;\n    }\n    static _readString() {\n        return LoadModelV04._strings[LoadModelV04._readData.getUint16()];\n    }\n    static READ_DATA() {\n        LoadModelV04._DATA.offset = LoadModelV04._readData.getUint32();\n        LoadModelV04._DATA.size = LoadModelV04._readData.getUint32();\n    }\n    static READ_BLOCK() {\n        var count = LoadModelV04._BLOCK.count = LoadModelV04._readData.getUint16();\n        var blockStarts = LoadModelV04._BLOCK.blockStarts = [];\n        var blockLengths = LoadModelV04._BLOCK.blockLengths = [];\n        for (var i = 0; i < count; i++) {\n            blockStarts.push(LoadModelV04._readData.getUint32());\n            blockLengths.push(LoadModelV04._readData.getUint32());\n        }\n    }\n    static READ_STRINGS() {\n        var offset = LoadModelV04._readData.getUint32();\n        var count = LoadModelV04._readData.getUint16();\n        var prePos = LoadModelV04._readData.pos;\n        LoadModelV04._readData.pos = offset + LoadModelV04._DATA.offset;\n        for (var i = 0; i < count; i++)\n            LoadModelV04._strings[i] = LoadModelV04._readData.readUTFString();\n        LoadModelV04._readData.pos = prePos;\n    }\n    static READ_MESH() {\n        var name = LoadModelV04._readString();\n        var arrayBuffer = LoadModelV04._readData.__getBuffer();\n        var i;\n        var memorySize = 0;\n        var vertexBufferCount = LoadModelV04._readData.getInt16();\n        var offset = LoadModelV04._DATA.offset;\n        for (i = 0; i < vertexBufferCount; i++) {\n            var vbStart = offset + LoadModelV04._readData.getUint32();\n            var vbLength = LoadModelV04._readData.getUint32();\n            var vbArrayBuffer = arrayBuffer.slice(vbStart, vbStart + vbLength);\n            var vbDatas = new Float32Array(vbArrayBuffer);\n            var bufferAttribute = LoadModelV04._readString();\n            var vertexDeclaration;\n            switch (LoadModelV04._version) {\n                case \"LAYAMODEL:0301\":\n                case \"LAYAMODEL:0400\":\n                    vertexDeclaration = VertexMesh.getVertexDeclaration(bufferAttribute);\n                    break;\n                case \"LAYAMODEL:0401\":\n                    vertexDeclaration = VertexMesh.getVertexDeclaration(bufferAttribute, false);\n                    break;\n                default:\n                    throw new Error(\"LoadModelV03: unknown version.\");\n            }\n            if (!vertexDeclaration)\n                throw new Error(\"LoadModelV03: unknown vertexDeclaration.\");\n            var vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vbDatas.length * 4, BufferUsage.Static, true);\n            vertexBuffer.vertexDeclaration = vertexDeclaration;\n            vertexBuffer.setData(vbDatas.buffer);\n            LoadModelV04._mesh._vertexBuffer = vertexBuffer;\n            LoadModelV04._mesh._vertexCount += vertexBuffer._byteLength / vertexDeclaration.vertexStride;\n            memorySize += vbDatas.length * 4;\n        }\n        var ibStart = offset + LoadModelV04._readData.getUint32();\n        var ibLength = LoadModelV04._readData.getUint32();\n        var ibDatas = new Uint16Array(arrayBuffer.slice(ibStart, ibStart + ibLength));\n        var indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, ibLength / 2, BufferUsage.Static, true);\n        indexBuffer.setData(ibDatas);\n        LoadModelV04._mesh._indexBuffer = indexBuffer;\n        memorySize += indexBuffer.indexCount * 2;\n        LoadModelV04._mesh._setBuffer(LoadModelV04._mesh._vertexBuffer, indexBuffer);\n        LoadModelV04._mesh._setCPUMemory(memorySize);\n        LoadModelV04._mesh._setGPUMemory(memorySize);\n        var boneNames = LoadModelV04._mesh._boneNames = [];\n        var boneCount = LoadModelV04._readData.getUint16();\n        boneNames.length = boneCount;\n        for (i = 0; i < boneCount; i++)\n            boneNames[i] = LoadModelV04._strings[LoadModelV04._readData.getUint16()];\n        LoadModelV04._readData.pos += 8;\n        var bindPoseDataStart = LoadModelV04._readData.getUint32();\n        var bindPoseDataLength = LoadModelV04._readData.getUint32();\n        var bindPoseDatas = new Float32Array(arrayBuffer.slice(offset + bindPoseDataStart, offset + bindPoseDataStart + bindPoseDataLength));\n        var bindPoseFloatCount = bindPoseDatas.length;\n        var bindPoseBuffer = LoadModelV04._mesh._inverseBindPosesBuffer = new ArrayBuffer(bindPoseFloatCount * 4);\n        LoadModelV04._mesh._inverseBindPoses = [];\n        if (bindPoseFloatCount != 0)\n            LoadModelV04._mesh._instanceBufferStateType = Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR;\n        else\n            LoadModelV04._mesh._instanceBufferStateType = Mesh.MESH_INSTANCEBUFFER_TYPE_NORMAL;\n        for (i = 0; i < bindPoseFloatCount; i += 16) {\n            var inverseGlobalBindPose = new Matrix4x4(bindPoseDatas[i + 0], bindPoseDatas[i + 1], bindPoseDatas[i + 2], bindPoseDatas[i + 3], bindPoseDatas[i + 4], bindPoseDatas[i + 5], bindPoseDatas[i + 6], bindPoseDatas[i + 7], bindPoseDatas[i + 8], bindPoseDatas[i + 9], bindPoseDatas[i + 10], bindPoseDatas[i + 11], bindPoseDatas[i + 12], bindPoseDatas[i + 13], bindPoseDatas[i + 14], bindPoseDatas[i + 15], new Float32Array(bindPoseBuffer, i * 4, 16));\n            LoadModelV04._mesh._inverseBindPoses[i / 16] = inverseGlobalBindPose;\n        }\n        return true;\n    }\n    static READ_SUBMESH() {\n        var arrayBuffer = LoadModelV04._readData.__getBuffer();\n        var subMesh = new SubMesh(LoadModelV04._mesh);\n        LoadModelV04._readData.getInt16();\n        LoadModelV04._readData.getUint32();\n        LoadModelV04._readData.getUint32();\n        var ibStart = LoadModelV04._readData.getUint32();\n        var ibCount = LoadModelV04._readData.getUint32();\n        var indexBuffer = LoadModelV04._mesh._indexBuffer;\n        subMesh._indexBuffer = indexBuffer;\n        subMesh._setIndexRange(ibStart, ibCount);\n        var vertexBuffer = LoadModelV04._mesh._vertexBuffer;\n        subMesh._vertexBuffer = vertexBuffer;\n        var offset = LoadModelV04._DATA.offset;\n        var subIndexBufferStart = subMesh._subIndexBufferStart;\n        var subIndexBufferCount = subMesh._subIndexBufferCount;\n        var boneIndicesList = subMesh._boneIndicesList;\n        var drawCount = LoadModelV04._readData.getUint16();\n        subIndexBufferStart.length = drawCount;\n        subIndexBufferCount.length = drawCount;\n        boneIndicesList.length = drawCount;\n        var skinnedCache = LoadModelV04._mesh._skinnedMatrixCaches;\n        var subMeshIndex = LoadModelV04._subMeshes.length;\n        skinnedCache.length = LoadModelV04._mesh._inverseBindPoses.length;\n        for (var i = 0; i < drawCount; i++) {\n            subIndexBufferStart[i] = LoadModelV04._readData.getUint32();\n            subIndexBufferCount[i] = LoadModelV04._readData.getUint32();\n            var boneDicofs = LoadModelV04._readData.getUint32();\n            var boneDicCount = LoadModelV04._readData.getUint32();\n            var boneIndices = boneIndicesList[i] = new Uint16Array(arrayBuffer.slice(offset + boneDicofs, offset + boneDicofs + boneDicCount));\n            var boneIndexCount = boneIndices.length;\n            for (var j = 0; j < boneIndexCount; j++) {\n                var index = boneIndices[j];\n                skinnedCache[index] || (skinnedCache[index] = new skinnedMatrixCache(subMeshIndex, i, j));\n            }\n        }\n        LoadModelV04._subMeshes.push(subMesh);\n        return true;\n    }\n}\nLoadModelV04._BLOCK = { count: 0 };\nLoadModelV04._DATA = { offset: 0, size: 0 };\nLoadModelV04._strings = [];\n","export class MorphTarget {\n    constructor() {\n        this.fullWeight = 1;\n    }\n}\nexport class MorphTargetChannel {\n    constructor() {\n        this.targetCount = 0;\n        this.targets = new Array();\n    }\n    getTargetByIndex(index) {\n        return this.targets[index];\n    }\n    addTarget(target) {\n        this.targetCount++;\n        this.targets.push(target);\n        this.targets.sort((a, b) => {\n            return a.fullWeight - b.fullWeight;\n        });\n    }\n}\n","import { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { RenderParams } from \"../../../RenderEngine/RenderEnum/RenderParams\";\nimport { TextureFormat } from \"../../../RenderEngine/RenderEnum/TextureFormat\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { Texture2DArray } from \"../../../resource/Texture2DArray\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { MorphTarget, MorphTargetChannel } from \"./MorphTarget\";\nexport class MorphTargetData {\n    constructor() {\n        this.targets = new Array();\n        this.channels = new Array();\n        this.bounds = new Bounds();\n        this.params = new Vector4();\n    }\n    addMorphChannel(channel) {\n        channel._index = this.channels.length;\n        this.channels.push(channel);\n        channel.targets.forEach(target => {\n            target._index = this.targets.length;\n            this.targets.push(target);\n        });\n    }\n    getMorphChannel(name) {\n        return this.channels.find(value => value.name == name);\n    }\n    getMorphChannelbyIndex(index) {\n        return this.channels[index];\n    }\n    get targetCount() {\n        return this.targets.length;\n    }\n    get channelCount() {\n        return this.channels.length;\n    }\n    initData() {\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n            let targetNum = this.targets.length;\n            let maxTexSize = LayaGL.renderEngine.getParams(RenderParams.MAX_Texture_Size);\n            let vertexCount = this.vertexCount;\n            let vertexDec = this.vertexDec;\n            let morphStride = vertexDec.vertexStride / 4;\n            let elementCount = vertexDec.vertexElementCount;\n            this.elementCount = elementCount;\n            let texHeight = Math.floor(elementCount * vertexCount / maxTexSize) + 1;\n            let texelStride = 4;\n            this.targetTexture = new Texture2DArray(maxTexSize, texHeight, targetNum, TextureFormat.R32G32B32A32, false, false, false);\n            this.targetTexture.filterMode = FilterMode.Point;\n            this.targetTexture.anisoLevel = 1;\n            this.targetTexture.lock = true;\n            let data = new Float32Array(maxTexSize * texHeight * targetNum * texelStride).fill(0);\n            let attributeOffset = this.attributeOffset = new Vector4(0, 0, 0, 0);\n            attributeOffset.x = vertexDec._vertexElements.indexOf(vertexDec.getVertexElementByUsage(VertexMesh.MESH_POSITION0));\n            attributeOffset.y = vertexDec._vertexElements.indexOf(vertexDec.getVertexElementByUsage(VertexMesh.MESH_NORMAL0));\n            attributeOffset.z = vertexDec._vertexElements.indexOf(vertexDec.getVertexElementByUsage(VertexMesh.MESH_TANGENT0));\n            let targetStride = maxTexSize * texHeight;\n            for (let targetIndex = 0; targetIndex < targetNum; targetIndex++) {\n                let target = this.targets[targetIndex];\n                for (let vertexIndex = 0; vertexIndex < vertexCount; vertexIndex++) {\n                    let dataOffset = (targetIndex * targetStride + vertexIndex * elementCount) * texelStride;\n                    vertexDec._vertexElements.forEach((element, elementIndex) => {\n                        let pixelOffset = dataOffset + elementIndex * 4;\n                        let elementOffset = element.offset / 4;\n                        let targetDataOffset = vertexIndex * morphStride + elementOffset;\n                        switch (element.elementUsage) {\n                            case VertexMesh.MESH_POSITION0:\n                            case VertexMesh.MESH_NORMAL0:\n                                data[pixelOffset] = target.data[targetDataOffset];\n                                data[pixelOffset + 1] = target.data[targetDataOffset + 1];\n                                data[pixelOffset + 2] = target.data[targetDataOffset + 2];\n                                break;\n                            case VertexMesh.MESH_TANGENT0:\n                                data[pixelOffset] = target.data[targetDataOffset];\n                                data[pixelOffset + 1] = target.data[targetDataOffset + 1];\n                                data[pixelOffset + 2] = target.data[targetDataOffset + 2];\n                                data[pixelOffset + 3] = target.data[targetDataOffset + 3];\n                                break;\n                            default:\n                                break;\n                        }\n                    });\n                }\n            }\n            this.targetTexture.setPixelsData(data, false, false);\n            this.params.setValue(this.targetTexture.width, this.targetTexture.height, this.elementCount, this.channelCount);\n        }\n    }\n    destroy() {\n        if (this.targetTexture) {\n            this.targetTexture.lock = false;\n            this.targetTexture.destroy();\n            this.targetTexture = null;\n        }\n        this.targets = null;\n        this.channels = null;\n    }\n    clone() {\n        let res = new MorphTargetData();\n        res.bounds.setMin(this.bounds.getMin());\n        res.bounds.setMax(this.bounds.getMax());\n        res.vertexCount = this.vertexCount;\n        res.vertexDec = this.vertexDec;\n        let channelCount = this.channelCount;\n        for (let index = 0; index < channelCount; index++) {\n            let channel = this.getMorphChannelbyIndex(index);\n            let newChannel = new MorphTargetChannel();\n            newChannel.name = channel.name;\n            let targetCount = channel.targetCount;\n            for (let targetIndex = 0; targetIndex < targetCount; targetIndex++) {\n                let target = channel.getTargetByIndex(targetIndex);\n                let newTarget = new MorphTarget();\n                newTarget.name = target.name;\n                newTarget.fullWeight = target.fullWeight;\n                newTarget.data = new Float32Array(target.data);\n                newChannel.addTarget(newTarget);\n            }\n            res.addMorphChannel(newChannel);\n        }\n        res.initData();\n        return res;\n    }\n}\n","import { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { HalfFloatUtils } from \"../../utils/HalfFloatUtils\";\nimport { Laya3DRender } from \"../RenderObjs/Laya3DRender\";\nimport { Mesh, skinnedMatrixCache } from \"../resource/models/Mesh\";\nimport { MorphTarget, MorphTargetChannel } from \"../resource/models/MorphTarget\";\nimport { MorphTargetData } from \"../resource/models/MorphTargetData\";\nimport { SubMesh } from \"../resource/models/SubMesh\";\nexport class LoadModelV05 {\n    static parse(readData, version, mesh, subMeshes) {\n        LoadModelV05._mesh = mesh;\n        LoadModelV05._subMeshes = subMeshes;\n        LoadModelV05._version = version;\n        LoadModelV05._readData = readData;\n        LoadModelV05.READ_DATA();\n        LoadModelV05.READ_BLOCK();\n        LoadModelV05.READ_STRINGS();\n        for (var i = 0, n = LoadModelV05._BLOCK.count; i < n; i++) {\n            LoadModelV05._readData.pos = LoadModelV05._BLOCK.blockStarts[i];\n            var index = LoadModelV05._readData.getUint16();\n            var blockName = LoadModelV05._strings[index];\n            var fn = LoadModelV05[\"READ_\" + blockName];\n            if (fn == null)\n                console.warn(\"model file err,no this function:\" + index + \" \" + blockName);\n            else\n                fn.call(null);\n        }\n        LoadModelV05._strings.length = 0;\n        LoadModelV05._readData = null;\n        LoadModelV05._version = null;\n        LoadModelV05._mesh = null;\n        LoadModelV05._subMeshes = null;\n    }\n    static _readString() {\n        return LoadModelV05._strings[LoadModelV05._readData.getUint16()];\n    }\n    static READ_DATA() {\n        LoadModelV05._DATA.offset = LoadModelV05._readData.getUint32();\n        LoadModelV05._DATA.size = LoadModelV05._readData.getUint32();\n    }\n    static READ_BLOCK() {\n        var count = LoadModelV05._BLOCK.count = LoadModelV05._readData.getUint16();\n        var blockStarts = LoadModelV05._BLOCK.blockStarts = [];\n        var blockLengths = LoadModelV05._BLOCK.blockLengths = [];\n        for (var i = 0; i < count; i++) {\n            blockStarts.push(LoadModelV05._readData.getUint32());\n            blockLengths.push(LoadModelV05._readData.getUint32());\n        }\n    }\n    static READ_STRINGS() {\n        var offset = LoadModelV05._readData.getUint32();\n        var count = LoadModelV05._readData.getUint16();\n        var prePos = LoadModelV05._readData.pos;\n        LoadModelV05._readData.pos = offset + LoadModelV05._DATA.offset;\n        for (var i = 0; i < count; i++)\n            LoadModelV05._strings[i] = LoadModelV05._readData.readUTFString();\n        LoadModelV05._readData.pos = prePos;\n    }\n    static READ_MESH() {\n        var i;\n        var memorySize = 0;\n        var name = LoadModelV05._readString();\n        var reader = LoadModelV05._readData;\n        var arrayBuffer = reader.__getBuffer();\n        var vertexBufferCount = reader.getInt16();\n        var offset = LoadModelV05._DATA.offset;\n        for (i = 0; i < vertexBufferCount; i++) {\n            var vbStart = offset + reader.getUint32();\n            var vertexCount = reader.getUint32();\n            var vertexFlag = LoadModelV05._readString();\n            var vertexDeclaration = VertexMesh.getVertexDeclaration(vertexFlag, false);\n            var vertexStride = vertexDeclaration.vertexStride;\n            var vertexData;\n            var floatData;\n            var uint8Data;\n            var subVertexFlags = vertexFlag.split(\",\");\n            var subVertexCount = subVertexFlags.length;\n            var mesh = LoadModelV05._mesh;\n            switch (LoadModelV05._version) {\n                case \"LAYAMODEL:05\":\n                case \"LAYAMODEL:0501\":\n                case \"LAYAMODEL:0502\":\n                    vertexData = arrayBuffer.slice(vbStart, vbStart + vertexCount * vertexStride);\n                    floatData = new Float32Array(vertexData);\n                    uint8Data = new Uint8Array(vertexData);\n                    break;\n                case \"LAYAMODEL:COMPRESSION_05\":\n                case \"LAYAMODEL:COMPRESSION_0501\":\n                    vertexData = new ArrayBuffer(vertexStride * vertexCount);\n                    floatData = new Float32Array(vertexData);\n                    uint8Data = new Uint8Array(vertexData);\n                    var lastPosition = reader.pos;\n                    reader.pos = vbStart;\n                    for (var j = 0; j < vertexCount; j++) {\n                        var subOffset;\n                        var verOffset = j * vertexStride;\n                        for (var k = 0; k < subVertexCount; k++) {\n                            switch (subVertexFlags[k]) {\n                                case \"POSITION\":\n                                    subOffset = verOffset / 4;\n                                    floatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                    floatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                    floatData[subOffset + 2] = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                    verOffset += 12;\n                                    break;\n                                case \"NORMAL\":\n                                    subOffset = verOffset / 4;\n                                    floatData[subOffset] = reader.getUint8() / 127.5 - 1;\n                                    floatData[subOffset + 1] = reader.getUint8() / 127.5 - 1;\n                                    floatData[subOffset + 2] = reader.getUint8() / 127.5 - 1;\n                                    verOffset += 12;\n                                    break;\n                                case \"COLOR\":\n                                    subOffset = verOffset / 4;\n                                    floatData[subOffset] = reader.getUint8() / 255;\n                                    floatData[subOffset + 1] = reader.getUint8() / 255;\n                                    floatData[subOffset + 2] = reader.getUint8() / 255;\n                                    floatData[subOffset + 3] = reader.getUint8() / 255;\n                                    verOffset += 16;\n                                    break;\n                                case \"UV\":\n                                    subOffset = verOffset / 4;\n                                    floatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                    floatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                    verOffset += 8;\n                                    break;\n                                case \"UV1\":\n                                    subOffset = verOffset / 4;\n                                    floatData[subOffset] = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                    floatData[subOffset + 1] = HalfFloatUtils.convertToNumber(reader.getUint16());\n                                    verOffset += 8;\n                                    break;\n                                case \"BLENDWEIGHT\":\n                                    subOffset = verOffset / 4;\n                                    floatData[subOffset] = reader.getUint8() / 255;\n                                    floatData[subOffset + 1] = reader.getUint8() / 255;\n                                    floatData[subOffset + 2] = reader.getUint8() / 255;\n                                    floatData[subOffset + 3] = reader.getUint8() / 255;\n                                    verOffset += 16;\n                                    break;\n                                case \"BLENDINDICES\":\n                                    uint8Data[verOffset] = reader.getUint8();\n                                    uint8Data[verOffset + 1] = reader.getUint8();\n                                    uint8Data[verOffset + 2] = reader.getUint8();\n                                    uint8Data[verOffset + 3] = reader.getUint8();\n                                    verOffset += 4;\n                                    break;\n                                case \"TANGENT\":\n                                    subOffset = verOffset / 4;\n                                    floatData[subOffset] = reader.getUint8() / 127.5 - 1;\n                                    floatData[subOffset + 1] = reader.getUint8() / 127.5 - 1;\n                                    floatData[subOffset + 2] = reader.getUint8() / 127.5 - 1;\n                                    floatData[subOffset + 3] = reader.getUint8() / 127.5 - 1;\n                                    verOffset += 16;\n                                    break;\n                            }\n                        }\n                    }\n                    reader.pos = lastPosition;\n                    break;\n            }\n            var vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vertexData.byteLength, BufferUsage.Static, true);\n            vertexBuffer.vertexDeclaration = vertexDeclaration;\n            vertexBuffer.setData(vertexData);\n            var vertexCount = vertexBuffer._byteLength / vertexDeclaration.vertexStride;\n            if (vertexCount > 65535)\n                mesh._indexFormat = IndexFormat.UInt32;\n            else\n                mesh._indexFormat = IndexFormat.UInt16;\n            mesh._vertexBuffer = vertexBuffer;\n            mesh._vertexCount += vertexCount;\n            memorySize += floatData.length * 4;\n        }\n        var ibStart = offset + reader.getUint32();\n        var ibLength = reader.getUint32();\n        var ibDatas;\n        if (mesh.indexFormat == IndexFormat.UInt32)\n            ibDatas = new Uint32Array(arrayBuffer.slice(ibStart, ibStart + ibLength));\n        else\n            ibDatas = new Uint16Array(arrayBuffer.slice(ibStart, ibStart + ibLength));\n        var indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(mesh.indexFormat, ibDatas.length, BufferUsage.Static, true);\n        indexBuffer.setData(ibDatas);\n        mesh._indexBuffer = indexBuffer;\n        mesh._setBuffer(mesh._vertexBuffer, indexBuffer);\n        memorySize += ibDatas.byteLength;\n        mesh._setCPUMemory(memorySize);\n        mesh._setGPUMemory(memorySize);\n        if (LoadModelV05._version == \"LAYAMODEL:0501\" || LoadModelV05._version == \"LAYAMODEL:COMPRESSION_0501\" || LoadModelV05._version == \"LAYAMODEL:0502\") {\n            var bounds = mesh.bounds;\n            var min = bounds.getMin();\n            var max = bounds.getMax();\n            min.setValue(reader.getFloat32(), reader.getFloat32(), reader.getFloat32());\n            max.setValue(reader.getFloat32(), reader.getFloat32(), reader.getFloat32());\n            bounds.setMin(min);\n            bounds.setMax(max);\n            mesh.bounds = bounds;\n        }\n        var boneNames = mesh._boneNames = [];\n        var boneCount = reader.getUint16();\n        boneNames.length = boneCount;\n        for (i = 0; i < boneCount; i++)\n            boneNames[i] = LoadModelV05._strings[reader.getUint16()];\n        var bindPoseDataStart = reader.getUint32();\n        var bindPoseDataLength = reader.getUint32();\n        var bindPoseDatas = new Float32Array(arrayBuffer.slice(offset + bindPoseDataStart, offset + bindPoseDataStart + bindPoseDataLength));\n        var bindPoseFloatCount = bindPoseDatas.length;\n        var bindPoseBuffer = mesh._inverseBindPosesBuffer = new ArrayBuffer(bindPoseFloatCount * 4);\n        mesh._inverseBindPoses = [];\n        if (bindPoseFloatCount != 0)\n            mesh._instanceBufferStateType = Mesh.MESH_INSTANCEBUFFER_TYPE_SIMPLEANIMATOR;\n        else\n            mesh._instanceBufferStateType = Mesh.MESH_INSTANCEBUFFER_TYPE_NORMAL;\n        for (i = 0; i < bindPoseFloatCount; i += 16) {\n            var inverseGlobalBindPose = new Matrix4x4(bindPoseDatas[i + 0], bindPoseDatas[i + 1], bindPoseDatas[i + 2], bindPoseDatas[i + 3], bindPoseDatas[i + 4], bindPoseDatas[i + 5], bindPoseDatas[i + 6], bindPoseDatas[i + 7], bindPoseDatas[i + 8], bindPoseDatas[i + 9], bindPoseDatas[i + 10], bindPoseDatas[i + 11], bindPoseDatas[i + 12], bindPoseDatas[i + 13], bindPoseDatas[i + 14], bindPoseDatas[i + 15], new Float32Array(bindPoseBuffer, i * 4, 16));\n            mesh._inverseBindPoses[i / 16] = inverseGlobalBindPose;\n        }\n        return true;\n    }\n    static READ_SUBMESH() {\n        var reader = LoadModelV05._readData;\n        var arrayBuffer = reader.__getBuffer();\n        var subMesh = new SubMesh(LoadModelV05._mesh);\n        reader.getInt16();\n        var ibStart = reader.getUint32();\n        var ibCount = reader.getUint32();\n        var indexBuffer = LoadModelV05._mesh._indexBuffer;\n        subMesh._indexBuffer = indexBuffer;\n        subMesh._setIndexRange(ibStart, ibCount);\n        var vertexBuffer = LoadModelV05._mesh._vertexBuffer;\n        subMesh._vertexBuffer = vertexBuffer;\n        var offset = LoadModelV05._DATA.offset;\n        var subIndexBufferStart = subMesh._subIndexBufferStart;\n        var subIndexBufferCount = subMesh._subIndexBufferCount;\n        var boneIndicesList = subMesh._boneIndicesList;\n        var drawCount = reader.getUint16();\n        subIndexBufferStart.length = drawCount;\n        subIndexBufferCount.length = drawCount;\n        boneIndicesList.length = drawCount;\n        var skinnedCache = LoadModelV05._mesh._skinnedMatrixCaches;\n        var subMeshIndex = LoadModelV05._subMeshes.length;\n        skinnedCache.length = LoadModelV05._mesh._inverseBindPoses.length;\n        for (var i = 0; i < drawCount; i++) {\n            subIndexBufferStart[i] = reader.getUint32();\n            subIndexBufferCount[i] = reader.getUint32();\n            var boneDicofs = reader.getUint32();\n            var boneDicCount = reader.getUint32();\n            var boneIndices = boneIndicesList[i] = new Uint16Array(arrayBuffer.slice(offset + boneDicofs, offset + boneDicofs + boneDicCount));\n            for (var j = 0, m = boneIndices.length; j < m; j++) {\n                var index = boneIndices[j];\n                skinnedCache[index] || (skinnedCache[index] = new skinnedMatrixCache(subMeshIndex, i, j));\n            }\n        }\n        LoadModelV05._subMeshes.push(subMesh);\n        return true;\n    }\n    static READ_MORPH() {\n        let reader = LoadModelV05._readData;\n        let arrayBuffer = reader.__getBuffer();\n        let offset = LoadModelV05._DATA.offset;\n        let mesh = LoadModelV05._mesh;\n        let morphData = mesh.morphTargetData = new MorphTargetData();\n        let morphVertexDecStr = LoadModelV05._strings[reader.getUint16()];\n        morphData.vertexDec = VertexMesh.getVertexDeclaration(morphVertexDecStr);\n        let bounds = morphData.bounds;\n        let min = bounds.getMin();\n        let max = bounds.getMax();\n        min.set(reader.getFloat32(), reader.getFloat32(), reader.getFloat32());\n        max.set(reader.getFloat32(), reader.getFloat32(), reader.getFloat32());\n        bounds.setMin(min);\n        bounds.setMax(max);\n        let channelCount = reader.readUint16();\n        for (let channelIndex = 0; channelIndex < channelCount; channelIndex++) {\n            let channel = new MorphTargetChannel();\n            channel.name = LoadModelV05._strings[reader.getUint16()];\n            let targetCount = reader.readUint16();\n            for (let targetIndex = 0; targetIndex < targetCount; targetIndex++) {\n                let target = new MorphTarget();\n                let targetName = LoadModelV05._strings[reader.getUint16()];\n                target.name = targetName;\n                target.fullWeight = reader.readFloat32();\n                let bufferStart = reader.readUint32();\n                let bufferLength = reader.readUint32();\n                target.data = new Float32Array(arrayBuffer.slice(offset + bufferStart, offset + bufferStart + bufferLength));\n                channel.addTarget(target);\n            }\n            morphData.addMorphChannel(channel);\n        }\n        morphData.vertexCount = mesh.vertexCount;\n        morphData.initData();\n        return true;\n    }\n    static READ_UVSIZE() {\n        LoadModelV05._mesh._width = LoadModelV05._readData.readUint16();\n        LoadModelV05._mesh._height = LoadModelV05._readData.readUint16();\n    }\n}\nLoadModelV05._BLOCK = { count: 0 };\nLoadModelV05._DATA = { offset: 0, size: 0 };\nLoadModelV05._strings = [];\n","import { MeshLoader } from \"../../loaders/MeshLoader\";\nimport { Byte } from \"../../utils/Byte\";\nimport { Mesh } from \"../resource/models/Mesh\";\nimport { LoadModelV04 } from \"./LoadModelV04\";\nimport { LoadModelV05 } from \"./LoadModelV05\";\nexport class MeshReader {\n    static parse(readData, version) {\n        var mesh = new Mesh();\n        let subMeshes = mesh._subMeshes;\n        switch (version) {\n            case \"LAYAMODEL:0301\":\n            case \"LAYAMODEL:0400\":\n            case \"LAYAMODEL:0401\":\n                LoadModelV04.parse(readData, version, mesh, subMeshes);\n                break;\n            case \"LAYAMODEL:05\":\n            case \"LAYAMODEL:COMPRESSION_05\":\n            case \"LAYAMODEL:0501\":\n            case \"LAYAMODEL:COMPRESSION_0501\":\n            case \"LAYAMODEL:0502\":\n                LoadModelV05.parse(readData, version, mesh, subMeshes);\n                break;\n            default:\n                throw new Error(\"unknown mesh version: \" + version);\n        }\n        mesh._setSubMeshes(subMeshes);\n        if (version != \"LAYAMODEL:0501\" && version != \"LAYAMODEL:COMPRESSION_0501\" && version != \"LAYAMODEL:0502\")\n            mesh.calculateBounds();\n        return mesh;\n    }\n    static _parse(data) {\n        var mesh = new Mesh();\n        MeshReader.read(data, mesh, mesh._subMeshes);\n        return mesh;\n    }\n    static read(data, mesh, subMeshes) {\n        var readData = new Byte(data);\n        readData.pos = 0;\n        var version = readData.readUTFString();\n        switch (version) {\n            case \"LAYAMODEL:0301\":\n            case \"LAYAMODEL:0400\":\n            case \"LAYAMODEL:0401\":\n                LoadModelV04.parse(readData, version, mesh, subMeshes);\n                break;\n            case \"LAYAMODEL:05\":\n            case \"LAYAMODEL:COMPRESSION_05\":\n            case \"LAYAMODEL:0501\":\n            case \"LAYAMODEL:COMPRESSION_0501\":\n            case \"LAYAMODEL:0502\":\n                LoadModelV05.parse(readData, version, mesh, subMeshes);\n                break;\n            default:\n                throw new Error(\"unknown mesh version: \" + version);\n        }\n        mesh._setSubMeshes(subMeshes);\n        if (version != \"LAYAMODEL:0501\" && version != \"LAYAMODEL:COMPRESSION_0501\" && version != \"LAYAMODEL:0502\")\n            mesh.calculateBounds();\n    }\n}\nMeshLoader.v3d = MeshReader;\n","import { ClassUtils } from \"../utils/ClassUtils\";\nimport { AnimationClip } from \"./animation/AnimationClip\";\nimport { Sprite3D } from \"./core/Sprite3D\";\nimport { Camera } from \"./core/Camera\";\nimport { LightSprite } from \"./core/light/LightSprite\";\nimport { BlinnPhongMaterial } from \"./core/material/BlinnPhongMaterial\";\nimport { EffectMaterial } from \"./core/material/EffectMaterial\";\nimport { ExtendTerrainMaterial } from \"./core/material/ExtendTerrainMaterial\";\nimport { Material } from \"../resource/Material\";\nimport { PBRStandardMaterial } from \"./core/material/PBRStandardMaterial\";\nimport { SkyBoxMaterial } from \"./core/material/SkyBoxMaterial\";\nimport { SkyPanoramicMaterial } from \"./core/material/SkyPanoramicMaterial\";\nimport { SkyProceduralMaterial } from \"./core/material/SkyProceduralMaterial\";\nimport { UnlitMaterial } from \"./core/material/UnlitMaterial\";\nimport { MeshFilter } from \"./core/MeshFilter\";\nimport { MeshRenderer } from \"./core/MeshRenderer\";\nimport { MeshSprite3D } from \"./core/MeshSprite3D\";\nimport { BaseRender } from \"./core/render/BaseRender\";\nimport { RenderableSprite3D } from \"./core/RenderableSprite3D\";\nimport { Lightmap } from \"./core/scene/Lightmap\";\nimport { Scene3D } from \"./core/scene/Scene3D\";\nimport { SimpleSkinnedMeshRenderer } from \"./core/SimpleSkinnedMeshRenderer\";\nimport { SimpleSkinnedMeshSprite3D } from \"./core/SimpleSkinnedMeshSprite3D\";\nimport { SkinnedMeshRenderer } from \"./core/SkinnedMeshRenderer\";\nimport { SkinnedMeshSprite3D } from \"./core/SkinnedMeshSprite3D\";\nimport { Transform3D } from \"./core/Transform3D\";\nimport { SphericalHarmonicsL2 } from \"./graphics/SphericalHarmonicsL2\";\nimport { BoundBox } from \"./math/BoundBox\";\nimport { Mesh } from \"./resource/models/Mesh\";\nimport { SkyRenderer } from \"./resource/models/SkyRenderer\";\nimport { TextureCube } from \"../resource/TextureCube\";\nimport { DirectionLightCom } from \"./core/light/DirectionLightCom\";\nimport { PointLightCom } from \"./core/light/PointLightCom\";\nimport { SpotLightCom } from \"./core/light/SpotLightCom\";\nimport { Bounds } from \"./math/Bounds\";\nimport { ReflectionProbe } from \"./component/Volume/reflectionProbe/ReflectionProbe\";\nimport { VolumetricGI } from \"./component/Volume/VolumetricGI/VolumetricGI\";\nimport { AreaLightCom } from \"./core/light/AreaLightCom\";\nimport { LODGroup, LODInfo } from \"./component/LODGroup\";\nimport { PixelLineData } from \"./core/pixelLine/PixelLineData\";\nimport { PixelLineRenderer } from \"./core/pixelLine/PixelLineRenderer\";\nimport { Animator } from \"./component/Animator/Animator\";\nimport { AnimatorControllerLayer } from \"./component/Animator/AnimatorControllerLayer\";\nimport { AnimatorState } from \"./component/Animator/AnimatorState\";\nimport { AvatarMask } from \"./component/Animator/AvatarMask\";\nimport { PostProcess } from \"./core/render/postProcessBase/PostProcess\";\nimport { PostProcessEffect } from \"./core/render/postProcessBase/PostProcessEffect\";\nimport { AnimatorController } from \"./component/Animator/AnimatorController\";\nimport { StaticBatchVolume } from \"./component/Volume/BatchVolume/StaticBatchVolume\";\nimport { StaticInstanceBatchRender } from \"./component/Volume/BatchVolume/StaticInstanceBatchRender\";\nimport { RenderTexture } from \"../resource/RenderTexture\";\nimport { UI3D } from \"./core/UI3D/UI3D\";\nimport \"./loaders/AnimationClipLoader\";\nimport \"./loaders/CubemapLoader\";\nimport \"./loaders/Texture2DArrayLoader\";\nimport \"./loaders/AvatarMaskLoader\";\nimport \"./loaders/AnimationControllerLoader\";\nimport \"./core/scene/Input3D\";\nimport \"./loaders/MeshReader\";\nimport { Viewport } from \"../maths/Viewport\";\nlet c = ClassUtils.regClass;\nc(\"Sprite3D\", Sprite3D);\nc(\"Scene3D\", Scene3D);\nc(\"Camera\", Camera);\nc(\"LightSprite\", LightSprite);\nc(\"AreaLightCom\", AreaLightCom);\nc(\"DirectionLightCom\", DirectionLightCom);\nc(\"PointLightCom\", PointLightCom);\nc(\"SpotLightCom\", SpotLightCom);\nc(\"RenderableSprite3D\", RenderableSprite3D);\nc(\"MeshSprite3D\", MeshSprite3D);\nc(\"MeshFilter\", MeshFilter);\nc(\"BaseRender\", BaseRender);\nc(\"MeshRenderer\", MeshRenderer);\nc(\"SimpleSkinnedMeshSprite3D\", SimpleSkinnedMeshSprite3D);\nc(\"SkinnedMeshSprite3D\", SkinnedMeshSprite3D);\nc(\"SkinnedMeshRenderer\", SkinnedMeshRenderer);\nc(\"SimpleSkinnedMeshRenderer\", SimpleSkinnedMeshRenderer);\nc(\"SkyRenderer\", SkyRenderer);\nc(\"PixelLineRenderer\", PixelLineRenderer);\nc(\"PixelLineData\", PixelLineData);\nc(\"Transform3D\", Transform3D);\nc(\"Lightmap\", Lightmap);\nc(\"ReflectionProbe\", ReflectionProbe);\nc(\"VolumetricGI\", VolumetricGI);\nc(\"StaticBatchVolume\", StaticBatchVolume);\nc(\"StaticInstanceBatchRender\", StaticInstanceBatchRender);\nc(\"SphericalHarmonicsL2\", SphericalHarmonicsL2);\nc(\"Viewport\", Viewport);\nc(\"Bounds\", Bounds);\nc(\"BoundBox\", BoundBox);\nc(\"TextureCube\", TextureCube);\nc(\"Mesh\", Mesh);\nc(\"RenderTexture\", RenderTexture);\nc(\"Animator\", Animator);\nc(\"AnimatorController\", AnimatorController);\nc(\"AnimatorControllerLayer\", AnimatorControllerLayer);\nc(\"AnimatorState\", AnimatorState);\nc(\"AnimationClip\", AnimationClip);\nc(\"AvatarMask\", AvatarMask);\nc(\"UI3D\", UI3D);\nc(\"Material\", Material);\nc(\"BlinnPhongMaterial\", BlinnPhongMaterial);\nc(\"EffectMaterial\", EffectMaterial);\nc(\"ExtendTerrainMaterial\", ExtendTerrainMaterial);\nc(\"PBRStandardMaterial\", PBRStandardMaterial);\nc(\"SkyBoxMaterial\", SkyBoxMaterial);\nc(\"SkyPanoramicMaterial\", SkyPanoramicMaterial);\nc(\"SkyProceduralMaterial\", SkyProceduralMaterial);\nc(\"UnlitMaterial\", UnlitMaterial);\nc(\"LODInfo\", LODInfo);\nc(\"LODGroup\", LODGroup);\nc(\"DirectionLightCom\", DirectionLightCom);\nc(\"MeshRenderer\", MeshRenderer);\nc(\"MeshFilter\", MeshFilter);\nc(\"MeshRenderer\", MeshRenderer);\nc(\"SkinnedMeshRenderer\", SkinnedMeshRenderer);\nc(\"SimpleSkinnedMeshRenderer\", SimpleSkinnedMeshRenderer);\nc(\"SkyRenderer\", SkyRenderer);\nc(\"PostProcess\", PostProcess);\nc(\"PostProcessEffect\", PostProcessEffect);\n","import { Camera } from \"../../core/Camera\";\nimport { RenderContext3D } from \"../../core/render/RenderContext3D\";\nimport { RenderStateContext } from \"../../../RenderEngine/RenderStateContext\";\nexport class WebXRCamera extends Camera {\n    constructor() {\n        super(...arguments);\n        this.isWebXR = true;\n    }\n    get renderTarget() {\n        return this._internalRenderTexture;\n    }\n    set renderTarget(value) {\n        this._internalRenderTexture = value;\n    }\n    set clientWidth(value) {\n        this._clientWidth = value;\n    }\n    set clientHeight(value) {\n        this._clientHeight = value;\n    }\n    get clientWidth() {\n        return this._clientWidth;\n    }\n    get clientHeight() {\n        return this._clientHeight;\n    }\n    _restoreView(gl) {\n        var viewport = this.viewport;\n        var vpX, vpY;\n        var vpW = viewport.width;\n        var vpH = viewport.height;\n        if (this._needInternalRenderTexture()) {\n            vpX = 0;\n            vpY = 0;\n        }\n        else {\n            vpX = viewport.x;\n            vpY = this._getCanvasHeight() - viewport.y - vpH;\n        }\n        gl.viewport(vpX, vpY, vpW, vpH);\n    }\n    render() {\n        if (!this.activeInHierarchy)\n            return;\n        var viewport = this.viewport;\n        var needInternalRT = true;\n        var context = RenderContext3D._instance;\n        var scene = context.scene = this._scene;\n        context.pipelineMode = context.configPipeLineMode;\n    }\n    _renderMainPass(context, viewport, scene, shader, replacementTag, needInternalRT) {\n    }\n    _calculateProjectionMatrix() {\n    }\n    clear(gl) {\n        gl.viewport(0, 0, this._clientWidth, this._clientHeight);\n        gl.scissor(0, 0, this._clientWidth, this._clientHeight);\n        gl.clearColor(this.clearColor.r, this.clearColor.g, this.clearColor.b, this.clearColor.a);\n        RenderStateContext.setDepthMask(true);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n    destroy() {\n        super.destroy(true);\n    }\n}\n","import { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { RenderTexture } from \"../../../resource/RenderTexture\";\nexport class WebXRRenderTexture extends RenderTexture {\n    constructor() {\n        super(1, 1, 1, RenderTargetFormat.STENCIL_8, false, 1);\n        this.frameLoop = -1;\n    }\n    set frameBuffer(value) {\n        this._frameBuffer = value;\n    }\n    _create(width, height) {\n    }\n}\n","import { EventDispatcher } from \"../../../events/EventDispatcher\";\nimport { Render } from \"../../../renders/Render\";\nexport class WebXRSessionManager extends EventDispatcher {\n    constructor() {\n        super();\n        this.currentTimestamp = -1;\n        this.defaultHeightCompensation = 1.7;\n        this._sessionEnded = false;\n    }\n    get referenceSpace() {\n        return this._referenceSpace;\n    }\n    set referenceSpace(newReferenceSpace) {\n        this._referenceSpace = newReferenceSpace;\n    }\n    get sessionMode() {\n        return this._sessionMode;\n    }\n    exitXR() {\n        this.endXRRenderLoop();\n        this.event(WebXRSessionManager.EVENT_MANAGER_END);\n    }\n    initializeXRGL(xrSession, gl) {\n        return gl.makeXRCompatible().then(() => {\n            return true;\n        });\n    }\n    ;\n    initializeAsync() {\n        this._xrNavigator = navigator;\n        if (!this._xrNavigator.xr) {\n            return Promise.reject(\"WebXR not available\");\n        }\n        return Promise.resolve();\n    }\n    isSessionSupportedAsync(sessionMode) {\n        if (!navigator.xr) {\n            return Promise.resolve(false);\n        }\n        else {\n            this._xrNavigator = navigator;\n        }\n        const functionToUse = navigator.xr.isSessionSupported || navigator.xr.supportsSession;\n        if (!functionToUse)\n            return Promise.resolve(false);\n        else {\n            return navigator.xr.isSessionSupported(sessionMode);\n        }\n    }\n    initializeSessionAsync(xrSessionMode = 'immersive-vr', xrSessionInit = {}) {\n        return this._xrNavigator.xr.requestSession('immersive-vr').then((session) => {\n            this.session = session;\n            this._sessionMode = xrSessionMode;\n            this._sessionEnded = false;\n            this.session.addEventListener(\"end\", () => {\n                this._sessionEnded = true;\n                this.exitXR();\n            }, { once: true });\n            return this.session;\n        });\n    }\n    resetReferenceSpace() {\n        this.referenceSpace = this.baseReferenceSpace;\n    }\n    runXRRenderLoop() {\n        this.session.requestAnimationFrame.bind(this.session);\n        let fn = (timestamp, xrFrame) => {\n            this._updateByXrFrame(xrFrame, timestamp);\n            this.event(WebXRSessionManager.EVENT_FRAME_LOOP, [xrFrame]);\n            Render.loop();\n            this.session.requestAnimationFrame(fn);\n        };\n        this.session.requestAnimationFrame(fn);\n    }\n    endXRRenderLoop() {\n    }\n    _updateByXrFrame(xrFrame, timestamp) {\n        this.currentFrame = xrFrame;\n        this.currentTimestamp = timestamp;\n    }\n    setReferenceSpaceTypeAsync(referenceSpaceType = \"local-floor\") {\n        return this.session\n            .requestReferenceSpace(referenceSpaceType)\n            .then((referenceSpace) => {\n            return referenceSpace;\n        }, (rejectionReason) => {\n            return this.session.requestReferenceSpace(\"viewer\").then((referenceSpace) => {\n                const heightCompensation = new XRRigidTransform({ x: 0, y: -this.defaultHeightCompensation, z: 0 });\n                return (referenceSpace).getOffsetReferenceSpace(heightCompensation);\n            }, (rejectionReason) => {\n                throw 'XR initialization failed: required \"viewer\" reference space type not supported.';\n            });\n        }).then((referenceSpace) => {\n            this.referenceSpace = this.baseReferenceSpace = referenceSpace;\n            return this.referenceSpace;\n        });\n    }\n    updateRenderStateAsync(state) {\n        if (state.baseLayer) {\n            this._baseLayer = state.baseLayer;\n        }\n        return this.session.updateRenderState(state);\n    }\n    get currentFrameRate() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.frameRate;\n    }\n    get supportedFrameRates() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.supportedFrameRates;\n    }\n    updateTargetFrameRate(rate) {\n        return this.session.updateTargetFrameRate(rate);\n    }\n    destroy() {\n        if (!this._sessionEnded) {\n            this.exitXR();\n        }\n    }\n}\nWebXRSessionManager.EVENT_MANAGER_END = \"xrManagerDestory\";\nWebXRSessionManager.EVENT_FRAME_LOOP = \"xrFrameLoop\";\n","import { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { WebXRCamera } from \"./WebXRCamera\";\nimport { WebXRRenderTexture } from \"./WebXRRenderTexture\";\nimport { WebXRSessionManager } from \"./WebXRSessionManager\";\nexport class WebXRCameraManager {\n    get position() {\n        return this._position;\n    }\n    set position(newPosition) {\n        newPosition.cloneTo(this._position);\n    }\n    get rotationQuaternion() {\n        return this._referenceQuaternion;\n    }\n    set rotationQuaternion(value) {\n        value.cloneTo(this._referenceQuaternion);\n    }\n    get rigCameras() {\n        return this._rigCameras;\n    }\n    constructor(camera, manager = null) {\n        this._referenceQuaternion = new Quaternion();\n        this._referencedPosition = new Vector3();\n        this._firstFrame = true;\n        this._XRRenderTexture = new WebXRRenderTexture();\n        this._rigCameras = new Array();\n        this._position = new Vector3();\n        this.owner = camera;\n        this.owner.enableRender = false;\n        if (!this.owner.aspectRatio) {\n            console.warn(\"owner is not Camera\");\n        }\n        this._webXRSessionManager = manager;\n        this._webXRSessionManager.on(WebXRSessionManager.EVENT_FRAME_LOOP, this, this._updateFromXRSession);\n        this._webXRSessionManager.on(WebXRSessionManager.EVENT_FRAME_LOOP, this, this._updateReferenceSpace);\n        this._webXRSessionManager.on(WebXRSessionManager.EVENT_MANAGER_END, this, this.destroy);\n    }\n    _updateFromXRSession() {\n        let pose = this._webXRSessionManager.currentFrame && this._webXRSessionManager.currentFrame.getViewerPose(this._webXRSessionManager.referenceSpace);\n        const pos = pose.transform.position;\n        const orientation = pose.transform.orientation;\n        this._referenceQuaternion.setValue(orientation.x, orientation.y, orientation.z, orientation.w);\n        this._referencedPosition.setValue(pos.x, pos.y, pos.z);\n        if (this._firstFrame) {\n            this._firstFrame = false;\n            this.position.y += this._referencedPosition.y;\n            this._referenceQuaternion.setValue(0, 0, 0, 1);\n        }\n        else {\n            this.rotationQuaternion = this._referenceQuaternion;\n            this.position = this._referencedPosition;\n        }\n        if (this.rigCameras.length !== pose.views.length) {\n            this._updateNumberOfRigCameras(pose.views.length);\n        }\n        pose.views.forEach((view, i) => {\n            const currentRig = this.rigCameras[i];\n            if (view.eye === \"right\")\n                currentRig.name = \"right\";\n            else if (view.eye === \"left\")\n                currentRig.name = \"left\";\n            const pos = view.transform.position;\n            const orientation = view.transform.orientation;\n            currentRig.transform.position.setValue(pos.x, pos.y, pos.z);\n            currentRig.transform.rotation.setValue(orientation.x, orientation.y, orientation.z, orientation.w);\n            currentRig.transform.position = currentRig.transform.position;\n            currentRig.transform.rotation = currentRig.transform.rotation;\n            if (this._webXRSessionManager.session.renderState.baseLayer) {\n                var viewport = this._webXRSessionManager.session.renderState.baseLayer.getViewport(view);\n                var width = this._webXRSessionManager.session.renderState.baseLayer.framebufferWidth;\n                var height = this._webXRSessionManager.session.renderState.baseLayer.framebufferHeight;\n                this._XRRenderTexture.frameBuffer = this._webXRSessionManager.session.renderState.baseLayer.framebuffer;\n                currentRig.renderTarget = this._XRRenderTexture;\n                currentRig.clientWidth = width;\n                currentRig.clientHeight = height;\n                var cameraViewPort = currentRig.viewport;\n                cameraViewPort.x = viewport.x;\n                cameraViewPort.y = viewport.y;\n                cameraViewPort.width = viewport.width;\n                cameraViewPort.height = viewport.height;\n                currentRig.viewport = cameraViewPort;\n                currentRig.projectionMatrix.cloneByArray(view.projectionMatrix);\n            }\n        });\n    }\n    _updateNumberOfRigCameras(viewCount = 1) {\n        while (this.rigCameras.length < viewCount) {\n            var xrcamera = new WebXRCamera(this.owner.aspectRatio, this.owner.nearPlane, this.owner.farPlane);\n            xrcamera.clearFlag = this.owner.clearFlag;\n            xrcamera.clearColor = this.owner.clearColor;\n            this.owner.addChild(xrcamera);\n            this.rigCameras.push(xrcamera);\n        }\n        while (this.rigCameras.length > viewCount) {\n            let xrcamera = this.rigCameras.pop();\n            this.owner.removeChild(xrcamera);\n        }\n    }\n    _updateReferenceSpace() {\n    }\n    destroy() {\n        this.owner.enableRender = true;\n        this._webXRSessionManager.off(WebXRSessionManager.EVENT_FRAME_LOOP, this, this._updateFromXRSession);\n        this._webXRSessionManager.off(WebXRSessionManager.EVENT_FRAME_LOOP, this, this._updateReferenceSpace);\n        this._webXRSessionManager.off(WebXRSessionManager.EVENT_MANAGER_END, this, this.destroy);\n        this._rigCameras.forEach(element => {\n            element.destroy();\n        });\n        this._rigCameras = null;\n        this._XRRenderTexture.destroy();\n    }\n}\n","import { EventDispatcher } from \"../../../events/EventDispatcher\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nexport class AxiGamepad extends EventDispatcher {\n    constructor(handness, length) {\n        super();\n        this.axisData = new Array();\n        this.handness = handness;\n        this.axisData.length = length;\n        this.axisLength = length;\n    }\n    update(padGameAxi) {\n        for (let i = 0, j = 0; i < padGameAxi.axes.length; i += 2, ++j) {\n            if (!this.axisData[j])\n                this.axisData[j] = new Vector2();\n            this.axisData[j].setValue(padGameAxi.axes[i], padGameAxi.axes[i + 1]);\n            this.outPutStickValue(this.axisData[j], j);\n        }\n    }\n    outPutStickValue(value, index) {\n        const eventnam = AxiGamepad.EVENT_OUTPUT + index.toString();\n        this.event(eventnam, [value]);\n    }\n    destroy() {\n        for (let i = 0; i < this.axisLength; i++) {\n            let eventname = AxiGamepad.EVENT_OUTPUT + i.toString();\n            this.offAll(eventname);\n        }\n    }\n}\nAxiGamepad.EVENT_OUTPUT = \"outputAxi_id\";\nexport class ButtonGamepad extends EventDispatcher {\n    constructor(handness, index) {\n        super();\n        this.lastTouch = false;\n        this.lastPress = false;\n        this.lastPressValue = 0;\n        this.touch = false;\n        this.press = false;\n        this.pressValue = 0;\n        this.handness = handness;\n        this.index = index;\n    }\n    update(padButton) {\n        this.lastTouch = this.touch;\n        this.lastPress = this.press;\n        this.lastPressValue = this.pressValue;\n        this.touch = padButton.touched;\n        this.press = padButton.pressed;\n        this.pressValue = padButton.value;\n        if (!this.lastTouch && !this.touch) {\n            return;\n        }\n        if (this.lastTouch != this.touch && this.touch) {\n            this.touchEnter();\n        }\n        else if (this.lastTouch == this.touch && this.touch) {\n            this.touchStay();\n        }\n        else if (this.lastTouch != this.touch && !this.touch) {\n            this.touchOut();\n        }\n        if (this.lastPress != this.press && this.press) {\n            this.pressEnter();\n        }\n        else if (this.lastPress == this.press && this.press) {\n            this.pressStay();\n        }\n        else if (this.lastPress != this.press && !this.press) {\n            this.pressOut();\n        }\n        if (this.touch) {\n            this.outpressed();\n        }\n    }\n    touchEnter() {\n        this.event(ButtonGamepad.EVENT_TOUCH_ENTER);\n    }\n    touchStay() {\n        this.event(ButtonGamepad.EVENT_TOUCH_STAY);\n    }\n    touchOut() {\n        this.event(ButtonGamepad.EVENT_TOUCH_OUT);\n    }\n    pressEnter() {\n        this.event(ButtonGamepad.EVENT_PRESS_ENTER);\n    }\n    pressStay() {\n        this.event(ButtonGamepad.EVENT_PRESS_STAY);\n    }\n    pressOut() {\n        this.event(ButtonGamepad.EVENT_PRESS_OUT);\n    }\n    outpressed() {\n        this.event(ButtonGamepad.EVENT_PRESS_VALUE, [this.pressValue]);\n    }\n    destroy() {\n        this.offAll(ButtonGamepad.EVENT_PRESS_ENTER);\n        this.offAll(ButtonGamepad.EVENT_PRESS_STAY);\n        this.offAll(ButtonGamepad.EVENT_PRESS_OUT);\n        this.offAll(ButtonGamepad.EVENT_PRESS_ENTER);\n        this.offAll(ButtonGamepad.EVENT_PRESS_STAY);\n        this.offAll(ButtonGamepad.EVENT_PRESS_OUT);\n        this.offAll(ButtonGamepad.EVENT_PRESS_VALUE);\n    }\n}\nButtonGamepad.EVENT_TOUCH_ENTER = \"touchEnter\";\nButtonGamepad.EVENT_TOUCH_STAY = \"touchStay\";\nButtonGamepad.EVENT_TOUCH_OUT = \"touchOut\";\nButtonGamepad.EVENT_PRESS_ENTER = \"pressEnter\";\nButtonGamepad.EVENT_PRESS_STAY = \"pressStay\";\nButtonGamepad.EVENT_PRESS_OUT = \"pressOut\";\nButtonGamepad.EVENT_PRESS_VALUE = \"outpressed\";\n","import { EventDispatcher } from \"../../../events/EventDispatcher\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Ray } from \"../../math/Ray\";\nimport { ButtonGamepad, AxiGamepad } from \"./WebXRGamepad\";\nexport class WebXRInput extends EventDispatcher {\n    constructor(handness) {\n        super();\n        this.preButtonEventList = [];\n        this.preAxisEventList = [];\n        this.handness = handness;\n        this.position = new Vector3();\n        this.rotation = new Quaternion();\n        this.ray = new Ray(new Vector3(), new Vector3());\n    }\n    _updateByXRPose(xrFrame, referenceSpace) {\n        const rayPose = xrFrame.getPose(this._inputSource.targetRaySpace, referenceSpace);\n        this._lastXRPose = rayPose;\n        if (rayPose) {\n            const pos = rayPose.transform.position;\n            const orientation = rayPose.transform.orientation;\n            WebXRInput.tempQua.setValue(orientation.x, orientation.y, orientation.z, orientation.w);\n            this.ray.origin.setValue(pos.x, pos.y, pos.z);\n            Vector3.transformQuat(Vector3.UnitZ, WebXRInput.tempQua, this.ray.direction);\n            Vector3.scale(this.ray.direction, -1, this.ray.direction);\n        }\n        if (this._inputSource.gripSpace) {\n            let meshPose = xrFrame.getPose(this._inputSource.gripSpace, referenceSpace);\n            if (meshPose) {\n                const pos = meshPose.transform.position;\n                const orientation = meshPose.transform.orientation;\n                this.position.setValue(pos.x, pos.y, pos.z);\n                this.rotation.setValue(orientation.x, orientation.y, orientation.z, orientation.w);\n            }\n        }\n        this.event(WebXRInput.EVENT_FRAMEUPDATA_WEBXRINPUT, [this]);\n        this._handleProcessGamepad();\n    }\n    _handleProcessGamepad() {\n        const gamepad = this._inputSource.gamepad;\n        if (!this.gamepadAxis) {\n            this.gamepadAxis = new AxiGamepad(this.handness, gamepad.axes.length);\n            this.preAxisEventList.forEach(element => {\n                this.gamepadAxis.on(element.eventnam, element.caller, element.listener);\n            });\n        }\n        if (!this.gamepadButton) {\n            this.gamepadButton = [];\n            for (let i = 0; i < gamepad.buttons.length; ++i) {\n                this.gamepadButton.push(new ButtonGamepad(this.handness, i));\n            }\n            this.preButtonEventList.forEach(element => {\n                this.addButtonEvent(element.index, element.type, element.caller, element.listener);\n            });\n        }\n        this.gamepadAxis.update(gamepad);\n        for (let i = 0; i < gamepad.buttons.length; ++i) {\n            let button = this.gamepadButton[i];\n            button.update(gamepad.buttons[i]);\n        }\n    }\n    addButtonEvent(index, type, caller, listener) {\n        if (!this.gamepadButton) {\n            this.preButtonEventList.push({\n                \"index\": index,\n                \"type\": type,\n                \"caller\": caller,\n                \"listener\": listener\n            });\n        }\n        else {\n            let button = this.gamepadButton[index];\n            button.on(type, caller, listener);\n        }\n    }\n    addAxisEvent(index, type, caller, listener) {\n        if (!this.gamepadAxis) {\n            this.preAxisEventList.push({\n                \"eventnam\": type + index.toString(),\n                \"caller\": caller,\n                \"listener\": listener\n            });\n        }\n        else {\n            const eventnam = type + index.toString();\n            this.gamepadAxis.on(eventnam, caller, listener);\n        }\n    }\n    offAxisEvent(index, type, caller, listener) {\n        if (this.gamepadAxis) {\n            const eventnam = type + index.toString();\n            this.gamepadAxis.off(eventnam, caller, listener);\n        }\n    }\n    offButtonEvent(index, type, caller, listener) {\n        if (this.gamepadButton) {\n            let button = this.gamepadButton[index];\n            button.off(type, caller, listener);\n        }\n    }\n    destroy() {\n        this.preButtonEventList = null;\n        this.ray = null;\n        this.position = null;\n        this.rotation = null;\n        this.gamepadAxis.destroy();\n        this.gamepadButton.forEach(element => {\n            element.destroy();\n        });\n    }\n}\nWebXRInput.HANDNESS_LEFT = \"left\";\nWebXRInput.HANDNESS_RIGHT = \"right\";\nWebXRInput.EVENT_FRAMEUPDATA_WEBXRINPUT = \"frameXRInputUpdate\";\nWebXRInput.tempQua = new Quaternion();\n","import { Color } from \"../../../maths/Color\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { WebXRInput } from \"./WebXRInput\";\nimport { WebXRSessionManager } from \"./WebXRSessionManager\";\nexport class WebXRInputManager {\n    constructor(webxrManager, webXRCamera) {\n        this.controllers = new Map();\n        this.controllerHandMesh = new Map();\n        this.controllerLineRender = new Map();\n        this.lineColor = Color.RED;\n        this.rayLength = 2;\n        this.webXRSessionManager = webxrManager;\n        this.webXRCameraManager = webXRCamera;\n        this.webXRSessionManager.on(WebXRSessionManager.EVENT_MANAGER_END, this, this.destory);\n        this.webXRSessionManager.on(WebXRSessionManager.EVENT_FRAME_LOOP, this, this._updateFromXRFrame);\n    }\n    _updateMeshRender(xrInput) {\n        const handness = xrInput.handness;\n        if (this.controllerHandMesh.has(handness)) {\n            let meshNode = this.controllerHandMesh.get(handness);\n            meshNode.transform.position = xrInput.position;\n            meshNode.transform.rotation = xrInput.rotation;\n        }\n        if (this.controllerLineRender.has(handness)) {\n            let line = this.controllerLineRender.get(handness);\n            line.clear();\n            let ray = xrInput.ray;\n            tempVec.setValue(ray.origin.x, ray.origin.y, ray.origin.z);\n            Vector3.scale(ray.direction, this.rayLength, tempVec1);\n            Vector3.add(tempVec, tempVec1, tempVec1);\n            line.addLine(tempVec, tempVec1, this.lineColor, this.lineColor);\n        }\n    }\n    _updateFromXRFrame(xrFrame) {\n        const session = this.webXRSessionManager.session;\n        const refSpace = this.webXRSessionManager.referenceSpace;\n        for (let inputSource of session.inputSources) {\n            const key = inputSource.handedness;\n            let xrInput;\n            if (!this.controllers.has(key)) {\n                xrInput = this.getController(key);\n            }\n            else\n                xrInput = this.controllers.get(key);\n            if (xrInput) {\n                xrInput = this.controllers.get(key);\n                xrInput._inputSource = inputSource;\n                xrInput._updateByXRPose(xrFrame, refSpace);\n            }\n        }\n    }\n    bindMeshNode(meshSprite, handness) {\n        this.controllerHandMesh.set(handness, meshSprite);\n    }\n    bindRayNode(lineSprite, handness) {\n        this.controllerLineRender.set(handness, lineSprite);\n    }\n    getController(handness) {\n        if (handness != \"left\" && handness != \"right\")\n            return null;\n        if (!this.controllers.has(handness)) {\n            let value = new WebXRInput(handness);\n            this.controllers.set(handness, value);\n            value.on(WebXRInput.EVENT_FRAMEUPDATA_WEBXRINPUT, this, this._updateMeshRender);\n        }\n        return this.controllers.get(handness);\n    }\n    destory() {\n        this.webXRSessionManager.off(WebXRSessionManager.EVENT_FRAME_LOOP, this, this._updateFromXRFrame);\n        for (let key in this.controllers) {\n            this.controllers.get(key).off(\"frameXRInputUpdate\", this, this._updateMeshRender);\n            this.controllers.get(key).destroy();\n        }\n        this.controllers = null;\n        this.controllerHandMesh = null;\n        this.controllerLineRender = null;\n    }\n}\nconst tempVec = new Vector3();\nconst tempVec1 = new Vector3();\n","import { LayaGL } from \"../../../layagl/LayaGL\";\nimport { WebXRCameraManager } from \"./WebXRCameraManager\";\nimport { WebXRInputManager } from \"./WebXRInputManager\";\nimport { WebXRSessionManager } from \"./WebXRSessionManager\";\nexport class WebXRCameraInfo {\n}\nexport class WebXRExperienceHelper {\n    static supportXR(sessionMode) {\n        return WebXRExperienceHelper.xr_Manager.isSessionSupportedAsync(sessionMode).then(value => {\n            WebXRExperienceHelper.supported = value;\n            return value;\n        });\n    }\n    static enterXRAsync(sessionMode, referenceSpaceType, cameraInfo) {\n        if (sessionMode === \"immersive-ar\" && referenceSpaceType !== \"unbounded\") {\n            console.warn(\"We recommend using 'unbounded' reference space type when using 'immersive-ar' session mode\");\n        }\n        return WebXRExperienceHelper.xr_Manager.initializeSessionAsync(sessionMode).then(() => {\n            return WebXRExperienceHelper.xr_Manager.setReferenceSpaceTypeAsync(referenceSpaceType);\n        }).then(() => {\n            return WebXRExperienceHelper.xr_Manager.initializeXRGL(sessionMode, LayaGL.renderEngine.gl);\n        }).then(() => {\n            WebXRExperienceHelper.glInstance = LayaGL.renderEngine.gl;\n            return WebXRExperienceHelper.xr_Manager.updateRenderStateAsync({\n                depthFar: cameraInfo.depthFar,\n                depthNear: cameraInfo.depthNear,\n                baseLayer: new XRWebGLLayer(WebXRExperienceHelper.xr_Manager.session, LayaGL.renderEngine.gl),\n            });\n        }).then(() => {\n            WebXRExperienceHelper.xr_Manager.runXRRenderLoop();\n            return WebXRExperienceHelper.xr_Manager;\n        });\n    }\n    static setWebXRCamera(camera, manager) {\n        return new WebXRCameraManager(camera, manager);\n    }\n    static setWebXRInput(sessionManager, cameraManager) {\n        return new WebXRInputManager(sessionManager, cameraManager);\n    }\n}\nWebXRExperienceHelper.xr_Manager = new WebXRSessionManager();\nWebXRExperienceHelper.supported = false;\nWebXRExperienceHelper.canvasOptions = {\n    antialias: true,\n    depth: true,\n    stencil: false,\n    alpha: true,\n    multiview: false,\n    framebufferScaleFactor: 1,\n};\n","export class AnimatorStateScript {\n    setPlayScriptInfo(animator, layerindex, playstate) {\n        this.playStateInfo.animator = animator;\n        this.playStateInfo.layerindex = layerindex;\n        this.playStateInfo.playState = playstate;\n    }\n    constructor() {\n        this.playStateInfo = { animator: null, layerindex: -1, playState: null };\n    }\n    onStateEnter() {\n    }\n    onStateUpdate(normalizeTime) {\n    }\n    onStateExit() {\n    }\n    onStateLoop() {\n    }\n}\n","import { MeshFilter } from \"../../core/MeshFilter\";\nimport { RenderableSprite3D } from \"../../core/RenderableSprite3D\";\nimport { Sprite3D } from \"../../core/Sprite3D\";\nimport { BaseRender } from \"../../core/render/BaseRender\";\nimport { RenderElement } from \"../../core/render/RenderElement\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { MeshUtil } from \"../../resource/models/MeshUtil\";\nexport class HLODRender extends BaseRender {\n    constructor() {\n        super();\n        this._singleton = false;\n    }\n    get curHLODRS() {\n        return this._curHLODRS;\n    }\n    set curHLODRS(value) {\n        if (!this._curHLODRS) {\n            this._renderElements = [];\n            this._renderElements.push(new RenderElement());\n            this._renderElements[0].render = this;\n        }\n        if (value != this._curHLODRS) {\n            this._changeMesh(value.HLODMesh);\n            this._curHLODRS = value;\n            this._createRenderelementByHLODElement(this._curHLODRS, this._renderElements[0]);\n        }\n    }\n    _createRenderelementByHLODElement(source, out) {\n        out.setGeometry(source.HLODMesh);\n        out.material = source.material;\n    }\n    _changeMesh(lodMesh) {\n        var defineDatas = this._baseRenderNode.shaderData;\n        this.boundsChange = true;\n        let meshDefines = MeshFilter._meshVerticeDefine;\n        if (this.curHLODRS) {\n            MeshUtil.getMeshDefine(this.curHLODRS.HLODMesh.batchMesh, meshDefines);\n            for (var i = 0, n = meshDefines.length; i < n; i++)\n                defineDatas.removeDefine(MeshFilter._meshVerticeDefine[i]);\n        }\n        if (lodMesh) {\n            MeshUtil.getMeshDefine(lodMesh.batchMesh, meshDefines);\n            for (var i = 0, n = MeshFilter._meshVerticeDefine.length; i < n; i++)\n                defineDatas.addDefine(MeshFilter._meshVerticeDefine[i]);\n        }\n        this._curSubBatchMeshBounds.length = lodMesh.batchSubMeshInfo.length;\n        for (let i = 0, n = lodMesh.batchSubMeshInfo.length; i < n; i++) {\n            this._curSubBatchMeshBounds[i] = this._curSubBatchMeshBounds[i] ? this._curSubBatchMeshBounds[i] : new Bounds();\n        }\n    }\n    _applyLightMapParams() {\n        if (!this._scene)\n            return;\n        var shaderValues = this._baseRenderNode.shaderData;\n        var lightMap = this._curHLODRS.lightmap;\n        if (lightMap && lightMap.lightmapColor) {\n            shaderValues.setTexture(RenderableSprite3D.LIGHTMAP, lightMap.lightmapColor);\n            shaderValues.addDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP);\n            if (lightMap.lightmapDirection) {\n                shaderValues.setTexture(RenderableSprite3D.LIGHTMAP_DIRECTION, lightMap.lightmapDirection);\n                shaderValues.addDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL);\n            }\n            else {\n                shaderValues.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL);\n            }\n        }\n        else {\n            shaderValues.removeDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP);\n            shaderValues.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL);\n        }\n    }\n    _calculateBoundingBox() {\n        if (this._curHLODRS) {\n            var sharedMesh = this._curHLODRS.HLODMesh;\n            if (sharedMesh) {\n                var worldMat = this._transform.worldMatrix;\n                sharedMesh.batchMesh.bounds._tranform(worldMat, this._bounds);\n            }\n            for (let i = 0, n = this._curSubBatchMeshBounds.length; i < n; i++) {\n                sharedMesh.batchSubMeshInfo[i].bounds._tranform(worldMat, this._curSubBatchMeshBounds[i]);\n            }\n        }\n    }\n    _renderUpdate(context) {\n        this._applyLightMapParams();\n        this._baseRenderNode.shaderData.setMatrix4x4(Sprite3D.WORLDMATRIX, this._transform.worldMatrix);\n    }\n    _needRender(boundFrustum, context) {\n        if (boundFrustum) {\n            if (boundFrustum.intersects(this.bounds)) {\n                let hodMesh = this.curHLODRS.HLODMesh.drawSubMeshs;\n                let lodbatchMesh = this._curHLODRS.HLODMesh.batchSubMeshInfo;\n                hodMesh.length = 0;\n                for (let i = 0, n = this._curSubBatchMeshBounds.length; i < n; i++) {\n                    if (boundFrustum.intersects(this._curSubBatchMeshBounds[i])) {\n                        hodMesh.push(lodbatchMesh[i]);\n                    }\n                }\n                this._curHLODRS.HLODMesh.drawSubMeshs = hodMesh;\n                return true;\n            }\n            else\n                return false;\n        }\n        else {\n            return true;\n        }\n    }\n    onDestroy() {\n        super.onDestroy();\n        this._renderElements.forEach(element => {\n            element.material._removeReference();\n            element.destroy();\n        });\n        this._renderElements = null;\n    }\n}\n","import { Component } from \"../../../components/Component\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Camera } from \"../../core/Camera\";\nimport { HLODRender } from \"./HLODRender\";\nconst tempVec = new Vector3();\nexport class HLOD extends Component {\n    constructor() {\n        super();\n        this._singleton = true;\n    }\n    get bounds() {\n        return this._bounds;\n    }\n    set bounds(value) {\n        this._bounds = value;\n        this.recalculateBounds();\n    }\n    get lodResource() {\n        return this._resourceList;\n    }\n    set lodResource(value) {\n        this._resourceList = value;\n    }\n    get lodCullRateArray() {\n        return this._lodRateArray;\n    }\n    set lodCullRateArray(value) {\n        value.sort((a, b) => b - a);\n        this._lodRateArray = value;\n    }\n    _applyLODResource(resource) {\n        this._curLODSource = resource;\n        let element = resource.resources;\n        for (let i = 0, n = element.length; i < n; i++) {\n            let hlodRender = this.owner.addComponent(HLODRender);\n            this._curRender.push(hlodRender);\n            hlodRender.curHLODRS = element[i];\n        }\n    }\n    _releaseGroupRender() {\n        this._curRender.forEach(element => {\n            element.destroy();\n        });\n        this._curRender = [];\n    }\n    recalculateBounds() {\n        let extend = this._bounds.getExtent();\n        this._size = 2 * Math.max(extend.x, extend.y, extend.z);\n    }\n    onPreRender() {\n        let checkCamera = this.owner.scene.cullInfoCamera;\n        let maxYDistance = checkCamera.maxlocalYDistance;\n        let cameraFrustum = checkCamera.boundFrustum;\n        Vector3.subtract(this.owner.transform.position, checkCamera.transform.position, tempVec);\n        let length = tempVec.length();\n        if (length > checkCamera.farPlane || cameraFrustum.containsPoint(this.owner.transform.position) == 0) {\n            return;\n        }\n        let rateYDistance = length / checkCamera.farPlane * maxYDistance;\n        let rate = (this._size / rateYDistance);\n        for (let i = 0; i < this._lodRateArray.length; i++) {\n            if (rate < this._lodRateArray[i])\n                continue;\n            this.applyResource(this._resourceList[i]);\n            break;\n        }\n    }\n    onUpdate() {\n        this._curLODSource.updateMark = Camera._updateMark;\n    }\n    applyResource(resource) {\n        if (resource == this._curLODSource)\n            return;\n        if (resource.loaded) {\n            if (this._curLODSource) {\n                this._releaseGroupRender();\n                this._applyLODResource(resource);\n            }\n        }\n        else {\n            resource.load(this.applyResource, this);\n        }\n    }\n}\n","import { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { GeometryElement } from \"../../core/GeometryElement\";\nexport class HLODBatchMesh extends GeometryElement {\n    constructor() {\n        super(MeshTopology.Triangles, DrawType.DrawElement);\n    }\n    get batchMesh() {\n        return this._mesh;\n    }\n    set batchMesh(mesh) {\n        if (this._mesh != mesh) {\n            this._mesh && (this._mesh._removeReference());\n            this.indexFormat = mesh.indexFormat;\n            this._mesh = mesh;\n            this._mesh._addReference();\n        }\n    }\n    get batchSubMeshInfo() {\n        return this._batchSubMeshInfos;\n    }\n    set batchSubMeshInfo(value) {\n        this._batchSubMeshInfos = value;\n    }\n    get drawSubMeshs() {\n        return this._drawSubMeshs;\n    }\n    set drawSubMeshs(value) {\n        this._drawSubMeshs = value;\n    }\n    _prepareRender(state) {\n        this._mesh._uploadVerticesData();\n        return true;\n    }\n    _updateRenderParams(state) {\n        var mesh = this._mesh;\n        var byteCount;\n        switch (mesh.indexFormat) {\n            case IndexFormat.UInt32:\n                byteCount = 4;\n                break;\n            case IndexFormat.UInt16:\n                byteCount = 2;\n                break;\n            case IndexFormat.UInt8:\n                byteCount = 1;\n                break;\n        }\n        this.clearRenderParams();\n        this.bufferState = mesh._bufferState;\n        if (this._drawSubMeshs) {\n            this._drawSubMeshs.forEach(element => {\n                this.setDrawElemenParams(element.drawPramas.y, element.drawPramas.x * byteCount);\n            });\n        }\n    }\n    destroy() {\n        this._mesh && this._mesh._removeReference();\n        delete this._batchSubMeshInfos;\n        delete this._drawSubMeshs;\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nexport class HLODConfig {\n}\nexport class HLODBatchSubMesh {\n}\nexport class HLODElement {\n    get material() {\n        return this._material;\n    }\n    set material(value) {\n        if (this._material != value) {\n            this._material && this._material._removeReference();\n            this._material = value;\n            this._material._addReference();\n        }\n    }\n    get lightmap() {\n        return this._lightmap;\n    }\n    set lightmap(value) {\n        if (this._lightmap != value) {\n            if (this._lightmap) {\n                this._lightmap.lightmapColor._removeReference();\n                this._lightmap.lightmapDirection._removeReference();\n            }\n            this._lightmap = value;\n            this._lightmap.lightmapColor._addReference();\n            this._lightmap.lightmapDirection._addReference();\n        }\n        this._lightmap = value;\n    }\n    release() {\n        this.HLODMesh.destroy();\n        this.material.destroy();\n        if (this.lightmap) {\n            this._lightmap.lightmapColor.destroy();\n            this._lightmap.lightmapDirection.destroy();\n        }\n    }\n}\nexport class HLODResourceGroup {\n    load(callFun, hlod) {\n        if (!this.loaded) {\n            Laya.loader.load(this.url).then((res) => {\n                callFun.apply(hlod, [this]);\n                this.loaded = true;\n            });\n        }\n    }\n    release() {\n        this.resources.forEach(element => {\n            element.release();\n        });\n        this.loaded = false;\n    }\n}\n","import { Script } from \"../../components/Script\";\nexport var Script3D = Script;\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { GeometryElement } from \"../../core/GeometryElement\";\nimport { Bounds } from \"../../math/Bounds\";\nexport class StaticBatchSubInfo {\n    constructor() {\n        this.indexStart = 0;\n        this.indexCount = 0;\n        this.meshBounds = new Bounds(new Vector3(), new Vector3());\n        this.needRender = false;\n    }\n}\nexport class StaticBatchSubMesh extends GeometryElement {\n    constructor() {\n        super(MeshTopology.Triangles, DrawType.DrawElement);\n        this.subInfos = [];\n    }\n    addSubMesh(indexCount, indexStart, bounds) {\n        let info = new StaticBatchSubInfo();\n        info.indexCount = indexCount;\n        info.indexStart = indexStart;\n        bounds.cloneTo(info.meshBounds);\n        this.subInfos.push(info);\n    }\n    _getType() {\n        return StaticBatchSubMesh._type;\n    }\n    _updateRenderParams(state) {\n        this.clearRenderParams();\n        let cameraPos = state.camera.transform.position;\n        this.subInfos.sort((a, b) => {\n            let centerA = a.meshBounds.getCenter();\n            let distanceA = Vector3.distanceSquared(centerA, cameraPos);\n            let centerB = b.meshBounds.getCenter();\n            let distanceB = Vector3.distanceSquared(centerB, cameraPos);\n            return distanceA - distanceB;\n        });\n        for (const info of this.subInfos) {\n            if (info.needRender) {\n                this.setDrawElemenParams(info.indexCount, info.indexStart * this.indexByteCount);\n            }\n        }\n    }\n    _prepareRender(state) {\n        return !!this.subInfos.find(info => info.needRender);\n    }\n    destroy() {\n        for (const info of this.subInfos) {\n        }\n        this.subInfos = null;\n    }\n}\nStaticBatchSubMesh._type = GeometryElement._typeCounter++;\n","import { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { BufferState } from \"../../../webgl/utils/BufferState\";\nimport { BlinnPhongMaterial } from \"../../core/material/BlinnPhongMaterial\";\nimport { Bounds } from \"../../math/Bounds\";\nimport { Laya3DRender } from \"../../RenderObjs/Laya3DRender\";\nimport { Utils3D } from \"../../utils/Utils3D\";\nimport { StaticBatchSubMesh } from \"./StaticBatchSubMesh\";\nconst tempMatrix = new Matrix4x4;\nconst TriangleIndices = [0, 1, 2];\nconst InvertTriangleIndices = [0, 2, 1];\nexport class StaticBatchMesh {\n    static create(info) {\n        let staticMesh = new StaticBatchMesh();\n        let vertexCount = info.vertexCount;\n        let indexCount = info.indexCount;\n        let vertexDec = info.vertexDec;\n        let vertexFloatStride = vertexDec.vertexStride / 4;\n        let vertexData = new ArrayBuffer(vertexDec.vertexStride * vertexCount);\n        let vertexFloatArray = new Float32Array(vertexData);\n        let mergeIndexFormat = IndexFormat.UInt16;\n        let mergeIndexByteCount = 2;\n        let indexArray;\n        if (vertexCount > 65535) {\n            mergeIndexFormat = IndexFormat.UInt32;\n            mergeIndexByteCount = 4;\n            indexArray = new Uint32Array(indexCount);\n        }\n        else {\n            indexArray = new Uint16Array(indexCount);\n        }\n        let vertexDataOffset = 0;\n        let vertexCountOffset = 0;\n        let indexOffset = 0;\n        let bounds;\n        for (const render of info.renders) {\n            let lightmapScaleOffset = render.lightmapScaleOffset;\n            if (!bounds) {\n                bounds = staticMesh.bounds;\n                render.bounds.cloneTo(bounds);\n            }\n            Bounds.merge(bounds, render.bounds, bounds);\n            let sp = render.owner;\n            let invertFront = sp.transform._isFrontFaceInvert;\n            let worldMat = sp.transform.worldMatrix;\n            let normalMat = tempMatrix;\n            worldMat.invert(normalMat);\n            normalMat.transpose();\n            let mesh = render.getMesh();\n            let meshVertexCount = mesh.vertexCount;\n            let meshIndexCount = mesh.indexCount;\n            let meshVertexData = mesh._vertexBuffer.getFloat32Data();\n            vertexFloatArray.set(meshVertexData, vertexDataOffset);\n            for (let index = 0; index < meshVertexCount; index++) {\n                let elementOffset = index * vertexFloatStride;\n                for (const element of vertexDec._vertexElements) {\n                    elementOffset += element.offset / 4;\n                    switch (element.elementUsage) {\n                        case VertexMesh.MESH_POSITION0:\n                            Utils3D.transformVector3ArrayToVector3ArrayCoordinate(meshVertexData, elementOffset, worldMat, vertexFloatArray, vertexDataOffset + elementOffset);\n                            break;\n                        case VertexMesh.MESH_NORMAL0:\n                        case VertexMesh.MESH_TANGENT0:\n                            Utils3D.transformVector3ArrayToVector3ArrayNormal(meshVertexData, elementOffset, normalMat, vertexFloatArray, vertexDataOffset + elementOffset);\n                            break;\n                        case VertexMesh.MESH_TEXTURECOORDINATE1:\n                            Utils3D.transformLightingMapTexcoordArray(meshVertexData, elementOffset, lightmapScaleOffset, vertexFloatArray, vertexDataOffset + elementOffset);\n                            break;\n                    }\n                }\n            }\n            let meshIndexData = mesh._indexBuffer.getData();\n            let triangleIndices = invertFront ? InvertTriangleIndices : TriangleIndices;\n            for (let index = 0; index < meshIndexCount; index += 3) {\n                indexArray[indexOffset + index] = meshIndexData[index + triangleIndices[0]] + vertexCountOffset;\n                indexArray[indexOffset + index + 1] = meshIndexData[index + triangleIndices[1]] + vertexCountOffset;\n                indexArray[indexOffset + index + 2] = meshIndexData[index + triangleIndices[2]] + vertexCountOffset;\n            }\n            let subMeshCount = mesh.subMeshCount;\n            for (let index = 0; index < subMeshCount; index++) {\n                let material = render.sharedMaterials[index] || BlinnPhongMaterial.defaultMaterial;\n                let staticSubMesh = staticMesh._staticSubMeshes.get(material);\n                if (!staticSubMesh) {\n                    staticSubMesh = new StaticBatchSubMesh();\n                    staticSubMesh.indexByteCount = mergeIndexByteCount;\n                    staticMesh._staticSubMeshes.set(material, staticSubMesh);\n                    staticSubMesh.bufferState = staticMesh._bufferState;\n                    staticSubMesh.indexFormat = mergeIndexFormat;\n                }\n                let subMesh = mesh.getSubMesh(index);\n                staticSubMesh.addSubMesh(subMesh.indexCount, subMesh._indexStart + indexOffset, render.bounds);\n            }\n            vertexDataOffset += meshVertexData.length;\n            vertexCountOffset += meshVertexCount;\n            indexOffset += meshIndexData.length;\n        }\n        let vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vertexData.byteLength, BufferUsage.Static, false);\n        vertexBuffer.vertexDeclaration = vertexDec;\n        vertexBuffer.setData(vertexData);\n        let indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(mergeIndexFormat, indexCount, BufferUsage.Static, false);\n        indexBuffer.setData(indexArray);\n        staticMesh.setBuffer(vertexBuffer, indexBuffer);\n        return staticMesh;\n    }\n    constructor() {\n        this._bufferState = new BufferState();\n        this._staticSubMeshes = new Map();\n        this.bounds = new Bounds();\n    }\n    setBuffer(vertex, index) {\n        let bufferState = this._bufferState;\n        this._vertexBuffer = vertex;\n        this._indexBuffer = index;\n        bufferState.applyState([vertex], index);\n    }\n    destroy() {\n        this._staticSubMeshes.forEach(submesh => {\n            submesh.destroy();\n        });\n        this._staticSubMeshes.clear();\n        this._staticSubMeshes = null;\n        this._bufferState.destroy();\n    }\n}\n","import { RenderElement } from \"../../core/render/RenderElement\";\nexport class StaticBatchMeshRenderElement extends RenderElement {\n    constructor() {\n        super();\n    }\n    getInvertFront() {\n        return false;\n    }\n}\n","import { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { MeshFilter } from \"../../core/MeshFilter\";\nimport { MeshSprite3DShaderDeclaration } from \"../../core/MeshSprite3DShaderDeclaration\";\nimport { BaseRender, RenderBitFlag } from \"../../core/render/BaseRender\";\nimport { StaticBatchMesh } from \"./StaticBatchMesh\";\nimport { StaticBatchMeshRenderElement } from \"./StaticBatchMeshRenderElement\";\nexport class StaticBatchMeshRender extends BaseRender {\n    static create(info) {\n        let render = new StaticBatchMeshRender();\n        render.mergeInfo = info;\n        return render;\n    }\n    get staticMesh() {\n        return this._staticMesh;\n    }\n    get mergeInfo() {\n        return this._mergeInfo;\n    }\n    set mergeInfo(value) {\n        this._mergeInfo = value;\n        let staticMesh = StaticBatchMesh.create(value);\n        this._staticMesh = staticMesh;\n        this.lightmapIndex = value.lightmapIndex;\n        this._staticMesh = staticMesh;\n        this.geometryBounds = staticMesh.bounds;\n        let meshDefines = MeshFilter._meshVerticeDefine;\n        let defineDatas = this._baseRenderNode.shaderData;\n        this._getMeshDefine(staticMesh, meshDefines);\n        for (const meshDef of meshDefines) {\n            defineDatas.addDefine(meshDef);\n        }\n        this._renderElements.forEach(element => {\n            element.material._removeReference();\n            element.destroy();\n        });\n        this._renderElements = [];\n        staticMesh._staticSubMeshes.forEach((subMesh, material) => {\n            let element = new StaticBatchMeshRenderElement();\n            this._renderElements.push(element);\n            element.render = this;\n            element.material = material;\n            element.setGeometry(subMesh);\n            material._addReference();\n        });\n        staticMesh.bounds.cloneTo(this.bounds);\n    }\n    constructor() {\n        super();\n        this._singleton = false;\n    }\n    _calculateBoundingBox() {\n    }\n    _renderUpdate(context) {\n    }\n    _getMeshDefine(mesh, out) {\n        let vertexElements = mesh._vertexBuffer.vertexDeclaration._vertexElements;\n        for (const element of vertexElements) {\n            switch (element.elementUsage) {\n                case VertexMesh.MESH_COLOR0:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_COLOR);\n                    break;\n                case VertexMesh.MESH_TEXTURECOORDINATE0:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV0);\n                    break;\n                case VertexMesh.MESH_TEXTURECOORDINATE1:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1);\n                    break;\n                case VertexMesh.MESH_TANGENT0:\n                    out.push(MeshSprite3DShaderDeclaration.SHADERDEFINE_TANGENT);\n                    break;\n            }\n        }\n    }\n    _needRender(boundFrustum, context) {\n        if (boundFrustum) {\n            if (boundFrustum.intersects(this.bounds)) {\n                let needRender = false;\n                this.staticMesh._staticSubMeshes.forEach(subMesh => {\n                    for (const info of subMesh.subInfos) {\n                        info.needRender = boundFrustum.intersects(info.meshBounds);\n                        needRender = needRender || info.needRender;\n                    }\n                });\n                return needRender;\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    onEnable() {\n        super.onEnable();\n        this.mergeInfo.renders.forEach(render => {\n            render.setRenderbitFlag(RenderBitFlag.RenderBitFlag_Batch, true);\n        });\n    }\n    onDisable() {\n        super.onDisable();\n        this.mergeInfo.renders.forEach(render => {\n            render.setRenderbitFlag(RenderBitFlag.RenderBitFlag_Batch, false);\n        });\n    }\n    onDestroy() {\n        super.onDestroy();\n        this._renderElements.forEach(element => {\n            element.material._removeReference();\n            element.destroy();\n        });\n        this._renderElements = null;\n        this._staticMesh.destroy();\n        this._staticMesh = null;\n    }\n    _cloneTo(dest) {\n        dest.mergeInfo = this.mergeInfo;\n    }\n}\n","export class StaticMeshMergeInfo {\n    static create(render) {\n        let mesh = render.getMesh();\n        let info = new StaticMeshMergeInfo();\n        info.lightmapIndex = render.lightmapIndex;\n        info.receiveShadow = render.receiveShadow;\n        info.vertexDec = mesh ? mesh.getVertexDeclaration() : null;\n        return info;\n    }\n    get renders() {\n        return this._renders;\n    }\n    constructor() {\n        this._renders = [];\n        this.vertexCount = 0;\n        this.indexCount = 0;\n    }\n    match(render) {\n        let mesh = render.getMesh();\n        let owner = render.owner;\n        let match = true;\n        match = match && this.lightmapIndex == render.lightmapIndex;\n        match = match && this.receiveShadow == render.receiveShadow;\n        match = match && this.vertexDec == mesh.getVertexDeclaration();\n        return match;\n    }\n    addElement(render) {\n        this.renders.push(render);\n        let mesh = render.getMesh();\n        this.vertexCount += mesh.vertexCount;\n        this.indexCount += mesh.indexCount;\n    }\n    destroy() {\n        this._renders = null;\n    }\n}\n","import { StaticBatchMeshRender } from \"./StaticBatchMeshRender\";\nimport { StaticMeshMergeInfo } from \"./StaticMeshMergeInfo\";\nexport class StaticMeshBatchManager {\n    constructor() {\n        this.meshVertexDecSet = new Set();\n    }\n    combine(renders) {\n        for (const render of renders) {\n            let haveMatch = false;\n            for (const info of this.meshVertexDecSet) {\n                if (info.match(render)) {\n                    haveMatch = true;\n                    info.addElement(render);\n                }\n            }\n            if (!haveMatch) {\n                let info = StaticMeshMergeInfo.create(render);\n                info.addElement(render);\n                this.meshVertexDecSet.add(info);\n            }\n        }\n        let staticRenders = [];\n        for (const info of this.meshVertexDecSet) {\n            staticRenders.push(StaticBatchMeshRender.create(info));\n        }\n        this.meshVertexDecSet.clear();\n        return staticRenders;\n    }\n    merge(info) {\n        let staticMeshRender = StaticBatchMeshRender.create(info);\n        return staticMeshRender;\n    }\n}\n","import { PixelLineRenderer } from \"./PixelLineRenderer\";\nimport { RenderableSprite3D } from \"../RenderableSprite3D\";\nimport { UnlitMaterial } from \"../material/UnlitMaterial\";\nexport class PixelLineSprite3D extends RenderableSprite3D {\n    get maxLineCount() {\n        return this._render.maxLineCount;\n    }\n    set maxLineCount(value) {\n        this._render.maxLineCount = value;\n    }\n    get lineCount() {\n        return this._render.lineCount;\n    }\n    get pixelLineRenderer() {\n        return this._render;\n    }\n    constructor(maxCount = 2, name = null) {\n        super(name);\n        this._isRenderActive = false;\n        this._isInRenders = false;\n        this._render = this.addComponent(PixelLineRenderer);\n        this._geometryFilter = this._render._pixelLineFilter;\n        this._render.maxLineCount = maxCount;\n        let material = this._render.material = new UnlitMaterial();\n        material.enableVertexColor = true;\n    }\n    addLine(startPosition, endPosition, startColor, endColor) {\n        this._render.addLine(startPosition, endPosition, startColor, endColor);\n    }\n    addLines(lines) {\n        this._render.addLines(lines);\n    }\n    removeLine(index) {\n        this._render.removeLine(index);\n    }\n    setLine(index, startPosition, endPosition, startColor, endColor) {\n        this._render.setLine(index, startPosition, endPosition, startColor, endColor);\n    }\n    getLine(index, out) {\n        this._render.getLine(index, out);\n    }\n    clear() {\n        this._render.clear();\n    }\n}\n","import { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Laya3DRender } from \"../../../RenderObjs/Laya3DRender\";\nimport { DrawMeshInstancedCMD } from \"./DrawMeshInstancedCMD\";\nexport class MaterialInstanceProperty {\n    constructor() {\n        this._isNeedUpdate = false;\n    }\n    createInstanceVertexBuffer3D() {\n        this._instanceData = new Float32Array(DrawMeshInstancedCMD.maxInstanceCount * this._vertexStride);\n        this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(this._instanceData.length * 4, BufferUsage.Dynamic, false);\n        this._vertexBuffer.vertexDeclaration = this._vertexDeclaration;\n        this._vertexBuffer.instanceBuffer = true;\n    }\n    updateVertexBufferData(drawNums) {\n        if (!this._isNeedUpdate)\n            return;\n        let instanceData = this._instanceData;\n        let dataValue = this._value;\n        let datalength = this._value.length;\n        let data;\n        let stride = this._vertexStride;\n        let updateType = 0;\n        if (!(this._value instanceof Float32Array)) {\n            updateType = 1;\n        }\n        switch (updateType) {\n            case 0:\n                instanceData.set(dataValue, 0);\n                break;\n            case 1:\n                for (let i = 0; i < datalength; i++) {\n                    data = dataValue[i];\n                    data.writeTo(instanceData, i * stride);\n                }\n                break;\n        }\n        this._vertexBuffer._deviceBuffer.setDataLength(this._vertexBuffer._byteLength);\n        this._vertexBuffer.setData(instanceData.buffer, 0, 0, drawNums * 4 * stride);\n    }\n    destroy() {\n        delete this._value;\n        delete this._instanceData;\n        this._vertexDeclaration = null;\n        this._vertexBuffer.destroy();\n    }\n}\n","import { VertexDeclaration } from \"../../../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../../../renders/VertexElementFormat\";\nimport { MaterialInstanceProperty } from \"./MaterialInstanceProperty\";\nexport var InstanceLocation;\n(function (InstanceLocation) {\n    InstanceLocation[InstanceLocation[\"CUSTOME0\"] = 12] = \"CUSTOME0\";\n    InstanceLocation[InstanceLocation[\"CUSTOME1\"] = 13] = \"CUSTOME1\";\n    InstanceLocation[InstanceLocation[\"CUSTOME2\"] = 14] = \"CUSTOME2\";\n    InstanceLocation[InstanceLocation[\"CUSTOME3\"] = 15] = \"CUSTOME3\";\n})(InstanceLocation || (InstanceLocation = {}));\nexport class MaterialInstancePropertyBlock {\n    constructor() {\n        this._type = 0;\n        this._propertyMap = {};\n    }\n    _checkPropertyLegal(vertexElementFormat, propertyName, attributeLocation, prob) {\n        var vecDec = prob._vertexDeclaration;\n        if (vecDec._vertexElements[0]._elementFormat !== vertexElementFormat)\n            throw \"Data exists and format does not match\";\n        if (prob._name !== propertyName)\n            throw \"You cannot add a new property to an existing attributeLocation,Please use another attributeLocation\";\n    }\n    _creatProperty(attributeName, arrays, vertexStride, vertexformat, attributeLocation) {\n        var prob = this._propertyMap[attributeLocation] = new MaterialInstanceProperty();\n        prob._name = attributeName;\n        prob._value = arrays;\n        prob._vertexDeclaration = new VertexDeclaration(vertexStride, [new VertexElement(0, vertexformat, attributeLocation)]);\n        prob._isNeedUpdate = true;\n        prob._vertexStride = vertexStride / 4;\n        prob.createInstanceVertexBuffer3D();\n    }\n    setVectorArray(attributeName, arrays, attributeLocation) {\n        var prob = this._propertyMap[attributeLocation];\n        if (prob) {\n            this._checkPropertyLegal(VertexElementFormat.Vector4, attributeName, attributeLocation, prob);\n            prob._value = arrays;\n            prob._isNeedUpdate = true;\n        }\n        else\n            this._creatProperty(attributeName, arrays, 16, VertexElementFormat.Vector4, attributeLocation);\n    }\n    setVector3Array(attributeName, arrays, attributeLocation) {\n        var prob = this._propertyMap[attributeLocation];\n        if (prob) {\n            this._checkPropertyLegal(VertexElementFormat.Vector3, attributeName, attributeLocation, prob);\n            prob._value = arrays;\n            prob._isNeedUpdate = true;\n        }\n        else\n            this._creatProperty(attributeName, arrays, 12, VertexElementFormat.Vector3, attributeLocation);\n    }\n    setVector2Array(attributeName, arrays, attributeLocation) {\n        var prob = this._propertyMap[attributeLocation];\n        if (prob) {\n            this._checkPropertyLegal(VertexElementFormat.Vector2, attributeName, attributeLocation, prob);\n            prob._value = arrays;\n            prob._isNeedUpdate = true;\n        }\n        else\n            this._creatProperty(attributeName, arrays, 8, VertexElementFormat.Vector2, attributeLocation);\n    }\n    setNumberArray(attributeName, arrays, attributeLocation) {\n        var prob = this._propertyMap[attributeLocation];\n        if (prob) {\n            this._checkPropertyLegal(VertexElementFormat.Single, attributeName, attributeLocation, prob);\n            prob._value = arrays;\n            prob._isNeedUpdate = true;\n        }\n        else\n            this._creatProperty(attributeName, arrays, 4, VertexElementFormat.Single, attributeLocation);\n    }\n    getPropertyArray(attributeLocation) {\n        var prob = this._propertyMap[attributeLocation];\n        return prob ? prob._value : null;\n    }\n    clear() {\n        for (var i in this._propertyMap) {\n            this._propertyMap[i].destroy();\n        }\n        this._propertyMap = {};\n    }\n}\nMaterialInstancePropertyBlock.INSTANCETYPE_ATTRIBUTE = 0;\nMaterialInstancePropertyBlock.INSTANCETYPE_UNIFORMBUFFER = 1;\n","export class FrustumCulling {\n    static cullingRenderBounds(bounds, cullInfo) {\n        var cullPlaneCount = cullInfo.cullPlaneCount;\n        var cullPlanes = cullInfo.cullPlanes;\n        var min = bounds._imp.getMin();\n        var max = bounds._imp.getMax();\n        var minX = min.x;\n        var minY = min.y;\n        var minZ = min.z;\n        var maxX = max.x;\n        var maxY = max.y;\n        var maxZ = max.z;\n        var pass = true;\n        for (var j = 0; j < cullPlaneCount; j++) {\n            var plane = cullPlanes[j];\n            var normal = plane.normal;\n            if (plane.distance + (normal.x * (normal.x < 0.0 ? minX : maxX)) + (normal.y * (normal.y < 0.0 ? minY : maxY)) + (normal.z * (normal.z < 0.0 ? minZ : maxZ)) < 0.0) {\n                pass = false;\n                break;\n            }\n        }\n        return pass;\n    }\n}\n","import { RenderCapable } from \"../../RenderEngine/RenderEnum/RenderCapable\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { Loader } from \"../../net/Loader\";\nimport { Texture2DArray } from \"../../resource/Texture2DArray\";\nimport { Utils } from \"../../utils/Utils\";\nvar internalResources = {};\nexport class Texture2DArrayLoader {\n    constructor() {\n        if (!internalResources) {\n            internalResources = {\n                \"default\": Texture2DArray.defaultTexture\n            };\n        }\n    }\n    load(task) {\n        if (task.url.indexOf(\"internal/\") != -1) {\n            const tex = internalResources[Utils.getBaseName(task.url)];\n            if (tex) {\n                return Promise.resolve(tex);\n            }\n        }\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then((data) => {\n            if (!data) {\n                return null;\n            }\n            let width = data.width;\n            let height = data.height;\n            let depth = data.depth;\n            let format = data.format;\n            let mipmap = data.mipmap;\n            let sRGB = data.sRGB;\n            let premultiplyAlpha = !!data.premultiplyAlpha;\n            let invertY = !!data.invertY;\n            let textures = data.textures;\n            let urls = [];\n            for (let index = 0; index < textures.length; index++) {\n                urls.push(textures[index]);\n            }\n            return Promise.all(urls.map((url) => {\n                if (url) {\n                    return task.loader.fetch(url, \"image\", task.progress.createCallback(), task.options);\n                }\n                else {\n                    return Promise.resolve(null);\n                }\n            })).then(images => {\n                if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\n                    let tex = new Texture2DArray(width, height, depth, format, mipmap, sRGB);\n                    tex.setImageData(images, premultiplyAlpha, invertY);\n                    return tex;\n                }\n                else {\n                    return null;\n                }\n            });\n        });\n    }\n}\nLoader.registerLoader([\"tex2darray\"], Texture2DArrayLoader, Loader.TEXTURE2DARRAY);\n","import { CollisionUtils } from \"./CollisionUtils\";\nimport { Vector3 } from \"../../maths/Vector3\";\nexport class BoundSphere {\n    get center() {\n        return this._center;\n    }\n    set center(value) {\n        value.cloneTo(this._center);\n    }\n    get radius() {\n        return this._radius;\n    }\n    set radius(value) {\n        this._radius = value;\n    }\n    constructor(center = new Vector3, radius = 0) {\n        this._center = center;\n        this._radius = radius;\n    }\n    toDefault() {\n        this._center.toDefault();\n        this._radius = 0;\n    }\n    static createFromSubPoints(points, start, count, out) {\n        if (points == null) {\n            throw new Error(\"points\");\n        }\n        if (start < 0 || start >= points.length) {\n            throw new Error(\"start\" + start + \"Must be in the range [0, \" + (points.length - 1) + \"]\");\n        }\n        if (count < 0 || (start + count) > points.length) {\n            throw new Error(\"count\" + count + \"Must be in the range <= \" + points.length + \"}\");\n        }\n        var upperEnd = start + count;\n        var center = _tempVector3;\n        center.x = 0;\n        center.y = 0;\n        center.z = 0;\n        for (var i = start; i < upperEnd; ++i) {\n            Vector3.add(points[i], center, center);\n        }\n        var outCenter = out.center;\n        Vector3.scale(center, 1 / count, outCenter);\n        var radius = 0.0;\n        for (i = start; i < upperEnd; ++i) {\n            var distance = Vector3.distanceSquared(outCenter, points[i]);\n            if (distance > radius)\n                radius = distance;\n        }\n        out.radius = Math.sqrt(radius);\n    }\n    static createfromPoints(points, out) {\n        if (points == null) {\n            throw new Error(\"points\");\n        }\n        BoundSphere.createFromSubPoints(points, 0, points.length, out);\n    }\n    intersectsRayDistance(ray) {\n        return CollisionUtils.intersectsRayAndSphereRD(ray, this);\n    }\n    intersectsRayPoint(ray, outPoint) {\n        return CollisionUtils.intersectsRayAndSphereRP(ray, this, outPoint);\n    }\n    cloneTo(destObject) {\n        this._center.cloneTo(destObject._center);\n        destObject._radius = this._radius;\n    }\n    clone() {\n        var dest = new BoundSphere(new Vector3(), 0);\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nconst _tempVector3 = new Vector3();\n","import { Vector3 } from \"../../maths/Vector3\";\nimport { BoundBox } from \"./BoundBox\";\nexport class BoundsImpl {\n    get min() {\n        return this.getMin();\n    }\n    set min(value) {\n        this.setMin(value);\n    }\n    get max() {\n        return this.getMax();\n    }\n    set max(value) {\n        this.setMax(value);\n    }\n    setMin(value) {\n        var min = this._boundBox.min;\n        if (value !== min)\n            value.cloneTo(min);\n        this._setUpdateFlag(BoundsImpl._UPDATE_CENTER | BoundsImpl._UPDATE_EXTENT, true);\n        this._setUpdateFlag(BoundsImpl._UPDATE_MIN, false);\n    }\n    getMin() {\n        var min = this._boundBox.min;\n        if (this._getUpdateFlag(BoundsImpl._UPDATE_MIN)) {\n            this._getMin(this.getCenter(), this.getExtent(), min);\n            this._setUpdateFlag(BoundsImpl._UPDATE_MIN, false);\n        }\n        return min;\n    }\n    setMax(value) {\n        var max = this._boundBox.max;\n        if (value !== max)\n            value.cloneTo(max);\n        this._setUpdateFlag(BoundsImpl._UPDATE_CENTER | BoundsImpl._UPDATE_EXTENT, true);\n        this._setUpdateFlag(BoundsImpl._UPDATE_MAX, false);\n    }\n    getMax() {\n        var max = this._boundBox.max;\n        if (this._getUpdateFlag(BoundsImpl._UPDATE_MAX)) {\n            this._getMax(this.getCenter(), this.getExtent(), max);\n            this._setUpdateFlag(BoundsImpl._UPDATE_MAX, false);\n        }\n        return max;\n    }\n    setCenter(value) {\n        if (value !== this._center)\n            value.cloneTo(this._center);\n        this._getMin(this._center, this._extent, this._boundBox.min);\n        this._getMax(this._center, this._extent, this._boundBox.max);\n        this._setUpdateFlag(BoundsImpl._UPDATE_CENTER | BoundsImpl._UPDATE_MIN | BoundsImpl._UPDATE_MAX, false);\n    }\n    getCenter() {\n        if (this._getUpdateFlag(BoundsImpl._UPDATE_CENTER)) {\n            this._getCenter(this.getMin(), this.getMax(), this._center);\n            this._setUpdateFlag(BoundsImpl._UPDATE_CENTER, false);\n        }\n        return this._center;\n    }\n    setExtent(value) {\n        if (value !== this._extent)\n            value.cloneTo(this._extent);\n        this._getMin(this._center, this._extent, this._boundBox.min);\n        this._getMax(this._center, this._extent, this._boundBox.max);\n        this._setUpdateFlag(BoundsImpl._UPDATE_CENTER | BoundsImpl._UPDATE_MIN | BoundsImpl._UPDATE_MAX, false);\n    }\n    getExtent() {\n        if (this._getUpdateFlag(BoundsImpl._UPDATE_EXTENT)) {\n            this._getExtent(this.getMin(), this.getMax(), this._extent);\n            this._setUpdateFlag(BoundsImpl._UPDATE_EXTENT, false);\n        }\n        return this._extent;\n    }\n    constructor(min, max) {\n        this._updateFlag = 0;\n        this._center = new Vector3();\n        this._extent = new Vector3();\n        this._boundBox = new BoundBox(new Vector3(), new Vector3());\n        min && min.cloneTo(this._boundBox.min);\n        max && max.cloneTo(this._boundBox.max);\n        this._setUpdateFlag(BoundsImpl._UPDATE_MIN | BoundsImpl._UPDATE_MAX, false);\n        this._setUpdateFlag(BoundsImpl._UPDATE_CENTER | BoundsImpl._UPDATE_EXTENT, true);\n    }\n    _getUpdateFlag(type) {\n        return (this._updateFlag & type) != 0;\n    }\n    _setUpdateFlag(type, value) {\n        if (value)\n            this._updateFlag |= type;\n        else\n            this._updateFlag &= ~type;\n    }\n    _getCenter(min, max, out) {\n        Vector3.add(min, max, out);\n        Vector3.scale(out, 0.5, out);\n    }\n    _getExtent(min, max, out) {\n        Vector3.subtract(max, min, out);\n        Vector3.scale(out, 0.5, out);\n    }\n    _getMin(center, extent, out) {\n        Vector3.subtract(center, extent, out);\n    }\n    _getMax(center, extent, out) {\n        Vector3.add(center, extent, out);\n    }\n    _rotateExtents(extents, rotation, out) {\n        var extentsX = extents.x;\n        var extentsY = extents.y;\n        var extentsZ = extents.z;\n        var matE = rotation.elements;\n        out.x = Math.abs(matE[0] * extentsX) + Math.abs(matE[4] * extentsY) + Math.abs(matE[8] * extentsZ);\n        out.y = Math.abs(matE[1] * extentsX) + Math.abs(matE[5] * extentsY) + Math.abs(matE[9] * extentsZ);\n        out.z = Math.abs(matE[2] * extentsX) + Math.abs(matE[6] * extentsY) + Math.abs(matE[10] * extentsZ);\n    }\n    _tranform(matrix, out) {\n        var outCen = out._center;\n        var outExt = out._extent;\n        Vector3.transformCoordinate(this.getCenter(), matrix, outCen);\n        this._rotateExtents(this.getExtent(), matrix, outExt);\n        out._boundBox.setCenterAndExtent(outCen, outExt);\n        out._updateFlag = 0;\n    }\n    _getBoundBox() {\n        if (this._updateFlag & BoundsImpl._UPDATE_MIN) {\n            var min = this._boundBox.min;\n            this._getMin(this.getCenter(), this.getExtent(), min);\n            this._setUpdateFlag(BoundsImpl._UPDATE_MIN, false);\n        }\n        if (this._updateFlag & BoundsImpl._UPDATE_MAX) {\n            var max = this._boundBox.max;\n            this._getMax(this.getCenter(), this.getExtent(), max);\n            this._setUpdateFlag(BoundsImpl._UPDATE_MAX, false);\n        }\n        return this._boundBox;\n    }\n    calculateBoundsintersection(bounds) {\n        var ownMax = this.getMax();\n        var ownMin = this.getMin();\n        var calMax = bounds.getMax();\n        var calMin = bounds.getMin();\n        var tempV0 = TEMP_VECTOR3_MAX0;\n        var tempV1 = TEMP_VECTOR3_MAX1;\n        var thisExtends = this.getExtent();\n        var boundExtends = bounds.getExtent();\n        tempV0.setValue(Math.max(ownMax.x, calMax.x) - Math.min(ownMin.x, calMin.x), Math.max(ownMax.y, calMax.y) - Math.min(ownMin.y, calMin.y), Math.max(ownMax.z, calMax.z) - Math.min(ownMin.z, calMin.z));\n        tempV1.setValue((thisExtends.x + boundExtends.x) * 2.0, (thisExtends.y + boundExtends.y) * 2.0, (thisExtends.z + boundExtends.z) * 2.0);\n        if ((tempV0.x) > (tempV1.x))\n            return -1;\n        if ((tempV0.y) > (tempV1.y))\n            return -1;\n        if ((tempV0.z) > (tempV1.z))\n            return -1;\n        return (tempV1.x - tempV0.x) * (tempV1.y - tempV0.y) * (tempV1.z - tempV0.z);\n    }\n    cloneTo(destObject) {\n        this.getMin().cloneTo(destObject._boundBox.min);\n        this.getMax().cloneTo(destObject._boundBox.max);\n        this.getCenter().cloneTo(destObject._center);\n        this.getExtent().cloneTo(destObject._extent);\n        destObject._updateFlag = 0;\n    }\n    clone() {\n        var dest = new BoundsImpl(new Vector3(), new Vector3());\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nBoundsImpl._UPDATE_MIN = 0x01;\nBoundsImpl._UPDATE_MAX = 0x02;\nBoundsImpl._UPDATE_CENTER = 0x04;\nBoundsImpl._UPDATE_EXTENT = 0x08;\nconst TEMP_VECTOR3_MAX0 = new Vector3();\nconst TEMP_VECTOR3_MAX1 = new Vector3();\n","export class Rand {\n    static getFloatFromInt(v) {\n        return (v & 0x007FFFFF) * (1.0 / 8388607.0);\n    }\n    static getByteFromInt(v) {\n        return (v & 0x007FFFFF) >>> 15;\n    }\n    get seed() {\n        return this.seeds[0];\n    }\n    set seed(seed) {\n        this.seeds[0] = seed;\n        this.seeds[1] = this.seeds[0] * 0x6C078965 + 1;\n        this.seeds[2] = this.seeds[1] * 0x6C078965 + 1;\n        this.seeds[3] = this.seeds[2] * 0x6C078965 + 1;\n    }\n    constructor(seed) {\n        this._temp = new Uint32Array(1);\n        this.seeds = new Uint32Array(4);\n        this.seeds[0] = seed;\n        this.seeds[1] = this.seeds[0] * 0x6C078965 + 1;\n        this.seeds[2] = this.seeds[1] * 0x6C078965 + 1;\n        this.seeds[3] = this.seeds[2] * 0x6C078965 + 1;\n    }\n    getUint() {\n        this._temp[0] = this.seeds[0] ^ (this.seeds[0] << 11);\n        this.seeds[0] = this.seeds[1];\n        this.seeds[1] = this.seeds[2];\n        this.seeds[2] = this.seeds[3];\n        this.seeds[3] = (this.seeds[3] ^ (this.seeds[3] >>> 19)) ^ (this._temp[0] ^ (this._temp[0] >>> 8));\n        return this.seeds[3];\n    }\n    getFloat() {\n        this.getUint();\n        return (this.seeds[3] & 0x007FFFFF) * (1.0 / 8388607.0);\n    }\n    getSignedFloat() {\n        return this.getFloat() * 2.0 - 1.0;\n    }\n}\n","export class RandX {\n    constructor(seed) {\n        if (!(seed instanceof Array) || seed.length !== 4)\n            throw new Error('Rand:Seed must be an array with 4 numbers');\n        this._state0U = seed[0] | 0;\n        this._state0L = seed[1] | 0;\n        this._state1U = seed[2] | 0;\n        this._state1L = seed[3] | 0;\n    }\n    randomint() {\n        var s1U = this._state0U, s1L = this._state0L;\n        var s0U = this._state1U, s0L = this._state1L;\n        var sumL = (s0L >>> 0) + (s1L >>> 0);\n        var resU = (s0U + s1U + (sumL / 2 >>> 31)) >>> 0;\n        var resL = sumL >>> 0;\n        this._state0U = s0U;\n        this._state0L = s0L;\n        var t1U = 0, t1L = 0;\n        var t2U = 0, t2L = 0;\n        var a1 = 23;\n        var m1 = 0xFFFFFFFF << (32 - a1);\n        t1U = (s1U << a1) | ((s1L & m1) >>> (32 - a1));\n        t1L = s1L << a1;\n        s1U = s1U ^ t1U;\n        s1L = s1L ^ t1L;\n        t1U = s1U ^ s0U;\n        t1L = s1L ^ s0L;\n        var a2 = 18;\n        var m2 = 0xFFFFFFFF >>> (32 - a2);\n        t2U = s1U >>> a2;\n        t2L = (s1L >>> a2) | ((s1U & m2) << (32 - a2));\n        t1U = t1U ^ t2U;\n        t1L = t1L ^ t2L;\n        var a3 = 5;\n        var m3 = 0xFFFFFFFF >>> (32 - a3);\n        t2U = s0U >>> a3;\n        t2L = (s0L >>> a3) | ((s0U & m3) << (32 - a3));\n        t1U = t1U ^ t2U;\n        t1L = t1L ^ t2L;\n        this._state1U = t1U;\n        this._state1L = t1L;\n        return [resU, resL];\n    }\n    random() {\n        var t2 = this.randomint();\n        var t2U = t2[0];\n        var t2L = t2[1];\n        var eU = 0x3FF << (52 - 32);\n        var eL = 0;\n        var a1 = 12;\n        var m1 = 0xFFFFFFFF >>> (32 - a1);\n        var sU = t2U >>> a1;\n        var sL = (t2L >>> a1) | ((t2U & m1) << (32 - a1));\n        var xU = eU | sU;\n        var xL = eL | sL;\n        RandX._CONVERTION_BUFFER.setUint32(0, xU, false);\n        RandX._CONVERTION_BUFFER.setUint32(4, xL, false);\n        var d = RandX._CONVERTION_BUFFER.getFloat64(0, false);\n        return d - 1;\n    }\n}\nRandX._CONVERTION_BUFFER = new DataView(new ArrayBuffer(8));\nRandX.defaultRand = new RandX([0, Date.now() / 65536, 0, Date.now() % 65536]);\n","export class Collision {\n    constructor() {\n        this._lastUpdateFrame = -2147483648;\n        this._updateFrame = -2147483648;\n        this._isTrigger = false;\n        this.contacts = [];\n        this._inPool = false;\n    }\n    _setUpdateFrame(farme) {\n        this._lastUpdateFrame = this._updateFrame;\n        this._updateFrame = farme;\n    }\n}\n","import { Vector3 } from \"../../maths/Vector3\";\nexport class ContactPoint {\n    constructor() {\n        this._idCounter = 0;\n        this._colliderA = null;\n        this._colliderB = null;\n        this.distance = 0;\n        this.normal = new Vector3();\n        this.positionOnA = new Vector3();\n        this.positionOnB = new Vector3();\n        this._id = ++this._idCounter;\n    }\n}\n","export var ShadowLightType;\n(function (ShadowLightType) {\n    ShadowLightType[ShadowLightType[\"DirectionLight\"] = 0] = \"DirectionLight\";\n    ShadowLightType[ShadowLightType[\"SpotLight\"] = 1] = \"SpotLight\";\n    ShadowLightType[ShadowLightType[\"PointLight\"] = 2] = \"PointLight\";\n})(ShadowLightType || (ShadowLightType = {}));\n","import { Plane } from \"../math/Plane\";\nimport { BoundSphere } from \"../math/BoundSphere\";\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { BoundFrustum } from \"../math/BoundFrustum\";\nexport class CameraCullInfo {\n    constructor() {\n        this.boundFrustum = new BoundFrustum(new Matrix4x4());\n    }\n}\nexport class ShadowCullInfo {\n}\nexport class ShadowSpotData {\n    constructor() {\n        this.position = new Vector3;\n        this.viewMatrix = new Matrix4x4();\n        this.projectionMatrix = new Matrix4x4();\n        this.viewProjectMatrix = new Matrix4x4();\n        this.cameraShaderValue = LayaGL.renderDeviceFactory.createShaderData(null);\n        this.cameraCullInfo = new CameraCullInfo();\n    }\n    destroy() {\n        this.cameraShaderValue.destroy();\n        this.cameraShaderValue = null;\n        this.cameraCullInfo = null;\n    }\n}\nexport class ShadowSliceData {\n    constructor() {\n        this.position = new Vector3();\n        this.viewMatrix = new Matrix4x4();\n        this.projectionMatrix = new Matrix4x4();\n        this.viewProjectMatrix = new Matrix4x4();\n        this.cullPlanes = [new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0)];\n        this.splitBoundSphere = new BoundSphere(new Vector3(), 0.0);\n        this.cameraShaderValue = LayaGL.renderDeviceFactory.createShaderData(null);\n    }\n    destroy() {\n        this.cameraShaderValue.destroy();\n        this.cameraShaderValue = null;\n        this.cullPlanes = null;\n    }\n}\n","export class TextMesh {\n    get text() {\n        return this._text;\n    }\n    set text(value) {\n        this._text = value;\n    }\n    get fontSize() {\n        return this._fontSize;\n    }\n    set fontSize(value) {\n        this._fontSize = value;\n    }\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    constructor() {\n    }\n}\n","export class Physics3DUtils {\n}\nPhysics3DUtils.COLLISIONFILTERGROUP_DEFAULTFILTER = 0x1;\nPhysics3DUtils.COLLISIONFILTERGROUP_STATICFILTER = 0x2;\nPhysics3DUtils.COLLISIONFILTERGROUP_KINEMATICFILTER = 0x4;\nPhysics3DUtils.COLLISIONFILTERGROUP_DEBRISFILTER = 0x8;\nPhysics3DUtils.COLLISIONFILTERGROUP_SENSORTRIGGER = 0x10;\nPhysics3DUtils.COLLISIONFILTERGROUP_CHARACTERFILTER = 0x20;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER1 = 0x40;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER2 = 0x80;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER3 = 0x100;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER4 = 0x200;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER5 = 0x400;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER6 = 0x800;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER7 = 0x1000;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER8 = 0x2000;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER9 = 0x4000;\nPhysics3DUtils.COLLISIONFILTERGROUP_CUSTOMFILTER10 = 0x8000;\nPhysics3DUtils.COLLISIONFILTERGROUP_ALLFILTER = -1;\nPhysics3DUtils.PHYSXDEFAULTMASKVALUE = 0xffffffff;\n","import { RenderContext3D } from \"../core/render/RenderContext3D\";\nexport class Size {\n    static get fullScreen() {\n        return new Size(-1, -1);\n    }\n    get width() {\n        if (this._width === -1)\n            return RenderContext3D.clientWidth;\n        return this._width;\n    }\n    get height() {\n        if (this._height === -1)\n            return RenderContext3D.clientHeight;\n        return this._height;\n    }\n    constructor(width, height) {\n        this._width = 0;\n        this._height = 0;\n        this._width = width;\n        this._height = height;\n    }\n}\n"],"names":["Vector3","CullMode","BlendType","BlendFactor","BlendEquationSeparate","CompareFunction","StencilOperation","Material","Shader3D","PBRRenderQuality","Base64Tool","HDRTextureInfo","LayaGL","RenderCapable","Texture2D","TextureFormat","WrapMode","ShaderDataType","Vector2","Vector4","Color","Matrix4x4","BaseTexture","Matrix3x3","NotImplementedError","SubShader","PBRRenderMode","PBRMetallicSmoothnessSource","BaseRenderType","ENodeCustomData","VertexMesh","Component","StaticFlag","Node","ILaya","Event","Stat","volumeIntersectType","SingletonList","AmbientMode","ReflectionProbeMode","RenderBitFlag","IrradianceMode","NodeFlags","Config3D","VertexDeclaration","VertexElement","VertexElementFormat","RenderClearFlag","Viewport","FilterMode","Utils","_tempVector32","_tempVector30","_tempVector31","_tempVector34","_tempVector33","EventDispatcher","Quaternion","_tempMatrix0","MathUtils3D","MeshTopology","DrawType","BufferUsage","IndexFormat","BufferState","ShadowCascadesMode","_tempV30","_tempV31","_tempV32","_tempV33","_tempV34","_tempV35","_tempV36","FrustumCorner","ShadowMode","LightType","LightMode","ShadowMapFormat","RenderTargetFormat","RenderTexture","TextureCompareMode","DepthTextureMode","CameraClearFlags","CameraEventFlags","TextureCube","RenderPassStatisticsInfo","FastSinglelist","FogMode","Sprite","Config","Scene","SubmitKey","ComponentDriver","LayaEnv","Context","RenderTexture2D","NotReadableError","EPhysicsCapable","Resource","Loader","ShaderFeatureType","DepthVS","DepthFS","DepthNormalVS","DepthNormalFS","EPhysicsStatisticsInfo","ColorGradEffect","PlayerConfig","Laya","D6MotionType","D6Axis","D6Drive","ECharacterCapable","EColliderCapable","EJointCapable","RenderCMDType","FloatKeyframe","Vector3Keyframe","QuaternionKeyframe","KeyFrameValueType","Vector2Keyframe","Vector4Keyframe","BooleanKeyframe","WeightedMode","HalfFloatUtils","Byte","TextureCubeFace","AreaShape","tempVec","OutOfRangeError","ClassUtils","AnimatorUpdateMode","Delegate","AnimatorStateCondition","AniStateConditionType","AnimatorControllerParse","AniParmType","AnimatorStateBoolCondition","AnimatorStateNumberCondition","AnimatorStateTriggerCondition","MaterialRenderMode","tempMatrix","InputManager","AssetDb","internalResources","KTXTextureInfo","TextureDimension","URL","Texture2DArrayLoader","Texture2DArray","Browser","RenderParams","MeshLoader","RenderStateContext","Render","Script","InstanceLocation","ShadowLightType"],"mappings":"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G,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IAClF,QAAQ,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,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C,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACtN,YAAY,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACtN,YAAY,QAAQ,EAAE,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9M,YAAY,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,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"}