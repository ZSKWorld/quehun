{"version":3,"file":"laya.light2D.js","sources":["../../bin/tsc/layaAir/laya/Light2D/Light2DConfig.js","../../bin/tsc/layaAir/laya/Light2D/Light2DRenderByCmd.js","../../bin/tsc/layaAir/laya/Light2D/LightLine2D.js","../../bin/tsc/layaAir/laya/Light2D/PolygonPoint2D.js","../../bin/tsc/layaAir/laya/Light2D/LightOccluder2DCore.js","../../bin/tsc/layaAir/laya/Light2D/Occluder2DAgent.js","../../bin/tsc/layaAir/laya/Light2D/Shader/LightGen/lightGen.vs","../../bin/tsc/layaAir/laya/Light2D/Shader/LightGen/lightGen.fs","../../bin/tsc/layaAir/laya/Light2D/Shader/LightGen/LightGenShader2D.js","../../bin/tsc/layaAir/laya/Light2D/Shader/ShadowGen/shadowGen2D.vs","../../bin/tsc/layaAir/laya/Light2D/Shader/ShadowGen/shadowGen2D.fs","../../bin/tsc/layaAir/laya/Light2D/Shader/ShadowGen/ShadowGenShader2D.js","../../bin/tsc/layaAir/laya/Light2D/Shader/LightAndShadowGen/lightAndShadowGen2D.vs","../../bin/tsc/layaAir/laya/Light2D/Shader/LightAndShadowGen/lightAndShadowGen2D.fs","../../bin/tsc/layaAir/laya/Light2D/Shader/LightAndShadowGen/LightAndShadowGenShader2D.js","../../bin/tsc/layaAir/laya/Light2D/Shader/LightAndShadow.js","../../bin/tsc/layaAir/laya/Light2D/Light2DManager.js","../../bin/tsc/layaAir/laya/Light2D/BaseLight2D.js","../../bin/tsc/layaAir/laya/Light2D/DirectionLight2D.js","../../bin/tsc/layaAir/laya/Light2D/FreeformLight2D.js","../../bin/tsc/layaAir/laya/Light2D/LightOccluder2D.js","../../bin/tsc/layaAir/laya/Light2D/SpotLight2D.js","../../bin/tsc/layaAir/laya/Light2D/SpriteLight2D.js","../../bin/tsc/layaAir/laya/Light2D/ModuleDef.js","../../bin/tsc/layaAir/laya/Light2D/ShowRenderTarget.js"],"sourcesContent":["import { Color } from \"../maths/Color\";\nimport { Vector3 } from \"../maths/Vector3\";\nexport class Light2DConfig {\n    constructor() {\n        this.lightDirection = new Vector3(-1, 0, 1);\n        this.ambientColor = new Color(0.2, 0.2, 0.2, 0);\n        this.ambientLayerMask = -1;\n        this.multiSamples = 4;\n    }\n}\n","import { Color } from \"../maths/Color\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { RenderState } from \"../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../resource/Material\";\nimport { CommandBuffer2D } from \"../display/Scene2DSpecial/RenderCMD2D/CommandBuffer2D\";\nimport { DrawMesh2DCMD } from \"../display/Scene2DSpecial/RenderCMD2D/DrawMesh2DCMD\";\nimport { Set2DRTCMD } from \"../display/Scene2DSpecial/RenderCMD2D/Set2DRenderTargetCMD\";\nimport { Light2DMode } from \"./BaseLight2D\";\nimport { Light2DManager } from \"./Light2DManager\";\nexport class Light2DRenderRes {\n    constructor(scene, layer, invertY) {\n        this.lights = [];\n        this.textures = [];\n        this.material = [];\n        this.materialShadow = [];\n        this.lightMeshs = [];\n        this.shadowMeshs = [];\n        this.needShadowMesh = [];\n        this.sceneModeNum = [];\n        this.sceneModeList = [];\n        this._layer = 0;\n        this._invertY = false;\n        this._cmdLightMeshs = [];\n        this._cmdShadowMeshs = [];\n        this._cmdBuffer = new CommandBuffer2D('Light2DRender');\n        this._layer = layer;\n        this._invertY = invertY;\n    }\n    _initMaterial(material, shadow) {\n        if (shadow) {\n            material.setShaderName('ShadowGen2D');\n            material.setFloat('u_Shadow2DStrength', 0.5);\n            material.setColor('u_ShadowColor', new Color(0, 0, 0, 1));\n        }\n        else\n            material.setShaderName('LightAndShadowGen2D');\n        material.setColor('u_LightColor', new Color(1, 1, 1, 1));\n        material.setFloat('u_LightRotation', 0);\n        material.setFloat('u_LightIntensity', 1);\n        material.setFloat('u_PCFIntensity', 1);\n        material.setVector2('u_LightTextureSize', new Vector2(1, 1));\n        material.setVector2('u_LightScale', new Vector2(1, 1));\n        material.setBoolByIndex(Shader3D.DEPTH_WRITE, false);\n        material.setIntByIndex(Shader3D.DEPTH_TEST, RenderState.DEPTHTEST_OFF);\n        material.setIntByIndex(Shader3D.BLEND, RenderState.BLEND_ENABLE_SEPERATE);\n        material.setIntByIndex(Shader3D.BLEND_EQUATION_RGB, RenderState.BLENDEQUATION_ADD);\n        material.setIntByIndex(Shader3D.BLEND_SRC_RGB, RenderState.BLENDPARAM_ONE);\n        material.setIntByIndex(Shader3D.BLEND_DST_RGB, RenderState.BLENDPARAM_ONE);\n        material.setIntByIndex(Shader3D.BLEND_EQUATION_ALPHA, RenderState.BLENDEQUATION_ADD);\n        material.setIntByIndex(Shader3D.BLEND_SRC_ALPHA, RenderState.BLENDPARAM_ONE);\n        material.setIntByIndex(Shader3D.BLEND_DST_ALPHA, RenderState.BLENDPARAM_ONE);\n        material.setIntByIndex(Shader3D.CULL, RenderState.CULL_NONE);\n    }\n    setMaterialData(light, material, shadow) {\n        const pcfIntensity = light._pcfIntensity();\n        if (shadow) {\n            material.setColor('u_ShadowColor', light.shadowColor);\n            material.setFloat('u_Shadow2DStrength', light.shadowStrength);\n        }\n        material.setColor('u_LightColor', light.color);\n        material.setFloat('u_LightIntensity', light.intensity);\n        material.setFloat('u_LightRotation', light.lightRotation);\n        material.setVector2('u_LightScale', light.lightScale);\n        material.setVector2('u_LightTextureSize', light._getTextureSize());\n        material.setFloat('u_PCFIntensity', pcfIntensity);\n        if (Light2DManager.SUPPORT_LIGHT_BLEND_MODE) {\n            switch (light.lightMode) {\n                default:\n                case Light2DMode.Add:\n                    material.setIntByIndex(Shader3D.BLEND_EQUATION_RGB, RenderState.BLENDEQUATION_ADD);\n                    material.setIntByIndex(Shader3D.BLEND_SRC_RGB, RenderState.BLENDPARAM_ONE);\n                    material.setIntByIndex(Shader3D.BLEND_DST_RGB, RenderState.BLENDPARAM_ONE);\n                    break;\n                case Light2DMode.Sub:\n                    material.setIntByIndex(Shader3D.BLEND_EQUATION_RGB, RenderState.BLENDEQUATION_REVERSE_SUBTRACT);\n                    material.setIntByIndex(Shader3D.BLEND_SRC_RGB, RenderState.BLENDPARAM_ONE);\n                    material.setIntByIndex(Shader3D.BLEND_DST_RGB, RenderState.BLENDPARAM_ONE);\n                    break;\n                case Light2DMode.Mix:\n                    material.setIntByIndex(Shader3D.BLEND_EQUATION_RGB, RenderState.BLENDEQUATION_ADD);\n                    material.setIntByIndex(Shader3D.BLEND_SRC_RGB, RenderState.BLENDPARAM_ONE);\n                    material.setIntByIndex(Shader3D.BLEND_DST_RGB, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\n                    break;\n            }\n        }\n    }\n    addLights(lights, recover) {\n        const length = lights.length;\n        if (!Light2DManager.REUSE_MESH && recover)\n            this._needRecoverMesh(recover, length);\n        this.lights = lights;\n        this.textures.length = length;\n        this.lightMeshs.length = length;\n        this.shadowMeshs.length = length;\n        this.needShadowMesh.length = length;\n        this.sceneModeList.length = length;\n        for (let i = 0; i < 3; i++)\n            this.sceneModeNum[i] = 0;\n        for (let i = 0; i < length; i++) {\n            const light = lights[i];\n            const pcf = 1 / light._pcfIntensity() | 0;\n            if (!this.lightMeshs[i])\n                this.lightMeshs[i] = [];\n            this.lightMeshs[i].length = pcf;\n            if (!this.material[i]) {\n                this.material[i] = new Material();\n                this._initMaterial(this.material[i], false);\n            }\n            else\n                this.setMaterialData(light, this.material[i], false);\n            this.textures[i] = light._texLight;\n            this.sceneModeNum[light.sceneMode]++;\n            this.sceneModeList[i] = light.sceneMode;\n        }\n        for (let i = 0; i < length; i++) {\n            const light = lights[i];\n            if (light._isNeedShadowMesh()) {\n                if (!this.materialShadow[i]) {\n                    this.materialShadow[i] = new Material();\n                    this._initMaterial(this.materialShadow[i], true);\n                }\n                else\n                    this.setMaterialData(light, this.materialShadow[i], true);\n                this.needShadowMesh[i] = true;\n            }\n            else\n                this.needShadowMesh[i] = false;\n        }\n    }\n    updateLightPCF(light) {\n        for (let i = this.lights.length - 1; i > -1; i--) {\n            if (this.lights[i] === light) {\n                const pcf = 1 / light._pcfIntensity() | 0;\n                if (!this.lightMeshs[i])\n                    this.lightMeshs[i] = [];\n                this.lightMeshs[i].length = pcf;\n            }\n        }\n    }\n    _needRecoverMesh(recover, length) {\n        for (let i = this.lightMeshs.length - 1; i >= length; i--) {\n            if (this.lightMeshs[i]) {\n                const meshs = this.lightMeshs[i];\n                if (meshs[i]) {\n                    for (let j = meshs.length - 1; j > -1; j--) {\n                        recover.push(meshs[j]);\n                        meshs[j] = null;\n                    }\n                }\n            }\n        }\n        for (let i = this.shadowMeshs.length - 1; i >= length; i--) {\n            if (this.shadowMeshs[i]) {\n                recover.push(this.shadowMeshs[i]);\n                this.shadowMeshs[i] = null;\n            }\n        }\n    }\n    setRenderTargetCMD(rt, rtAdd, rtSub) {\n        if (!this._cmdRT)\n            this._cmdRT = Set2DRTCMD.create(rt, true, Color.CLEAR, this._invertY);\n        else\n            this._cmdRT.renderTexture = rt;\n        if (Light2DManager.SUPPORT_LIGHT_SCENE_MODE) {\n            if (!this._cmdRTAdd) {\n                if (rtAdd)\n                    this._cmdRTAdd = Set2DRTCMD.create(rtAdd, true, Color.CLEAR, this._invertY);\n            }\n            else\n                this._cmdRTAdd.renderTexture = rtAdd;\n            if (!this._cmdRTSub) {\n                if (rtSub)\n                    this._cmdRTSub = Set2DRTCMD.create(rtSub, true, Color.CLEAR, this._invertY);\n            }\n            else\n                this._cmdRTSub.renderTexture = rtSub;\n        }\n    }\n    buildRenderMeshCMD() {\n        for (let i = this._cmdLightMeshs.length - 1; i > -1; i--) {\n            const cmds = this._cmdLightMeshs[i];\n            for (let j = cmds.length - 1; j > -1; j--)\n                cmds[j].recover();\n            cmds.length = 0;\n        }\n        this._cmdLightMeshs.length = 0;\n        for (let i = this._cmdShadowMeshs.length - 1; i > -1; i--)\n            if (this._cmdShadowMeshs[i])\n                this._cmdShadowMeshs[i].recover();\n        this._cmdShadowMeshs.length = 0;\n        const mat = Matrix.EMPTY;\n        for (let i = 0, len = this.lightMeshs.length; i < len; i++) {\n            const meshs = this.lightMeshs[i];\n            const cmds = this._cmdLightMeshs[i] = [];\n            for (let j = meshs.length - 1; j > -1; j--)\n                cmds.push(DrawMesh2DCMD.create(meshs[j], mat, this.textures[i], Color.WHITE, this.material[i]));\n        }\n        for (let i = 0, len = this.shadowMeshs.length; i < len; i++) {\n            if (this.needShadowMesh[i])\n                this._cmdShadowMeshs.push(DrawMesh2DCMD.create(this.shadowMeshs[i], mat, this.textures[i], Color.WHITE, this.materialShadow[i]));\n            else\n                this._cmdShadowMeshs.push(null);\n        }\n    }\n    updateMaterial() {\n        for (let i = 0, len = this._cmdLightMeshs.length; i < len; i++) {\n            const cmds = this._cmdLightMeshs[i];\n            for (let j = 0, len = cmds.length; j < len; j++) {\n                cmds[j].texture = this.textures[i];\n                cmds[j].material = this.material[i];\n            }\n        }\n        for (let i = 0, len = this._cmdShadowMeshs.length; i < len; i++) {\n            if (this._cmdShadowMeshs[i]) {\n                this._cmdShadowMeshs[i].texture = this.textures[i];\n                this._cmdShadowMeshs[i].material = this.materialShadow[i];\n            }\n        }\n    }\n    updateLightMesh(mesh, i, j) {\n        this.lightMeshs[i][j] = mesh;\n        if (Light2DManager.REUSE_CMD) {\n            if (this._cmdLightMeshs[i] && this._cmdLightMeshs[i][j])\n                this._cmdLightMeshs[i][j].mesh = mesh;\n        }\n    }\n    updateShadowMesh(mesh, i) {\n        this.shadowMeshs[i] = mesh;\n        if (Light2DManager.REUSE_CMD) {\n            if (this._cmdShadowMeshs[i])\n                this._cmdShadowMeshs[i].mesh = mesh;\n        }\n    }\n    enableShadow(light, recover) {\n        const layer = this._layer;\n        for (let i = this.lights.length - 1; i > -1; i--) {\n            if (this.lights[i] === light) {\n                this.needShadowMesh[i] = false;\n                if (!light.shadowEnable\n                    || !light._isNeedShadowMesh()\n                    || (light.shadowLayerMask & (1 << layer)) === 0) {\n                    if (!Light2DManager.REUSE_MESH\n                        && recover && this.shadowMeshs[i])\n                        recover.push(this.shadowMeshs[i]);\n                    this.shadowMeshs[i] = null;\n                    if (Light2DManager.REUSE_CMD) {\n                        if (this._cmdShadowMeshs[i]) {\n                            this._cmdShadowMeshs[i].recover();\n                            this._cmdShadowMeshs[i] = null;\n                        }\n                    }\n                }\n                else {\n                    if (Light2DManager.REUSE_CMD) {\n                        if (!this._cmdShadowMeshs[i])\n                            this._cmdShadowMeshs[i] = DrawMesh2DCMD.create(this.shadowMeshs[i], Matrix.EMPTY, this.textures[i], Color.WHITE, this.materialShadow[i]);\n                    }\n                    if (!this.materialShadow[i]) {\n                        this.materialShadow[i] = new Material();\n                        this._initMaterial(this.materialShadow[i], true);\n                    }\n                    this.needShadowMesh[i] = true;\n                }\n                return;\n            }\n        }\n    }\n    render(rt, rtAdd, rtSub) {\n        const length = this.lights.length;\n        if (Light2DManager.REUSE_CMD) {\n            const _render = (srt, mode) => {\n                this._cmdBuffer.addCacheCommand(srt);\n                for (let i = 0; i < length; i++) {\n                    if (!Light2DManager.SUPPORT_LIGHT_SCENE_MODE\n                        || this.sceneModeList[i] === mode) {\n                        const cmds = this._cmdLightMeshs[i];\n                        for (let j = 0, len = cmds.length; j < len; j++) {\n                            const cmd = cmds[j];\n                            if (cmd.mesh && cmd.material)\n                                this._cmdBuffer.addCacheCommand(cmd);\n                        }\n                        const cmd = this._cmdShadowMeshs[i];\n                        if (cmd && cmd.mesh && cmd.material)\n                            this._cmdBuffer.addCacheCommand(cmd);\n                    }\n                }\n                this._cmdBuffer.apply(true);\n                this._cmdBuffer.clear(false);\n            };\n            if (this._cmdRT)\n                _render(this._cmdRT, Light2DMode.Mul);\n            if (Light2DManager.SUPPORT_LIGHT_SCENE_MODE) {\n                if (this._cmdRTAdd && this.sceneModeNum[Light2DMode.Add] > 0)\n                    _render(this._cmdRTAdd, Light2DMode.Add);\n                if (this._cmdRTSub && this.sceneModeNum[Light2DMode.Sub] > 0)\n                    _render(this._cmdRTSub, Light2DMode.Sub);\n            }\n        }\n        else {\n            const _render = (rtt, mode) => {\n                this._cmdBuffer.setRenderTarget(rtt, true, Color.CLEAR, this._invertY);\n                for (let i = 0; i < length; i++) {\n                    if (!Light2DManager.SUPPORT_LIGHT_SCENE_MODE\n                        || this.sceneModeList[i] === mode) {\n                        const meshs = this.lightMeshs[i];\n                        for (let j = 0, len = meshs.length; j < len; j++)\n                            if (meshs[j] && this.material[i])\n                                this._cmdBuffer.drawMesh(meshs[j], mat, this.textures[i], Color.WHITE, this.material[i]);\n                        const mesh = this.shadowMeshs[i];\n                        if (mesh && this.materialShadow[i])\n                            this._cmdBuffer.drawMesh(mesh, mat, this.textures[i], Color.WHITE, this.materialShadow[i]);\n                    }\n                }\n                this._cmdBuffer.apply(true);\n                this._cmdBuffer.clear(true);\n            };\n            const mat = Matrix.EMPTY;\n            _render(rt, Light2DMode.Mul);\n            if (Light2DManager.SUPPORT_LIGHT_SCENE_MODE) {\n                if (this.sceneModeNum[Light2DMode.Add] > 0)\n                    _render(rtAdd, Light2DMode.Add);\n                if (this.sceneModeNum[Light2DMode.Sub] > 0)\n                    _render(rtSub, Light2DMode.Sub);\n            }\n        }\n    }\n}\n","import { Vector2 } from \"../maths/Vector2\";\nexport class LightLine2D {\n    constructor() {\n        this.useNormal = false;\n    }\n    create(ax, ay, bx, by, useNormal = false) {\n        this.a ? this.a.setValue(ax, ay) : this.a = new Vector2(ax, ay);\n        this.b ? this.b.setValue(bx, by) : this.b = new Vector2(bx, by);\n        if (useNormal) {\n            let n = this.n;\n            n ? n.setValue(by - ay, ax - bx)\n                : n = this.n = new Vector2(by - ay, ax - bx);\n            Vector2.normalize(n, n);\n        }\n        this.useNormal = useNormal;\n        return this;\n    }\n}\n","export class PolygonPoint2D {\n    constructor(points) {\n        this._points = [];\n        if (points)\n            this._points.push(...points);\n    }\n    get points() {\n        return this._points;\n    }\n    set points(value) {\n        this._points = value;\n    }\n    addPoint(x, y, index = -1) {\n        if (index < 0) {\n            this._points.push(x, y);\n        }\n        else {\n            for (let i = this._points.length; i > index; i--)\n                this._points[i] = this._points[i - 1];\n            this._points[index * 2 + 0] = x;\n            this._points[index * 2 + 1] = y;\n        }\n    }\n    updatePoint(x, y, index) {\n        if (index < (this._points.length / 2 | 0) && index >= 0) {\n            this._points[index * 2 + 0] = x;\n            this._points[index * 2 + 1] = y;\n        }\n    }\n    removePoint(index) {\n        if (index < this._points.length && index >= 0)\n            this._points.splice(index, 1);\n    }\n    clear() {\n        this._points.length = 0;\n    }\n    clone() {\n        const poly = new PolygonPoint2D();\n        poly._points.push(...this._points);\n        return poly;\n    }\n    cloneTo(other) {\n        other._points.length = 0;\n        other._points.push(...this._points);\n        return other;\n    }\n}\n","import { ILaya } from \"../../ILaya\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Pool } from \"../utils/Pool\";\nimport { Light2DManager } from \"./Light2DManager\";\nimport { LightLine2D } from \"./LightLine2D\";\nimport { PolygonPoint2D } from \"./PolygonPoint2D\";\nexport class LightOccluder2DCore {\n    set owner(value) {\n        this._owner = value;\n    }\n    set manager(value) {\n        this._manager = value;\n    }\n    get layerMask() {\n        return this._layerMask;\n    }\n    set layerMask(value) {\n        if (value !== this._layerMask) {\n            this._layerMaskChange(this._layerMask, value);\n            this._layerMask = value;\n            this._layers.length = 0;\n            for (let i = 0; i < Light2DManager.MAX_LAYER; i++)\n                if (value & (1 << i))\n                    this._layers.push(i);\n        }\n    }\n    get layers() {\n        return this._layers;\n    }\n    get canInLight() {\n        return this._canInLight;\n    }\n    set canInLight(value) {\n        if (value !== this._canInLight) {\n            this._canInLight = value;\n            this._needUpdate = true;\n        }\n    }\n    get outside() {\n        return this._outside;\n    }\n    set outside(value) {\n        if (value !== this._outside) {\n            this._outside = value;\n            this._needUpdate = true;\n            this._clearCache();\n        }\n    }\n    get needUpdate() {\n        return this._needUpdate;\n    }\n    set needUpdate(value) {\n        this._needUpdate = value;\n    }\n    constructor(manager) {\n        this._layerMask = 1;\n        this._layers = [0];\n        this._x = 0;\n        this._y = 0;\n        this._scaleX = 1;\n        this._scaleY = 2;\n        this._skewX = 0;\n        this._skewY = 0;\n        this._rotation = 0;\n        this._tfChanged = true;\n        this._sceneMatrix = new Matrix();\n        this._canInLight = true;\n        this._outside = true;\n        this._occluderId = 0;\n        this._localRange = new Rectangle();\n        this._worldRange = new Rectangle();\n        this._needUpdate = false;\n        this._needTransformPoly = false;\n        this._needUpdateLightLocalRange = false;\n        this._needUpdateLightWorldRange = false;\n        this._select = false;\n        this._outsideSegment = [];\n        this._segments = [];\n        this._segLight = new Vector2();\n        this._tempVec2 = new Vector2();\n        this._manager = manager;\n        this._occluderId = LightOccluder2DCore._idCounter++;\n    }\n    _onEnable() {\n        var _a;\n        (_a = this._manager) === null || _a === void 0 ? void 0 : _a.addOccluder(this);\n    }\n    _onDisable() {\n        var _a;\n        (_a = this._manager) === null || _a === void 0 ? void 0 : _a.removeOccluder(this);\n    }\n    pos(x, y) {\n        if (this._x != x || this._y != y) {\n            this._x = x;\n            this._y = y;\n            this._tfChanged = true;\n            this._transformChange();\n        }\n        return this;\n    }\n    scale(x, y) {\n        if (this._scaleX !== x || this._scaleY !== y) {\n            this._scaleX = x;\n            this._scaleY = y;\n            this._tfChanged = true;\n            this._transformChange();\n        }\n        return this;\n    }\n    skew(x, y) {\n        if (this._skewX !== x || this._skewY !== y) {\n            this._skewX = x;\n            this._skewY = y;\n            this._tfChanged = true;\n            this._transformChange();\n        }\n        return this;\n    }\n    get x() {\n        return this._x;\n    }\n    set x(value) {\n        this.pos(value, this._y);\n    }\n    get y() {\n        return this._y;\n    }\n    set y(value) {\n        this.pos(this._x, value);\n    }\n    get scaleX() {\n        return this._scaleX;\n    }\n    set scaleX(value) {\n        this.scale(value, this._scaleY);\n    }\n    get scaleY() {\n        return this._scaleY;\n    }\n    set scaleY(value) {\n        this.scale(this._scaleX, value);\n    }\n    get skewX() {\n        return this._skewX;\n    }\n    set skewX(value) {\n        this.skew(value, this._skewX);\n    }\n    get skewY() {\n        return this._skewY;\n    }\n    set skewY(value) {\n        this.skew(this._skewX, value);\n    }\n    get rotation() {\n        return this._rotation;\n    }\n    set rotation(value) {\n        if (this._rotation !== value) {\n            this._rotation = value;\n            this._tfChanged = true;\n            this._transformChange();\n        }\n    }\n    get transform() {\n        if (!this._tfChanged)\n            return this._transform;\n        this._tfChanged = false;\n        const m = this._transform || (this._transform = new Matrix());\n        const sx = this._scaleX;\n        const sy = this._scaleY;\n        const sskx = this._skewX;\n        const ssky = this._skewY;\n        const rot = this._rotation;\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\n            m._bTransform = true;\n            const skx = (rot - sskx) * 0.0174532922222222;\n            const sky = (rot + ssky) * 0.0174532922222222;\n            const cx = Math.cos(sky);\n            const ssx = Math.sin(sky);\n            const cy = Math.sin(skx);\n            const ssy = Math.cos(skx);\n            m.a = sx * cx;\n            m.b = sx * ssx;\n            m.c = -sy * cy;\n            m.d = sy * ssy;\n            m.tx = m.ty = 0;\n        }\n        else\n            m.identity();\n        return m;\n    }\n    set transform(value) {\n        this._tfChanged = false;\n        const m = this._transform || (this._transform = new Matrix());\n        if (value !== m)\n            value.copyTo(m);\n        if (value) {\n            this._x = m.tx;\n            this._y = m.ty;\n            m.tx = m.ty = 0;\n        }\n    }\n    _layerMaskChange(oldLayerMask, newLayerMask) {\n        var _a;\n        (_a = this._manager) === null || _a === void 0 ? void 0 : _a.occluderLayerMaskChange(this, oldLayerMask, newLayerMask);\n    }\n    _transformChange() {\n        var _a;\n        this._needUpdate = true;\n        this._needTransformPoly = true;\n        this._needUpdateLightWorldRange = true;\n        (_a = this._manager) === null || _a === void 0 ? void 0 : _a.needCollectOccluderInLight(this.layerMask);\n    }\n    set polygonPoint(poly) {\n        var _a, _b, _c;\n        if (poly) {\n            this._occluderPolygon = poly;\n            this._globalPolygon = poly.clone();\n            if (!this._cutPolygon)\n                this._cutPolygon = new PolygonPoint2D();\n            else\n                this._cutPolygon.clear();\n            this._needUpdate = true;\n            this._needTransformPoly = true;\n            this._needUpdateLightLocalRange = true;\n            this._needUpdateLightWorldRange = true;\n            (_a = this._manager) === null || _a === void 0 ? void 0 : _a.addOccluder(this);\n        }\n        else {\n            this._occluderPolygon = null;\n            this._globalPolygon = null;\n            if (this._cutPolygon)\n                this._cutPolygon.clear();\n            (_b = this._manager) === null || _b === void 0 ? void 0 : _b.removeOccluder(this);\n        }\n        (_c = this._manager) === null || _c === void 0 ? void 0 : _c.needCollectOccluderInLight(this.layerMask);\n    }\n    get polygonPoint() {\n        return this._occluderPolygon;\n    }\n    _clearCache() {\n        const segments = this._segments;\n        for (let i = segments.length - 1; i > -1; i--)\n            Pool.recover('LightLine2D', segments[i]);\n        segments.length = 0;\n        this._segLight.x = Number.POSITIVE_INFINITY;\n        this._segLight.y = Number.POSITIVE_INFINITY;\n    }\n    getSegment(lightX, lightY) {\n        if (this._needTransformPoly) {\n            this._needTransformPoly = false;\n            this._transformPoly();\n        }\n        lightX |= 0;\n        lightY |= 0;\n        if (this._segLight.x === lightX && this._segLight.y === lightY) {\n            if (Light2DManager.DEBUG)\n                console.log('get segments cache', lightX, lightY);\n            return this._segments;\n        }\n        if (this._globalPolygon) {\n            const seg = this._outsideSegment;\n            const poly = this._globalPolygon.points;\n            const half = this._cutPolygon.points;\n            const len = poly.length / 2 | 0;\n            this._segLight.x = lightX;\n            this._segLight.y = lightY;\n            const segments = this._segments;\n            for (let i = segments.length - 1; i > -1; i--)\n                Pool.recover('LightLine2D', segments[i]);\n            segments.length = 0;\n            if (!this.outside) {\n                if (len > 1) {\n                    for (let i = 0; i < len; i++) {\n                        const index1 = i * 2;\n                        const index2 = ((i + 1) % len) * 2;\n                        segments.push(Pool.getItemByClass('LightLine2D', LightLine2D).create(poly[index1], poly[index1 + 1], poly[index2], poly[index2 + 1]));\n                    }\n                }\n            }\n            else {\n                let a = 0;\n                if (seg.length > 0) {\n                    for (let i = 0, n = seg.length; i < n; i++) {\n                        a = seg[i];\n                        if (a >= 0) {\n                            const index1 = a * 2;\n                            const index2 = ((a + 1) % len) * 2;\n                            segments.push(Pool.getItemByClass('LightLine2D', LightLine2D).create(poly[index1], poly[index1 + 1], poly[index2], poly[index2 + 1]));\n                        }\n                        else {\n                            a = (-a - 1) * 2;\n                            const index1 = a * 2;\n                            const index2 = ((a + 1) % len) * 2;\n                            segments.push(Pool.getItemByClass('LightLine2D', LightLine2D).create(half[index1], half[index1 + 1], half[index2], half[index2 + 1]));\n                        }\n                    }\n                }\n            }\n        }\n        if (Light2DManager.DEBUG)\n            console.log('calc occluder segments', lightX, lightY);\n        return this._segments;\n    }\n    _calcLocalRange() {\n        if (this._occluderPolygon) {\n            const poly = this._occluderPolygon.points;\n            let minX = Number.POSITIVE_INFINITY;\n            let minY = Number.POSITIVE_INFINITY;\n            let maxX = Number.NEGATIVE_INFINITY;\n            let maxY = Number.NEGATIVE_INFINITY;\n            for (let i = poly.length - 2; i > -1; i -= 2) {\n                const x = poly[i + 0];\n                const y = poly[i + 1];\n                if (minX > x)\n                    minX = x;\n                if (maxX < x)\n                    maxX = x;\n                if (minY > y)\n                    minY = y;\n                if (maxY < y)\n                    maxY = y;\n            }\n            this._localRange.x = minX;\n            this._localRange.y = minY;\n            this._localRange.width = maxX - minX;\n            this._localRange.height = maxY - minY;\n        }\n        this._needUpdateLightLocalRange = false;\n    }\n    _calcWorldRange() {\n        if (this._needTransformPoly) {\n            this._needTransformPoly = false;\n            this._transformPoly();\n        }\n        if (this._globalPolygon) {\n            let xmin = Number.POSITIVE_INFINITY;\n            let ymin = Number.POSITIVE_INFINITY;\n            let xmax = Number.NEGATIVE_INFINITY;\n            let ymax = Number.NEGATIVE_INFINITY;\n            const polygon = this._globalPolygon.points;\n            for (let i = polygon.length - 2; i > -1; i -= 2) {\n                const x = polygon[i + 0];\n                const y = polygon[i + 1];\n                if (xmin > x)\n                    xmin = x;\n                if (xmax < x)\n                    xmax = x;\n                if (ymin > y)\n                    ymin = y;\n                if (ymax < y)\n                    ymax = y;\n            }\n            this._worldRange.x = xmin;\n            this._worldRange.y = ymin;\n            this._worldRange.width = xmax - xmin;\n            this._worldRange.height = ymax - ymin;\n        }\n        this._needUpdateLightWorldRange = false;\n    }\n    _getRange() {\n        if (this._needUpdateLightLocalRange)\n            this._calcLocalRange();\n        if (this._needUpdateLightWorldRange)\n            this._calcWorldRange();\n        return this._worldRange;\n    }\n    isInLightRange(range) {\n        return this._getRange().intersects(range);\n    }\n    selectByLight(x, y) {\n        if (this._occluderPolygon) {\n            if (!this.canInLight) {\n                if (this._needTransformPoly) {\n                    this._needTransformPoly = false;\n                    this._transformPoly();\n                }\n                let intersections = 0;\n                const poly = this._globalPolygon.points;\n                const len = poly.length / 2 | 0;\n                for (let i = 0; i < len; i++) {\n                    const currentX = poly[i * 2 + 0];\n                    const currentY = poly[i * 2 + 1];\n                    const nextX = poly[((i + 1) % len) * 2 + 0];\n                    const nextY = poly[((i + 1) % len) * 2 + 1];\n                    const cx = currentX;\n                    const cy = currentY;\n                    const nx = nextX;\n                    const ny = nextY;\n                    if ((cy > y) !== (ny > y)) {\n                        const intersectX = ((nx - cx) * (y - cy)) / (ny - cy) + cx;\n                        if (x < intersectX)\n                            intersections++;\n                    }\n                }\n                if ((intersections % 2) === 1)\n                    this._select = false;\n                else\n                    this._select = true;\n            }\n            else\n                this._select = true;\n            if (this._select && this.outside)\n                this._selectOutside(this._globalPolygon.points, x, y, this._outsideSegment);\n        }\n        return this._select;\n    }\n    _transformPoly() {\n        if (this._globalPolygon) {\n            let px = this._x;\n            let py = this._y;\n            let sx = this._scaleX;\n            let sy = this._scaleY;\n            if (this._owner) {\n                const mm = ILaya.stage.transform;\n                const pp = this._owner.globalTrans.getScenePos(Point.TEMP);\n                px = mm.a * pp.x + mm.c * pp.y + mm.tx;\n                py = mm.b * pp.x + mm.d * pp.y + mm.ty;\n                this._owner.globalTrans.getSceneScale(pp);\n                sx = Math.abs(pp.x * mm.getScaleX());\n                sy = Math.abs(pp.y * mm.getScaleY());\n            }\n            const globalPoly = this._globalPolygon.points;\n            const polygon = this._occluderPolygon.points;\n            const len = polygon.length / 2 | 0;\n            let m = this._owner ? this._owner.globalTrans.getSceneMatrix(this._sceneMatrix) : this.transform;\n            Matrix.mul(ILaya.stage.transform, m, this._sceneMatrix);\n            m = this._sceneMatrix;\n            if (m) {\n                for (let i = 0; i < len; i++) {\n                    const x = polygon[i * 2 + 0];\n                    const y = polygon[i * 2 + 1];\n                    globalPoly[i * 2 + 0] = m.a * x + m.c * y + px;\n                    globalPoly[i * 2 + 1] = m.b * x + m.d * y + py;\n                }\n            }\n            else {\n                for (let i = 0; i < len; i++) {\n                    const x = polygon[i * 2 + 0];\n                    const y = polygon[i * 2 + 1];\n                    globalPoly[i * 2 + 0] = x * sx + px;\n                    globalPoly[i * 2 + 1] = y * sy + py;\n                }\n            }\n            this._clearCache();\n        }\n    }\n    _selectOutside(polygon, outsidePointX, outsidePointY, outPoly) {\n        let abX = 0, abY = 0, cdX = 0, cdY = 0, acX = 0, acY = 0, det = 0, t = 0, u = 0;\n        const _intersect = (ax, ay, bx, by, cx, cy, dx, dy, e) => {\n            abX = bx - ax;\n            abY = by - ay;\n            cdX = cx - dx;\n            cdY = cy - dy;\n            det = abX * cdY - abY * cdX;\n            if (Math.abs(det) < Number.EPSILON)\n                return false;\n            acX = cx - ax;\n            acY = cy - ay;\n            t = (acX * cdY - acY * cdX) / det;\n            u = (acX * abY - acY * abX) / det;\n            if (t >= 0 && t <= 1 && u > 0) {\n                e.x = ax + t * abX;\n                e.y = ay + t * abY;\n                if (Math.abs(e.x - cx) > Number.EPSILON || Math.abs(e.y - cy) > Number.EPSILON)\n                    return true;\n            }\n            return false;\n        };\n        const _clockwise = (ax, ay, bx, by, cx, cy) => {\n            return ((bx - ax) * (cy - ay) - (by - ay) * (cx - ax)) > 0;\n        };\n        outPoly.length = 0;\n        const cutPoly = this._cutPolygon.points;\n        cutPoly.length = 0;\n        const n = polygon.length / 2 | 0;\n        const outPoint = this._tempVec2;\n        let p1x = 0, p1y = 0, p2x = 0, p2y = 0;\n        let interP1 = false, interP2 = false;\n        for (let i = 0; i < n; i++) {\n            p1x = polygon[i * 2 + 0];\n            p1y = polygon[i * 2 + 1];\n            p2x = polygon[((i + 1) % n) * 2 + 0];\n            p2y = polygon[((i + 1) % n) * 2 + 1];\n            interP1 = false;\n            interP2 = false;\n            if (!_clockwise(p1x, p1y, p2x, p2y, outsidePointX, outsidePointY)) {\n                interP1 = true;\n                interP2 = true;\n            }\n            else {\n                for (let j = 0; j < n; j++) {\n                    if (i !== j) {\n                        if (_intersect(polygon[j * 2], polygon[j * 2 + 1], polygon[((j + 1) % n) * 2], polygon[((j + 1) % n) * 2 + 1], p1x, p1y, outsidePointX, outsidePointY, outPoint)) {\n                            interP1 = true;\n                            break;\n                        }\n                    }\n                }\n                for (let j = 0; j < n; j++) {\n                    if (i !== j) {\n                        if (_intersect(polygon[j * 2], polygon[j * 2 + 1], polygon[((j + 1) % n) * 2], polygon[((j + 1) % n) * 2 + 1], p2x, p2y, outsidePointX, outsidePointY, outPoint)) {\n                            interP2 = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!interP1 && !interP2)\n                outPoly.push(i);\n            if (!interP1 && interP2) {\n                const inter = this._findNearestIntersection(p1x, p1y, p2x, p2y, outsidePointX, outsidePointY, polygon);\n                if (inter) {\n                    cutPoly.push(p1x, p1y, inter.x, inter.y);\n                    outPoly.push(-cutPoly.length / 4);\n                }\n            }\n            if (interP1 && !interP2) {\n                const inter = this._findNearestIntersection(p2x, p2y, p1x, p1y, outsidePointX, outsidePointY, polygon);\n                if (inter) {\n                    cutPoly.push(inter.x, inter.y, p2x, p2y);\n                    outPoly.push(-cutPoly.length / 4);\n                }\n            }\n        }\n    }\n    _findNearestIntersection(p1x, p1y, p2x, p2y, outsidePointX, outsidePointY, points) {\n        const _distanceBetween = (v1x, v1y, v2x, v2y) => {\n            const dx = v1x - v2x;\n            const dy = v1y - v2y;\n            return Math.sqrt(dx * dx + dy * dy);\n        };\n        const _lineIntersection = (p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y, out) => {\n            const x1 = p1x, y1 = p1y;\n            const x2 = p2x, y2 = p2y;\n            const x3 = p3x, y3 = p3y;\n            const x4 = p4x, y4 = p4y;\n            const denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n            if (denom === 0)\n                return false;\n            const ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\n            const ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\n            if (ua <= 0 || ua >= 1 || ub <= 0 || ub >= 1)\n                return false;\n            out.x = x1 + ua * (x2 - x1);\n            out.y = y1 + ua * (y2 - y1);\n            return true;\n        };\n        let nearestPoint = null;\n        let minDistance = Infinity;\n        let intersection = new Vector2();\n        let distance = 0;\n        for (let i = points.length - 2; i > -1; i -= 2) {\n            if (_lineIntersection(p1x, p1y, p2x, p2y, outsidePointX, outsidePointY, points[i], points[i + 1], intersection)) {\n                distance = _distanceBetween(intersection.x, intersection.y, p1x, p1y);\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    nearestPoint = intersection;\n                }\n            }\n        }\n        return nearestPoint;\n    }\n    destroy() {\n        this._onDisable();\n        this.owner = null;\n        this.manager = null;\n    }\n}\nLightOccluder2DCore._idCounter = 0;\n","import { LightOccluder2DCore } from \"./LightOccluder2DCore\";\nimport { PolygonPoint2D } from \"./PolygonPoint2D\";\nexport class Occluder2DAgent {\n    constructor(manager) {\n        this._occluderMap = new Map();\n        this._manager = manager;\n    }\n    addOccluder(index, param) {\n        var _a, _b, _c, _d, _e, _f;\n        let polygon;\n        let occluder = this._occluderMap.get(index);\n        const poly = param.poly;\n        const layerMask = (_a = param.layerMask) !== null && _a !== void 0 ? _a : 1;\n        const px = (_b = param.px) !== null && _b !== void 0 ? _b : 0;\n        const py = (_c = param.py) !== null && _c !== void 0 ? _c : 0;\n        const sx = (_d = param.sx) !== null && _d !== void 0 ? _d : 1;\n        const sy = (_e = param.sy) !== null && _e !== void 0 ? _e : 1;\n        const rot = (_f = param.rot) !== null && _f !== void 0 ? _f : 0;\n        if (poly instanceof Array) {\n            polygon = new PolygonPoint2D();\n            for (let i = 0, len = poly.length; i < len; i += 2)\n                polygon.addPoint(poly[i], poly[i + 1]);\n        }\n        else\n            polygon = poly;\n        if (!occluder) {\n            occluder = new LightOccluder2DCore();\n            occluder.manager = this._manager;\n            occluder._onEnable();\n            this._occluderMap.set(index, occluder);\n        }\n        occluder.pos(px, py);\n        occluder.scale(sx, sy);\n        occluder.rotation = rot;\n        occluder.polygonPoint = polygon;\n        occluder.layerMask = layerMask;\n        return occluder;\n    }\n    getOccluder(index) {\n        return this._occluderMap.get(index);\n    }\n    setPos(index, x, y) {\n        const occluder = this._occluderMap.get(index);\n        if (occluder)\n            occluder.pos(x, y);\n        return occluder;\n    }\n    setRot(index, rot) {\n        const occluder = this._occluderMap.get(index);\n        if (occluder)\n            occluder.rotation = rot;\n        return occluder;\n    }\n    setScale(index, x, y) {\n        const occluder = this._occluderMap.get(index);\n        if (occluder)\n            occluder.scale(x, y);\n        return occluder;\n    }\n    removeOccluder(index) {\n        const occluder = this._occluderMap.get(index);\n        if (occluder)\n            occluder.destroy();\n        return this._occluderMap.delete(index);\n    }\n    clearOccluder() {\n        this._occluderMap.forEach(occluder => occluder.destroy());\n        this._occluderMap.clear();\n    }\n}\n","#define SHADER_NAME FreeformLight_VS\n#include \"Sprite2DVertex.glsl\";\n\nvoid main() {\n\tv_texcoord = a_uv;\n    gl_Position = vec4((a_position.x / u_baseRenderSize2D.x - 0.5) * 2.0, (a_position.y / u_baseRenderSize2D.y - 0.5) * 2.0, 0.0, 1.0);\n    #ifdef INVERTY\n        gl_Position.y = -gl_Position.y;\n    #endif\n}","#define SHADER_NAME FreeformLight_PS\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#include \"Sprite2DFrag.glsl\";\n\nvoid main()\n{\n    gl_FragColor = vec4(v_texcoord.x);\n}","import lightGen_vs from './lightGen.vs';\nimport lightGen_ps from './lightGen.fs';\nimport { SubShader } from '../../../RenderEngine/RenderShader/SubShader';\nimport { ShaderDataType } from '../../../RenderDriver/DriverDesign/RenderDevice/ShaderData';\nimport { Shader3D, ShaderFeatureType } from '../../../RenderEngine/RenderShader/Shader3D';\nexport class LightGenShader2D {\n    static __init__() {\n        this.renderShader = Shader3D.add('LightGen2D', false, false);\n        this.renderShader.shaderType = ShaderFeatureType.DEFAULT;\n        const subShader = new SubShader(this.RenderAttribute, {}, {});\n        this.renderShader.addSubShader(subShader);\n        subShader.addShaderPass(lightGen_vs, lightGen_ps);\n    }\n}\nLightGenShader2D.RenderAttribute = {\n    'a_position': [0, ShaderDataType.Vector4],\n    'a_uv': [2, ShaderDataType.Vector2],\n};\n","#define SHADER_NAME ShadowGen2D_VS\n\n#include \"Sprite2DVertex.glsl\";\n\n//对UV坐标进行旋转和放缩\nvec2 rotateAndScaleUV(vec2 uv, float rotation, vec2 scale)\n{\n    vec2 mid = vec2(0.5);\n    float c = cos(rotation);\n    float s = sin(rotation);\n    vec2 ret = vec2(\n      c * (uv.x - mid.x) + s * (uv.y - mid.y) + mid.x,\n      c * (uv.y - mid.y) - s * (uv.x - mid.x) + mid.y\n    );\n    return (ret - mid) * scale + mid;\n}\n\nvoid main() {\n    v_texcoord = rotateAndScaleUV(a_uv, u_LightRotation, u_LightScale);\n\tv_color = min(vec4(1.0), u_LightColor * min(1.0, u_LightIntensity) * (1.0 - u_Shadow2DStrength) + u_ShadowColor);\n\tgl_Position = vec4((a_position.x / u_baseRenderSize2D.x - 0.5) * 2.0, (0.5 - a_position.y / u_baseRenderSize2D.y) * 2.0, 0.0, 1.0);\n    #ifdef INVERTY\n        gl_Position.y = -gl_Position.y;\n    #endif\n}","#define SHADER_NAME ShadowGen2D_PS\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#include \"Sprite2DFrag.glsl\";\n\nvoid main()\n{\n    vec2 t = step(vec2(0.0), v_texcoord) * step(v_texcoord, vec2(1.0));\n    gl_FragColor = texture2D(u_baseRender2DTexture, v_texcoord) * v_color * t.x * t.y;\n}","import shadowGen2D_vs from './shadowGen2D.vs';\nimport shadowGen2D_ps from './shadowGen2D.fs';\nimport { ShaderDataType } from '../../../RenderDriver/DriverDesign/RenderDevice/ShaderData';\nimport { Shader3D, ShaderFeatureType } from '../../../RenderEngine/RenderShader/Shader3D';\nimport { SubShader } from '../../../RenderEngine/RenderShader/SubShader';\nexport class ShadowGenShader2D {\n    static __init__() {\n        this.renderShader = Shader3D.add('ShadowGen2D', false, false);\n        this.renderShader.shaderType = ShaderFeatureType.DEFAULT;\n        const subShader = new SubShader(this.RenderAttribute, this.RenderUniform, {});\n        this.renderShader.addSubShader(subShader);\n        subShader.addShaderPass(shadowGen2D_vs, shadowGen2D_ps);\n    }\n}\nShadowGenShader2D.RenderUniform = {\n    'u_LightColor': ShaderDataType.Color,\n    'u_ShadowColor': ShaderDataType.Color,\n    'u_LightRotation': ShaderDataType.Float,\n    'u_LightIntensity': ShaderDataType.Float,\n    'u_Shadow2DStrength': ShaderDataType.Float,\n    'u_LightScale': ShaderDataType.Vector2,\n    'u_PCFIntensity': ShaderDataType.Float,\n};\nShadowGenShader2D.RenderAttribute = {\n    'a_position': [0, ShaderDataType.Vector4],\n    'a_uv': [2, ShaderDataType.Vector2],\n};\n","#define SHADER_NAME LightAndShadowGen2D_VS\n\n#include \"Sprite2DVertex.glsl\";\n\n//对UV坐标进行旋转和放缩\nvec2 rotateAndScaleUV(vec2 uv, float rotation, vec2 scale)\n{\n    vec2 mid = vec2(0.5);\n    float c = cos(rotation);\n    float s = sin(rotation);\n    vec2 ret = vec2(\n      c * (uv.x - mid.x) + s * (uv.y - mid.y) + mid.x,\n      c * (uv.y - mid.y) - s * (uv.x - mid.x) + mid.y\n    );\n    return (ret - mid) * scale + mid;\n}\n\nvoid main() {\n    v_texcoord = rotateAndScaleUV(a_uv, u_LightRotation, u_LightScale);\n\tv_color = u_LightColor * u_LightIntensity * u_PCFIntensity;\n\tgl_Position = vec4((a_position.x / u_baseRenderSize2D.x - 0.5) * 2.0, (0.5 - a_position.y / u_baseRenderSize2D.y) * 2.0, 0.0, 1.0);\n    #ifdef INVERTY\n        gl_Position.y = -gl_Position.y;\n    #endif\n}","#define SHADER_NAME LightAndShadowGen2D_PS\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#include \"Sprite2DFrag.glsl\";\n\nvoid main()\n{\n    vec2 t = step(vec2(0.0), v_texcoord) * step(v_texcoord, vec2(1.0));\n    gl_FragColor = texture2D(u_baseRender2DTexture, v_texcoord) * v_color * t.x * t.y;\n}","import lightAndShadowGen2D_vs from './lightAndShadowGen2D.vs';\nimport lightAndShadowGen2D_ps from './lightAndShadowGen2D.fs';\nimport { ShaderDataType } from '../../../RenderDriver/DriverDesign/RenderDevice/ShaderData';\nimport { Shader3D, ShaderFeatureType } from '../../../RenderEngine/RenderShader/Shader3D';\nimport { SubShader } from '../../../RenderEngine/RenderShader/SubShader';\nexport class LightAndShadowGenShader2D {\n    static __init__() {\n        this.renderShader = Shader3D.add('LightAndShadowGen2D', false, false);\n        this.renderShader.shaderType = ShaderFeatureType.DEFAULT;\n        const subShader = new SubShader(this.RenderAttribute, this.RenderUniform, {});\n        this.renderShader.addSubShader(subShader);\n        subShader.addShaderPass(lightAndShadowGen2D_vs, lightAndShadowGen2D_ps);\n    }\n}\nLightAndShadowGenShader2D.RenderUniform = {\n    'u_LightColor': ShaderDataType.Color,\n    'u_LightRotation': ShaderDataType.Float,\n    'u_LightIntensity': ShaderDataType.Float,\n    'u_LightScale': ShaderDataType.Vector2,\n    'u_LightTextureSize': ShaderDataType.Vector2,\n    'u_PCFIntensity': ShaderDataType.Float,\n};\nLightAndShadowGenShader2D.RenderAttribute = {\n    'a_position': [0, ShaderDataType.Vector4],\n    'a_uv': [2, ShaderDataType.Vector2],\n};\n","import { LightGenShader2D } from \"./LightGen/LightGenShader2D\";\nimport { ShadowGenShader2D } from \"./ShadowGen/ShadowGenShader2D\";\nimport { LightAndShadowGenShader2D } from \"./LightAndShadowGen/LightAndShadowGenShader2D\";\nimport { BaseLight2D } from \"../BaseLight2D\";\nimport { Light2DManager } from \"../Light2DManager\";\nexport class LightAndShadow {\n    static __init__() {\n        LightGenShader2D.__init__();\n        ShadowGenShader2D.__init__();\n        LightAndShadowGenShader2D.__init__();\n        BaseLight2D.__init__();\n        Light2DManager.__init__();\n    }\n}\n","import { PlayerConfig } from \"../../Config\";\nimport { ILaya } from \"../../ILaya\";\nimport { Laya } from \"../../Laya\";\nimport { Scene } from \"../display/Scene\";\nimport { Event } from \"../events/Event\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Color } from \"../maths/Color\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { Vector4 } from \"../maths/Vector4\";\nimport { BaseRenderNode2D } from \"../NodeRender2D/BaseRenderNode2D\";\nimport { ShaderDataType } from \"../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { IndexFormat } from \"../RenderEngine/RenderEnum/IndexFormat\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { Mesh2D, VertexMesh2D } from \"../resource/Mesh2D\";\nimport { RenderTexture } from \"../resource/RenderTexture\";\nimport { Pool } from \"../utils/Pool\";\nimport { Utils } from \"../utils/Utils\";\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\nimport { BaseLight2D, Light2DMode, Light2DType } from \"./BaseLight2D\";\nimport { Light2DConfig } from \"./Light2DConfig\";\nimport { Light2DRenderRes } from \"./Light2DRenderByCmd\";\nimport { LightLine2D } from \"./LightLine2D\";\nimport { Occluder2DAgent } from \"./Occluder2DAgent\";\nimport { LightAndShadow } from \"./Shader/LightAndShadow\";\nexport class Light2DManager {\n    get config() {\n        return Light2DManager._config;\n    }\n    set config(value) {\n        Light2DManager._config = value;\n        for (let i = this._updateMark.length - 1; i > -1; i--)\n            this._updateMark[i]++;\n    }\n    static __init__() {\n        if (!Scene.scene2DUniformMap)\n            Scene.scene2DUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap('Sprite2DGlobal');\n        const scene2DUniformMap = Scene.scene2DUniformMap;\n        this.LIGHTANDSHADOW_SCENE_INV_0 = Shader3D.propertyNameToID('u_LightAndShadow2DSceneInv0');\n        this.LIGHTANDSHADOW_SCENE_INV_1 = Shader3D.propertyNameToID('u_LightAndShadow2DSceneInv1');\n        this.LIGHTANDSHADOW_STAGE_MAT_0 = Shader3D.propertyNameToID('u_LightAndShadow2DStageMat0');\n        this.LIGHTANDSHADOW_STAGE_MAT_1 = Shader3D.propertyNameToID('u_LightAndShadow2DStageMat1');\n        scene2DUniformMap.addShaderUniform(this.LIGHTANDSHADOW_SCENE_INV_0, 'u_LightAndShadow2DSceneInv0', ShaderDataType.Vector3);\n        scene2DUniformMap.addShaderUniform(this.LIGHTANDSHADOW_SCENE_INV_1, 'u_LightAndShadow2DSceneInv1', ShaderDataType.Vector3);\n        scene2DUniformMap.addShaderUniform(this.LIGHTANDSHADOW_STAGE_MAT_0, 'u_LightAndShadow2DStageMat0', ShaderDataType.Vector3);\n        scene2DUniformMap.addShaderUniform(this.LIGHTANDSHADOW_STAGE_MAT_1, 'u_LightAndShadow2DStageMat1', ShaderDataType.Vector3);\n    }\n    constructor(scene) {\n        this.lsTarget = [];\n        this.lsTargetAdd = [];\n        this.lsTargetSub = [];\n        this._PCF = [];\n        this._segments = [];\n        this._points = [];\n        this._param = [];\n        this._lights = [];\n        this._occluders = [];\n        this._works = 0;\n        this._updateMark = new Array(Light2DManager.MAX_LAYER).fill(1);\n        this._updateLayerLight = new Array(Light2DManager.MAX_LAYER).fill(false);\n        this._spriteLayer = [];\n        this._spriteNumInLayer = new Array(Light2DManager.MAX_LAYER).fill(0);\n        this._lightLayer = [];\n        this._lightLayerAll = [];\n        this._lightSceneModeNum = new Array(Light2DManager.MAX_LAYER).fill(0).map(() => [0, 0, 0]);\n        this._lightsInLayer = [];\n        this._lightsInLayerAll = [];\n        this._occluderLayer = [];\n        this._occludersInLayer = [];\n        this._occludersInLight = [];\n        this._lightRenderRes = [];\n        this._sceneInv0 = new Vector3();\n        this._sceneInv1 = new Vector3();\n        this._stageMat0 = new Vector3();\n        this._stageMat1 = new Vector3();\n        this._lightScenePos = new Point();\n        this._recoverFC = 0;\n        this._needToRecover = [];\n        this._needUpdateLightRes = 0;\n        this._needCollectLightInLayer = 0;\n        this._needCollectOccluderInLight = 0;\n        this._lightsNeedCheckRange = [];\n        if (PlayerConfig.light2D) {\n            let light2DConfig = PlayerConfig.light2D;\n            Light2DManager._config = new Light2DConfig();\n            Light2DManager._config.ambientColor = new Color(light2DConfig.ambientColor.r, light2DConfig.ambientColor.g, light2DConfig.ambientColor.b, light2DConfig.ambientColor.a);\n            Light2DManager._config.ambientLayerMask = light2DConfig.ambientLayerMask;\n            Light2DManager._config.lightDirection = new Vector3(light2DConfig.lightDirection.x, light2DConfig.lightDirection.y, light2DConfig.lightDirection.z);\n            Light2DManager._config.multiSamples = light2DConfig.multiSamples;\n        }\n        this._scene = scene;\n        this._scene._light2DManager = this;\n        this._screen = new Rectangle();\n        this._screenPrev = new Vector2();\n        this._screenSchmitt = new Rectangle();\n        this._screenSchmittChange = false;\n        this.occluderAgent = new Occluder2DAgent(this);\n        ILaya.stage.on(Event.RESIZE, this, this._onScreenResize);\n        this._PCF = [\n            new Vector2(0, 0),\n            new Vector2(-1, 0),\n            new Vector2(1, 0),\n            new Vector2(0, -1),\n            new Vector2(0, 1),\n            new Vector2(-1, -1),\n            new Vector2(1, -1),\n            new Vector2(-1, 1),\n            new Vector2(1, 1),\n            new Vector2(-2, -2),\n            new Vector2(2, -2),\n            new Vector2(-2, 2),\n            new Vector2(2, 2),\n        ];\n    }\n    destroy() {\n    }\n    _onScreenResize() {\n        this._lights.forEach(light => light._transformChange());\n        this._occluders.forEach(occluder => occluder._transformChange());\n    }\n    _sceneTransformChange(context) {\n        let mat = ILaya.stage.transform;\n        this._stageMat0.set(mat.a, mat.c, mat.tx);\n        this._stageMat1.set(mat.b, mat.d, mat.ty);\n        if (context._drawingToTexture) {\n            this._sceneInv0.set(mat.a, mat.c, mat.tx);\n            this._sceneInv1.set(mat.b, mat.d, mat.ty);\n        }\n        else {\n            mat = this._scene.globalTrans.getMatrixInv(Matrix.TEMP);\n            this._sceneInv0.set(mat.a, mat.c, mat.tx);\n            this._sceneInv1.set(mat.b, mat.d, mat.ty);\n        }\n        const shaderData = this._scene.sceneShaderData;\n        shaderData.setVector3(Light2DManager.LIGHTANDSHADOW_SCENE_INV_0, this._sceneInv0);\n        shaderData.setVector3(Light2DManager.LIGHTANDSHADOW_SCENE_INV_1, this._sceneInv1);\n        shaderData.setVector3(Light2DManager.LIGHTANDSHADOW_STAGE_MAT_0, this._stageMat0);\n        shaderData.setVector3(Light2DManager.LIGHTANDSHADOW_STAGE_MAT_1, this._stageMat1);\n    }\n    addRender(node) {\n        const layer = node.layer;\n        this._spriteNumInLayer[layer]++;\n        if (this._spriteNumInLayer[layer] === 1)\n            this._spriteLayer.push(layer);\n    }\n    removeRender(node) {\n        const layer = node.layer;\n        this._spriteNumInLayer[layer]--;\n        if (this._spriteNumInLayer[layer] === 0)\n            this._spriteLayer.splice(this._spriteLayer.indexOf(layer), 1);\n    }\n    Init(data) {\n    }\n    update(dt) {\n    }\n    _printTextureToConsoleAsBase64(tex) {\n        Utils.uint8ArrayToArrayBufferAsync(tex).then(str => console.log(str));\n    }\n    _lightTransformChange(light) {\n        this.needCheckLightRange(light);\n        if (Light2DManager.DEBUG)\n            console.log('light transform change', light);\n    }\n    _checkLightRange(light) {\n        const layers = light.layers;\n        for (let i = layers.length - 1; i > -1; i--) {\n            const layer = layers[i];\n            if (!light._isInRange(this._screenSchmitt)) {\n                const mask = (1 << layer);\n                this.needCollectLightInLayer(mask);\n                this._updateLayerLight[layer] = true;\n            }\n        }\n    }\n    needCheckLightRange(light) {\n        if (this._lightsNeedCheckRange.indexOf(light) < 0)\n            this._lightsNeedCheckRange.push(light);\n    }\n    needCollectLightInLayer(layerMask) {\n        this._needCollectLightInLayer |= layerMask;\n    }\n    needCollectOccluderInLight(layerMask) {\n        this._needCollectOccluderInLight |= layerMask;\n    }\n    lightLayerMaskChange(light, oldLayerMask, newLayerMask) {\n        var _a;\n        if (this._lights.indexOf(light) !== -1) {\n            for (let i = 0; i < Light2DManager.MAX_LAYER; i++) {\n                const mask = 1 << i;\n                const index = (_a = this._lightsInLayerAll[i]) === null || _a === void 0 ? void 0 : _a.indexOf(light);\n                if (newLayerMask & mask) {\n                    if (index === undefined || index === -1) {\n                        if (!this._lightsInLayerAll[i])\n                            this._lightsInLayerAll[i] = [];\n                        this._lightsInLayerAll[i].push(light);\n                        if (this._lightLayerAll.indexOf(i) === -1)\n                            this._lightLayerAll.push(i);\n                        this._collectLightInScreenByLayer(i);\n                        this._updateLayerLight[i] = true;\n                    }\n                }\n                else if (oldLayerMask & mask) {\n                    if (index >= 0) {\n                        this._lightsInLayerAll[i].splice(index, 1);\n                        if (this._lightsInLayerAll[i].length === 0)\n                            this._lightLayerAll.splice(this._lightLayerAll.indexOf(i), 1);\n                        this._collectLightInScreenByLayer(i);\n                        this._updateLayerLight[i] = true;\n                    }\n                }\n            }\n            if (Light2DManager.DEBUG)\n                console.log('light layer mask change', light, oldLayerMask, newLayerMask);\n        }\n    }\n    lightShadowLayerMaskChange(light, oldLayerMask, newLayerMask) {\n        this.needCollectOccluderInLight(oldLayerMask | newLayerMask);\n        if (Light2DManager.DEBUG)\n            console.log('light shadow layer mask change', light, oldLayerMask, newLayerMask);\n    }\n    lightShadowPCFChange(light) {\n        this._updateLightPCF(light);\n        if (Light2DManager.DEBUG)\n            console.log('light shadow pcf change', light);\n    }\n    lightShadowEnableChange(light) {\n        const layers = light.layers;\n        for (let i = layers.length - 1; i > -1; i--)\n            if (this._lightRenderRes[layers[i]])\n                this._lightRenderRes[layers[i]].enableShadow(light, this._needToRecover);\n    }\n    lightRenderOrderChange(light) {\n        const layers = light.layers;\n        for (let i = layers.length - 1; i > -1; i--)\n            this._collectLightInScreenByLayer(layers[i]);\n    }\n    clearLight() {\n        this._lights.length = 0;\n        this._lightLayerAll.length = 0;\n        this._lightsInLayerAll.length = 0;\n        this._lightsNeedCheckRange.length = 0;\n    }\n    addLight(light) {\n        if (this._lights.indexOf(light) === -1) {\n            this._lights.push(light);\n            const layers = light.layers;\n            for (let i = layers.length - 1; i > -1; i--) {\n                const layer = layers[i];\n                if (!this._lightsInLayerAll[layer])\n                    this._lightsInLayerAll[layer] = [];\n                this._lightsInLayerAll[layer].push(light);\n                if (this._lightLayerAll.indexOf(layer) === -1)\n                    this._lightLayerAll.push(layer);\n                this._collectLightInScreenByLayer(layer);\n            }\n            if (Light2DManager.DEBUG)\n                console.log('add light', light);\n        }\n    }\n    removeLight(light) {\n        const index = this._lights.indexOf(light);\n        if (index >= 0) {\n            this._lights.splice(index, 1);\n            const layers = light.layers;\n            for (let i = layers.length - 1; i > -1; i--) {\n                const layer = layers[i];\n                const idx = this._lightsInLayerAll[layer].indexOf(light);\n                if (idx >= 0) {\n                    this._lightsInLayerAll[layer].splice(idx, 1);\n                    if (this._lightsInLayerAll[layer].length === 0)\n                        this._lightLayerAll.splice(this._lightLayerAll.indexOf(layer), 1);\n                    this._collectLightInScreenByLayer(layer);\n                }\n            }\n            this._lightsNeedCheckRange.splice(this._lightsNeedCheckRange.indexOf(light), 1);\n            if (Light2DManager.DEBUG)\n                console.log('remove light', light);\n        }\n    }\n    clearOccluder() {\n        for (let i = this._occluders.length - 1; i > -1; i--)\n            this._needCollectOccluderInLight |= this._occluders[i].layerMask;\n        this._occluders.length = 0;\n        for (let i = this._occluderLayer.length - 1; i > -1; i--)\n            this._occludersInLayer[this._occluderLayer[i]].length = 0;\n        this._occluderLayer.length = 0;\n    }\n    addOccluder(occluder) {\n        if (this._occluders.indexOf(occluder) === -1) {\n            this._occluders.push(occluder);\n            const layers = occluder.layers;\n            for (let i = layers.length - 1; i > -1; i--) {\n                const layer = layers[i];\n                if (!this._occludersInLayer[layer])\n                    this._occludersInLayer[layer] = [];\n                this._occludersInLayer[layer].push(occluder);\n                if (this._occluderLayer.indexOf(layer) === -1)\n                    this._occluderLayer.push(layer);\n            }\n            this._needCollectOccluderInLight |= occluder.layerMask;\n            if (Light2DManager.DEBUG)\n                console.log('add occluder', occluder);\n        }\n    }\n    removeOccluder(occluder) {\n        const index = this._occluders.indexOf(occluder);\n        if (index >= 0) {\n            this._occluders.splice(index, 1);\n            const layers = occluder.layers;\n            for (let i = layers.length - 1; i > -1; i--) {\n                const layer = layers[i];\n                const idx = this._occludersInLayer[layer].indexOf(occluder);\n                if (idx >= 0) {\n                    this._occludersInLayer[layer].splice(idx, 1);\n                    if (this._occludersInLayer[layer].length === 0)\n                        this._occluderLayer.splice(this._occluderLayer.indexOf(layer), 1);\n                }\n            }\n            this._needCollectOccluderInLight |= occluder.layerMask;\n            if (Light2DManager.DEBUG)\n                console.log('remove occluder', occluder);\n        }\n    }\n    occluderLayerMaskChange(occluder, oldLayerMask, newLayerMask) {\n        var _a;\n        if (this._occluders.indexOf(occluder) !== -1) {\n            for (let i = 0; i < Light2DManager.MAX_LAYER; i++) {\n                const mask = 1 << i;\n                const index = (_a = this._occludersInLayer[i]) === null || _a === void 0 ? void 0 : _a.indexOf(occluder);\n                if (newLayerMask & mask) {\n                    if (index === undefined || index === -1) {\n                        if (!this._occludersInLayer[i])\n                            this._occludersInLayer[i] = [];\n                        this._occludersInLayer[i].push(occluder);\n                        if (this._occluderLayer.indexOf(i) === -1)\n                            this._occluderLayer.push(i);\n                    }\n                }\n                else if (oldLayerMask & mask) {\n                    if (index >= 0) {\n                        this._occludersInLayer[i].splice(index, 1);\n                        if (this._occludersInLayer[i].length === 0)\n                            this._occluderLayer.splice(this._occluderLayer.indexOf(i), 1);\n                    }\n                }\n            }\n            this._needCollectOccluderInLight |= oldLayerMask;\n            this._needCollectOccluderInLight |= newLayerMask;\n            if (Light2DManager.DEBUG)\n                console.log('occluder layer change', occluder, oldLayerMask, newLayerMask);\n        }\n    }\n    _buildRenderTexture(width, height) {\n        const tex = new RenderTexture(width, height, RenderTargetFormat.R8G8B8A8, null, false, this.config.multiSamples);\n        tex.wrapModeU = tex.wrapModeV = WrapMode.Clamp;\n        return tex;\n    }\n    _collectLightInScreenByLayer(layer) {\n        let lights = this._lightsInLayer[layer];\n        const lightsAll = this._lightsInLayerAll[layer];\n        const lightSceneModeNum = this._lightSceneModeNum[layer];\n        if (!lights)\n            lights = this._lightsInLayer[layer] = [];\n        else\n            lights.length = 0;\n        if (!lightsAll || lightsAll.length === 0) {\n            const index = this._lightLayer.indexOf(layer);\n            if (index >= 0)\n                this._lightLayer.splice(index, 1);\n            this._updateLayerRenderRes(layer);\n            return;\n        }\n        if (this._screenSchmitt.width === 0\n            || this._screenSchmitt.height === 0)\n            return;\n        for (let i = lightsAll.length - 1; i > -1; i--) {\n            if (lightsAll[i]._isInScreen(this._screenSchmitt)) {\n                lights.push(lightsAll[i]);\n                if (this._lightLayer.indexOf(layer) === -1)\n                    this._lightLayer.push(layer);\n            }\n        }\n        if (lights.length === 0) {\n            const index = this._lightLayer.indexOf(layer);\n            if (index >= 0)\n                this._lightLayer.splice(index, 1);\n            this._updateLayerRenderRes(layer);\n            return;\n        }\n        if (Light2DManager.SUPPORT_LIGHT_SCENE_MODE) {\n            for (let i = 0; i < 3; i++)\n                lightSceneModeNum[i] = 0;\n            for (let i = lights.length - 1; i > -1; i--)\n                lightSceneModeNum[lights[i].sceneMode]++;\n        }\n        if (Light2DManager.SUPPORT_LIGHT_BLEND_MODE)\n            lights.sort((a, b) => a.order - b.order);\n        const param = this._param[layer];\n        const lsTarget = this.lsTarget[layer];\n        const x = this._screenSchmitt.x;\n        const y = this._screenSchmitt.y;\n        const z = this._screenSchmitt.width;\n        const w = this._screenSchmitt.height;\n        if (!lsTarget) {\n            this._param[layer] = new Vector4(x, y, z, w);\n            this.lsTarget[layer] = this._buildRenderTexture(z, w);\n            if (Light2DManager.DEBUG)\n                console.log('create light layer texture', x, y, z, w, layer);\n        }\n        else if (param.z != z || param.w != w) {\n            this._needToRecover.push(lsTarget);\n            param.setValue(x, y, z, w);\n            this.lsTarget[layer] = this._buildRenderTexture(z, w);\n            if (Light2DManager.DEBUG)\n                console.log('update light layer texture', x, y, z, w, layer);\n        }\n        else {\n            param.x = x;\n            param.y = y;\n        }\n        if (Light2DManager.SUPPORT_LIGHT_SCENE_MODE) {\n            const lsTargetAdd = this.lsTargetAdd[layer];\n            const lsTargetSub = this.lsTargetSub[layer];\n            if (lightSceneModeNum[Light2DMode.Add] > 0) {\n                if (!lsTargetAdd)\n                    this.lsTargetAdd[layer] = this._buildRenderTexture(z, w);\n                else if (lsTargetAdd.width != z || lsTargetAdd.height != w)\n                    this._needToRecover.push(lsTargetAdd);\n                this.lsTargetAdd[layer] = this._buildRenderTexture(z, w);\n            }\n            if (lightSceneModeNum[Light2DMode.Sub] > 0) {\n                if (!lsTargetSub)\n                    this.lsTargetSub[layer] = this._buildRenderTexture(z, w);\n                else if (lsTargetSub.width != z || lsTargetSub.height != w)\n                    this._needToRecover.push(lsTargetSub);\n                this.lsTargetSub[layer] = this._buildRenderTexture(z, w);\n            }\n        }\n        for (let i = lights.length - 1; i > -1; i--)\n            this._collectOccludersInLight(layer, lights[i], i);\n        this._needCollectOccluderInLight &= ~(1 << layer);\n        this._updateLayerRenderRes(layer);\n        this._updateMark[layer]++;\n        if (Light2DManager.DEBUG)\n            console.log('collect light in screen by layer', layer);\n    }\n    _updateLayerRenderRes(layer) {\n        if (!this._lightRenderRes[layer])\n            this._lightRenderRes[layer] = new Light2DRenderRes(this._scene, layer, LayaGL.renderEngine._screenInvertY);\n        this._lightRenderRes[layer].addLights(this._lightsInLayer[layer], this._needToRecover);\n        this._needUpdateLightRes |= (1 << layer);\n        if (Light2DManager.REUSE_CMD) {\n            this._lightRenderRes[layer].setRenderTargetCMD(this.lsTarget[layer], this.lsTargetAdd[layer], this.lsTargetSub[layer]);\n            this._lightRenderRes[layer].buildRenderMeshCMD();\n        }\n        if (Light2DManager.DEBUG)\n            console.log('update layer render res', layer);\n    }\n    _updateLightPCF(light) {\n        const layers = light.layers;\n        for (let i = layers.length - 1; i > -1; i--) {\n            const layer = layers[i];\n            if (this._lightRenderRes[layer])\n                this._lightRenderRes[layer].updateLightPCF(light);\n        }\n    }\n    _getOccluderSegment(layer, sn, lightX, lightY, range, shadow) {\n        const x = range.x;\n        const y = range.y;\n        const w = range.width;\n        const h = range.height;\n        const segments = this._segments;\n        if (segments.length >= 4) {\n            for (let i = 0; i < 4; i++)\n                Pool.recover('LightLine2D', segments[i]);\n        }\n        segments.length = 0;\n        segments.push(Pool.getItemByClass('LightLine2D', LightLine2D).create(x, y, x + w, y));\n        segments.push(Pool.getItemByClass('LightLine2D', LightLine2D).create(x + w, y, x + w, y + h));\n        segments.push(Pool.getItemByClass('LightLine2D', LightLine2D).create(x + w, y + h, x, y + h));\n        segments.push(Pool.getItemByClass('LightLine2D', LightLine2D).create(x, y + h, x, y));\n        if (shadow && this._occludersInLight[layer]) {\n            const occluders = this._occludersInLight[layer][sn];\n            if (occluders) {\n                for (let i = occluders.length - 1; i > -1; i--) {\n                    const occluder = occluders[i];\n                    if (occluder.selectByLight(lightX, lightY))\n                        segments.push(...occluder.getSegment(lightX, lightY));\n                }\n            }\n        }\n        if (Light2DManager.DEBUG)\n            console.log('get occluder segment', layer);\n        return segments;\n    }\n    _collectOccludersInLight(layer, light, sn) {\n        const occluders = this._occludersInLayer[layer];\n        if (occluders) {\n            if (!this._occludersInLight[layer])\n                this._occludersInLight[layer] = [];\n            if (!this._occludersInLight[layer][sn])\n                this._occludersInLight[layer][sn] = [];\n            const result = this._occludersInLight[layer][sn];\n            result.length = 0;\n            if (light.shadowLayerMask & (1 << layer)) {\n                const range = light.getLightType() == Light2DType.Direction ?\n                    light._getShadowRange(this._screenSchmitt) :\n                    light._getWorldRange(this._screenSchmitt);\n                for (let i = occluders.length - 1; i > -1; i--)\n                    if (occluders[i].isInLightRange(range))\n                        result.push(occluders[i]);\n            }\n        }\n    }\n    _recoverResource() {\n        if (ILaya.timer.currFrame > this._recoverFC) {\n            if (this._needToRecover.length > 0) {\n                for (let i = this._needToRecover.length - 1; i > -1; i--)\n                    this._needToRecover[i].destroy();\n                this._needToRecover.length = 0;\n            }\n            this._recoverFC = ILaya.timer.currFrame + 10;\n        }\n    }\n    preRenderUpdate(context) {\n        this._sceneTransformChange(context);\n        const _isLightUpdate = (light) => {\n            return light._needUpdateLightAndShadow;\n        };\n        const _isOccluderUpdate = (layer, sn) => {\n            if (this._occludersInLight[layer]\n                && this._occludersInLight[layer][sn]) {\n                const occluders = this._occludersInLight[layer][sn];\n                for (let i = occluders.length - 1; i > -1; i--)\n                    if (occluders[i].needUpdate)\n                        return true;\n            }\n            return false;\n        };\n        this._recoverResource();\n        if (!this._updateScreen())\n            return;\n        if (this._screenSchmittChange) {\n            for (let i = this._lightLayerAll.length - 1; i > -1; i--) {\n                const layer = this._lightLayerAll[i];\n                this._collectLightInScreenByLayer(layer);\n            }\n        }\n        else if (this._needCollectLightInLayer !== 0) {\n            for (let i = this._lightLayerAll.length - 1; i > -1; i--) {\n                const layer = this._lightLayerAll[i];\n                if (this._needCollectLightInLayer & (1 << layer))\n                    this._collectLightInScreenByLayer(layer);\n            }\n        }\n        if (this._needCollectOccluderInLight !== 0) {\n            for (let i = this._lightLayerAll.length - 1; i > -1; i--) {\n                const layer = this._lightLayerAll[i];\n                if (this._needCollectOccluderInLight & (1 << layer)) {\n                    const lights = this._lightsInLayer[layer];\n                    for (let i = lights.length - 1; i > -1; i--)\n                        this._collectOccludersInLight(layer, lights[i], i);\n                }\n            }\n        }\n        for (let i = this._lightsNeedCheckRange.length - 1; i > -1; i--)\n            this._checkLightRange(this._lightsNeedCheckRange[i]);\n        this._lightsNeedCheckRange.length = 0;\n        let works = 0;\n        for (let i = this._lightLayer.length - 1; i > -1; i--) {\n            let needRender = false;\n            const layer = this._lightLayer[i];\n            const renderRes = this._lightRenderRes[layer];\n            const occluders = this._occludersInLayer[layer];\n            const layerMask = (1 << layer);\n            const x = this._screenSchmitt.x;\n            const y = this._screenSchmitt.y;\n            if (this._spriteNumInLayer[layer] === 0)\n                continue;\n            if (occluders)\n                for (let j = occluders.length - 1; j > -1; j--)\n                    occluders[j]._getRange();\n            let lightChange = false;\n            let screenChange = false;\n            let occluderChange = false;\n            if (this._screenSchmittChange\n                || (this._needCollectLightInLayer & layerMask) > 0\n                || (this._needCollectOccluderInLight & layerMask) > 0\n                || (this._needUpdateLightRes & layerMask) > 0)\n                screenChange = true;\n            if (this._updateLayerLight[layer]) {\n                this._updateLayerLight[layer] = false;\n                screenChange = true;\n            }\n            const lights = this._lightsInLayer[layer];\n            for (let j = 0, len = lights.length; j < len; j++) {\n                const light = lights[j];\n                const lightMesh = renderRes.lightMeshs[j];\n                const shadowMesh = renderRes.shadowMeshs[j];\n                const material = renderRes.material[j];\n                const materialShadow = renderRes.materialShadow[j];\n                light.getScenePos(this._lightScenePos);\n                light.renderLightTexture();\n                if (!screenChange) {\n                    lightChange = _isLightUpdate(light);\n                    occluderChange = _isOccluderUpdate(layer, j);\n                }\n                if (screenChange || occluderChange || lightChange) {\n                    for (let k = lightMesh.length - 1; k > -1; k--) {\n                        renderRes.updateLightMesh(this._update(layer, x, y, light, lightMesh[k], k, j), j, k);\n                        works++;\n                    }\n                    renderRes.setMaterialData(light, material, false);\n                    renderRes.textures[j] = light._texLight;\n                    if (light.shadowLayerMask & layerMask) {\n                        if (light._isNeedShadowMesh()) {\n                            if (materialShadow) {\n                                renderRes.setMaterialData(light, materialShadow, true);\n                                renderRes.updateShadowMesh(this._updateShadow(layer, x, y, light, shadowMesh, j), j);\n                                works++;\n                            }\n                        }\n                        else\n                            renderRes.updateShadowMesh(null, j);\n                    }\n                    else if (shadowMesh) {\n                        if (!Light2DManager.REUSE_MESH)\n                            this._needToRecover.push(shadowMesh);\n                        renderRes.shadowMeshs[j] = null;\n                    }\n                    needRender = true;\n                }\n                lightChange = false;\n                occluderChange = false;\n            }\n            if (needRender) {\n                if (Light2DManager.REUSE_CMD)\n                    renderRes.updateMaterial();\n                renderRes.render(this.lsTarget[layer], this.lsTargetAdd[layer], this.lsTargetSub[layer]);\n            }\n        }\n        for (let i = this._lightLayer.length - 1; i > -1; i--) {\n            const layer = this._lightLayer[i];\n            const lights = this._lightsInLayer[layer];\n            for (let j = 0, len = lights.length; j < len; j++)\n                lights[j]._needUpdateLightAndShadow = false;\n            for (let j = 0, len = this._occluders.length; j < len; j++)\n                this._occluders[j].needUpdate = false;\n        }\n        this._screenSchmittChange = false;\n        this._needUpdateLightRes = 0;\n        this._needCollectLightInLayer = 0;\n        this._needCollectOccluderInLight = 0;\n        if (Light2DManager.DEBUG) {\n            if (this._works !== works) {\n                this._works = works;\n                console.log('works =', works);\n            }\n        }\n    }\n    _getLayerUpdateMark(layer) {\n        return this._updateMark[layer];\n    }\n    _updateShaderDataByLayer(layer, shaderData) {\n        shaderData.setVector3(BaseLight2D.LIGHTANDSHADOW_LIGHT_DIRECTION, this.config.lightDirection);\n        if (this.config.ambientLayerMask & (1 << layer))\n            shaderData.setColor(BaseLight2D.LIGHTANDSHADOW_AMBIENT, this.config.ambientColor);\n        else\n            shaderData.setColor(BaseLight2D.LIGHTANDSHADOW_AMBIENT, Color.CLEAR);\n        if (this.lsTarget[layer]) {\n            shaderData.removeDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_EMPTY);\n            shaderData.setTexture(BaseLight2D.LIGHTANDSHADOW, this.lsTarget[layer]);\n        }\n        else {\n            shaderData.addDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_EMPTY);\n            shaderData.setTexture(BaseLight2D.LIGHTANDSHADOW, null);\n        }\n        if (this._param[layer])\n            shaderData.setVector(BaseLight2D.LIGHTANDSHADOW_PARAM, this._param[layer]);\n        if (Light2DManager.SUPPORT_LIGHT_SCENE_MODE) {\n            if (this.lsTargetAdd[layer]) {\n                if (shaderData.hasDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_EMPTY))\n                    shaderData.removeDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_EMPTY);\n                shaderData.addDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_ADDMODE);\n                shaderData.setTexture(BaseLight2D.LIGHTANDSHADOW_ADDMODE, this.lsTargetAdd[layer]);\n            }\n            else {\n                shaderData.removeDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_ADDMODE);\n                shaderData.setTexture(BaseLight2D.LIGHTANDSHADOW_ADDMODE, null);\n            }\n            if (this.lsTargetSub[layer]) {\n                if (shaderData.hasDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_EMPTY))\n                    shaderData.removeDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_EMPTY);\n                shaderData.addDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_SUBMODE);\n                shaderData.setTexture(BaseLight2D.LIGHTANDSHADOW_SUBMODE, this.lsTargetSub[layer]);\n            }\n            else {\n                shaderData.removeDefine(BaseRenderNode2D.SHADERDEFINE_LIGHT2D_SUBMODE);\n                shaderData.setTexture(BaseLight2D.LIGHTANDSHADOW_SUBMODE, null);\n            }\n        }\n    }\n    _updateScreen() {\n        const area2DArrays = this._scene._area2Ds;\n        if (area2DArrays.length > 0) {\n            let xL = 10000000;\n            let xR = -10000000;\n            let yB = 10000000;\n            let yT = -10000000;\n            for (let i = 0; i < area2DArrays.length; i++) {\n                const camera = area2DArrays[i].mainCamera;\n                if (camera) {\n                    let rect = camera._rect;\n                    xL = Math.min(xL, rect.x);\n                    xR = Math.max(xR, rect.y);\n                    yB = Math.min(yB, rect.z);\n                    yT = Math.max(yT, rect.w);\n                }\n            }\n            this._screen.x = xL;\n            this._screen.y = yB;\n            this._screen.width = xR - xL;\n            this._screen.height = yT - yB;\n            if (this._screen.width < 0 || this._screen.height < 0) {\n                this._screen.x = 0;\n                this._screen.y = 0;\n                this._screen.width = RenderState2D.width | 0;\n                this._screen.height = RenderState2D.height | 0;\n            }\n        }\n        else {\n            this._screen.x = 0;\n            this._screen.y = 0;\n            this._screen.width = RenderState2D.width | 0;\n            this._screen.height = RenderState2D.height | 0;\n        }\n        if (this._screen.width <= 0 || this._screen.height <= 0)\n            return false;\n        if (this._screen.x < this._screenSchmitt.x\n            || this._screen.y < this._screenSchmitt.y\n            || this._screen.x + this._screen.width > this._screenSchmitt.x + this._screenSchmitt.width\n            || this._screen.y + this._screen.height > this._screenSchmitt.y + this._screenSchmitt.height\n            || this._screenPrev.x !== this._screen.width\n            || this._screenPrev.y !== this._screen.height) {\n            this._screenPrev.x = this._screen.width;\n            this._screenPrev.y = this._screen.height;\n            this._screenSchmitt.x = (this._screen.x - Light2DManager.SCREEN_SCHMITT_SIZE) | 0;\n            this._screenSchmitt.y = (this._screen.y - Light2DManager.SCREEN_SCHMITT_SIZE) | 0;\n            this._screenSchmitt.width = (this._screen.width + Light2DManager.SCREEN_SCHMITT_SIZE * 2) | 0;\n            this._screenSchmitt.height = (this._screen.height + Light2DManager.SCREEN_SCHMITT_SIZE * 2) | 0;\n            this._screenSchmittChange = true;\n            for (let i = this._lights.length - 1; i > -1; i--) {\n                if (this._lights[i].getLightType() === Light2DType.Direction)\n                    this._lights[i]._needUpdateLightWorldRange = true;\n            }\n            if (Light2DManager.DEBUG)\n                console.log('screen schmitt change');\n        }\n        return true;\n    }\n    _update(layer, layerOffsetX, layerOffsetY, light, mesh, pcf, sn) {\n        const _calcLightX = (light, pcf) => {\n            if (light.getLightType() === Light2DType.Direction)\n                return this._screen.x + this._screen.width / 2 -\n                    (light.directionVector.x +\n                        this._PCF[pcf].x * light.shadowFilterSmooth * 0.01) * Light2DManager.DIRECTION_LIGHT_SIZE / 4;\n            return (this._lightScenePos.x + this._PCF[pcf].x * light.shadowFilterSmooth);\n        };\n        const _calcLightY = (light, pcf) => {\n            if (light.getLightType() === Light2DType.Direction)\n                return this._screen.y + this._screen.height / 2 -\n                    (light.directionVector.y +\n                        this._PCF[pcf].y * light.shadowFilterSmooth * 0.01) * Light2DManager.DIRECTION_LIGHT_SIZE / 4;\n            return (this._lightScenePos.y + this._PCF[pcf].y * light.shadowFilterSmooth);\n        };\n        let ret = mesh;\n        const lightX = _calcLightX(light, pcf);\n        const lightY = _calcLightY(light, pcf);\n        const lightRange = light._getLightRange();\n        const worldRange = light._getWorldRange(this._screenSchmitt);\n        const lightOffsetX = lightRange.x;\n        const lightOffsetY = lightRange.y;\n        const lightWidth = lightRange.width;\n        const lightHeight = lightRange.height;\n        const ss = this._getOccluderSegment(layer, sn, lightX, lightY, worldRange, light.shadowEnable);\n        const poly = this._getLightPolygon(lightX, lightY, ss);\n        const len = poly.length;\n        if (len > 2) {\n            let index = 0;\n            this._points.length = len * 2;\n            for (let i = 0; i < len; i++) {\n                this._points[index++] = poly[i].x;\n                this._points[index++] = poly[i].y;\n            }\n            ret = this._genLightMesh(lightX, lightY, lightWidth, lightHeight, lightOffsetX, lightOffsetY, layerOffsetX, layerOffsetY, this._points, mesh);\n        }\n        for (let i = 0; i < len; i++)\n            Pool.recover('Vector4', poly[i]);\n        return ret;\n    }\n    _updateShadow(layer, layerOffsetX, layerOffsetY, light, mesh, sn) {\n        const _calcLightX = (light) => {\n            if (light.getLightType() == Light2DType.Direction)\n                return this._screen.x + this._screen.width / 2 -\n                    light.directionVector.x * Light2DManager.DIRECTION_LIGHT_SIZE / 4;\n            return this._lightScenePos.x;\n        };\n        const _calcLightY = (light) => {\n            if (light.getLightType() == Light2DType.Direction)\n                return this._screen.y + this._screen.height / 2 -\n                    light.directionVector.y * Light2DManager.DIRECTION_LIGHT_SIZE / 4;\n            return this._lightScenePos.y;\n        };\n        let ret = mesh;\n        const lightX = _calcLightX(light);\n        const lightY = _calcLightY(light);\n        const lightRange = light._getLightRange();\n        const worldRange = light._getWorldRange(this._screenSchmitt);\n        const lightOffsetX = lightRange.x;\n        const lightOffsetY = lightRange.y;\n        const lightWidth = lightRange.width;\n        const lightHeight = lightRange.height;\n        const ss = this._getOccluderSegment(layer, sn, lightX, lightY, worldRange, light.shadowEnable);\n        const poly = this._getLightPolygon(lightX, lightY, ss);\n        const len = poly.length;\n        if (len > 2) {\n            let index = 0;\n            this._points.length = len * 2;\n            for (let i = 0; i < len; i++) {\n                this._points[index++] = poly[i].x;\n                this._points[index++] = poly[i].y;\n            }\n            const radius = Math.sqrt(worldRange.width ** 2 + worldRange.height ** 2) + 10;\n            ret = this._genShadowMesh(lightX, lightY, lightWidth, lightHeight, lightOffsetX, lightOffsetY, layerOffsetX, layerOffsetY, this._points, radius, mesh);\n        }\n        for (let i = 0; i < len; i++)\n            Pool.recover('Vector4', poly[i]);\n        return ret;\n    }\n    _makeOrUpdateMesh(vertices, indices, mesh) {\n        if (mesh) {\n            const idx = mesh.getIndices();\n            const ver = mesh.getVertices()[0];\n            if (Light2DManager.REUSE_MESH\n                && idx.length >= indices.length\n                && ver.byteLength >= vertices.byteLength) {\n                mesh.setIndices(indices);\n                mesh.setVertexByIndex(vertices.buffer, 0);\n                mesh.getSubMesh(0).clearRenderParams();\n                mesh.getSubMesh(0).setDrawElemenParams(indices.length, 0);\n                return mesh;\n            }\n            else\n                this._needToRecover.push(mesh);\n        }\n        const declaration = VertexMesh2D.getVertexDeclaration(['POSITION,UV'], false)[0];\n        return Mesh2D.createMesh2DByPrimitive([vertices], [declaration], indices, IndexFormat.UInt16, [{ length: indices.length, start: 0 }], true);\n    }\n    _genLightMesh(lightX, lightY, lightWidth, lightHeight, lightOffsetX, lightOffsetY, layerOffsetX, layerOffsetY, inputPoints, mesh) {\n        const vertices = new Float32Array((inputPoints.length / 2 + 1) * 5);\n        const indices = new Uint16Array(inputPoints.length / 2 * 3);\n        const centerX = lightOffsetX + lightWidth / 2;\n        const centerY = lightOffsetY + lightHeight / 2;\n        vertices[0] = lightX - layerOffsetX;\n        vertices[1] = lightY - layerOffsetY;\n        vertices[2] = 0;\n        vertices[3] = 0.5 - (centerX - lightX) / lightWidth;\n        vertices[4] = 0.5 - (centerY - lightY) / lightHeight;\n        let index = 5;\n        for (let i = 0; i < inputPoints.length; i += 2) {\n            vertices[index++] = inputPoints[i + 0] - layerOffsetX;\n            vertices[index++] = inputPoints[i + 1] - layerOffsetY;\n            vertices[index++] = 0;\n            vertices[index++] = 0.5 + (inputPoints[i + 0] - centerX) / lightWidth;\n            vertices[index++] = 0.5 + (inputPoints[i + 1] - centerY) / lightHeight;\n        }\n        index = 0;\n        for (let i = 0; i < inputPoints.length - 2; i += 2) {\n            indices[index++] = 0;\n            indices[index++] = i / 2 + 1;\n            indices[index++] = i / 2 + 2;\n        }\n        indices[index++] = 0;\n        indices[index++] = 1;\n        indices[index++] = inputPoints.length / 2;\n        return this._makeOrUpdateMesh(vertices, indices, mesh);\n    }\n    _genShadowMesh(lightX, lightY, lightWidth, lightHeight, lightOffsetX, lightOffsetY, layerOffsetX, layerOffsetY, inputPoints, radius, mesh) {\n        const points = [];\n        const inds = [];\n        const len = inputPoints.length;\n        const centerX = lightOffsetX + lightWidth / 2;\n        const centerY = lightOffsetY + lightHeight / 2;\n        let pointX = 0, pointY = 0;\n        let interX = 0, interY = 0;\n        let dx = 0, dy = 0, length = 0;\n        const _getIntersectionPoint = () => {\n            dx = pointX - lightX;\n            dy = pointY - lightY;\n            length = Math.sqrt(dx * dx + dy * dy);\n            interX = lightX + dx / length * radius;\n            interY = lightY + dy / length * radius;\n        };\n        for (let i = 0; i < len; i += 2) {\n            pointX = inputPoints[i];\n            pointY = inputPoints[i + 1];\n            _getIntersectionPoint();\n            points.push(pointX, pointY, interX, interY);\n        }\n        let current = 0, next = 0;\n        const pointCount = len / 2;\n        for (let i = 0; i < pointCount; i++) {\n            current = i * 2;\n            next = ((i + 1) % pointCount) * 2;\n            inds.push(current, current + 1, next);\n            inds.push(current + 1, next + 1, next);\n        }\n        const vertices = new Float32Array(points.length / 2 * 5);\n        const indices = new Uint16Array(inds.length);\n        indices.set(inds);\n        let index = 0;\n        for (let i = 0, len = points.length; i < len; i += 2) {\n            vertices[index++] = points[i + 0] - layerOffsetX;\n            vertices[index++] = points[i + 1] - layerOffsetY;\n            vertices[index++] = 0;\n            vertices[index++] = 0.5 + (points[i + 0] - centerX) / lightWidth;\n            vertices[index++] = 0.5 + (points[i + 1] - centerY) / lightHeight;\n        }\n        return this._makeOrUpdateMesh(vertices, indices, mesh);\n    }\n    _getIntersection(ray, segment, result) {\n        const r_px = ray.a.x;\n        const r_py = ray.a.y;\n        const r_dx = ray.b.x - ray.a.x;\n        const r_dy = ray.b.y - ray.a.y;\n        const s_px = segment.a.x;\n        const s_py = segment.a.y;\n        const s_dx = segment.b.x - segment.a.x;\n        const s_dy = segment.b.y - segment.a.y;\n        const r_mag = Math.sqrt(r_dx * r_dx + r_dy * r_dy);\n        const s_mag = Math.sqrt(s_dx * s_dx + s_dy * s_dy);\n        if (r_dx / r_mag === s_dx / s_mag && r_dy / r_mag === s_dy / s_mag) {\n            return false;\n        }\n        const T2 = (r_dx * (s_py - r_py) + r_dy * (r_px - s_px)) / (s_dx * r_dy - s_dy * r_dx);\n        const T1 = (s_px + s_dx * T2 - r_px) / r_dx;\n        if (T1 < 0)\n            return false;\n        if (T2 < 0 || T2 > 1)\n            return false;\n        result.x = r_px + r_dx * T1;\n        result.y = r_py + r_dy * T1;\n        result.z = T1;\n        result.w = 0;\n        return true;\n    }\n    _getLightPolygon(lightX, lightY, segments) {\n        const points = [];\n        for (let i = 0, len = segments.length; i < len; i++)\n            points.push(segments[i].a, segments[i].b);\n        const _uniquePoints = (points) => {\n            const set = {};\n            return points.filter(p => {\n                const key = p.x + ',' + p.y;\n                if (key in set) {\n                    return false;\n                }\n                else {\n                    set[key] = true;\n                    return true;\n                }\n            });\n        };\n        const uniquePoints = _uniquePoints(points);\n        const uniqueAngles = [];\n        for (let i = 0, len = uniquePoints.length; i < len; i++) {\n            const uniquePoint = uniquePoints[i];\n            const angle = Math.atan2(uniquePoint.y - lightY, uniquePoint.x - lightX);\n            uniqueAngles.push(angle - 0.0001, angle, angle + 0.0001);\n        }\n        const ray = Pool.getItemByClass('LightLine2D', LightLine2D).create(0, 0, 0, 0);\n        const result = Pool.getItemByClass('Vector4', Vector4);\n        let intersects = [];\n        for (let i = 0, len = uniqueAngles.length; i < len; i++) {\n            const angle = uniqueAngles[i];\n            const dx = Math.cos(angle);\n            const dy = Math.sin(angle);\n            ray.a.x = lightX;\n            ray.a.y = lightY;\n            ray.b.x = lightX + dx;\n            ray.b.y = lightY + dy;\n            let closestIntersect;\n            for (let i = 0, len = segments.length; i < len; i++) {\n                if (!this._getIntersection(ray, segments[i], result))\n                    continue;\n                if (!closestIntersect) {\n                    closestIntersect = Pool.getItemByClass('Vector4', Vector4);\n                    result.cloneTo(closestIntersect);\n                }\n                else if (result.z < closestIntersect.z)\n                    closestIntersect.setValue(result.x, result.y, result.z, result.w);\n            }\n            if (!closestIntersect)\n                continue;\n            closestIntersect.w = angle;\n            intersects.push(closestIntersect);\n        }\n        Pool.recover('LightLine2D', ray);\n        Pool.recover('Vector4', result);\n        intersects = intersects.sort((a, b) => { return a.w - b.w; });\n        return intersects;\n    }\n}\nLight2DManager._managerName = 'Light2DManager';\nLight2DManager.MAX_LAYER = 32;\nLight2DManager.SCREEN_SCHMITT_SIZE = 200;\nLight2DManager.DIRECTION_LIGHT_SIZE = 20000;\nLight2DManager.REUSE_CMD = true;\nLight2DManager.REUSE_MESH = true;\nLight2DManager.DEBUG = false;\nLight2DManager.SUPPORT_LIGHT_BLEND_MODE = true;\nLight2DManager.SUPPORT_LIGHT_SCENE_MODE = true;\nLight2DManager._config = new Light2DConfig();\nScene.regManager(Light2DManager._managerName, Light2DManager);\nLaya.addInitCallback(LightAndShadow.__init__);\n","import { ILaya } from \"../../ILaya\";\nimport { Component } from \"../components/Component\";\nimport { Event } from \"../events/Event\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Color } from \"../maths/Color\";\nimport { Point } from \"../maths/Point\";\nimport { Rectangle } from \"../maths/Rectangle\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { ShaderDataType } from \"../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { IndexFormat } from \"../RenderEngine/RenderEnum/IndexFormat\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { Mesh2D, VertexMesh2D } from \"../resource/Mesh2D\";\nimport { Utils } from \"../utils/Utils\";\nimport { Light2DManager } from \"./Light2DManager\";\nexport var Light2DType;\n(function (Light2DType) {\n    Light2DType[Light2DType[\"Base\"] = 0] = \"Base\";\n    Light2DType[Light2DType[\"Spot\"] = 1] = \"Spot\";\n    Light2DType[Light2DType[\"Sprite\"] = 2] = \"Sprite\";\n    Light2DType[Light2DType[\"Freeform\"] = 3] = \"Freeform\";\n    Light2DType[Light2DType[\"Direction\"] = 4] = \"Direction\";\n})(Light2DType || (Light2DType = {}));\nexport var Light2DMode;\n(function (Light2DMode) {\n    Light2DMode[Light2DMode[\"Add\"] = 0] = \"Add\";\n    Light2DMode[Light2DMode[\"Sub\"] = 1] = \"Sub\";\n    Light2DMode[Light2DMode[\"Mul\"] = 2] = \"Mul\";\n    Light2DMode[Light2DMode[\"Mix\"] = 3] = \"Mix\";\n})(Light2DMode || (Light2DMode = {}));\nexport var ShadowFilterType;\n(function (ShadowFilterType) {\n    ShadowFilterType[ShadowFilterType[\"None\"] = 0] = \"None\";\n    ShadowFilterType[ShadowFilterType[\"PCF5\"] = 1] = \"PCF5\";\n    ShadowFilterType[ShadowFilterType[\"PCF9\"] = 2] = \"PCF9\";\n    ShadowFilterType[ShadowFilterType[\"PCF13\"] = 3] = \"PCF13\";\n})(ShadowFilterType || (ShadowFilterType = {}));\nexport class BaseLight2D extends Component {\n    static __init__() {\n        BaseLight2D.LIGHTANDSHADOW = Shader3D.propertyNameToID(\"u_LightAndShadow2D\");\n        BaseLight2D.LIGHTANDSHADOW_ADDMODE = Shader3D.propertyNameToID(\"u_LightAndShadow2D_AddMode\");\n        BaseLight2D.LIGHTANDSHADOW_SUBMODE = Shader3D.propertyNameToID(\"u_LightAndShadow2D_SubMode\");\n        BaseLight2D.LIGHTANDSHADOW_LIGHT_DIRECTION = Shader3D.propertyNameToID(\"u_LightDirection\");\n        BaseLight2D.LIGHTANDSHADOW_PARAM = Shader3D.propertyNameToID(\"u_LightAndShadow2DParam\");\n        BaseLight2D.LIGHTANDSHADOW_AMBIENT = Shader3D.propertyNameToID(\"u_LightAndShadow2DAmbient\");\n        const sceneUniform = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"BaseRender2D\");\n        sceneUniform.addShaderUniform(BaseLight2D.LIGHTANDSHADOW, \"u_LightAndShadow2D\", ShaderDataType.Texture2D);\n        sceneUniform.addShaderUniform(BaseLight2D.LIGHTANDSHADOW_ADDMODE, \"u_LightAndShadow2D_AddMode\", ShaderDataType.Texture2D);\n        sceneUniform.addShaderUniform(BaseLight2D.LIGHTANDSHADOW_SUBMODE, \"u_LightAndShadow2D_SubMode\", ShaderDataType.Texture2D);\n        sceneUniform.addShaderUniform(BaseLight2D.LIGHTANDSHADOW_LIGHT_DIRECTION, \"u_LightDirection\", ShaderDataType.Vector3);\n        sceneUniform.addShaderUniform(BaseLight2D.LIGHTANDSHADOW_PARAM, \"u_LightAndShadow2DParam\", ShaderDataType.Vector4);\n        sceneUniform.addShaderUniform(BaseLight2D.LIGHTANDSHADOW_AMBIENT, \"u_LightAndShadow2DAmbient\", ShaderDataType.Color);\n    }\n    get order() {\n        return this._order;\n    }\n    set order(value) {\n        if (this._order !== value) {\n            this._order = value;\n            this._needUpdateLightAndShadow = true;\n            this._notifyLightOrderChange();\n        }\n    }\n    get lightMode() {\n        return this._lightMode;\n    }\n    set lightMode(value) {\n        if (this._lightMode !== value) {\n            this._lightMode = value;\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get sceneMode() {\n        return this._sceneMode;\n    }\n    set sceneMode(value) {\n        if (this._sceneMode !== value) {\n            this._sceneMode = value;\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        if (value === this._color || !value.equal(this._color)) {\n            value.cloneTo(this._color);\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get intensity() {\n        return this._intensity;\n    }\n    set intensity(value) {\n        if (value !== this._intensity) {\n            this._intensity = value;\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get antiAlias() {\n        return this._antiAlias;\n    }\n    set antiAlias(value) {\n        if (value !== this._antiAlias) {\n            this._antiAlias = value;\n            this._notifyAntiAliasChange();\n        }\n    }\n    get lightRotation() {\n        return this._lightRotation;\n    }\n    set lightRotation(value) {\n        if (value !== this._lightRotation) {\n            this._lightRotation = value;\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get lightScale() {\n        return this._lightScale;\n    }\n    set lightScale(value) {\n        if (value === this._lightScale || !Vector2.equals(value, this._lightScale)) {\n            value.cloneTo(this._lightScale);\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get shadowEnable() {\n        return this._shadowEnable;\n    }\n    set shadowEnable(value) {\n        if (value !== this._shadowEnable) {\n            this._shadowEnable = value;\n            this._needUpdateLightAndShadow = true;\n            this._notifyShadowEnableChange();\n        }\n    }\n    get shadowColor() {\n        return this._shadowColor;\n    }\n    set shadowColor(value) {\n        if (value === this._shadowColor || !value.equal(this._shadowColor)) {\n            value.cloneTo(this._shadowColor);\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get shadowStrength() {\n        return this._shadowStrength;\n    }\n    set shadowStrength(value) {\n        if (value !== this._shadowStrength) {\n            this._shadowStrength = value;\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get shadowFilterType() {\n        return this._shadowFilterType;\n    }\n    set shadowFilterType(value) {\n        if (value !== this._shadowFilterType) {\n            this._shadowFilterType = value;\n            this._needUpdateLightAndShadow = true;\n            this._notifyShadowPCFChange();\n        }\n    }\n    get shadowFilterSmooth() {\n        return this._shadowFilterSmooth;\n    }\n    set shadowFilterSmooth(value) {\n        if (value !== this._shadowFilterSmooth) {\n            this._shadowFilterSmooth = value;\n            this._needUpdateLightAndShadow = true;\n            this._needUpdateLightWorldRange = true;\n        }\n    }\n    get layerMask() {\n        return this._layerMask;\n    }\n    set layerMask(value) {\n        if (value !== this._layerMask) {\n            this._needUpdateLightAndShadow = true;\n            this._notifyLightLayerMaskChange(this._layerMask, value);\n            this._layerMask = value;\n            this._layers.length = 0;\n            for (let i = 0; i < Light2DManager.MAX_LAYER; i++)\n                if (value & (1 << i))\n                    this._layers.push(i);\n        }\n    }\n    get layers() {\n        return this._layers;\n    }\n    get shadowLayerMask() {\n        return this._shadowLayerMask;\n    }\n    set shadowLayerMask(value) {\n        if (value !== this._shadowLayerMask) {\n            this._needUpdateLightAndShadow = true;\n            this._notifyShadowCastLayerMaskChange(this._shadowLayerMask, value);\n            this._shadowLayerMask = value;\n            this._notifyShadowEnableChange();\n        }\n    }\n    constructor() {\n        super();\n        this._type = Light2DType.Base;\n        this._lightMode = Light2DMode.Add;\n        this._sceneMode = Light2DMode.Mul;\n        this._order = 0;\n        this._color = new Color(1, 1, 1, 1);\n        this._intensity = 1;\n        this._antiAlias = false;\n        this._lightRotation = 0;\n        this._lightScale = new Vector2(1, 1);\n        this._layerMask = 1;\n        this._layers = [0];\n        this._shadowEnable = false;\n        this._shadowColor = new Color(0, 0, 0, 1);\n        this._shadowStrength = 0.5;\n        this._shadowFilterSmooth = 1;\n        this._shadowLayerMask = 1;\n        this._shadowFilterType = ShadowFilterType.None;\n        this._localRange = new Rectangle();\n        this._worldRange = new Rectangle();\n        this._lightRange = new Rectangle();\n        this._recoverFC = 0;\n        this._needToRecover = [];\n        this._inScreen = false;\n        this._screenCache = new Rectangle();\n        this._texSize = new Vector2(1, 1);\n        this.showLightTexture = false;\n        this._needUpdateLight = false;\n        this._needUpdateLightAndShadow = false;\n        this._needUpdateLightLocalRange = false;\n        this._needUpdateLightWorldRange = false;\n        this._lightId = BaseLight2D.idCounter++;\n    }\n    _notifyLightLayerMaskChange(oldLayerMask, newLayerMask) {\n        var _a, _b;\n        const light2DManager = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager;\n        if (light2DManager) {\n            light2DManager.lightLayerMaskChange(this, oldLayerMask, newLayerMask);\n            light2DManager.needCollectLightInLayer(newLayerMask);\n        }\n    }\n    _notifyShadowCastLayerMaskChange(oldLayerMask, newLayerMask) {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager) === null || _c === void 0 ? void 0 : _c.lightShadowLayerMaskChange(this, oldLayerMask, newLayerMask);\n    }\n    _notifyShadowPCFChange() {\n        var _a, _b;\n        const light2DManager = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager;\n        if (light2DManager) {\n            light2DManager.lightShadowPCFChange(this);\n            light2DManager.needCollectLightInLayer(this.layerMask);\n        }\n    }\n    _notifyShadowEnableChange() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager) === null || _c === void 0 ? void 0 : _c.lightShadowEnableChange(this);\n    }\n    _notifyLightOrderChange() {\n        var _a, _b, _c;\n        if (Light2DManager.SUPPORT_LIGHT_BLEND_MODE)\n            (_c = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager) === null || _c === void 0 ? void 0 : _c.lightRenderOrderChange(this);\n    }\n    _notifyAntiAliasChange() { }\n    _onEnable() {\n        var _a, _b;\n        super._onEnable();\n        this.owner.on(Event.TRANSFORM_CHANGED, this, this._transformChange);\n        (_b = (_a = this.owner.scene) === null || _a === void 0 ? void 0 : _a._light2DManager) === null || _b === void 0 ? void 0 : _b.addLight(this);\n    }\n    _onDisable() {\n        var _a, _b;\n        super._onDisable();\n        this._clearScreenCache();\n        this.owner.off(Event.TRANSFORM_CHANGED, this, this._transformChange);\n        (_b = (_a = this.owner.scene) === null || _a === void 0 ? void 0 : _a._light2DManager) === null || _b === void 0 ? void 0 : _b.removeLight(this);\n    }\n    _onDestroy() { }\n    _transformChange() {\n        var _a, _b, _c;\n        this._clearScreenCache();\n        this._needUpdateLightAndShadow = true;\n        this._needUpdateLightWorldRange = true;\n        (_c = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager) === null || _c === void 0 ? void 0 : _c._lightTransformChange(this);\n    }\n    _clearScreenCache() {\n        this._screenCache.width = 0;\n        this._screenCache.height = 0;\n    }\n    _pcfIntensity() {\n        switch (this.shadowFilterType) {\n            default:\n            case ShadowFilterType.None:\n                return 1;\n            case ShadowFilterType.PCF5:\n                return 1 / 5;\n            case ShadowFilterType.PCF9:\n                return 1 / 9;\n            case ShadowFilterType.PCF13:\n                return 1 / 13;\n        }\n    }\n    _getLocalRange() {\n        if (this._needUpdateLightLocalRange)\n            this._calcLocalRange();\n        return this._localRange;\n    }\n    _getWorldRange(screen) {\n        if (this._needUpdateLightLocalRange)\n            this._calcLocalRange();\n        if (this._needUpdateLightWorldRange)\n            this._calcWorldRange(screen);\n        return this._worldRange;\n    }\n    _getLightRange(screen) {\n        if (this._needUpdateLightLocalRange)\n            this._calcLocalRange();\n        if (this._needUpdateLightWorldRange)\n            this._calcWorldRange(screen);\n        return this._lightRange;\n    }\n    _getTextureSize() {\n        if (this._texLight) {\n            this._texSize.x = this._texLight.width;\n            this._texSize.y = this._texLight.height;\n        }\n        return this._texSize;\n    }\n    _isNeedShadowMesh() {\n        return (!this._shadowColor.equal(Color.BLACK) || this._shadowStrength < 1) && this.shadowEnable;\n    }\n    _rectContain(rect1, rect2) {\n        return (rect2.x >= rect1.x &&\n            rect2.y >= rect1.y &&\n            (rect2.x + rect2.width) <= (rect1.x + rect1.width) &&\n            (rect2.y + rect2.height) <= (rect1.y + rect1.height));\n    }\n    getLightType() {\n        return this._type;\n    }\n    getGlobalPosX() {\n        return this.owner.globalTrans.x;\n    }\n    getGlobalPosY() {\n        return this.owner.globalTrans.y;\n    }\n    getScenePos(out) {\n        this.owner.globalTrans.getScenePos(out);\n        const m = ILaya.stage.transform;\n        const x = m.a * out.x + m.c * out.y + m.tx;\n        const y = m.b * out.x + m.d * out.y + m.ty;\n        out.x = x;\n        out.y = y;\n        return out;\n    }\n    setLayerMaskByList(layerList) {\n        let layer = 0;\n        for (let i = layerList.length - 1; i > -1; i--)\n            layer |= (1 << layerList[i]);\n        this.layerMask = layer;\n    }\n    isLayerEnable(layer) {\n        return (this.layerMask & (1 << layer));\n    }\n    setShadowLayerMaskByList(layerList) {\n        let shadowLayer = 0;\n        for (let i = layerList.length - 1; i > -1; i--)\n            shadowLayer |= (1 << layerList[i]);\n        this.shadowLayerMask = shadowLayer;\n    }\n    isShadowLayerEnable(layer) {\n        return (this.shadowLayerMask & (1 << layer));\n    }\n    _printTextureToConsoleAsBase64() {\n        if (this._texLight)\n            Utils.uint8ArrayToArrayBufferAsync(this._texLight).then(str => console.log(str));\n    }\n    _calcLocalRange() {\n        this._needUpdateLightLocalRange = false;\n    }\n    _calcWorldRange(screen) {\n        var _a, _b, _c;\n        this._needUpdateLightWorldRange = false;\n        (_c = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager) === null || _c === void 0 ? void 0 : _c.needCheckLightRange(this);\n    }\n    _lightScaleAndRotation() {\n        const m = ILaya.stage.transform;\n        const p = this.owner.globalTrans.getSceneScale(Point.TEMP);\n        const sx = Math.abs(p.x * m.getScaleX());\n        const sy = Math.abs(p.y * m.getScaleY());\n        Vector2.TEMP.x = 1 / sx;\n        Vector2.TEMP.y = 1 / sy;\n        this.lightScale = Vector2.TEMP;\n        this.lightRotation = this.owner.globalTrans.getSceneRotation() * Math.PI / 180;\n    }\n    renderLightTexture() {\n        if (ILaya.timer.currFrame > this._recoverFC) {\n            if (this._needToRecover.length > 0) {\n                for (let i = this._needToRecover.length - 1; i > -1; i--)\n                    this._needToRecover[i].destroy();\n                this._needToRecover.length = 0;\n            }\n            this._recoverFC = ILaya.timer.currFrame + 10;\n        }\n    }\n    _isInRange(range) {\n        return range && this._rectContain(range, this._getWorldRange());\n    }\n    _isInScreen(screen) {\n        const cache = this._screenCache;\n        if (cache.x === screen.x\n            && cache.y === screen.y\n            && cache.width === screen.width\n            && cache.right === screen.height) {\n            return this._inScreen;\n        }\n        this._inScreen = this._getWorldRange().intersects(screen);\n        screen.cloneTo(cache);\n        return this._inScreen;\n    }\n    _makeOrUpdateMesh(points, inds, mesh, recover) {\n        const vertices = new Float32Array(points.length * 5);\n        const indices = new Uint16Array(inds);\n        let index = 0, p;\n        for (let i = 0, len = points.length; i < len; i++) {\n            p = points[i];\n            vertices[index++] = p.x;\n            vertices[index++] = p.y;\n            vertices[index++] = 0;\n            vertices[index++] = p.z;\n            vertices[index++] = 0;\n        }\n        if (mesh) {\n            const idx = mesh.getIndices();\n            const ver = mesh.getVertices()[0];\n            if (Light2DManager.REUSE_MESH\n                && idx.length >= indices.length\n                && ver.byteLength >= vertices.byteLength) {\n                mesh.setIndices(indices);\n                mesh.setVertexByIndex(vertices.buffer, 0);\n                mesh.getSubMesh(0).clearRenderParams();\n                mesh.getSubMesh(0).setDrawElemenParams(indices.length, 0);\n                return mesh;\n            }\n            else if (recover)\n                recover.push(mesh);\n        }\n        const declaration = VertexMesh2D.getVertexDeclaration(['POSITION,UV'], false)[0];\n        return Mesh2D.createMesh2DByPrimitive([vertices], [declaration], indices, IndexFormat.UInt16, [{ length: indices.length, start: 0 }], true);\n    }\n}\nBaseLight2D.idCounter = 0;\n","import { Rectangle } from \"../maths/Rectangle\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { BaseLight2D, Light2DType } from \"./BaseLight2D\";\nimport { Light2DManager } from \"./Light2DManager\";\nexport class DirectionLight2D extends BaseLight2D {\n    constructor(directionAngle = 0) {\n        super();\n        this._directionAngle = 0;\n        this._directionVector = new Vector2(1, 0);\n        this._shadowDistance = 500;\n        this._shadowRange = new Rectangle();\n        this._type = Light2DType.Direction;\n        this.directionAngle = directionAngle;\n        this._calcLocalRange();\n    }\n    get directionAngle() {\n        return this._directionAngle;\n    }\n    set directionAngle(value) {\n        value %= 360;\n        if (this._directionAngle !== value) {\n            this._directionAngle = value;\n            this._directionVector.x = Math.cos(this._directionAngle * Math.PI / 180);\n            this._directionVector.y = Math.sin(this._directionAngle * Math.PI / 180);\n            this._needUpdateLightAndShadow = true;\n        }\n    }\n    get directionVector() {\n        return this._directionVector;\n    }\n    set directionVector(value) {\n        const len = Vector2.scalarLength(value);\n        if (len > 0) {\n            const x = value.x / len;\n            const y = value.y / len;\n            if (value === this._directionVector\n                || this._directionVector.x !== x || this._directionVector.y !== y) {\n                this._directionAngle = Math.atan2(y, x) * 180 / Math.PI;\n                this._directionVector.x = x;\n                this._directionVector.y = y;\n                this._needUpdateLightAndShadow = true;\n            }\n        }\n    }\n    get shadowDistance() {\n        return this._shadowDistance;\n    }\n    set shadowDistance(value) {\n        var _a, _b, _c;\n        if (this._shadowDistance !== value) {\n            this._shadowDistance = value;\n            this._needUpdateLightAndShadow = true;\n            (_c = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager) === null || _c === void 0 ? void 0 : _c.needCollectOccluderInLight(this.layerMask);\n        }\n    }\n    _getWorldRange(screen) {\n        if (screen && !this._screenCache.equals(screen)) {\n            screen.cloneTo(this._screenCache);\n            this._calcWorldRange(screen);\n        }\n        return this._worldRange;\n    }\n    _calcLocalRange() {\n        super._calcLocalRange();\n        this._localRange.x = -Light2DManager.DIRECTION_LIGHT_SIZE / 2;\n        this._localRange.y = -Light2DManager.DIRECTION_LIGHT_SIZE / 2;\n        this._localRange.width = Light2DManager.DIRECTION_LIGHT_SIZE;\n        this._localRange.height = Light2DManager.DIRECTION_LIGHT_SIZE;\n    }\n    _calcWorldRange(screen) {\n        super._calcWorldRange(screen);\n        this._worldRange.x = this._localRange.x + (screen ? (screen.x | 0) : 0);\n        this._worldRange.y = this._localRange.y + (screen ? (screen.y | 0) : 0);\n        this._worldRange.width = this._localRange.width;\n        this._worldRange.height = this._localRange.height;\n        this._lightRange.x = this._worldRange.x;\n        this._lightRange.y = this._worldRange.x;\n        this._lightRange.width = this._worldRange.width;\n        this._lightRange.height = this._worldRange.height;\n    }\n    _getShadowRange(screen) {\n        this._shadowRange.x = -this._shadowDistance / 2 + (screen ? (screen.x | 0) : 0);\n        this._shadowRange.y = -this._shadowDistance / 2 + (screen ? (screen.y | 0) : 0);\n        this._shadowRange.width = Light2DManager.DIRECTION_LIGHT_SIZE;\n        this._shadowRange.height = Light2DManager.DIRECTION_LIGHT_SIZE;\n        return this._shadowRange;\n    }\n    _isInRange(range) {\n        return true;\n    }\n    _isInScreen(screen) {\n        return true;\n    }\n}\n","import { ILaya } from \"../../ILaya\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Color } from \"../maths/Color\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Vector2 } from \"../maths/Vector2\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { RenderState } from \"../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../resource/Material\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { CommandBuffer2D } from \"../display/Scene2DSpecial/RenderCMD2D/CommandBuffer2D\";\nimport { DrawMesh2DCMD } from \"../display/Scene2DSpecial/RenderCMD2D/DrawMesh2DCMD\";\nimport { Set2DRTCMD } from \"../display/Scene2DSpecial/RenderCMD2D/Set2DRenderTargetCMD\";\nimport { BaseLight2D, Light2DType } from \"./BaseLight2D\";\nimport { Light2DManager } from \"./Light2DManager\";\nimport { PolygonPoint2D } from \"./PolygonPoint2D\";\nimport { RenderTexture } from \"../resource/RenderTexture\";\nexport class FreeformLight2D extends BaseLight2D {\n    constructor() {\n        super();\n        this._falloffRange = 1;\n        this._localCenter = new Vector2();\n        this._type = Light2DType.Freeform;\n        this._material = new Material();\n        this._material.setShaderName('LightGen2D');\n        this._material.setBoolByIndex(Shader3D.DEPTH_WRITE, false);\n        this._material.setIntByIndex(Shader3D.DEPTH_TEST, RenderState.DEPTHTEST_OFF);\n        this._material.setIntByIndex(Shader3D.BLEND, RenderState.BLEND_ENABLE_ALL);\n        this._material.setIntByIndex(Shader3D.BLEND_EQUATION, RenderState.BLENDEQUATION_ADD);\n        this._material.setIntByIndex(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_SRC_ALPHA);\n        this._material.setIntByIndex(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\n        this._material.setIntByIndex(Shader3D.CULL, RenderState.CULL_NONE);\n        this._cmdBuffer = new CommandBuffer2D('Light2DRender_Freeform');\n        this._defaultPoly();\n    }\n    get falloffRange() {\n        return this._falloffRange;\n    }\n    set falloffRange(value) {\n        if (this._falloffRange !== value) {\n            this._falloffRange = value;\n            this._needUpdateLight = true;\n            this._needUpdateLightLocalRange = true;\n            this._needUpdateLightWorldRange = true;\n            this._clearScreenCache();\n            this._limitParam();\n        }\n    }\n    _defaultPoly() {\n        if (!this._lightPolygon) {\n            const poly = new PolygonPoint2D();\n            poly.addPoint(-100, -100);\n            poly.addPoint(100, -100);\n            poly.addPoint(100, 100);\n            poly.addPoint(-100, 100);\n            this.polygonPoint = poly;\n        }\n    }\n    set polygonPoint(poly) {\n        var _a, _b;\n        const light2DManager = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager;\n        if (poly) {\n            this._lightPolygon = poly;\n            this._globalPolygon = poly.clone();\n            this._needUpdateLight = true;\n            this._needUpdateLightLocalRange = true;\n            this._needUpdateLightWorldRange = true;\n            this._clearScreenCache();\n            light2DManager === null || light2DManager === void 0 ? void 0 : light2DManager.addLight(this);\n        }\n        else {\n            this._lightPolygon = null;\n            this._globalPolygon = null;\n            light2DManager === null || light2DManager === void 0 ? void 0 : light2DManager.removeLight(this);\n        }\n        light2DManager === null || light2DManager === void 0 ? void 0 : light2DManager.needCollectLightInLayer(this.layerMask);\n    }\n    get polygonPoint() {\n        return this._lightPolygon;\n    }\n    getGlobalPosX() {\n        return super.getGlobalPosX() + this._localCenter.x;\n    }\n    getGlobalPosY() {\n        return super.getGlobalPosY() + this._localCenter.y;\n    }\n    _transformChange() {\n        var _a, _b, _c;\n        if (this._lightPolygon) {\n            this._clearScreenCache();\n            this._needUpdateLightAndShadow = true;\n            this._needUpdateLightWorldRange = true;\n            (_c = (_b = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.scene) === null || _b === void 0 ? void 0 : _b._light2DManager) === null || _c === void 0 ? void 0 : _c._lightTransformChange(this);\n        }\n    }\n    _calcLocalRange() {\n        super._calcLocalRange();\n        let xmin = Number.POSITIVE_INFINITY;\n        let ymin = Number.POSITIVE_INFINITY;\n        let xmax = Number.NEGATIVE_INFINITY;\n        let ymax = Number.NEGATIVE_INFINITY;\n        const polygon = this._lightPolygon.points;\n        for (let i = polygon.length - 2; i > -1; i -= 2) {\n            const x = polygon[i + 0];\n            const y = polygon[i + 1];\n            if (xmin > x)\n                xmin = x;\n            if (xmax < x)\n                xmax = x;\n            if (ymin > y)\n                ymin = y;\n            if (ymax < y)\n                ymax = y;\n        }\n        let x = (xmax - xmin);\n        let y = (ymax - ymin);\n        const t = this._falloffRange * FreeformLight2D.FALLOF_WIDTH;\n        const w = (x + 2 + t * 2) | 0;\n        const h = (y + 2 + t * 2) | 0;\n        this._localCenter.x = (xmax + xmin) / 2;\n        this._localCenter.y = (ymax + ymin) / 2;\n        this._localRange.x = -w / 2;\n        this._localRange.y = -h / 2;\n        this._localRange.width = w;\n        this._localRange.height = h;\n    }\n    _calcWorldRange(screen) {\n        super._calcWorldRange(screen);\n        this._lightScaleAndRotation();\n        const mm = ILaya.stage.transform;\n        const pp = this.owner.globalTrans.getScenePos(Point.TEMP);\n        const px = mm.a * pp.x + mm.c * pp.y + mm.tx;\n        const py = mm.b * pp.x + mm.d * pp.y + mm.ty;\n        this.owner.globalTrans.getSceneScale(pp);\n        const sx = Math.abs(pp.x * mm.getScaleX());\n        const sy = Math.abs(pp.y * mm.getScaleY());\n        const x = this._localRange.x;\n        const y = this._localRange.y;\n        const w = this._localRange.width;\n        const h = this._localRange.height;\n        const m = Math.sqrt((w * sx) ** 2 + (h * sy) ** 2) * 1.2 | 0;\n        this._worldRange.x = (px - m / 2 + this._localCenter.x) | 0;\n        this._worldRange.y = (py - m / 2 + this._localCenter.y) | 0;\n        this._worldRange.width = m;\n        this._worldRange.height = m;\n        this._lightRange.x = (px + x + this._localCenter.x) | 0;\n        this._lightRange.y = (py + y + this._localCenter.y) | 0;\n        this._lightRange.width = w;\n        this._lightRange.height = h;\n        const polygon = this._globalPolygon.points;\n        this._lightPolygon.cloneTo(this._globalPolygon);\n        for (let i = polygon.length - 2; i > -1; i -= 2) {\n            polygon[i + 0] -= (x + this._localCenter.x);\n            polygon[i + 1] -= (y + this._localCenter.y);\n        }\n    }\n    _notifyAntiAliasChange() {\n        const range = this._getLocalRange();\n        this._buildRenderTexture(range.width, range.height);\n        this._needUpdateLight = true;\n    }\n    _buildRenderTexture(width, height) {\n        if (this._texLight)\n            this._texLight.destroy();\n        const tex = this._texLight = new RenderTexture(width, height, RenderTargetFormat.R8G8B8A8, null, false, this.antiAlias ? 4 : 1);\n        tex.wrapModeU = tex.wrapModeV = WrapMode.Clamp;\n        if (!this._cmdRT)\n            this._cmdRT = Set2DRTCMD.create(tex, true, Color.CLEAR, LayaGL.renderEngine._screenInvertY);\n        else\n            this._cmdRT.renderTexture = tex;\n    }\n    renderLightTexture() {\n        var _a;\n        super.renderLightTexture();\n        if (this._needUpdateLight) {\n            this._needUpdateLight = false;\n            const range = this._getLocalRange();\n            const width = range.width;\n            const height = range.height;\n            if (width === 0 || height === 0)\n                return;\n            if (!this._texLight || !(this._texLight instanceof RenderTexture)) {\n                this._buildRenderTexture(width, height);\n                if (Light2DManager.DEBUG)\n                    console.log('create freeform light texture', width, height);\n            }\n            else if (this._texLight.width !== width || this._texLight.height !== height) {\n                this._buildRenderTexture(width, height);\n                if (Light2DManager.DEBUG)\n                    console.log('update freeform light texture size', width, height);\n            }\n            this._getWorldRange();\n            const mesh = this._createMesh(this._falloffRange * FreeformLight2D.FALLOF_WIDTH, 8, (_a = this._cmdMesh) === null || _a === void 0 ? void 0 : _a.mesh, this._needToRecover);\n            if (!this._cmdMesh)\n                this._cmdMesh = DrawMesh2DCMD.create(mesh, Matrix.EMPTY, Texture2D.whiteTexture, Color.WHITE, this._material);\n            else\n                this._cmdMesh.mesh = mesh;\n            this._cmdBuffer.addCacheCommand(this._cmdRT);\n            this._cmdBuffer.addCacheCommand(this._cmdMesh);\n            this._cmdBuffer.apply(true);\n            this._cmdBuffer.clear(false);\n            this._needUpdateLightAndShadow = true;\n            if (Light2DManager.DEBUG) {\n                if (this.showLightTexture)\n                    this._printTextureToConsoleAsBase64();\n                console.log('update freeform light texture contain');\n            }\n        }\n    }\n    _limitParam() {\n        this._falloffRange = Math.max(Math.min(this._falloffRange, 10), 0);\n    }\n    _createMesh(expand, arcSegments = 8, mesh, recover) {\n        const points = [];\n        const inds = [];\n        const poly = this._globalPolygon.points;\n        const len = poly.length / 2 | 0;\n        const normal1 = new Vector2();\n        const normal2 = new Vector2();\n        const _isConvex = (ax, ay, bx, by, cx, cy) => {\n            return (bx - ax) * (cy - ay) - (by - ay) * (cx - ax) > 0;\n        };\n        const _getNormal = (ax, ay, bx, by, n) => {\n            const dx = bx - ax;\n            const dy = by - ay;\n            const length = Math.sqrt(dx * dx + dy * dy);\n            n.x = dy / length;\n            n.y = -dx / length;\n        };\n        const _intersection = (p1, p2, p3, p4) => {\n            const d1 = { x: p2.x - p1.x, y: p2.y - p1.y };\n            const d2 = { x: p4.x - p3.x, y: p4.y - p3.y };\n            const denominator = d1.x * d2.y - d1.y * d2.x;\n            if (Math.abs(denominator) < Number.EPSILON)\n                return null;\n            const t = ((p3.x - p1.x) * d2.y - (p3.y - p1.y) * d2.x) / denominator;\n            const u = ((p3.x - p1.x) * d1.y - (p3.y - p1.y) * d1.x) / denominator;\n            if (t >= 0 && t <= 1 && u >= 0 && u <= 1) {\n                return new Vector3(p1.x + t * d1.x, p1.y + t * d1.y, p1.z);\n            }\n            return null;\n        };\n        for (let i = 0; i < len; i++)\n            points.push(new Vector3(poly[i * 2], poly[i * 2 + 1], 1));\n        for (let i = 0; i < len; i++) {\n            const prev = i - 1 >= 0 ? i - 1 : len - 1;\n            const next = (i + 1) % len;\n            const next2 = (i + 2) % len;\n            _getNormal(poly[i * 2], poly[i * 2 + 1], poly[next * 2], poly[next * 2 + 1], normal1);\n            _getNormal(poly[next * 2], poly[next * 2 + 1], poly[next2 * 2], poly[next2 * 2 + 1], normal2);\n            const start = points.length;\n            const p1 = new Vector3(poly[i * 2] + expand * normal1.x, poly[i * 2 + 1] + expand * normal1.y, 0);\n            const p2 = new Vector3(poly[next * 2] + expand * normal1.x, poly[next * 2 + 1] + expand * normal1.y, 0);\n            if (_isConvex(poly[i * 2], poly[i * 2 + 1], poly[next * 2], poly[next * 2 + 1], poly[next2 * 2], poly[next2 * 2 + 1])) {\n                const angle1 = Math.atan2(normal1.y, normal1.x);\n                const angle2 = Math.atan2(normal2.y, normal2.x);\n                let angleDiff = angle2 - angle1;\n                if (angleDiff < 0)\n                    angleDiff += Math.PI * 2;\n                if (_isConvex(poly[prev * 2], poly[prev * 2 + 1], poly[i * 2], poly[i * 2 + 1], poly[next * 2], poly[next * 2 + 1]))\n                    points.push(p1, p2);\n                else {\n                    _getNormal(poly[prev * 2], poly[prev * 2 + 1], poly[i * 2], poly[i * 2 + 1], normal1);\n                    const p3 = new Vector3(poly[prev * 2] + expand * normal1.x, poly[prev * 2 + 1] + expand * normal1.y, 0);\n                    const p4 = new Vector3(poly[i * 2] + expand * normal1.x, poly[i * 2 + 1] + expand * normal1.y, 0);\n                    let t = _intersection(p1, p2, p3, p4);\n                    if (!t)\n                        t = p1;\n                    points.push(t, p2);\n                }\n                inds.push(i, start, start + 1);\n                inds.push(i, start + 1, next);\n                for (let j = 1; j <= arcSegments; j++) {\n                    const angle = angle1 + (angleDiff * j) / arcSegments;\n                    points.push(new Vector3(poly[next * 2 + 0] + expand * Math.cos(angle), poly[next * 2 + 1] + expand * Math.sin(angle), 0));\n                    inds.push(next, start + j, start + j + 1);\n                }\n            }\n            else {\n                const p3 = new Vector3(poly[next * 2] + expand * normal2.x, poly[next * 2 + 1] + expand * normal2.y, 0);\n                const p4 = new Vector3(poly[next2 * 2] + expand * normal2.x, poly[next2 * 2 + 1] + expand * normal2.y, 0);\n                let t = _intersection(p1, p2, p3, p4);\n                if (!t)\n                    t = p2;\n                points.push(p1, t, p4);\n                inds.push(i, start, start + 1);\n                inds.push(i, start + 1, next);\n            }\n        }\n        inds.push(...this._earCut(poly));\n        return this._makeOrUpdateMesh(points, inds, mesh, recover);\n    }\n    _earCut(polygon) {\n        const vertices = [];\n        let len = polygon.length / 2 | 0;\n        for (let i = 0; i < len; i++)\n            vertices.push({ x: polygon[i * 2], y: polygon[i * 2 + 1], index: i });\n        const triangles = [];\n        len = vertices.length;\n        if (len < 3)\n            return triangles;\n        const indices = vertices.map((_, i) => i);\n        let vertexCount = len;\n        let i = 0, stop = vertexCount;\n        while (vertexCount > 2) {\n            stop--;\n            if (i >= vertexCount)\n                i = 0;\n            const a = indices[i];\n            const b = indices[(i + 1) % vertexCount];\n            const c = indices[(i + 2) % vertexCount];\n            if (this._isEarTip(vertices, indices, vertexCount, a, b, c)) {\n                triangles.push(vertices[a].index, vertices[b].index, vertices[c].index);\n                indices.splice((i + 1) % vertexCount, 1);\n                vertexCount--;\n                stop = vertexCount;\n            }\n            else\n                i++;\n            if (stop <= 0)\n                break;\n        }\n        return triangles;\n    }\n    _isEarTip(vertices, indices, vertexCount, a, b, c) {\n        const _isConvex = (a, b, c) => {\n            return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) >= 0;\n        };\n        return _isConvex(vertices[a], vertices[b], vertices[c]) &&\n            !this._containsAnyPoint(vertices, indices, vertexCount, vertices[a], vertices[b], vertices[c], [a, b, c]);\n    }\n    _containsAnyPoint(vertices, indices, vertexCount, a, b, c, exclude) {\n        const _pointInTriangle = (p, a, b, c) => {\n            const _triangleArea = (a, b, c) => {\n                return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) / 2;\n            };\n            const area = _triangleArea(a, b, c);\n            const area1 = _triangleArea(p, b, c);\n            const area2 = _triangleArea(a, p, c);\n            const area3 = _triangleArea(a, b, p);\n            if (Math.abs(area) < Number.EPSILON)\n                return false;\n            const u = area1 / area;\n            const v = area2 / area;\n            const w = area3 / area;\n            return u >= 0 && v >= 0 && w >= 0 && Math.abs(u + v + w - 1) < Number.EPSILON;\n        };\n        for (let i = 0; i < vertexCount; i++) {\n            const index = indices[i];\n            if (exclude.includes(index))\n                continue;\n            if (_pointInTriangle(vertices[index], a, b, c))\n                return true;\n        }\n        return false;\n    }\n    _onDestroy() {\n        super._onDestroy();\n        if (this._texLight) {\n            this._texLight.destroy();\n            this._texLight = null;\n        }\n    }\n}\nFreeformLight2D.FALLOF_WIDTH = 100;\n","import { Component } from \"../components/Component\";\nimport { Event } from \"../events/Event\";\nimport { LightOccluder2DCore } from \"./LightOccluder2DCore\";\nexport class LightOccluder2D extends Component {\n    get layerMask() {\n        return this._core.layerMask;\n    }\n    set layerMask(value) {\n        this._core.layerMask = value;\n    }\n    get canInLight() {\n        return this._core.canInLight;\n    }\n    set canInLight(value) {\n        this._core.canInLight = value;\n    }\n    get outside() {\n        return this._core.outside;\n    }\n    set outside(value) {\n        this._core.outside = value;\n    }\n    get polygonPoint() {\n        return this._core.polygonPoint;\n    }\n    set polygonPoint(poly) {\n        this._core.polygonPoint = poly;\n    }\n    constructor() {\n        super();\n        this._core = new LightOccluder2DCore();\n    }\n    _onEnable() {\n        var _a;\n        super._onEnable();\n        this.owner.on(Event.TRANSFORM_CHANGED, this._core, this._core._transformChange);\n        this._core.owner = this.owner;\n        this._core.manager = (_a = this.owner.scene) === null || _a === void 0 ? void 0 : _a._light2DManager;\n        this._core._onEnable();\n    }\n    _onDisable() {\n        super._onDisable();\n        this.owner.off(Event.TRANSFORM_CHANGED, this._core, this._core._transformChange);\n        this._core._onDisable();\n    }\n}\n","import { ILaya } from \"../../ILaya\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Color } from \"../maths/Color\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Point } from \"../maths/Point\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { RenderState } from \"../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../resource/Material\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { CommandBuffer2D } from \"../display/Scene2DSpecial/RenderCMD2D/CommandBuffer2D\";\nimport { DrawMesh2DCMD } from \"../display/Scene2DSpecial/RenderCMD2D/DrawMesh2DCMD\";\nimport { Set2DRTCMD } from \"../display/Scene2DSpecial/RenderCMD2D/Set2DRenderTargetCMD\";\nimport { BaseLight2D, Light2DType } from \"./BaseLight2D\";\nimport { Light2DManager } from \"./Light2DManager\";\nimport { RenderTexture } from \"../resource/RenderTexture\";\nexport class SpotLight2D extends BaseLight2D {\n    constructor(innerRadius = 100, outerRadius = 200, innerAngle = 90, outerAngle = 120, falloff = 1) {\n        super();\n        this._falloffIntensity = 1;\n        this._type = Light2DType.Spot;\n        this._innerAngle = innerAngle;\n        this._outerAngle = outerAngle;\n        this._innerRadius = innerRadius;\n        this._outerRadius = outerRadius;\n        this._falloffIntensity = falloff;\n        this._needUpdateLight = true;\n        this._needUpdateLightLocalRange = true;\n        this._needUpdateLightWorldRange = true;\n        this._limitParam();\n        this._material = new Material();\n        this._material.setShaderName('LightGen2D');\n        this._material.setBoolByIndex(Shader3D.DEPTH_WRITE, false);\n        this._material.setIntByIndex(Shader3D.DEPTH_TEST, RenderState.DEPTHTEST_OFF);\n        this._material.setIntByIndex(Shader3D.BLEND, RenderState.BLEND_ENABLE_ALL);\n        this._material.setIntByIndex(Shader3D.BLEND_EQUATION, RenderState.BLENDEQUATION_ADD);\n        this._material.setIntByIndex(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_ONE);\n        this._material.setIntByIndex(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE);\n        this._material.setIntByIndex(Shader3D.CULL, RenderState.CULL_NONE);\n        this._cmdBuffer = new CommandBuffer2D('Light2DRender_Spot');\n    }\n    get innerRadius() {\n        return this._innerRadius;\n    }\n    set innerRadius(value) {\n        if (this._innerRadius !== value) {\n            this._innerRadius = value;\n            this._needUpdateLight = true;\n            this._needUpdateLightLocalRange = true;\n            this._needUpdateLightWorldRange = true;\n            super._clearScreenCache();\n            this._limitParam();\n        }\n    }\n    get outerRadius() {\n        return this._outerRadius;\n    }\n    set outerRadius(value) {\n        if (this._outerRadius !== value) {\n            this._outerRadius = value;\n            this._needUpdateLight = true;\n            this._needUpdateLightLocalRange = true;\n            this._needUpdateLightWorldRange = true;\n            super._clearScreenCache();\n            this._limitParam();\n        }\n    }\n    get innerAngle() {\n        return this._innerAngle;\n    }\n    set innerAngle(value) {\n        if (this._innerAngle !== value) {\n            this._innerAngle = value;\n            this._needUpdateLight = true;\n            this._limitParam();\n        }\n    }\n    get outerAngle() {\n        return this._outerAngle;\n    }\n    set outerAngle(value) {\n        if (this._outerAngle !== value) {\n            this._outerAngle = value;\n            this._needUpdateLight = true;\n            this._limitParam();\n        }\n    }\n    get falloffIntensity() {\n        return this._falloffIntensity;\n    }\n    set falloffIntensity(value) {\n        if (this._falloffIntensity !== value) {\n            this._falloffIntensity = value;\n            this._needUpdateLight = true;\n            this._limitParam();\n        }\n    }\n    _calcLocalRange() {\n        super._calcLocalRange();\n        const w = this._outerRadius * 2.1 | 0;\n        const h = this._outerRadius * 2.1 | 0;\n        this._localRange.x = -w / 2;\n        this._localRange.y = -h / 2;\n        this._localRange.width = w;\n        this._localRange.height = h;\n    }\n    _calcWorldRange(screen) {\n        super._calcWorldRange(screen);\n        this._lightScaleAndRotation();\n        const mm = ILaya.stage.transform;\n        const pp = this.owner.globalTrans.getScenePos(Point.TEMP);\n        const px = mm.a * pp.x + mm.c * pp.y + mm.tx;\n        const py = mm.b * pp.x + mm.d * pp.y + mm.ty;\n        this.owner.globalTrans.getSceneScale(pp);\n        const sx = Math.abs(pp.x * mm.getScaleX());\n        const sy = Math.abs(pp.y * mm.getScaleY());\n        const x = this._localRange.x;\n        const y = this._localRange.y;\n        const w = this._localRange.width;\n        const h = this._localRange.height;\n        const m = Math.max(w * sx, h * sy) | 0;\n        this._worldRange.x = (px - m / 2) | 0;\n        this._worldRange.y = (py - m / 2) | 0;\n        this._worldRange.width = m;\n        this._worldRange.height = m;\n        this._lightRange.x = (px + x) | 0;\n        this._lightRange.y = (py + y) | 0;\n        this._lightRange.width = w;\n        this._lightRange.height = h;\n    }\n    _notifyAntiAliasChange() {\n        const range = this._getLocalRange();\n        this._buildRenderTexture(range.width, range.height);\n        this._needUpdateLight = true;\n    }\n    _buildRenderTexture(width, height) {\n        if (this._texLight)\n            this._texLight.destroy();\n        const tex = this._texLight = new RenderTexture(width, height, RenderTargetFormat.R8G8B8A8, null, false, this.antiAlias ? 4 : 1);\n        tex.wrapModeU = tex.wrapModeV = WrapMode.Clamp;\n        if (!this._cmdRT)\n            this._cmdRT = Set2DRTCMD.create(tex, true, Color.CLEAR, LayaGL.renderEngine._screenInvertY);\n        else\n            this._cmdRT.renderTexture = tex;\n    }\n    renderLightTexture() {\n        var _a;\n        super.renderLightTexture();\n        if (this._needUpdateLight) {\n            this._needUpdateLight = false;\n            const range = this._getLocalRange();\n            const width = range.width;\n            const height = range.height;\n            if (width === 0 || height === 0)\n                return;\n            if (!this._texLight || !(this._texLight instanceof RenderTexture)) {\n                this._buildRenderTexture(width, height);\n                if (Light2DManager.DEBUG)\n                    console.log('create spot light texture', width, height);\n            }\n            else if (this._texLight.width !== width || this._texLight.height !== height) {\n                this._buildRenderTexture(width, height);\n                if (Light2DManager.DEBUG)\n                    console.log('update spot light texture', width, height);\n            }\n            const mesh = this._createMesh((_a = this._cmdMesh) === null || _a === void 0 ? void 0 : _a.mesh, this._needToRecover);\n            if (!this._cmdMesh)\n                this._cmdMesh = DrawMesh2DCMD.create(mesh, Matrix.EMPTY, Texture2D.whiteTexture, Color.WHITE, this._material);\n            else\n                this._cmdMesh.mesh = mesh;\n            this._cmdBuffer.addCacheCommand(this._cmdRT);\n            this._cmdBuffer.addCacheCommand(this._cmdMesh);\n            this._cmdBuffer.apply(true);\n            this._cmdBuffer.clear(false);\n            this._needUpdateLightAndShadow = true;\n            if (Light2DManager.DEBUG) {\n                if (this.showLightTexture)\n                    this._printTextureToConsoleAsBase64();\n                console.log('update spot light texture contain');\n            }\n        }\n    }\n    _limitParam() {\n        this._innerAngle = Math.max(Math.min(this._innerAngle, 360), 0);\n        this._outerAngle = Math.max(Math.min(this._outerAngle, 360), 0);\n        this._innerRadius = Math.max(Math.min(this._innerRadius, 10000), 1);\n        this._outerRadius = Math.max(Math.min(this._outerRadius, 10000), 1);\n        this._falloffIntensity = Math.max(Math.min(this._falloffIntensity, 10), 0);\n        if (this._outerRadius < this._innerRadius)\n            this._outerRadius = this._innerRadius;\n        if (this._outerAngle < this._innerAngle)\n            this._outerAngle = this._innerAngle;\n    }\n    _createMesh(mesh, recover) {\n        const segments1 = Math.max(4, Math.min(64, this._innerAngle / 5 | 0));\n        const segments2 = Math.max(2, Math.min(64, (this._outerAngle - this._innerAngle) / 10 | 0));\n        const falloffStep = 10;\n        const points = [];\n        const inds = [];\n        const range = this._getLightRange();\n        const centerX = range.width / 2;\n        const centerY = range.height / 2;\n        const innerAngleRad = this._innerAngle * Math.PI / 180;\n        const outerAngleRad = this._outerAngle * Math.PI / 180;\n        const angleOffset = -Math.PI / 2;\n        const _addFan = (startAngle, endAngle, leftU, rightU, segments) => {\n            let start = points.length;\n            points.push(new Vector3(centerX, centerY, 1));\n            let s = segments + 1;\n            let f = (rightU - leftU) / segments;\n            let t = (endAngle - startAngle) / segments;\n            let l = (this._outerRadius - this._innerRadius) / falloffStep;\n            let r = this._innerRadius / falloffStep;\n            for (let j = 0; j < falloffStep; j++) {\n                for (let i = 0; i <= segments; i++) {\n                    const angle = startAngle + t * i;\n                    const rr = j === 0 ? 1 : r * (j + 1);\n                    const x = centerX + rr * Math.cos(angle);\n                    const y = centerY + rr * Math.sin(angle);\n                    const u = Math.pow(leftU + f * i, this._falloffIntensity);\n                    points.push(new Vector3(x, y, u));\n                    if (i > 0) {\n                        if (j === 0)\n                            inds.push(start, start + i, start + i + 1);\n                        else {\n                            const ss = s * (j - 1);\n                            inds.push(start + i + ss, start + i + s + ss, start + i + s + ss + 1);\n                            inds.push(start + i + ss, start + i + s + ss + 1, start + i + ss + 1);\n                        }\n                    }\n                }\n            }\n            start += s * (falloffStep - 1);\n            for (let j = 0; j < falloffStep; j++) {\n                for (let i = 0; i <= segments; i++) {\n                    const angle = startAngle + t * i;\n                    const x = centerX + (this._innerRadius + l * (j + 1)) * Math.cos(angle);\n                    const y = centerY + (this._innerRadius + l * (j + 1)) * Math.sin(angle);\n                    const u2 = Math.pow(leftU + f * i, this._falloffIntensity);\n                    const u3 = Math.pow(1 - (j + 1) / falloffStep, this._falloffIntensity);\n                    const u = u2 * u3;\n                    points.push(new Vector3(x, y, u));\n                    if (i > 0) {\n                        const ss = s * j;\n                        inds.push(start + i + ss, start + i + s + ss, start + i + s + ss + 1);\n                        inds.push(start + i + ss, start + i + s + ss + 1, start + i + ss + 1);\n                    }\n                }\n            }\n        };\n        _addFan(-outerAngleRad / 2 + angleOffset, -innerAngleRad / 2 + angleOffset, 0, 1, segments2);\n        _addFan(-innerAngleRad / 2 + angleOffset, innerAngleRad / 2 + angleOffset, 1, 1, segments1);\n        _addFan(innerAngleRad / 2 + angleOffset, outerAngleRad / 2 + angleOffset, 1, 0, segments2);\n        return this._makeOrUpdateMesh(points, inds, mesh, recover);\n    }\n    _onDestroy() {\n        super._onDestroy();\n        if (this._texLight) {\n            this._texLight.destroy();\n            this._texLight = null;\n        }\n    }\n}\n","import { ILaya } from \"../../ILaya\";\nimport { Point } from \"../maths/Point\";\nimport { BaseLight2D, Light2DType } from \"./BaseLight2D\";\nimport { Light2DManager } from \"./Light2DManager\";\nexport class SpriteLight2D extends BaseLight2D {\n    constructor() {\n        super();\n        this._type = Light2DType.Sprite;\n    }\n    set spriteTexture(value) {\n        if (this._texLight === value)\n            return;\n        if (this._texLight)\n            this._texLight._removeReference(1);\n        this._texLight = value;\n        if (value)\n            this._texLight._addReference(1);\n        this._needUpdateLight = true;\n        this._needUpdateLightLocalRange = true;\n        this._needUpdateLightWorldRange = true;\n        super._clearScreenCache();\n    }\n    get spriteTexture() {\n        return this._texLight;\n    }\n    _calcLocalRange() {\n        super._calcLocalRange();\n        const w = (this._texLight ? this._texLight.width : 100) | 0;\n        const h = (this._texLight ? this._texLight.height : 100) | 0;\n        this._localRange.x = -w / 2;\n        this._localRange.y = -h / 2;\n        this._localRange.width = w;\n        this._localRange.height = h;\n    }\n    _calcWorldRange(screen) {\n        super._calcWorldRange(screen);\n        this._lightScaleAndRotation();\n        const mm = ILaya.stage.transform;\n        const pp = this.owner.globalTrans.getScenePos(Point.TEMP);\n        const px = mm.a * pp.x + mm.c * pp.y + mm.tx;\n        const py = mm.b * pp.x + mm.d * pp.y + mm.ty;\n        this.owner.globalTrans.getSceneScale(pp);\n        const sx = Math.abs(pp.x * mm.getScaleX());\n        const sy = Math.abs(pp.y * mm.getScaleY());\n        const x = this._localRange.x;\n        const y = this._localRange.y;\n        const w = this._localRange.width;\n        const h = this._localRange.height;\n        const m = Math.max(w * sx, h * sy) | 0;\n        this._worldRange.x = (px - m / 2) | 0;\n        this._worldRange.y = (py - m / 2) | 0;\n        this._worldRange.width = m;\n        this._worldRange.height = m;\n        this._lightRange.x = (px + x) | 0;\n        this._lightRange.y = (py + y) | 0;\n        this._lightRange.width = w;\n        this._lightRange.height = h;\n    }\n    renderLightTexture() {\n        super.renderLightTexture();\n        if (this._needUpdateLight) {\n            this._needUpdateLight = false;\n            this._needUpdateLightAndShadow = true;\n            if (Light2DManager.DEBUG)\n                console.log('update sprite light texture');\n        }\n    }\n    _onDestroy() {\n        super._onDestroy();\n        if (this._texLight) {\n            this._texLight._removeReference(1);\n            this._texLight = null;\n        }\n    }\n}\n","import { ClassUtils } from \"../utils/ClassUtils\";\nimport { BaseLight2D } from \"./BaseLight2D\";\nimport { DirectionLight2D } from \"./DirectionLight2D\";\nimport { FreeformLight2D } from \"./FreeformLight2D\";\nimport { LightOccluder2D } from \"./LightOccluder2D\";\nimport { PolygonPoint2D } from \"./PolygonPoint2D\";\nimport { SpotLight2D } from \"./SpotLight2D\";\nimport { SpriteLight2D } from \"./SpriteLight2D\";\nlet c = ClassUtils.regClass;\nc(\"BaseLight2D\", BaseLight2D);\nc(\"DirectionLight2D\", DirectionLight2D);\nc(\"SpriteLight2D\", SpriteLight2D);\nc(\"FreeformLight2D\", FreeformLight2D);\nc(\"SpotLight2D\", SpotLight2D);\nc(\"LightOccluder2D\", LightOccluder2D);\nc(\"PolygonPoint2D\", PolygonPoint2D);\n","import { IndexFormat } from \"../RenderEngine/RenderEnum/IndexFormat\";\nimport { VertexMesh2D, Mesh2D } from \"../resource/Mesh2D\";\nimport { Sprite } from \"../display/Sprite\";\nimport { Mesh2DRender } from \"../display/Scene2DSpecial/Mesh2DRender\";\nexport class ShowRenderTarget {\n    constructor(scene, tex, x, y, width, height) {\n        this._sprite = scene.addChild(new Sprite());\n        this._render = this._sprite.addComponent(Mesh2DRender);\n        this._render.lightReceive = false;\n        if (tex)\n            this._render.texture = tex;\n        this._render.sharedMesh = this._genMesh(x, y, width, height);\n    }\n    setRenderTarget(rt) {\n        this._render.texture = rt;\n    }\n    _genMesh(x, y, width, height) {\n        const vertices = new Float32Array(4 * 5);\n        const indices = new Uint16Array(2 * 3);\n        let index = 0;\n        vertices[index++] = x;\n        vertices[index++] = y;\n        vertices[index++] = 0;\n        vertices[index++] = 0;\n        vertices[index++] = 1;\n        vertices[index++] = x + width;\n        vertices[index++] = y;\n        vertices[index++] = 0;\n        vertices[index++] = 1;\n        vertices[index++] = 1;\n        vertices[index++] = x + width;\n        vertices[index++] = y + height;\n        vertices[index++] = 0;\n        vertices[index++] = 1;\n        vertices[index++] = 0;\n        vertices[index++] = x;\n        vertices[index++] = y + height;\n        vertices[index++] = 0;\n        vertices[index++] = 0;\n        vertices[index++] = 0;\n        index = 0;\n        indices[index++] = 0;\n        indices[index++] = 1;\n        indices[index++] = 3;\n        indices[index++] = 1;\n        indices[index++] = 2;\n        indices[index++] = 3;\n        const declaration = VertexMesh2D.getVertexDeclaration(['POSITION,UV'], false)[0];\n        return Mesh2D.createMesh2DByPrimitive([vertices], [declaration], indices, IndexFormat.UInt16, [{ length: indices.length, start: 0 }]);\n    }\n}\n"],"names":["Vector3","Color","CommandBuffer2D","Vector2","Shader3D","RenderState","Light2DMode","Material","Set2DRTCMD","Matrix","DrawMesh2DCMD","Rectangle","Pool","ILaya","Point","ShaderFeatureType","SubShader","ShaderDataType","Scene","LayaGL","PlayerConfig","Event","Utils","RenderTexture","RenderTargetFormat","WrapMode","Vector4","Light2DType","BaseRenderNode2D","RenderState2D","VertexMesh2D","Mesh2D","IndexFormat","Laya","ShadowFilterType","Component","Texture2D","ClassUtils","Sprite","Mesh2DRender"],"mappings":"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"}