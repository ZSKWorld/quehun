{"version":3,"file":"laya.line2D.js","sources":["../../bin/tsc/layaAir/laya/Line2D/shader/2DLine.fs","../../bin/tsc/layaAir/laya/Line2D/shader/2DLine.vs","../../bin/tsc/layaAir/laya/Line2D/shader/Line2DShader.js","../../bin/tsc/layaAir/laya/Line2D/Line2DRender.js","../../bin/tsc/layaAir/laya/Line2D/Draw2DLineCMD.js","../../bin/tsc/layaAir/laya/Line2D/ModuleDef.js"],"sourcesContent":["#define SHADER_NAME 2DLineFS\n\n#include \"Sprite2DFrag.glsl\"\n\nvarying vec2 v_position;\nvarying vec4 v_linePionts;\nvarying float v_lineLength;\nvarying vec2 v_linedir;\nvarying vec3 v_dashed;\nvarying float v_lineWidth;\n//uniform float u_lineWidth;\n\nuniform vec4 u_TilingOffset;\n\n\nvec2 dotToline(in vec2 a, vec2 b,in vec2 p){\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return ba*h + a;\n}\n\n\n\nvoid main(){\n    vec2 p = dotToline(v_linePionts.xy, v_linePionts.zw, v_position);\n    float d = v_lineWidth*0.5 - length(p - v_position);\n    \n    vec2 left =  v_linePionts.xy - v_linedir;\n    vec2 p1 = dotToline(left, v_linePionts.zw+v_linedir, v_position);\n    float t = v_lineLength + length(left- p1)-v_dashed.z;\n    d *= step(fract(t/v_dashed.x), v_dashed.y);\n    vec2 uv =  transformUV(v_texcoord.xy,u_TilingOffset);\n    vec4 textureColor = texture2D(u_baseRender2DTexture, fract(uv));\n    textureColor = transspaceColor(textureColor*u_baseRenderColor);\n\n    gl_FragColor = vec4(textureColor.rgb,textureColor.a*smoothstep(0.0,2.0,d));\n    //gl_FragColor = vec4(fract(uv.x) ,fract(uv.y),0.0,textureColor.a*smoothstep(0.0,2.0,d));\n}","#define SHADER_NAME 2DLineVS\n\n#include \"Sprite2DVertex.glsl\"\n\nvarying vec2 v_position;\nvarying vec4 v_linePionts;\nvarying float v_lineLength;\nvarying vec2 v_linedir;\nvarying vec3 v_dashed;\nvarying float v_lineWidth;\nuniform vec3 u_dashed;\nuniform float u_lineWidth;\n\n\n\n\nvoid lineMat(in vec2 left,in vec2 right,inout vec3 xDir,inout vec3 yDir,float LineWidth){\n    vec2 dir=right-left;\n   \n    float lineLength=length(dir)+LineWidth+2.0;\n    dir=normalize(dir);\n    xDir.x=dir.x*lineLength;\n    yDir.x=dir.y*lineLength;\n    \n    float lineWidth=LineWidth+2.0;\n    xDir.y=-dir.y*LineWidth;\n    yDir.y=dir.x*LineWidth;\n\n    xDir.z=(left.x+right.x)*0.5;\n    yDir.z=(left.y+right.y)*0.5;\n}\n\n\nvoid main(){\n  \n    vec2 oriUV = (a_position.xy + vec2(0.5,0.5));\n    //v_texcoord\n     oriUV.x = (oriUV.x*length(a_linePos.xy-a_linePos.zw)+a_linelength)/50.0;\n    v_texcoord = oriUV;\n\n    vec2 left,right;\n    getGlobalPos(a_linePos.xy,left);\n    getGlobalPos(a_linePos.zw,right);\n    float lengthScale = length(right-left)/length(a_linePos.zw-a_linePos.xy) ;\n    v_lineLength = a_linelength*lengthScale;\n    v_dashed = vec3(u_dashed.x*lengthScale,u_dashed.y,u_dashed.z*lengthScale);\n    v_linePionts=vec4(left,right);\n    \n    float lineWidth = u_lineWidth*lengthScale;\n    v_lineWidth = lineWidth;\n    v_linedir = normalize(right - left) * v_lineWidth*0.5;\n    vec3 xDir;\n    vec3 yDir;\n    lineMat(left,right,xDir,yDir,v_lineWidth);\n \n    transfrom(a_position.xy,xDir,yDir,v_position);\n   \n  \n    vec2 viewPos;\n    getViewPos(v_position,viewPos);\n    v_cliped = getClipedInfo(viewPos);\n    vec4 pos;\n    getProjectPos(viewPos,pos);\n    gl_Position = pos;\n}","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { Shader3D, ShaderFeatureType } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { SubShader } from \"../../RenderEngine/RenderShader/SubShader\";\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport LineFs from \"./2DLine.fs\";\nimport LineVs from \"./2DLine.vs\";\nexport class LineShader {\n    static __init__() {\n        if (LineShader._isInit)\n            return;\n        LineShader._isInit = true;\n        let attributeMap = {\n            'a_position': [0, ShaderDataType.Vector3],\n            'a_linePos': [2, ShaderDataType.Vector4],\n            \"a_linelength\": [3, ShaderDataType.Float],\n        };\n        let uniformMap = {};\n        let shader = Shader3D.add(\"LineShader\", true, false);\n        shader.shaderType = ShaderFeatureType.DEFAULT;\n        let subShader = new SubShader(attributeMap, uniformMap, {});\n        shader.addSubShader(subShader);\n        let forwardPass = subShader.addShaderPass(LineVs, LineFs);\n        LineShader.LINEWIDTH = Shader3D.propertyNameToID(\"u_lineWidth\");\n        LineShader.DASHED = Shader3D.propertyNameToID(\"u_dashed\");\n        LineShader.TILINGOFFSET = Shader3D.propertyNameToID(\"u_TilingOffset\");\n        const commandUniform = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Line2DRender\");\n        commandUniform.addShaderUniform(LineShader.LINEWIDTH, \"u_lineWidth\", ShaderDataType.Float);\n        commandUniform.addShaderUniform(LineShader.DASHED, \"u_dashed\", ShaderDataType.Vector3);\n        commandUniform.addShaderUniform(LineShader.TILINGOFFSET, \"u_TilingOffset\", ShaderDataType.Vector4);\n        let vertexs = new Float32Array([\n            -0.5, -0.5, 0,\n            0.5, -0.5, 0,\n            0.5, 0.5, 0,\n            -0.5, 0.5, 0\n        ]);\n        let index = new Uint16Array([0, 1, 2, 0, 2, 3]);\n        var declaration = new VertexDeclaration(12, [\n            new VertexElement(0, VertexElementFormat.Vector3, 0),\n        ]);\n        let vertex = LineShader._vbs = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\n        vertex.vertexDeclaration = declaration;\n        vertex.instanceBuffer = false;\n        vertex.setDataLength(vertexs.byteLength);\n        vertex.setData(vertexs.buffer, 0, 0, vertexs.byteLength);\n        let ibs = LineShader._ibs = LayaGL.renderDeviceFactory.createIndexBuffer(BufferUsage.Dynamic);\n        ibs._setIndexDataLength(index.buffer.byteLength);\n        ibs._setIndexData(index, 0);\n        LineShader.linePoisitionDesc = new VertexDeclaration(16, [\n            new VertexElement(0, VertexElementFormat.Vector4, 2),\n        ]);\n        LineShader.lineLengthDesc = new VertexDeclaration(4, [\n            new VertexElement(0, VertexElementFormat.Single, 3),\n        ]);\n    }\n}\nLineShader._isInit = false;\n","import { Laya } from \"../../Laya\";\nimport { LayaGL } from \"../layagl/LayaGL\";\nimport { Color } from \"../maths/Color\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { BaseRenderNode2D } from \"../NodeRender2D/BaseRenderNode2D\";\nimport { RenderState } from \"../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../resource/Material\";\nimport { Texture2D } from \"../resource/Texture2D\";\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\nimport { LineShader } from \"./shader/Line2DShader\";\nimport { Vector4 } from \"../maths/Vector4\";\nexport class Line2DRender extends BaseRenderNode2D {\n    static _createDefaultLineMaterial() {\n        if (Line2DRender.defaultLine2DMaterial)\n            return;\n        LineShader.__init__();\n        let mat = Line2DRender.defaultLine2DMaterial = new Material();\n        mat.setShaderName(\"LineShader\");\n        mat.alphaTest = false;\n        mat.depthTest = RenderState.DEPTHTEST_OFF;\n        mat.cull = RenderState.CULL_NONE;\n        mat.blend = RenderState.BLEND_ENABLE_ALL;\n        mat.setIntByIndex(Shader3D.BLEND_SRC, RenderState.BLENDPARAM_SRC_ALPHA);\n        mat.setIntByIndex(Shader3D.BLEND_DST, RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA);\n    }\n    get positions() {\n        return this._positions;\n    }\n    set positions(value) {\n        if ((value.length / 4) != ((value.length / 4) | 0))\n            return;\n        this._positions = value;\n        this._needUpdate = true;\n    }\n    get lineWidth() {\n        return this._lineWidth;\n    }\n    set lineWidth(value) {\n        this._lineWidth = Math.max(1, value);\n        this._spriteShaderData.setNumber(LineShader.LINEWIDTH, this._lineWidth);\n    }\n    set color(value) {\n        value = value ? value : Color.BLACK;\n        value.cloneTo(this._color);\n        this._spriteShaderData.setColor(BaseRenderNode2D.BASERENDER2DCOLOR, this._color);\n    }\n    get color() {\n        return this._color;\n    }\n    set enableDashedMode(value) {\n        this._isdashed = value;\n        this._updateDashValue();\n    }\n    get enableDashedMode() {\n        return this._isdashed;\n    }\n    set dashedLength(value) {\n        if (value == null)\n            return;\n        value = Math.max(0.01, value);\n        this._dashedValue.x = value;\n        this._updateDashValue();\n    }\n    get dashedLength() {\n        return this._dashedValue.x;\n    }\n    set dashedPercent(value) {\n        value = Math.max(Math.min(1, value), 0);\n        this._dashedValue.y = value;\n        this._updateDashValue();\n    }\n    get dashedPercent() {\n        return this._dashedValue.y;\n    }\n    set dashedOffset(value) {\n        this._dashedValue.z = value;\n        this._updateDashValue();\n    }\n    get dashedOffset() {\n        return this._dashedValue.z;\n    }\n    set texture(value) {\n        if (!value) {\n            value = Texture2D.whiteTexture;\n        }\n        if (value == this._baseRender2DTexture)\n            return;\n        if (this._baseRender2DTexture)\n            this._baseRender2DTexture._removeReference(1);\n        value._addReference();\n        this._baseRender2DTexture = value;\n        this._spriteShaderData.setTexture(BaseRenderNode2D.BASERENDER2DTEXTURE, value);\n        if (value.gammaCorrection != 1) {\n            this._spriteShaderData.addDefine(ShaderDefines2D.GAMMATEXTURE);\n        }\n        else {\n            this._spriteShaderData.removeDefine(ShaderDefines2D.GAMMATEXTURE);\n        }\n    }\n    get texture() {\n        return this._baseRender2DTexture;\n    }\n    set tillOffset(value) {\n        if (value == null) {\n            this._tillOffset = new Vector4(0, 0, 1, 1);\n        }\n        else {\n            value.cloneTo(this._tillOffset);\n        }\n        this._spriteShaderData.setVector(LineShader.TILINGOFFSET, this._tillOffset);\n    }\n    get tillOffset() {\n        return this._tillOffset;\n    }\n    set sharedMaterial(value) {\n        super.sharedMaterial = value;\n        BaseRenderNode2D._setRenderElement2DMaterial(this._renderElements[0], this._materials[0] ? this._materials[0] : Line2DRender.defaultLine2DMaterial);\n    }\n    _updateDashValue() {\n        if (this._isdashed) {\n            this._spriteShaderData.setVector3(LineShader.DASHED, this._dashedValue);\n        }\n        else {\n            this._spriteShaderData.setVector3(LineShader.DASHED, Line2DRender.defaultDashedValue);\n        }\n    }\n    _getcommonUniformMap() {\n        return [\"BaseRender2D\", \"Line2DRender\"];\n    }\n    _changeGeometry() {\n        let lineLength = this._positions.length / 4;\n        if (lineLength > this._maxLineNumer) {\n            this._maxLineNumer = (((lineLength / this._enLarge) | 0) + 1) * this._enLarge;\n            this._positionInstansBufferData = new Float32Array(this._maxLineNumer * 4);\n            this._positionVertexBuffer.setDataLength(this._maxLineNumer * 16);\n            this._lineLengthBufferData = new Float32Array(this._maxLineNumer * 1);\n            this._lineLengthVertexBuffer.setDataLength(this._maxLineNumer * 4);\n            this._renderGeometry.bufferState.applyState([LineShader._vbs, this._positionVertexBuffer, this._lineLengthVertexBuffer], LineShader._ibs);\n            this._renderElements[0].geometry = this._renderGeometry;\n        }\n        this._positionInstansBufferData.set(this._positions, 0);\n        this._positionVertexBuffer.setData(this._positionInstansBufferData.buffer, 0, 0, this._positionInstansBufferData.byteLength);\n        if (true) {\n            let totalLength = 0;\n            for (var i = 0; i < lineLength; i++) {\n                const dataIndex = i * 4;\n                this._lineLengthBufferData[i] = totalLength;\n                totalLength += Math.hypot(this._positions[dataIndex + 2] - this._positions[dataIndex], this._positions[dataIndex + 3] - this._positions[dataIndex + 1]);\n            }\n            this._lineLengthVertexBuffer.setData(this._lineLengthBufferData.buffer, 0, 0, this._lineLengthBufferData.byteLength);\n        }\n        this._renderGeometry.instanceCount = lineLength;\n    }\n    addPoint(startx, starty, endx, endy) {\n        this._positions.push(startx, starty, endx, endy);\n        this._needUpdate = true;\n    }\n    clear() {\n        this._positions.length = 0;\n        this._needUpdate = true;\n    }\n    addCMDCall(context, px, py) {\n        let mat = context._curMat;\n        let vec3 = Vector3.TEMP;\n        vec3.x = mat.a;\n        vec3.y = mat.c;\n        vec3.z = px * mat.a + py * mat.c + mat.tx;\n        this._spriteShaderData.setVector3(BaseRenderNode2D.NMATRIX_0, vec3);\n        vec3.x = mat.b;\n        vec3.y = mat.d;\n        vec3.z = px * mat.b + py * mat.d + mat.ty;\n        this._spriteShaderData.setVector3(BaseRenderNode2D.NMATRIX_1, vec3);\n        this._setRenderSize(context.width, context.height);\n        context._copyClipInfoToShaderData(this._spriteShaderData);\n    }\n    onPreRender() {\n        if (!this._needUpdate)\n            return;\n        this._needUpdate = false;\n        this._changeGeometry();\n    }\n    _initRender() {\n        let lineNums = this._maxLineNumer;\n        let positionBuffer = this._positionVertexBuffer = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\n        positionBuffer.instanceBuffer = true;\n        positionBuffer.vertexDeclaration = LineShader.linePoisitionDesc;\n        positionBuffer.setDataLength(lineNums * 16);\n        this._positionInstansBufferData = new Float32Array(lineNums * 4);\n        positionBuffer.setData(this._positionInstansBufferData.buffer, 0, 0, this._positionInstansBufferData.byteLength);\n        let lineLengthBuffer = this._lineLengthVertexBuffer = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\n        lineLengthBuffer.instanceBuffer = true;\n        lineLengthBuffer.vertexDeclaration = LineShader.lineLengthDesc;\n        lineLengthBuffer.setDataLength(lineNums * 4);\n        this._lineLengthBufferData = new Float32Array(lineNums * 1);\n        lineLengthBuffer.setData(this._lineLengthBufferData.buffer, 0, 0, this._lineLengthBufferData.byteLength);\n        let geometry = this._renderGeometry = LayaGL.renderDeviceFactory.createRenderGeometryElement(MeshTopology.Triangles, DrawType.DrawElementInstance);\n        geometry.bufferState = LayaGL.renderDeviceFactory.createBufferState();\n        geometry.setDrawElemenParams(6, 0);\n        geometry.indexFormat = IndexFormat.UInt16;\n        geometry.instanceCount = 0;\n        let buffers = [];\n        buffers.push(LineShader._vbs);\n        buffers.push(this._positionVertexBuffer);\n        buffers.push(this._lineLengthVertexBuffer);\n        geometry.bufferState.applyState(buffers, LineShader._ibs);\n        let renderElement = LayaGL.render2DRenderPassFactory.createRenderElement2D();\n        renderElement.geometry = this._renderGeometry;\n        renderElement.value2DShaderData = this._spriteShaderData;\n        renderElement.renderStateIsBySprite = false;\n        renderElement.nodeCommonMap = this._getcommonUniformMap();\n        BaseRenderNode2D._setRenderElement2DMaterial(renderElement, this._materials[0] ? this._materials[0] : Line2DRender.defaultLine2DMaterial);\n        this._renderElements[0] = renderElement;\n    }\n    constructor() {\n        super();\n        this._color = new Color();\n        this._positions = [];\n        this._isdashed = false;\n        this._tillOffset = new Vector4(0, 0, 1, 1);\n        this._dashedValue = new Vector3(20, 0.5, 0);\n        this._needUpdate = false;\n        this._maxLineNumer = 200;\n        this._enLarge = 100;\n        this._lineWidth = 1;\n        Line2DRender._createDefaultLineMaterial();\n        this._renderElements = [];\n        this._materials = [];\n        this._initRender();\n        this._spriteShaderData.addDefine(BaseRenderNode2D.SHADERDEFINE_BASERENDER2D);\n        this._spriteShaderData.setColor(BaseRenderNode2D.BASERENDER2DCOLOR, this._color);\n        this._updateDashValue();\n        this.tillOffset = null;\n        this.texture = null;\n    }\n}\nLine2DRender.defaultDashedValue = new Vector3(20, 1, 0);\nLaya.addInitCallback(() => Line2DRender._createDefaultLineMaterial());\n","import { LayaGL } from \"../layagl/LayaGL\";\nimport { Line2DRender } from \"./Line2DRender\";\nimport { Color } from \"../maths/Color\";\nimport { Matrix } from \"../maths/Matrix\";\nimport { Vector3 } from \"../maths/Vector3\";\nimport { BaseRenderNode2D } from \"../NodeRender2D/BaseRenderNode2D\";\nimport { Command2D } from \"../display/Scene2DSpecial/RenderCMD2D/Command2D\";\nexport class Draw2DLineCMD extends Command2D {\n    static create(pointArray, mat, color = Color.WHITE, lineWidth = 3) {\n        var cmd = Draw2DLineCMD._pool.length > 0 ? Draw2DLineCMD._pool.pop() : new Draw2DLineCMD();\n        cmd._line2DRender.color = color;\n        cmd._line2DRender.positions = pointArray;\n        cmd._line2DRender.lineWidth = lineWidth;\n        cmd._setMatrix(mat);\n        return cmd;\n    }\n    constructor() {\n        super();\n        this._drawElementData = LayaGL.render2DRenderPassFactory.createDraw2DElementCMDData();\n        this._line2DRender = new Line2DRender();\n        this._needUpdateElement = true;\n        this._matrix = new Matrix();\n        this._line2DRender.enableDashedMode = false;\n        this._drawElementData.setRenderelements(this._line2DRender._renderElements);\n    }\n    _setMatrix(value) {\n        value ? value.copyTo(this._matrix) : Matrix.EMPTY.copyTo(this._matrix);\n        let mat = this._matrix;\n        let vec3 = Vector3.TEMP;\n        vec3.x = mat.a;\n        vec3.y = mat.c;\n        vec3.z = mat.tx;\n        this._line2DRender._spriteShaderData.setVector3(BaseRenderNode2D.NMATRIX_0, vec3);\n        vec3.x = mat.b;\n        vec3.y = mat.d;\n        vec3.z = mat.ty;\n        this._line2DRender._spriteShaderData.setVector3(BaseRenderNode2D.NMATRIX_1, vec3);\n    }\n    getRenderCMD() {\n        return this._drawElementData;\n    }\n    run() {\n        this._line2DRender.onPreRender();\n        this._line2DRender._setRenderSize(this._commandBuffer._renderSize.x, this._commandBuffer._renderSize.y);\n    }\n    recover() {\n        Draw2DLineCMD._pool.push(this);\n        super.recover();\n    }\n}\nDraw2DLineCMD._pool = [];\n","import { ClassUtils } from \"../utils/ClassUtils\";\nimport { Line2DRender } from \"./Line2DRender\";\nlet c = ClassUtils.regClass;\nc(\"Line2DRender\", Line2DRender);\n"],"names":["ShaderDataType","Shader3D","ShaderFeatureType","SubShader","LayaGL","VertexDeclaration","VertexElement","VertexElementFormat","BufferUsage","BaseRenderNode2D","Material","RenderState","Color","Texture2D","ShaderDefines2D","Vector4","Vector3","MeshTopology","DrawType","IndexFormat","Laya","Command2D","Matrix","ClassUtils"],"mappings":"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"}