{"version":3,"file":"laya.navMesh3d.js","sources":["../../bin/tsc/layaAir/laya/navigation/3D/NavigationManager.js","../../bin/tsc/layaAir/laya/navigation/3D/component/BaseNav3DModifle.js","../../bin/tsc/layaAir/laya/navigation/3D/Navgiation3DUtils.js","../../bin/tsc/layaAir/laya/navigation/3D/NavMesh.js","../../bin/tsc/layaAir/laya/navigation/3D/component/NavMeshSurface.js","../../bin/tsc/layaAir/laya/navigation/3D/component/NavMeshModifileSurface.js","../../bin/tsc/layaAir/laya/navigation/3D/component/NavMeshLink.js","../../bin/tsc/layaAir/laya/navigation/3D/component/NavMeshModifierVolume.js","../../bin/tsc/layaAir/laya/navigation/3D/component/NavMeshObstacles.js","../../bin/tsc/layaAir/laya/navigation/3D/component/NavAgent.js","../../bin/tsc/layaAir/laya/navigation/3D/ModuleDef.js"],"sourcesContent":["import { Laya } from \"../../../Laya\";\nimport { Scene3D } from \"../../d3/core/scene/Scene3D\";\nimport { BaseNavigationManager } from \"../common/BaseNavigationManager\";\nimport { NavTileCache } from \"../common/NavTileData\";\nexport var NavObstaclesMeshType;\n(function (NavObstaclesMeshType) {\n    NavObstaclesMeshType[NavObstaclesMeshType[\"BOX\"] = 0] = \"BOX\";\n    NavObstaclesMeshType[NavObstaclesMeshType[\"CYLINDER\"] = 1] = \"CYLINDER\";\n    NavObstaclesMeshType[NavObstaclesMeshType[\"CUSTOMER\"] = 2] = \"CUSTOMER\";\n})(NavObstaclesMeshType || (NavObstaclesMeshType = {}));\nlet createObstacleData = function (slices, radiusOff = 0, radius = 1) {\n    let vertexs = new Float32Array(slices * 6);\n    const triCount = (slices - 1) * 4;\n    let flags = new Uint8Array(triCount);\n    flags.fill(1);\n    let ibs = [];\n    for (var i = 0; i < slices; i++) {\n        if (i >= 1) {\n            let index = 2 * i;\n            ibs.push(index - 2, index + 1, index);\n            ibs.push(index - 1, index + 1, index - 2);\n            if (i >= 2) {\n                ibs.push(0, index - 2, index);\n                ibs.push(index - 1, 1, index + 1);\n            }\n        }\n    }\n    let endIndex = slices * 2;\n    ibs.push(endIndex - 2, 1, 0);\n    ibs.push(endIndex - 1, 1, endIndex - 2);\n    var sliceAngle = (Math.PI * 2.0) / slices;\n    for (var i = 0; i < slices; i++) {\n        let triIndex = i * 6;\n        vertexs[triIndex] = vertexs[triIndex + 3] = radius * Math.cos(sliceAngle * i + radiusOff);\n        vertexs[triIndex + 2] = vertexs[triIndex + 5] = radius * Math.sin(sliceAngle * i + radiusOff);\n        vertexs[triIndex + 1] = radius;\n        vertexs[triIndex + 4] = -radius;\n    }\n    let tileData = new NavTileCache();\n    tileData.triVertex = vertexs;\n    tileData.triIndex = new Uint32Array(ibs);\n    tileData.triFlag = flags;\n    tileData.boundMin.setValue(-radius, -radius, -radius);\n    tileData.boundMax.setValue(radius, radius, radius);\n    return tileData;\n};\nexport class NavigationManager extends BaseNavigationManager {\n    static _getNavManager(comp) {\n        return comp.owner.scene.getComponentElementManager(NavigationManager._managerName);\n    }\n    static _initialize() {\n        return BaseNavigationManager._initialize(() => {\n            NavigationManager.__init__();\n        });\n    }\n    static __init__() {\n        NavigationManager._obstacleMap.set(NavObstaclesMeshType.BOX, createObstacleData(4));\n        NavigationManager._obstacleMap.set(NavObstaclesMeshType.CYLINDER, createObstacleData(20));\n    }\n    static _getObstacleData(type) {\n        return this._obstacleMap.get(type);\n    }\n    constructor() {\n        super(NavigationManager._managerName);\n    }\n}\nNavigationManager._managerName = \"navMesh\";\nNavigationManager._obstacleMap = new Map();\nScene3D.regManager(NavigationManager._managerName, NavigationManager);\nLaya.addBeforeInitCallback(NavigationManager._initialize);\n","import { Component } from \"../../../components/Component\";\nimport { Event } from \"../../../events/Event\";\nimport { NavigationManager } from \"../NavigationManager\";\nexport class BaseNav3DModifle extends Component {\n    set agentType(value) {\n        this._modifierData.agentType = value;\n    }\n    get agentType() {\n        return this._modifierData.agentType;\n    }\n    set areaFlag(value) {\n        this._modifierData.areaFlag = value;\n    }\n    get areaFlag() {\n        return this._modifierData.areaFlag;\n    }\n    constructor() {\n        super();\n        this.runInEditor = true;\n    }\n    _onEnable() {\n        super._onEnable();\n        this._manager = NavigationManager._getNavManager(this);\n        this._onWorldMatNeedChange();\n        this.owner.transform.on(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n    }\n    _onWorldMatNeedChange() {\n        this._refeashTranfrom(this.owner.transform.worldMatrix, this._modifierData._min, this._modifierData._max);\n        this._modifierData._refeahTransfrom();\n        this._modifierData._refeahBound();\n    }\n    _refeashTranfrom(mat, min, max) {\n    }\n}\n","import { Laya3DRender } from \"../../d3/RenderObjs/Laya3DRender\";\nimport { PrimitiveMesh } from \"../../d3/resource/models/PrimitiveMesh\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { NavigationUtils } from \"../common/NavigationUtils\";\nconst tempVector3 = new Vector3();\nexport class Navgiation3DUtils {\n    static __init__() {\n    }\n    static _resetMesh(mesh, vertexDeclaration, vertices, indices) {\n        var vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vertices.length * 4, BufferUsage.Static, true);\n        vertexBuffer.vertexDeclaration = vertexDeclaration;\n        vertexBuffer.setData(vertices.buffer);\n        mesh._vertexBuffer = vertexBuffer;\n        mesh._vertexCount = vertexBuffer._byteLength / vertexDeclaration.vertexStride;\n        var indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, indices.length, BufferUsage.Static, true);\n        indexBuffer.setData(indices);\n        mesh._indexBuffer = indexBuffer;\n        mesh._setBuffer(vertexBuffer, indexBuffer);\n        let subMesh = mesh.getSubMesh(0);\n        subMesh._vertexBuffer = vertexBuffer;\n        subMesh._indexBuffer = indexBuffer;\n        subMesh._setIndexRange(0, indexBuffer.indexCount);\n        var subIndexBufferStart = subMesh._subIndexBufferStart;\n        var subIndexBufferCount = subMesh._subIndexBufferCount;\n        var boneIndicesList = subMesh._boneIndicesList;\n        subIndexBufferStart.length = 1;\n        subIndexBufferCount.length = 1;\n        boneIndicesList.length = 1;\n        subIndexBufferStart[0] = 0;\n        subIndexBufferCount[0] = indexBuffer.indexCount;\n        var memorySize = vertexBuffer._byteLength + indexBuffer._byteLength;\n        mesh._setCPUMemory(memorySize);\n        mesh._setGPUMemory(memorySize);\n    }\n    static _getTitleData(title, vbDatas, center, ibs) {\n        let header = title.getheader();\n        if (!header)\n            return null;\n        const vboff = vbDatas.length / 6;\n        let tvertCount = header.vertCount;\n        let tailTris = title.getdetailTris();\n        for (var i = 0; i < header.polyCount; i++) {\n            let p = title.getPolys(i);\n            let vertCount = p.vertCount;\n            let pverts = p.getVerts();\n            let pd = title.getPolyDetail(i);\n            let triCount = pd.triCount;\n            for (var j = 0; j < triCount; j++) {\n                let index = (pd.triBase + j) * 4;\n                for (var k = 0; k < 3; k++) {\n                    const kvalue = tailTris[index + NavigationUtils._TitleMeshIbOff[k]];\n                    if (kvalue < vertCount) {\n                        ibs.push(pverts[kvalue] + vboff);\n                    }\n                    else {\n                        ibs.push(pd.vertBase + kvalue - vertCount + vboff + tvertCount);\n                    }\n                }\n            }\n        }\n        let verts = title.getVerts();\n        for (var i = 0, n = verts.length; i < n; i += 3) {\n            vbDatas.push(verts[i] - center.x);\n            vbDatas.push(verts[i + 1] - center.y);\n            vbDatas.push(verts[i + 2] - center.z);\n            vbDatas.push(0, 0, 0);\n        }\n        verts = title.getdetailVerts();\n        for (var i = 0, n = verts.length; i < n; i += 3) {\n            vbDatas.push(verts[i] - center.x);\n            vbDatas.push(verts[i + 1] - center.y);\n            vbDatas.push(verts[i + 2] - center.z);\n            vbDatas.push(0, 0, 0);\n        }\n    }\n    static _createDebugMesh(navMesh, mesh) {\n        let m_navMesh = navMesh.navMesh;\n        let tileCount = m_navMesh.getMaxTiles();\n        let min = navMesh.navTileGrid.min;\n        let max = navMesh.navTileGrid.max;\n        let orig = tempVector3;\n        Vector3.lerp(min, max, 0.5, orig);\n        let poses = [];\n        let indexs = [];\n        for (var i = 0; i < tileCount; i++) {\n            Navgiation3DUtils._getTitleData(m_navMesh.getTile(i), poses, orig, indexs);\n        }\n        let vertexDeclaration = VertexMesh.getVertexDeclaration(\"POSITION,NORMAL\");\n        let vb = new Float32Array(poses);\n        let ib = new Uint16Array(indexs);\n        if (mesh == null) {\n            mesh = PrimitiveMesh._createMesh(vertexDeclaration, vb, ib);\n        }\n        else {\n            this._resetMesh(mesh, vertexDeclaration, vb, ib);\n        }\n        Vector3.subtract(max, orig, mesh.bounds.max);\n        Vector3.subtract(min, orig, mesh.bounds.min);\n        return mesh;\n    }\n}\n","import { BaseNavMesh } from \"../common/BaseNavMesh\";\nimport { Navgiation3DUtils } from \"./Navgiation3DUtils\";\nexport class NavMesh extends BaseNavMesh {\n    constructor(config, min, max, surface) {\n        super(config, min, max, surface, true);\n        this._titileConfig._setMaxEdgeLen(12 / config.cellSize);\n        this._titileConfig.maxSimplificationError = 0.9;\n    }\n    _addTile(cache, binds, partitionType, maxSimplificationError) {\n        super._addTile(cache, binds, partitionType, maxSimplificationError);\n        if (this._debugMesh) {\n            Navgiation3DUtils._createDebugMesh(this, this._debugMesh);\n        }\n    }\n    buildDebugMesh() {\n        this._debugMesh = Navgiation3DUtils._createDebugMesh(this, null);\n        return this._debugMesh;\n    }\n}\n","import { BaseNavMeshSurface } from \"../../common/component/BaseNavMeshSurface\";\nimport { NavigationManager } from \"../NavigationManager\";\nimport { NavMesh } from \"../NavMesh\";\nexport class NavMeshSurface extends BaseNavMeshSurface {\n    get navMesh() {\n        return this._navMesh;\n    }\n    constructor() {\n        super();\n    }\n    _getManager() {\n        return NavigationManager._getNavManager(this);\n    }\n    _crateNavMesh(config, min, max) {\n        return new NavMesh(config, min, max, this);\n    }\n}\n","import { NavModifleData } from \"../../common/data/NavModifleData\";\nimport { NavigationUtils } from \"../../common/NavigationUtils\";\nimport { NavTileData } from \"../../common/NavTileData\";\nimport { BaseNav3DModifle } from \"./BaseNav3DModifle\";\nexport class NavMeshModifileSurface extends BaseNav3DModifle {\n    constructor() {\n        super();\n        this._modifierData = new NavModifleData();\n    }\n    set datas(value) {\n        if (this._oriTiles) {\n            this._oriTiles.destroy();\n            this._oriTiles = null;\n        }\n        if (value != null) {\n            this._oriTiles = new NavTileData(value);\n        }\n        this._changeData();\n        this._onWorldMatNeedChange();\n    }\n    get datas() {\n        if (this._oriTiles)\n            return this._oriTiles._res;\n        return null;\n    }\n    _onEnable() {\n        this._changeData();\n        super._onEnable();\n        let min = this._modifierData._min;\n        let max = this._modifierData._max;\n        let surface = this._manager.getNavMeshSurfacesByBound(min, max, this._modifierData.agentType);\n        this._modifierData._initSurface(surface);\n    }\n    _refeashTranfrom(mat, min, max) {\n        mat.cloneTo(this._modifierData._transfrom);\n        let data = this._modifierData;\n        if (data.datas == null)\n            return;\n        let boundmin = data.datas._boundMin;\n        let boundmax = data.datas._boundMax;\n        NavigationUtils._transfromBoundBox(boundmin, boundmax, this._modifierData._transfrom, min, max);\n        this._modifierData._refeahTransfrom();\n    }\n    _changeData() {\n        if (!this._enabled)\n            return;\n        let modiferData = this._modifierData;\n        if (this._oriTiles) {\n            modiferData.datas = this._oriTiles.getNavData(0);\n        }\n        else {\n            modiferData.datas = null;\n        }\n    }\n    _cloneTo(dest) {\n        dest.datas = this.datas;\n        super._cloneTo(dest);\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { NavMeshLinkData } from \"../../common/data/NavMeshLinkData\";\nimport { BaseNav3DModifle } from \"./BaseNav3DModifle\";\nconst tempVec3 = new Vector3();\nconst tempVec31 = new Vector3();\nexport class NavMeshLink extends BaseNav3DModifle {\n    set width(value) {\n        this._data._updateWidth(value);\n    }\n    get width() {\n        return this._data._width;\n    }\n    set bidirectional(value) {\n        this._data._updateBidirectional(value);\n    }\n    get bidirectional() {\n        return this._data._bidirectional;\n    }\n    set start(value) {\n        this._data._updateStartPoint(value);\n    }\n    get start() {\n        return this._data._startPoint;\n    }\n    set end(value) {\n        this._data._updateEndPoint(value);\n    }\n    get end() {\n        return this._data._endPoint;\n    }\n    constructor() {\n        super();\n        this._modifierData = new NavMeshLinkData();\n    }\n    get _data() {\n        return this._modifierData;\n    }\n    _onEnable() {\n        super._onEnable();\n        this._onWorldMatNeedChange();\n        Vector3.min(this._data._startPoint, this._data._endPoint, tempVec3);\n        Vector3.max(this._data._startPoint, this._data._endPoint, tempVec31);\n        let surface = this._manager.getNavMeshSurfacesByBound(tempVec3, tempVec31, this._agentType);\n        this._data._initSurface(surface);\n    }\n    _refeashTranfrom(mat, min, max) {\n        var data = this._data;\n        mat.cloneTo(data._transfrom);\n        this._modifierData._refeahTransfrom();\n        Vector3.transformCoordinate(data._startPoint, mat, data.globalStart);\n        Vector3.transformCoordinate(data._endPoint, mat, data.globalEnd);\n    }\n    _cloneTo(dest) {\n        dest.start = this.start;\n        dest.end = this.end;\n        dest.agentType = this._agentType;\n        dest.areaFlag = this.areaFlag;\n        dest.width = this.width;\n        dest.bidirectional = this.bidirectional;\n        super._cloneTo(dest);\n    }\n}\n","import { Component } from \"../../../components/Component\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Event } from \"../../../events/Event\";\nimport { ModifierVolumeData } from \"../../common/data/ModifierVolumeData\";\nimport { BaseNavigationManager } from \"../../common/BaseNavigationManager\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nexport class NavMeshModifierVolume extends Component {\n    set agentType(value) {\n        this._volumeData.agentType = value;\n    }\n    get agentType() {\n        return this._volumeData.agentType;\n    }\n    set areaFlag(value) {\n        this._volumeData.areaFlag = value;\n    }\n    get areaFlag() {\n        return this._volumeData.areaFlag;\n    }\n    get center() {\n        return this._center;\n    }\n    set center(value) {\n        value.cloneTo(this._center);\n        this._onWorldMatNeedChange();\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        value.cloneTo(this._size);\n        this._onWorldMatNeedChange();\n    }\n    constructor() {\n        super();\n        this._center = new Vector3();\n        this._size = new Vector3(1, 1, 1);\n        this._volumeData = new ModifierVolumeData();\n    }\n    _onEnable() {\n        let surface = new Array();\n        BaseNavigationManager.findNavMeshSurface(surface, this.owner, [this.agentType]);\n        this._volumeData._initSurface(surface);\n        this._onWorldMatNeedChange();\n        this.owner.transform.on(Event.TRANSFORM_CHANGED, this, this._onWorldMatNeedChange);\n    }\n    _onDisable() {\n        this._volumeData._destory();\n    }\n    _onWorldMatNeedChange() {\n        let transform = this._volumeData._transfrom;\n        Matrix4x4.createAffineTransformation(this._center, Quaternion.DEFAULT, this._size, transform);\n        Matrix4x4.multiply(this.owner.transform.worldMatrix, transform, transform);\n        this._volumeData._refeahTransfrom();\n    }\n    _cloneTo(dest) {\n        dest.size = this.size;\n        dest.center = this.center;\n        dest.agentType = this.agentType;\n        dest.areaFlag = this.areaFlag;\n        super._cloneTo(dest);\n    }\n}\n","import { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { NavModifleData } from \"../../common/data/NavModifleData\";\nimport { NavigationUtils } from \"../../common/NavigationUtils\";\nimport { NavTileData } from \"../../common/NavTileData\";\nimport { NavigationManager, NavObstaclesMeshType } from \"../NavigationManager\";\nimport { BaseNav3DModifle } from \"./BaseNav3DModifle\";\nexport class NavMeshObstacles extends BaseNav3DModifle {\n    set meshType(value) {\n        if (this._meshType == value)\n            return;\n        this._meshType = value;\n        this._changeData();\n        this._onWorldMatNeedChange();\n    }\n    get meshType() {\n        return this._meshType;\n    }\n    set center(value) {\n        value.cloneTo(this._center);\n        this._onWorldMatNeedChange();\n    }\n    get center() {\n        return this._center;\n    }\n    set size(value) {\n        value.cloneTo(this.size);\n        if (this._meshType == NavObstaclesMeshType.BOX) {\n            this._onWorldMatNeedChange();\n        }\n    }\n    get size() {\n        return this._size;\n    }\n    set height(value) {\n        this._height = value;\n        if (this._meshType == NavObstaclesMeshType.CYLINDER) {\n            this._onWorldMatNeedChange();\n        }\n    }\n    get height() {\n        return this._height;\n    }\n    set radius(value) {\n        this._radius = value;\n        if (this._meshType == NavObstaclesMeshType.CYLINDER) {\n            this._onWorldMatNeedChange();\n        }\n    }\n    get radius() {\n        return this._radius;\n    }\n    set datas(value) {\n        if (this._oriTiles) {\n            this._oriTiles.destroy();\n            this._oriTiles = null;\n        }\n        if (value != null) {\n            this._oriTiles = new NavTileData(value);\n        }\n        this._changeData();\n        this._onWorldMatNeedChange();\n    }\n    get datas() {\n        if (this._oriTiles)\n            return this._oriTiles._res;\n        return null;\n    }\n    constructor() {\n        super();\n        this._meshType = NavObstaclesMeshType.BOX;\n        this._center = new Vector3(0, 0, 0);\n        this._size = new Vector3(1, 1, 1);\n        this._height = 1;\n        this._radius = 0.5;\n        this._localMat = new Matrix4x4();\n        this._modifierData = new NavModifleData();\n    }\n    _onEnable() {\n        this._changeData();\n        super._onEnable();\n        let min = this._modifierData._min;\n        let max = this._modifierData._max;\n        let surface = this._manager.getNavMeshSurfacesByBound(min, max, this._modifierData.agentType);\n        this._modifierData._initSurface(surface);\n    }\n    _refeashTranfrom(mat, min, max) {\n        if (this._meshType == NavObstaclesMeshType.BOX) {\n            Matrix4x4.createAffineTransformation(this._center, Quaternion.DEFAULT, this._size, this._localMat);\n        }\n        else {\n            Vector3.TEMP.setValue(this.radius, this.height, this.radius);\n            Matrix4x4.createAffineTransformation(this._center, Quaternion.DEFAULT, Vector3.TEMP, this._localMat);\n        }\n        Matrix4x4.multiply(mat, this._localMat, this._modifierData._transfrom);\n        let data = this._modifierData;\n        if (data.datas == null)\n            return;\n        let boundmin = data.datas._boundMin;\n        let boundmax = data.datas._boundMax;\n        NavigationUtils._transfromBoundBox(boundmin, boundmax, this._modifierData._transfrom, min, max);\n        this._modifierData._refeahTransfrom();\n    }\n    _changeData() {\n        if (!this._enabled)\n            return;\n        let modiferData = this._modifierData;\n        switch (this._meshType) {\n            case NavObstaclesMeshType.BOX:\n                modiferData.datas = NavigationManager._getObstacleData(NavObstaclesMeshType.BOX);\n                break;\n            case NavObstaclesMeshType.CYLINDER:\n                modiferData.datas = NavigationManager._getObstacleData(NavObstaclesMeshType.CYLINDER);\n                break;\n            case NavObstaclesMeshType.CUSTOMER:\n                if (this._oriTiles) {\n                    modiferData.datas = this._oriTiles.getNavData(0);\n                }\n                else {\n                    modiferData.datas = null;\n                }\n                break;\n            default:\n                console.error(\"NavMesh2DObstacles:meshType error\");\n                break;\n        }\n    }\n    _onDestroy() {\n        super._onDestroy();\n    }\n    _cloneTo(dest) {\n        let obstacles = dest;\n        this._center.cloneTo(obstacles.center);\n        obstacles._meshType = this._meshType;\n        this.size.cloneTo(obstacles.size);\n        obstacles.radius = this.radius;\n        obstacles.height = this.height;\n        super._cloneTo(dest);\n    }\n}\nNavMeshObstacles._boundMin = new Vector3(-0.5, -0.5, -0.5);\nNavMeshObstacles._boundMax = new Vector3(0.5, 0.5, 0.5);\n","import { MathUtils3D } from \"../../../maths/MathUtils3D\";\nimport { Quaternion } from \"../../../maths/Quaternion\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { BaseNavAgent } from \"../../common/component/BaseNavAgent\";\nimport { NavigationManager } from \"../NavigationManager\";\nconst TempQuaternion = new Quaternion();\nconst tempVector3 = new Vector3();\nexport class NavAgent extends BaseNavAgent {\n    constructor() {\n        super(...arguments);\n        this._destination = new Vector3();\n    }\n    set baseOffset(value) {\n        this._baseOffset = value;\n    }\n    get baseOffset() {\n        return this._baseOffset;\n    }\n    set destination(value) {\n        value.cloneTo(this._destination);\n        this._setTarget(this._destination);\n    }\n    get destination() {\n        return this._destination;\n    }\n    _getManager() {\n        return NavigationManager._getNavManager(this);\n    }\n    _getpos(vec) {\n        let transform = this.owner.transform;\n        transform.position.cloneTo(vec);\n        vec.y -= this._baseOffset;\n    }\n    _getheight() {\n        let scale = this.owner.transform.getWorldLossyScale();\n        return this._height * scale.y;\n    }\n    _getradius() {\n        let scale = this.owner.transform.getWorldLossyScale();\n        return this._radius * Math.max(scale.x, scale.y);\n    }\n    _updatePosition(pos, dir) {\n        let transform = this.owner.transform;\n        pos.y += this._baseOffset;\n        transform.position = pos;\n        if (MathUtils3D.isZero(dir.length()))\n            return;\n        let up = tempVector3;\n        transform.getUp(up);\n        Vector3.normalize(dir, dir);\n        Quaternion.rotationLookAt(dir, up, TempQuaternion);\n        transform.rotation = TempQuaternion;\n    }\n}\n","import { ClassUtils } from \"../../utils/ClassUtils\";\nimport { BaseNav3DModifle } from \"./component/BaseNav3DModifle\";\nimport { NavMeshSurface } from \"./component/NavMeshSurface\";\nimport { NavMeshModifileSurface } from \"./component/NavMeshModifileSurface\";\nimport { NavMeshLink } from \"./component/NavMeshLink\";\nimport { NavMeshModifierVolume } from \"./component/NavMeshModifierVolume\";\nimport { NavMeshObstacles } from \"./component/NavMeshObstacles\";\nimport { NavAgent } from \"./component/NavAgent\";\nimport { NavigationManager } from \"./NavigationManager\";\nimport { NavMesh } from \"./NavMesh\";\nlet c = ClassUtils.regClass;\nc(\"BaseNav3DModifle\", BaseNav3DModifle);\nc(\"NavAgent\", NavAgent);\nc(\"NavMeshSurface\", NavMeshSurface);\nc(\"NavigationManager\", NavigationManager);\nc(\"NavMesh\", NavMesh);\nc(\"NavMeshModifileSurface\", NavMeshModifileSurface);\nc(\"NavMeshLink\", NavMeshLink);\nc(\"NavMeshObstacles\", NavMeshObstacles);\nc(\"NavMeshModifierVolume\", NavMeshModifierVolume);\n"],"names":["NavObstaclesMeshType","NavTileCache","BaseNavigationManager","Scene3D","Laya","Component","Event","tempVector3","Vector3","Laya3DRender","BufferUsage","IndexFormat","NavigationUtils","VertexMesh","PrimitiveMesh","BaseNavMesh","BaseNavMeshSurface","NavModifleData","NavTileData","NavMeshLinkData","ModifierVolumeData","Matrix4x4","Quaternion","BaseNavAgent","MathUtils3D","ClassUtils"],"mappings":"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"}