{"version":3,"file":"laya.opengl_2D.js","sources":["../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/2DRenderPass/GLES2DRenderCMD.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESRenderCMD.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESVertexBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/2DRenderPass/GLESRenderContext2D.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/RTDefineDatas.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/RTRenderState.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/RTShaderPass.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/2DRenderPass/GLESRenderElement2D.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/2DRenderPass/GLESRender2DProcess.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESBufferState.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESCommandUniformMap.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/RTShaderDefine.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESInternalTex.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESInternalRT.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESTextureContext.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESEngine.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESIndexBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESShaderInstance.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESRenderGeometryElement.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESShaderData.js","../../bin/tsc/layaAir/laya/RenderDriver/OpenGLESDriver/RenderDevice/GLESRenderDeviceFactory.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/CommonMemoryAllocater.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/NativeMemory.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/RTSubShader.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/RuntimeModuleData/RTUintRenderModuleDataFactory.js"],"sourcesContent":["import { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Blit2DQuadCMD, Draw2DElementCMD, SetRendertarget2DCMD } from \"../../DriverDesign/2DRenderPass/IRender2DCMD\";\nimport { RenderCMDType } from \"../../DriverDesign/RenderDevice/IRenderCMD\";\nexport class GLESSetRendertarget2DCMD extends SetRendertarget2DCMD {\n    constructor() {\n        super();\n        this._nativeObj = new window.conchGLESSetRendertarget2DCMD();\n        this.type = RenderCMDType.ChangeRenderTarget;\n        this._clearColorValue = new Color();\n    }\n    get invertY() {\n        return this._invertY;\n    }\n    set invertY(value) {\n        this._invertY = value;\n        this._nativeObj.setinvertY(value);\n    }\n    get clearColorValue() {\n        return this._clearColorValue;\n    }\n    set clearColorValue(value) {\n        value.cloneTo(this._clearColorValue);\n        this._nativeObj.clearColorValue(value);\n    }\n    get rt() {\n        return this._rt;\n    }\n    set rt(value) {\n        this._rt = value;\n        this._nativeObj.setRT(value ? value._nativeObj : null);\n    }\n    get clearColor() {\n        return this._clearColor;\n    }\n    set clearColor(value) {\n        this._clearColor = value;\n        this._nativeObj.setClearColor(value);\n    }\n}\nexport class GLESDraw2DElementCMD extends Draw2DElementCMD {\n    constructor() {\n        super();\n        this.type = RenderCMDType.DrawElement;\n        this._nativeObj = new window.conchGLESDraw2DElementCMD();\n    }\n    setRenderelements(value) {\n        this._elemets = value;\n        this._nativeObj.clearElement();\n        if (value.length == 1) {\n            this._nativeObj.addOneElement(value[0]._nativeObj);\n        }\n        else {\n            value.forEach(element => {\n                this._nativeObj.addOneElement(element._nativeObj);\n            });\n        }\n    }\n}\nexport class GLESBlit2DQuadCMD extends Blit2DQuadCMD {\n    constructor() {\n        super();\n        this._nativeObj = new window.conchGLESBlit2DQuadCMD();\n        this.type = RenderCMDType.Blit;\n        this._offsetScale = new Vector4();\n    }\n    set source(value) {\n        this._source = value;\n        this._nativeObj.setSource(value._nativeObj);\n    }\n    get source() {\n        return this._source;\n    }\n    get element() {\n        return this._element;\n    }\n    set element(value) {\n        this._element = value;\n        this._nativeObj.setRenderElement(value._nativeObj);\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n        this._nativeObj.setDest(value ? value._nativeObj : null);\n    }\n    get offsetScale() {\n        return this._offsetScale;\n    }\n    set offsetScale(value) {\n        value.cloneTo(this._offsetScale);\n        this._nativeObj.setOffsetScale(this._offsetScale);\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { SetRenderDataCMD, RenderCMDType, SetShaderDefineCMD } from \"../../DriverDesign/RenderDevice/IRenderCMD\";\nimport { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nexport class GLESSetRenderData extends SetRenderDataCMD {\n    get dataType() {\n        return this._dataType;\n    }\n    set dataType(value) {\n        this._dataType = value;\n        this._nativeObj.setDataType(value);\n    }\n    get propertyID() {\n        return this._propertyID;\n    }\n    set propertyID(value) {\n        this._propertyID = value;\n        this._nativeObj.setPropertyID(value);\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n        this._nativeObj.setDest(value._nativeObj);\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        switch (this.dataType) {\n            case ShaderDataType.Int:\n                this.data_number = value;\n                this._value = this.data_number;\n                this._nativeObj.setInt(this.value);\n                break;\n            case ShaderDataType.Float:\n                this.data_number = value;\n                this._value = this.data_number;\n                this._nativeObj.setFloat(this.value);\n                break;\n            case ShaderDataType.Bool:\n                this.data_number = value;\n                this._value = this.data_number;\n                this._nativeObj.setBool(this.value);\n                break;\n            case ShaderDataType.Matrix4x4:\n                !this.data_mat && (this.data_mat = new Matrix4x4());\n                value.cloneTo(this.data_mat);\n                this._value = this.data_mat;\n                this._nativeObj.setMatrix4x4(this.value);\n                break;\n            case ShaderDataType.Color:\n                !this.data_Color && (this.data_Color = new Color());\n                value.cloneTo(this.data_Color);\n                this._value = this.data_Color;\n                this._nativeObj.setColor(this.value);\n                break;\n            case ShaderDataType.Texture2D:\n                this._value = this.data_texture = value;\n                this._nativeObj.setTexture2D(this.data_texture._texture._nativeObj);\n                break;\n            case ShaderDataType.Vector4:\n                !this.data_v4 && (this.data_v4 = new Vector4());\n                value.cloneTo(this.data_v4);\n                this._value = this.data_v4;\n                this._nativeObj.setVector(this.value);\n                break;\n            case ShaderDataType.Vector2:\n                !this.data_v2 && (this.data_v2 = new Vector2());\n                value.cloneTo(this.data_v2);\n                this._value = this.data_v2;\n                this._nativeObj.setVector2(this.value);\n                break;\n            case ShaderDataType.Vector3:\n                !this.data_v3 && (this.data_v3 = new Vector3());\n                value.cloneTo(this.data_v3);\n                this._value = this.data_v3;\n                this._nativeObj.setVector3(this.value);\n                break;\n            case ShaderDataType.Buffer:\n                this._value = this.data_Buffer = value;\n                this._nativeObj.setBufferValue(this.data_Buffer.buffer, this.data_Buffer.byteLength);\n                break;\n            default:\n                break;\n        }\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeData;\n        this._nativeObj = new window.conchGLESSetRenderData();\n    }\n}\nexport class GLESSetShaderDefine extends SetShaderDefineCMD {\n    get define() {\n        return this._define;\n    }\n    set define(value) {\n        this._define = value;\n        this._nativeObj.setDefine(value);\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n        this._nativeObj.setDest(value._nativeObj);\n    }\n    get add() {\n        return this._add;\n    }\n    set add(value) {\n        this._add = value;\n        this._nativeObj.setAdd(value);\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeShaderDefine;\n        this._nativeObj = new window.conchGLESSetShaderDefine();\n    }\n}\n","export class GLESVertexBuffer {\n    constructor(targetType, bufferUsageType) {\n        this._attributeMapTemp = new Map();\n        this._bufferRef = null;\n        this._nativeObj = new window.conchGLESVertexBuffer(targetType, bufferUsageType);\n    }\n    get vertexDeclaration() {\n        return this._vertexDeclaration;\n    }\n    set vertexDeclaration(value) {\n        this._vertexDeclaration = value;\n        this._shaderValues = this._vertexDeclaration._shaderValues;\n        this._nativeObj.clearVertexDeclaration();\n        for (var k in this._shaderValues) {\n            this._nativeObj.setVertexDeclaration(parseInt(k), this._shaderValues[k]);\n        }\n    }\n    get instanceBuffer() {\n        return this._nativeObj._instanceBuffer;\n    }\n    set instanceBuffer(value) {\n        this._nativeObj._instanceBuffer = value;\n    }\n    setData(buffer, bufferOffset, dataStartIndex, dataCount) {\n        this._bufferRef = buffer;\n        this._nativeObj.setData(buffer, bufferOffset, dataStartIndex, dataCount);\n    }\n    setDataLength(byteLength) {\n        this._nativeObj.setDataLength(byteLength);\n    }\n    destroy() {\n        this._nativeObj.destroy();\n        this._nativeObj = null;\n        this._bufferRef = null;\n    }\n}\n","import { BufferTargetType, BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { VertexDeclaration } from \"../../../RenderEngine/VertexDeclaration\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { VertexElement } from \"../../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../../renders/VertexElementFormat\";\nimport { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nimport { RenderState } from \"../../RenderModuleData/Design/RenderState\";\nimport { GLESVertexBuffer } from \"../RenderDevice/GLESVertexBuffer\";\nexport class GLESREnderContext2D {\n    get invertY() {\n        return this._nativeObj.invertY;\n    }\n    set invertY(value) {\n        this._nativeObj.invertY = value;\n    }\n    get pipelineMode() {\n        return this._nativeObj.pipelineMode;\n    }\n    set pipelineMode(value) {\n        this._nativeObj.pipelineMode = value;\n    }\n    constructor() {\n        this._tempList = [];\n        this._nativeObj = new window.conchGLESRenderContext2D();\n        this._nativeObj.setGlobalConfigShaderData(Shader3D._configDefineValues._nativeObj);\n        this._nativeObj.pipelineMode = \"Forward\";\n        (!GLESREnderContext2D.isCreateBlitScreenELement) && this.setBlitScreenElement();\n    }\n    get sceneData() {\n        return this._sceneData;\n    }\n    set sceneData(value) {\n        this._sceneData = value;\n        this._nativeObj.setSceneShaderData(value ? value._nativeObj : null);\n    }\n    setBlitScreenElement() {\n        let blitScreenElement = LayaGL.render2DRenderPassFactory.createRenderElement2D();\n        let shaderData = LayaGL.renderDeviceFactory.createShaderData();\n        let _vertices = new Float32Array([\n            1, 1, 1, 1,\n            1, -1, 1, 0,\n            -1, 1, 0, 1,\n            -1, -1, 0, 0\n        ]);\n        let _vertexBuffer = new GLESVertexBuffer(BufferTargetType.ARRAY_BUFFER, BufferUsage.Dynamic);\n        _vertexBuffer.setDataLength(64);\n        _vertexBuffer.setData(_vertices.buffer, 0, 0, _vertices.buffer.byteLength);\n        let declaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, 0)]);\n        _vertexBuffer.vertexDeclaration = declaration;\n        let geometry = LayaGL.renderDeviceFactory.createRenderGeometryElement(MeshTopology.TriangleStrip, DrawType.DrawArray);\n        geometry.setDrawArrayParams(0, 4);\n        let bufferState = LayaGL.renderDeviceFactory.createBufferState();\n        bufferState.applyState([_vertexBuffer], null);\n        geometry.bufferState = bufferState;\n        let attributeMap = {\n            'a_PositionTexcoord': [0, ShaderDataType.Vector4]\n        };\n        let uniformMap = {\n            \"u_MainTex\": ShaderDataType.Texture2D,\n        };\n        let shader = Shader3D.add(\"GLESblitScreen\", false, false);\n        shader.shaderType = ShaderFeatureType.DEFAULT;\n        let subShader = new SubShader(attributeMap, uniformMap, {});\n        shader.addSubShader(subShader);\n        let vs = `\n            #define SHADER_NAME GLESblitScreenVS\n\n            varying vec2 v_Texcoord0;\n\n            void main()\n            {\n                gl_Position = vec4(- 1.0 + (a_PositionTexcoord.x + 1.0), (1.0 - ((- 1.0 + (-a_PositionTexcoord.y + 1.0)) + 1.0) / 2.0) * 2.0 - 1.0, 0.0, 1.0);\n\n                v_Texcoord0 = a_PositionTexcoord.zw;\n            }\n        `;\n        let fs = `\n            #define SHADER_NAME GLESblitScreenFS\n\n            varying vec2 v_Texcoord0;\n\n            void main()\n            {\n                vec4 mainColor = texture2D(u_MainTex, v_Texcoord0);\n               \n                gl_FragColor = mainColor;\n            }\n        `;\n        let pass = subShader.addShaderPass(vs, fs);\n        pass.statefirst = true;\n        let blitState = pass.renderState;\n        blitState.depthTest = RenderState.DEPTHTEST_ALWAYS;\n        blitState.depthWrite = false;\n        blitState.cull = RenderState.CULL_NONE;\n        blitState.blend = RenderState.BLEND_DISABLE;\n        blitState.stencilRef = 1;\n        blitState.stencilTest = RenderState.STENCILTEST_OFF;\n        blitState.stencilWrite = false;\n        blitState.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\n        blitScreenElement.geometry = geometry;\n        blitScreenElement.materialShaderData = shaderData;\n        blitScreenElement.subShader = subShader;\n        blitScreenElement.renderStateIsBySprite = false;\n        this._nativeObj.setBlitScreenElement(blitScreenElement._nativeObj);\n        GLESREnderContext2D.isCreateBlitScreenELement = true;\n        GLESREnderContext2D.blitScreenElement = blitScreenElement;\n    }\n    drawRenderElementList(list) {\n        this._tempList.length = 0;\n        let listelement = list.elements;\n        listelement.forEach((element) => {\n            this._tempList.push(element._nativeObj);\n        });\n        return this._nativeObj.drawRenderElementList(this._tempList, list.length);\n    }\n    setRenderTarget(value, clear, clearColor) {\n        this._dist = value;\n        this._nativeObj.setRenderTarget(value ? value._nativeObj : null, clear, clearColor);\n    }\n    getRenderTarget() {\n        return this._dist;\n    }\n    setOffscreenView(width, height) {\n        this._nativeObj.setOffscreenView(width, height);\n    }\n    drawRenderElementOne(node) {\n        this._nativeObj.drawRenderElementOne(node._nativeObj);\n    }\n    runOneCMD(cmd) {\n        this._nativeObj.runOneCMD(cmd._nativeObj);\n    }\n    runCMDList(cmds) {\n        let nativeobCMDs = [];\n        cmds.forEach(element => {\n            nativeobCMDs.push(element._nativeObj);\n        });\n        this._nativeObj.runCMDList(nativeobCMDs);\n    }\n}\nGLESREnderContext2D.isCreateBlitScreenELement = false;\n","export class RTDefineDatas {\n    constructor() {\n        this._nativeObj = new window.conchRTDefineDatas();\n    }\n    get _length() {\n        return this._nativeObj._length;\n    }\n    set _length(value) {\n        this._nativeObj._length = value;\n    }\n    get _mask() {\n        return this._nativeObj._mask;\n    }\n    set _mask(value) {\n        this._nativeObj._mask = value;\n    }\n    _intersectionDefineDatas(define) {\n        this._nativeObj._intersectionDefineDatas(define);\n    }\n    add(define) {\n        this._nativeObj.add(define);\n    }\n    remove(define) {\n        this._nativeObj.remove(define);\n    }\n    addDefineDatas(define) {\n        this._nativeObj.addDefineDatas(define._nativeObj);\n    }\n    removeDefineDatas(define) {\n        this._nativeObj.removeDefineDatas(define._nativeObj);\n    }\n    has(define) {\n        return this._nativeObj.has(define);\n    }\n    clear() {\n        this._nativeObj.clear();\n    }\n    cloneTo(destObject) {\n        this._nativeObj.cloneTo(destObject._nativeObj);\n    }\n    clone() {\n        var dest = new RTDefineDatas();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy() {\n        this._nativeObj.destroy();\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nimport { RenderState } from \"../Design/RenderState\";\nexport class RTRenderState extends RenderState {\n    set cull(value) {\n        this._nativeObj.cull = value;\n    }\n    get cull() {\n        return this._nativeObj.cull;\n    }\n    set blend(value) {\n        this._nativeObj.blend = value;\n    }\n    get blend() {\n        return this._nativeObj.blend;\n    }\n    set srcBlend(value) {\n        this._nativeObj.srcBlend = value;\n    }\n    get srcBlend() {\n        return this._nativeObj.srcBlend;\n    }\n    set dstBlend(value) {\n        this._nativeObj.dstBlend = value;\n    }\n    get dstBlend() {\n        return this._nativeObj.dstBlend;\n    }\n    set srcBlendRGB(value) {\n        this._nativeObj.srcBlendRGB = value;\n    }\n    get srcBlendRGB() {\n        return this._nativeObj.srcBlendRGB;\n    }\n    set dstBlendRGB(value) {\n        this._nativeObj.dstBlendRGB = value;\n    }\n    get dstBlendRGB() {\n        return this._nativeObj.dstBlendRGB;\n    }\n    set srcBlendAlpha(value) {\n        this._nativeObj.srcBlendAlpha = value;\n    }\n    get srcBlendAlpha() {\n        return this._nativeObj.srcBlendAlpha;\n    }\n    set dstBlendAlpha(value) {\n        this._nativeObj.dstBlendAlpha = value;\n    }\n    get dstBlendAlpha() {\n        return this._nativeObj.dstBlendAlpha;\n    }\n    set blendEquation(value) {\n        this._nativeObj.blendEquation = value;\n    }\n    get blendEquation() {\n        return this._nativeObj.blendEquation;\n    }\n    set blendEquationRGB(value) {\n        this._nativeObj.blendEquationRGB = value;\n    }\n    get blendEquationRGB() {\n        return this._nativeObj.blendEquationRGB;\n    }\n    set blendEquationAlpha(value) {\n        this._nativeObj.blendEquationAlpha = value;\n    }\n    get blendEquationAlpha() {\n        return this._nativeObj.blendEquationAlpha;\n    }\n    set depthTest(value) {\n        this._nativeObj.depthTest = value;\n    }\n    get depthTest() {\n        return this._nativeObj.depthTest;\n    }\n    set depthWrite(value) {\n        this._nativeObj.depthWrite = value;\n    }\n    get depthWrite() {\n        return this._nativeObj.depthWrite;\n    }\n    set stencilWrite(value) {\n        this._nativeObj.stencilWrite = value;\n    }\n    get stencilWrite() {\n        return this._nativeObj.stencilWrite;\n    }\n    set stencilTest(value) {\n        this._nativeObj.stencilTest = value;\n    }\n    get stencilTest() {\n        return this._nativeObj.stencilTest;\n    }\n    set stencilRef(value) {\n        this._nativeObj.stencilRef = value;\n    }\n    get stencilRef() {\n        return this._nativeObj.stencilRef;\n    }\n    set stencilOp(value) {\n        this._nativeObj.setStencilOp(value);\n    }\n    get stencilOp() {\n        let value = this._nativeObj.getStencilOp();\n        let _tempVector3 = new Vector3();\n        _tempVector3.x = value.x;\n        _tempVector3.y = value.y;\n        _tempVector3.z = value.z;\n        return _tempVector3;\n    }\n    setNull() {\n        this._nativeObj.setNull();\n    }\n    createObj() {\n        this._nativeObj = new window.conchRenderState();\n    }\n    constructor() {\n        super();\n    }\n    cloneTo(dest) {\n        this._nativeObj.cloneTo(dest._nativeObj);\n    }\n    clone() {\n        let state = new RTRenderState();\n        this.cloneTo(state);\n        return state;\n    }\n}\n","import { RTDefineDatas } from \"./RTDefineDatas\";\nimport { RTRenderState } from \"./RTRenderState\";\nexport class RTShaderPass {\n    constructor(pass) {\n        this._validDefine = new RTDefineDatas();\n        this.is2D = false;\n        this._nativeObj = new window.conchRTShaderPass();\n        this._createShaderInstanceFun = this.nativeCreateShaderInstance.bind(this);\n        this._nativeObj.setCreateShaderInstanceFunction(this._createShaderInstanceFun);\n        this.renderState = new RTRenderState();\n        this.renderState.setNull();\n        this._pass = pass;\n    }\n    get additionShaderData() {\n        return this._additionShaderData;\n    }\n    set additionShaderData(value) {\n        this._additionShaderData = value;\n        this._nativeObj.setAdditionShaderData(value);\n    }\n    get nodeCommonMap() {\n        return this._nodeCommonMap;\n    }\n    set nodeCommonMap(value) {\n        this._nativeObj.setCommonUniformMap(value);\n    }\n    static getGlobalCompileDefine() {\n        if (!RTShaderPass._globalCompileDefine) {\n            RTShaderPass._globalCompileDefine = new RTDefineDatas();\n        }\n        return RTShaderPass._globalCompileDefine;\n    }\n    get statefirst() {\n        return this._nativeObj._statefirst;\n    }\n    set statefirst(value) {\n        this._nativeObj._statefirst = value;\n    }\n    get renderState() {\n        return this._renderState;\n    }\n    set renderState(value) {\n        this._renderState = value;\n        this._nativeObj.setRenderState(value._nativeObj);\n    }\n    get pipelineMode() {\n        return this._nativeObj._pipelineMode;\n    }\n    set pipelineMode(value) {\n        this._nativeObj._pipelineMode = value;\n    }\n    get validDefine() {\n        return this._validDefine;\n    }\n    set validDefine(value) {\n        this._validDefine = value;\n        this._nativeObj.setValidDefine(value._nativeObj);\n    }\n    nativeCreateShaderInstance() {\n        var shaderIns = this._pass.withCompile(RTShaderPass.getGlobalCompileDefine(), this._nativeObj.is2D);\n        return shaderIns._nativeObj;\n    }\n    destroy() {\n        this._nativeObj.destroy();\n    }\n    setCacheShader(defines, shaderInstance) {\n        this._nativeObj.setCacheShader(defines._nativeObj, shaderInstance._nativeObj, shaderInstance);\n    }\n    getCacheShader(defines) {\n        return this._nativeObj.getCacheShader(defines._nativeObj);\n    }\n}\nRTShaderPass._globalCompileDefine = null;\n","import { RTShaderPass } from \"../../RenderModuleData/RuntimeModuleData/RTShaderPass\";\nexport class GLESREnderElement2D {\n    set geometry(data) {\n        this._geometry = data;\n        this._nativeObj.setGeometry(data ? data._nativeObj : null);\n    }\n    get geometry() {\n        return this._geometry;\n    }\n    set materialShaderData(data) {\n        this._materialShaderData = data;\n        this._nativeObj.setMaterialShaderData(data ? data._nativeObj : null);\n    }\n    get materialShaderData() {\n        return this._materialShaderData;\n    }\n    set value2DShaderData(data) {\n        this._value2DShaderData = data;\n        this._nativeObj.setValue2DShaderData(data ? data._nativeObj : null);\n    }\n    get value2DShaderData() {\n        return this._value2DShaderData;\n    }\n    get subShader() {\n        return this._subShader;\n    }\n    set subShader(value) {\n        this._subShader = value;\n        this._nativeObj.setSubShader(value.moduleData._nativeObj);\n    }\n    init() {\n        this._nativeObj = new window.conchGLESRenderElement2D();\n        window.conchGLESRenderElement2D.setCompileDefine(RTShaderPass.getGlobalCompileDefine()._nativeObj);\n    }\n    constructor() {\n        this._renderStateIsBySprite = true;\n        this.init();\n    }\n    get nodeCommonMap() {\n        return this._nodeCommonMap;\n    }\n    set nodeCommonMap(value) {\n        this._nodeCommonMap = value;\n        this._nativeObj.setCommonUniformMap(value);\n    }\n    get renderStateIsBySprite() {\n        return this._renderStateIsBySprite;\n    }\n    set renderStateIsBySprite(value) {\n        this._renderStateIsBySprite = value;\n        this._nativeObj.renderStateIsBySprite = value;\n    }\n    destroy() {\n        this._nativeObj.destroy();\n        this.geometry = null;\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { GLESSetRenderData, GLESSetShaderDefine } from \"../RenderDevice/GLESRenderCMD\";\nimport { GLESBlit2DQuadCMD, GLESDraw2DElementCMD, GLESSetRendertarget2DCMD } from \"./GLES2DRenderCMD\";\nimport { GLESREnderContext2D } from \"./GLESRenderContext2D\";\nimport { GLESREnderElement2D } from \"./GLESRenderElement2D\";\nexport class GLESRender2DProcess {\n    createSetRenderDataCMD() {\n        return new GLESSetRenderData();\n    }\n    createSetShaderDefineCMD() {\n        return new GLESSetShaderDefine();\n    }\n    createBlit2DQuadCMDData() {\n        return new GLESBlit2DQuadCMD();\n    }\n    createDraw2DElementCMDData() {\n        return new GLESDraw2DElementCMD();\n    }\n    createSetRendertarget2DCMD() {\n        return new GLESSetRendertarget2DCMD;\n    }\n    createRenderElement2D() {\n        return new GLESREnderElement2D();\n    }\n    createRenderContext2D() {\n        return new GLESREnderContext2D();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.render2DRenderPassFactory)\n        LayaGL.render2DRenderPassFactory = new GLESRender2DProcess();\n});\n","export class GLESBufferState {\n    constructor() {\n        this._nativeObj = new window.conchGLESBufferState();\n    }\n    applyState(vertexBuffers, indexBuffer) {\n        this._vertexBuffers = vertexBuffers;\n        this._bindedIndexBuffer = indexBuffer;\n        let tempVertexBuffers = [];\n        vertexBuffers.forEach((element) => {\n            tempVertexBuffers.push(element._nativeObj);\n        });\n        this._nativeObj.applyState(tempVertexBuffers, indexBuffer ? indexBuffer._nativeObj : null);\n    }\n    destroy() {\n        this._nativeObj.destroy();\n    }\n}\n","import { CommandUniformMap } from \"../../DriverDesign/RenderDevice/CommandUniformMap\";\nexport class GLESCommandUniformMap extends CommandUniformMap {\n    constructor(stateName) {\n        super(stateName);\n        this._nativeObj = new window.conchGLESCommandUniformMap.create(stateName);\n    }\n    addShaderUniform(propertyID, propertyKey, uniformtype) {\n        this._nativeObj.addShaderUniform(propertyID, propertyKey, uniformtype);\n    }\n    addShaderUniformArray(propertyID, propertyName, uniformtype, arrayLength) {\n        this._nativeObj.addShaderUniformArray(propertyID, propertyName, uniformtype, arrayLength);\n    }\n}\n","import { ShaderDefine } from \"../Design/ShaderDefine\";\nexport class RTShaderDefine extends ShaderDefine {\n    constructor(index, value) {\n        super(index, value);\n    }\n}\n","export class GLESInternalTex {\n    constructor(nativeObj) {\n        this._nativeObj = nativeObj;\n    }\n    get wrapU() {\n        return this._nativeObj.wrapU;\n    }\n    set wrapU(value) {\n        this._nativeObj.wrapU = value;\n    }\n    get wrapV() {\n        return this._nativeObj.wrapV;\n    }\n    set wrapV(value) {\n        this._nativeObj.wrapV = value;\n    }\n    get wrapW() {\n        return this._nativeObj.wrapW;\n    }\n    set wrapW(value) {\n        this._nativeObj.wrapW = value;\n    }\n    set baseMipmapLevel(value) {\n        this._nativeObj.baseMipmapLevel = value;\n    }\n    get baseMipmapLevel() {\n        return this._nativeObj.baseMipmapLevel;\n    }\n    set maxMipmapLevel(value) {\n        this._nativeObj.maxMipmapLevel = value;\n    }\n    get maxMipmapLevel() {\n        return this._nativeObj.maxMipmapLevel;\n    }\n    get compareMode() {\n        return this._nativeObj.compareMode;\n    }\n    set compareMode(value) {\n        this._nativeObj.compareMode = value;\n    }\n    get anisoLevel() {\n        return this._nativeObj.anisoLevel;\n    }\n    set anisoLevel(value) {\n        this._nativeObj.anisoLevel = value;\n    }\n    get filterMode() {\n        return this._nativeObj.filterMode;\n    }\n    set filterMode(value) {\n        this._nativeObj.filterMode = value;\n    }\n    get mipmapCount() {\n        return this._nativeObj.mipmapCount;\n    }\n    get mipmap() {\n        return this._nativeObj.mipmap;\n    }\n    get isPotSize() {\n        return this._nativeObj.getIsPotSize();\n    }\n    get useSRGBLoad() {\n        return this._nativeObj.useSRGBLoad;\n    }\n    get depth() {\n        return this._nativeObj.getDepth();\n    }\n    get gammaCorrection() {\n        return this._nativeObj.gammaCorrection;\n    }\n    set gammaCorrection(value) {\n        this._nativeObj.gammaCorrection = value;\n    }\n    get resource() {\n        return this._nativeObj;\n    }\n    get width() {\n        return this._nativeObj.getWidth();\n    }\n    get height() {\n        return this._nativeObj.getHeight();\n    }\n    get gpuMemory() {\n        return this._nativeObj.getGPUMemory();\n    }\n    dispose() {\n        this._nativeObj.dispose();\n        this._nativeObj = null;\n    }\n}\n","import { GLESInternalTex } from \"./GLESInternalTex\";\nexport class GLESInternalRT {\n    constructor(nativeObj) {\n        this._nativeObj = nativeObj;\n    }\n    get _isCube() {\n        return this._nativeObj._isCube;\n    }\n    set _isCube(value) {\n        this._nativeObj._isCube = value;\n    }\n    get _samples() {\n        return this._nativeObj._samples;\n    }\n    set _samples(value) {\n        this._nativeObj._samples = value;\n    }\n    get _generateMipmap() {\n        return this._nativeObj._generateMipmap;\n    }\n    set _generateMipmap(value) {\n        this._nativeObj._generateMipmap = value;\n    }\n    get colorFormat() {\n        return this._nativeObj.colorFormat;\n    }\n    set colorFormat(value) {\n        this._nativeObj.colorFormat = value;\n    }\n    get depthStencilFormat() {\n        return this._nativeObj.depthStencilFormat;\n    }\n    set depthStencilFormat(value) {\n        this._nativeObj.depthStencilFormat = value;\n    }\n    get isSRGB() {\n        return this._nativeObj.isSRGB;\n    }\n    set isSRGB(value) {\n        this._nativeObj.isSRGB = value;\n    }\n    get gpuMemory() {\n        return this._nativeObj.gpuMemory;\n    }\n    set gpuMemory(value) {\n        this._nativeObj.gpuMemory = value;\n    }\n    get _textures() {\n        if (this._texturesRef) {\n            return this._texturesRef;\n        }\n        else {\n            this._texturesRef = [];\n            let textures = this._nativeObj.getTextures();\n            textures.forEach((element) => {\n                this._texturesRef.push(new GLESInternalTex(element));\n            });\n            return this._texturesRef;\n        }\n    }\n    get _depthTexture() {\n        if (this._depthTextureRef) {\n            return this._depthTextureRef;\n        }\n        else {\n            var nativeObj = this._nativeObj.getDepthTexture();\n            if (nativeObj)\n                this._depthTextureRef = new GLESInternalTex(nativeObj);\n            return this._depthTextureRef;\n        }\n    }\n    dispose() {\n        this._nativeObj.dispose();\n    }\n}\n","import { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { GLESInternalRT } from \"./GLESInternalRT\";\nimport { GLESInternalTex } from \"./GLESInternalTex\";\nexport class GLESTextureContext {\n    constructor(native) {\n        this._native = native;\n        this.needBitmap = false;\n    }\n    createTextureInternal(dimension, width, height, format, generateMipmap, sRGB, premultipliedAlpha) {\n        var tex = new GLESInternalTex(this._native.createTextureInternal(dimension, width, height, format, generateMipmap, sRGB, premultipliedAlpha));\n        return tex;\n    }\n    setTextureImageData(texture, source, premultiplyAlpha, invertY) {\n        if (source instanceof HTMLCanvasElement) {\n            throw \"native cant draw HTMLCanvasElement\";\n            return;\n        }\n        this._native.setTextureImageData(texture._nativeObj, source._nativeObj.conchImgId, premultiplyAlpha, invertY);\n    }\n    setTexturePixelsData(texture, source, premultiplyAlpha, invertY) {\n        this._native.setTexturePixelsData(texture._nativeObj, source, premultiplyAlpha, invertY);\n    }\n    initVideoTextureData(texture) {\n        this._native.initVideoTextureData(texture._nativeObj);\n    }\n    setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY) {\n        this._native.setTextureSubPixelsData(texture._nativeObj, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n    setTextureSubImageData(texture, source, x, y, premultiplyAlpha, invertY) {\n        if (source instanceof HTMLCanvasElement) {\n            throw \"native cant draw HTMLCanvasElement\";\n            return;\n        }\n        throw \"native not need this function\";\n    }\n    setTexture3DImageData(texture, source, depth, premultiplyAlpha, invertY) {\n        this._native.setTexture3DImageData(texture._nativeObj, source.map(function (s) { return s._nativeObj; }), depth, premultiplyAlpha, invertY);\n    }\n    createTexture3DInternal(dimension, width, height, depth, format, generateMipmap, sRGB, premultipliedAlpha) {\n        return new GLESInternalTex(this._native.createTexture3DInternal(dimension, width, height, depth, format, generateMipmap, sRGB, premultipliedAlpha));\n    }\n    setTexture3DPixelsData(texture, source, depth, premultiplyAlpha, invertY) {\n        this._native.setTexture3DPixelsData(texture._nativeObj, source, depth, premultiplyAlpha, invertY);\n    }\n    setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY) {\n        this._native.setTexture3DSubPixelsData(texture._nativeObj, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\n    }\n    setTextureHDRData(texture, hdrInfo) {\n        let sourceData = hdrInfo.readScanLine();\n        this.setTexturePixelsData(texture, sourceData, false, false);\n    }\n    setTextureDDSData(texture, ddsInfo) {\n        this._native.setTextureDDSData(texture._nativeObj, ddsInfo);\n    }\n    setTextureKTXData(texture, ktxInfo) {\n        this._native.setTextureKTXData(texture._nativeObj, ktxInfo);\n    }\n    setCubeImageData(texture, sources, premultiplyAlpha, invertY) {\n        var images = [];\n        var length = sources.length;\n        for (let index = 0; index < length; index++) {\n            images.push(sources[index]._nativeObj);\n        }\n        this._native.setCubeImageData(texture._nativeObj, images, premultiplyAlpha, invertY);\n    }\n    setCubePixelsData(texture, source, premultiplyAlpha, invertY) {\n        this._native.setCubePixelsData(texture._nativeObj, source, premultiplyAlpha, invertY);\n    }\n    setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY) {\n        this._native.setCubeSubPixelData(texture._nativeObj, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\n    }\n    setCubeDDSData(texture, ddsInfo) {\n        this._native.setCubeDDSData(texture._nativeObj, ddsInfo);\n    }\n    setCubeKTXData(texture, ktxInfo) {\n        this._native.setCubeKTXData(texture._nativeObj, ktxInfo);\n    }\n    setTextureCompareMode(texture, compareMode) {\n        return this._native.setTextureCompareMode(texture._nativeObj, compareMode);\n    }\n    bindRenderTarget(renderTarget, faceIndex = 0) {\n        this._native.bindRenderTarget(renderTarget._nativeObj, faceIndex);\n    }\n    bindoutScreenTarget() {\n        this._native.bindoutScreenTarget();\n    }\n    unbindRenderTarget(renderTarget) {\n        this._native.unbindRenderTarget(renderTarget._nativeObj);\n    }\n    createRenderTargetInternal(width, height, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        return new GLESInternalRT(this._native.createRenderTargetInternal(width, height, colorFormat, depthStencilFormat ? depthStencilFormat : RenderTargetFormat.None, generateMipmap, sRGB, multiSamples));\n    }\n    createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        return new GLESInternalRT(this._native.createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples));\n    }\n    createRenderTextureCubeInternal(dimension, size, format, generateMipmap, sRGB) {\n        return new GLESInternalTex(this._native.createRenderTextureCubeInternal(dimension, size, format, generateMipmap, sRGB));\n    }\n    createRenderTargetDepthTexture(renderTarget, dimension, width, height) {\n        return new GLESInternalTex(this._native.createRenderTargetDepthTexture(renderTarget._nativeObj, dimension, width, height));\n    }\n    readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out) {\n        return this._native.readRenderTargetPixelData(renderTarget._nativeObj, xOffset, yOffset, width, height, out);\n    }\n    readRenderTargetPixelDataAsync(renderTarget, xOffset, yOffset, width, height, out) {\n        return Promise.resolve(this.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out));\n    }\n    updateVideoTexture(texture, video, premultiplyAlpha, invertY) {\n        this._native.updateVideoTexture(texture._nativeObj, video._nativeObj.conchImgId, premultiplyAlpha, invertY);\n    }\n}\n","import { Config } from \"../../../../Config\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { RTShaderDefine } from \"../../RenderModuleData/RuntimeModuleData/RTShaderDefine\";\nimport { GLESTextureContext } from \"./GLESTextureContext\";\nexport var GLESMode;\n(function (GLESMode) {\n    GLESMode[GLESMode[\"Auto\"] = 0] = \"Auto\";\n    GLESMode[GLESMode[\"WebGL2\"] = 1] = \"WebGL2\";\n    GLESMode[GLESMode[\"WebGL1\"] = 2] = \"WebGL1\";\n})(GLESMode || (GLESMode = {}));\nexport class GLESEngine {\n    constructor(config, webglMode = GLESMode.Auto) {\n        this._remapZ = true;\n        this._screenInvertY = false;\n        this._lodTextureSample = true;\n        this._breakTextureSample = true;\n        this._nativeObj = new window.conchGLESEngine(config, webglMode);\n    }\n    endFrame() {\n        this._nativeObj.startFrame();\n    }\n    startFrame() {\n        this._nativeObj.endFrame();\n    }\n    get _enableStatistics() {\n        return this._nativeObj.enableStatistics;\n    }\n    set _enableStatistics(value) {\n        this._nativeObj.enableStatistics = value;\n    }\n    resizeOffScreen(width, height) {\n        this._nativeObj.resizeOffScreen(width, height);\n    }\n    getDefineByName(name) {\n        let nativeRet = this._nativeObj.getDefineByName(name);\n        let ret = new RTShaderDefine(nativeRet._index, nativeRet._value);\n        return ret;\n    }\n    getNamesByDefineData(defineData, out) {\n        out.length = 0;\n        this._nativeObj.getNamesByDefineData(defineData._nativeObj, out);\n    }\n    addTexGammaDefine(key, value) {\n        this._nativeObj.addTexGammaDefine(key, value);\n    }\n    initRenderEngine(canvas) {\n        this._nativeObj.initRenderEngine();\n        this._GLTextureContext = new GLESTextureContext(this._nativeObj.getTextureContext());\n        Config._uniformBlock = Config.enableUniformBufferObject && this.getCapable(RenderCapable.UnifromBufferObject);\n        Config.matUseUBO = Config.matUseUBO && this.getCapable(RenderCapable.UnifromBufferObject);\n        this._nativeObj.enableUniformBufferObject = Config._uniformBlock;\n        this._nativeObj.matUseUBO = Config.matUseUBO;\n    }\n    copySubFrameBuffertoTex(texture, level, xoffset, yoffset, x, y, width, height) {\n        throw new NotImplementedError();\n    }\n    propertyNameToID(name) {\n        return this._nativeObj.propertyNameToID(name);\n    }\n    propertyIDToName(id) {\n        return this._nativeObj.propertyIDToName(id);\n    }\n    getParams(params) {\n        return this._nativeObj.getParams(params);\n    }\n    getCapable(capatableType) {\n        return this._nativeObj.getCapable(capatableType);\n    }\n    getTextureContext() {\n        return this._GLTextureContext;\n    }\n    clearStatisticsInfo() {\n        this._nativeObj.clearStatisticsInfo();\n    }\n    getStatisticsInfo(info) {\n        return this._nativeObj.getStatisticsInfo(info);\n    }\n    viewport(x, y, width, height) {\n        this._nativeObj.viewport(x, y, width, height);\n    }\n    scissor(x, y, width, height) {\n        this._nativeObj.scissor(x, y, width, height);\n    }\n}\n","export class GLESIndexBuffer {\n    destroy() {\n        this._nativeObj.destroy();\n    }\n    _setIndexDataLength(data) {\n        this._nativeObj._setIndexDataLength(data);\n    }\n    _setIndexData(data, bufferOffset) {\n        this._nativeObj._setIndexData(data, bufferOffset);\n    }\n    get indexType() {\n        return this._nativeObj._indexType;\n    }\n    set indexType(value) {\n        this._nativeObj._indexType = value;\n    }\n    get indexCount() {\n        return this._nativeObj._indexCount;\n    }\n    set indexCount(value) {\n        this._nativeObj._indexCount = value;\n    }\n    constructor(targetType, bufferUsageType) {\n        this._nativeObj = new window.conchGLESIndexBuffer(targetType, bufferUsageType);\n    }\n}\n","import { GLSLCodeGenerator } from \"../../../RenderEngine/RenderShader/GLSLCodeGenerator\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { Config } from \"../../../../Config\";\nexport class GLESShaderInstance {\n    constructor() {\n        this._attributeMapTemp = new Map();\n    }\n    _serializeShader() {\n        throw new NotImplementedError();\n    }\n    _deserialize(buffer) {\n        throw new NotImplementedError();\n    }\n    _create(shaderProcessInfo, shaderPass) {\n        this._shaderPass = shaderPass;\n        let useMaterial = Config.matUseUBO;\n        Config.matUseUBO = (!shaderProcessInfo.is2D) && Config.matUseUBO;\n        let shaderObj = GLSLCodeGenerator.GLShaderLanguageProcess3D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps);\n        Config.matUseUBO = useMaterial;\n        this._attributeMapTemp.clear();\n        for (var k in shaderProcessInfo.attributeMap) {\n            this._attributeMapTemp.set(k, shaderProcessInfo.attributeMap[k][0]);\n        }\n        this._nativeObj = new window.conchGLESShaderInstance(shaderProcessInfo.is2D, shaderObj.vs, shaderObj.fs, this._attributeMapTemp, shaderPass.moduleData._nativeObj);\n    }\n    _disposeResource() {\n        this._nativeObj.destroy();\n        this._nativeObj = null;\n    }\n}\n","import { FastSinglelist } from \"../../../utils/SingletonList\";\nexport class GLESRenderGeometryElement {\n    constructor(mode, drawType) {\n        this._nativeObj = new window.conchGLESRenderGeometryElement();\n        this.mode = mode;\n        this.drawParams = new FastSinglelist();\n        this.drawType = drawType;\n    }\n    getDrawDataParams(out) {\n        this.drawParams.cloneTo(out);\n    }\n    setDrawArrayParams(first, count) {\n        this.drawParams.add(first);\n        this.drawParams.add(count);\n        this._nativeObj.setDrawArrayParams(first, count);\n    }\n    setDrawElemenParams(count, offset) {\n        this.drawParams.add(offset);\n        this.drawParams.add(count);\n        this._nativeObj.setDrawElementParams(count, offset);\n    }\n    destroy() {\n        this._nativeObj.destroy();\n    }\n    clearRenderParams() {\n        this.drawParams.length = 0;\n        this._nativeObj.clearRenderParams();\n    }\n    set bufferState(value) {\n        this._bufferState = value;\n        this._nativeObj.setBufferState(value ? value._nativeObj : null);\n    }\n    get bufferState() {\n        return this._bufferState;\n    }\n    set mode(value) {\n        this._nativeObj.mode = value;\n    }\n    get mode() {\n        return this._nativeObj.mode;\n    }\n    set drawType(value) {\n        this._nativeObj.drawType = value;\n    }\n    get drawType() {\n        return this._nativeObj.drawType;\n    }\n    set instanceCount(value) {\n        this._nativeObj.instanceCount = value;\n    }\n    get instanceCount() {\n        return this._nativeObj.instanceCount;\n    }\n    set indexFormat(value) {\n        this._nativeObj.indexFormat = value;\n    }\n    get indexFormat() {\n        return this._nativeObj.indexFormat;\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\nimport { ShaderData } from \"../../DriverDesign/RenderDevice/ShaderData\";\nimport { RTDefineDatas } from \"../../RenderModuleData/RuntimeModuleData/RTDefineDatas\";\nexport class GLESShaderData extends ShaderData {\n    constructor(ownerResource = null) {\n        super(ownerResource);\n        this._defineDatas = new RTDefineDatas();\n        this._nativeObj = new window.conchGLESShaderData(this._defineDatas._nativeObj);\n        this._textureData = {};\n        this._bufferData = {};\n    }\n    getDefineData() {\n        return this._defineDatas;\n    }\n    getData() {\n    }\n    clearData() {\n        this._nativeObj.clearData();\n    }\n    addDefine(define) {\n        this._defineDatas.add(define);\n    }\n    addDefines(define) {\n        this._defineDatas.addDefineDatas(define);\n    }\n    removeDefine(define) {\n        this._defineDatas.remove(define);\n    }\n    hasDefine(define) {\n        return this._defineDatas.has(define);\n    }\n    clearDefine() {\n        this._defineDatas.clear();\n    }\n    getBool(index) {\n        return this._nativeObj.getBool(index);\n    }\n    setBool(index, value) {\n        this._nativeObj.setBool(index, value);\n    }\n    getInt(index) {\n        return this._nativeObj.getInt(index);\n    }\n    setInt(index, value) {\n        this._nativeObj.setInt(index, value);\n    }\n    getNumber(index) {\n        return this._nativeObj.getNumber(index);\n    }\n    setNumber(index, value) {\n        this._nativeObj.setNumber(index, value);\n    }\n    getVector2(index) {\n        let value = this._nativeObj.getVector2(index);\n        if (value == null) {\n            return value;\n        }\n        else {\n            let _tempVector2 = new Vector2();\n            _tempVector2.x = value.x;\n            _tempVector2.y = value.y;\n            return _tempVector2;\n        }\n    }\n    setVector2(index, value) {\n        this._nativeObj.setVector2(index, value);\n    }\n    getVector3(index) {\n        let value = this._nativeObj.getVector3(index);\n        if (value == null) {\n            return value;\n        }\n        else {\n            let _tempVector3 = new Vector3();\n            _tempVector3.x = value.x;\n            _tempVector3.y = value.y;\n            _tempVector3.z = value.z;\n            return _tempVector3;\n        }\n    }\n    setVector3(index, value) {\n        this._nativeObj.setVector3(index, value);\n    }\n    getVector(index) {\n        let value = this._nativeObj.getVector(index);\n        let _tempVector = new Vector4();\n        _tempVector.x = value.x;\n        _tempVector.y = value.y;\n        _tempVector.z = value.z;\n        _tempVector.w = value.w;\n        return _tempVector;\n    }\n    setVector(index, value) {\n        this._nativeObj.setVector(index, value);\n    }\n    getColor(index) {\n        let value = this._nativeObj.getColor(index);\n        if (value == null) {\n            return value;\n        }\n        else {\n            let _tempColor = new Color();\n            _tempColor.r = value.r;\n            _tempColor.g = value.g;\n            _tempColor.b = value.b;\n            _tempColor.a = value.a;\n            return _tempColor;\n        }\n    }\n    setColor(index, value) {\n        if (!value)\n            return;\n        this._nativeObj.setColor(index, value);\n    }\n    getMatrix4x4(index) {\n        let value = this._nativeObj.getMatrix4x4(index);\n        if (value == null) {\n            return value;\n        }\n        else {\n            let _tempMatrix4x4 = new Matrix4x4();\n            _tempMatrix4x4.elements.set(value.elements);\n            return _tempMatrix4x4;\n        }\n    }\n    setMatrix4x4(index, value) {\n        this._nativeObj.setMatrix4x4(index, value);\n    }\n    getMatrix3x3(index) {\n        let value = this._nativeObj.getMatrix3x3(index);\n        if (value == null) {\n            return value;\n        }\n        else {\n            let _tempMatrix3x3 = new Matrix3x3();\n            _tempMatrix3x3.elements.set(value.elements);\n            return _tempMatrix3x3;\n        }\n    }\n    setMatrix3x3(index, value) {\n        this._nativeObj.setMatrix3x3(index, value);\n    }\n    getBuffer(index) {\n        return null;\n    }\n    setBuffer(index, value) {\n        this._bufferData[index] = value;\n        this._nativeObj.setBuffer(index, value);\n    }\n    setTexture(index, value) {\n        var lastValue = this._textureData[index];\n        if (value && value.bitmap)\n            value = value.bitmap;\n        this._textureData[index] = value;\n        if (value && value._texture) {\n            this._setInternalTexture(index, value._texture._nativeObj);\n        }\n        lastValue && lastValue._removeReference();\n        value && value._addReference();\n    }\n    _setInternalTexture(index, value) {\n        this._nativeObj._setInternalTexture(index, value);\n    }\n    getTexture(index) {\n        return this._textureData[index];\n    }\n    cloneTo(destObject) {\n        this._nativeObj.cloneTo(destObject._nativeObj);\n        var dest = destObject;\n        var destData = dest._textureData;\n        for (var k in this._textureData) {\n            var value = this._textureData[k];\n            if (value != null) {\n                if (value instanceof BaseTexture) {\n                    destData[k] = value;\n                    value._addReference();\n                }\n            }\n        }\n    }\n    clone() {\n        var dest = new GLESShaderData();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy() {\n        this._nativeObj.destroy();\n        this._nativeObj = null;\n    }\n}\n","import { Config } from \"../../../../Config\";\nimport { BufferTargetType } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { GLESShaderInstance } from \"./GLESShaderInstance\";\nimport { GLESBufferState } from \"./GLESBufferState\";\nimport { GLESIndexBuffer } from \"./GLESIndexBuffer\";\nimport { GLESRenderGeometryElement } from \"./GLESRenderGeometryElement\";\nimport { GLESVertexBuffer } from \"./GLESVertexBuffer\";\nimport { GLESShaderData } from \"./GLESShaderData\";\nimport { GLESCommandUniformMap } from \"./GLESCommandUniformMap\";\nimport { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { GLESEngine, GLESMode } from \"./GLESEngine\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nexport class GLESRenderDeviceFactory {\n    constructor() {\n        this.globalBlockMap = {};\n    }\n    createShaderData(ownerResource) {\n        return new GLESShaderData(ownerResource);\n    }\n    createGlobalUniformMap(blockName) {\n        let comMap = this.globalBlockMap[blockName];\n        if (!comMap)\n            comMap = this.globalBlockMap[blockName] = new GLESCommandUniformMap(blockName);\n        ;\n        return comMap;\n    }\n    createShaderInstance(shaderProcessInfo, shaderPass) {\n        let shaderIns = new GLESShaderInstance();\n        shaderIns._create(shaderProcessInfo, shaderPass);\n        return shaderIns;\n    }\n    createIndexBuffer(bufferUsage) {\n        return new GLESIndexBuffer(BufferTargetType.ELEMENT_ARRAY_BUFFER, bufferUsage);\n    }\n    createVertexBuffer(bufferUsageType) {\n        return new GLESVertexBuffer(BufferTargetType.ARRAY_BUFFER, bufferUsageType);\n    }\n    createBufferState() {\n        return new GLESBufferState();\n    }\n    createRenderGeometryElement(mode, drawType) {\n        return new GLESRenderGeometryElement(mode, drawType);\n    }\n    createEngine(config, canvas) {\n        let engine;\n        let glConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\n        const webglMode = Config.useWebGL2 ? GLESMode.Auto : GLESMode.WebGL1;\n        engine = new GLESEngine(glConfig, webglMode);\n        engine.initRenderEngine(canvas.source);\n        new LayaGL();\n        LayaGL.renderEngine = engine;\n        LayaGL.textureContext = engine.getTextureContext();\n        Laya.addAfterInitCallback(this.afterInit);\n        return Promise.resolve();\n    }\n    afterInit() {\n        GLESRenderDeviceFactory._setVertexDec(VertexMesh.instanceWorldMatrixDeclaration, \"instanceWorldMatrixDeclaration\");\n        GLESRenderDeviceFactory._setVertexDec(VertexMesh.instanceLightMapScaleOffsetDeclaration, \"instanceLightMapScaleOffsetDeclaration\");\n        GLESRenderDeviceFactory._setVertexDec(VertexMesh.instanceSimpleAnimatorDeclaration, \"instanceSimpleAnimatorDeclaration\");\n    }\n    static _setVertexDec(value, regName) {\n        let shaderValues = value._shaderValues;\n        for (var k in shaderValues) {\n            LayaGL.renderEngine._nativeObj.regGlobalVertexDeclaration(regName, parseInt(k), shaderValues[k]);\n        }\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.renderDeviceFactory)\n        LayaGL.renderDeviceFactory = new GLESRenderDeviceFactory();\n});\n","export class CommonMemoryAllocater {\n    static creatBlock(size) {\n        const buffer = new ArrayBuffer(size);\n        return buffer;\n    }\n    static freeMemoryBlock(buffer) {\n        buffer = null;\n    }\n}\n","import { CommonMemoryAllocater } from \"./CommonMemoryAllocater\";\nexport class NativeMemory {\n    constructor(size, shared) {\n        if (shared) {\n            if (size > NativeMemory._sharedBuffer.byteLength) {\n                throw new Error(\"NativeMemory:shared buffer not enough\");\n            }\n            this._buffer = NativeMemory._sharedBuffer;\n        }\n        else {\n            this._buffer = CommonMemoryAllocater.creatBlock(size);\n        }\n        this._idata = new Int32Array(this._buffer);\n        this._uidata = new Uint32Array(this._buffer);\n        this._fdata = new Float32Array(this._buffer);\n        this._f64data = new Float64Array(this._buffer);\n        this._byteArray = new Uint8Array(this._buffer);\n        this._byteLength = size;\n    }\n    get float32Array() {\n        return this._fdata;\n    }\n    get float64Array() {\n        return this._f64data;\n    }\n    get uint8Array() {\n        return this._byteArray;\n    }\n    get int32Array() {\n        return this._idata;\n    }\n    get Uint32Array() {\n        return this._uidata;\n    }\n    destroy() {\n        if (this._destroyed)\n            return;\n        this.clear();\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\n        this._destroyed = true;\n    }\n    clear() {\n        this._idata = null;\n        this._fdata = null;\n        this._byteArray = null;\n    }\n}\nNativeMemory.NativeSourceID = 0;\nNativeMemory._sharedBuffer = new ArrayBuffer(256);\n","export class RTSubShader {\n    constructor() {\n        this._nativeObj = new window.conchRTSubShader();\n    }\n    get shaderName() {\n        return this._shaderName;\n    }\n    set shaderName(value) {\n        this._shaderName = value;\n        this._nativeObj.shaderName = value;\n    }\n    setUniformMap(_uniformMap) {\n        _uniformMap.forEach((value, key) => {\n            this._nativeObj.addUnifromProperty(value.id, value.propertyName, value.uniformtype, value.arrayLength);\n        });\n    }\n    get enableInstance() {\n        return this._nativeObj.enableInstance;\n    }\n    set enableInstance(value) {\n        this._nativeObj.enableInstance = value;\n    }\n    destroy() {\n        this._nativeObj.destroy();\n    }\n    addShaderPass(pass) {\n        this._nativeObj.addShaderPass(pass._nativeObj);\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { RTDefineDatas } from \"./RTDefineDatas\";\nimport { RTRenderState } from \"./RTRenderState\";\nimport { RTShaderPass } from \"./RTShaderPass\";\nimport { RTSubShader } from \"./RTSubShader\";\nexport class RTUintRenderModuleDataFactory {\n    createSubShader() {\n        return new RTSubShader();\n    }\n    createShaderPass(pass) {\n        return new RTShaderPass(pass);\n    }\n    createRenderState() {\n        return new RTRenderState();\n    }\n    createDefineDatas() {\n        return new RTDefineDatas();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.unitRenderModuleDataFactory)\n        LayaGL.unitRenderModuleDataFactory = new RTUintRenderModuleDataFactory();\n});\n"],"names":["SetRendertarget2DCMD","RenderCMDType","Color","Draw2DElementCMD","Blit2DQuadCMD","Vector4","SetRenderDataCMD","ShaderDataType","Matrix4x4","Vector2","Vector3","SetShaderDefineCMD","Shader3D","LayaGL","BufferTargetType","BufferUsage","VertexDeclaration","VertexElement","VertexElementFormat","MeshTopology","DrawType","ShaderFeatureType","SubShader","RenderState","Laya","CommandUniformMap","ShaderDefine","RenderTargetFormat","GLESMode","Config","RenderCapable","NotImplementedError","GLSLCodeGenerator","FastSinglelist","ShaderData","Matrix3x3","BaseTexture","VertexMesh"],"mappings":"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"}