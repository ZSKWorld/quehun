{"version":3,"file":"laya.particle.js","sources":["../../bin/tsc/layaAir/laya/particle/d2/module/Main2DModule.js","../../bin/tsc/layaAir/laya/particle/d2/module/Rotation2DOverLifetimeModule.js","../../bin/tsc/layaAir/laya/particle/d2/module/shapes/Base2DShape.js","../../bin/tsc/layaAir/laya/particle/d2/module/shapes/FanShape.js","../../bin/tsc/layaAir/laya/particle/d2/module/Shape2DModule.js","../../bin/tsc/layaAir/laya/particle/d2/module/shapes/Box2DShape.js","../../bin/tsc/layaAir/laya/particle/d2/module/shapes/Circle2DShape.js","../../bin/tsc/layaAir/laya/particle/d2/module/shapes/SemicircleShap.js","../../bin/tsc/layaAir/laya/particle/d2/module/Size2DOverLifetimeModule.js","../../bin/tsc/layaAir/laya/particle/d2/module/Velocity2DOverLifetimeModule.js","../../bin/tsc/layaAir/laya/particle/d2/Particle2DGeomotry.js","../../bin/tsc/layaAir/laya/particle/d2/Particle2DShader.js","../../bin/tsc/layaAir/laya/particle/d2/Particle2DVertexMesh.js","../../bin/tsc/layaAir/laya/particle/d2/ShurikenParticle2DSystem.js","../../bin/tsc/layaAir/laya/particle/d2/ShurikenParticle2DRenderer.js","../../bin/tsc/layaAir/laya/particle/d2/ModuleDef.js"],"sourcesContent":["import { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { ParticleMinMaxCurve, ParticleMinMaxCurveMode } from \"../../common/ParticleMinMaxCurve\";\nimport { ParticleMinMaxGradient, ParticleMinMaxGradientMode } from \"../../common/ParticleMinMaxGradient\";\nexport var Particle2DSimulationSpace;\n(function (Particle2DSimulationSpace) {\n    Particle2DSimulationSpace[Particle2DSimulationSpace[\"Local\"] = 0] = \"Local\";\n    Particle2DSimulationSpace[Particle2DSimulationSpace[\"World\"] = 1] = \"World\";\n})(Particle2DSimulationSpace || (Particle2DSimulationSpace = {}));\nexport var Particle2DScalingMode;\n(function (Particle2DScalingMode) {\n    Particle2DScalingMode[Particle2DScalingMode[\"Hierarchy\"] = 0] = \"Hierarchy\";\n    Particle2DScalingMode[Particle2DScalingMode[\"Local\"] = 1] = \"Local\";\n})(Particle2DScalingMode || (Particle2DScalingMode = {}));\nexport class Main2DModule {\n    get startSizeX() {\n        return this._startSizeX;\n    }\n    set startSizeX(value) {\n        this._startSizeX = value;\n        this._startSizeY.mode = value.mode;\n    }\n    get startSizeY() {\n        return this._startSizeY;\n    }\n    set startSizeY(value) {\n        this._startSizeY = value;\n        this._startSizeX.mode = value.mode;\n    }\n    get startSize() {\n        return this.startSizeX;\n    }\n    set startSize(value) {\n        this.startSizeX = value;\n    }\n    get maxParticles() {\n        return this._maxParticles;\n    }\n    set maxParticles(value) {\n        this._maxParticles = Math.floor(value);\n    }\n    constructor() {\n        this.duration = 5;\n        this.looping = true;\n        this.playOnAwake = true;\n        this.startDelay = new ParticleMinMaxCurve();\n        this.startLifetime = new ParticleMinMaxCurve();\n        this.startSpeed = new ParticleMinMaxCurve();\n        this.startSize2D = false;\n        this._startSizeX = new ParticleMinMaxCurve();\n        this._startSizeY = new ParticleMinMaxCurve();\n        this.startRotation = new ParticleMinMaxCurve();\n        this.startColor = new ParticleMinMaxGradient();\n        this._gravity = new Vector2();\n        this.gravityModifier = 0;\n        this._spriteRotAndScale = new Vector4();\n        this._spriteTranslateAndSpace = new Vector3();\n        this.simulationSpace = Particle2DSimulationSpace.Local;\n        this.simulationSpeed = 1;\n        this.scaleMode = Particle2DScalingMode.Local;\n        this._maxParticles = 100;\n        this.autoRandomSeed = true;\n        this.randomSeed = 0;\n        this.unitPixels = 50;\n        this.startDelay.mode = ParticleMinMaxCurveMode.Constant;\n        this.startDelay.constant = 0;\n        this.startLifetime.mode = ParticleMinMaxCurveMode.Constant;\n        this.startLifetime.constant = 5;\n        this.startSpeed.mode = ParticleMinMaxCurveMode.Constant;\n        this.startSpeed.constant = 5;\n        this.startSizeX.mode = ParticleMinMaxCurveMode.Constant;\n        this.startSizeX.constant = 0.5;\n        this.startSizeY.mode = ParticleMinMaxCurveMode.Constant;\n        this.startSizeY.constant = 0.5;\n        this.startRotation.mode = ParticleMinMaxCurveMode.Constant;\n        this.startRotation.constant = 0;\n        this.startColor.mode = ParticleMinMaxGradientMode.Color;\n        this.startColor.color.setValue(1, 1, 1, 1);\n    }\n    cloneTo(destObject) {\n        destObject.duration = this.duration;\n        destObject.looping = this.looping;\n        destObject.playOnAwake = this.playOnAwake;\n        this.startDelay.cloneTo(destObject.startDelay);\n        this.startLifetime.cloneTo(destObject.startLifetime);\n        this.startSpeed.cloneTo(destObject.startSpeed);\n        destObject.startSize2D = this.startSize2D;\n        this.startSizeX.cloneTo(destObject.startSizeX);\n        this.startSizeY.cloneTo(destObject.startSizeY);\n        destObject.startRotation = this.startRotation;\n        this.startColor.cloneTo(destObject.startColor);\n        destObject.gravityModifier = this.gravityModifier;\n        destObject.simulationSpace = this.simulationSpace;\n        destObject.simulationSpeed = this.simulationSpeed;\n        destObject.scaleMode = this.scaleMode;\n        destObject.maxParticles = this.maxParticles;\n        destObject.autoRandomSeed = this.autoRandomSeed;\n        destObject.randomSeed = this.randomSeed;\n        destObject.unitPixels = this.unitPixels;\n    }\n    clone() {\n        let dest = new Main2DModule();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { ParticleMinMaxCurve, ParticleMinMaxCurveMode } from \"../../common/ParticleMinMaxCurve\";\nexport class Rotation2DOverLifetimeModule {\n    constructor() {\n        this.enable = true;\n        this.angularVelocity = new ParticleMinMaxCurve();\n        this.angularVelocity.mode = ParticleMinMaxCurveMode.Constant;\n        this.angularVelocity.constantMin = 45;\n        this.angularVelocity.constantMax = 45;\n        this.angularVelocity.curveMin.add(0, 45);\n        this.angularVelocity.curveMin.add(1, 45);\n        this.angularVelocity.curveMax.add(0, 45);\n        this.angularVelocity.curveMax.add(1, 45);\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n        this.angularVelocity.cloneTo(destObject.angularVelocity);\n    }\n    clone() {\n        let dest = new Rotation2DOverLifetimeModule();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { Vector4 } from \"../../../../maths/Vector4\";\nexport var Base2DShapeType;\n(function (Base2DShapeType) {\n    Base2DShapeType[Base2DShapeType[\"Fan\"] = 0] = \"Fan\";\n    Base2DShapeType[Base2DShapeType[\"Circle\"] = 1] = \"Circle\";\n    Base2DShapeType[Base2DShapeType[\"Box\"] = 2] = \"Box\";\n    Base2DShapeType[Base2DShapeType[\"Semicircle\"] = 3] = \"Semicircle\";\n    Base2DShapeType[Base2DShapeType[\"None\"] = 4] = \"None\";\n})(Base2DShapeType || (Base2DShapeType = {}));\nexport class Base2DShape {\n    constructor(type) {\n        this.type = Base2DShapeType.None;\n        this.posAndDir = new Vector4();\n        this.type = type;\n    }\n}\n","import { Base2DShape, Base2DShapeType } from \"./Base2DShape\";\nconst Angle2Radian = Math.PI / 180;\nexport var FanShapeEmitType;\n(function (FanShapeEmitType) {\n    FanShapeEmitType[FanShapeEmitType[\"Base\"] = 0] = \"Base\";\n    FanShapeEmitType[FanShapeEmitType[\"Area\"] = 1] = \"Area\";\n})(FanShapeEmitType || (FanShapeEmitType = {}));\nexport class FanShape extends Base2DShape {\n    constructor() {\n        super(Base2DShapeType.Fan);\n        this.angle = 25;\n        this.radius = 1;\n        this.emitType = FanShapeEmitType.Base;\n        this.length = 5;\n    }\n    getPositionAndDirection() {\n        let radius = this.radius;\n        let randomRadius = (Math.random() * 2 - 1);\n        let radians = this.angle * randomRadius * Angle2Radian;\n        let xDir = Math.sin(radians);\n        let yDir = Math.cos(radians);\n        let y = 0;\n        let x = randomRadius * radius;\n        switch (this.emitType) {\n            case FanShapeEmitType.Area:\n                {\n                    y = this.length * Math.random();\n                    x += y * Math.tan(radians);\n                    break;\n                }\n            case FanShapeEmitType.Base:\n            default:\n                break;\n        }\n        let pAndd = this.posAndDir;\n        pAndd.setValue(x, y, xDir, yDir);\n        return pAndd;\n    }\n    cloneTo(destObject) {\n        destObject.angle = this.angle;\n        destObject.radius = this.radius;\n        destObject.emitType = this.emitType;\n        destObject.length = this.length;\n    }\n    clone() {\n        let destObject = new FanShape();\n        this.cloneTo(destObject);\n        return destObject;\n    }\n}\n","import { FanShape } from \"./shapes/FanShape\";\nexport class Shape2DModule {\n    constructor() {\n        this.enable = true;\n        this.shape = new FanShape();\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n        this.shape.cloneTo(destObject.shape);\n    }\n    clone() {\n        let destObject = new Shape2DModule();\n        this.cloneTo(destObject);\n        return destObject;\n    }\n}\n","import { Vector2 } from \"../../../../maths/Vector2\";\nimport { Base2DShape, Base2DShapeType } from \"./Base2DShape\";\nexport class Box2DShape extends Base2DShape {\n    constructor() {\n        super(Base2DShapeType.Box);\n        this.size = new Vector2(1, 1);\n        this.randomDirection = false;\n    }\n    getPositionAndDirection() {\n        let x = Math.random() * this.size.x + this.size.x * -0.5;\n        let y = Math.random() * this.size.y + this.size.y * -0.5;\n        let xDir = 0;\n        let yDir = 1;\n        if (this.randomDirection) {\n            let radians = Math.random() * Math.PI * 2;\n            xDir = Math.sin(radians);\n            yDir = Math.cos(radians);\n        }\n        this.posAndDir.setValue(x, y, xDir, yDir);\n        return this.posAndDir;\n    }\n    cloneTo(destObject) {\n        this.size.cloneTo(destObject.size);\n        destObject.randomDirection = this.randomDirection;\n    }\n    clone() {\n        let destObject = new Box2DShape();\n        this.cloneTo(destObject);\n        return destObject;\n    }\n}\n","import { Base2DShape, Base2DShapeType } from \"./Base2DShape\";\nexport class Circle2DShape extends Base2DShape {\n    constructor() {\n        super(Base2DShapeType.Circle);\n        this.radius = 1;\n        this.emitFromEdge = false;\n        this.randomDirction = false;\n    }\n    getPositionAndDirection() {\n        let radians = Math.random() * Math.PI * 2;\n        let xDir = Math.sin(radians);\n        let yDir = Math.cos(radians);\n        let x = 0;\n        let y = 0;\n        if (this.emitFromEdge) {\n            x = xDir * this.radius;\n            y = yDir * this.radius;\n        }\n        else {\n            let length = Math.random() * this.radius;\n            x = xDir * length;\n            y = yDir * length;\n        }\n        if (this.randomDirction) {\n            let radians = Math.random() * Math.PI * 2;\n            xDir = Math.sin(radians);\n            yDir = Math.cos(radians);\n        }\n        this.posAndDir.setValue(x, y, xDir, yDir);\n        return this.posAndDir;\n    }\n    cloneTo(destObject) {\n        destObject.radius = this.radius;\n        destObject.emitFromEdge = this.emitFromEdge;\n        destObject.randomDirction = this.randomDirction;\n    }\n    clone() {\n        let destObject = new Circle2DShape();\n        this.cloneTo(destObject);\n        return destObject;\n    }\n}\n","import { Base2DShape, Base2DShapeType } from \"./Base2DShape\";\nexport class SemicircleShap extends Base2DShape {\n    constructor() {\n        super(Base2DShapeType.Semicircle);\n        this.radius = 1;\n        this.emitFromEdge = false;\n        this.randomDirction = false;\n    }\n    getPositionAndDirection() {\n        let radians = Math.random() * Math.PI - Math.PI * 0.5;\n        let xDir = Math.sin(radians);\n        let yDir = Math.cos(radians);\n        let x = 0;\n        let y = 0;\n        if (this.emitFromEdge) {\n            x = xDir * this.radius;\n            y = yDir * this.radius;\n        }\n        else {\n            let length = Math.random() * this.radius;\n            x = xDir * length;\n            y = yDir * length;\n        }\n        if (this.randomDirction) {\n            let radians = Math.random() * Math.PI - Math.PI * 0.5;\n            xDir = Math.sin(radians);\n            yDir = Math.cos(radians);\n        }\n        this.posAndDir.setValue(x, y, xDir, yDir);\n        return this.posAndDir;\n    }\n    cloneTo(destObject) {\n        destObject.radius = this.radius;\n        destObject.emitFromEdge = this.emitFromEdge;\n        destObject.randomDirction = this.randomDirction;\n    }\n    clone() {\n        let destObject = new SemicircleShap();\n        this.cloneTo(destObject);\n        return destObject;\n    }\n}\n","import { ParticleMinMaxCurve, ParticleMinMaxCurveMode } from \"../../common/ParticleMinMaxCurve\";\nexport class Size2DOverLifetimeModule {\n    get x() {\n        return this._x;\n    }\n    set x(value) {\n        this._x = value;\n        this._y.mode = value.mode;\n    }\n    get y() {\n        return this._y;\n    }\n    set y(value) {\n        this._y = value;\n        this._x.mode = value.mode;\n    }\n    get size() {\n        return this.x;\n    }\n    set size(value) {\n        this.x = value;\n    }\n    constructor() {\n        this.enable = true;\n        this.separateAxes = false;\n        this._x = new ParticleMinMaxCurve();\n        this._y = new ParticleMinMaxCurve();\n        this.x.mode = ParticleMinMaxCurveMode.Constant;\n        this.x.constantMin = 1;\n        this.x.constantMax = 1;\n        this.x.curveMin.add(0, 0);\n        this.x.curveMin.add(1, 1);\n        this.x.curveMax.add(0, 0);\n        this.x.curveMax.add(1, 1);\n        this.y.mode = ParticleMinMaxCurveMode.Constant;\n        this.y.constantMin = 1;\n        this.y.constantMax = 1;\n        this.y.curveMin.add(0, 0);\n        this.y.curveMin.add(1, 1);\n        this.y.curveMax.add(0, 0);\n        this.y.curveMax.add(1, 1);\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n        destObject.separateAxes = this.separateAxes;\n        this.x.cloneTo(destObject.x);\n        this.y.cloneTo(destObject.y);\n    }\n    clone() {\n        let dest = new Size2DOverLifetimeModule();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { ParticleMinMaxCurve } from \"../../common/ParticleMinMaxCurve\";\nexport var Velocity2DSimulateSpace;\n(function (Velocity2DSimulateSpace) {\n    Velocity2DSimulateSpace[Velocity2DSimulateSpace[\"Local\"] = 0] = \"Local\";\n    Velocity2DSimulateSpace[Velocity2DSimulateSpace[\"World\"] = 1] = \"World\";\n})(Velocity2DSimulateSpace || (Velocity2DSimulateSpace = {}));\nexport class Velocity2DOverLifetimeModule {\n    get x() {\n        return this._x;\n    }\n    set x(value) {\n        this._x = value;\n        this._y.mode = value.mode;\n    }\n    get y() {\n        return this._y;\n    }\n    set y(value) {\n        this._y = value;\n        this._x.mode = value.mode;\n    }\n    constructor() {\n        this.enable = true;\n        this.space = Velocity2DSimulateSpace.Local;\n        this._x = new ParticleMinMaxCurve();\n        this._y = new ParticleMinMaxCurve();\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n        destObject.space = this.space;\n        this.x.cloneTo(destObject.x);\n        this.y.cloneTo(destObject.y);\n    }\n    clone() {\n        let dest = new Velocity2DOverLifetimeModule();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nexport class Particle2DGeomotry {\n    constructor(maxParticleCount, particleDeclaration, meshDeclaration) {\n        this.maxParitcleCount = 0;\n        this.maxParitcleCount = maxParticleCount;\n        this.bufferState = LayaGL.renderDeviceFactory.createBufferState();\n        maxParticleCount += 1;\n        {\n            let vertexCount = 4 * maxParticleCount;\n            let particleBuffer = this.particleBuffer = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\n            particleBuffer.vertexDeclaration = particleDeclaration;\n            let particleFloatStride = particleDeclaration.vertexStride / 4;\n            let particleData = this.particleDatas = new Float32Array(vertexCount * particleFloatStride);\n            particleBuffer.setDataLength(particleData.byteLength);\n            let meshBuffer = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Static);\n            meshBuffer.vertexDeclaration = meshDeclaration;\n            let meshVertexCount = 4;\n            let meshIndexCount = 6;\n            let meshIndexOffset = 12;\n            let meshFloatStride = meshDeclaration.vertexStride / 4;\n            let meshData = new Float32Array(vertexCount * meshFloatStride);\n            for (let i = 0; i < maxParticleCount; i++) {\n                let offset = i * 4 * meshFloatStride;\n                let pos0 = offset;\n                meshData[pos0 + 0] = -0.5;\n                meshData[pos0 + 1] = -0.5;\n                meshData[pos0 + 2] = 0;\n                meshData[pos0 + 3] = 0;\n                let pos1 = offset + meshFloatStride;\n                meshData[pos1 + 0] = 0.5;\n                meshData[pos1 + 1] = -0.5;\n                meshData[pos1 + 2] = 1;\n                meshData[pos1 + 3] = 0;\n                let pos2 = offset + 2 * meshFloatStride;\n                meshData[pos2 + 0] = 0.5;\n                meshData[pos2 + 1] = 0.5;\n                meshData[pos2 + 2] = 1;\n                meshData[pos2 + 3] = 1;\n                let pos3 = offset + 3 * meshFloatStride;\n                meshData[pos3 + 0] = -0.5;\n                meshData[pos3 + 1] = 0.5;\n                meshData[pos3 + 2] = 0;\n                meshData[pos3 + 3] = 1;\n            }\n            meshBuffer.setDataLength(meshData.byteLength);\n            meshBuffer.setData(meshData.buffer, 0, 0, meshData.byteLength);\n            let indexBuffer = this.indexBuffer = LayaGL.renderDeviceFactory.createIndexBuffer(BufferUsage.Static);\n            let indexCount = 6 * maxParticleCount;\n            let indexFormat = vertexCount > 65535 ? IndexFormat.UInt32 : IndexFormat.UInt16;\n            let indexData;\n            if (indexFormat == IndexFormat.UInt16) {\n                indexData = new Uint16Array(indexCount);\n            }\n            else {\n                indexData = new Uint32Array(indexCount);\n            }\n            const meshIndies = [0, 1, 2, 0, 2, 3];\n            for (let i = 0; i < maxParticleCount; i++) {\n                let offset = i * 6;\n                indexData[offset + 0] = meshIndies[0] + 4 * i;\n                indexData[offset + 1] = meshIndies[1] + 4 * i;\n                indexData[offset + 2] = meshIndies[2] + 4 * i;\n                indexData[offset + 3] = meshIndies[3] + 4 * i;\n                indexData[offset + 4] = meshIndies[4] + 4 * i;\n                indexData[offset + 5] = meshIndies[5] + 4 * i;\n            }\n            indexBuffer.indexCount = indexCount;\n            indexBuffer.indexType = indexFormat;\n            indexBuffer._setIndexDataLength(indexData.byteLength);\n            indexBuffer._setIndexData(indexData, 0);\n            this.bufferState.applyState([meshBuffer, particleBuffer], indexBuffer);\n        }\n        {\n            let geometry = LayaGL.renderDeviceFactory.createRenderGeometryElement(MeshTopology.Triangles, DrawType.DrawElement);\n            geometry.indexFormat = this.indexBuffer.indexType;\n            geometry.bufferState = this.bufferState;\n            this.geometry = geometry;\n        }\n    }\n    destroy() {\n        this.geometry.destroy();\n        this.bufferState.destroy();\n    }\n}\n","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nexport class Particle2DShader {\n    static init() {\n        const uniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"_Particle2D\");\n        const addUniform = (name, type) => {\n            let index = Shader3D.propertyNameToID(name);\n            uniformMap.addShaderUniform(index, name, type);\n            return index;\n        };\n        Particle2DShader.CurrentTime = addUniform(\"u_CurrentTime\", ShaderDataType.Float);\n        Particle2DShader.UnitPixels = addUniform(\"u_UnitPixels\", ShaderDataType.Float);\n        {\n            Particle2DShader.ColorOverLifetimeDef = Shader3D.getDefineByName(\"COLOROVERLIFETIME\");\n            Particle2DShader.ColorOverLifetimeRandom = Shader3D.getDefineByName(\"COLOROVERLIFETIME_RANDOM\");\n            Particle2DShader.ColorOVerLifetimeColorKey_8 = Shader3D.getDefineByName(\"COLOROVERLIFETIME_COLORKEY_8\");\n            Particle2DShader.GradientRGB = addUniform(\"u_GradientRGB\", ShaderDataType.Buffer);\n            Particle2DShader.GradientAlpha = addUniform(\"u_GradientAlpha\", ShaderDataType.Buffer);\n            Particle2DShader.GradientTimeRange = addUniform(\"u_GradientTimeRange\", ShaderDataType.Vector4);\n            Particle2DShader.GradientMaxRGB = addUniform(\"u_GradientMaxRGB\", ShaderDataType.Buffer);\n            Particle2DShader.GradientMaxAlpha = addUniform(\"u_GradientMaxAlpha\", ShaderDataType.Buffer);\n            Particle2DShader.GradientMaxTimeRange = addUniform(\"u_GradientMaxTimeRange\", ShaderDataType.Vector4);\n        }\n        {\n            Particle2DShader.VelocityOverLifetimeDef = Shader3D.getDefineByName(\"VELOCITYOVERLIFETIME\");\n            Particle2DShader.VelocityCurveMinX = addUniform(\"u_VelocityCurveMinX\", ShaderDataType.Buffer);\n            Particle2DShader.VelocityCurveMinY = addUniform(\"u_VelocityCurveMinY\", ShaderDataType.Buffer);\n            Particle2DShader.VelocityCurveMaxX = addUniform(\"u_VelocityCurveMaxX\", ShaderDataType.Buffer);\n            Particle2DShader.VelocityCurveMaxY = addUniform(\"u_VelocityCurveMaxY\", ShaderDataType.Buffer);\n            Particle2DShader.VelocityOverLifetimeSpace = addUniform(\"u_VelocityOverLifetimeSpace\", ShaderDataType.Float);\n        }\n        {\n            Particle2DShader.SizeOverLifetimeDef = Shader3D.getDefineByName(\"SIZEOVERLIFETIME\");\n            Particle2DShader.SizeCurveMinX = addUniform(\"u_SizeCurveMinX\", ShaderDataType.Buffer);\n            Particle2DShader.SizeCurveMinY = addUniform(\"u_SizeCurveMinY\", ShaderDataType.Buffer);\n            Particle2DShader.SizeCurveMinTimeRange = addUniform(\"u_SizeCurveMinTimeRange\", ShaderDataType.Vector4);\n            Particle2DShader.SizeCurveMaxX = addUniform(\"u_SizeCurveMaxX\", ShaderDataType.Buffer);\n            Particle2DShader.SizeCurveMaxY = addUniform(\"u_SizeCurveMaxY\", ShaderDataType.Buffer);\n            Particle2DShader.SizeCurveMaxTimeRange = addUniform(\"u_SizeCurveMaxTimeRange\", ShaderDataType.Vector4);\n        }\n        {\n            Particle2DShader.RotationOverLifetimeDef = Shader3D.getDefineByName(\"ROTATIONOVERLIFETIME\");\n            Particle2DShader.RotationCurveMin = addUniform(\"u_RotationCurveMin\", ShaderDataType.Buffer);\n            Particle2DShader.RotationCurveMax = addUniform(\"u_RotationCurveMax\", ShaderDataType.Buffer);\n        }\n        {\n            Particle2DShader.TextureSheetAnimationDef = Shader3D.getDefineByName(\"TEXTURESHEETANIMATION\");\n            Particle2DShader.TextureSheetFrameData = addUniform(\"u_TextureSheetFrameData\", ShaderDataType.Vector4);\n            Particle2DShader.TextureSheetFrame = addUniform(\"u_TextureSheetFrame\", ShaderDataType.Buffer);\n            Particle2DShader.TextureSheetFrameMax = addUniform(\"u_TextureSheetFrameMax\", ShaderDataType.Buffer);\n            Particle2DShader.TextureSheetFrameRange = addUniform(\"u_TextureSheetFrameRange\", ShaderDataType.Vector4);\n        }\n    }\n}\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { ParticleInfo } from \"../common/ParticlePool\";\nexport var Particle2DVertex;\n(function (Particle2DVertex) {\n    Particle2DVertex[Particle2DVertex[\"PositionAndUV\"] = 0] = \"PositionAndUV\";\n    Particle2DVertex[Particle2DVertex[\"SheetFrameData\"] = 7] = \"SheetFrameData\";\n    Particle2DVertex[Particle2DVertex[\"DirectionAndPosition\"] = 8] = \"DirectionAndPosition\";\n    Particle2DVertex[Particle2DVertex[\"SizeAndTimes\"] = 9] = \"SizeAndTimes\";\n    Particle2DVertex[Particle2DVertex[\"SpeedSpaceAndRot\"] = 10] = \"SpeedSpaceAndRot\";\n    Particle2DVertex[Particle2DVertex[\"StartColor\"] = 11] = \"StartColor\";\n    Particle2DVertex[Particle2DVertex[\"RotationAndScale\"] = 12] = \"RotationAndScale\";\n    Particle2DVertex[Particle2DVertex[\"TransAndGravity\"] = 13] = \"TransAndGravity\";\n    Particle2DVertex[Particle2DVertex[\"Random0\"] = 14] = \"Random0\";\n    Particle2DVertex[Particle2DVertex[\"Random1\"] = 15] = \"Random1\";\n})(Particle2DVertex || (Particle2DVertex = {}));\nclass Particle2D {\n    constructor() {\n        let particleStride = Particle2DVertexMesh.Particle2DDeclaration.vertexStride;\n        let buffer = new ArrayBuffer(particleStride);\n        this.data = new Float32Array(buffer);\n    }\n    setDirection(x, y) {\n        this.data[0] = x;\n        this.data[1] = y;\n    }\n    setPosition(x, y) {\n        this.data[2] = x;\n        this.data[3] = y;\n    }\n    setSize(x, y) {\n        this.data[4] = x;\n        this.data[5] = y;\n    }\n    setEmitTime(emitTime) {\n        this.data[6] = emitTime;\n    }\n    setLifetime(lifetime) {\n        this.data[7] = lifetime;\n    }\n    setSpeed(speed) {\n        this.data[8] = speed;\n    }\n    setSimulationSpace(space) {\n        this.data[9] = space;\n    }\n    setRot(cos, sin) {\n        this.data[10] = cos;\n        this.data[11] = sin;\n    }\n    setColor(r, g, b, a) {\n        this.data[12] = r;\n        this.data[13] = g;\n        this.data[14] = b;\n        this.data[15] = a;\n    }\n    setSpriteRotAndScale(x, y, z, w) {\n        this.data[16] = x;\n        this.data[17] = y;\n        this.data[18] = z;\n        this.data[19] = w;\n    }\n    setSpriteTrans(x, y) {\n        this.data[20] = x;\n        this.data[21] = y;\n    }\n    setGravity(gravityX, gravityY) {\n        this.data[22] = gravityX;\n        this.data[23] = gravityY;\n    }\n    setRandom(x, y, z, w) {\n        this.data[24] = x;\n        this.data[25] = y;\n        this.data[26] = z;\n        this.data[27] = w;\n    }\n    setRandom1(x, y, z, w) {\n        this.data[28] = x;\n        this.data[29] = y;\n        this.data[30] = z;\n        this.data[31] = w;\n    }\n    setSheetFrameData(x, y, z, w) {\n        this.data[32] = x;\n        this.data[33] = y;\n        this.data[34] = z;\n        this.data[35] = w;\n    }\n}\nexport class Particle2DVertexMesh {\n    static init() {\n        let particle2DElements = [\n            {\n                usage: Particle2DVertex.DirectionAndPosition,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.SizeAndTimes,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.SpeedSpaceAndRot,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.StartColor,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.RotationAndScale,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.TransAndGravity,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.Random0,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.Random1,\n                format: VertexElementFormat.Vector4\n            },\n            {\n                usage: Particle2DVertex.SheetFrameData,\n                format: VertexElementFormat.Vector4\n            }\n        ];\n        Particle2DVertexMesh.Particle2DDeclaration = createVertexVertexDeclaration(particle2DElements);\n        let particle2DMeshElements = [\n            {\n                usage: Particle2DVertex.PositionAndUV,\n                format: VertexElementFormat.Vector4\n            },\n        ];\n        Particle2DVertexMesh.Particle2DMeshDeclaration = createVertexVertexDeclaration(particle2DMeshElements);\n        Particle2DVertexMesh.TempParticle2D = new Particle2D();\n        let particleInfo = Particle2DVertexMesh.Particle2DInfo = new ParticleInfo();\n        let declaration = Particle2DVertexMesh.Particle2DDeclaration;\n        particleInfo.timeIndex = declaration.getVertexElementByUsage(Particle2DVertex.SizeAndTimes).offset / 4 + 2;\n        particleInfo.lifetimeIndex = declaration.getVertexElementByUsage(Particle2DVertex.SizeAndTimes).offset / 4 + 3;\n    }\n}\nfunction getVertexFormatStride(format) {\n    switch (format) {\n        case VertexElementFormat.Vector4:\n            return 16;\n        case VertexElementFormat.Vector3:\n            return 12;\n        case VertexElementFormat.Vector2:\n            return 8;\n        default:\n            throw new Error(\"Unkonw vertex format.\");\n    }\n}\nfunction createVertexVertexDeclaration(vertexElements) {\n    let stride = 0;\n    let elements = [];\n    for (let i = 0; i < vertexElements.length; i++) {\n        let element = vertexElements[i];\n        let offset = stride;\n        let elementStride = getVertexFormatStride(element.format);\n        if (elementStride > 0) {\n            elements.push(new VertexElement(offset, element.format, element.usage));\n            stride += elementStride;\n        }\n    }\n    return new VertexDeclaration(stride, elements);\n}\n","import { Point } from \"../../maths/Point\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { EmissionModule } from \"../common/module/EmissionModule\";\nimport { ParticleControler } from \"../common/ParticleController\";\nimport { ParticleMinMaxCurveMode } from \"../common/ParticleMinMaxCurve\";\nimport { ParticleMinMaxGradientMode } from \"../common/ParticleMinMaxGradient\";\nimport { Main2DModule } from \"./module/Main2DModule\";\nimport { Particle2DVertexMesh } from \"./Particle2DVertexMesh\";\nconst _globalPoint = new Point();\nexport var Particle2DSystemDirtyFlagBits;\n(function (Particle2DSystemDirtyFlagBits) {\n    Particle2DSystemDirtyFlagBits[Particle2DSystemDirtyFlagBits[\"Velocity2DOverLifetimeBit\"] = 1] = \"Velocity2DOverLifetimeBit\";\n    Particle2DSystemDirtyFlagBits[Particle2DSystemDirtyFlagBits[\"ColorOverLifetimeBit\"] = 2] = \"ColorOverLifetimeBit\";\n    Particle2DSystemDirtyFlagBits[Particle2DSystemDirtyFlagBits[\"Size2DOverLifetimeBit\"] = 4] = \"Size2DOverLifetimeBit\";\n    Particle2DSystemDirtyFlagBits[Particle2DSystemDirtyFlagBits[\"Rotation2DOverLifetimeBit\"] = 8] = \"Rotation2DOverLifetimeBit\";\n    Particle2DSystemDirtyFlagBits[Particle2DSystemDirtyFlagBits[\"TextureSheetAnimationBit\"] = 16] = \"TextureSheetAnimationBit\";\n})(Particle2DSystemDirtyFlagBits || (Particle2DSystemDirtyFlagBits = {}));\nexport class ShurikenParticle2DSystem extends ParticleControler {\n    get main() {\n        return this._main;\n    }\n    get emission() {\n        return this._emission;\n    }\n    get velocity2DOverLifetime() {\n        return this._velocity2DOverLifetime;\n    }\n    set velocity2DOverLifetime(value) {\n        this._velocity2DOverLifetime = value;\n        this._dirtyFlags |= Particle2DSystemDirtyFlagBits.Velocity2DOverLifetimeBit;\n    }\n    get colorOverLifetime() {\n        return this._colorOverLifetime;\n    }\n    set colorOverLifetime(value) {\n        this._colorOverLifetime = value;\n        this._dirtyFlags |= Particle2DSystemDirtyFlagBits.ColorOverLifetimeBit;\n    }\n    get size2DOverLifetime() {\n        return this._size2DOverLifetime;\n    }\n    set size2DOverLifetime(value) {\n        this._size2DOverLifetime = value;\n        this._dirtyFlags |= Particle2DSystemDirtyFlagBits.Size2DOverLifetimeBit;\n    }\n    get rotation2DOverLifetime() {\n        return this._rotation2DOverLifetime;\n    }\n    set rotation2DOverLifetime(value) {\n        this._rotation2DOverLifetime = value;\n        this._dirtyFlags |= Particle2DSystemDirtyFlagBits.Rotation2DOverLifetimeBit;\n    }\n    get textureSheetAnimation() {\n        return this._textureSheetAnimation;\n    }\n    set textureSheetAnimation(value) {\n        this._textureSheetAnimation = value;\n        this._dirtyFlags |= Particle2DSystemDirtyFlagBits.TextureSheetAnimationBit;\n    }\n    _initParticleData(particleByteStride, particleInfo) {\n        let maxparticles = this.main.maxParticles;\n        this._initParticlePool(maxparticles, particleByteStride, particleInfo);\n    }\n    constructor() {\n        super();\n        this._dirtyFlags = ~0;\n        this._main = new Main2DModule();\n        this._emission = new EmissionModule();\n        this._dirtyFlags = ~0;\n    }\n    play() {\n        super.play();\n        let globalPoint = _globalPoint;\n        this.owner.globalTrans.getPos(globalPoint);\n        this.emission._lastPosition.setValue(globalPoint.x, globalPoint.y, 0);\n    }\n    getPositionAndDirection() {\n        if (this.shape && this.shape.enable && this.shape.shape) {\n            return this.shape.shape.getPositionAndDirection();\n        }\n        else {\n            return Vector4.UnitW;\n        }\n    }\n    _emit(emitTime, age) {\n        if (this.particlePool.activeParticleCount >= this.main.maxParticles) {\n            return false;\n        }\n        const main = this.main;\n        let particle = Particle2DVertexMesh.TempParticle2D;\n        let duration = main.duration;\n        let normalizedTime = this.time / duration;\n        let lifetimeRandom = curveNeedRandom(main.startLifetime.mode) ? Math.random() : 0;\n        let lifetime = main.startLifetime.evaluate(normalizedTime, lifetimeRandom);\n        let normalizedAge = age / lifetime;\n        let startDelayRandom = curveNeedRandom(main.startDelay.mode) ? Math.random() : 0;\n        let startDelay = main.startDelay.evaluate(normalizedTime, startDelayRandom);\n        let startSpeedRandom = curveNeedRandom(main.startSpeed.mode) ? Math.random() : 0;\n        let startSpeed = main.startSpeed.evaluate(normalizedTime, startSpeedRandom);\n        let startSizeXRandom = curveNeedRandom(main.startSizeX.mode) ? Math.random() : 0;\n        let startSizeX = main.startSizeX.evaluate(normalizedTime, startSizeXRandom);\n        let startSizeY = startSizeX;\n        if (main.startSize2D) {\n            let startSizeYRandom = curveNeedRandom(main.startSizeY.mode) ? Math.random() : 0;\n            startSizeY = main.startSizeY.evaluate(normalizedTime, startSizeYRandom);\n        }\n        let startRotationRandom = curveNeedRandom(main.startRotation.mode) ? Math.random() : 0;\n        let startRotation = main.startRotation.evaluate(normalizedTime, startRotationRandom);\n        let startRadians = -startRotation * Math.PI / 180;\n        particle.setEmitTime(emitTime + startDelay);\n        particle.setLifetime(lifetime);\n        let startPosAndDir = this.getPositionAndDirection();\n        particle.setPosition(startPosAndDir.x, startPosAndDir.y);\n        particle.setDirection(startPosAndDir.z, startPosAndDir.w);\n        particle.setSize(startSizeX, startSizeY);\n        particle.setSpeed(startSpeed);\n        particle.setGravity(main._gravity.x, main._gravity.y);\n        particle.setRot(Math.cos(startRadians), Math.sin(startRadians));\n        let colorOverLifetimeRandom = 0;\n        if (this.colorOverLifetime && this.colorOverLifetime.enable) {\n            let color = this.colorOverLifetime.color;\n            switch (color.mode) {\n                case ParticleMinMaxGradientMode.TwoGradients:\n                    colorOverLifetimeRandom = Math.random();\n                    break;\n                default:\n                    break;\n            }\n        }\n        let velocityOverLifetimeRandomX = 0;\n        let velocityOverLifetimeRandomY = 0;\n        if (this.velocity2DOverLifetime && this.velocity2DOverLifetime.enable) {\n            let mode = this.velocity2DOverLifetime.x.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.TwoConstants:\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    velocityOverLifetimeRandomX = Math.random();\n                    velocityOverLifetimeRandomY = Math.random();\n                    break;\n                default:\n                    break;\n            }\n        }\n        let rotation2DOverLifetimeRandom = 0;\n        if (this.rotation2DOverLifetime && this.rotation2DOverLifetime.enable) {\n            let mode = this.rotation2DOverLifetime.angularVelocity.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.TwoConstants:\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    rotation2DOverLifetimeRandom = Math.random();\n                    break;\n                default:\n                    break;\n            }\n        }\n        particle.setRandom(colorOverLifetimeRandom, velocityOverLifetimeRandomX, velocityOverLifetimeRandomY, rotation2DOverLifetimeRandom);\n        let sizeOverLifetimeRandomX = 0;\n        let sizeOverLifetimeRandomY = 0;\n        if (this.size2DOverLifetime && this.size2DOverLifetime.enable) {\n            let mode = this.size2DOverLifetime.size.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.Constant:\n                    {\n                        if (this.size2DOverLifetime.separateAxes) {\n                            let sizeX = this.size2DOverLifetime.x.constant;\n                            let sizeY = this.size2DOverLifetime.y.constant;\n                            particle.setSize(startSizeX * sizeX, startSizeY * sizeY);\n                        }\n                        else {\n                            let size = this.size2DOverLifetime.size.constant;\n                            particle.setSize(startSizeX * size, startSizeY * size);\n                        }\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.TwoConstants:\n                    {\n                        if (this.size2DOverLifetime.separateAxes) {\n                            let sizeMinX = this.size2DOverLifetime.x.constantMin;\n                            let sizeMinY = this.size2DOverLifetime.y.constantMin;\n                            let sizeMaxX = this.size2DOverLifetime.x.constantMax;\n                            let sizeMaxY = this.size2DOverLifetime.y.constantMax;\n                            let sizeX = sizeMinX + Math.random() * (sizeMaxX - sizeMinX);\n                            let sizeY = sizeMinY + Math.random() * (sizeMaxY - sizeMinY);\n                            particle.setSize(startSizeX * sizeX, startSizeY * sizeY);\n                        }\n                        else {\n                            let sizeMin = this.size2DOverLifetime.size.constantMin;\n                            let sizeMax = this.size2DOverLifetime.size.constantMax;\n                            let size = sizeMin + Math.random() * (sizeMax - sizeMin);\n                            particle.setSize(startSizeX * size, startSizeY * size);\n                        }\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    if (this.size2DOverLifetime.separateAxes) {\n                        sizeOverLifetimeRandomX = Math.random();\n                        sizeOverLifetimeRandomY = Math.random();\n                    }\n                    else {\n                        sizeOverLifetimeRandomX = sizeOverLifetimeRandomY = Math.random();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        let textureSheetAnimationRandom = 0;\n        if (this.textureSheetAnimation && this.textureSheetAnimation.enable) {\n            let frame = this.textureSheetAnimation.frame;\n            let mode = frame.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.TwoConstants:\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    textureSheetAnimationRandom = Math.random();\n                    break;\n                default:\n                    break;\n            }\n        }\n        particle.setRandom1(sizeOverLifetimeRandomX, sizeOverLifetimeRandomY, textureSheetAnimationRandom, 0);\n        let spriteRotAndScale = main._spriteRotAndScale;\n        particle.setSpriteRotAndScale(spriteRotAndScale.x, spriteRotAndScale.y, spriteRotAndScale.z, spriteRotAndScale.w);\n        let spriteTransAndSpace = main._spriteTranslateAndSpace;\n        particle.setSpriteTrans(spriteTransAndSpace.x, spriteTransAndSpace.y);\n        particle.setSimulationSpace(spriteTransAndSpace.z);\n        let startColorRandom = gradientNeedRandom(main.startColor.mode) ? Math.random() : 0;\n        let color = main.startColor.evaluate(normalizedTime, startColorRandom);\n        particle.setColor(color.r, color.g, color.b, color.a);\n        if (this.textureSheetAnimation && this.textureSheetAnimation.enable) {\n            this.textureSheetAnimation._calculateSheetFrameData();\n            let sheetFrameData = this.textureSheetAnimation._sheetFrameData;\n            particle.setSheetFrameData(sheetFrameData.x, sheetFrameData.y, sheetFrameData.z, sheetFrameData.w);\n        }\n        this.particlePool.addParticleData(particle.data);\n        return true;\n    }\n    _emitOverTime(elapsedTime) {\n        let currentTime = this.totalTime;\n        let lastEmitTime = this._lastEmitTime;\n        let duration = currentTime - lastEmitTime;\n        let emissionInterval = this.emission._emissionInterval;\n        if (duration >= emissionInterval) {\n            let count = Math.floor(duration / emissionInterval);\n            for (let i = 1; i <= count; i++) {\n                let emitTime = i * emissionInterval + lastEmitTime;\n                let age = currentTime - emitTime;\n                this._emit(emitTime, age);\n                this._lastEmitTime = emitTime;\n            }\n        }\n    }\n    _emitOverDistance() {\n        let emission = this.emission;\n        if (emission.rateOverDistance <= 0) {\n            return;\n        }\n        let pxielDistance = 1 / emission.rateOverDistance * this.main.unitPixels;\n        if (this._emitDistance >= pxielDistance) {\n            let count = Math.floor(this._emitDistance / pxielDistance);\n            for (let i = 1; i <= count; i++) {\n                let emitTime = this.totalTime;\n                let age = 0;\n                this._emit(emitTime, age);\n                this._emitDistance -= pxielDistance;\n            }\n        }\n    }\n    _emitBurst(burst, emitTime) {\n        let time = burst.time;\n        let count = burst.count;\n        let age = this.totalTime - emitTime;\n        for (let j = 0; j < count; j++) {\n            if (!this._emit(emitTime, age)) {\n                break;\n            }\n        }\n    }\n    _emitBursts() {\n        let bursts = this.emission._sortedBursts;\n        let count = bursts ? bursts.length : 0;\n        let duration = this.main.duration;\n        let start = this._nextBurstIndex;\n        for (let i = start; i < count; i++) {\n            let burst = bursts[i];\n            if (burst.time > duration) {\n                break;\n            }\n            let burstTime = this._burstLoopCount * duration + burst.time;\n            if (burstTime <= this.totalTime) {\n                this._emitBurst(burst, burstTime);\n                this._nextBurstIndex = i + 1;\n                if (this._nextBurstIndex >= count) {\n                    this._nextBurstIndex = (i + 1) % count;\n                    this._burstLoopCount++;\n                }\n            }\n        }\n    }\n    _update(deltaTime) {\n        if (this.isPlaying) {\n            {\n                let simulationSpeed = this.main.simulationSpeed;\n                deltaTime *= simulationSpeed;\n            }\n            if (deltaTime <= 0) {\n                return;\n            }\n            this.time += deltaTime;\n            this.totalTime += deltaTime;\n            if (this.time >= this.main.duration) {\n                if (this.main.looping) {\n                    this.time -= this.main.duration;\n                }\n                else {\n                    this._isEmitting = false;\n                    if (this.particlePool.activeParticleCount <= 0) {\n                        this.stop();\n                    }\n                }\n            }\n            this.particlePool.retireParticles(this.totalTime);\n            if (this.emission.enable && this.isEmitting) {\n                this._emitOverTime(deltaTime);\n                this._emitOverDistance();\n                this._emitBursts();\n            }\n        }\n    }\n    simulate(time, restart = true) {\n        if (this.isPlaying) {\n            if (restart) {\n                this.stop();\n                this.play();\n            }\n            this._update(time);\n            this.pause();\n        }\n    }\n    cloneTo(destObject) {\n        this.main.cloneTo(destObject.main);\n        this.emission.cloneTo(destObject.emission);\n        this.shape.cloneTo(destObject.shape);\n        this.velocity2DOverLifetime.cloneTo(destObject.velocity2DOverLifetime);\n        this.colorOverLifetime.cloneTo(destObject.colorOverLifetime);\n        this.size2DOverLifetime.cloneTo(destObject.size2DOverLifetime);\n        this.rotation2DOverLifetime.cloneTo(destObject.rotation2DOverLifetime);\n        this.textureSheetAnimation.cloneTo(destObject.textureSheetAnimation);\n    }\n    clone() {\n        let dest = new ShurikenParticle2DSystem();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy() {\n        super.destroy();\n        if (this.particlePool) {\n            this.particlePool.destroy();\n            this.particlePool = null;\n        }\n    }\n}\nfunction curveNeedRandom(mode) {\n    switch (mode) {\n        case ParticleMinMaxCurveMode.TwoConstants:\n        case ParticleMinMaxCurveMode.TwoCurves:\n            return true;\n        default:\n            return false;\n    }\n}\nfunction gradientNeedRandom(mode) {\n    switch (mode) {\n        case ParticleMinMaxGradientMode.TwoColors:\n        case ParticleMinMaxGradientMode.TwoGradients:\n            return true;\n        default:\n            return false;\n    }\n}\n","import { addAfterInitCallback } from \"../../../Laya\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { BaseRenderNode2D } from \"../../NodeRender2D/BaseRenderNode2D\";\nimport { Physics2DOption } from \"../../physics/Physics2DOption\";\nimport { Stat } from \"../../utils/Stat\";\nimport { ParticleMinMaxCurveMode } from \"../common/ParticleMinMaxCurve\";\nimport { ParticleMinMaxGradientMode } from \"../common/ParticleMinMaxGradient\";\nimport { Particle2DScalingMode, Particle2DSimulationSpace } from \"./module/Main2DModule\";\nimport { Velocity2DSimulateSpace } from \"./module/Velocity2DOverLifetimeModule\";\nimport { Particle2DGeomotry } from \"./Particle2DGeomotry\";\nimport { Particle2DShader } from \"./Particle2DShader\";\nimport { Particle2DVertexMesh } from \"./Particle2DVertexMesh\";\nimport { ShurikenParticle2DSystem, Particle2DSystemDirtyFlagBits } from \"./ShurikenParticle2DSystem\";\nconst nMatrix0 = new Vector3();\nconst nMatrix1 = new Vector3();\nconst tempV4 = new Vector4();\nconst fillGradientRGB = (gradient, buffer) => {\n    let count = Math.min(gradient.colorRGBKeysCount, 8);\n    if (count == 1) {\n        let time = gradient._rgbElements[0];\n        let r = gradient._rgbElements[1];\n        let g = gradient._rgbElements[2];\n        let b = gradient._rgbElements[3];\n        buffer[0] = 0;\n        buffer[1] = r;\n        buffer[2] = g;\n        buffer[3] = b;\n        buffer[4] = 1;\n        buffer[5] = r;\n        buffer[6] = g;\n        buffer[7] = b;\n    }\n    else {\n        let length = Math.min(gradient._rgbElements.length, 8 * 4);\n        let data = new Float32Array(gradient._rgbElements.buffer, 0, length);\n        buffer.set(data);\n    }\n    if (count <= 4) {\n        return new Float32Array(buffer.buffer, 0, 4 * 4);\n    }\n    else {\n        return buffer;\n    }\n};\nconst fillGradientAlpha = (gradient, buffer) => {\n    let count = Math.min(gradient.colorAlphaKeysCount, 8);\n    if (count == 1) {\n        let time = gradient._alphaElements[0];\n        let a = gradient._alphaElements[1];\n        buffer[0] = 0;\n        buffer[1] = a;\n        buffer[2] = 1;\n        buffer[3] = a;\n    }\n    else {\n        let length = Math.min(gradient._alphaElements.length, 8 * 2);\n        let data = new Float32Array(gradient._alphaElements.buffer, 0, length);\n        buffer.set(data);\n    }\n    if (count <= 4) {\n        return new Float32Array(buffer.buffer, 0, 4 * 2);\n    }\n    else {\n        return buffer;\n    }\n};\nconst fillGradientTimeRange = (gradient, range, maxCount) => {\n    let colorMinTime = 0;\n    let colorMaxTime = 1;\n    let count = Math.min(gradient.colorRGBKeysCount, maxCount);\n    if (count == 1) {\n        colorMinTime = 0;\n        colorMaxTime = 1;\n    }\n    else {\n        colorMinTime = 1;\n        colorMaxTime = 0;\n        for (let i = 0; i < count; i++) {\n            let time = gradient._rgbElements[i * 4];\n            colorMinTime = Math.min(colorMinTime, time);\n            colorMaxTime = Math.max(colorMaxTime, time);\n        }\n    }\n    let alphaMinTime = 0;\n    let alphaMaxTime = 1;\n    count = Math.min(gradient.colorAlphaKeysCount, maxCount);\n    if (count == 1) {\n        alphaMinTime = 0;\n        alphaMaxTime = 1;\n    }\n    else {\n        alphaMinTime = 1;\n        alphaMaxTime = 0;\n        for (let i = 0; i < count; i++) {\n            let time = gradient._alphaElements[i * 2];\n            alphaMinTime = Math.min(alphaMinTime, time);\n            alphaMaxTime = Math.max(alphaMaxTime, time);\n        }\n    }\n    range.setValue(colorMinTime, colorMaxTime, alphaMinTime, alphaMaxTime);\n};\nconst fillCurveMinMaxTimeRange = (curve0, curve1, range) => {\n    let curve0MinTime = 1;\n    let curve0MaxTime = 0;\n    let count = Math.min(curve0.gradientCount, 4);\n    if (count == 1) {\n        curve0MinTime = 0;\n        curve0MaxTime = 1;\n    }\n    else {\n        let lastTime = curve0.getKeyByIndex(0);\n        curve0MinTime = Math.min(curve0MinTime, lastTime);\n        curve0MaxTime = Math.max(curve0MaxTime, lastTime);\n        for (let i = 1; i < count; i++) {\n            let time = curve0.getKeyByIndex(i);\n            if (time > lastTime) {\n                curve0MinTime = Math.min(curve0MinTime, time);\n                curve0MaxTime = Math.max(curve0MaxTime, time);\n                lastTime = time;\n            }\n        }\n    }\n    let curve1MinTime = 1;\n    let curve1MaxTime = 0;\n    count = Math.min(curve1.gradientCount, 4);\n    if (count == 1) {\n        curve1MinTime = 0;\n        curve1MaxTime = 1;\n    }\n    else {\n        let lastTime = curve1.getKeyByIndex(0);\n        curve1MinTime = Math.min(curve1MinTime, lastTime);\n        curve1MaxTime = Math.max(curve1MaxTime, lastTime);\n        for (let i = 1; i < count; i++) {\n            let time = curve1.getKeyByIndex(i);\n            if (time > lastTime) {\n                curve1MinTime = Math.min(curve1MinTime, time);\n                curve1MaxTime = Math.max(curve1MaxTime, time);\n                lastTime = time;\n            }\n        }\n    }\n    range.setValue(curve0MinTime, curve0MaxTime, curve1MinTime, curve1MaxTime);\n};\nconst fillParticleData = (particleIndex, particleStride, particleByteStride, particleDatas, meshVertexCount, particleVertexDatas) => {\n    let particleDataOffset = particleIndex * particleByteStride;\n    let particleData = new Float32Array(particleDatas.buffer, particleDataOffset, particleStride);\n    for (let j = 0; j < meshVertexCount; j++) {\n        let vertexOffset = (particleIndex * meshVertexCount + j) * particleStride;\n        particleVertexDatas.set(particleData, vertexOffset);\n    }\n};\nfunction gradientDataNumberConstant(gradient, value) {\n    gradient._elements.fill(0);\n    gradient._elements[0] = 0;\n    gradient._elements[1] = value;\n    gradient._elements[2] = 1;\n    gradient._elements[3] = value;\n}\nexport class ShurikenParticle2DRenderer extends BaseRenderNode2D {\n    get particleSystem() {\n        return this._particleSystem;\n    }\n    _setOwner(node) {\n        super._setOwner(node);\n        this.particleSystem.owner = node;\n    }\n    get sharedMaterial() {\n        return super.sharedMaterial;\n    }\n    set sharedMaterial(value) {\n        super.sharedMaterial = value;\n        this._createRenderElements();\n    }\n    constructor() {\n        super();\n        this._gradientRGBBuffer = new Float32Array(8 * 4);\n        this._gradientAlphaBuffer = new Float32Array(8 * 2);\n        this._gradientTimeRange = new Vector4();\n        this._gradientMaxRGBBuffer = new Float32Array(8 * 4);\n        this._gradientMaxAlphaBuffer = new Float32Array(8 * 2);\n        this._gradientMaxTimeRange = new Vector4();\n        this._updateMark = -1;\n        this._renderElements = [];\n        this._materials = [];\n        this._particleSystem = new ShurikenParticle2DSystem();\n        this._spriteShaderData.addDefine(BaseRenderNode2D.SHADERDEFINE_BASERENDER2D);\n    }\n    _getcommonUniformMap() {\n        return [\"BaseRender2D\", \"_Particle2D\"];\n    }\n    setParticleColorOverLifetime(shaderData) {\n        let ps = this.particleSystem;\n        if (ps.colorOverLifetime && ps.colorOverLifetime.enable) {\n            shaderData.addDefine(Particle2DShader.ColorOverLifetimeDef);\n            let color = ps.colorOverLifetime.color;\n            let gradientMin = color.gradientMin;\n            let gradientMax = color.gradientMax;\n            let mode = color.mode;\n            let rgbMinBuffer = fillGradientRGB(gradientMin, this._gradientRGBBuffer);\n            let alphaMinBuffer = fillGradientAlpha(gradientMin, this._gradientAlphaBuffer);\n            let colorKey8 = false;\n            if (rgbMinBuffer.length == 32 || alphaMinBuffer.length == 16) {\n                colorKey8 = true;\n                fillGradientTimeRange(gradientMin, this._gradientTimeRange, 8);\n            }\n            else {\n                fillGradientTimeRange(gradientMin, this._gradientTimeRange, 4);\n            }\n            shaderData.setVector(Particle2DShader.GradientTimeRange, this._gradientTimeRange);\n            let rgbMaxBuffer;\n            let alphaMaxBuffer;\n            switch (mode) {\n                case ParticleMinMaxGradientMode.Gradient:\n                    shaderData.removeDefine(Particle2DShader.ColorOverLifetimeRandom);\n                    break;\n                case ParticleMinMaxGradientMode.TwoGradients: {\n                    shaderData.addDefine(Particle2DShader.ColorOverLifetimeRandom);\n                    rgbMaxBuffer = fillGradientRGB(gradientMax, this._gradientMaxRGBBuffer);\n                    alphaMaxBuffer = fillGradientAlpha(gradientMax, this._gradientMaxAlphaBuffer);\n                    if (rgbMaxBuffer.length == 32 || alphaMaxBuffer.length == 16) {\n                        colorKey8 = true;\n                        shaderData.setBuffer(Particle2DShader.GradientMaxRGB, this._gradientMaxRGBBuffer);\n                        shaderData.setBuffer(Particle2DShader.GradientMaxAlpha, this._gradientMaxAlphaBuffer);\n                        fillGradientTimeRange(gradientMax, this._gradientMaxTimeRange, 8);\n                    }\n                    else {\n                        shaderData.setBuffer(Particle2DShader.GradientMaxRGB, rgbMaxBuffer);\n                        shaderData.setBuffer(Particle2DShader.GradientMaxAlpha, alphaMaxBuffer);\n                        fillGradientTimeRange(gradientMax, this._gradientMaxTimeRange, 4);\n                    }\n                    shaderData.setVector(Particle2DShader.GradientMaxTimeRange, this._gradientMaxTimeRange);\n                    break;\n                }\n                default:\n                    break;\n            }\n            if (colorKey8) {\n                shaderData.addDefine(Particle2DShader.ColorOVerLifetimeColorKey_8);\n                shaderData.setBuffer(Particle2DShader.GradientRGB, this._gradientRGBBuffer);\n                shaderData.setBuffer(Particle2DShader.GradientAlpha, this._gradientAlphaBuffer);\n            }\n            else {\n                shaderData.setBuffer(Particle2DShader.GradientRGB, rgbMinBuffer);\n                shaderData.setBuffer(Particle2DShader.GradientAlpha, alphaMinBuffer);\n            }\n        }\n        else {\n            shaderData.removeDefine(Particle2DShader.ColorOverLifetimeDef);\n            shaderData.removeDefine(Particle2DShader.ColorOverLifetimeRandom);\n            shaderData.removeDefine(Particle2DShader.ColorOVerLifetimeColorKey_8);\n        }\n    }\n    setParticleVelocityOverLifetime(shaderData) {\n        let ps = this.particleSystem;\n        if (ps.velocity2DOverLifetime && ps.velocity2DOverLifetime.enable) {\n            shaderData.addDefine(Particle2DShader.VelocityOverLifetimeDef);\n            let velocityX = ps.velocity2DOverLifetime.x;\n            let velocityY = ps.velocity2DOverLifetime.y;\n            let mode = velocityX.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.Constant:\n                    {\n                        let valueX = velocityX.constant;\n                        let valueY = velocityY.constant;\n                        gradientDataNumberConstant(velocityX.curve, valueX);\n                        gradientDataNumberConstant(velocityY.curve, valueY);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinX, velocityX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinY, velocityY.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxX, velocityX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxY, velocityY.curve._elements);\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.TwoConstants:\n                    {\n                        let valueMinX = velocityX.constantMin;\n                        let valueMinY = velocityY.constantMin;\n                        let valueMaxX = velocityX.constantMax;\n                        let valueMaxY = velocityY.constantMax;\n                        gradientDataNumberConstant(velocityX.curveMin, valueMinX);\n                        gradientDataNumberConstant(velocityY.curveMin, valueMinY);\n                        gradientDataNumberConstant(velocityX.curveMax, valueMaxX);\n                        gradientDataNumberConstant(velocityY.curveMax, valueMaxY);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinX, velocityX.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinY, velocityY.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxX, velocityX.curveMax._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxY, velocityY.curveMax._elements);\n                        break;\n                    }\n                    ;\n                case ParticleMinMaxCurveMode.Curve:\n                    {\n                        velocityX.curve._formatData();\n                        velocityY.curve._formatData();\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinX, velocityX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinY, velocityY.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxX, velocityX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxY, velocityY.curve._elements);\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    {\n                        velocityX.curveMin._formatData();\n                        velocityY.curveMin._formatData();\n                        velocityX.curveMax._formatData();\n                        velocityY.curveMax._formatData();\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinX, velocityX.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMinY, velocityY.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxX, velocityX.curveMax._elements);\n                        shaderData.setBuffer(Particle2DShader.VelocityCurveMaxY, velocityY.curveMax._elements);\n                        break;\n                    }\n                default:\n                    break;\n            }\n            let space = ps.velocity2DOverLifetime.space;\n            switch (space) {\n                case Velocity2DSimulateSpace.Local:\n                    shaderData.setNumber(Particle2DShader.VelocityOverLifetimeSpace, 0);\n                    break;\n                case Velocity2DSimulateSpace.World:\n                    shaderData.setNumber(Particle2DShader.VelocityOverLifetimeSpace, 1);\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            shaderData.removeDefine(Particle2DShader.VelocityOverLifetimeDef);\n        }\n    }\n    setSize2DOverLifetime(shaderData) {\n        let ps = this.particleSystem;\n        if (ps.size2DOverLifetime && ps.size2DOverLifetime.enable) {\n            let sizeX = ps.size2DOverLifetime.x;\n            let sizeY = ps.size2DOverLifetime.y;\n            let mode = sizeX.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.Curve:\n                    shaderData.addDefine(Particle2DShader.SizeOverLifetimeDef);\n                    if (ps.size2DOverLifetime.separateAxes) {\n                        sizeX.curve._formatData();\n                        sizeY.curve._formatData();\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinX, sizeX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinY, sizeY.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxX, sizeX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxY, sizeY.curve._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(sizeX.curve, sizeY.curve, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMinTimeRange, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMaxTimeRange, range);\n                    }\n                    else {\n                        sizeX.curve._formatData();\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinX, sizeX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinY, sizeX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxX, sizeX.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxY, sizeX.curve._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(sizeX.curve, sizeX.curve, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMinTimeRange, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMaxTimeRange, range);\n                    }\n                    break;\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    shaderData.addDefine(Particle2DShader.SizeOverLifetimeDef);\n                    if (ps.size2DOverLifetime.separateAxes) {\n                        sizeX.curveMin._formatData();\n                        sizeX.curveMax._formatData();\n                        sizeY.curveMin._formatData();\n                        sizeX.curveMax._formatData();\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinX, sizeX.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinY, sizeY.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxX, sizeX.curveMax._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxY, sizeY.curveMax._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(sizeX.curveMin, sizeY.curveMin, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMinTimeRange, range);\n                        fillCurveMinMaxTimeRange(sizeX.curveMax, sizeY.curveMax, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMaxTimeRange, range);\n                    }\n                    else {\n                        sizeX.curveMin._formatData();\n                        sizeX.curveMax._formatData();\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinX, sizeX.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMinY, sizeX.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxX, sizeX.curveMax._elements);\n                        shaderData.setBuffer(Particle2DShader.SizeCurveMaxY, sizeX.curveMax._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(sizeX.curveMin, sizeX.curveMin, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMinTimeRange, range);\n                        fillCurveMinMaxTimeRange(sizeX.curveMax, sizeX.curveMax, range);\n                        shaderData.setVector(Particle2DShader.SizeCurveMaxTimeRange, range);\n                    }\n                    break;\n                case ParticleMinMaxCurveMode.Constant:\n                case ParticleMinMaxCurveMode.TwoConstants:\n                default:\n                    shaderData.removeDefine(Particle2DShader.SizeOverLifetimeDef);\n                    break;\n            }\n        }\n        else {\n            shaderData.removeDefine(Particle2DShader.SizeOverLifetimeDef);\n        }\n    }\n    setRotationOverlifetime(shaderData) {\n        let ps = this.particleSystem;\n        if (ps.rotation2DOverLifetime && ps.rotation2DOverLifetime.enable) {\n            shaderData.addDefine(Particle2DShader.RotationOverLifetimeDef);\n            let angularVelocity = ps.rotation2DOverLifetime.angularVelocity;\n            let mode = angularVelocity.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.Constant:\n                    {\n                        let value = angularVelocity.constant;\n                        gradientDataNumberConstant(angularVelocity.curve, value);\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMin, angularVelocity.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMax, angularVelocity.curve._elements);\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.Curve:\n                    {\n                        angularVelocity.curve._formatData();\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMin, angularVelocity.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMax, angularVelocity.curve._elements);\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.TwoConstants:\n                    {\n                        let valueMin = angularVelocity.constantMin;\n                        let valueMax = angularVelocity.constantMax;\n                        gradientDataNumberConstant(angularVelocity.curveMin, valueMin);\n                        gradientDataNumberConstant(angularVelocity.curveMax, valueMax);\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMin, angularVelocity.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMax, angularVelocity.curveMax._elements);\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    {\n                        angularVelocity.curveMin._formatData();\n                        angularVelocity.curveMax._formatData();\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMin, angularVelocity.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.RotationCurveMax, angularVelocity.curveMax._elements);\n                        break;\n                    }\n                default:\n                    break;\n            }\n        }\n        else {\n            shaderData.removeDefine(Particle2DShader.RotationOverLifetimeDef);\n        }\n    }\n    setTextureSheetAnimation(shaderData) {\n        let ps = this.particleSystem;\n        if (ps.textureSheetAnimation && ps.textureSheetAnimation.enable) {\n            shaderData.addDefine(Particle2DShader.TextureSheetAnimationDef);\n            let tiles = ps.textureSheetAnimation.tiles;\n            let cycles = ps.textureSheetAnimation.cycles;\n            let animationSubUV = tempV4;\n            animationSubUV.setValue(tiles.x, tiles.y, cycles, 0);\n            shaderData.setVector(Particle2DShader.TextureSheetFrameData, animationSubUV);\n            let frame = ps.textureSheetAnimation.frame;\n            let mode = ps.textureSheetAnimation.frame.mode;\n            switch (mode) {\n                case ParticleMinMaxCurveMode.Constant:\n                    {\n                        let value = frame.constant;\n                        gradientDataNumberConstant(frame.curve, value);\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrame, frame.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrameMax, frame.curve._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(frame.curve, frame.curve, range);\n                        shaderData.setVector(Particle2DShader.TextureSheetFrameRange, range);\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.Curve:\n                    {\n                        frame.curve._formatData();\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrame, frame.curve._elements);\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrameMax, frame.curve._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(frame.curve, frame.curve, range);\n                        shaderData.setVector(Particle2DShader.TextureSheetFrameRange, range);\n                        break;\n                    }\n                    ;\n                case ParticleMinMaxCurveMode.TwoConstants:\n                    {\n                        let valueMin = frame.constantMin;\n                        let valueMax = frame.constantMax;\n                        gradientDataNumberConstant(frame.curveMin, valueMin);\n                        gradientDataNumberConstant(frame.curveMax, valueMax);\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrame, frame.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrameMax, frame.curveMax._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(frame.curveMin, frame.curveMax, range);\n                        shaderData.setVector(Particle2DShader.TextureSheetFrameRange, range);\n                        break;\n                    }\n                case ParticleMinMaxCurveMode.TwoCurves:\n                    {\n                        frame.curveMin._formatData();\n                        frame.curveMax._formatData();\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrame, frame.curveMin._elements);\n                        shaderData.setBuffer(Particle2DShader.TextureSheetFrameMax, frame.curveMax._elements);\n                        let range = tempV4;\n                        fillCurveMinMaxTimeRange(frame.curveMin, frame.curveMax, range);\n                        shaderData.setVector(Particle2DShader.TextureSheetFrameRange, range);\n                        break;\n                    }\n                default:\n                    break;\n            }\n        }\n        else {\n            shaderData.removeDefine(Particle2DShader.TextureSheetAnimationDef);\n        }\n    }\n    setParticleData(shaderData, worldMat) {\n        var _a, _b;\n        let ps = this.particleSystem;\n        if (!this.particleGeometry || ps.main.maxParticles != this.particleGeometry.maxParitcleCount) {\n            this._createRenderGeometry();\n        }\n        shaderData.setNumber(Particle2DShader.CurrentTime, ps.totalTime);\n        shaderData.setNumber(Particle2DShader.UnitPixels, ps.main.unitPixels);\n        let scaleX = worldMat.getScaleX();\n        let scaleY = worldMat.getScaleY();\n        let cosAngle = worldMat.a / scaleX;\n        let sinAngle = worldMat.b / scaleX;\n        let translateX = nMatrix0.z;\n        let translateY = nMatrix1.z;\n        let simulationSpace = 0;\n        switch (ps.main.simulationSpace) {\n            case Particle2DSimulationSpace.Local:\n                simulationSpace = 0;\n                break;\n            case Particle2DSimulationSpace.World:\n                simulationSpace = 1;\n                break;\n            default:\n                break;\n        }\n        switch (ps.main.scaleMode) {\n            case Particle2DScalingMode.Hierarchy:\n                break;\n            case Particle2DScalingMode.Local:\n                scaleX = this.owner.scaleX * this.owner.scene.globalScaleX;\n                scaleY = this.owner.scaleY * this.owner.scene.globalScaleY;\n                break;\n            default:\n                break;\n        }\n        ps.main._spriteRotAndScale.setValue(cosAngle, sinAngle, scaleX, scaleY);\n        ps.main._spriteTranslateAndSpace.setValue(translateX, translateY, simulationSpace);\n        const Physics2DSettingPixelRatio = (_a = Physics2DOption === null || Physics2DOption === void 0 ? void 0 : Physics2DOption.pixelRatio) !== null && _a !== void 0 ? _a : 50;\n        const Physics2DSettingGravity = (_b = Physics2DOption === null || Physics2DOption === void 0 ? void 0 : Physics2DOption.gravity) !== null && _b !== void 0 ? _b : { x: 0, y: 9.8 };\n        let physicPixelRatio = ps.main.unitPixels / Physics2DSettingPixelRatio;\n        let gravityX = Physics2DSettingGravity.x * physicPixelRatio;\n        let gravityY = Physics2DSettingGravity.y * physicPixelRatio;\n        let gravityModifier = ps.main.gravityModifier;\n        ps.main._gravity.setValue(gravityX * gravityModifier, gravityY * gravityModifier);\n        if (ps.emission.rateOverDistance >= 0) {\n            let posX = translateX;\n            let posY = translateY;\n            let lastX = ps.emission._lastPosition.x;\n            let lastY = ps.emission._lastPosition.y;\n            let dx = (posX - lastX);\n            let dy = (posY - lastY);\n            let distance = dx * dx + dy * dy;\n            distance = Math.sqrt(distance);\n            ps._emitDistance += distance;\n            ps.emission._lastPosition.set(posX, posY, 0);\n        }\n        if (ps._dirtyFlags & Particle2DSystemDirtyFlagBits.ColorOverLifetimeBit) {\n            this.setParticleColorOverLifetime(shaderData);\n            ps._dirtyFlags &= ~Particle2DSystemDirtyFlagBits.ColorOverLifetimeBit;\n        }\n        if (ps._dirtyFlags & Particle2DSystemDirtyFlagBits.Velocity2DOverLifetimeBit) {\n            this.setParticleVelocityOverLifetime(shaderData);\n            ps._dirtyFlags &= ~Particle2DSystemDirtyFlagBits.Velocity2DOverLifetimeBit;\n        }\n        if (ps._dirtyFlags & Particle2DSystemDirtyFlagBits.Size2DOverLifetimeBit) {\n            this.setSize2DOverLifetime(shaderData);\n            ps._dirtyFlags &= ~Particle2DSystemDirtyFlagBits.Size2DOverLifetimeBit;\n        }\n        if (ps._dirtyFlags & Particle2DSystemDirtyFlagBits.Rotation2DOverLifetimeBit) {\n            this.setRotationOverlifetime(shaderData);\n            ps._dirtyFlags &= ~Particle2DSystemDirtyFlagBits.Rotation2DOverLifetimeBit;\n        }\n        if (ps._dirtyFlags & Particle2DSystemDirtyFlagBits.TextureSheetAnimationBit) {\n            this.setTextureSheetAnimation(shaderData);\n            ps._dirtyFlags &= ~Particle2DSystemDirtyFlagBits.TextureSheetAnimationBit;\n        }\n    }\n    addCMDCall(context, px, py) {\n        if (!this.particleSystem) {\n            return;\n        }\n        let mat = context._curMat;\n        nMatrix0.x = mat.a;\n        nMatrix0.y = mat.c;\n        nMatrix0.z = px * mat.a + py * mat.c + mat.tx;\n        this._spriteShaderData.setVector3(BaseRenderNode2D.NMATRIX_0, nMatrix0);\n        nMatrix1.x = mat.b;\n        nMatrix1.y = mat.d;\n        nMatrix1.z = px * mat.b + py * mat.d + mat.ty;\n        this._spriteShaderData.setVector3(BaseRenderNode2D.NMATRIX_1, nMatrix1);\n        this._setRenderSize(context.width, context.height);\n        context._copyClipInfoToShaderData(this._spriteShaderData);\n        this._lightReceive && this._updateLight();\n        this.setParticleData(this._spriteShaderData, mat);\n    }\n    _createRenderGeometry() {\n        if (this.particleGeometry) {\n            this.particleGeometry.destroy();\n            this.particleGeometry = null;\n        }\n        let maxParticles = this.particleSystem.main.maxParticles;\n        let particleDeclaration = Particle2DVertexMesh.Particle2DDeclaration;\n        let meshDeclaration = Particle2DVertexMesh.Particle2DMeshDeclaration;\n        this.particleGeometry = new Particle2DGeomotry(maxParticles, particleDeclaration, meshDeclaration);\n        this._createRenderElements();\n    }\n    _createRenderElements() {\n        this._renderElements.forEach(element => {\n            element.destroy();\n        });\n        this._renderElements.length = 0;\n        if (!this.sharedMaterial) {\n            return;\n        }\n        {\n            let declaration = Particle2DVertexMesh.Particle2DDeclaration;\n            let particleInfo = Particle2DVertexMesh.Particle2DInfo;\n            let particleByteStride = declaration.vertexStride;\n            this.particleSystem._initParticleData(particleByteStride, particleInfo);\n        }\n        const createRenderElement = (geometry) => {\n            let element = LayaGL.render2DRenderPassFactory.createRenderElement2D();\n            element.geometry = geometry;\n            element.value2DShaderData = this._spriteShaderData;\n            BaseRenderNode2D._setRenderElement2DMaterial(element, this.sharedMaterial);\n            element.renderStateIsBySprite = false;\n            element.nodeCommonMap = this._getcommonUniformMap();\n            return element;\n        };\n        if (this.particleGeometry) {\n            let geometry = this.particleGeometry.geometry;\n            let element = createRenderElement(geometry);\n            this._renderElements.push(element);\n        }\n    }\n    _updateParticleBuffer(startActive, endActive) {\n        let ps = this.particleSystem;\n        let meshVertexCount = 4;\n        let meshIndexCount = 6;\n        let maxParticles = ps.main.maxParticles;\n        let particleDatas = ps.particlePool.particleDatas;\n        let particleVertexDatas = this.particleGeometry.particleDatas;\n        let particleBuffer = this.particleGeometry.particleBuffer;\n        let particleStride = ps.particlePool.particleStride;\n        let particleByteStride = ps.particlePool.particleByteStride;\n        if (startActive <= endActive) {\n            let particleCount = endActive - startActive;\n            for (let i = startActive; i <= endActive; i++) {\n                fillParticleData(i, particleStride, particleByteStride, particleDatas, meshVertexCount, particleVertexDatas);\n            }\n            let start = startActive * meshVertexCount * particleByteStride;\n            let length = particleCount * meshVertexCount * particleByteStride;\n            particleBuffer.setData(particleVertexDatas.buffer, start, start, length);\n        }\n        else {\n            {\n                for (let i = startActive; i <= maxParticles; i++) {\n                    fillParticleData(i, particleStride, particleByteStride, particleDatas, meshVertexCount, particleVertexDatas);\n                }\n                let start = startActive * meshVertexCount * particleByteStride;\n                let length = (maxParticles + 1 - startActive) * meshVertexCount * particleByteStride;\n                particleBuffer.setData(particleVertexDatas.buffer, start, start, length);\n            }\n            {\n                for (let i = 0; i < endActive; i++) {\n                    fillParticleData(i, particleStride, particleByteStride, particleDatas, meshVertexCount, particleVertexDatas);\n                }\n                let start = 0;\n                let length = endActive * meshVertexCount * particleByteStride;\n                particleBuffer.setData(particleVertexDatas.buffer, start, start, length);\n            }\n        }\n    }\n    renderUpdate(context) {\n        let ps = this.particleSystem;\n        if (this._renderElements.length <= 0) {\n            return;\n        }\n        if (this._updateMark != Stat.loopCount) {\n            this._updateMark = Stat.loopCount;\n            let elapsedTime = this.owner.scene.timer.delta / 1000;\n            ps._update(elapsedTime);\n            const startUpdate = ps.particlePool.updateStartIndex;\n            const endUpdate = ps.particlePool.updateEndIndex;\n            if (startUpdate != endUpdate) {\n                this._updateParticleBuffer(startUpdate, endUpdate);\n            }\n            const startActive = ps.particlePool.activeStartIndex;\n            const endActive = ps.particlePool.activeEndIndex;\n            let meshVertexCount = 4;\n            let meshIndexCount = 6;\n            let maxParticles = ps.main.maxParticles;\n            if (startActive <= endActive) {\n                let particleCount = endActive - startActive;\n                this._renderElements.forEach(element => {\n                    element.geometry.clearRenderParams();\n                    let drawCount = particleCount * meshIndexCount;\n                    element.geometry.setDrawElemenParams(drawCount, startActive * meshIndexCount * 2);\n                });\n            }\n            else {\n                this._renderElements.forEach(element => {\n                    element.geometry.clearRenderParams();\n                    let drawCount = (maxParticles + 1 - startActive) * meshIndexCount;\n                    element.geometry.setDrawElemenParams(drawCount, startActive * meshIndexCount * 2);\n                    drawCount = endActive * meshIndexCount;\n                    if (drawCount > 0) {\n                        element.geometry.setDrawElemenParams(drawCount, 0);\n                    }\n                });\n            }\n        }\n    }\n    onEnable() {\n        let ps = this.particleSystem;\n        if (LayaEnv.isPlaying && ps.main.playOnAwake) {\n            ps.play();\n        }\n    }\n    onDisable() {\n        let ps = this.particleSystem;\n        ps.simulate(0, true);\n    }\n    onDestroy() {\n        if (this.particleGeometry) {\n            this.particleGeometry.destroy();\n            this.particleGeometry = null;\n        }\n        this.particleSystem.destroy();\n    }\n    _cloneTo(dest) {\n        super._cloneTo(dest);\n        this.particleSystem.cloneTo(dest.particleSystem);\n    }\n}\naddAfterInitCallback(() => {\n    Particle2DVertexMesh.init();\n    Particle2DShader.init();\n});\n","import { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Main2DModule } from \"./module/Main2DModule\";\nimport { Rotation2DOverLifetimeModule } from \"./module/Rotation2DOverLifetimeModule\";\nimport { Shape2DModule } from \"./module/Shape2DModule\";\nimport { Base2DShape } from \"./module/shapes/Base2DShape\";\nimport { Box2DShape } from \"./module/shapes/Box2DShape\";\nimport { Circle2DShape } from \"./module/shapes/Circle2DShape\";\nimport { FanShape } from \"./module/shapes/FanShape\";\nimport { SemicircleShap } from \"./module/shapes/SemicircleShap\";\nimport { Size2DOverLifetimeModule } from \"./module/Size2DOverLifetimeModule\";\nimport { Velocity2DOverLifetimeModule } from \"./module/Velocity2DOverLifetimeModule\";\nimport { ShurikenParticle2DRenderer } from \"./ShurikenParticle2DRenderer\";\nimport { ShurikenParticle2DSystem } from \"./ShurikenParticle2DSystem\";\nClassUtils.regClass(\"Base2DShape\", Base2DShape);\nClassUtils.regClass(\"Box2DShape\", Box2DShape);\nClassUtils.regClass(\"Circle2DShape\", Circle2DShape);\nClassUtils.regClass(\"FanShape\", FanShape);\nClassUtils.regClass(\"SemicircleShap\", SemicircleShap);\nClassUtils.regClass(\"Main2DModule\", Main2DModule);\nClassUtils.regClass(\"Rotation2DOverLifetimeModule\", Rotation2DOverLifetimeModule);\nClassUtils.regClass(\"Shape2DModule\", Shape2DModule);\nClassUtils.regClass(\"Size2DOverLifetimeModule\", Size2DOverLifetimeModule);\nClassUtils.regClass(\"Velocity2DOverLifetimeModule\", Velocity2DOverLifetimeModule);\nClassUtils.regClass(\"ShurikenParticle2DSystem\", ShurikenParticle2DSystem);\nClassUtils.regClass(\"ShurikenParticle2DRenderer\", ShurikenParticle2DRenderer);\n"],"names":["Particle2DSimulationSpace","Particle2DScalingMode","ParticleMinMaxCurve","ParticleMinMaxGradient","Vector2","Vector4","Vector3","ParticleMinMaxCurveMode","ParticleMinMaxGradientMode","Base2DShapeType","FanShapeEmitType","Velocity2DSimulateSpace","LayaGL","BufferUsage","IndexFormat","MeshTopology","DrawType","Shader3D","ShaderDataType","Particle2DVertex","VertexElementFormat","ParticleInfo","VertexElement","VertexDeclaration","Point","Particle2DSystemDirtyFlagBits","ParticleControler","EmissionModule","BaseRenderNode2D","Physics2DOption","Stat","LayaEnv","addAfterInitCallback","ClassUtils"],"mappings":"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"}