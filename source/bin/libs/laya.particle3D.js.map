{"version":3,"file":"laya.particle3D.js","sources":["../../bin/tsc/layaAir/laya/particle/d3/module/Burst.js","../../bin/tsc/layaAir/laya/particle/d3/module/GradientColor.js","../../bin/tsc/layaAir/laya/particle/d3/module/ColorOverLifetime.js","../../bin/tsc/layaAir/laya/particle/d3/module/Emission.js","../../bin/tsc/layaAir/laya/particle/d3/module/FrameOverTime.js","../../bin/tsc/layaAir/laya/particle/d3/module/GradientAngularVelocity.js","../../bin/tsc/layaAir/laya/particle/d3/module/GradientDataInt.js","../../bin/tsc/layaAir/laya/particle/d3/module/GradientSize.js","../../bin/tsc/layaAir/laya/particle/d3/module/GradientVelocity.js","../../bin/tsc/layaAir/laya/particle/d3/module/RotationOverLifetime.js","../../bin/tsc/layaAir/laya/particle/d3/module/shape/BaseShape.js","../../bin/tsc/layaAir/laya/particle/d3/module/shape/ShapeUtils.js","../../bin/tsc/layaAir/laya/particle/d3/module/shape/BoxShape.js","../../bin/tsc/layaAir/laya/particle/d3/module/shape/CircleShape.js","../../bin/tsc/layaAir/laya/particle/d3/module/shape/ConeShape.js","../../bin/tsc/layaAir/laya/particle/d3/module/shape/HemisphereShape.js","../../bin/tsc/layaAir/laya/particle/d3/module/shape/SphereShape.js","../../bin/tsc/layaAir/laya/particle/d3/module/SizeOverLifetime.js","../../bin/tsc/layaAir/laya/particle/d3/module/StartFrame.js","../../bin/tsc/layaAir/laya/particle/d3/module/TextureSheetAnimation.js","../../bin/tsc/layaAir/laya/particle/d3/module/VelocityOverLifetime.js","../../bin/tsc/layaAir/laya/particle/d3/shader/particleShuriKen.vs","../../bin/tsc/layaAir/laya/particle/d3/shader/particleShuriKen.fs","../../bin/tsc/layaAir/laya/particle/d3/shader/MathGradient.glsl","../../bin/tsc/layaAir/laya/particle/d3/shader/particleShuriKenSpriteVS.glsl","../../bin/tsc/layaAir/laya/particle/d3/VertexShuriKenParticle.js","../../bin/tsc/layaAir/laya/particle/d3/shader/ParticleShuriKenShaderInit.js","../../bin/tsc/layaAir/laya/particle/d3/ShuriKenParticle3DShaderDeclaration.js","../../bin/tsc/layaAir/laya/particle/d3/ShurikenParticleData.js","../../bin/tsc/layaAir/laya/particle/d3/VertexShurikenParticleBillboard.js","../../bin/tsc/layaAir/laya/particle/d3/VertexShurikenParticleMesh.js","../../bin/tsc/layaAir/laya/particle/d3/ShurikenParticleSystem.js","../../bin/tsc/layaAir/laya/particle/d3/ShurikenParticleInstanceSystem.js","../../bin/tsc/layaAir/laya/particle/d3/ShurikenParticleMaterial.js","../../bin/tsc/layaAir/laya/particle/d3/ShurikenParticleRenderer.js","../../bin/tsc/layaAir/laya/particle/d3/ShuriKenParticle3D.js","../../bin/tsc/layaAir/laya/particle/d3/ModuleDef.js","../../bin/tsc/layaAir/laya/particle/d3/module/GradientDataVector2.js"],"sourcesContent":["export class Burst {\n    get time() {\n        return this._time;\n    }\n    get minCount() {\n        return this._minCount;\n    }\n    get maxCount() {\n        return this._maxCount;\n    }\n    constructor(time = 0, minCount = 0, maxCount = 0) {\n        this._time = time;\n        this._minCount = minCount;\n        this._maxCount = maxCount;\n    }\n    cloneTo(destObject) {\n        destObject._time = this._time;\n        destObject._minCount = this._minCount;\n        destObject._maxCount = this._maxCount;\n    }\n    clone() {\n        var destBurst = new Burst(this._time, this._minCount, this._maxCount);\n        this.cloneTo(destBurst);\n        return destBurst;\n    }\n}\n","export class GradientColor {\n    static createByConstant(constant) {\n        var gradientColor = new GradientColor();\n        gradientColor._type = 0;\n        gradientColor._constant = constant;\n        return gradientColor;\n    }\n    static createByGradient(gradient) {\n        var gradientColor = new GradientColor();\n        gradientColor._type = 1;\n        gradientColor._gradient = gradient;\n        return gradientColor;\n    }\n    static createByRandomTwoConstant(minConstant, maxConstant) {\n        var gradientColor = new GradientColor();\n        gradientColor._type = 2;\n        gradientColor._constantMin = minConstant;\n        gradientColor._constantMax = maxConstant;\n        return gradientColor;\n    }\n    static createByRandomTwoGradient(minGradient, maxGradient) {\n        var gradientColor = new GradientColor();\n        gradientColor._type = 3;\n        gradientColor._gradientMin = minGradient;\n        gradientColor._gradientMax = maxGradient;\n        return gradientColor;\n    }\n    get type() {\n        return this._type;\n    }\n    get constant() {\n        return this._constant;\n    }\n    get constantMin() {\n        return this._constantMin;\n    }\n    get constantMax() {\n        return this._constantMax;\n    }\n    get gradient() {\n        return this._gradient;\n    }\n    get gradientMin() {\n        return this._gradientMin;\n    }\n    get gradientMax() {\n        return this._gradientMax;\n    }\n    constructor() {\n        this._type = 0;\n        this._constant = null;\n        this._constantMin = null;\n        this._constantMax = null;\n        this._gradient = null;\n        this._gradientMin = null;\n        this._gradientMax = null;\n    }\n    cloneTo(destObject) {\n        destObject._type = this._type;\n        this._constant.cloneTo(destObject._constant);\n        this._constantMin.cloneTo(destObject._constantMin);\n        this._constantMax.cloneTo(destObject._constantMax);\n        this._gradient.cloneTo(destObject._gradient);\n        this._gradientMin.cloneTo(destObject._gradientMin);\n        this._gradientMax.cloneTo(destObject._gradientMax);\n    }\n    clone() {\n        var destGradientColor = new GradientColor();\n        this.cloneTo(destGradientColor);\n        return destGradientColor;\n    }\n}\n","import { GradientColor } from \"./GradientColor\";\nexport class ColorOverLifetime {\n    get color() {\n        return this._color;\n    }\n    constructor(color) {\n        this._color = color;\n    }\n    cloneTo(destObject) {\n        this._color.cloneTo(destObject._color);\n        destObject.enable = this.enable;\n    }\n    clone() {\n        var destColor;\n        switch (this._color.type) {\n            case 0:\n                destColor = GradientColor.createByConstant(this._color.constant.clone());\n                break;\n            case 1:\n                destColor = GradientColor.createByGradient(this._color.gradient.clone());\n                break;\n            case 2:\n                destColor = GradientColor.createByRandomTwoConstant(this._color.constantMin.clone(), this._color.constantMax.clone());\n                break;\n            case 3:\n                destColor = GradientColor.createByRandomTwoGradient(this._color.gradientMin.clone(), this._color.gradientMax.clone());\n                break;\n        }\n        var destColorOverLifetime = new ColorOverLifetime(destColor);\n        destColorOverLifetime.enable = this.enable;\n        return destColorOverLifetime;\n    }\n}\n","export class Emission {\n    get emissionRate() {\n        return this._emissionRate;\n    }\n    set emissionRate(value) {\n        if (value < 0)\n            throw new Error(\"emissionRate value must large or equal than 0.\");\n        this._emissionRate = value;\n    }\n    get emissionRateOverDistance() {\n        return this._emissionRateOverDistance;\n    }\n    set emissionRateOverDistance(value) {\n        value = Math.max(0, value);\n        this._emissionRateOverDistance = value;\n    }\n    get destroyed() {\n        return this._destroyed;\n    }\n    constructor() {\n        this._emissionRate = 10;\n        this._emissionRateOverDistance = 0;\n        this._destroyed = false;\n        this._bursts = [];\n    }\n    destroy() {\n        this._bursts = null;\n        this._destroyed = true;\n    }\n    getBurstsCount() {\n        return this._bursts.length;\n    }\n    getBurstByIndex(index) {\n        return this._bursts[index];\n    }\n    addBurst(burst) {\n        var burstsCount = this._bursts.length;\n        if (burstsCount > 0)\n            for (var i = 0; i < burstsCount; i++) {\n                if (this._bursts[i].time > burst.time)\n                    this._bursts.splice(i, 0, burst);\n            }\n        this._bursts.push(burst);\n    }\n    removeBurst(burst) {\n        var index = this._bursts.indexOf(burst);\n        if (index !== -1) {\n            this._bursts.splice(index, 1);\n        }\n    }\n    removeBurstByIndex(index) {\n        this._bursts.splice(index, 1);\n    }\n    clearBurst() {\n        this._bursts.length = 0;\n    }\n    cloneTo(destObject) {\n        var destBursts = destObject._bursts;\n        destBursts.length = this._bursts.length;\n        for (var i = 0, n = this._bursts.length; i < n; i++) {\n            var destBurst = destBursts[i];\n            if (destBurst)\n                this._bursts[i].cloneTo(destBurst);\n            else\n                destBursts[i] = this._bursts[i].clone();\n        }\n        destObject._emissionRate = this._emissionRate;\n        destObject._emissionRateOverDistance = this._emissionRateOverDistance;\n        destObject.enable = this.enable;\n    }\n    clone() {\n        var destEmission = new Emission();\n        this.cloneTo(destEmission);\n        return destEmission;\n    }\n}\n","export class FrameOverTime {\n    static createByConstant(constant = 0) {\n        var rotationOverLifetime = new FrameOverTime();\n        rotationOverLifetime._type = 0;\n        rotationOverLifetime._constant = constant;\n        return rotationOverLifetime;\n    }\n    static createByOverTime(overTime) {\n        var rotationOverLifetime = new FrameOverTime();\n        rotationOverLifetime._type = 1;\n        rotationOverLifetime._overTime = overTime;\n        return rotationOverLifetime;\n    }\n    static createByRandomTwoConstant(constantMin = 0, constantMax = 0) {\n        var rotationOverLifetime = new FrameOverTime();\n        rotationOverLifetime._type = 2;\n        rotationOverLifetime._constantMin = constantMin;\n        rotationOverLifetime._constantMax = constantMax;\n        return rotationOverLifetime;\n    }\n    static createByRandomTwoOverTime(gradientFrameMin, gradientFrameMax) {\n        var rotationOverLifetime = new FrameOverTime();\n        rotationOverLifetime._type = 3;\n        rotationOverLifetime._overTimeMin = gradientFrameMin;\n        rotationOverLifetime._overTimeMax = gradientFrameMax;\n        return rotationOverLifetime;\n    }\n    get type() {\n        return this._type;\n    }\n    get constant() {\n        return this._constant;\n    }\n    get frameOverTimeData() {\n        return this._overTime;\n    }\n    get constantMin() {\n        return this._constantMin;\n    }\n    get constantMax() {\n        return this._constantMax;\n    }\n    get frameOverTimeDataMin() {\n        return this._overTimeMin;\n    }\n    get frameOverTimeDataMax() {\n        return this._overTimeMax;\n    }\n    constructor() {\n        this._type = 0;\n        this._constant = 0;\n        this._overTime = null;\n        this._constantMin = 0;\n        this._constantMax = 0;\n        this._overTimeMin = null;\n        this._overTimeMax = null;\n    }\n    cloneTo(destFrameOverTime) {\n        destFrameOverTime._type = this._type;\n        destFrameOverTime._constant = this._constant;\n        if (this._overTime) {\n            if (!destFrameOverTime._overTime)\n                destFrameOverTime._overTime = this._overTime.clone();\n            else\n                this._overTime.cloneTo(destFrameOverTime._overTime);\n        }\n        destFrameOverTime._constantMin = this._constantMin;\n        destFrameOverTime._constantMax = this._constantMax;\n        if (this._overTimeMin) {\n            if (!destFrameOverTime._overTimeMin)\n                destFrameOverTime._overTimeMin = this._overTimeMin.clone();\n            else\n                this._overTimeMin.cloneTo(destFrameOverTime._overTimeMin);\n        }\n        if (this._overTimeMax) {\n            if (!destFrameOverTime._overTimeMax)\n                destFrameOverTime._overTimeMax = this._overTimeMax.clone();\n            this._overTimeMax.cloneTo(destFrameOverTime._overTimeMax);\n        }\n    }\n    clone() {\n        var destFrameOverTime = new FrameOverTime();\n        this.cloneTo(destFrameOverTime);\n        return destFrameOverTime;\n    }\n}\n","import { GradientDataNumber } from \"../../common/GradientDataNumber\";\nexport class GradientAngularVelocity {\n    static createByConstant(constant) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 0;\n        gradientAngularVelocity._separateAxes = false;\n        gradientAngularVelocity._constant = constant;\n        return gradientAngularVelocity;\n    }\n    static createByConstantSeparate(separateConstant) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 0;\n        gradientAngularVelocity._separateAxes = true;\n        gradientAngularVelocity._constantSeparate = separateConstant;\n        return gradientAngularVelocity;\n    }\n    static createByGradient(gradient) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 1;\n        gradientAngularVelocity._separateAxes = false;\n        gradientAngularVelocity._gradient = gradient;\n        return gradientAngularVelocity;\n    }\n    static createByGradientSeparate(gradientX, gradientY, gradientZ) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 1;\n        gradientAngularVelocity._separateAxes = true;\n        gradientAngularVelocity._gradientX = gradientX;\n        gradientAngularVelocity._gradientY = gradientY;\n        gradientAngularVelocity._gradientZ = gradientZ;\n        return gradientAngularVelocity;\n    }\n    static createByRandomTwoConstant(constantMin, constantMax) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 2;\n        gradientAngularVelocity._separateAxes = false;\n        gradientAngularVelocity._constantMin = constantMin;\n        gradientAngularVelocity._constantMax = constantMax;\n        return gradientAngularVelocity;\n    }\n    static createByRandomTwoConstantSeparate(separateConstantMin, separateConstantMax) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 2;\n        gradientAngularVelocity._separateAxes = true;\n        gradientAngularVelocity._constantMinSeparate = separateConstantMin;\n        gradientAngularVelocity._constantMaxSeparate = separateConstantMax;\n        return gradientAngularVelocity;\n    }\n    static createByRandomTwoGradient(gradientMin, gradientMax) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 3;\n        gradientAngularVelocity._separateAxes = false;\n        gradientAngularVelocity._gradientMin = gradientMin;\n        gradientAngularVelocity._gradientMax = gradientMax;\n        return gradientAngularVelocity;\n    }\n    static createByRandomTwoGradientSeparate(gradientXMin, gradientXMax, gradientYMin, gradientYMax, gradientZMin, gradientZMax, gradientWMin, gradientWMax) {\n        var gradientAngularVelocity = new GradientAngularVelocity();\n        gradientAngularVelocity._type = 3;\n        gradientAngularVelocity._separateAxes = true;\n        gradientAngularVelocity._gradientXMin = gradientXMin;\n        gradientAngularVelocity._gradientXMax = gradientXMax;\n        gradientAngularVelocity._gradientYMin = gradientYMin;\n        gradientAngularVelocity._gradientYMax = gradientYMax;\n        gradientAngularVelocity._gradientZMin = gradientZMin;\n        gradientAngularVelocity._gradientZMax = gradientZMax;\n        gradientAngularVelocity._gradientWMin = gradientWMin;\n        gradientAngularVelocity._gradientWMax = gradientWMax;\n        return gradientAngularVelocity;\n    }\n    get _constantSeparate() {\n        return this.__constantSeparate;\n    }\n    set _constantSeparate(value) {\n        this.__constantSeparate = value.clone();\n        this._constantXGradientDdata = GradientDataNumber.createConstantData(value.x);\n        this._constantYGradientDdata = GradientDataNumber.createConstantData(value.y);\n        this._constantZGradientDdata = GradientDataNumber.createConstantData(value.z);\n    }\n    get _constant() {\n        return this.__constant;\n    }\n    set _constant(value) {\n        this.__constant = value;\n        this._constantGradientDdata = GradientDataNumber.createConstantData(value);\n    }\n    get _constantMin() {\n        return this.__constantMin;\n    }\n    set _constantMin(value) {\n        this.__constantMin = value;\n        this._constantMinGradientDdata = GradientDataNumber.createConstantData(value);\n    }\n    get _constantMax() {\n        return this.__constantMax;\n    }\n    set _constantMax(value) {\n        this.__constantMax = value;\n        this._constantMaxGradientDdata = GradientDataNumber.createConstantData(value);\n    }\n    get _constantMinSeparate() {\n        return this.__constantMinSeparate;\n    }\n    set _constantMinSeparate(value) {\n        this.__constantMinSeparate = value.clone();\n        this._constantXMinGradientDdata = GradientDataNumber.createConstantData(value.x);\n        this._constantYMinGradientDdata = GradientDataNumber.createConstantData(value.y);\n        this._constantZMinGradientDdata = GradientDataNumber.createConstantData(value.z);\n    }\n    get _constantMaxSeparate() {\n        return this.__constantMaxSeparate;\n    }\n    set _constantMaxSeparate(value) {\n        this.__constantMaxSeparate = value;\n        this._constantXMaxGradientDdata = GradientDataNumber.createConstantData(value.x);\n        this._constantYMaxGradientDdata = GradientDataNumber.createConstantData(value.y);\n        this._constantZMaxGradientDdata = GradientDataNumber.createConstantData(value.z);\n    }\n    get type() {\n        return this._type;\n    }\n    get separateAxes() {\n        return this._separateAxes;\n    }\n    get constant() {\n        return this._constant;\n    }\n    get constantSeparate() {\n        return this._constantSeparate;\n    }\n    get gradient() {\n        return this._gradient;\n    }\n    get gradientX() {\n        return this._gradientX;\n    }\n    get gradientY() {\n        return this._gradientY;\n    }\n    get gradientZ() {\n        return this._gradientZ;\n    }\n    get gradientW() {\n        return this._gradientW;\n    }\n    get constantMin() {\n        return this._constantMin;\n    }\n    get constantMax() {\n        return this._constantMax;\n    }\n    get constantMinSeparate() {\n        return this._constantMinSeparate;\n    }\n    get constantMaxSeparate() {\n        return this._constantMaxSeparate;\n    }\n    get gradientMin() {\n        return this._gradientMin;\n    }\n    get gradientMax() {\n        return this._gradientMax;\n    }\n    get gradientXMin() {\n        return this._gradientXMin;\n    }\n    get gradientXMax() {\n        return this._gradientXMax;\n    }\n    get gradientYMin() {\n        return this._gradientYMin;\n    }\n    get gradientYMax() {\n        return this._gradientYMax;\n    }\n    get gradientZMin() {\n        return this._gradientZMin;\n    }\n    get gradientZMax() {\n        return this._gradientZMax;\n    }\n    get gradientWMin() {\n        return this._gradientWMin;\n    }\n    get gradientWMax() {\n        return this._gradientWMax;\n    }\n    constructor() {\n        this._type = 0;\n        this._separateAxes = false;\n        this.__constantSeparate = null;\n        this._gradient = null;\n        this._gradientX = null;\n        this._gradientY = null;\n        this._gradientZ = null;\n        this._gradientW = null;\n        this._constantGradientDdata = null;\n        this._constantMinGradientDdata = null;\n        this._constantMaxGradientDdata = null;\n        this.__constant = 0;\n        this.__constantMin = 0;\n        this.__constantMax = 0;\n        this.__constantMinSeparate = null;\n        this.__constantMaxSeparate = null;\n        this._constantXGradientDdata = null;\n        this._constantYGradientDdata = null;\n        this._constantZGradientDdata = null;\n        this._constantXMinGradientDdata = null;\n        this._constantYMinGradientDdata = null;\n        this._constantZMinGradientDdata = null;\n        this._constantXMaxGradientDdata = null;\n        this._constantYMaxGradientDdata = null;\n        this._constantZMaxGradientDdata = null;\n        this._gradientMin = null;\n        this._gradientMax = null;\n        this._gradientXMin = null;\n        this._gradientXMax = null;\n        this._gradientYMin = null;\n        this._gradientYMax = null;\n        this._gradientZMin = null;\n        this._gradientZMax = null;\n        this._gradientWMin = null;\n        this._gradientWMax = null;\n    }\n    cloneTo(destObject) {\n        destObject._type = this._type;\n        destObject._separateAxes = this._separateAxes;\n        destObject._constant = this._constant;\n        this._constantSeparate.cloneTo(destObject._constantSeparate);\n        this._gradient.cloneTo(destObject._gradient);\n        this._gradientX.cloneTo(destObject._gradientX);\n        this._gradientY.cloneTo(destObject._gradientY);\n        this._gradientZ.cloneTo(destObject._gradientZ);\n        destObject._constantMin = this._constantMin;\n        destObject._constantMax = this._constantMax;\n        this._constantMinSeparate.cloneTo(destObject._constantMinSeparate);\n        this._constantMaxSeparate.cloneTo(destObject._constantMaxSeparate);\n        this._gradientMin.cloneTo(destObject._gradientMin);\n        this._gradientMax.cloneTo(destObject._gradientMax);\n        this._gradientXMin.cloneTo(destObject._gradientXMin);\n        this._gradientXMax.cloneTo(destObject._gradientXMax);\n        this._gradientYMin.cloneTo(destObject._gradientYMin);\n        this._gradientYMax.cloneTo(destObject._gradientYMax);\n        this._gradientZMin.cloneTo(destObject._gradientZMin);\n        this._gradientZMax.cloneTo(destObject._gradientZMax);\n    }\n    clone() {\n        var destGradientAngularVelocity = new GradientAngularVelocity();\n        this.cloneTo(destGradientAngularVelocity);\n        return destGradientAngularVelocity;\n    }\n}\n","export class GradientDataInt {\n    get gradientCount() {\n        return this._currentLength / 2;\n    }\n    constructor() {\n        this._currentLength = 0;\n        this._curveMin = 0;\n        this._curveMax = 1;\n        this._elements = new Float32Array(8);\n    }\n    _formatData() {\n        if (this._currentLength == 8)\n            return;\n        if (this._elements[this._currentLength - 2] !== 1) {\n            this._elements[this._currentLength] = 1;\n            this._elements[this._currentLength + 1] = this._elements[this._currentLength - 1];\n        }\n    }\n    add(key, value) {\n        if (this._currentLength < 8) {\n            if ((this._currentLength === 6) && ((key !== 1))) {\n                key = 1;\n                console.log(\"Warning:the forth key is  be force set to 1.\");\n            }\n            this._elements[this._currentLength++] = key;\n            this._elements[this._currentLength++] = value;\n        }\n        else {\n            console.log(\"Warning:data count must lessEqual than 4\");\n        }\n    }\n    cloneTo(destObject) {\n        destObject._currentLength = this._currentLength;\n        var destElements = destObject._elements;\n        for (var i = 0, n = this._elements.length; i < n; i++) {\n            destElements[i] = this._elements[i];\n        }\n    }\n    clone() {\n        var destGradientDataInt = new GradientDataInt();\n        this.cloneTo(destGradientDataInt);\n        return destGradientDataInt;\n    }\n}\n","export class GradientSize {\n    static createByGradient(gradient) {\n        var gradientSize = new GradientSize();\n        gradientSize._type = 0;\n        gradientSize._separateAxes = false;\n        gradientSize._gradient = gradient;\n        return gradientSize;\n    }\n    static createByGradientSeparate(gradientX, gradientY, gradientZ) {\n        var gradientSize = new GradientSize();\n        gradientSize._type = 0;\n        gradientSize._separateAxes = true;\n        gradientSize._gradientX = gradientX;\n        gradientSize._gradientY = gradientY;\n        gradientSize._gradientZ = gradientZ;\n        return gradientSize;\n    }\n    static createByRandomTwoConstant(constantMin, constantMax) {\n        var gradientSize = new GradientSize();\n        gradientSize._type = 1;\n        gradientSize._separateAxes = false;\n        gradientSize._constantMin = constantMin;\n        gradientSize._constantMax = constantMax;\n        return gradientSize;\n    }\n    static createByRandomTwoConstantSeparate(constantMinSeparate, constantMaxSeparate) {\n        var gradientSize = new GradientSize();\n        gradientSize._type = 1;\n        gradientSize._separateAxes = true;\n        gradientSize._constantMinSeparate = constantMinSeparate;\n        gradientSize._constantMaxSeparate = constantMaxSeparate;\n        return gradientSize;\n    }\n    static createByRandomTwoGradient(gradientMin, gradientMax) {\n        var gradientSize = new GradientSize();\n        gradientSize._type = 2;\n        gradientSize._separateAxes = false;\n        gradientSize._gradientMin = gradientMin;\n        gradientSize._gradientMax = gradientMax;\n        return gradientSize;\n    }\n    static createByRandomTwoGradientSeparate(gradientXMin, gradientXMax, gradientYMin, gradientYMax, gradientZMin, gradientZMax) {\n        var gradientSize = new GradientSize();\n        gradientSize._type = 2;\n        gradientSize._separateAxes = true;\n        gradientSize._gradientXMin = gradientXMin;\n        gradientSize._gradientXMax = gradientXMax;\n        gradientSize._gradientYMin = gradientYMin;\n        gradientSize._gradientYMax = gradientYMax;\n        gradientSize._gradientZMin = gradientZMin;\n        gradientSize._gradientZMax = gradientZMax;\n        return gradientSize;\n    }\n    get type() {\n        return this._type;\n    }\n    get separateAxes() {\n        return this._separateAxes;\n    }\n    get gradient() {\n        return this._gradient;\n    }\n    get gradientX() {\n        return this._gradientX;\n    }\n    get gradientY() {\n        return this._gradientY;\n    }\n    get gradientZ() {\n        return this._gradientZ;\n    }\n    get constantMin() {\n        return this._constantMin;\n    }\n    get constantMax() {\n        return this._constantMax;\n    }\n    get constantMinSeparate() {\n        return this._constantMinSeparate;\n    }\n    get constantMaxSeparate() {\n        return this._constantMaxSeparate;\n    }\n    get gradientMin() {\n        return this._gradientMin;\n    }\n    get gradientMax() {\n        return this._gradientMax;\n    }\n    get gradientXMin() {\n        return this._gradientXMin;\n    }\n    get gradientXMax() {\n        return this._gradientXMax;\n    }\n    get gradientYMin() {\n        return this._gradientYMin;\n    }\n    get gradientYMax() {\n        return this._gradientYMax;\n    }\n    get gradientZMin() {\n        return this._gradientZMin;\n    }\n    get gradientZMax() {\n        return this._gradientZMax;\n    }\n    constructor() {\n        this._type = 0;\n        this._separateAxes = false;\n        this._gradient = null;\n        this._gradientX = null;\n        this._gradientY = null;\n        this._gradientZ = null;\n        this._constantMin = 0;\n        this._constantMax = 0;\n        this._constantMinSeparate = null;\n        this._constantMaxSeparate = null;\n        this._gradientMin = null;\n        this._gradientMax = null;\n        this._gradientXMin = null;\n        this._gradientXMax = null;\n        this._gradientYMin = null;\n        this._gradientYMax = null;\n        this._gradientZMin = null;\n        this._gradientZMax = null;\n    }\n    getMaxSizeInGradient(meshMode = false) {\n        var i, n;\n        var maxSize = -Number.MAX_VALUE;\n        switch (this._type) {\n            case 0:\n                if (this._separateAxes) {\n                    for (i = 0, n = this._gradientX.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientX.getValueByIndex(i));\n                    for (i = 0, n = this._gradientY.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientY.getValueByIndex(i));\n                    if (meshMode) {\n                        for (i = 0, n = this._gradientZ.gradientCount; i < n; i++) {\n                            maxSize = Math.max(maxSize, this._gradientZ.getValueByIndex(i));\n                        }\n                    }\n                }\n                else {\n                    for (i = 0, n = this._gradient.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradient.getValueByIndex(i));\n                }\n                break;\n            case 1:\n                if (this._separateAxes) {\n                    maxSize = Math.max(this._constantMinSeparate.x, this._constantMaxSeparate.x);\n                    maxSize = Math.max(maxSize, this._constantMinSeparate.y);\n                    if (meshMode) {\n                        maxSize = maxSize = Math.max(maxSize, this._constantMaxSeparate.z);\n                    }\n                }\n                else {\n                    maxSize = Math.max(this._constantMin, this._constantMax);\n                }\n                break;\n            case 2:\n                if (this._separateAxes) {\n                    for (i = 0, n = this._gradientXMin.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientXMin.getValueByIndex(i));\n                    for (i = 0, n = this._gradientXMax.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientXMax.getValueByIndex(i));\n                    for (i = 0, n = this._gradientYMin.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientYMin.getValueByIndex(i));\n                    for (i = 0, n = this._gradientZMax.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientZMax.getValueByIndex(i));\n                    if (meshMode) {\n                        for (i = 0, n = this._gradientZMin.gradientCount; i < n; i++) {\n                            maxSize = Math.max(maxSize, this._gradientZMin.getValueByIndex(i));\n                        }\n                        for (i = 0, n = this._gradientZMax.gradientCount; i < n; i++) {\n                            maxSize = Math.max(maxSize, this._gradientZMax.getValueByIndex(i));\n                        }\n                    }\n                }\n                else {\n                    for (i = 0, n = this._gradientMin.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientMin.getValueByIndex(i));\n                    for (i = 0, n = this._gradientMax.gradientCount; i < n; i++)\n                        maxSize = Math.max(maxSize, this._gradientMax.getValueByIndex(i));\n                }\n                break;\n        }\n        return maxSize;\n    }\n    cloneTo(destObject) {\n        destObject._type = this._type;\n        destObject._separateAxes = this._separateAxes;\n        this._gradient.cloneTo(destObject._gradient);\n        this._gradientX.cloneTo(destObject._gradientX);\n        this._gradientY.cloneTo(destObject._gradientY);\n        this._gradientZ.cloneTo(destObject._gradientZ);\n        destObject._constantMin = this._constantMin;\n        destObject._constantMax = this._constantMax;\n        this._constantMinSeparate.cloneTo(destObject._constantMinSeparate);\n        this._constantMaxSeparate.cloneTo(destObject._constantMaxSeparate);\n        this._gradientMin.cloneTo(destObject._gradientMin);\n        this._gradientMax.cloneTo(destObject._gradientMax);\n        this._gradientXMin.cloneTo(destObject._gradientXMin);\n        this._gradientXMax.cloneTo(destObject._gradientXMax);\n        this._gradientYMin.cloneTo(destObject._gradientYMin);\n        this._gradientYMax.cloneTo(destObject._gradientYMax);\n        this._gradientZMin.cloneTo(destObject._gradientZMin);\n        this._gradientZMax.cloneTo(destObject._gradientZMax);\n    }\n    clone() {\n        var destGradientSize = new GradientSize();\n        this.cloneTo(destGradientSize);\n        return destGradientSize;\n    }\n}\n","import { GradientDataNumber } from \"../../common/GradientDataNumber\";\nexport class GradientVelocity {\n    static createByConstant(constant) {\n        var gradientVelocity = new GradientVelocity();\n        gradientVelocity._type = 0;\n        gradientVelocity._constant = constant;\n        gradientVelocity._gradientConstantXMin = GradientDataNumber.createConstantData(constant.x);\n        gradientVelocity._gradientConstantYMin = GradientDataNumber.createConstantData(constant.y);\n        gradientVelocity._gradientConstantZMin = GradientDataNumber.createConstantData(constant.z);\n        return gradientVelocity;\n    }\n    static createByGradient(gradientX, gradientY, gradientZ) {\n        var gradientVelocity = new GradientVelocity();\n        gradientVelocity._type = 1;\n        gradientVelocity._gradientX = gradientX;\n        gradientVelocity._gradientY = gradientY;\n        gradientVelocity._gradientZ = gradientZ;\n        return gradientVelocity;\n    }\n    static createByRandomTwoConstant(constantMin, constantMax) {\n        var gradientVelocity = new GradientVelocity();\n        gradientVelocity._type = 2;\n        gradientVelocity._constantMin = constantMin;\n        gradientVelocity._constantMax = constantMax;\n        gradientVelocity._gradientConstantXMin = GradientDataNumber.createConstantData(constantMin.x);\n        gradientVelocity._gradientConstantXMax = GradientDataNumber.createConstantData(constantMax.x);\n        gradientVelocity._gradientConstantYMin = GradientDataNumber.createConstantData(constantMin.y);\n        gradientVelocity._gradientConstantYMax = GradientDataNumber.createConstantData(constantMax.y);\n        gradientVelocity._gradientConstantZMin = GradientDataNumber.createConstantData(constantMin.z);\n        gradientVelocity._gradientConstantZMax = GradientDataNumber.createConstantData(constantMax.z);\n        return gradientVelocity;\n    }\n    static createByRandomTwoGradient(gradientXMin, gradientXMax, gradientYMin, gradientYMax, gradientZMin, gradientZMax) {\n        var gradientVelocity = new GradientVelocity();\n        gradientVelocity._type = 3;\n        gradientVelocity._gradientXMin = gradientXMin;\n        gradientVelocity._gradientXMax = gradientXMax;\n        gradientVelocity._gradientYMin = gradientYMin;\n        gradientVelocity._gradientYMax = gradientYMax;\n        gradientVelocity._gradientZMin = gradientZMin;\n        gradientVelocity._gradientZMax = gradientZMax;\n        return gradientVelocity;\n    }\n    get _constant() {\n        return this.__constant;\n    }\n    set _constant(value) {\n        this.__constant = value;\n        this._gradientConstantX = GradientDataNumber.createConstantData(value.x);\n        this._gradientConstantY = GradientDataNumber.createConstantData(value.y);\n        this._gradientConstantZ = GradientDataNumber.createConstantData(value.z);\n    }\n    get _constantMin() {\n        return this.__constantMin;\n    }\n    set _constantMin(value) {\n        this.__constantMin = value;\n        this._gradientConstantXMin = GradientDataNumber.createConstantData(value.x);\n        this._gradientConstantYMin = GradientDataNumber.createConstantData(value.y);\n        this._gradientConstantZMin = GradientDataNumber.createConstantData(value.z);\n    }\n    get _constantMax() {\n        return this.__constantMax;\n    }\n    set _constantMax(value) {\n        this.__constantMax = value;\n        this._gradientConstantXMax = GradientDataNumber.createConstantData(value.x);\n        this._gradientConstantYMax = GradientDataNumber.createConstantData(value.y);\n        this._gradientConstantZMax = GradientDataNumber.createConstantData(value.z);\n    }\n    get type() {\n        return this._type;\n    }\n    get constant() {\n        return this._constant;\n    }\n    get gradientX() {\n        return this._gradientX;\n    }\n    get gradientY() {\n        return this._gradientY;\n    }\n    get gradientZ() {\n        return this._gradientZ;\n    }\n    get constantMin() {\n        return this._constantMin;\n    }\n    get constantMax() {\n        return this._constantMax;\n    }\n    get gradientConstantX() {\n        return this._gradientConstantX;\n    }\n    get gradientConstantY() {\n        return this._gradientConstantY;\n    }\n    get gradientConstantZ() {\n        return this._gradientConstantZ;\n    }\n    get gradientConstantXMin() {\n        return this._gradientConstantXMin;\n    }\n    get gradientConstantXMax() {\n        return this._gradientConstantXMax;\n    }\n    get gradientConstantYMin() {\n        return this._gradientConstantYMin;\n    }\n    get gradientConstantYMax() {\n        return this._gradientConstantYMax;\n    }\n    get gradientConstantZMin() {\n        return this._gradientConstantZMin;\n    }\n    get gradientConstantZMax() {\n        return this._gradientConstantZMax;\n    }\n    get gradientXMin() {\n        return this._gradientXMin;\n    }\n    get gradientXMax() {\n        return this._gradientXMax;\n    }\n    get gradientYMin() {\n        return this._gradientYMin;\n    }\n    get gradientYMax() {\n        return this._gradientYMax;\n    }\n    get gradientZMin() {\n        return this._gradientZMin;\n    }\n    get gradientZMax() {\n        return this._gradientZMax;\n    }\n    constructor() {\n        this._type = 0;\n        this.__constant = null;\n        this.__constantMin = null;\n        this.__constantMax = null;\n        this._gradientConstantX = null;\n        this._gradientConstantY = null;\n        this._gradientConstantZ = null;\n        this._gradientConstantXMin = null;\n        this._gradientConstantXMax = null;\n        this._gradientConstantYMin = null;\n        this._gradientConstantYMax = null;\n        this._gradientConstantZMin = null;\n        this._gradientConstantZMax = null;\n        this._gradientX = null;\n        this._gradientY = null;\n        this._gradientZ = null;\n        this._gradientXMin = null;\n        this._gradientXMax = null;\n        this._gradientYMin = null;\n        this._gradientYMax = null;\n        this._gradientZMin = null;\n        this._gradientZMax = null;\n    }\n    cloneTo(destObject) {\n        destObject._type = this._type;\n        this._constant.cloneTo(destObject._constant);\n        this._gradientX.cloneTo(destObject._gradientX);\n        this._gradientY.cloneTo(destObject._gradientY);\n        this._gradientZ.cloneTo(destObject._gradientZ);\n        this._constantMin.cloneTo(destObject._constantMin);\n        this._constantMax.cloneTo(destObject._constantMax);\n        this._gradientXMin.cloneTo(destObject._gradientXMin);\n        this._gradientXMax.cloneTo(destObject._gradientXMax);\n        this._gradientYMin.cloneTo(destObject._gradientYMin);\n        this._gradientYMax.cloneTo(destObject._gradientYMax);\n        this._gradientZMin.cloneTo(destObject._gradientZMin);\n        this._gradientZMax.cloneTo(destObject._gradientZMax);\n    }\n    clone() {\n        var destGradientVelocity = new GradientVelocity();\n        this.cloneTo(destGradientVelocity);\n        return destGradientVelocity;\n    }\n}\n","import { GradientAngularVelocity } from \"./GradientAngularVelocity\";\nexport class RotationOverLifetime {\n    get angularVelocity() {\n        return this._angularVelocity;\n    }\n    constructor(angularVelocity) {\n        this._angularVelocity = angularVelocity;\n    }\n    cloneTo(destObject) {\n        this._angularVelocity.cloneTo(destObject._angularVelocity);\n        destObject.enable = this.enable;\n    }\n    clone() {\n        var destAngularVelocity;\n        switch (this._angularVelocity.type) {\n            case 0:\n                if (this._angularVelocity.separateAxes)\n                    destAngularVelocity = GradientAngularVelocity.createByConstantSeparate(this._angularVelocity.constantSeparate.clone());\n                else\n                    destAngularVelocity = GradientAngularVelocity.createByConstant(this._angularVelocity.constant);\n                break;\n            case 1:\n                if (this._angularVelocity.separateAxes)\n                    destAngularVelocity = GradientAngularVelocity.createByGradientSeparate(this._angularVelocity.gradientX.clone(), this._angularVelocity.gradientY.clone(), this._angularVelocity.gradientZ.clone());\n                else\n                    destAngularVelocity = GradientAngularVelocity.createByGradient(this._angularVelocity.gradient.clone());\n                break;\n            case 2:\n                if (this._angularVelocity.separateAxes)\n                    destAngularVelocity = GradientAngularVelocity.createByRandomTwoConstantSeparate(this._angularVelocity.constantMinSeparate.clone(), this._angularVelocity.constantMaxSeparate.clone());\n                else\n                    destAngularVelocity = GradientAngularVelocity.createByRandomTwoConstant(this._angularVelocity.constantMin, this._angularVelocity.constantMax);\n                break;\n            case 3:\n                if (this._angularVelocity.separateAxes)\n                    destAngularVelocity = GradientAngularVelocity.createByRandomTwoGradientSeparate(this._angularVelocity.gradientXMin.clone(), this._angularVelocity.gradientXMax.clone(), this._angularVelocity.gradientYMin.clone(), this._angularVelocity.gradientYMax.clone(), this._angularVelocity.gradientZMin.clone(), this._angularVelocity.gradientZMax.clone(), this._angularVelocity.gradientWMin.clone(), this._angularVelocity.gradientWMax.clone());\n                else\n                    destAngularVelocity = GradientAngularVelocity.createByRandomTwoGradient(this._angularVelocity.gradientMin.clone(), this._angularVelocity.gradientMax.clone());\n                break;\n        }\n        var destRotationOverLifetime = new RotationOverLifetime(destAngularVelocity);\n        destRotationOverLifetime.enable = this.enable;\n        return destRotationOverLifetime;\n    }\n}\n","import { BoundBox } from \"../../../../d3/math/BoundBox\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nexport var ParticleSystemShapeType;\n(function (ParticleSystemShapeType) {\n    ParticleSystemShapeType[ParticleSystemShapeType[\"Box\"] = 0] = \"Box\";\n    ParticleSystemShapeType[ParticleSystemShapeType[\"Circle\"] = 1] = \"Circle\";\n    ParticleSystemShapeType[ParticleSystemShapeType[\"Cone\"] = 2] = \"Cone\";\n    ParticleSystemShapeType[ParticleSystemShapeType[\"Hemisphere\"] = 3] = \"Hemisphere\";\n    ParticleSystemShapeType[ParticleSystemShapeType[\"Sphere\"] = 4] = \"Sphere\";\n})(ParticleSystemShapeType || (ParticleSystemShapeType = {}));\nexport class BaseShape {\n    constructor() {\n        this.enable = true;\n        this.randomDirection = 0;\n    }\n    _getShapeBoundBox(boundBox) {\n        throw new Error(\"BaseShape: must override it.\");\n    }\n    _getSpeedBoundBox(boundBox) {\n        throw new Error(\"BaseShape: must override it.\");\n    }\n    generatePositionAndDirection(position, direction, rand = null, randomSeeds = null) {\n        throw new Error(\"BaseShape: must override it.\");\n    }\n    _calculateProceduralBounds(boundBox, emitterPosScale, minMaxBounds) {\n        this._getShapeBoundBox(boundBox);\n        var min = boundBox.min;\n        var max = boundBox.max;\n        Vector3.multiply(min, emitterPosScale, min);\n        Vector3.multiply(max, emitterPosScale, max);\n        var speedBounds = new BoundBox(new Vector3(), new Vector3());\n        if (this.randomDirection) {\n            speedBounds.min = new Vector3(-1, -1, -1);\n            speedBounds.max = new Vector3(1, 1, 1);\n        }\n        else {\n            this._getSpeedBoundBox(speedBounds);\n        }\n        var maxSpeedBound = new BoundBox(new Vector3(), new Vector3());\n        var maxSpeedMin = maxSpeedBound.min;\n        var maxSpeedMax = maxSpeedBound.max;\n        Vector3.scale(speedBounds.min, minMaxBounds.y, maxSpeedMin);\n        Vector3.scale(speedBounds.max, minMaxBounds.y, maxSpeedMax);\n        Vector3.add(boundBox.min, maxSpeedMin, maxSpeedMin);\n        Vector3.add(boundBox.max, maxSpeedMax, maxSpeedMax);\n        Vector3.min(boundBox.min, maxSpeedMin, boundBox.min);\n        Vector3.max(boundBox.max, maxSpeedMin, boundBox.max);\n        var minSpeedBound = new BoundBox(new Vector3(), new Vector3());\n        var minSpeedMin = minSpeedBound.min;\n        var minSpeedMax = minSpeedBound.max;\n        Vector3.scale(speedBounds.min, minMaxBounds.x, minSpeedMin);\n        Vector3.scale(speedBounds.max, minMaxBounds.x, minSpeedMax);\n        Vector3.min(minSpeedBound.min, minSpeedMax, maxSpeedMin);\n        Vector3.max(minSpeedBound.min, minSpeedMax, maxSpeedMax);\n        Vector3.min(boundBox.min, maxSpeedMin, boundBox.min);\n        Vector3.max(boundBox.max, maxSpeedMin, boundBox.max);\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n    }\n    clone() {\n        var destShape = new BaseShape();\n        this.cloneTo(destShape);\n        return destShape;\n    }\n}\n","export class ShapeUtils {\n    static _randomPointUnitArcCircle(arc, out, rand = null) {\n        var angle;\n        if (rand)\n            angle = rand.getFloat() * arc;\n        else\n            angle = Math.random() * arc;\n        out.x = Math.cos(angle);\n        out.y = Math.sin(angle);\n    }\n    static _randomPointInsideUnitArcCircle(arc, out, rand = null) {\n        ShapeUtils._randomPointUnitArcCircle(arc, out, rand);\n        var range;\n        if (rand)\n            range = Math.pow(rand.getFloat(), 1.0 / 2.0);\n        else\n            range = Math.pow(Math.random(), 1.0 / 2.0);\n        out.x = out.x * range;\n        out.y = out.y * range;\n    }\n    static _randomPointUnitCircle(out, rand = null) {\n        var angle;\n        if (rand)\n            angle = rand.getFloat() * Math.PI * 2;\n        else\n            angle = Math.random() * Math.PI * 2;\n        out.x = Math.cos(angle);\n        out.y = Math.sin(angle);\n    }\n    static _randomPointInsideUnitCircle(out, rand = null) {\n        ShapeUtils._randomPointUnitCircle(out, rand);\n        var range;\n        if (rand)\n            range = Math.pow(rand.getFloat(), 1.0 / 2.0);\n        else\n            range = Math.pow(Math.random(), 1.0 / 2.0);\n        out.x = out.x * range;\n        out.y = out.y * range;\n    }\n    static _randomPointUnitSphere(out, rand = null) {\n        var z;\n        var a;\n        if (rand) {\n            z = out.z = rand.getFloat() * 2 - 1.0;\n            a = rand.getFloat() * Math.PI * 2;\n        }\n        else {\n            z = out.z = Math.random() * 2 - 1.0;\n            a = Math.random() * Math.PI * 2;\n        }\n        var r = Math.sqrt(1.0 - z * z);\n        out.x = r * Math.cos(a);\n        out.y = r * Math.sin(a);\n    }\n    static _randomPointInsideUnitSphere(out, rand = null) {\n        ShapeUtils._randomPointUnitSphere(out, rand);\n        var range;\n        if (rand)\n            range = Math.pow(rand.getFloat(), 1.0 / 3.0);\n        else\n            range = Math.pow(Math.random(), 1.0 / 3.0);\n        out.x = out.x * range;\n        out.y = out.y * range;\n        out.z = out.z * range;\n    }\n    static _randomPointInsideHalfUnitBox(out, rand = null) {\n        if (rand) {\n            out.x = (rand.getFloat() - 0.5);\n            out.y = (rand.getFloat() - 0.5);\n            out.z = (rand.getFloat() - 0.5);\n        }\n        else {\n            out.x = (Math.random() - 0.5);\n            out.y = (Math.random() - 0.5);\n            out.z = (Math.random() - 0.5);\n        }\n    }\n    constructor() {\n    }\n}\n","import { BaseShape, ParticleSystemShapeType } from \"./BaseShape\";\nimport { ShapeUtils } from \"./ShapeUtils\";\nexport class BoxShape extends BaseShape {\n    constructor() {\n        super();\n        this.shapeType = ParticleSystemShapeType.Box;\n        this.x = 1.0;\n        this.y = 1.0;\n        this.z = 1.0;\n    }\n    _getShapeBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = -this.x * 0.5;\n        min.y = -this.y * 0.5;\n        min.z = -this.z * 0.5;\n        var max = boundBox.max;\n        max.x = this.x * 0.5;\n        max.y = this.y * 0.5;\n        max.z = this.z * 0.5;\n    }\n    _getSpeedBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = 0.0;\n        min.y = 0.0;\n        min.z = 0.0;\n        var max = boundBox.max;\n        max.x = 0.0;\n        max.y = 1.0;\n        max.z = 0.0;\n    }\n    generatePositionAndDirection(position, direction, rand = null, randomSeeds = null) {\n        if (rand) {\n            rand.seed = randomSeeds[16];\n            ShapeUtils._randomPointInsideHalfUnitBox(position, rand);\n            randomSeeds[16] = rand.seed;\n        }\n        else {\n            ShapeUtils._randomPointInsideHalfUnitBox(position);\n        }\n        position.x = this.x * position.x;\n        position.y = this.y * position.y;\n        position.z = this.z * position.z;\n        if (this.randomDirection) {\n            if (rand) {\n                rand.seed = randomSeeds[17];\n                ShapeUtils._randomPointUnitSphere(direction, rand);\n                randomSeeds[17] = rand.seed;\n            }\n            else {\n                ShapeUtils._randomPointUnitSphere(direction);\n            }\n        }\n        else {\n            direction.x = 0.0;\n            direction.y = 0.0;\n            direction.z = 1.0;\n        }\n    }\n    cloneTo(destObject) {\n        super.cloneTo(destObject);\n        destObject.x = this.x;\n        destObject.y = this.y;\n        destObject.z = this.z;\n        destObject.randomDirection = this.randomDirection;\n    }\n    clone() {\n        var destShape = new BoxShape();\n        this.cloneTo(destShape);\n        return destShape;\n    }\n}\n","import { Vector2 } from \"../../../../maths/Vector2\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nimport { BaseShape, ParticleSystemShapeType } from \"./BaseShape\";\nimport { ShapeUtils } from \"./ShapeUtils\";\nexport class CircleShape extends BaseShape {\n    constructor() {\n        super();\n        this.shapeType = ParticleSystemShapeType.Circle;\n        this.radius = 1.0;\n        this.arc = 360.0 / 180.0 * Math.PI;\n        this.emitFromEdge = false;\n    }\n    get arcDEG() {\n        return this.arc * 180 / Math.PI;\n    }\n    set arcDEG(deg) {\n        this.arc = deg / 180 * Math.PI;\n    }\n    _getShapeBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = min.z = -this.radius;\n        min.y = 0;\n        var max = boundBox.max;\n        max.x = max.z = this.radius;\n        max.y = 0;\n    }\n    _getSpeedBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = min.y = -1;\n        min.z = 0;\n        var max = boundBox.max;\n        max.x = max.y = 1;\n        max.z = 0;\n    }\n    generatePositionAndDirection(position, direction, rand = null, randomSeeds = null) {\n        var positionPoint = CircleShape._tempPositionPoint;\n        if (rand) {\n            rand.seed = randomSeeds[16];\n            if (this.emitFromEdge)\n                ShapeUtils._randomPointUnitArcCircle(this.arc, CircleShape._tempPositionPoint, rand);\n            else\n                ShapeUtils._randomPointInsideUnitArcCircle(this.arc, CircleShape._tempPositionPoint, rand);\n            randomSeeds[16] = rand.seed;\n        }\n        else {\n            if (this.emitFromEdge)\n                ShapeUtils._randomPointUnitArcCircle(this.arc, CircleShape._tempPositionPoint);\n            else\n                ShapeUtils._randomPointInsideUnitArcCircle(this.arc, CircleShape._tempPositionPoint);\n        }\n        position.x = -positionPoint.x;\n        position.y = positionPoint.y;\n        position.z = 0;\n        Vector3.scale(position, this.radius, position);\n        if (this.randomDirection) {\n            if (rand) {\n                rand.seed = randomSeeds[17];\n                ShapeUtils._randomPointUnitSphere(direction, rand);\n                randomSeeds[17] = rand.seed;\n            }\n            else {\n                ShapeUtils._randomPointUnitSphere(direction);\n            }\n        }\n        else {\n            position.cloneTo(direction);\n        }\n    }\n    cloneTo(destObject) {\n        super.cloneTo(destObject);\n        destObject.radius = this.radius;\n        destObject.arc = this.arc;\n        destObject.emitFromEdge = this.emitFromEdge;\n        destObject.randomDirection = this.randomDirection;\n    }\n    clone() {\n        var destShape = new CircleShape();\n        this.cloneTo(destShape);\n        return destShape;\n    }\n}\nCircleShape._tempPositionPoint = new Vector2();\n","import { Vector2 } from \"../../../../maths/Vector2\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nimport { BaseShape, ParticleSystemShapeType } from \"./BaseShape\";\nimport { ShapeUtils } from \"./ShapeUtils\";\nexport class ConeShape extends BaseShape {\n    constructor() {\n        super();\n        this.shapeType = ParticleSystemShapeType.Cone;\n        this.angle = 25.0 / 180.0 * Math.PI;\n        this.radius = 1.0;\n        this.length = 5.0;\n        this.emitType = 0;\n    }\n    get angleDEG() {\n        return this.angle * 180 / Math.PI;\n    }\n    set angleDEG(deg) {\n        this.angle = deg / 180 * Math.PI;\n    }\n    _getShapeBoundBox(boundBox) {\n        const coneRadius2 = this.radius + this.length * Math.sin(this.angle);\n        const coneLength = this.length * Math.cos(this.angle);\n        var min = boundBox.min;\n        min.x = min.y = -coneRadius2;\n        min.z = 0;\n        var max = boundBox.max;\n        max.x = max.y = coneRadius2;\n        max.z = coneLength;\n    }\n    _getSpeedBoundBox(boundBox) {\n        const sinA = Math.sin(this.angle);\n        var min = boundBox.min;\n        min.x = min.y = -sinA;\n        min.z = 0;\n        var max = boundBox.max;\n        max.x = max.y = sinA;\n        max.z = 1;\n    }\n    generatePositionAndDirection(position, direction, rand = null, randomSeeds = null) {\n        var positionPointE = ConeShape._tempPositionPoint;\n        var positionX;\n        var positionY;\n        var directionPointE;\n        var dirCosA = Math.cos(this.angle);\n        var dirSinA = Math.sin(this.angle);\n        switch (this.emitType) {\n            case 0:\n                if (rand) {\n                    rand.seed = randomSeeds[16];\n                    ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint, rand);\n                    randomSeeds[16] = rand.seed;\n                }\n                else {\n                    ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint);\n                }\n                positionX = positionPointE.x;\n                positionY = positionPointE.y;\n                position.x = positionX * this.radius;\n                position.y = positionY * this.radius;\n                position.z = 0;\n                if (this.randomDirection) {\n                    if (rand) {\n                        rand.seed = randomSeeds[17];\n                        ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint, rand);\n                        randomSeeds[17] = rand.seed;\n                    }\n                    else {\n                        ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint);\n                    }\n                    directionPointE = ConeShape._tempDirectionPoint;\n                    direction.x = directionPointE.x * dirSinA;\n                    direction.y = directionPointE.y * dirSinA;\n                }\n                else {\n                    direction.x = positionX * dirSinA;\n                    direction.y = positionY * dirSinA;\n                }\n                direction.z = dirCosA;\n                break;\n            case 1:\n                if (rand) {\n                    rand.seed = randomSeeds[16];\n                    ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint, rand);\n                    randomSeeds[16] = rand.seed;\n                }\n                else {\n                    ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint);\n                }\n                positionX = positionPointE.x;\n                positionY = positionPointE.y;\n                position.x = positionX * this.radius;\n                position.y = positionY * this.radius;\n                position.z = 0;\n                if (this.randomDirection) {\n                    if (rand) {\n                        rand.seed = randomSeeds[17];\n                        ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint, rand);\n                        randomSeeds[17] = rand.seed;\n                    }\n                    else {\n                        ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempDirectionPoint);\n                    }\n                    directionPointE = ConeShape._tempDirectionPoint;\n                    direction.x = directionPointE.x * dirSinA;\n                    direction.y = directionPointE.y * dirSinA;\n                }\n                else {\n                    direction.x = positionX * dirSinA;\n                    direction.y = positionY * dirSinA;\n                }\n                direction.z = dirCosA;\n                break;\n            case 2:\n                if (rand) {\n                    rand.seed = randomSeeds[16];\n                    ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint, rand);\n                }\n                else {\n                    ShapeUtils._randomPointInsideUnitCircle(ConeShape._tempPositionPoint);\n                }\n                positionX = positionPointE.x;\n                positionY = positionPointE.y;\n                position.x = positionX * this.radius;\n                position.y = positionY * this.radius;\n                position.z = 0;\n                direction.x = positionX * dirSinA;\n                direction.y = positionY * dirSinA;\n                direction.z = dirCosA;\n                Vector3.normalize(direction, direction);\n                if (rand) {\n                    Vector3.scale(direction, this.length * rand.getFloat(), direction);\n                    randomSeeds[16] = rand.seed;\n                }\n                else {\n                    Vector3.scale(direction, this.length * Math.random(), direction);\n                }\n                Vector3.add(position, direction, position);\n                if (this.randomDirection) {\n                    if (rand) {\n                        rand.seed = randomSeeds[17];\n                        ShapeUtils._randomPointUnitSphere(direction, rand);\n                        randomSeeds[17] = rand.seed;\n                    }\n                    else {\n                        ShapeUtils._randomPointUnitSphere(direction);\n                    }\n                }\n                break;\n            case 3:\n                if (rand) {\n                    rand.seed = randomSeeds[16];\n                    ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint, rand);\n                }\n                else {\n                    ShapeUtils._randomPointUnitCircle(ConeShape._tempPositionPoint);\n                }\n                positionX = positionPointE.x;\n                positionY = positionPointE.y;\n                position.x = positionX * this.radius;\n                position.y = positionY * this.radius;\n                position.z = 0;\n                direction.x = positionX * dirSinA;\n                direction.y = positionY * dirSinA;\n                direction.z = dirCosA;\n                Vector3.normalize(direction, direction);\n                if (rand) {\n                    Vector3.scale(direction, this.length * rand.getFloat(), direction);\n                    randomSeeds[16] = rand.seed;\n                }\n                else {\n                    Vector3.scale(direction, this.length * Math.random(), direction);\n                }\n                Vector3.add(position, direction, position);\n                if (this.randomDirection) {\n                    if (rand) {\n                        rand.seed = randomSeeds[17];\n                        ShapeUtils._randomPointUnitSphere(direction, rand);\n                        randomSeeds[17] = rand.seed;\n                    }\n                    else {\n                        ShapeUtils._randomPointUnitSphere(direction);\n                    }\n                }\n                break;\n            default:\n                throw new Error(\"ConeShape:emitType is invalid.\");\n        }\n    }\n    cloneTo(destObject) {\n        super.cloneTo(destObject);\n        destObject.angle = this.angle;\n        destObject.radius = this.radius;\n        destObject.length = this.length;\n        destObject.emitType = this.emitType;\n        destObject.randomDirection = this.randomDirection;\n    }\n    clone() {\n        var destShape = new ConeShape();\n        this.cloneTo(destShape);\n        return destShape;\n    }\n}\nConeShape._tempPositionPoint = new Vector2();\nConeShape._tempDirectionPoint = new Vector2();\n","import { Vector3 } from \"../../../../maths/Vector3\";\nimport { BaseShape, ParticleSystemShapeType } from \"./BaseShape\";\nimport { ShapeUtils } from \"./ShapeUtils\";\nexport class HemisphereShape extends BaseShape {\n    constructor() {\n        super();\n        this.shapeType = ParticleSystemShapeType.Hemisphere;\n        this.radius = 1.0;\n        this.emitFromShell = false;\n    }\n    _getShapeBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = min.y = min.z = -this.radius;\n        var max = boundBox.max;\n        max.x = max.y = this.radius;\n        max.z = 0;\n    }\n    _getSpeedBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = min.y = -1;\n        min.z = 0;\n        var max = boundBox.max;\n        max.x = max.y = max.z = 1;\n    }\n    generatePositionAndDirection(position, direction, rand = null, randomSeeds = null) {\n        if (rand) {\n            rand.seed = randomSeeds[16];\n            if (this.emitFromShell)\n                ShapeUtils._randomPointUnitSphere(position, rand);\n            else\n                ShapeUtils._randomPointInsideUnitSphere(position, rand);\n            randomSeeds[16] = rand.seed;\n        }\n        else {\n            if (this.emitFromShell)\n                ShapeUtils._randomPointUnitSphere(position);\n            else\n                ShapeUtils._randomPointInsideUnitSphere(position);\n        }\n        Vector3.scale(position, this.radius, position);\n        var z = position.z;\n        (z < 0.0) && (position.z = z * -1.0);\n        if (this.randomDirection) {\n            if (rand) {\n                rand.seed = randomSeeds[17];\n                ShapeUtils._randomPointUnitSphere(direction, rand);\n                randomSeeds[17] = rand.seed;\n            }\n            else {\n                ShapeUtils._randomPointUnitSphere(direction);\n            }\n        }\n        else {\n            position.cloneTo(direction);\n        }\n    }\n    cloneTo(destObject) {\n        super.cloneTo(destObject);\n        destObject.radius = this.radius;\n        destObject.emitFromShell = this.emitFromShell;\n        destObject.randomDirection = this.randomDirection;\n    }\n    clone() {\n        var destShape = new HemisphereShape();\n        this.cloneTo(destShape);\n        return destShape;\n    }\n}\n","import { Vector3 } from \"../../../../maths/Vector3\";\nimport { BaseShape, ParticleSystemShapeType } from \"./BaseShape\";\nimport { ShapeUtils } from \"./ShapeUtils\";\nexport class SphereShape extends BaseShape {\n    constructor() {\n        super();\n        this.shapeType = ParticleSystemShapeType.Sphere;\n        this.radius = 1.0;\n        this.emitFromShell = false;\n    }\n    _getShapeBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = min.y = min.z = -this.radius;\n        var max = boundBox.max;\n        max.x = max.y = max.z = this.radius;\n    }\n    _getSpeedBoundBox(boundBox) {\n        var min = boundBox.min;\n        min.x = min.y = min.z = -1;\n        var max = boundBox.max;\n        max.x = max.y = max.z = 1;\n    }\n    generatePositionAndDirection(position, direction, rand = null, randomSeeds = null) {\n        if (rand) {\n            rand.seed = randomSeeds[16];\n            if (this.emitFromShell)\n                ShapeUtils._randomPointUnitSphere(position, rand);\n            else\n                ShapeUtils._randomPointInsideUnitSphere(position, rand);\n            randomSeeds[16] = rand.seed;\n        }\n        else {\n            if (this.emitFromShell)\n                ShapeUtils._randomPointUnitSphere(position);\n            else\n                ShapeUtils._randomPointInsideUnitSphere(position);\n        }\n        Vector3.scale(position, this.radius, position);\n        if (this.randomDirection) {\n            if (rand) {\n                rand.seed = randomSeeds[17];\n                ShapeUtils._randomPointUnitSphere(direction, rand);\n                randomSeeds[17] = rand.seed;\n            }\n            else {\n                ShapeUtils._randomPointUnitSphere(direction);\n            }\n        }\n        else {\n            position.cloneTo(direction);\n        }\n    }\n    cloneTo(destObject) {\n        super.cloneTo(destObject);\n        destObject.radius = this.radius;\n        destObject.emitFromShell = this.emitFromShell;\n        destObject.randomDirection = this.randomDirection;\n    }\n    clone() {\n        var destShape = new SphereShape();\n        this.cloneTo(destShape);\n        return destShape;\n    }\n}\n","import { GradientSize } from \"./GradientSize\";\nexport class SizeOverLifetime {\n    get size() {\n        return this._size;\n    }\n    constructor(size) {\n        this._size = size;\n    }\n    cloneTo(destObject) {\n        this._size.cloneTo(destObject._size);\n        destObject.enable = this.enable;\n    }\n    clone() {\n        var destSize;\n        switch (this._size.type) {\n            case 0:\n                if (this._size.separateAxes)\n                    destSize = GradientSize.createByGradientSeparate(this._size.gradientX.clone(), this._size.gradientY.clone(), this._size.gradientZ.clone());\n                else\n                    destSize = GradientSize.createByGradient(this._size.gradient.clone());\n                break;\n            case 1:\n                if (this._size.separateAxes)\n                    destSize = GradientSize.createByRandomTwoConstantSeparate(this._size.constantMinSeparate.clone(), this._size.constantMaxSeparate.clone());\n                else\n                    destSize = GradientSize.createByRandomTwoConstant(this._size.constantMin, this._size.constantMax);\n                break;\n            case 2:\n                if (this._size.separateAxes)\n                    destSize = GradientSize.createByRandomTwoGradientSeparate(this._size.gradientXMin.clone(), this._size.gradientYMin.clone(), this._size.gradientZMin.clone(), this._size.gradientXMax.clone(), this._size.gradientYMax.clone(), this._size.gradientZMax.clone());\n                else\n                    destSize = GradientSize.createByRandomTwoGradient(this._size.gradientMin.clone(), this._size.gradientMax.clone());\n                break;\n        }\n        var destSizeOverLifetime = new SizeOverLifetime(destSize);\n        destSizeOverLifetime.enable = this.enable;\n        return destSizeOverLifetime;\n    }\n}\n","export class StartFrame {\n    static createByConstant(constant = 0) {\n        var rotationOverLifetime = new StartFrame();\n        rotationOverLifetime._type = 0;\n        rotationOverLifetime._constant = constant;\n        return rotationOverLifetime;\n    }\n    static createByRandomTwoConstant(constantMin = 0, constantMax = 0) {\n        var rotationOverLifetime = new StartFrame();\n        rotationOverLifetime._type = 1;\n        rotationOverLifetime._constantMin = constantMin;\n        rotationOverLifetime._constantMax = constantMax;\n        return rotationOverLifetime;\n    }\n    get type() {\n        return this._type;\n    }\n    get constant() {\n        return this._constant;\n    }\n    get constantMin() {\n        return this._constantMin;\n    }\n    get constantMax() {\n        return this._constantMax;\n    }\n    constructor() {\n        this._type = 0;\n        this._constant = 0;\n        this._constantMin = 0;\n        this._constantMax = 0;\n    }\n    cloneTo(destObject) {\n        destObject._type = this._type;\n        destObject._constant = this._constant;\n        destObject._constantMin = this._constantMin;\n        destObject._constantMax = this._constantMax;\n    }\n    clone() {\n        var destStartFrame = new StartFrame();\n        this.cloneTo(destStartFrame);\n        return destStartFrame;\n    }\n}\n","import { Vector2 } from \"../../../maths/Vector2\";\nimport { FrameOverTime } from \"./FrameOverTime\";\nimport { StartFrame } from \"./StartFrame\";\nexport class TextureSheetAnimation {\n    get frame() {\n        return this._frame;\n    }\n    get startFrame() {\n        return this._startFrame;\n    }\n    constructor(frame, startFrame) {\n        this.type = 0;\n        this.randomRow = false;\n        this.rowIndex = 0;\n        this.cycles = 0;\n        this.enableUVChannels = 0;\n        this.enable = false;\n        this.tiles = new Vector2(1, 1);\n        this.type = 0;\n        this.randomRow = true;\n        this.rowIndex = 0;\n        this.cycles = 1;\n        this.enableUVChannels = 1;\n        this._frame = frame;\n        this._startFrame = startFrame;\n    }\n    cloneTo(destObject) {\n        this.tiles.cloneTo(destObject.tiles);\n        destObject.type = this.type;\n        destObject.randomRow = this.randomRow;\n        destObject.rowIndex = this.rowIndex;\n        destObject.cycles = this.cycles;\n        destObject.enableUVChannels = this.enableUVChannels;\n        destObject.enable = this.enable;\n        this._frame.cloneTo(destObject._frame);\n        this._startFrame.cloneTo(destObject._startFrame);\n    }\n    clone() {\n        var destFrame;\n        switch (this._frame.type) {\n            case 0:\n                destFrame = FrameOverTime.createByConstant(this._frame.constant);\n                break;\n            case 1:\n                destFrame = FrameOverTime.createByOverTime(this._frame.frameOverTimeData.clone());\n                break;\n            case 2:\n                destFrame = FrameOverTime.createByRandomTwoConstant(this._frame.constantMin, this._frame.constantMax);\n                break;\n            case 3:\n                destFrame = FrameOverTime.createByRandomTwoOverTime(this._frame.frameOverTimeDataMin.clone(), this._frame.frameOverTimeDataMax.clone());\n                break;\n        }\n        var destStartFrame;\n        switch (this._startFrame.type) {\n            case 0:\n                destStartFrame = StartFrame.createByConstant(this._startFrame.constant);\n                break;\n            case 1:\n                destStartFrame = StartFrame.createByRandomTwoConstant(this._startFrame.constantMin, this._startFrame.constantMax);\n                break;\n        }\n        var destTextureSheetAnimation = new TextureSheetAnimation(destFrame, destStartFrame);\n        this.cloneTo(destTextureSheetAnimation);\n        return destTextureSheetAnimation;\n    }\n}\n","import { GradientVelocity } from \"./GradientVelocity\";\nexport class VelocityOverLifetime {\n    get velocity() {\n        return this._velocity;\n    }\n    constructor(velocity) {\n        this.enable = false;\n        this.space = 0;\n        this._velocity = velocity;\n    }\n    cloneTo(destObject) {\n        this._velocity.cloneTo(destObject._velocity);\n        destObject.enable = this.enable;\n        destObject.space = this.space;\n    }\n    clone() {\n        var destVelocity;\n        switch (this._velocity.type) {\n            case 0:\n                destVelocity = GradientVelocity.createByConstant(this._velocity.constant.clone());\n                break;\n            case 1:\n                destVelocity = GradientVelocity.createByGradient(this._velocity.gradientX.clone(), this._velocity.gradientY.clone(), this._velocity.gradientZ.clone());\n                break;\n            case 2:\n                destVelocity = GradientVelocity.createByRandomTwoConstant(this._velocity.constantMin.clone(), this._velocity.constantMax.clone());\n                break;\n            case 3:\n                destVelocity = GradientVelocity.createByRandomTwoGradient(this._velocity.gradientXMin.clone(), this._velocity.gradientXMax.clone(), this._velocity.gradientYMin.clone(), this._velocity.gradientYMax.clone(), this._velocity.gradientZMin.clone(), this._velocity.gradientZMax.clone());\n                break;\n        }\n        var destVelocityOverLifetime = new VelocityOverLifetime(destVelocity);\n        destVelocityOverLifetime.enable = this.enable;\n        destVelocityOverLifetime.space = this.space;\n        return destVelocityOverLifetime;\n    }\n}\n","#define SHADER_NAME ParticleVS\n\n#include \"Camera.glsl\";\n#include \"particleShuriKenSpriteVS.glsl\";\n#include \"Math.glsl\";\n#include \"MathGradient.glsl\";\n#include \"Color.glsl\";\n#include \"Scene.glsl\"\n#include \"SceneFogInput.glsl\"\n\n\n#ifdef RENDERMODE_MESH\nvarying vec4 v_MeshColor;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\n//修改这里剔除没有用到的光照函数，增加粒子的编译速度\nvec2 TransformUV(vec2 texcoord, vec4 tilingOffset)\n{\n    vec2 transTexcoord = vec2(texcoord.x, texcoord.y - 1.0) * tilingOffset.xy + vec2(tilingOffset.z, -tilingOffset.w);\n    transTexcoord.y += 1.0;\n    return transTexcoord;\n}\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\nvec3 computeParticleLifeVelocity(in float normalizedAge)\n{\n    vec3 outLifeVelocity;\n    #ifdef VELOCITYOVERLIFETIMECONSTANT\n    \toutLifeVelocity = u_VOLVelocityConst;\n    #endif\n    #ifdef VELOCITYOVERLIFETIMECURVE\n    \toutLifeVelocity = vec3(getCurValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t\tgetCurValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t\tgetCurValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge));\n    #endif\n    #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n    \toutLifeVelocity = mix(u_VOLVelocityConst,\n\t\t\tu_VOLVelocityConstMax,\n\t\t\tvec3(a_Random1.y, a_Random1.z, a_Random1.w));\n    #endif\n\t#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n    \toutLifeVelocity = vec3(\n\t\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t\t\tgetCurValueFromGradientFloat(u_VOLVelocityGradientMaxX, normalizedAge),\n\t\t\ta_Random1.y),\n\t\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t\t\tgetCurValueFromGradientFloat(u_VOLVelocityGradientMaxY, normalizedAge),\n\t\t\ta_Random1.z),\n\t\tmix(getCurValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge),\n\t\t\tgetCurValueFromGradientFloat(u_VOLVelocityGradientMaxZ, normalizedAge),\n\t\t\ta_Random1.w));\n\t#endif\n\n    return outLifeVelocity;\n}\n#endif\n\n// drag\nvec3 getStartPosition(vec3 startVelocity, float age, vec3 dragData)\n{\n    vec3 startPosition;\n    float lasttime = min(startVelocity.x / dragData.x, age);\n    startPosition = lasttime * (startVelocity - 0.5 * dragData * lasttime);\n    return startPosition;\n}\n\nvec3 computeParticlePosition(in vec3 startVelocity, in vec3 lifeVelocity, in float age, in float normalizedAge, vec3 gravityVelocity, vec4 worldRotation, vec3 dragData)\n{\n    vec3 startPosition = getStartPosition(startVelocity, age, dragData);\n    vec3 lifePosition;\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n    \n\t#ifdef VELOCITYOVERLIFETIMECONSTANT\n    \tlifePosition = lifeVelocity * age;\n    #endif\n\n    #ifdef VELOCITYOVERLIFETIMECURVE\n\t\tlifePosition = vec3(getTotalValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge));\n    #endif\n\n    #ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n    \tlifePosition = lifeVelocity * age;\n    #endif\n\n    #ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n\t\tlifePosition = vec3(\n\t\tmix(\n\t\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientX, normalizedAge),\n\t\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientMaxX, normalizedAge),\n\t\t\ta_Random1.y),\n\t\tmix(\n\t\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientY, normalizedAge),\n\t\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientMaxY, normalizedAge),\n\t\t\ta_Random1.z),\n\t\tmix(\n\t\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientZ, normalizedAge),\n\t\t\tgetTotalValueFromGradientFloat(u_VOLVelocityGradientMaxZ, normalizedAge),\n\t\t\ta_Random1.w));\n    #endif\n\n    vec3 finalPosition;\n    if (u_VOLSpaceType == 0)\n\t{\n\t    if (u_ScalingMode != 2)\n\t\tfinalPosition = rotationByQuaternions(\n\t\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition + lifePosition),\n\t\t    worldRotation);\n\t    else\n\t\tfinalPosition = rotationByQuaternions(\n\t\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition + lifePosition,\n\t\t    worldRotation);\n\t}\n    else\n\t{\n\t    if (u_ScalingMode != 2)\n\t\tfinalPosition = rotationByQuaternions(\n\t\t\t\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition),\n\t\t\t\t    worldRotation)\n\t\t    + lifePosition;\n\t    else\n\t\tfinalPosition = rotationByQuaternions(\n\t\t\t\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition,\n\t\t\t\t    worldRotation)\n\t\t    + lifePosition;\n\t}\n#else\n    // startPosition = startVelocity * age;\n    vec3 finalPosition;\n    if (u_ScalingMode != 2)\n\tfinalPosition = rotationByQuaternions(\n\t    u_PositionScale * (a_ShapePositionStartLifeTime.xyz + startPosition),\n\t    worldRotation);\n    else\n\tfinalPosition = rotationByQuaternions(\n\t    u_PositionScale * a_ShapePositionStartLifeTime.xyz + startPosition,\n\t    worldRotation);\n#endif\n\n    if (u_SimulationSpace == 0)\n\tfinalPosition = finalPosition + a_SimulationWorldPostion;\n    else if (u_SimulationSpace == 1)\n\tfinalPosition = finalPosition + u_WorldPosition;\n\n    finalPosition += 0.5 * gravityVelocity * age;\n\n    return finalPosition;\n}\n\nvec4 computeParticleColor(in vec4 color, in float normalizedAge)\n{\n#ifdef COLOROVERLIFETIME\n    color *= getColorFromGradient(u_ColorOverLifeGradientAlphas,\n\tu_ColorOverLifeGradientColors,\n\tnormalizedAge, u_ColorOverLifeGradientRanges);\n#endif\n\n#ifdef RANDOMCOLOROVERLIFETIME\n    color *= mix(getColorFromGradient(u_ColorOverLifeGradientAlphas,\n\t\t     u_ColorOverLifeGradientColors,\n\t\t     normalizedAge, u_ColorOverLifeGradientRanges),\n\tgetColorFromGradient(u_MaxColorOverLifeGradientAlphas,\n\t    u_MaxColorOverLifeGradientColors,\n\t    normalizedAge, u_MaxColorOverLifeGradientRanges),\n\ta_Random0.y);\n#endif\n    return color;\n}\n\nvec2 computeParticleSizeBillbard(in vec2 size, in float normalizedAge)\n{\n#ifdef SIZEOVERLIFETIMECURVE\n    size *= getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge);\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\n    size *= mix(getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientMax, normalizedAge),\n\ta_Random0.z);\n#endif\n#ifdef SIZEOVERLIFETIMECURVESEPERATE\n    size *= vec2(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\tgetCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge));\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n    size *= vec2(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\t\t     getCurValueFromGradientFloat(u_SOLSizeGradientMaxX, normalizedAge),\n\t\t     a_Random0.z),\n\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\t    getCurValueFromGradientFloat(u_SOLSizeGradientMaxY, normalizedAge),\n\t    a_Random0.z));\n#endif\n    return size;\n}\n\n#ifdef RENDERMODE_MESH\nvec3 computeParticleSizeMesh(in vec3 size, in float normalizedAge)\n{\n\t#ifdef SIZEOVERLIFETIMECURVE\n    \tsize *= getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge);\n    #endif\n    #ifdef SIZEOVERLIFETIMERANDOMCURVES\n    \tsize *= mix(getCurValueFromGradientFloat(u_SOLSizeGradient, normalizedAge),\n\t\t\t\t\tgetCurValueFromGradientFloat(u_SOLSizeGradientMax, normalizedAge),\n\t\t\t\t\ta_Random0.z);\n    #endif\n \t#ifdef SIZEOVERLIFETIMECURVESEPERATE\n\t\tsize *= vec3(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\t\tgetCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\t\tgetCurValueFromGradientFloat(u_SOLSizeGradientZ, normalizedAge));\n    #endif\n    #ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n    \tsize *= vec3(mix(getCurValueFromGradientFloat(u_SOLSizeGradientX, normalizedAge),\n\t\t\t     getCurValueFromGradientFloat(u_SOLSizeGradientMaxX, normalizedAge),\n\t\t    \t a_Random0.z),\n\t\t\t\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientY, normalizedAge),\n\t\t\t\t\tgetCurValueFromGradientFloat(u_SOLSizeGradientMaxY, normalizedAge),\n\t\t\t\t\ta_Random0.z),\n\t\t\t\tmix(getCurValueFromGradientFloat(u_SOLSizeGradientZ, normalizedAge),\n\t\t\t\t\tgetCurValueFromGradientFloat(u_SOLSizeGradientMaxZ, normalizedAge),\n\t\t\t\t\ta_Random0.z));\n    #endif\n\t\n    return size;\n}\n#endif\n\nfloat computeParticleRotationFloat(in float rotation,\n    in float age,\n    in float normalizedAge)\n{\n#ifdef ROTATIONOVERLIFETIME\n    #ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\tfloat ageRot = u_ROLAngularVelocityConst * age;\n\t\trotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMECURVE\n    \trotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge);\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\tfloat ageRot = mix(u_ROLAngularVelocityConst, u_ROLAngularVelocityConstMax, a_Random0.w) * age;\n\t\trotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\trotation += mix(\n\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge),\n\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,\n\t\t\tnormalizedAge),\n\t\ta_Random0.w);\n    #endif\n#endif\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n    #ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\tfloat ageRot = u_ROLAngularVelocityConstSeprarate.z * age;\n\t\trotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMECURVE\n\t\trotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\tnormalizedAge);\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\tfloat ageRot = mix(u_ROLAngularVelocityConstSeprarate.z,\n\t\t\t\tu_ROLAngularVelocityConstMaxSeprarate.z,\n\t\t\t\ta_Random0.w)\n\t\t* age;\n\t\trotation += ageRot;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\trotation += mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\t\t\tnormalizedAge),\n\t\tgetTotalValueFromGradientFloat(\n\t\t\tu_ROLAngularVelocityGradientMaxZ, normalizedAge),\n\t\ta_Random0.w);\n    #endif\n#endif\n    return rotation;\n}\n\n#if defined(RENDERMODE_MESH) && (defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE))\nvec3 computeParticleRotationVec3(in vec3 rotation,\n    in float age,\n    in float normalizedAge)\n{\n    #ifdef ROTATIONOVERLIFETIME\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tfloat ageRot = u_ROLAngularVelocityConst * age;\n\t\t\trotation += ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation += getTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge);\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tfloat ageRot = mix(u_ROLAngularVelocityConst, u_ROLAngularVelocityConstMax, a_Random0.w) * age;\n\t\t\trotation += ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation += mix(\n\t\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradient, normalizedAge),\n\t\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMax,\n\t\t\t\tnormalizedAge),\n\t\t\ta_Random0.w);\n\t\t#endif\n    #endif\n    #ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t#ifdef ROTATIONOVERLIFETIMECONSTANT\n\t\t\tvec3 ageRot = u_ROLAngularVelocityConstSeprarate * age;\n\t\t\trotation += ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMECURVE\n\t\t\trotation += vec3(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,\n\t\t\t\t\tnormalizedAge),\n\t\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,\n\t\t\t\tnormalizedAge),\n\t\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\t\t\tnormalizedAge));\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n\t\t\tvec3 ageRot = mix(u_ROLAngularVelocityConstSeprarate,\n\t\t\t\t\tu_ROLAngularVelocityConstMaxSeprarate,\n\t\t\t\t\ta_Random0.w)\n\t\t\t* age;\n\t\t\trotation += ageRot;\n\t\t#endif\n\t\t#ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n\t\t\trotation += vec3(mix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientX,\n\t\t\t\t\t\tnormalizedAge),\n\t\t\t\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxX,\n\t\t\t\t\t\tnormalizedAge),\n\t\t\t\t\ta_Random0.w),\n\t\t\tmix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientY,\n\t\t\t\tnormalizedAge),\n\t\t\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxY,\n\t\t\t\tnormalizedAge),\n\t\t\t\ta_Random0.w),\n\t\t\tmix(getTotalValueFromGradientFloat(u_ROLAngularVelocityGradientZ,\n\t\t\t\tnormalizedAge),\n\t\t\t\tgetTotalValueFromGradientFloat(u_ROLAngularVelocityGradientMaxZ,\n\t\t\t\tnormalizedAge),\n\t\t\t\ta_Random0.w));\n\t\t#endif\n    #endif\n    return rotation;\n}\n#endif\n\nvec2 computeParticleUV(in vec2 uv, in float normalizedAge)\n{\n#ifdef TEXTURESHEETANIMATIONCURVE\n    float cycleNormalizedAge = normalizedAge * u_TSACycles;\n    float frame = getFrameFromGradient(\n\tu_TSAGradientUVs, cycleNormalizedAge - floor(cycleNormalizedAge));\n    float totalULength = frame * u_TSASubUVLength.x;\n    float floorTotalULength = floor(totalULength);\n    uv.x += totalULength - floorTotalULength;\n    uv.y += floorTotalULength * u_TSASubUVLength.y;\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n    float cycleNormalizedAge = normalizedAge * u_TSACycles;\n    float uvNormalizedAge = cycleNormalizedAge - floor(cycleNormalizedAge);\n    float frame = floor(mix(getFrameFromGradient(u_TSAGradientUVs, uvNormalizedAge),\n\tgetFrameFromGradient(u_TSAMaxGradientUVs, uvNormalizedAge),\n\ta_Random1.x));\n    float totalULength = frame * u_TSASubUVLength.x;\n    float floorTotalULength = floor(totalULength);\n    uv.x += totalULength - floorTotalULength;\n    uv.y += floorTotalULength * u_TSASubUVLength.y;\n#endif\n    return uv;\n}\n\nvoid main()\n{\n    float age = u_CurrentTime - a_DirectionTime.w;\n    float normalizedAge = age / a_ShapePositionStartLifeTime.w;\n    vec3 lifeVelocity;\n    if (normalizedAge < 1.0)\n\t{\n\t    vec3 startVelocity = a_DirectionTime.xyz * a_StartSpeed;\n\t\n\t\t#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t\t\t\tlifeVelocity = computeParticleLifeVelocity(normalizedAge); //计算粒子生命周期速度\n\t\t#endif\n\t\n\t    vec3 gravityVelocity = u_Gravity * age;\n\n\t    vec4 worldRotation;\n\t    \n\t\tif (u_SimulationSpace == 0)\n\t\t\tworldRotation = a_SimulationWorldRotation;\n\t    else\n\t\t\tworldRotation = u_WorldRotation;\n\n\t    // drag\n\t    vec3 dragData = a_DirectionTime.xyz * mix(u_DragConstanct.x, u_DragConstanct.y, a_Random0.x);\n\t\t//miner 计算顶点位置\n\t    vec3 center = computeParticlePosition(startVelocity, lifeVelocity, age, normalizedAge, gravityVelocity, worldRotation, dragData); //计算粒子位置\n\n#ifdef SPHERHBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    vec3 cameraUpVector = normalize(u_CameraUp); // TODO:是否外面归一化\n\t    vec3 sideVector = normalize(cross(u_CameraDirection, cameraUpVector));\n\t    vec3 upVector = normalize(cross(sideVector, u_CameraDirection));\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n    #if defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE)\n\t    if (u_ThreeDStartRotation!=0)\n\t\t{\n\t\t    vec3 rotation = vec3(\n\t\t\ta_StartRotation0.xy,\n\t\t\tcomputeParticleRotationFloat(a_StartRotation0.z, age, normalizedAge));\n\t\t    center += u_SizeScale.xzy * rotationByEuler(corner.x * sideVector + corner.y * upVector, rotation);\n\t\t}\n\t    else\n\t\t{\n\t\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t\t    float c = cos(rot);\n\t\t    float s = sin(rot);\n\t\t    mat2 rotation = mat2(c, -s, s, c);\n\t\t    corner = rotation * corner;\n\t\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * upVector);\n\t\t}\n    #else\n\t    if (u_ThreeDStartRotation!=0)\n\t\t{\n\t\t    center += u_SizeScale.xzy * rotationByEuler(corner.x * sideVector + corner.y * upVector, a_StartRotation0);\n\t\t}\n\t    else\n\t\t{\n\t\t    float c = cos(a_StartRotation0.x);\n\t\t    float s = sin(a_StartRotation0.x);\n\t\t    mat2 rotation = mat2(c, -s, s, c);\n\t\t    corner = rotation * corner;\n\t\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * upVector);\n\t\t}\n    #endif\n#endif\n\n#ifdef STRETCHEDBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    vec3 velocity;\n    #if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n\t    if (u_VOLSpaceType == 0)\n\t\tvelocity = rotationByQuaternions(u_SizeScale * (startVelocity + lifeVelocity),\n\t\t\t       worldRotation)\n\t\t    + gravityVelocity;\n\t    else\n\t\tvelocity = rotationByQuaternions(u_SizeScale * startVelocity, worldRotation) + lifeVelocity + gravityVelocity;\n    #else\n\t    velocity = rotationByQuaternions(u_SizeScale * startVelocity, worldRotation) + gravityVelocity;\n    #endif\n\n\t    vec3 cameraUpVector = normalize(velocity);\n\t    vec3 direction = normalize(center - u_CameraPos);\n\t    vec3 sideVector = normalize(cross(direction, normalize(velocity)));\n\n\t    sideVector = u_SizeScale.xzy * sideVector;\n\t    cameraUpVector = length(vec3(u_SizeScale.x, 0.0, 0.0)) * cameraUpVector;\n\n\t    vec2 size = computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\n\t    const mat2 rotaionZHalfPI = mat2(0.0, -1.0, 1.0, 0.0);\n\t    corner = rotaionZHalfPI * corner;\n\t    corner.y = corner.y - abs(corner.y);\n\n\t    float speed = length(velocity); // TODO:\n\t    center += sign(u_SizeScale.x) * (sign(u_StretchedBillboardLengthScale) * size.x * corner.x * sideVector + (speed * u_StretchedBillboardSpeedScale + size.y * u_StretchedBillboardLengthScale) * corner.y * cameraUpVector);\n#endif\n\n#ifdef HORIZONTALBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    const vec3 cameraUpVector = vec3(0.0, 0.0, 1.0);\n\t    const vec3 sideVector = vec3(-1.0, 0.0, 0.0);\n\n\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t    float c = cos(rot);\n\t    float s = sin(rot);\n\t    mat2 rotation = mat2(c, -s, s, c);\n\t    corner = rotation * corner * cos(0.78539816339744830961566084581988); // TODO:临时缩小cos45,不确定U3D原因\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * cameraUpVector);\n#endif\n\n#ifdef VERTICALBILLBOARD\n\t    vec2 corner = a_CornerTextureCoordinate.xy; // Billboard模式z轴无效\n\t    const vec3 cameraUpVector = vec3(0.0, 1.0, 0.0);\n\t    vec3 sideVector = normalize(cross(u_CameraDirection, cameraUpVector));\n\n\t    float rot = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t    float c = cos(rot);\n\t    float s = sin(rot);\n\t    mat2 rotation = mat2(c, -s, s, c);\n\t    corner = rotation * corner * cos(0.78539816339744830961566084581988); // TODO:临时缩小cos45,不确定U3D原因\n\t    corner *= computeParticleSizeBillbard(a_StartSize.xy, normalizedAge);\n\t    center += u_SizeScale.xzy * (corner.x * sideVector + corner.y * cameraUpVector);\n#endif\n\n#ifdef RENDERMODE_MESH\n\t    vec3 size = computeParticleSizeMesh(a_StartSize, normalizedAge);\n\t\t#if defined(ROTATIONOVERLIFETIME) || defined(ROTATIONOVERLIFETIMESEPERATE)\n\t\t\tif (u_ThreeDStartRotation!=0)\n\t\t\t{\n\t\t\t\tvec3 rotation = vec3(\n\t\t\t\ta_StartRotation0.xy,\n\t\t\t\tcomputeParticleRotationFloat(a_StartRotation0.z, age, normalizedAge));\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\tu_SizeScale * rotationByEuler(a_MeshPosition * size, rotation),\n\t\t\t\tworldRotation);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t#ifdef ROTATIONOVERLIFETIME\n\t\t\t\t\t\tfloat angle = computeParticleRotationFloat(a_StartRotation0.x, age, normalizedAge);\n\t\t\t\t\t\tif (a_ShapePositionStartLifeTime.x != 0.0 || a_ShapePositionStartLifeTime.y != 0.0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcenter += (rotationByQuaternions(\n\t\t\t\t\t\t\trotationByAxis(\n\t\t\t\t\t\t\t\tu_SizeScale * a_MeshPosition * size,\n\t\t\t\t\t\t\t\tnormalize(cross(vec3(0.0, 0.0, 1.0),\n\t\t\t\t\t\t\t\tvec3(a_ShapePositionStartLifeTime.xy, 0.0))),\n\t\t\t\t\t\t\t\tangle),\n\t\t\t\t\t\t\tworldRotation)); //已验证\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvec3 axis = mix(vec3(0.0, 0.0, -1.0), vec3(0.0, -1.0, 0.0), float(u_Shape));\n\t\t\t\t\t\t\t#ifdef SHAPE\n\t\t\t    \t\t\t\tcenter += u_SizeScale.xzy * (rotationByQuaternions(rotationByAxis(a_MeshPosition * size, axis, angle), worldRotation));\n\t    \t\t\t\t\t#else\n\t\t\t\t\t\t\t\tif (u_SimulationSpace == 0)\n\t\t\t\t\t\t\t\t\tcenter += rotationByAxis(u_SizeScale * a_MeshPosition * size,axis,angle); //已验证\n\t\t\t\t\t\t\t\telse if (u_SimulationSpace == 1)\n\t\t\t\t\t\t\t\t\tcenter += rotationByQuaternions(u_SizeScale * rotationByAxis(a_MeshPosition * size, axis, angle),worldRotation); //已验证\n\t\t\t\t\t\t\t#endif\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t#endif\n\t\t\t\t#ifdef ROTATIONOVERLIFETIMESEPERATE\n\t\t\t\t\t\t// TODO:是否应合并if(u_ThreeDStartRotation)分支代码,待测试\n\t\t\t\t\t\tvec3 angle = computeParticleRotationVec3(\n\t\t\t\t\t\tvec3(0.0, 0.0, -a_StartRotation0.x), age, normalizedAge);\n\t\t\t\t\t\tcenter += (rotationByQuaternions(\n\t\t\t\t\t\trotationByEuler(u_SizeScale * a_MeshPosition * size,\n\t\t\t\t\t\t\tvec3(angle.x, angle.y, angle.z)),\n\t\t\t\t\t\tworldRotation)); //已验证\n\t\t\t\t#endif\n\t\t}\n    #else\n\t    if (u_ThreeDStartRotation!=0)\n\t\t{\n\t\t    center += rotationByQuaternions(\n\t\t\tu_SizeScale * rotationByEuler(a_MeshPosition * size, a_StartRotation0),\n\t\t\tworldRotation); //已验证\n\t\t}\n\t    else\n\t\t{\n\t\t\t#ifdef SHAPE\n\t\t\t    if (u_SimulationSpace == 0)\n\t\t\t\tcenter += u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), a_StartRotation0.x);\n\t\t\t    else if (u_SimulationSpace == 1)\n\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t    u_SizeScale * rotationByAxis(a_MeshPosition * size, vec3(0.0, -1.0, 0.0), a_StartRotation0.x),\n\t\t\t\t    worldRotation);\n\t\t\t#else\n\t\t\t\tif (a_ShapePositionStartLifeTime.x != 0.0 || a_ShapePositionStartLifeTime.y != 0.0)\n\t\t\t\t{\n\t\t\t\t\tif (u_SimulationSpace == 0)\n\t\t\t\t\t\tcenter += rotationByAxis(\n\t\t\t\t\t\t\tu_SizeScale * a_MeshPosition * size,\n\t\t\t\t\t\t\tnormalize(cross(vec3(0.0, 0.0, 1.0),\n\t\t\t\t\t\t\tvec3(a_ShapePositionStartLifeTime.xy, 0.0))),\n\t\t\t\t\t\t\ta_StartRotation0.x);\n\t\t\t\t\telse if (u_SimulationSpace == 1)\n\t\t\t\t\t\tcenter += (rotationByQuaternions(\n\t\t\t\t\t\t\tu_SizeScale * rotationByAxis(a_MeshPosition * size, normalize(cross(vec3(0.0, 0.0, 1.0), vec3(a_ShapePositionStartLifeTime.xy, 0.0))), a_StartRotation0.x),\n\t\t\t\t\t\t\tworldRotation)); //已验证\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvec3 axis = mix(vec3(0.0, 0.0, -1.0), vec3(0.0, -1.0, 0.0), float(u_Shape));\n\t\t\t\t\tif (u_SimulationSpace == 0)\n\t\t\t\t\t\tcenter += u_SizeScale * rotationByAxis(a_MeshPosition * size, axis, a_StartRotation0.x);\n\t\t\t\t\telse if (u_SimulationSpace == 1)\n\t\t\t\t\t\tcenter += rotationByQuaternions(\n\t\t\t\t\t\tu_SizeScale * rotationByAxis(a_MeshPosition * size, axis, a_StartRotation0.x),\n\t\t\t\t\t\tworldRotation);\n\t\t\t\t}\n\t\t\t#endif\n\t\t}\n    #endif\n\t    v_MeshColor = a_MeshColor;\n#endif\n\t    gl_Position = u_Projection * u_View * vec4(center, 1.0);\n\t\tvec4 startcolor = gammaToLinear(a_StartColor);\n\t    v_Color = computeParticleColor(startcolor, normalizedAge);\n#ifdef DIFFUSEMAP\n\t    vec2 simulateUV;\n    #if defined(SPHERHBILLBOARD) || defined(STRETCHEDBILLBOARD) || defined(HORIZONTALBILLBOARD) || defined(VERTICALBILLBOARD)\n\t    simulateUV = a_SimulationUV.xy + a_CornerTextureCoordinate.zw * a_SimulationUV.zw;\n\t    v_TextureCoordinate = computeParticleUV(simulateUV, normalizedAge);\n    #endif\n\t\n    #ifdef RENDERMODE_MESH\n\t    simulateUV = a_SimulationUV.xy + a_MeshTextureCoordinate * a_SimulationUV.zw;\n\t    v_TextureCoordinate = computeParticleUV(simulateUV, normalizedAge);\n    #endif\n\t    v_TextureCoordinate = TransformUV(v_TextureCoordinate, u_TilingOffset);\n#endif\n\t}\n    else\n\t{\n\t    gl_Position = vec4(2.0, 2.0, 2.0, 1.0); // Discard use out of X(-1,1),Y(-1,1),Z(0,1)\n\t}\n    gl_Position = remapPositionZ(gl_Position);\n\t#ifdef FOG\n        FogHandle(gl_Position.z);\n    #endif\n}\n","#define SHADER_NAME ParticleFS\n\n#include \"Scene.glsl\";\n#include \"SceneFog.glsl\";\n#include \"Color.glsl\";\n\nconst vec4 c_ColorSpace = vec4(4.59479380, 4.59479380, 4.59479380, 2.0);\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n// uniform sampler2D u_texture;\n// uniform vec4 u_Tintcolor;\n\n#ifdef RENDERMODE_MESH\nvarying vec4 v_MeshColor;\n#endif\n\nvoid main()\n{\n    vec4 color;\n#ifdef RENDERMODE_MESH\n    color = v_MeshColor;\n#else\n    color = vec4(1.0);\n#endif\n\n#ifdef DIFFUSEMAP\n    vec4 colorT = texture2D(u_texture, v_TextureCoordinate);\n    #ifdef Gamma_u_texture\n    colorT = gammaToLinear(colorT);\n    #endif // Gamma_u_SpecularTexture\n    #ifdef TINTCOLOR\n    color *= colorT * u_Tintcolor * c_ColorSpace * v_Color;\n    #else\n    color *= colorT * v_Color;\n    #endif // TINTCOLORd\n#else\n    #ifdef TINTCOLOR\n    color *= u_Tintcolor * c_ColorSpace * v_Color;\n    #else\n    color *= v_Color;\n    #endif // TINTCOLOR\n#endif\n\n#ifdef ALPHATEST\n    if (color.a < u_AlphaTestValue)\n\t{\n\t    discard;\n\t}\n#endif // ALPHATEST\n\n\n#ifdef FOG\n    color.rgb = scenUnlitFog(color.rgb);\n#endif // FOG\n    gl_FragColor = color;\n\n    gl_FragColor = outputTransform(gl_FragColor);\n}","#ifdef GRAPHICS_API_GLES3\nvec2 getVec2ValueByIndexFromeVec4Array(in vec4 gradientNumbers[2],in int vec2Index){\n\tint v4Index = int(floor(float(vec2Index)/2.0));\n\tint offset =(vec2Index- v4Index*2)*2;\n\treturn vec2(gradientNumbers[v4Index][offset],gradientNumbers[v4Index][offset+1]);\n}\n\nvec2 getVec2ValueByIndexFromeVec4Array_COLORCOUNT(in vec4 gradientNumbers[COLORCOUNT_HALF],in int vec2Index){\n\tint v4Index = int(floor(float(vec2Index)/2.0));\n\tint offset =(vec2Index- v4Index*2)*2;\n\tvec4 v4Value = gradientNumbers[v4Index];\n\treturn vec2(v4Value[offset],v4Value[offset+1]);\n}\n#endif\n\nfloat getCurValueFromGradientFloat(in vec4 gradientNumbers[2], in float normalizedAge)\n{\n    float curValue;\n\t#ifndef GRAPHICS_API_GLES3\n\t\tvec2 gradientNumbersVec2[4];\n\t\tgradientNumbersVec2[0] = gradientNumbers[0].xy;\n\t\tgradientNumbersVec2[1] = gradientNumbers[0].zw;\n\t\tgradientNumbersVec2[2] = gradientNumbers[1].xy;\n\t\tgradientNumbersVec2[3] = gradientNumbers[1].zw;\n\n\t#endif\n    for (int i = 1; i < 4; i++)\n\t{\n\t    vec2 gradientNumber;\n\t\t#ifdef GRAPHICS_API_GLES3\n\t\t\tgradientNumber = getVec2ValueByIndexFromeVec4Array(gradientNumbers,i);\n\t\t#else\n\t\t\tgradientNumber = gradientNumbersVec2[i];\n\t\t#endif\n\t    float key = gradientNumber.x;\n\t\tcurValue = gradientNumber.y;\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t\tvec2 lastGradientNumber;\n\t\t\t#ifdef GRAPHICS_API_GLES3\n\t\t\t\tlastGradientNumber = getVec2ValueByIndexFromeVec4Array(gradientNumbers,i - 1);\n\t\t\t#else\n\t\t\t\tlastGradientNumber = gradientNumbersVec2[i-1];\n\t\t\t#endif\n\n\t\t    float lastKey = lastGradientNumber.x;\n\t\t    float age = max((normalizedAge - lastKey), 0.0) / (key - lastKey);\n\t\t    curValue = mix(lastGradientNumber.y, gradientNumber.y, age);\n\t\t    break;\n\t\t}\n\t}\n    return curValue;\n}\n\nfloat getTotalValueFromGradientFloat(in vec4 gradientNumbers[2],\n    in float normalizedAge)\n{\n\t#ifndef GRAPHICS_API_GLES3\n\t\tvec2 gradientNumbersVec2[4];\n\t\tgradientNumbersVec2[0] = gradientNumbers[0].xy;\n\t\tgradientNumbersVec2[1] = gradientNumbers[0].zw;\n\t\tgradientNumbersVec2[2] = gradientNumbers[1].xy;\n\t\tgradientNumbersVec2[3] = gradientNumbers[1].zw;\n\t#endif\n\t\n\t#ifdef GRAPHICS_API_GLES3\n\t\tvec2 val = getVec2ValueByIndexFromeVec4Array(gradientNumbers,0);\t\n\t#else\n\t\tvec2 val = gradientNumbersVec2[0];\n\t#endif\n\n\tfloat keyTime = min(normalizedAge,val.x);\n    float totalValue = keyTime * val.y;\n\n\tfloat lastSpeed = 0.;\n    for (int i = 1; i < 4; i++)\n\t{\n\t\t#ifdef GRAPHICS_API_GLES3\n\t\t\tvec2 gradientNumber= getVec2ValueByIndexFromeVec4Array(gradientNumbers,i);\n\t\t\tvec2 lastGradientNumber = getVec2ValueByIndexFromeVec4Array(gradientNumbers,i - 1);\n\t\t#else\n\t\t\tvec2 gradientNumber = gradientNumbersVec2[i];\n\t\t\tvec2 lastGradientNumber =gradientNumbersVec2[i - 1];\n\t\t#endif\n\n\t    float key = gradientNumber.x;\n\t\tfloat lastValue = lastGradientNumber.y;\n\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t    float lastKey = lastGradientNumber.x;\n\t\t\tfloat time =  max((normalizedAge - lastKey), 0.);\n\t\t\tfloat age = time / (key-lastKey);\n\t\t\tlastSpeed = mix(lastValue, gradientNumber.y,age);\n\t\t    totalValue += (lastValue + mix(lastValue, gradientNumber.y, age)) / 2.0 * a_ShapePositionStartLifeTime.w * time;\n\t\t    keyTime = normalizedAge;\n\t\t\tbreak;\n\t\t}\n\t    else if(key > keyTime)\n\t\t{\n\t\t    totalValue += (lastValue + gradientNumber.y) / 2.0 * a_ShapePositionStartLifeTime.w * (key - lastGradientNumber.x);\n\t\t\tkeyTime = key;\n\t\t\tlastSpeed = gradientNumber.y;\n\t\t}\n\t}\n    return totalValue + max(normalizedAge-keyTime, 0.) * lastSpeed * a_ShapePositionStartLifeTime.w;\n}\n\nvec4 getColorFromGradient(in vec4 gradientAlphas[COLORCOUNT_HALF],\n    in vec4 gradientColors[COLORCOUNT],\n    in float normalizedAge, in vec4 keyRanges)\n{\n\t#ifndef GRAPHICS_API_GLES3\n\t\t#ifdef COLORKEYCOUNT_8\n\t\t\tvec2 resoult[8];\n\t\t\tresoult[0] = gradientAlphas[0].xy;\n\t\t\tresoult[1] = gradientAlphas[0].zw;\n\t\t\tresoult[2] = gradientAlphas[1].xy;\n\t\t\tresoult[3] = gradientAlphas[1].zw;\n\t\t\tresoult[4] = gradientAlphas[2].xy;\n\t\t\tresoult[5] = gradientAlphas[2].zw;\n\t\t\tresoult[6] = gradientAlphas[3].xy;\n\t\t\tresoult[7] = gradientAlphas[3].zw;\n\t\t#else\n\t\t\tvec2 resoult[4];\n\t\t\tresoult[0] = gradientAlphas[0].xy;\n\t\t\tresoult[1] = gradientAlphas[0].zw;\n\t\t\tresoult[2] = gradientAlphas[1].xy;\n\t\t\tresoult[3] = gradientAlphas[1].zw;\n\t\t#endif\n\t#endif\n\n    float alphaAge = clamp(normalizedAge, keyRanges.z, keyRanges.w);\n    vec4 overTimeColor;\n    for (int i = 1; i < COLORCOUNT; i++)\n\t{\n\t\t#ifdef GRAPHICS_API_GLES3\n\t    \tvec2 gradientAlpha = getVec2ValueByIndexFromeVec4Array_COLORCOUNT(gradientAlphas,i);\n\t\t#else\n\t\t\tvec2 gradientAlpha = resoult[i];\n\t\t#endif\n\t    float alphaKey = gradientAlpha.x;\n\t    if (alphaKey >= alphaAge)\n\t\t{\n\n\t\t\t#ifdef GRAPHICS_API_GLES3\n\t\t    \tvec2 lastGradientAlpha =getVec2ValueByIndexFromeVec4Array_COLORCOUNT(gradientAlphas,i - 1);\n\t\t\t#else\n\t\t\t\tvec2 lastGradientAlpha = resoult[i - 1];\n\t\t\t#endif\n\n\t\t    float lastAlphaKey = lastGradientAlpha.x;\n\t\t    float age = clamp((alphaAge - lastAlphaKey) / (alphaKey - lastAlphaKey), 0.0, 1.0);\n\t\t    overTimeColor.a = mix(lastGradientAlpha.y, gradientAlpha.y, age);\n\t\t    break;\n\t\t}\n\t}\n\n    float colorAge = clamp(normalizedAge, keyRanges.x, keyRanges.y);\n    for (int i = 1; i < COLORCOUNT; i++)\n\t{\n\t    vec4 gradientColor = gradientColors[i];\n\t    float colorKey = gradientColor.x;\n\t    if (colorKey >= colorAge)\n\t\t{\n\t\t    vec4 lastGradientColor = gradientColors[i - 1];\n\t\t    float lastColorKey = lastGradientColor.x;\n\t\t    float age = (colorAge - lastColorKey) / (colorKey - lastColorKey);\n\t\t    overTimeColor.rgb = mix(gradientColors[i - 1].yzw, gradientColor.yzw, age);\n\t\t    break;\n\t\t}\n\t}\n    return overTimeColor;\n}\n\nfloat getFrameFromGradient(in vec4 gradientFrames[2], in float normalizedAge)\n{\n\t#ifndef GRAPHICS_API_GLES3\n\t\tvec2 gradientNumbersVec2[4];\n\t\tgradientNumbersVec2[0] = gradientFrames[0].xy;\n\t\tgradientNumbersVec2[1] = gradientFrames[0].zw;\n\t\tgradientNumbersVec2[2] = gradientFrames[1].xy;\n\t\tgradientNumbersVec2[3] = gradientFrames[1].zw;\n\t#endif\n    float overTimeFrame;\n    for (int i = 1; i < 4; i++)\n\t{\n\t\t#ifdef GRAPHICS_API_GLES3\n\t    \tvec2 gradientFrame = getVec2ValueByIndexFromeVec4Array(gradientFrames,i);\n\t\t#else\n\t\t\tvec2 gradientFrame = gradientNumbersVec2[i];\n\t\t#endif\n\t    float key = gradientFrame.x;\n\t\toverTimeFrame = gradientFrame.y;\n\t    if (key >= normalizedAge)\n\t\t{\n\t\t\t#ifdef GRAPHICS_API_GLES3\n\t\t\t\tvec2 lastGradientFrame = getVec2ValueByIndexFromeVec4Array(gradientFrames,i-1);\n\t\t\t#else\n\t\t\t\tvec2 lastGradientFrame = gradientNumbersVec2[i-1];\n\t\t\t#endif\n\t\t    float lastKey = lastGradientFrame.x;\n\t\t\tfloat age = max((normalizedAge-lastKey), 0.)/(key-lastKey);\n\t\t    overTimeFrame = mix(lastGradientFrame.y, gradientFrame.y, age);\n\t\t    break;\n\t\t}\n\t}\n    return floor(overTimeFrame);\n}\n","// sprite Uniform\nuniform float u_CurrentTime;\nuniform vec3 u_Gravity;\nuniform vec2 u_DragConstanct;\nuniform vec3 u_WorldPosition;\nuniform vec4 u_WorldRotation;\nuniform int u_ThreeDStartRotation;\nuniform int u_Shape;\nuniform int u_ScalingMode;\nuniform vec3 u_PositionScale;\nuniform vec3 u_SizeScale;\n\nuniform float u_StretchedBillboardLengthScale;\nuniform float u_StretchedBillboardSpeedScale;\nuniform int u_SimulationSpace;\n\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n    uniform int u_VOLSpaceType;\n#endif\n#if defined(VELOCITYOVERLIFETIMECONSTANT) || defined(VELOCITYOVERLIFETIMERANDOMCONSTANT)\n    uniform vec3 u_VOLVelocityConst;\n#endif\n#if defined(VELOCITYOVERLIFETIMECURVE) || defined(VELOCITYOVERLIFETIMERANDOMCURVE)\n    uniform vec4 u_VOLVelocityGradientX[2]; // x为key,y为速度\n    uniform vec4 u_VOLVelocityGradientY[2]; // x为key,y为速度\n    uniform vec4 u_VOLVelocityGradientZ[2]; // x为key,y为速度\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCONSTANT\n    uniform vec3 u_VOLVelocityConstMax;\n#endif\n#ifdef VELOCITYOVERLIFETIMERANDOMCURVE\n    uniform vec4 u_VOLVelocityGradientMaxX[2]; // x为key,y为速度\n    uniform vec4 u_VOLVelocityGradientMaxY[2]; // x为key,y为速度\n    uniform vec4 u_VOLVelocityGradientMaxZ[2]; // x为key,y为速度\n#endif\n\n#ifdef COLORKEYCOUNT_8\n    #define COLORCOUNT 8\n    #define COLORCOUNT_HALF 4\n#else\n    #define COLORCOUNT 4\n    #define COLORCOUNT_HALF 2\n#endif\n\n#ifdef COLOROVERLIFETIME\n    uniform vec4 u_ColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\n    uniform vec4 u_ColorOverLifeGradientAlphas[COLORCOUNT_HALF]; // x为key,y为Alpha,z为key,w为Alpha \n    uniform vec4 u_ColorOverLifeGradientRanges;\n#endif\n\n#ifdef RANDOMCOLOROVERLIFETIME\n    uniform vec4 u_ColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\n    uniform vec4 u_ColorOverLifeGradientAlphas[COLORCOUNT_HALF]; // x为key,y为Alpha,z为key,w为Alpha \n    uniform vec4 u_ColorOverLifeGradientRanges;\n    uniform vec4 u_MaxColorOverLifeGradientColors[COLORCOUNT]; // x为key,yzw为Color\n    uniform vec4 u_MaxColorOverLifeGradientAlphas[COLORCOUNT_HALF]; // x为key,y为Alpha,z为key,w为Alpha \n    uniform vec4 u_MaxColorOverLifeGradientRanges;\n#endif\n\n#if defined(SIZEOVERLIFETIMECURVE) || defined(SIZEOVERLIFETIMERANDOMCURVES)\n    uniform vec4 u_SOLSizeGradient[2]; // x为key,y为尺寸, z为key,w为尺寸\n#endif\n#ifdef SIZEOVERLIFETIMERANDOMCURVES\n    uniform vec4 u_SOLSizeGradientMax[2]; // x为key,y为尺寸, z为key,w为尺寸\n#endif\n\n\n#if defined(SIZEOVERLIFETIMECURVESEPERATE) || defined(SIZEOVERLIFETIMERANDOMCURVESSEPERATE)\n    uniform vec4 u_SOLSizeGradientX[2]; // x为key,y为尺寸,z为key,w为尺寸\n    uniform vec4 u_SOLSizeGradientY[2]; // x为key,y为尺寸,z为key,w为尺寸\n    uniform vec4 u_SOLSizeGradientZ[2]; // x为key,y为尺寸,z为key,w为尺寸\n#endif\n\n#ifdef SIZEOVERLIFETIMERANDOMCURVESSEPERATE\n    uniform vec4 u_SOLSizeGradientMaxX[2];// x为key,y为尺寸,z为key,w为尺寸\n    uniform vec4 u_SOLSizeGradientMaxY[2]; // x为key,y为尺寸,z为key,w为尺寸\n    uniform vec4 u_SOLSizeGradientMaxZ[2]; // x为key,y为尺寸,z为key,w为尺寸\n#endif\n\n\n\n#ifdef ROTATIONOVERLIFETIME\n    #if defined(ROTATIONOVERLIFETIMECONSTANT) || defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\nuniform float u_ROLAngularVelocityConst;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\nuniform float u_ROLAngularVelocityConstMax;\n    #endif\n    #if defined(ROTATIONOVERLIFETIMECURVE) || defined(ROTATIONOVERLIFETIMERANDOMCURVES)\nuniform vec4 u_ROLAngularVelocityGradient[2]; //// x为key,y为旋转,z为key,w为旋转\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\nuniform vec4 u_ROLAngularVelocityGradientMax[2]; //// x为key,y为旋转,z为key,w为旋转,\n    #endif\n#endif\n\n#ifdef ROTATIONOVERLIFETIMESEPERATE\n    #if defined(ROTATIONOVERLIFETIMECONSTANT) || defined(ROTATIONOVERLIFETIMERANDOMCONSTANTS)\n        uniform vec3 u_ROLAngularVelocityConstSeprarate;\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCONSTANTS\n        uniform vec3 u_ROLAngularVelocityConstMaxSeprarate;\n    #endif\n    #if defined(ROTATIONOVERLIFETIMECURVE) || defined(ROTATIONOVERLIFETIMERANDOMCURVES)\n        uniform vec4 u_ROLAngularVelocityGradientX[2];\n        uniform vec4 u_ROLAngularVelocityGradientY[2];\n        uniform vec4 u_ROLAngularVelocityGradientZ[2];\n    #endif\n    #ifdef ROTATIONOVERLIFETIMERANDOMCURVES\n        uniform vec4 u_ROLAngularVelocityGradientMaxX[2];\n        uniform vec4 u_ROLAngularVelocityGradientMaxY[2];\n        uniform vec4 u_ROLAngularVelocityGradientMaxZ[2];\n    #endif\n#endif\n\n#if defined(TEXTURESHEETANIMATIONCURVE) || defined(TEXTURESHEETANIMATIONRANDOMCURVE)\n    uniform float u_TSACycles;\n    uniform vec2 u_TSASubUVLength;\n    uniform vec4 u_TSAGradientUVs[2]; // x为key,y为frame\n#endif\n#ifdef TEXTURESHEETANIMATIONRANDOMCURVE\n    uniform vec4 u_TSAMaxGradientUVs[2]; // x为key,y为frame\n#endif","export class VertexShuriKenParticle {\n    constructor() {\n    }\n}\nVertexShuriKenParticle.PARTICLE_DIRECTIONTIME = 0;\nVertexShuriKenParticle.PARTICLE_POSITION0 = 1;\nVertexShuriKenParticle.PARTICLE_COLOR0 = 2;\nVertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0 = 3;\nVertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME = 4;\nVertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0 = 5;\nVertexShuriKenParticle.PARTICLE_STARTCOLOR0 = 6;\nVertexShuriKenParticle.PARTICLE_ENDCOLOR0 = 7;\nVertexShuriKenParticle.PARTICLE_STARTSIZE = 8;\nVertexShuriKenParticle.PARTICLE_STARTROTATION = 9;\nVertexShuriKenParticle.PARTICLE_STARTSPEED = 10;\nVertexShuriKenParticle.PARTICLE_RANDOM0 = 11;\nVertexShuriKenParticle.PARTICLE_RANDOM1 = 12;\nVertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION = 13;\nVertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION = 14;\nVertexShuriKenParticle.PARTICLE_SIMULATIONUV = 15;\n","import { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport ShurikenVS from \"./particleShuriKen.vs\";\nimport ShurikenFS from \"./particleShuriKen.fs\";\nimport MathGradient from \"./MathGradient.glsl\";\nimport ParticleSpriteVS from \"./particleShuriKenSpriteVS.glsl\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { ShaderDataType } from \"../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { VertexShuriKenParticle } from \"../VertexShuriKenParticle\";\nexport class ParticleShuriKenShaderInit {\n    static init() {\n        Shader3D.addInclude(\"MathGradient.glsl\", MathGradient);\n        Shader3D.addInclude(\"particleShuriKenSpriteVS.glsl\", ParticleSpriteVS);\n        let attributeMap = {\n            'a_CornerTextureCoordinate': [VertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0, ShaderDataType.Vector4],\n            'a_MeshPosition': [VertexShuriKenParticle.PARTICLE_POSITION0, ShaderDataType.Vector3],\n            'a_MeshColor': [VertexShuriKenParticle.PARTICLE_COLOR0, ShaderDataType.Vector4],\n            'a_MeshTextureCoordinate': [VertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0, ShaderDataType.Vector2],\n            'a_ShapePositionStartLifeTime': [VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME, ShaderDataType.Vector4],\n            'a_DirectionTime': [VertexShuriKenParticle.PARTICLE_DIRECTIONTIME, ShaderDataType.Vector4],\n            'a_StartColor': [VertexShuriKenParticle.PARTICLE_STARTCOLOR0, ShaderDataType.Vector4],\n            'a_StartSize': [VertexShuriKenParticle.PARTICLE_STARTSIZE, ShaderDataType.Vector3],\n            'a_StartRotation0': [VertexShuriKenParticle.PARTICLE_STARTROTATION, ShaderDataType.Vector3],\n            'a_StartSpeed': [VertexShuriKenParticle.PARTICLE_STARTSPEED, ShaderDataType.Float],\n            'a_Random0': [VertexShuriKenParticle.PARTICLE_RANDOM0, ShaderDataType.Vector4],\n            'a_Random1': [VertexShuriKenParticle.PARTICLE_RANDOM1, ShaderDataType.Vector4],\n            'a_SimulationWorldPostion': [VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION, ShaderDataType.Vector3],\n            'a_SimulationWorldRotation': [VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION, ShaderDataType.Vector4],\n            'a_SimulationUV': [VertexShuriKenParticle.PARTICLE_SIMULATIONUV, ShaderDataType.Vector4]\n        };\n        let uniformMap = {\n            \"u_Tintcolor\": ShaderDataType.Color,\n            \"u_texture\": ShaderDataType.Texture2D,\n            \"u_TilingOffset\": ShaderDataType.Vector4,\n            \"u_AlphaTestValue\": ShaderDataType.Float,\n        };\n        let defaultValue = {\n            \"u_Tintcolor\": new Color(0.5, 0.5, 0.5, 0.5),\n            \"u_TilingOffset\": new Vector4(1, 1, 0, 0),\n            \"u_AlphaTestValue\": 0.5\n        };\n        let shader = Shader3D.add(\"PARTICLESHURIKEN\", false, false);\n        let subShader = new SubShader(attributeMap, uniformMap, defaultValue);\n        shader.addSubShader(subShader);\n        shader.shaderType = ShaderFeatureType.Effect;\n        let forwardPass = subShader.addShaderPass(ShurikenVS, ShurikenFS);\n    }\n}\n","import { LayaGL } from \"../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nexport class ShuriKenParticle3DShaderDeclaration {\n    static __init__() {\n        let mulDefineMode = ShuriKenParticle3DShaderDeclaration.mulShaderDefineMode;\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_BILLBOARD = Shader3D.getDefineByName(\"SPHERHBILLBOARD\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD = Shader3D.getDefineByName(\"STRETCHEDBILLBOARD\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD = Shader3D.getDefineByName(\"HORIZONTALBILLBOARD\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD = Shader3D.getDefineByName(\"VERTICALBILLBOARD\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8 = Shader3D.getDefineByName(\"COLORKEYCOUNT_8\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME = Shader3D.getDefineByName(\"COLOROVERLIFETIME\"));\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME = Shader3D.getDefineByName(\"RANDOMCOLOROVERLIFETIME\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT = Shader3D.getDefineByName(\"VELOCITYOVERLIFETIMECONSTANT\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE = Shader3D.getDefineByName(\"VELOCITYOVERLIFETIMECURVE\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT = Shader3D.getDefineByName(\"VELOCITYOVERLIFETIMERANDOMCONSTANT\"));\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE = Shader3D.getDefineByName(\"VELOCITYOVERLIFETIMERANDOMCURVE\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE = Shader3D.getDefineByName(\"TEXTURESHEETANIMATIONCURVE\"));\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE = Shader3D.getDefineByName(\"TEXTURESHEETANIMATIONRANDOMCURVE\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME = Shader3D.getDefineByName(\"ROTATIONOVERLIFETIME\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE = Shader3D.getDefineByName(\"ROTATIONOVERLIFETIMESEPERATE\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT = Shader3D.getDefineByName(\"ROTATIONOVERLIFETIMECONSTANT\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE = Shader3D.getDefineByName(\"ROTATIONOVERLIFETIMECURVE\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS = Shader3D.getDefineByName(\"ROTATIONOVERLIFETIMERANDOMCONSTANTS\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES = Shader3D.getDefineByName(\"ROTATIONOVERLIFETIMERANDOMCURVES\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVE = Shader3D.getDefineByName(\"SIZEOVERLIFETIMECURVE\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE = Shader3D.getDefineByName(\"SIZEOVERLIFETIMECURVESEPERATE\"));\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES = Shader3D.getDefineByName(\"SIZEOVERLIFETIMERANDOMCURVES\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE = Shader3D.getDefineByName(\"SIZEOVERLIFETIMERANDOMCURVESSEPERATE\");\n        ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_MESH = Shader3D.getDefineByName(\"RENDERMODE_MESH\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SHAPE = Shader3D.getDefineByName(\"SHAPE\"));\n        ShuriKenParticle3DShaderDeclaration.WORLDPOSITION = Shader3D.propertyNameToID(\"u_WorldPosition\");\n        ShuriKenParticle3DShaderDeclaration.WORLDROTATION = Shader3D.propertyNameToID(\"u_WorldRotation\");\n        ShuriKenParticle3DShaderDeclaration.POSITIONSCALE = Shader3D.propertyNameToID(\"u_PositionScale\");\n        ShuriKenParticle3DShaderDeclaration.SIZESCALE = Shader3D.propertyNameToID(\"u_SizeScale\");\n        ShuriKenParticle3DShaderDeclaration.SCALINGMODE = Shader3D.propertyNameToID(\"u_ScalingMode\");\n        ShuriKenParticle3DShaderDeclaration.GRAVITY = Shader3D.propertyNameToID(\"u_Gravity\");\n        ShuriKenParticle3DShaderDeclaration.THREEDSTARTROTATION = Shader3D.propertyNameToID(\"u_ThreeDStartRotation\");\n        ShuriKenParticle3DShaderDeclaration.SHAPE = Shader3D.propertyNameToID(\"u_Shape\");\n        ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDLENGTHSCALE = Shader3D.propertyNameToID(\"u_StretchedBillboardLengthScale\");\n        ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDSPEEDSCALE = Shader3D.propertyNameToID(\"u_StretchedBillboardSpeedScale\");\n        ShuriKenParticle3DShaderDeclaration.SIMULATIONSPACE = Shader3D.propertyNameToID(\"u_SimulationSpace\");\n        ShuriKenParticle3DShaderDeclaration.CURRENTTIME = Shader3D.propertyNameToID(\"u_CurrentTime\");\n        ShuriKenParticle3DShaderDeclaration.DRAG = Shader3D.propertyNameToID(\"u_DragConstanct\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST = Shader3D.propertyNameToID(\"u_VOLVelocityConst\"));\n        ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX = Shader3D.propertyNameToID(\"u_VOLVelocityGradientX\");\n        ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY = Shader3D.propertyNameToID(\"u_VOLVelocityGradientY\");\n        ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ = Shader3D.propertyNameToID(\"u_VOLVelocityGradientZ\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONSTMAX = Shader3D.propertyNameToID(\"u_VOLVelocityConstMax\"));\n        ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX = Shader3D.propertyNameToID(\"u_VOLVelocityGradientMaxX\");\n        ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX = Shader3D.propertyNameToID(\"u_VOLVelocityGradientMaxY\");\n        ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX = Shader3D.propertyNameToID(\"u_VOLVelocityGradientMaxZ\");\n        ShuriKenParticle3DShaderDeclaration.VOLSPACETYPE = Shader3D.propertyNameToID(\"u_VOLSpaceType\");\n        ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS = Shader3D.propertyNameToID(\"u_ColorOverLifeGradientAlphas\");\n        ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS = Shader3D.propertyNameToID(\"u_ColorOverLifeGradientColors\");\n        ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES = Shader3D.propertyNameToID(\"u_ColorOverLifeGradientRanges\");\n        ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS = Shader3D.propertyNameToID(\"u_MaxColorOverLifeGradientAlphas\");\n        ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS = Shader3D.propertyNameToID(\"u_MaxColorOverLifeGradientColors\");\n        ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTRANGES = Shader3D.propertyNameToID(\"u_MaxColorOverLifeGradientRanges\");\n        ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT = Shader3D.propertyNameToID(\"u_SOLSizeGradient\");\n        ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX = Shader3D.propertyNameToID(\"u_SOLSizeGradientX\");\n        ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY = Shader3D.propertyNameToID(\"u_SOLSizeGradientY\");\n        ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ = Shader3D.propertyNameToID(\"u_SOLSizeGradientZ\");\n        ShuriKenParticle3DShaderDeclaration.SOLSizeGradientMax = Shader3D.propertyNameToID(\"u_SOLSizeGradientMax\");\n        ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTXMAX = Shader3D.propertyNameToID(\"u_SOLSizeGradientMaxX\");\n        ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTYMAX = Shader3D.propertyNameToID(\"u_SOLSizeGradientMaxY\");\n        ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZMAX = Shader3D.propertyNameToID(\"u_SOLSizeGradientMaxZ\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST = Shader3D.propertyNameToID(\"u_ROLAngularVelocityConst\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE = Shader3D.propertyNameToID(\"u_ROLAngularVelocityConstSeprarate\"));\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradient\");\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradientX\");\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradientY\");\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradientZ\");\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAX = Shader3D.propertyNameToID(\"u_ROLAngularVelocityConstMax\"));\n        mulDefineMode && (ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAXSEPRARATE = Shader3D.propertyNameToID(\"u_ROLAngularVelocityConstMaxSeprarate\"));\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradientMax\");\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradientMaxX\");\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradientMaxY\");\n        ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX = Shader3D.propertyNameToID(\"u_ROLAngularVelocityGradientMaxZ\");\n        ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONCYCLES = Shader3D.propertyNameToID(\"u_TSACycles\");\n        ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONSUBUVLENGTH = Shader3D.propertyNameToID(\"u_TSASubUVLength\");\n        ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS = Shader3D.propertyNameToID(\"u_TSAGradientUVs\");\n        ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTMAXUVS = Shader3D.propertyNameToID(\"u_TSAMaxGradientUVs\");\n        let uniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"ShurikenSprite3D\");\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.WORLDPOSITION, 'u_WorldPosition', ShaderDataType.Vector3),\n            uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.WORLDROTATION, 'u_WorldRotation', ShaderDataType.Vector4);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE, 'u_PositionScale', ShaderDataType.Vector3);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SIZESCALE, 'u_SizeScale', ShaderDataType.Vector3);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SCALINGMODE, 'u_ScalingMode', ShaderDataType.Int);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.GRAVITY, 'u_Gravity', ShaderDataType.Vector3);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.THREEDSTARTROTATION, 'u_ThreeDStartRotation', ShaderDataType.Int);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDLENGTHSCALE, 'u_StretchedBillboardLengthScale', ShaderDataType.Float);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDSPEEDSCALE, 'u_StretchedBillboardSpeedScale', ShaderDataType.Float);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SIMULATIONSPACE, 'u_SimulationSpace', ShaderDataType.Int);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.CURRENTTIME, 'u_CurrentTime', ShaderDataType.Vector2);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SHAPE, 'u_Shape', ShaderDataType.Float);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS, 'u_ColorOverLifeGradientAlphas', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS, 'u_ColorOverLifeGradientColors', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES, 'u_ColorOverLifeGradientRanges', ShaderDataType.Vector4);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS, 'u_MaxColorOverLifeGradientAlphas', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS, 'u_MaxColorOverLifeGradientColors', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTRANGES, 'u_MaxColorOverLifeGradientRanges', ShaderDataType.Vector4);\n        mulDefineMode && (uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST, 'u_VOLVelocityConst', ShaderDataType.Vector3));\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX, 'u_VOLVelocityGradientX', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY, 'u_VOLVelocityGradientY', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ, 'u_VOLVelocityGradientZ', ShaderDataType.Buffer);\n        mulDefineMode && (uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONSTMAX, 'u_VOLVelocityConstMax', ShaderDataType.Vector3));\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX, 'u_VOLVelocityGradientMaxX', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX, 'u_VOLVelocityGradientMaxY', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX, 'u_VOLVelocityGradientMaxZ', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.VOLSPACETYPE, 'u_VOLSpaceType', ShaderDataType.Int);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT, 'u_SOLSizeGradient', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX, 'u_SOLSizeGradientX', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY, 'u_SOLSizeGradientY', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ, 'u_SOLSizeGradientZ', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientMax, 'u_SOLSizeGradientMax', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTXMAX, 'u_SOLSizeGradientMaxX', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTYMAX, 'u_SOLSizeGradientMaxY', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZMAX, 'u_SOLSizeGradientMaxZ', ShaderDataType.Buffer);\n        mulDefineMode && (uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST, 'u_ROLAngularVelocityConst', ShaderDataType.Float));\n        mulDefineMode && (uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE, 'u_ROLAngularVelocityConstSeprarate', ShaderDataType.Vector3));\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT, 'u_ROLAngularVelocityGradient', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX, 'u_ROLAngularVelocityGradientX', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY, 'u_ROLAngularVelocityGradientY', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ, 'u_ROLAngularVelocityGradientZ', ShaderDataType.Buffer);\n        mulDefineMode && (uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAX, 'u_ROLAngularVelocityConstMax', ShaderDataType.Float));\n        mulDefineMode && (uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAXSEPRARATE, 'u_ROLAngularVelocityConstMaxSeprarate', ShaderDataType.Vector3));\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX, 'u_ROLAngularVelocityGradientMax', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX, 'u_ROLAngularVelocityGradientMaxX', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX, 'u_ROLAngularVelocityGradientMaxY', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX, 'u_ROLAngularVelocityGradientMaxZ', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONCYCLES, 'u_TSACycles', ShaderDataType.Float);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONSUBUVLENGTH, 'u_TSASubUVLength', ShaderDataType.Vector2);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS, 'u_TSAGradientUVs', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTMAXUVS, 'u_TSAMaxGradientUVs', ShaderDataType.Buffer);\n        uniformMap.addShaderUniform(ShuriKenParticle3DShaderDeclaration.DRAG, 'u_DragConstanct', ShaderDataType.Vector2);\n    }\n}\nShuriKenParticle3DShaderDeclaration.mulShaderDefineMode = true;\n","import { MathUtil } from \"../../maths/MathUtil\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Vector4 } from \"../../maths/Vector4\";\nexport class ShurikenParticleData {\n    constructor() {\n    }\n    static _getStartLifetimeFromGradient(startLifeTimeGradient, emissionTime) {\n        for (var i = 1, n = startLifeTimeGradient.gradientCount; i < n; i++) {\n            var key = startLifeTimeGradient.getKeyByIndex(i);\n            if (key >= emissionTime) {\n                var lastKey = startLifeTimeGradient.getKeyByIndex(i - 1);\n                var age = (emissionTime - lastKey) / (key - lastKey);\n                return MathUtil.lerp(startLifeTimeGradient.getValueByIndex(i - 1), startLifeTimeGradient.getValueByIndex(i), age);\n            }\n        }\n        throw new Error(\"ShurikenParticleData: can't get value foam startLifeTimeGradient.\");\n    }\n    static _randomInvertRoationArray(rotatonE, outE, randomizeRotationDirection, rand, randomSeeds) {\n        var randDic;\n        if (rand) {\n            rand.seed = randomSeeds[6];\n            randDic = rand.getFloat();\n            randomSeeds[6] = rand.seed;\n        }\n        else {\n            randDic = Math.random();\n        }\n        if (randDic < randomizeRotationDirection) {\n            outE.x = -rotatonE.x;\n            outE.y = -rotatonE.y;\n            outE.z = -rotatonE.z;\n        }\n        else {\n            outE.x = rotatonE.x;\n            outE.y = rotatonE.y;\n            outE.z = rotatonE.z;\n        }\n    }\n    static _randomInvertRoation(rotaton, randomizeRotationDirection, rand, randomSeeds) {\n        var randDic;\n        if (rand) {\n            rand.seed = randomSeeds[6];\n            randDic = rand.getFloat();\n            randomSeeds[6] = rand.seed;\n        }\n        else {\n            randDic = Math.random();\n        }\n        if (randDic < randomizeRotationDirection)\n            rotaton = -rotaton;\n        return rotaton;\n    }\n    static create(particleSystem, particleRender) {\n        var autoRandomSeed = particleSystem.autoRandomSeed;\n        var rand = particleSystem._rand;\n        var randomSeeds = particleSystem._randomSeeds;\n        switch (particleSystem.startColorType) {\n            case 0:\n                var constantStartColor = particleSystem.startColorConstant;\n                ShurikenParticleData.startColor.x = constantStartColor.x;\n                ShurikenParticleData.startColor.y = constantStartColor.y;\n                ShurikenParticleData.startColor.z = constantStartColor.z;\n                ShurikenParticleData.startColor.w = constantStartColor.w;\n                break;\n            case 2:\n                if (autoRandomSeed) {\n                    Vector4.lerp(particleSystem.startColorConstantMin, particleSystem.startColorConstantMax, Math.random(), ShurikenParticleData.startColor);\n                }\n                else {\n                    rand.seed = randomSeeds[3];\n                    Vector4.lerp(particleSystem.startColorConstantMin, particleSystem.startColorConstantMax, rand.getFloat(), ShurikenParticleData.startColor);\n                    randomSeeds[3] = rand.seed;\n                }\n                break;\n        }\n        var colorOverLifetime = particleSystem.colorOverLifetime;\n        if (colorOverLifetime && colorOverLifetime.enable) {\n            var color = colorOverLifetime.color;\n            switch (color.type) {\n                case 0:\n                    ShurikenParticleData.startColor.x = ShurikenParticleData.startColor.x * color.constant.x;\n                    ShurikenParticleData.startColor.y = ShurikenParticleData.startColor.y * color.constant.y;\n                    ShurikenParticleData.startColor.z = ShurikenParticleData.startColor.z * color.constant.z;\n                    ShurikenParticleData.startColor.w = ShurikenParticleData.startColor.w * color.constant.w;\n                    break;\n                case 2:\n                    var colorRandom;\n                    if (autoRandomSeed) {\n                        colorRandom = Math.random();\n                    }\n                    else {\n                        rand.seed = randomSeeds[10];\n                        colorRandom = rand.getFloat();\n                        randomSeeds[10] = rand.seed;\n                    }\n                    var minConstantColor = color.constantMin;\n                    var maxConstantColor = color.constantMax;\n                    ShurikenParticleData.startColor.x = ShurikenParticleData.startColor.x * MathUtil.lerp(minConstantColor.x, maxConstantColor.x, colorRandom);\n                    ShurikenParticleData.startColor.y = ShurikenParticleData.startColor.y * MathUtil.lerp(minConstantColor.y, maxConstantColor.y, colorRandom);\n                    ShurikenParticleData.startColor.z = ShurikenParticleData.startColor.z * MathUtil.lerp(minConstantColor.z, maxConstantColor.z, colorRandom);\n                    ShurikenParticleData.startColor.w = ShurikenParticleData.startColor.w * MathUtil.lerp(minConstantColor.w, maxConstantColor.w, colorRandom);\n                    break;\n            }\n        }\n        var particleSize = ShurikenParticleData.startSize;\n        switch (particleSystem.startSizeType) {\n            case 0:\n                if (particleSystem.threeDStartSize) {\n                    var startSizeConstantSeparate = particleSystem.startSizeConstantSeparate;\n                    particleSize[0] = startSizeConstantSeparate.x;\n                    particleSize[1] = startSizeConstantSeparate.y;\n                    particleSize[2] = startSizeConstantSeparate.z;\n                }\n                else {\n                    particleSize[0] = particleSize[1] = particleSize[2] = particleSystem.startSizeConstant;\n                }\n                break;\n            case 2:\n                if (particleSystem.threeDStartSize) {\n                    var startSizeConstantMinSeparate = particleSystem.startSizeConstantMinSeparate;\n                    var startSizeConstantMaxSeparate = particleSystem.startSizeConstantMaxSeparate;\n                    if (autoRandomSeed) {\n                        particleSize[0] = MathUtil.lerp(startSizeConstantMinSeparate.x, startSizeConstantMaxSeparate.x, Math.random());\n                        particleSize[1] = MathUtil.lerp(startSizeConstantMinSeparate.y, startSizeConstantMaxSeparate.y, Math.random());\n                        particleSize[2] = MathUtil.lerp(startSizeConstantMinSeparate.z, startSizeConstantMaxSeparate.z, Math.random());\n                    }\n                    else {\n                        rand.seed = randomSeeds[4];\n                        particleSize[0] = MathUtil.lerp(startSizeConstantMinSeparate.x, startSizeConstantMaxSeparate.x, rand.getFloat());\n                        particleSize[1] = MathUtil.lerp(startSizeConstantMinSeparate.y, startSizeConstantMaxSeparate.y, rand.getFloat());\n                        particleSize[2] = MathUtil.lerp(startSizeConstantMinSeparate.z, startSizeConstantMaxSeparate.z, rand.getFloat());\n                        randomSeeds[4] = rand.seed;\n                    }\n                }\n                else {\n                    if (autoRandomSeed) {\n                        particleSize[0] = particleSize[1] = particleSize[2] = MathUtil.lerp(particleSystem.startSizeConstantMin, particleSystem.startSizeConstantMax, Math.random());\n                    }\n                    else {\n                        rand.seed = randomSeeds[4];\n                        particleSize[0] = particleSize[1] = particleSize[2] = MathUtil.lerp(particleSystem.startSizeConstantMin, particleSystem.startSizeConstantMax, rand.getFloat());\n                        randomSeeds[4] = rand.seed;\n                    }\n                }\n                break;\n        }\n        var sizeOverLifetime = particleSystem.sizeOverLifetime;\n        if (sizeOverLifetime && sizeOverLifetime.enable && sizeOverLifetime.size.type === 1) {\n            var size = sizeOverLifetime.size;\n            if (size.separateAxes) {\n                if (autoRandomSeed) {\n                    particleSize[0] = particleSize[0] * MathUtil.lerp(size.constantMinSeparate.x, size.constantMaxSeparate.x, Math.random());\n                    particleSize[1] = particleSize[1] * MathUtil.lerp(size.constantMinSeparate.y, size.constantMaxSeparate.y, Math.random());\n                    particleSize[2] = particleSize[2] * MathUtil.lerp(size.constantMinSeparate.z, size.constantMaxSeparate.z, Math.random());\n                }\n                else {\n                    rand.seed = randomSeeds[11];\n                    particleSize[0] = particleSize[0] * MathUtil.lerp(size.constantMinSeparate.x, size.constantMaxSeparate.x, rand.getFloat());\n                    particleSize[1] = particleSize[1] * MathUtil.lerp(size.constantMinSeparate.y, size.constantMaxSeparate.y, rand.getFloat());\n                    particleSize[2] = particleSize[2] * MathUtil.lerp(size.constantMinSeparate.z, size.constantMaxSeparate.z, rand.getFloat());\n                    randomSeeds[11] = rand.seed;\n                }\n            }\n            else {\n                var randomSize;\n                if (autoRandomSeed) {\n                    randomSize = MathUtil.lerp(size.constantMin, size.constantMax, Math.random());\n                }\n                else {\n                    rand.seed = randomSeeds[11];\n                    randomSize = MathUtil.lerp(size.constantMin, size.constantMax, rand.getFloat());\n                    randomSeeds[11] = rand.seed;\n                }\n                particleSize[0] = particleSize[0] * randomSize;\n                particleSize[1] = particleSize[1] * randomSize;\n                particleSize[2] = particleSize[2] * randomSize;\n            }\n        }\n        var renderMode = particleRender.renderMode;\n        if (renderMode !== 1) {\n            switch (particleSystem.startRotationType) {\n                case 0:\n                    if (particleSystem.threeDStartRotation) {\n                        var startRotationConstantSeparate = particleSystem.startRotationConstantSeparate;\n                        var randomRotationE = _tempVector30;\n                        ShurikenParticleData._randomInvertRoationArray(startRotationConstantSeparate, randomRotationE, particleSystem.randomizeRotationDirection, autoRandomSeed ? null : rand, randomSeeds);\n                        ShurikenParticleData.startRotation[0] = randomRotationE.x;\n                        ShurikenParticleData.startRotation[1] = randomRotationE.y;\n                        if (renderMode !== 4)\n                            ShurikenParticleData.startRotation[2] = -randomRotationE.z;\n                        else\n                            ShurikenParticleData.startRotation[2] = randomRotationE.z;\n                    }\n                    else {\n                        ShurikenParticleData.startRotation[0] = ShurikenParticleData._randomInvertRoation(particleSystem.startRotationConstant, particleSystem.randomizeRotationDirection, autoRandomSeed ? null : rand, randomSeeds);\n                        ShurikenParticleData.startRotation[1] = 0;\n                        ShurikenParticleData.startRotation[2] = 0;\n                    }\n                    break;\n                case 2:\n                    if (particleSystem.threeDStartRotation) {\n                        var startRotationConstantMinSeparate = particleSystem.startRotationConstantMinSeparate;\n                        var startRotationConstantMaxSeparate = particleSystem.startRotationConstantMaxSeparate;\n                        var lerpRoationE = _tempVector30;\n                        if (autoRandomSeed) {\n                            lerpRoationE.x = MathUtil.lerp(startRotationConstantMinSeparate.x, startRotationConstantMaxSeparate.x, Math.random());\n                            lerpRoationE.y = MathUtil.lerp(startRotationConstantMinSeparate.y, startRotationConstantMaxSeparate.y, Math.random());\n                            lerpRoationE.z = MathUtil.lerp(startRotationConstantMinSeparate.z, startRotationConstantMaxSeparate.z, Math.random());\n                        }\n                        else {\n                            rand.seed = randomSeeds[5];\n                            lerpRoationE.x = MathUtil.lerp(startRotationConstantMinSeparate.x, startRotationConstantMaxSeparate.x, rand.getFloat());\n                            lerpRoationE.y = MathUtil.lerp(startRotationConstantMinSeparate.y, startRotationConstantMaxSeparate.y, rand.getFloat());\n                            lerpRoationE.z = MathUtil.lerp(startRotationConstantMinSeparate.z, startRotationConstantMaxSeparate.z, rand.getFloat());\n                            randomSeeds[5] = rand.seed;\n                        }\n                        ShurikenParticleData._randomInvertRoationArray(lerpRoationE, lerpRoationE, particleSystem.randomizeRotationDirection, autoRandomSeed ? null : rand, randomSeeds);\n                        ShurikenParticleData.startRotation[0] = lerpRoationE.x;\n                        ShurikenParticleData.startRotation[1] = lerpRoationE.y;\n                        if (renderMode !== 4)\n                            ShurikenParticleData.startRotation[2] = -lerpRoationE.z;\n                        else\n                            ShurikenParticleData.startRotation[2] = lerpRoationE.z;\n                    }\n                    else {\n                        if (autoRandomSeed) {\n                            ShurikenParticleData.startRotation[0] = ShurikenParticleData._randomInvertRoation(MathUtil.lerp(particleSystem.startRotationConstantMin, particleSystem.startRotationConstantMax, Math.random()), particleSystem.randomizeRotationDirection, autoRandomSeed ? null : rand, randomSeeds);\n                        }\n                        else {\n                            rand.seed = randomSeeds[5];\n                            ShurikenParticleData.startRotation[0] = ShurikenParticleData._randomInvertRoation(MathUtil.lerp(particleSystem.startRotationConstantMin, particleSystem.startRotationConstantMax, rand.getFloat()), particleSystem.randomizeRotationDirection, autoRandomSeed ? null : rand, randomSeeds);\n                            randomSeeds[5] = rand.seed;\n                        }\n                    }\n                    break;\n            }\n        }\n        switch (particleSystem.startLifetimeType) {\n            case 0:\n                ShurikenParticleData.startLifeTime = particleSystem.startLifetimeConstant;\n                break;\n            case 1:\n                ShurikenParticleData.startLifeTime = ShurikenParticleData._getStartLifetimeFromGradient(particleSystem.startLifeTimeGradient, particleSystem.emissionTime);\n                break;\n            case 2:\n                if (autoRandomSeed) {\n                    ShurikenParticleData.startLifeTime = MathUtil.lerp(particleSystem.startLifetimeConstantMin, particleSystem.startLifetimeConstantMax, Math.random());\n                }\n                else {\n                    rand.seed = randomSeeds[7];\n                    ShurikenParticleData.startLifeTime = MathUtil.lerp(particleSystem.startLifetimeConstantMin, particleSystem.startLifetimeConstantMax, rand.getFloat());\n                    randomSeeds[7] = rand.seed;\n                }\n                break;\n            case 3:\n                var emissionTime = particleSystem.emissionTime;\n                if (autoRandomSeed) {\n                    ShurikenParticleData.startLifeTime = MathUtil.lerp(ShurikenParticleData._getStartLifetimeFromGradient(particleSystem.startLifeTimeGradientMin, emissionTime), ShurikenParticleData._getStartLifetimeFromGradient(particleSystem.startLifeTimeGradientMax, emissionTime), Math.random());\n                }\n                else {\n                    rand.seed = randomSeeds[7];\n                    ShurikenParticleData.startLifeTime = MathUtil.lerp(ShurikenParticleData._getStartLifetimeFromGradient(particleSystem.startLifeTimeGradientMin, emissionTime), ShurikenParticleData._getStartLifetimeFromGradient(particleSystem.startLifeTimeGradientMax, emissionTime), rand.getFloat());\n                    randomSeeds[7] = rand.seed;\n                }\n                break;\n        }\n        var textureSheetAnimation = particleSystem.textureSheetAnimation;\n        var enableSheetAnimation = textureSheetAnimation && textureSheetAnimation.enable;\n        if (enableSheetAnimation) {\n            var title = textureSheetAnimation.tiles;\n            var titleX = title.x, titleY = title.y;\n            var subU = 1.0 / titleX, subV = 1.0 / titleY;\n            var startFrameCount;\n            var startFrame = textureSheetAnimation.startFrame;\n            switch (startFrame.type) {\n                case 0:\n                    startFrameCount = startFrame.constant;\n                    break;\n                case 1:\n                    if (autoRandomSeed) {\n                        startFrameCount = MathUtil.lerp(startFrame.constantMin, startFrame.constantMax, Math.random());\n                    }\n                    else {\n                        rand.seed = randomSeeds[14];\n                        startFrameCount = MathUtil.lerp(startFrame.constantMin, startFrame.constantMax, rand.getFloat());\n                        randomSeeds[14] = rand.seed;\n                    }\n                    break;\n            }\n            var frame = textureSheetAnimation.frame;\n            var cycles = textureSheetAnimation.cycles;\n            switch (frame.type) {\n                case 0:\n                    startFrameCount += frame.constant * cycles;\n                    break;\n                case 2:\n                    if (autoRandomSeed) {\n                        startFrameCount += MathUtil.lerp(frame.constantMin, frame.constantMax, Math.random()) * cycles;\n                    }\n                    else {\n                        rand.seed = randomSeeds[15];\n                        startFrameCount += MathUtil.lerp(frame.constantMin, frame.constantMax, rand.getFloat()) * cycles;\n                        randomSeeds[15] = rand.seed;\n                    }\n                    break;\n            }\n            var startRow = 0;\n            switch (textureSheetAnimation.type) {\n                case 0:\n                    startRow = Math.floor(startFrameCount / titleX);\n                    break;\n                case 1:\n                    if (textureSheetAnimation.randomRow) {\n                        if (autoRandomSeed) {\n                            startRow = Math.floor(Math.random() * titleY);\n                        }\n                        else {\n                            rand.seed = randomSeeds[13];\n                            startRow = Math.floor(rand.getFloat() * titleY);\n                            randomSeeds[13] = rand.seed;\n                        }\n                    }\n                    else {\n                        startRow = textureSheetAnimation.rowIndex;\n                    }\n                    break;\n            }\n            var startCol = Math.floor(startFrameCount % titleX);\n            ShurikenParticleData.startUVInfo = ShurikenParticleData.startUVInfo;\n            ShurikenParticleData.startUVInfo[0] = subU;\n            ShurikenParticleData.startUVInfo[1] = subV;\n            ShurikenParticleData.startUVInfo[2] = startCol * subU;\n            ShurikenParticleData.startUVInfo[3] = startRow * subV;\n        }\n        else {\n            ShurikenParticleData.startUVInfo = ShurikenParticleData.startUVInfo;\n            ShurikenParticleData.startUVInfo[0] = 1.0;\n            ShurikenParticleData.startUVInfo[1] = 1.0;\n            ShurikenParticleData.startUVInfo[2] = 0.0;\n            ShurikenParticleData.startUVInfo[3] = 0.0;\n        }\n    }\n}\nShurikenParticleData.startColor = new Vector4();\nShurikenParticleData.startSize = new Float32Array(3);\nShurikenParticleData.startRotation = new Float32Array(3);\nShurikenParticleData.startUVInfo = new Float32Array(4);\nconst _tempVector30 = new Vector3();\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { VertexShuriKenParticle } from \"./VertexShuriKenParticle\";\nexport class VertexShurikenParticleBillboard extends VertexShuriKenParticle {\n    static get vertexDeclaration() {\n        return VertexShurikenParticleBillboard._vertexDeclaration;\n    }\n    static get vertexInstanceMeshDeclaration() {\n        return VertexShurikenParticleBillboard._vertexInstanceMeshDeclaration;\n    }\n    static get vertexInstanceParticleDeclaration() {\n        return VertexShurikenParticleBillboard._vertexInstanceParticleDeclaration;\n    }\n    static get billboardVertexArray() {\n        return VertexShurikenParticleBillboard._billboardVertexArray;\n    }\n    static get billboardIndexArray() {\n        return VertexShurikenParticleBillboard._billboardIndexArray;\n    }\n    static set billboardIndexArray(value) {\n        VertexShurikenParticleBillboard._billboardIndexArray = value;\n    }\n    static __init__() {\n        VertexShurikenParticleBillboard._vertexDeclaration = new VertexDeclaration(168, [\n            new VertexElement(0, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0),\n            new VertexElement(16, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),\n            new VertexElement(32, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),\n            new VertexElement(48, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_STARTCOLOR0),\n            new VertexElement(64, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTSIZE),\n            new VertexElement(76, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTROTATION),\n            new VertexElement(88, VertexElementFormat.Single, VertexShuriKenParticle.PARTICLE_STARTSPEED),\n            new VertexElement(92, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM0),\n            new VertexElement(108, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM1),\n            new VertexElement(124, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),\n            new VertexElement(136, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),\n            new VertexElement(152, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONUV)\n        ]);\n        VertexShurikenParticleBillboard._vertexInstanceMeshDeclaration = new VertexDeclaration(16, [\n            new VertexElement(0, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_CORNERTEXTURECOORDINATE0)\n        ]);\n        VertexShurikenParticleBillboard._vertexInstanceParticleDeclaration = new VertexDeclaration(152, [\n            new VertexElement(0, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),\n            new VertexElement(16, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),\n            new VertexElement(32, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_STARTCOLOR0),\n            new VertexElement(48, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTSIZE),\n            new VertexElement(60, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTROTATION),\n            new VertexElement(72, VertexElementFormat.Single, VertexShuriKenParticle.PARTICLE_STARTSPEED),\n            new VertexElement(76, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM0),\n            new VertexElement(92, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM1),\n            new VertexElement(108, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),\n            new VertexElement(120, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),\n            new VertexElement(136, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONUV)\n        ]);\n        VertexShurikenParticleBillboard._billboardIndexArray = new Uint16Array([\n            0, 2, 1, 0, 3, 2\n        ]);\n        VertexShurikenParticleBillboard._billboardVertexArray = new Float32Array([\n            -0.5, -0.5, 0, 1,\n            0.5, -0.5, 1, 1,\n            0.5, 0.5, 1, 0,\n            -0.5, 0.5, 0, 0\n        ]);\n    }\n    get cornerTextureCoordinate() {\n        return this._cornerTextureCoordinate;\n    }\n    get positionStartLifeTime() {\n        return this._positionStartLifeTime;\n    }\n    get velocity() {\n        return this._velocity;\n    }\n    get startColor() {\n        return this._startColor;\n    }\n    get startSize() {\n        return this._startSize;\n    }\n    get startRotation0() {\n        return this._startRotation0;\n    }\n    get startRotation1() {\n        return this._startRotation1;\n    }\n    get startRotation2() {\n        return this._startRotation2;\n    }\n    get startLifeTime() {\n        return this._startLifeTime;\n    }\n    get time() {\n        return this._time;\n    }\n    get startSpeed() {\n        return this._startSpeed;\n    }\n    get random0() {\n        return this._randoms0;\n    }\n    get random1() {\n        return this._randoms1;\n    }\n    get simulationWorldPostion() {\n        return this._simulationWorldPostion;\n    }\n    constructor(cornerTextureCoordinate, positionStartLifeTime, velocity, startColor, startSize, startRotation0, startRotation1, startRotation2, ageAddScale, time, startSpeed, randoms0, randoms1, simulationWorldPostion) {\n        super();\n        this._cornerTextureCoordinate = cornerTextureCoordinate;\n        this._positionStartLifeTime = positionStartLifeTime;\n        this._velocity = velocity;\n        this._startColor = startColor;\n        this._startSize = startSize;\n        this._startRotation0 = startRotation0;\n        this._startRotation1 = startRotation1;\n        this._startRotation2 = startRotation2;\n        this._startLifeTime = ageAddScale;\n        this._time = time;\n        this._startSpeed = startSpeed;\n        this._randoms0 = randoms0;\n        this._randoms1 = randoms1;\n        this._simulationWorldPostion = simulationWorldPostion;\n    }\n}\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\nimport { VertexShuriKenParticle } from \"./VertexShuriKenParticle\";\nexport class VertexShurikenParticleMesh extends VertexShuriKenParticle {\n    static __init__() {\n        VertexShurikenParticleMesh._vertexDeclaration = new VertexDeclaration(188, [new VertexElement(0, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_POSITION0),\n            new VertexElement(12, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_COLOR0),\n            new VertexElement(28, VertexElementFormat.Vector2, VertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0),\n            new VertexElement(36, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),\n            new VertexElement(52, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),\n            new VertexElement(68, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_STARTCOLOR0),\n            new VertexElement(84, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTSIZE),\n            new VertexElement(96, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTROTATION),\n            new VertexElement(108, VertexElementFormat.Single, VertexShuriKenParticle.PARTICLE_STARTSPEED),\n            new VertexElement(112, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM0),\n            new VertexElement(128, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM1),\n            new VertexElement(144, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),\n            new VertexElement(156, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),\n            new VertexElement(172, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONUV)]);\n        VertexShurikenParticleMesh._vertexInstanceMeshDeclaration = new VertexDeclaration(36, [\n            new VertexElement(0, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_POSITION0),\n            new VertexElement(12, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_COLOR0),\n            new VertexElement(28, VertexElementFormat.Vector2, VertexShuriKenParticle.PARTICLE_TEXTURECOORDINATE0)\n        ]);\n        VertexShurikenParticleMesh._vertexInstanceParticleDeclaration = new VertexDeclaration(152, [\n            new VertexElement(0, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME),\n            new VertexElement(16, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_DIRECTIONTIME),\n            new VertexElement(32, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_STARTCOLOR0),\n            new VertexElement(48, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTSIZE),\n            new VertexElement(60, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_STARTROTATION),\n            new VertexElement(72, VertexElementFormat.Single, VertexShuriKenParticle.PARTICLE_STARTSPEED),\n            new VertexElement(76, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM0),\n            new VertexElement(92, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_RANDOM1),\n            new VertexElement(108, VertexElementFormat.Vector3, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDPOSTION),\n            new VertexElement(120, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONWORLDROTATION),\n            new VertexElement(136, VertexElementFormat.Vector4, VertexShuriKenParticle.PARTICLE_SIMULATIONUV)\n        ]);\n    }\n    static get vertexDeclaration() {\n        return VertexShurikenParticleMesh._vertexDeclaration;\n    }\n    static get vertexInstanceMeshDeclaration() {\n        return VertexShurikenParticleMesh._vertexInstanceMeshDeclaration;\n    }\n    static get vertexInstanceParticleDeclaration() {\n        return VertexShurikenParticleMesh._vertexInstanceParticleDeclaration;\n    }\n    get cornerTextureCoordinate() {\n        return this._cornerTextureCoordinate;\n    }\n    get position() {\n        return this._positionStartLifeTime;\n    }\n    get velocity() {\n        return this._velocity;\n    }\n    get startColor() {\n        return this._startColor;\n    }\n    get startSize() {\n        return this._startSize;\n    }\n    get startRotation0() {\n        return this._startRotation0;\n    }\n    get startRotation1() {\n        return this._startRotation1;\n    }\n    get startRotation2() {\n        return this._startRotation2;\n    }\n    get startLifeTime() {\n        return this._startLifeTime;\n    }\n    get time() {\n        return this._time;\n    }\n    get startSpeed() {\n        return this._startSpeed;\n    }\n    get random0() {\n        return this._randoms0;\n    }\n    get random1() {\n        return this._randoms1;\n    }\n    get simulationWorldPostion() {\n        return this._simulationWorldPostion;\n    }\n    constructor(cornerTextureCoordinate, positionStartLifeTime, velocity, startColor, startSize, startRotation0, startRotation1, startRotation2, ageAddScale, time, startSpeed, randoms0, randoms1, simulationWorldPostion) {\n        super();\n        this._cornerTextureCoordinate = cornerTextureCoordinate;\n        this._positionStartLifeTime = positionStartLifeTime;\n        this._velocity = velocity;\n        this._startColor = startColor;\n        this._startSize = startSize;\n        this._startRotation0 = startRotation0;\n        this._startRotation1 = startRotation1;\n        this._startRotation2 = startRotation2;\n        this._startLifeTime = ageAddScale;\n        this._time = time;\n        this._startSpeed = startSpeed;\n        this._randoms0 = randoms0;\n        this._randoms1 = randoms1;\n        this._simulationWorldPostion = simulationWorldPostion;\n    }\n}\n","import { GeometryElement } from \"../../d3/core/GeometryElement\";\nimport { Bounds } from \"../../d3/math/Bounds\";\nimport { Rand } from \"../../d3/math/Rand\";\nimport { Laya3DRender } from \"../../d3/RenderObjs/Laya3DRender\";\nimport { SerializeUtil } from \"../../loaders/SerializeUtil\";\nimport { MathUtil } from \"../../maths/MathUtil\";\nimport { Vector2 } from \"../../maths/Vector2\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { Resource } from \"../../resource/Resource\";\nimport { Stat } from \"../../utils/Stat\";\nimport { BufferState } from \"../../webgl/utils/BufferState\";\nimport { Emission } from \"./module/Emission\";\nimport { GradientDataNumber } from \"../common/GradientDataNumber\";\nimport { ParticleSystemShapeType } from \"./module/shape/BaseShape\";\nimport { ShuriKenParticle3DShaderDeclaration } from \"./ShuriKenParticle3DShaderDeclaration\";\nimport { ShurikenParticleData } from \"./ShurikenParticleData\";\nimport { VertexShuriKenParticle } from \"./VertexShuriKenParticle\";\nimport { VertexShurikenParticleBillboard } from \"./VertexShurikenParticleBillboard\";\nimport { VertexShurikenParticleMesh } from \"./VertexShurikenParticleMesh\";\nconst tempV3 = new Vector3();\nexport class ShurikenParticleSystem extends GeometryElement {\n    get maxParticles() {\n        return this._bufferMaxParticles - 1;\n    }\n    set maxParticles(value) {\n        var newMaxParticles = value + 1;\n        if (newMaxParticles !== this._bufferMaxParticles) {\n            this._bufferMaxParticles = newMaxParticles;\n            this._initBufferDatas();\n        }\n        if (!SerializeUtil.isDeserializing)\n            this._updateParticlesSimulationRestart(0);\n    }\n    get emission() {\n        return this._emission;\n    }\n    get aliveParticleCount() {\n        if (this._firstNewElement >= this._firstRetiredElement)\n            return this._firstNewElement - this._firstRetiredElement;\n        else\n            return this._bufferMaxParticles - this._firstRetiredElement + this._firstNewElement;\n    }\n    get emissionTime() {\n        return this._emissionTime > this.duration ? this.duration : this._emissionTime;\n    }\n    get shape() {\n        return this._shape;\n    }\n    set shape(value) {\n        if (this._shape !== value) {\n            if (value && value.enable)\n                this._ownerRender._baseRenderNode.shaderData.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SHAPE);\n            else\n                this._ownerRender._baseRenderNode.shaderData.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SHAPE);\n            this._shape = value;\n        }\n    }\n    get isAlive() {\n        if (this._isPlaying || this.aliveParticleCount > 0)\n            return true;\n        return false;\n    }\n    get isEmitting() {\n        return this._isEmitting;\n    }\n    get isPlaying() {\n        return this._isPlaying;\n    }\n    get isPaused() {\n        return this._isPaused;\n    }\n    get startLifetimeType() {\n        return this._startLifetimeType;\n    }\n    set startLifetimeType(value) {\n        var i, n;\n        switch (this._startLifetimeType) {\n            case 0:\n                this._maxStartLifetime = this._startLifetimeConstant;\n                break;\n            case 1:\n                this._maxStartLifetime = -Number.MAX_VALUE;\n                var startLifeTimeGradient = startLifeTimeGradient;\n                for (i = 0, n = startLifeTimeGradient.gradientCount; i < n; i++)\n                    this._maxStartLifetime = Math.max(this._maxStartLifetime, startLifeTimeGradient.getValueByIndex(i));\n                break;\n            case 2:\n                this._maxStartLifetime = Math.max(this._startLifetimeConstantMin, this._startLifetimeConstantMax);\n                break;\n            case 3:\n                this._maxStartLifetime = -Number.MAX_VALUE;\n                var startLifeTimeGradientMin = startLifeTimeGradientMin;\n                for (i = 0, n = startLifeTimeGradientMin.gradientCount; i < n; i++)\n                    this._maxStartLifetime = Math.max(this._maxStartLifetime, startLifeTimeGradientMin.getValueByIndex(i));\n                var startLifeTimeGradientMax = startLifeTimeGradientMax;\n                for (i = 0, n = startLifeTimeGradientMax.gradientCount; i < n; i++)\n                    this._maxStartLifetime = Math.max(this._maxStartLifetime, startLifeTimeGradientMax.getValueByIndex(i));\n                break;\n        }\n        this._startLifetimeType = value;\n    }\n    get startLifetimeConstant() {\n        return this._startLifetimeConstant;\n    }\n    set startLifetimeConstant(value) {\n        if (this._startLifetimeType === 0)\n            this._maxStartLifetime = value;\n        this._startLifetimeConstant = value;\n    }\n    get startLifeTimeGradient() {\n        return this._startLifeTimeGradient;\n    }\n    set startLifeTimeGradient(value) {\n        if (this._startLifetimeType === 1) {\n            this._maxStartLifetime = -Number.MAX_VALUE;\n            for (var i = 0, n = value.gradientCount; i < n; i++)\n                this._maxStartLifetime = Math.max(this._maxStartLifetime, value.getValueByIndex(i));\n        }\n        this._startLifeTimeGradient = value;\n    }\n    get startLifetimeConstantMin() {\n        return this._startLifetimeConstantMin;\n    }\n    set startLifetimeConstantMin(value) {\n        if (this._startLifetimeType === 2)\n            this._maxStartLifetime = Math.max(value, this._startLifetimeConstantMax);\n        this._startLifetimeConstantMin = value;\n    }\n    get startLifetimeConstantMax() {\n        return this._startLifetimeConstantMax;\n    }\n    set startLifetimeConstantMax(value) {\n        if (this._startLifetimeType === 2)\n            this._maxStartLifetime = Math.max(this._startLifetimeConstantMin, value);\n        this._startLifetimeConstantMax = value;\n    }\n    get startLifeTimeGradientMin() {\n        return this._startLifeTimeGradientMin;\n    }\n    set startLifeTimeGradientMin(value) {\n        if (this._startLifetimeType === 3) {\n            var i, n;\n            this._maxStartLifetime = -Number.MAX_VALUE;\n            for (i = 0, n = value.gradientCount; i < n; i++)\n                this._maxStartLifetime = Math.max(this._maxStartLifetime, value.getValueByIndex(i));\n            for (i = 0, n = this._startLifeTimeGradientMax.gradientCount; i < n; i++)\n                this._maxStartLifetime = Math.max(this._maxStartLifetime, this._startLifeTimeGradientMax.getValueByIndex(i));\n        }\n        this._startLifeTimeGradientMin = value;\n    }\n    get startLifeTimeGradientMax() {\n        return this._startLifeTimeGradientMax;\n    }\n    set startLifeTimeGradientMax(value) {\n        if (this._startLifetimeType === 3) {\n            var i, n;\n            this._maxStartLifetime = -Number.MAX_VALUE;\n            for (i = 0, n = this._startLifeTimeGradientMin.gradientCount; i < n; i++)\n                this._maxStartLifetime = Math.max(this._maxStartLifetime, this._startLifeTimeGradientMin.getValueByIndex(i));\n            for (i = 0, n = value.gradientCount; i < n; i++)\n                this._maxStartLifetime = Math.max(this._maxStartLifetime, value.getValueByIndex(i));\n        }\n        this._startLifeTimeGradientMax = value;\n    }\n    get velocityOverLifetime() {\n        return this._velocityOverLifetime;\n    }\n    set velocityOverLifetime(value) {\n        var shaDat = this._ownerRender._baseRenderNode.shaderData;\n        if (this._mulDefMode) {\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT);\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE);\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT);\n        }\n        shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);\n        this._velocityOverLifetime = value;\n        if (value) {\n            var velocity = value.velocity;\n            var velocityType = velocity.type;\n            if (value.enable) {\n                if (!this._mulDefMode)\n                    shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);\n                switch (velocityType) {\n                    case 0:\n                        if (this._mulDefMode) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECONSTANT);\n                            shaDat.setVector3(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST, velocity.constant);\n                        }\n                        else {\n                            velocity.gradientConstantX._formatData();\n                            velocity.gradientConstantY._formatData();\n                            velocity.gradientConstantZ._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX, velocity.gradientConstantX._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY, velocity.gradientConstantY._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ, velocity.gradientConstantZ._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX, velocity.gradientConstantX._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX, velocity.gradientConstantY._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX, velocity.gradientConstantZ._elements);\n                        }\n                        break;\n                    case 1:\n                        velocity.gradientX._formatData();\n                        velocity.gradientY._formatData();\n                        velocity.gradientZ._formatData();\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX, velocity.gradientX._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY, velocity.gradientY._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ, velocity.gradientZ._elements);\n                        if (this._mulDefMode) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMECURVE);\n                        }\n                        else {\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX, velocity.gradientX._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX, velocity.gradientZ._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX, velocity.gradientY._elements);\n                        }\n                        break;\n                    case 2:\n                        if (this._mulDefMode) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCONSTANT);\n                            shaDat.setVector3(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONST, velocity.constantMin);\n                            shaDat.setVector3(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYCONSTMAX, velocity.constantMax);\n                        }\n                        else {\n                            velocity.gradientConstantXMin._formatData();\n                            velocity.gradientConstantYMin._formatData();\n                            velocity.gradientConstantZMin._formatData();\n                            velocity.gradientConstantXMax._formatData();\n                            velocity.gradientConstantYMax._formatData();\n                            velocity.gradientConstantZMax._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX, velocity.gradientConstantXMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY, velocity.gradientConstantYMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ, velocity.gradientConstantZMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX, velocity.gradientConstantXMax._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX, velocity.gradientConstantYMax._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX, velocity.gradientConstantZMax._elements);\n                        }\n                        break;\n                    case 3:\n                        velocity.gradientXMin._formatData();\n                        velocity.gradientYMin._formatData();\n                        velocity.gradientZMin._formatData();\n                        velocity.gradientXMax._formatData();\n                        velocity.gradientYMax._formatData();\n                        velocity.gradientZMax._formatData();\n                        if (this._mulDefMode)\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_VELOCITYOVERLIFETIMERANDOMCURVE);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTX, velocity.gradientXMin._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTY, velocity.gradientYMin._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZ, velocity.gradientZMin._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTXMAX, velocity.gradientXMax._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTZMAX, velocity.gradientZMax._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.VOLVELOCITYGRADIENTYMAX, velocity.gradientYMax._elements);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            shaDat.setInt(ShuriKenParticle3DShaderDeclaration.VOLSPACETYPE, value.space);\n        }\n    }\n    get colorOverLifetime() {\n        return this._colorOverLifetime;\n    }\n    set colorOverLifetime(value) {\n        var shaDat = this._ownerRender._baseRenderNode.shaderData;\n        if (this._mulDefMode)\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME);\n        shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);\n        this._colorOverLifetime = value;\n        if (value) {\n            var color = value.color;\n            if (value.enable) {\n                switch (color.type) {\n                    case 1:\n                        let gradientColor = color.gradient;\n                        let alphaElements;\n                        let rgbElements;\n                        if (gradientColor.maxColorKeysCount > 4) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8);\n                            alphaElements = gradientColor._getGPUAlphaData8();\n                            rgbElements = gradientColor._getGPURGBData8();\n                        }\n                        else {\n                            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8);\n                            alphaElements = gradientColor._getGPUAlphaData4();\n                            rgbElements = gradientColor._getGPURGBData4();\n                        }\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS, alphaElements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS, rgbElements);\n                        let ranges = gradientColor._keyRanges;\n                        ranges.setValue(1, 0, 1, 0);\n                        for (let index = 0, n = Math.max(2, gradientColor.colorRGBKeysCount); index < n; index++) {\n                            let colorKey = rgbElements[index * 4];\n                            ranges.x = Math.min(ranges.x, colorKey);\n                            ranges.y = Math.max(ranges.y, colorKey);\n                        }\n                        for (let index = 0, n = Math.max(2, gradientColor.colorAlphaKeysCount); index < n; index++) {\n                            let alphaKey = alphaElements[index * 2];\n                            ranges.z = Math.min(ranges.z, alphaKey);\n                            ranges.w = Math.max(ranges.w, alphaKey);\n                        }\n                        shaDat.setVector(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES, ranges);\n                        if (this._mulDefMode) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLOROVERLIFETIME);\n                        }\n                        else {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS, alphaElements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS, rgbElements);\n                            shaDat.setVector(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTRANGES, ranges);\n                        }\n                        break;\n                    case 3:\n                        shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RANDOMCOLOROVERLIFETIME);\n                        let minGradientColor = color.gradientMin;\n                        let maxGradientColor = color.gradientMax;\n                        let minalphaElements;\n                        let minrgbElements;\n                        let maxalphaElements;\n                        let maxrgbElements;\n                        let maxkeyCount = Math.max(minGradientColor.maxColorKeysCount, maxGradientColor.maxColorKeysCount);\n                        if (maxkeyCount > 4) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8);\n                            minalphaElements = minGradientColor._getGPUAlphaData8();\n                            minrgbElements = minGradientColor._getGPURGBData8();\n                            maxalphaElements = maxGradientColor._getGPUAlphaData8();\n                            maxrgbElements = maxGradientColor._getGPURGBData8();\n                        }\n                        else {\n                            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_COLORKEYCOUNT_8);\n                            minalphaElements = minGradientColor._getGPUAlphaData4();\n                            minrgbElements = minGradientColor._getGPURGBData4();\n                            maxalphaElements = maxGradientColor._getGPUAlphaData4();\n                            maxrgbElements = maxGradientColor._getGPURGBData4();\n                        }\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTALPHAS, minalphaElements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTCOLORS, minrgbElements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTALPHAS, maxalphaElements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTCOLORS, maxrgbElements);\n                        let minRanges = minGradientColor._keyRanges;\n                        minRanges.setValue(1, 0, 1, 0);\n                        for (let index = 0, n = Math.max(2, minGradientColor.colorRGBKeysCount); index < n; index++) {\n                            let colorKey = minrgbElements[index * 4];\n                            minRanges.x = Math.min(minRanges.x, colorKey);\n                            minRanges.y = Math.max(minRanges.y, colorKey);\n                        }\n                        for (let index = 0, n = Math.max(2, minGradientColor.colorAlphaKeysCount); index < n; index++) {\n                            let alphaKey = minalphaElements[index * 2];\n                            minRanges.z = Math.min(minRanges.z, alphaKey);\n                            minRanges.w = Math.max(minRanges.w, alphaKey);\n                        }\n                        shaDat.setVector(ShuriKenParticle3DShaderDeclaration.COLOROVERLIFEGRADIENTRANGES, minRanges);\n                        let maxRanges = maxGradientColor._keyRanges;\n                        maxRanges.setValue(1, 0, 1, 0);\n                        for (let index = 0, n = Math.max(2, maxGradientColor.colorRGBKeysCount); index < n; index++) {\n                            let colorKey = maxrgbElements[index * 4];\n                            maxRanges.x = Math.min(maxRanges.x, colorKey);\n                            maxRanges.y = Math.max(maxRanges.y, colorKey);\n                        }\n                        for (let index = 0, n = Math.max(2, maxGradientColor.colorAlphaKeysCount); index < n; index++) {\n                            let alphaKey = maxalphaElements[index * 2];\n                            maxRanges.z = Math.min(maxRanges.z, alphaKey);\n                            maxRanges.w = Math.max(maxRanges.w, alphaKey);\n                        }\n                        shaDat.setVector(ShuriKenParticle3DShaderDeclaration.MAXCOLOROVERLIFEGRADIENTRANGES, maxRanges);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n    get sizeOverLifetime() {\n        return this._sizeOverLifetime;\n    }\n    set sizeOverLifetime(value) {\n        var shaDat = this._ownerRender._baseRenderNode.shaderData;\n        if (this._mulDefMode) {\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVE);\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE);\n        }\n        shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES);\n        shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);\n        this._sizeOverLifetime = value;\n        if (value) {\n            var size = value.size;\n            var sizeSeparate = size.separateAxes;\n            var sizeType = size.type;\n            if (value.enable) {\n                switch (sizeType) {\n                    case 0:\n                        if (sizeSeparate) {\n                            size.gradientX._formatData();\n                            size.gradientY._formatData();\n                            size.gradientZ._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX, size.gradientX._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY, size.gradientY._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ, size.gradientZ._elements);\n                            if (this._mulDefMode) {\n                                shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVESEPERATE);\n                            }\n                            else {\n                                shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTXMAX, size.gradientX._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTYMAX, size.gradientY._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZMAX, size.gradientZ._elements);\n                            }\n                        }\n                        else {\n                            size.gradient._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT, size.gradient._elements);\n                            if (this._mulDefMode) {\n                                shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMECURVE);\n                            }\n                            else {\n                                shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientMax, size.gradient._elements);\n                            }\n                        }\n                        break;\n                    case 2:\n                        if (sizeSeparate) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVESSEPERATE);\n                            size.gradientXMin._formatData();\n                            size.gradientXMax._formatData();\n                            size.gradientYMin._formatData();\n                            size.gradientYMax._formatData();\n                            size.gradientZMin._formatData();\n                            size.gradientZMax._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTX, size.gradientXMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTXMAX, size.gradientXMax._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTY, size.gradientYMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENTYMAX, size.gradientYMax._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZ, size.gradientZMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientZMAX, size.gradientZMax._elements);\n                        }\n                        else {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_SIZEOVERLIFETIMERANDOMCURVES);\n                            size.gradientMin._formatData();\n                            size.gradientMax._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSIZEGRADIENT, size.gradientMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.SOLSizeGradientMax, size.gradientMax._elements);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n    get rotationOverLifetime() {\n        return this._rotationOverLifetime;\n    }\n    set rotationOverLifetime(value) {\n        var shaDat = this._ownerRender._baseRenderNode.shaderData;\n        shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME);\n        shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE);\n        if (this._mulDefMode) {\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT);\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE);\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS);\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);\n        }\n        this._rotationOverLifetime = value;\n        if (value) {\n            var rotation = value.angularVelocity;\n            if (!rotation)\n                return;\n            var rotationSeparate = rotation.separateAxes;\n            var rotationType = rotation.type;\n            if (value.enable) {\n                if (rotationSeparate) {\n                    shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMESEPERATE);\n                }\n                else {\n                    shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIME);\n                }\n                switch (rotationType) {\n                    case 0:\n                        if (this._mulDefMode) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECONSTANT);\n                            if (rotationSeparate) {\n                                shaDat.setVector3(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE, rotation.constantSeparate);\n                            }\n                            else {\n                                shaDat.setNumber(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST, rotation.constant);\n                            }\n                        }\n                        else {\n                            if (rotationSeparate) {\n                                rotation._constantXGradientDdata._formatData();\n                                rotation._constantYGradientDdata._formatData();\n                                rotation._constantZGradientDdata._formatData();\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX, rotation._constantXGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX, rotation._constantXGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY, rotation._constantYGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX, rotation._constantYGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ, rotation._constantZGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX, rotation._constantZGradientDdata._elements);\n                            }\n                            else {\n                                rotation._constantGradientDdata._formatData();\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT, rotation._constantGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX, rotation._constantGradientDdata._elements);\n                            }\n                        }\n                        break;\n                    case 1:\n                        if (this._mulDefMode)\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMECURVE);\n                        if (rotationSeparate) {\n                            rotation.gradientX._formatData();\n                            rotation.gradientY._formatData();\n                            rotation.gradientZ._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX, rotation.gradientX._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY, rotation.gradientY._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ, rotation.gradientZ._elements);\n                            if (!this._mulDefMode) {\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX, rotation.gradientX._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX, rotation.gradientY._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX, rotation.gradientZ._elements);\n                            }\n                        }\n                        else {\n                            rotation.gradient._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT, rotation.gradient._elements);\n                            if (!this._mulDefMode)\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX, rotation.gradient._elements);\n                        }\n                        break;\n                    case 2:\n                        if (this._mulDefMode) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCONSTANTS);\n                            if (rotationSeparate) {\n                                shaDat.setVector3(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTSEPRARATE, rotation.constantMinSeparate);\n                                shaDat.setVector3(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAXSEPRARATE, rotation.constantMaxSeparate);\n                            }\n                            else {\n                                shaDat.setNumber(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONST, rotation.constantMin);\n                                shaDat.setNumber(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYCONSTMAX, rotation.constantMax);\n                            }\n                        }\n                        else {\n                            if (rotationSeparate) {\n                                rotation._constantXMinGradientDdata._formatData();\n                                rotation._constantXMaxGradientDdata._formatData();\n                                rotation._constantYMinGradientDdata._formatData();\n                                rotation._constantYMaxGradientDdata._formatData();\n                                rotation._constantZMinGradientDdata._formatData();\n                                rotation._constantZMaxGradientDdata._formatData();\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX, rotation._constantXMinGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX, rotation._constantXMaxGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY, rotation._constantYMinGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX, rotation._constantYMaxGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ, rotation._constantZMinGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX, rotation._constantZMaxGradientDdata._elements);\n                            }\n                            else {\n                                rotation._constantMinGradientDdata._formatData();\n                                rotation._constantMaxGradientDdata._formatData();\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT, rotation._constantMinGradientDdata._elements);\n                                shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX, rotation._constantMaxGradientDdata._elements);\n                            }\n                        }\n                        break;\n                    case 3:\n                        if (this._mulDefMode)\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_ROTATIONOVERLIFETIMERANDOMCURVES);\n                        if (rotationSeparate) {\n                            rotation.gradientXMin._formatData();\n                            rotation.gradientXMax._formatData();\n                            rotation.gradientYMin._formatData();\n                            rotation.gradientYMax._formatData();\n                            rotation.gradientZMin._formatData();\n                            rotation.gradientZMax._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTX, rotation.gradientXMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTXMAX, rotation.gradientXMax._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTY, rotation.gradientYMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTYMAX, rotation.gradientYMax._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZ, rotation.gradientZMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTZMAX, rotation.gradientZMax._elements);\n                        }\n                        else {\n                            rotation.gradientMin._formatData();\n                            rotation.gradientMax._formatData();\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENT, rotation.gradientMin._elements);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.ROLANGULARVELOCITYGRADIENTMAX, rotation.gradientMax._elements);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n    get textureSheetAnimation() {\n        return this._textureSheetAnimation;\n    }\n    set textureSheetAnimation(value) {\n        var shaDat = this._ownerRender._baseRenderNode.shaderData;\n        this._textureSheetAnimation = value;\n        if (this._mulDefMode) {\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE);\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);\n        }\n        if (value && value.enable) {\n            var frameOverTime = value.frame;\n            var textureAniType = frameOverTime.type;\n            shaDat.setNumber(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONCYCLES, value.cycles);\n            var title = value.tiles;\n            var _uvLengthE = this._uvLength;\n            _uvLengthE.x = 1.0 / title.x;\n            _uvLengthE.y = 1.0 / title.y;\n            shaDat.setVector2(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONSUBUVLENGTH, this._uvLength);\n            if (value.enable) {\n                switch (textureAniType) {\n                    case 1:\n                        frameOverTime.frameOverTimeData._formatData();\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS, frameOverTime.frameOverTimeData._elements);\n                        if (this._mulDefMode) {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONCURVE);\n                        }\n                        else {\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);\n                            shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTMAXUVS, frameOverTime.frameOverTimeData._elements);\n                        }\n                        break;\n                    case 3:\n                        frameOverTime.frameOverTimeDataMin._formatData();\n                        frameOverTime.frameOverTimeDataMax._formatData();\n                        if (!this._mulDefMode)\n                            shaDat.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTUVS, frameOverTime.frameOverTimeDataMin._elements);\n                        shaDat.setBuffer(ShuriKenParticle3DShaderDeclaration.TEXTURESHEETANIMATIONGRADIENTMAXUVS, frameOverTime.frameOverTimeDataMax._elements);\n                        break;\n                    default:\n                        shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);\n                        break;\n                }\n            }\n        }\n        else {\n            shaDat.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_TEXTURESHEETANIMATIONRANDOMCURVE);\n        }\n    }\n    constructor(render, meshTopology = MeshTopology.Triangles, drawType = DrawType.DrawElement) {\n        super(meshTopology, drawType);\n        this._bounds = null;\n        this._gravityOffset = new Vector2();\n        this._customBounds = null;\n        this._useCustomBounds = false;\n        this._owner = null;\n        this._ownerRender = null;\n        this._vertices = null;\n        this._floatCountPerVertex = 0;\n        this._startLifeTimeIndex = 0;\n        this._timeIndex = 0;\n        this._simulationUV_Index = 0;\n        this._simulateUpdate = false;\n        this._firstActiveElement = 0;\n        this._firstNewElement = 0;\n        this._firstFreeElement = 0;\n        this._firstRetiredElement = 0;\n        this._drawCounter = 0;\n        this._bufferMaxParticles = 0;\n        this._emission = null;\n        this._shape = null;\n        this._isEmitting = false;\n        this._isPlaying = false;\n        this._isPaused = false;\n        this._playStartDelay = 0;\n        this._frameRateTime = 0;\n        this._emissionTime = 0;\n        this._totalDelayTime = 0;\n        this._emissionDistance = 0;\n        this._emissionLastPosition = new Vector3();\n        this._burstsIndex = 0;\n        this._velocityOverLifetime = null;\n        this._colorOverLifetime = null;\n        this._sizeOverLifetime = null;\n        this._rotationOverLifetime = null;\n        this._textureSheetAnimation = null;\n        this._startLifetimeType = 0;\n        this._startLifetimeConstant = 0;\n        this._startLifeTimeGradient = null;\n        this._startLifetimeConstantMin = 0;\n        this._startLifetimeConstantMax = 0;\n        this._startLifeTimeGradientMin = null;\n        this._startLifeTimeGradientMax = null;\n        this._maxStartLifetime = 0;\n        this._uvLength = new Vector2();\n        this._vertexStride = 0;\n        this._indexStride = 0;\n        this._vertexBuffer = null;\n        this._indexBuffer = null;\n        this._bufferState = new BufferState();\n        this._updateMask = 0;\n        this._currentTime = 0;\n        this._startUpdateLoopCount = 0;\n        this._rand = null;\n        this._randomSeeds = null;\n        this.duration = 0;\n        this.looping = false;\n        this.prewarm = false;\n        this.startDelayType = 0;\n        this.startDelay = 0;\n        this.startDelayMin = 0;\n        this.startDelayMax = 0;\n        this.startSpeedType = 0;\n        this.startSpeedConstant = 0;\n        this.startSpeedConstantMin = 0;\n        this.startSpeedConstantMax = 0;\n        this.dragType = 0;\n        this.dragConstant = 0;\n        this.dragSpeedConstantMin = 0;\n        this.dragSpeedConstantMax = 0;\n        this.threeDStartSize = false;\n        this.startSizeType = 0;\n        this.startSizeConstant = 0;\n        this.startSizeConstantSeparate = null;\n        this.startSizeConstantMin = 0;\n        this.startSizeConstantMax = 0;\n        this.startSizeConstantMinSeparate = null;\n        this.startSizeConstantMaxSeparate = null;\n        this.threeDStartRotation = false;\n        this.startRotationType = 0;\n        this.startRotationConstant = 0;\n        this.startRotationConstantSeparate = null;\n        this.startRotationConstantMin = 0;\n        this.startRotationConstantMax = 0;\n        this.startRotationConstantMinSeparate = null;\n        this.startRotationConstantMaxSeparate = null;\n        this.randomizeRotationDirection = 0;\n        this.startColorType = 0;\n        this.startColorConstant = new Vector4(1, 1, 1, 1);\n        this.startColorConstantMin = new Vector4(0, 0, 0, 0);\n        this.startColorConstantMax = new Vector4(1, 1, 1, 1);\n        this.gravityModifier = 0;\n        this.simulationSpace = 0;\n        this.simulationSpeed = 1.0;\n        this.scaleMode = 1;\n        this.playOnAwake = false;\n        this.randomSeed = null;\n        this.autoRandomSeed = false;\n        this.isPerformanceMode = false;\n        this._mulDefMode = ShuriKenParticle3DShaderDeclaration.mulShaderDefineMode;\n        this.indexFormat = IndexFormat.UInt16;\n        this._firstActiveElement = 0;\n        this._firstNewElement = 0;\n        this._firstFreeElement = 0;\n        this._firstRetiredElement = 0;\n        this._owner = render.owner;\n        this._ownerRender = render;\n        this._useCustomBounds = false;\n        this._currentTime = 0;\n        this._bounds = new Bounds(new Vector3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE), new Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE));\n        this.bufferState = this._bufferState = new BufferState();\n        this._isEmitting = false;\n        this._isPlaying = false;\n        this._isPaused = false;\n        this._burstsIndex = 0;\n        this._frameRateTime = 0;\n        this._emissionTime = 0;\n        this._totalDelayTime = 0;\n        this._simulateUpdate = false;\n        this._bufferMaxParticles = 1;\n        this.duration = 5.0;\n        this.looping = true;\n        this.prewarm = false;\n        this.startDelayType = 0;\n        this.startDelay = 0.0;\n        this.startDelayMin = 0.0;\n        this.startDelayMax = 0.0;\n        this._startLifetimeType = 0;\n        this._startLifetimeConstant = 5.0;\n        this._startLifeTimeGradient = new GradientDataNumber();\n        this._startLifetimeConstantMin = 0.0;\n        this._startLifetimeConstantMax = 5.0;\n        this._startLifeTimeGradientMin = new GradientDataNumber();\n        this._startLifeTimeGradientMax = new GradientDataNumber();\n        this._maxStartLifetime = 5.0;\n        this.startSpeedType = 0;\n        this.startSpeedConstant = 5.0;\n        this.startSpeedConstantMin = 0.0;\n        this.startSpeedConstantMax = 5.0;\n        this.dragType = 0;\n        this.dragConstant = 0;\n        this.dragSpeedConstantMin = 0;\n        this.dragSpeedConstantMax = 0;\n        this.threeDStartSize = false;\n        this.startSizeType = 0;\n        this.startSizeConstant = 1;\n        this.startSizeConstantSeparate = new Vector3(1, 1, 1);\n        this.startSizeConstantMin = 0;\n        this.startSizeConstantMax = 1;\n        this.startSizeConstantMinSeparate = new Vector3(0, 0, 0);\n        this.startSizeConstantMaxSeparate = new Vector3(1, 1, 1);\n        this.threeDStartRotation = false;\n        this.startRotationType = 0;\n        this.startRotationConstant = 0;\n        this.startRotationConstantSeparate = new Vector3(0, 0, 0);\n        this.startRotationConstantMin = 0.0;\n        this.startRotationConstantMax = 0.0;\n        this.startRotationConstantMinSeparate = new Vector3(0, 0, 0);\n        this.startRotationConstantMaxSeparate = new Vector3(0, 0, 0);\n        this.gravityModifier = 0.0;\n        this.simulationSpace = 1;\n        this.scaleMode = 1;\n        this.playOnAwake = true;\n        this._rand = new Rand(0);\n        this.autoRandomSeed = true;\n        this.randomSeed = new Uint32Array(1);\n        this._randomSeeds = new Uint32Array(ShurikenParticleSystem._RANDOMOFFSET.length);\n        this.isPerformanceMode = true;\n        this._emission = new Emission();\n        this._emission.enable = true;\n    }\n    _getVertexBuffer(index = 0) {\n        if (index === 0)\n            return this._vertexBuffer;\n        else\n            return null;\n    }\n    _getIndexBuffer() {\n        return this._indexBuffer;\n    }\n    _generateBounds() {\n        var particleRender = this._ownerRender;\n        var boundsMin = this._bounds.getMin();\n        var boundsMax = this._bounds.getMax();\n        var time = 0;\n        switch (this._startLifetimeType) {\n            case 0:\n                time = this._startLifetimeConstant;\n                break;\n            case 2:\n                time = this._startLifetimeConstantMax;\n                break;\n            case 1:\n            case 3:\n            default:\n                break;\n        }\n        var speedOrigan = 0;\n        switch (this.startSpeedType) {\n            case 0:\n                speedOrigan = this.startSpeedConstant;\n                break;\n            case 2:\n                speedOrigan = this.startSpeedConstantMax;\n                break;\n            case 1:\n            case 3:\n            default:\n                break;\n        }\n        var maxSizeScale = 0;\n        if (this.threeDStartSize) {\n            switch (this.startSizeType) {\n                case 0:\n                    maxSizeScale = Math.max(this.startSizeConstantSeparate.x, this.startSizeConstantSeparate.y, this.startSizeConstantSeparate.z);\n                    break;\n                case 2:\n                    maxSizeScale = Math.max(this.startSizeConstantMaxSeparate.x, this.startSizeConstantMaxSeparate.y, this.startSizeConstantMaxSeparate.z);\n                    break;\n                case 1:\n                case 3:\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (this.startSizeType) {\n                case 0:\n                    maxSizeScale = this.startSizeConstant;\n                    break;\n                case 2:\n                    maxSizeScale = this.startSizeConstantMax;\n                    break;\n                case 1:\n                case 3:\n                default:\n                    break;\n            }\n        }\n        var zDirectionSpeed = _tempVector30;\n        var fDirectionSpeed = _tempVector31;\n        var zEmisionOffsetXYZ = _tempVector32;\n        var fEmisionOffsetXYZ = _tempVector33;\n        zDirectionSpeed.setValue(0, 0, 1);\n        fDirectionSpeed.setValue(0, 0, 0);\n        zEmisionOffsetXYZ.setValue(0, 0, 0);\n        fEmisionOffsetXYZ.setValue(0, 0, 0);\n        if (this._shape && this._shape.enable) {\n            switch (this._shape.shapeType) {\n                case ParticleSystemShapeType.Sphere:\n                    var sphere = this._shape;\n                    zDirectionSpeed.setValue(1, 1, 1);\n                    fDirectionSpeed.setValue(1, 1, 1);\n                    zEmisionOffsetXYZ.setValue(sphere.radius, sphere.radius, sphere.radius);\n                    fEmisionOffsetXYZ.setValue(sphere.radius, sphere.radius, sphere.radius);\n                    break;\n                case ParticleSystemShapeType.Hemisphere:\n                    var hemiShpere = this._shape;\n                    zDirectionSpeed.setValue(1, 1, 1);\n                    fDirectionSpeed.setValue(1, 1, 1);\n                    zEmisionOffsetXYZ.setValue(hemiShpere.radius, hemiShpere.radius, hemiShpere.radius);\n                    fEmisionOffsetXYZ.setValue(hemiShpere.radius, hemiShpere.radius, 0.0);\n                    break;\n                case ParticleSystemShapeType.Cone:\n                    var cone = this._shape;\n                    if (cone.emitType == 0 || cone.emitType == 1) {\n                        var angle = cone.angle;\n                        var sinAngle = Math.sin(angle);\n                        zDirectionSpeed.setValue(sinAngle, sinAngle, 1.0);\n                        fDirectionSpeed.setValue(sinAngle, sinAngle, 0.0);\n                        zEmisionOffsetXYZ.setValue(cone.radius, cone.radius, 0.0);\n                        fEmisionOffsetXYZ.setValue(cone.radius, cone.radius, 0.0);\n                        break;\n                    }\n                    else if (cone.emitType == 2 || cone.emitType == 3) {\n                        var angle = cone.angle;\n                        var sinAngle = Math.sin(angle);\n                        var coneLength = cone.length;\n                        zDirectionSpeed.setValue(sinAngle, sinAngle, 1.0);\n                        fDirectionSpeed.setValue(sinAngle, sinAngle, 0.0);\n                        var tanAngle = Math.tan(angle);\n                        var rPLCT = cone.radius + coneLength * tanAngle;\n                        zEmisionOffsetXYZ.setValue(rPLCT, rPLCT, coneLength);\n                        fEmisionOffsetXYZ.setValue(rPLCT, rPLCT, 0.0);\n                    }\n                    break;\n                case ParticleSystemShapeType.Box:\n                    var box = this._shape;\n                    if (this._shape.randomDirection != 0) {\n                        zDirectionSpeed.setValue(1, 1, 1);\n                        fDirectionSpeed.setValue(1, 1, 1);\n                    }\n                    zEmisionOffsetXYZ.setValue(box.x / 2, box.y / 2, box.z / 2);\n                    fEmisionOffsetXYZ.setValue(box.x / 2, box.y / 2, box.z / 2);\n                    break;\n                case ParticleSystemShapeType.Circle:\n                    var circle = this._shape;\n                    zDirectionSpeed.setValue(1, 1, 1);\n                    fDirectionSpeed.setValue(1, 1, 1);\n                    zEmisionOffsetXYZ.setValue(circle.radius, circle.radius, 0);\n                    fEmisionOffsetXYZ.setValue(circle.radius, circle.radius, 0);\n                    break;\n                default:\n                    break;\n            }\n        }\n        var meshSize = 0;\n        var meshMode = particleRender.renderMode == 4;\n        switch (particleRender.renderMode) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                meshSize = ShurikenParticleSystem.halfKSqrtOf2;\n                break;\n            case 4:\n                if (particleRender.mesh) {\n                    var meshBounds = particleRender.mesh.bounds;\n                    meshSize = Math.sqrt(Math.pow(meshBounds.getExtent().x, 2.0) + Math.pow(meshBounds.getExtent().y, 2.0) + Math.pow(meshBounds.getExtent().z, 2.0));\n                }\n                else {\n                    meshSize = ShurikenParticleSystem.halfKSqrtOf2;\n                }\n                break;\n            default:\n                break;\n        }\n        var endSizeOffset = _tempVector36;\n        endSizeOffset.setValue(1, 1, 1);\n        if (this._sizeOverLifetime && this._sizeOverLifetime.enable) {\n            var gradientSize = this._sizeOverLifetime.size;\n            var maxSize = gradientSize.getMaxSizeInGradient(meshMode);\n            endSizeOffset.setValue(maxSize, maxSize, maxSize);\n        }\n        var offsetSize = meshSize * maxSizeScale;\n        Vector3.scale(endSizeOffset, offsetSize, endSizeOffset);\n        var speedZOffset = _tempVector34;\n        var speedFOffset = _tempVector35;\n        if (speedOrigan > 0) {\n            Vector3.scale(zDirectionSpeed, speedOrigan, speedZOffset);\n            Vector3.scale(fDirectionSpeed, speedOrigan, speedFOffset);\n        }\n        else {\n            Vector3.scale(zDirectionSpeed, -speedOrigan, speedFOffset);\n            Vector3.scale(fDirectionSpeed, -speedOrigan, speedZOffset);\n        }\n        if (this._velocityOverLifetime && this._velocityOverLifetime.enable) {\n            var gradientVelocity = this._velocityOverLifetime.velocity;\n            var velocitySpeedOffset = _tempVector37;\n            velocitySpeedOffset.setValue(0, 0, 0);\n            switch (gradientVelocity.type) {\n                case 0:\n                    gradientVelocity.constant.cloneTo(velocitySpeedOffset);\n                    break;\n                case 2:\n                    gradientVelocity.constantMax.cloneTo(velocitySpeedOffset);\n                    break;\n                case 1:\n                    var curveX = gradientVelocity.gradientX.getAverageValue();\n                    var curveY = gradientVelocity.gradientY.getAverageValue();\n                    var curveZ = gradientVelocity.gradientZ.getAverageValue();\n                    velocitySpeedOffset.setValue(curveX, curveY, curveZ);\n                    break;\n                case 3:\n                    var xMax = gradientVelocity.gradientXMax.getAverageValue();\n                    var yMax = gradientVelocity.gradientYMax.getAverageValue();\n                    var zMax = gradientVelocity.gradientZMax.getAverageValue();\n                    velocitySpeedOffset.setValue(xMax, yMax, zMax);\n                    break;\n                default:\n                    break;\n            }\n            if (this._velocityOverLifetime.space == 1) {\n                Vector3.transformV3ToV3(velocitySpeedOffset, this._owner.transform.worldMatrix, velocitySpeedOffset);\n            }\n            Vector3.add(speedZOffset, velocitySpeedOffset, speedZOffset);\n            Vector3.subtract(speedFOffset, velocitySpeedOffset, speedFOffset);\n            Vector3.max(speedZOffset, Vector3.ZERO, speedZOffset);\n            Vector3.max(speedFOffset, Vector3.ZERO, speedFOffset);\n        }\n        Vector3.scale(speedZOffset, time, speedZOffset);\n        Vector3.scale(speedFOffset, time, speedFOffset);\n        var gravity = this.gravityModifier;\n        if (gravity != 0) {\n            var gravityOffset = 0.5 * ShurikenParticleSystem.g * gravity * time * time;\n            var speedZOffsetY = speedZOffset.y - gravityOffset;\n            var speedFOffsetY = speedFOffset.y + gravityOffset;\n            speedZOffsetY = speedZOffsetY > 0 ? speedZOffsetY : 0;\n            speedFOffsetY = speedFOffsetY > 0 ? speedFOffsetY : 0;\n            this._gravityOffset.setValue(speedZOffset.y - speedZOffsetY, speedFOffsetY - speedFOffset.y);\n        }\n        Vector3.add(speedZOffset, endSizeOffset, boundsMax);\n        Vector3.add(boundsMax, zEmisionOffsetXYZ, boundsMax);\n        Vector3.add(speedFOffset, endSizeOffset, boundsMin);\n        Vector3.add(boundsMin, fEmisionOffsetXYZ, boundsMin);\n        Vector3.scale(boundsMin, -1, boundsMin);\n        this._bounds.setMin(boundsMin);\n        this._bounds.setMax(boundsMax);\n    }\n    get customBounds() {\n        return this._customBounds;\n    }\n    set customBounds(value) {\n        if (value) {\n            this._useCustomBounds = true;\n            if (!this._customBounds) {\n                this._customBounds = new Bounds(new Vector3(), new Vector3());\n                this._ownerRender.geometryBounds = this._customBounds;\n            }\n            this._customBounds = value;\n        }\n        else {\n            this._useCustomBounds = false;\n            this._customBounds = null;\n            this._ownerRender.geometryBounds = null;\n        }\n    }\n    _simulationSupported() {\n        if (this.simulationSpace == 0 && this._emission.emissionRateOverDistance > 0) {\n            return false;\n        }\n        return true;\n    }\n    _updateEmission() {\n        if (!this.isAlive)\n            return;\n        if (this._simulateUpdate) {\n            this._simulateUpdate = false;\n        }\n        else {\n            let elapsedTime = ((this._startUpdateLoopCount !== Stat.loopCount && !this._isPaused) && this._owner._scene) ? this._owner._scene.timer.delta / 1000.0 : 0;\n            elapsedTime = Math.min(ShurikenParticleSystem._maxElapsedTime, elapsedTime * this.simulationSpeed);\n            this._updateParticles(elapsedTime);\n        }\n    }\n    _updateParticles(elapsedTime) {\n        if (this._ownerRender.renderMode === 4 && !this._ownerRender.mesh)\n            return;\n        this._currentTime += elapsedTime;\n        this._retireActiveParticles();\n        this._freeRetiredParticles();\n        this._totalDelayTime += elapsedTime;\n        if (this._totalDelayTime < this._playStartDelay) {\n            return;\n        }\n        if (this._emission.enable && this._isEmitting && !this._isPaused) {\n            this._advanceTime(elapsedTime, this._currentTime);\n            if (this._emission.emissionRateOverDistance > 0) {\n                this._advanceDistance(this._currentTime, elapsedTime);\n            }\n            let position = this._owner.transform.position;\n            position.cloneTo(this._emissionLastPosition);\n        }\n    }\n    _updateParticlesSimulationRestart(time) {\n        this._firstActiveElement = 0;\n        this._firstNewElement = 0;\n        this._firstFreeElement = 0;\n        this._firstRetiredElement = 0;\n        this._burstsIndex = 0;\n        this._frameRateTime = time;\n        this._emissionTime = 0;\n        this._emissionDistance = 0;\n        this._totalDelayTime = 0;\n        this._currentTime = time;\n        var delayTime = time;\n        if (delayTime < this._playStartDelay) {\n            this._totalDelayTime = delayTime;\n            return;\n        }\n        if (this._emission.enable) {\n            this._advanceTime(time, time);\n            if (this._emission.emissionRateOverDistance > 0) {\n                this._advanceDistance(this._currentTime, time);\n            }\n            let position = this._owner.transform.position;\n            position.cloneTo(this._emissionLastPosition);\n        }\n    }\n    _retireActiveParticles() {\n        const epsilon = 0.0001;\n        while (this._firstActiveElement != this._firstNewElement) {\n            var index = this._firstActiveElement * this._floatCountPerVertex * this._vertexStride;\n            var timeIndex = index + this._timeIndex;\n            var particleAge = this._currentTime - this._vertices[timeIndex];\n            if (particleAge + epsilon < this._vertices[index + this._startLifeTimeIndex])\n                break;\n            this._vertices[timeIndex] = this._drawCounter;\n            this._firstActiveElement++;\n            if (this._firstActiveElement >= this._bufferMaxParticles)\n                this._firstActiveElement = 0;\n        }\n    }\n    _freeRetiredParticles() {\n        while (this._firstRetiredElement != this._firstActiveElement) {\n            var age = this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * this._vertexStride + this._timeIndex];\n            if (false)\n                if (age < 3)\n                    break;\n            this._firstRetiredElement++;\n            if (this._firstRetiredElement >= this._bufferMaxParticles)\n                this._firstRetiredElement = 0;\n        }\n    }\n    _burst(fromTime, toTime) {\n        var totalEmitCount = 0;\n        var bursts = this._emission._bursts;\n        for (var n = bursts.length; this._burstsIndex < n; this._burstsIndex++) {\n            var burst = bursts[this._burstsIndex];\n            var burstTime = burst.time;\n            if (fromTime <= burstTime && burstTime < toTime) {\n                var emitCount;\n                if (this.autoRandomSeed) {\n                    emitCount = MathUtil.lerp(burst.minCount, burst.maxCount, Math.random());\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[0];\n                    emitCount = MathUtil.lerp(burst.minCount, burst.maxCount, this._rand.getFloat());\n                    this._randomSeeds[0] = this._rand.seed;\n                }\n                totalEmitCount += emitCount;\n            }\n            else {\n                break;\n            }\n        }\n        return totalEmitCount;\n    }\n    _advanceTime(elapsedTime, emitTime) {\n        var i;\n        var lastEmissionTime = this._emissionTime;\n        this._emissionTime += elapsedTime;\n        var totalEmitCount = 0;\n        if (this._emissionTime > this.duration) {\n            if (this.looping) {\n                totalEmitCount += this._burst(lastEmissionTime, this._emissionTime);\n                this._emissionTime -= this.duration;\n                this._burstsIndex = 0;\n                totalEmitCount += this._burst(0, this._emissionTime);\n            }\n            else {\n                totalEmitCount = Math.min(this.maxParticles - this.aliveParticleCount, totalEmitCount);\n                for (i = 0; i < totalEmitCount; i++)\n                    this.emit(emitTime, elapsedTime);\n                this._isPlaying = false;\n                this.stop();\n                return;\n            }\n        }\n        else {\n            totalEmitCount += this._burst(lastEmissionTime, this._emissionTime);\n        }\n        totalEmitCount = Math.min(this.maxParticles - this.aliveParticleCount, totalEmitCount);\n        for (i = 0; i < totalEmitCount; i++)\n            this.emit(emitTime, elapsedTime);\n        var emissionRate = this._emission.emissionRate;\n        if (emissionRate > 0) {\n            var minEmissionTime = 1 / emissionRate;\n            this._frameRateTime += minEmissionTime;\n            this._frameRateTime = this._currentTime - (this._currentTime - this._frameRateTime) % this._maxStartLifetime;\n            while (this._frameRateTime <= emitTime) {\n                if (this.emit(this._frameRateTime, elapsedTime)) {\n                    this._frameRateTime += minEmissionTime;\n                }\n                else\n                    break;\n            }\n            this._frameRateTime = Math.floor(emitTime / minEmissionTime) * minEmissionTime;\n        }\n    }\n    _advanceDistance(emitTime, elapsedTime) {\n        let position = this._owner.transform.position;\n        let offsetDistance = Vector3.distance(position, this._emissionLastPosition);\n        let rateOverDistance = this._emission.emissionRateOverDistance;\n        let distance = this._emissionDistance + offsetDistance;\n        let ed = 1.0 / rateOverDistance;\n        if (distance > ed) {\n            let emitCount = distance * rateOverDistance;\n            emitCount = Math.floor(emitCount);\n            emitCount = Math.min(this.maxParticles - this.aliveParticleCount, emitCount);\n            for (let index = 0; index < emitCount; index++) {\n                this.emit(emitTime, elapsedTime);\n            }\n            this._emissionDistance = 0;\n        }\n        else {\n            this._emissionDistance = distance;\n        }\n    }\n    _initBufferDatas() {\n        if (this._vertexBuffer && this._vertexBuffer._buffer) {\n            var memorySize = this._vertexBuffer._byteLength + this._indexBuffer.indexCount * 2;\n            this._vertexBuffer.destroy();\n            this._indexBuffer.destroy();\n            Resource._addMemory(-memorySize, -memorySize);\n        }\n        var render = this._ownerRender;\n        var renderMode = render.renderMode;\n        if (renderMode !== -1 && this.maxParticles > 0) {\n            var indices, i, j, m, indexOffset, perPartOffset, vertexDeclaration;\n            var vbMemorySize = 0, memorySize = 0;\n            var mesh = render.mesh;\n            if (renderMode === 4) {\n                if (mesh) {\n                    vertexDeclaration = VertexShurikenParticleMesh.vertexDeclaration;\n                    this._floatCountPerVertex = vertexDeclaration.vertexStride / 4;\n                    this._simulationUV_Index = vertexDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset / 4;\n                    this._startLifeTimeIndex = 12;\n                    this._timeIndex = 16;\n                    this._vertexStride = mesh._vertexCount;\n                    var totalVertexCount = this._bufferMaxParticles * this._vertexStride;\n                    var vbCount = Math.floor(totalVertexCount / 65535) + 1;\n                    var lastVBVertexCount = totalVertexCount % 65535;\n                    if (vbCount > 1) {\n                        throw new Error(\"the maxParticleCount multiply mesh vertexCount is large than 65535.\");\n                    }\n                    vbMemorySize = vertexDeclaration.vertexStride * lastVBVertexCount;\n                    this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vbMemorySize, BufferUsage.Dynamic, false);\n                    this._vertexBuffer.vertexDeclaration = vertexDeclaration;\n                    this._vertices = new Float32Array(this._floatCountPerVertex * lastVBVertexCount);\n                    this._indexStride = mesh._indexBuffer.indexCount;\n                    var indexDatas = mesh._indexBuffer.getData();\n                    var indexCount = this._bufferMaxParticles * this._indexStride;\n                    this._indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, indexCount, BufferUsage.Static, false);\n                    indices = new Uint16Array(indexCount);\n                    memorySize = vbMemorySize + indexCount * 2;\n                    indexOffset = 0;\n                    for (i = 0; i < this._bufferMaxParticles; i++) {\n                        var indexValueOffset = i * this._vertexStride;\n                        for (j = 0, m = indexDatas.length; j < m; j++)\n                            indices[indexOffset++] = indexValueOffset + indexDatas[j];\n                    }\n                    this._indexBuffer.setData(indices);\n                    this._bufferState.applyState([this._vertexBuffer], this._indexBuffer);\n                    this.bufferState = this._bufferState;\n                }\n            }\n            else {\n                vertexDeclaration = VertexShurikenParticleBillboard.vertexDeclaration;\n                this._floatCountPerVertex = vertexDeclaration.vertexStride / 4;\n                this._startLifeTimeIndex = 7;\n                this._simulationUV_Index = vertexDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset / 4;\n                this._timeIndex = 11;\n                this._vertexStride = 4;\n                vbMemorySize = vertexDeclaration.vertexStride * this._bufferMaxParticles * this._vertexStride;\n                this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vbMemorySize, BufferUsage.Dynamic, false);\n                this._vertexBuffer.vertexDeclaration = vertexDeclaration;\n                this._vertices = new Float32Array(this._floatCountPerVertex * this._bufferMaxParticles * this._vertexStride);\n                for (i = 0; i < this._bufferMaxParticles; i++) {\n                    perPartOffset = i * this._floatCountPerVertex * this._vertexStride;\n                    this._vertices[perPartOffset] = -0.5;\n                    this._vertices[perPartOffset + 1] = -0.5;\n                    this._vertices[perPartOffset + 2] = 0;\n                    this._vertices[perPartOffset + 3] = 1;\n                    perPartOffset += this._floatCountPerVertex;\n                    this._vertices[perPartOffset] = 0.5;\n                    this._vertices[perPartOffset + 1] = -0.5;\n                    this._vertices[perPartOffset + 2] = 1;\n                    this._vertices[perPartOffset + 3] = 1;\n                    perPartOffset += this._floatCountPerVertex;\n                    this._vertices[perPartOffset] = 0.5;\n                    this._vertices[perPartOffset + 1] = 0.5;\n                    this._vertices[perPartOffset + 2] = 1;\n                    this._vertices[perPartOffset + 3] = 0;\n                    perPartOffset += this._floatCountPerVertex;\n                    this._vertices[perPartOffset] = -0.5;\n                    this._vertices[perPartOffset + 1] = 0.5;\n                    this._vertices[perPartOffset + 2] = 0;\n                    this._vertices[perPartOffset + 3] = 0;\n                }\n                this._indexStride = 6;\n                this._indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, this._bufferMaxParticles * 6, BufferUsage.Static, false);\n                indices = new Uint16Array(this._bufferMaxParticles * 6);\n                for (i = 0; i < this._bufferMaxParticles; i++) {\n                    indexOffset = i * 6;\n                    var firstVertex = i * this._vertexStride, secondVertex = firstVertex + 2;\n                    indices[indexOffset++] = firstVertex;\n                    indices[indexOffset++] = secondVertex;\n                    indices[indexOffset++] = firstVertex + 1;\n                    indices[indexOffset++] = firstVertex;\n                    indices[indexOffset++] = firstVertex + 3;\n                    indices[indexOffset++] = secondVertex;\n                }\n                this._indexBuffer.setData(indices);\n                memorySize = vbMemorySize + this._bufferMaxParticles * 6 * 2;\n                this._bufferState.applyState([this._vertexBuffer], this._indexBuffer);\n                this.bufferState = this._bufferState;\n            }\n            Resource._addMemory(memorySize, memorySize);\n        }\n    }\n    destroy() {\n        super.destroy();\n        if (this._vertexBuffer) {\n            var memorySize = this._vertexBuffer._byteLength;\n            Resource._addMemory(-memorySize, -memorySize);\n            this._vertexBuffer.destroy();\n            this._vertexBuffer = null;\n        }\n        if (this._indexBuffer) {\n            var memorySize = this._indexBuffer._byteLength;\n            Resource._addMemory(-memorySize, -memorySize);\n            this._indexBuffer.destroy();\n            this._indexBuffer = null;\n        }\n        this._emission.destroy();\n        this._bounds = null;\n        this._customBounds = null;\n        this._bufferState = null;\n        this._owner = null;\n        this._vertices = null;\n        this._indexBuffer = null;\n        this._emission = null;\n        this._shape = null;\n        this._startLifeTimeGradient = null;\n        this._startLifeTimeGradientMin = null;\n        this._startLifeTimeGradientMax = null;\n        this.startSizeConstantSeparate = null;\n        this.startSizeConstantMinSeparate = null;\n        this.startSizeConstantMaxSeparate = null;\n        this.startRotationConstantSeparate = null;\n        this.startRotationConstantMinSeparate = null;\n        this.startRotationConstantMaxSeparate = null;\n        this.startColorConstant = null;\n        this.startColorConstantMin = null;\n        this.startColorConstantMax = null;\n        this._velocityOverLifetime = null;\n        this._colorOverLifetime = null;\n        this._sizeOverLifetime = null;\n        this._rotationOverLifetime = null;\n        this._textureSheetAnimation = null;\n    }\n    emit(time, elapsedTime) {\n        var position = _tempPosition;\n        var direction = _tempDirection;\n        if (this._shape && this._shape.enable) {\n            if (this.autoRandomSeed)\n                this._shape.generatePositionAndDirection(position, direction);\n            else\n                this._shape.generatePositionAndDirection(position, direction, this._rand, this._randomSeeds);\n        }\n        else {\n            position.x = position.y = position.z = 0;\n            direction.x = direction.y = 0;\n            direction.z = 1;\n        }\n        return this.addParticle(position, direction, time, elapsedTime);\n    }\n    addParticle(position, direction, time, elapsedTime) {\n        Vector3.normalize(direction, direction);\n        var nextFreeParticle = this._firstFreeElement + 1;\n        if (nextFreeParticle >= this._bufferMaxParticles)\n            nextFreeParticle = 0;\n        if (nextFreeParticle === this._firstRetiredElement)\n            return false;\n        var transform = this._owner.transform;\n        ShurikenParticleData.create(this, this._ownerRender);\n        var particleAge = this._currentTime - time;\n        if (particleAge >= ShurikenParticleData.startLifeTime)\n            return true;\n        let pos, rot;\n        if (this.simulationSpace == 0) {\n            rot = transform.rotation;\n            pos = tempV3;\n            let timeT = (this._currentTime - time) / elapsedTime;\n            timeT = MathUtil.clamp01(timeT);\n            Vector3.lerp(transform.position, this._emissionLastPosition, timeT, pos);\n        }\n        var startSpeed;\n        switch (this.startSpeedType) {\n            case 0:\n                startSpeed = this.startSpeedConstant;\n                break;\n            case 2:\n                if (this.autoRandomSeed) {\n                    startSpeed = MathUtil.lerp(this.startSpeedConstantMin, this.startSpeedConstantMax, Math.random());\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[8];\n                    startSpeed = MathUtil.lerp(this.startSpeedConstantMin, this.startSpeedConstantMax, this._rand.getFloat());\n                    this._randomSeeds[8] = this._rand.seed;\n                }\n                break;\n        }\n        var randomVelocityX, randomVelocityY, randomVelocityZ, randomColor, randomSize, randomRotation, randomTextureAnimation;\n        var needRandomVelocity = this._velocityOverLifetime && this._velocityOverLifetime.enable;\n        if (needRandomVelocity) {\n            var velocityType = this._velocityOverLifetime.velocity.type;\n            if (velocityType === 2 || velocityType === 3) {\n                if (this.autoRandomSeed) {\n                    randomVelocityX = Math.random();\n                    randomVelocityY = Math.random();\n                    randomVelocityZ = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[9];\n                    randomVelocityX = this._rand.getFloat();\n                    randomVelocityY = this._rand.getFloat();\n                    randomVelocityZ = this._rand.getFloat();\n                    this._randomSeeds[9] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomVelocity = false;\n            }\n        }\n        else {\n            needRandomVelocity = false;\n        }\n        var needRandomColor = this._colorOverLifetime && this._colorOverLifetime.enable;\n        if (needRandomColor) {\n            var colorType = this._colorOverLifetime.color.type;\n            if (colorType === 3) {\n                if (this.autoRandomSeed) {\n                    randomColor = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[10];\n                    randomColor = this._rand.getFloat();\n                    this._randomSeeds[10] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomColor = false;\n            }\n        }\n        else {\n            needRandomColor = false;\n        }\n        var needRandomSize = this._sizeOverLifetime && this._sizeOverLifetime.enable;\n        if (needRandomSize) {\n            var sizeType = this._sizeOverLifetime.size.type;\n            if (sizeType === 3) {\n                if (this.autoRandomSeed) {\n                    randomSize = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[11];\n                    randomSize = this._rand.getFloat();\n                    this._randomSeeds[11] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomSize = false;\n            }\n        }\n        else {\n            needRandomSize = false;\n        }\n        var needRandomRotation = this._rotationOverLifetime && this._rotationOverLifetime.enable;\n        if (needRandomRotation) {\n            var rotationType = this._rotationOverLifetime.angularVelocity.type;\n            if (rotationType === 2 || rotationType === 3) {\n                if (this.autoRandomSeed) {\n                    randomRotation = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[12];\n                    randomRotation = this._rand.getFloat();\n                    this._randomSeeds[12] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomRotation = false;\n            }\n        }\n        else {\n            needRandomRotation = false;\n        }\n        var needRandomTextureAnimation = this._textureSheetAnimation && this._textureSheetAnimation.enable;\n        if (needRandomTextureAnimation) {\n            var textureAnimationType = this._textureSheetAnimation.frame.type;\n            if (textureAnimationType === 3) {\n                if (this.autoRandomSeed) {\n                    randomTextureAnimation = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[15];\n                    randomTextureAnimation = this._rand.getFloat();\n                    this._randomSeeds[15] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomTextureAnimation = false;\n            }\n        }\n        else {\n            needRandomTextureAnimation = false;\n        }\n        var startIndex = this._firstFreeElement * this._floatCountPerVertex * this._vertexStride;\n        var subU = ShurikenParticleData.startUVInfo[0];\n        var subV = ShurikenParticleData.startUVInfo[1];\n        var startU = ShurikenParticleData.startUVInfo[2];\n        var startV = ShurikenParticleData.startUVInfo[3];\n        var meshVertices, meshVertexStride, meshPosOffset, meshCorOffset, meshUVOffset, meshVertexIndex;\n        var render = this._ownerRender;\n        if (render.renderMode === 4) {\n            var meshVB = render.mesh._vertexBuffer;\n            meshVertices = meshVB.getFloat32Data();\n            var meshVertexDeclaration = meshVB.vertexDeclaration;\n            meshPosOffset = meshVertexDeclaration.getVertexElementByUsage(VertexMesh.MESH_POSITION0)._offset / 4;\n            var colorElement = meshVertexDeclaration.getVertexElementByUsage(VertexMesh.MESH_COLOR0);\n            meshCorOffset = colorElement ? colorElement._offset / 4 : -1;\n            var uvElement = meshVertexDeclaration.getVertexElementByUsage(VertexMesh.MESH_TEXTURECOORDINATE0);\n            meshUVOffset = uvElement ? uvElement._offset / 4 : -1;\n            meshVertexStride = meshVertexDeclaration.vertexStride / 4;\n            meshVertexIndex = 0;\n        }\n        for (var i = startIndex, n = startIndex + this._floatCountPerVertex * this._vertexStride; i < n; i += this._floatCountPerVertex) {\n            var offset;\n            if (render.renderMode === 4) {\n                offset = i;\n                var vertexOffset = meshVertexStride * (meshVertexIndex++);\n                var meshOffset = vertexOffset + meshPosOffset;\n                this._vertices[offset++] = meshVertices[meshOffset++];\n                this._vertices[offset++] = meshVertices[meshOffset++];\n                this._vertices[offset++] = meshVertices[meshOffset];\n                if (meshCorOffset === -1) {\n                    this._vertices[offset++] = 1.0;\n                    this._vertices[offset++] = 1.0;\n                    this._vertices[offset++] = 1.0;\n                    this._vertices[offset++] = 1.0;\n                }\n                else {\n                    meshOffset = vertexOffset + meshCorOffset;\n                    this._vertices[offset++] = meshVertices[meshOffset++];\n                    this._vertices[offset++] = meshVertices[meshOffset++];\n                    this._vertices[offset++] = meshVertices[meshOffset++];\n                    this._vertices[offset++] = meshVertices[meshOffset];\n                }\n                if (meshUVOffset === -1) {\n                    this._vertices[offset++] = 0.0;\n                    this._vertices[offset++] = 0.0;\n                }\n                else {\n                    meshOffset = vertexOffset + meshUVOffset;\n                    this._vertices[offset++] = meshVertices[meshOffset++];\n                    this._vertices[offset++] = meshVertices[meshOffset];\n                }\n            }\n            else {\n                offset = i + 4;\n            }\n            this._vertices[offset++] = position.x;\n            this._vertices[offset++] = position.y;\n            this._vertices[offset++] = position.z;\n            this._vertices[offset++] = ShurikenParticleData.startLifeTime;\n            this._vertices[offset++] = direction.x;\n            this._vertices[offset++] = direction.y;\n            this._vertices[offset++] = direction.z;\n            this._vertices[offset++] = time;\n            this._vertices[offset++] = ShurikenParticleData.startColor.x;\n            this._vertices[offset++] = ShurikenParticleData.startColor.y;\n            this._vertices[offset++] = ShurikenParticleData.startColor.z;\n            this._vertices[offset++] = ShurikenParticleData.startColor.w;\n            this._vertices[offset++] = ShurikenParticleData.startSize[0];\n            this._vertices[offset++] = ShurikenParticleData.startSize[1];\n            this._vertices[offset++] = ShurikenParticleData.startSize[2];\n            this._vertices[offset++] = ShurikenParticleData.startRotation[0];\n            this._vertices[offset++] = ShurikenParticleData.startRotation[1];\n            this._vertices[offset++] = ShurikenParticleData.startRotation[2];\n            this._vertices[offset++] = startSpeed;\n            needRandomColor && (this._vertices[offset + 1] = randomColor);\n            needRandomSize && (this._vertices[offset + 2] = randomSize);\n            needRandomRotation && (this._vertices[offset + 3] = randomRotation);\n            needRandomTextureAnimation && (this._vertices[offset + 4] = randomTextureAnimation);\n            if (needRandomVelocity) {\n                this._vertices[offset + 5] = randomVelocityX;\n                this._vertices[offset + 6] = randomVelocityY;\n                this._vertices[offset + 7] = randomVelocityZ;\n            }\n            switch (this.simulationSpace) {\n                case 0:\n                    offset += 8;\n                    this._vertices[offset++] = pos.x;\n                    this._vertices[offset++] = pos.y;\n                    this._vertices[offset++] = pos.z;\n                    this._vertices[offset++] = rot.x;\n                    this._vertices[offset++] = rot.y;\n                    this._vertices[offset++] = rot.z;\n                    this._vertices[offset++] = rot.w;\n                    break;\n                case 1:\n                    break;\n                default:\n                    throw new Error(\"unknown simulationSpace: \" + this.simulationSpace);\n            }\n            offset = i + this._simulationUV_Index;\n            this._vertices[offset++] = startU;\n            this._vertices[offset++] = startV;\n            this._vertices[offset++] = subU;\n            this._vertices[offset] = subV;\n        }\n        this._firstFreeElement = nextFreeParticle;\n        return true;\n    }\n    addNewParticlesToVertexBuffer() {\n        var start;\n        var byteStride = this._vertexStride * this._floatCountPerVertex * 4;\n        if (this._firstNewElement < this._firstFreeElement) {\n            start = this._firstNewElement * byteStride;\n            this._vertexBuffer.setData(this._vertices.buffer, start, start, (this._firstFreeElement - this._firstNewElement) * byteStride);\n        }\n        else {\n            start = this._firstNewElement * byteStride;\n            this._vertexBuffer.setData(this._vertices.buffer, start, start, (this._bufferMaxParticles - this._firstNewElement) * byteStride);\n            if (this._firstFreeElement > 0) {\n                this._vertexBuffer.setData(this._vertices.buffer, 0, 0, this._firstFreeElement * byteStride);\n            }\n        }\n        this._firstNewElement = this._firstFreeElement;\n    }\n    _getType() {\n        return ShurikenParticleSystem._type;\n    }\n    _prepareRender(state) {\n        if (this._updateMask != Stat.loopCount) {\n            this._updateMask = Stat.loopCount;\n            this._updateEmission();\n            if (this._firstNewElement != this._firstFreeElement)\n                this.addNewParticlesToVertexBuffer();\n            this._drawCounter++;\n        }\n        if (this._firstActiveElement != this._firstFreeElement)\n            return true;\n        else\n            return false;\n    }\n    _updateRenderParams(state) {\n        var indexCount;\n        this.clearRenderParams();\n        if (this._firstActiveElement < this._firstFreeElement) {\n            indexCount = (this._firstFreeElement - this._firstActiveElement) * this._indexStride;\n            this.setDrawElemenParams(indexCount, 2 * this._firstActiveElement * this._indexStride);\n        }\n        else {\n            indexCount = (this._bufferMaxParticles - this._firstActiveElement) * this._indexStride;\n            this.setDrawElemenParams(indexCount, 2 * this._firstActiveElement * this._indexStride);\n            if (this._firstFreeElement > 0) {\n                indexCount = this._firstFreeElement * this._indexStride;\n                this.setDrawElemenParams(indexCount, 0);\n            }\n        }\n    }\n    play() {\n        this._burstsIndex = 0;\n        this._isEmitting = true;\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._emissionTime = 0;\n        this._emissionDistance = 0;\n        this._owner.transform.position.cloneTo(this._emissionLastPosition);\n        this._totalDelayTime = 0;\n        if (!this.autoRandomSeed) {\n            for (var i = 0, n = this._randomSeeds.length; i < n; i++)\n                this._randomSeeds[i] = this.randomSeed[0] + ShurikenParticleSystem._RANDOMOFFSET[i];\n        }\n        switch (this.startDelayType) {\n            case 0:\n                this._playStartDelay = this.startDelay;\n                break;\n            case 1:\n                if (this.autoRandomSeed) {\n                    this._playStartDelay = MathUtil.lerp(this.startDelayMin, this.startDelayMax, Math.random());\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[2];\n                    this._playStartDelay = MathUtil.lerp(this.startDelayMin, this.startDelayMax, this._rand.getFloat());\n                    this._randomSeeds[2] = this._rand.seed;\n                }\n                break;\n            default:\n                throw new Error(\"unknown startDelayType: \" + this.startDelayType);\n        }\n        this._frameRateTime = this._currentTime + this._playStartDelay;\n        this._startUpdateLoopCount = Stat.loopCount;\n    }\n    pause() {\n        this._isPaused = true;\n    }\n    simulate(time, restart = true) {\n        this._simulateUpdate = true;\n        if (restart) {\n            this._updateParticlesSimulationRestart(time);\n        }\n        else {\n            this._isPaused = false;\n            this._updateParticles(time);\n        }\n        this.pause();\n    }\n    stop() {\n        this._burstsIndex = 0;\n        this._isEmitting = false;\n        this._emissionTime = 0;\n    }\n    cloneTo(destObject) {\n        destObject._useCustomBounds = this._useCustomBounds;\n        (this._customBounds) && (this._customBounds.cloneTo(destObject._customBounds));\n        destObject.duration = this.duration;\n        destObject.looping = this.looping;\n        destObject.prewarm = this.prewarm;\n        destObject.startDelayType = this.startDelayType;\n        destObject.startDelay = this.startDelay;\n        destObject.startDelayMin = this.startDelayMin;\n        destObject.startDelayMax = this.startDelayMax;\n        destObject._maxStartLifetime = this._maxStartLifetime;\n        destObject.startLifetimeType = this._startLifetimeType;\n        destObject.startLifetimeConstant = this._startLifetimeConstant;\n        this._startLifeTimeGradient.cloneTo(destObject.startLifeTimeGradient);\n        destObject.startLifetimeConstantMin = this._startLifetimeConstantMin;\n        destObject.startLifetimeConstantMax = this._startLifetimeConstantMax;\n        this._startLifeTimeGradientMin.cloneTo(destObject.startLifeTimeGradientMin);\n        this._startLifeTimeGradientMax.cloneTo(destObject.startLifeTimeGradientMax);\n        destObject.startSpeedType = this.startSpeedType;\n        destObject.startSpeedConstant = this.startSpeedConstant;\n        destObject.startSpeedConstantMin = this.startSpeedConstantMin;\n        destObject.startSpeedConstantMax = this.startSpeedConstantMax;\n        destObject.dragType = this.dragType;\n        destObject.dragConstant = this.dragConstant;\n        destObject.dragSpeedConstantMax = this.dragSpeedConstantMax;\n        destObject.dragSpeedConstantMin = this.dragSpeedConstantMin;\n        destObject.threeDStartSize = this.threeDStartSize;\n        destObject.startSizeType = this.startSizeType;\n        destObject.startSizeConstant = this.startSizeConstant;\n        this.startSizeConstantSeparate.cloneTo(destObject.startSizeConstantSeparate);\n        destObject.startSizeConstantMin = this.startSizeConstantMin;\n        destObject.startSizeConstantMax = this.startSizeConstantMax;\n        this.startSizeConstantMinSeparate.cloneTo(destObject.startSizeConstantMinSeparate);\n        this.startSizeConstantMaxSeparate.cloneTo(destObject.startSizeConstantMaxSeparate);\n        destObject.threeDStartRotation = this.threeDStartRotation;\n        destObject.startRotationType = this.startRotationType;\n        destObject.startRotationConstant = this.startRotationConstant;\n        this.startRotationConstantSeparate.cloneTo(destObject.startRotationConstantSeparate);\n        destObject.startRotationConstantMin = this.startRotationConstantMin;\n        destObject.startRotationConstantMax = this.startRotationConstantMax;\n        this.startRotationConstantMinSeparate.cloneTo(destObject.startRotationConstantMinSeparate);\n        this.startRotationConstantMaxSeparate.cloneTo(destObject.startRotationConstantMaxSeparate);\n        destObject.randomizeRotationDirection = this.randomizeRotationDirection;\n        destObject.startColorType = this.startColorType;\n        this.startColorConstant.cloneTo(destObject.startColorConstant);\n        this.startColorConstantMin.cloneTo(destObject.startColorConstantMin);\n        this.startColorConstantMax.cloneTo(destObject.startColorConstantMax);\n        destObject.gravityModifier = this.gravityModifier;\n        destObject.simulationSpace = this.simulationSpace;\n        destObject.simulationSpeed = this.simulationSpeed;\n        destObject.scaleMode = this.scaleMode;\n        destObject.playOnAwake = this.playOnAwake;\n        destObject.autoRandomSeed = this.autoRandomSeed;\n        destObject.randomSeed[0] = this.randomSeed[0];\n        destObject.maxParticles = this.maxParticles;\n        (this._emission) && (destObject._emission = this._emission.clone());\n        (this._shape) && (destObject.shape = this._shape.clone());\n        (this._velocityOverLifetime) && (destObject.velocityOverLifetime = this._velocityOverLifetime.clone());\n        (this._colorOverLifetime) && (destObject.colorOverLifetime = this._colorOverLifetime.clone());\n        (this._sizeOverLifetime) && (destObject.sizeOverLifetime = this._sizeOverLifetime.clone());\n        (this._rotationOverLifetime) && (destObject.rotationOverLifetime = this._rotationOverLifetime.clone());\n        (this._textureSheetAnimation) && (destObject.textureSheetAnimation = this._textureSheetAnimation.clone());\n        destObject.isPerformanceMode = this.isPerformanceMode;\n        destObject._isEmitting = this._isEmitting;\n        destObject._isPlaying = this._isPlaying;\n        destObject._isPaused = this._isPaused;\n        destObject._playStartDelay = this._playStartDelay;\n        destObject._frameRateTime = this._frameRateTime;\n        destObject._emissionTime = this._emissionTime;\n        destObject._totalDelayTime = this._totalDelayTime;\n        destObject._burstsIndex = this._burstsIndex;\n    }\n    clone() {\n        var dest = new ShurikenParticleSystem(null);\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nShurikenParticleSystem._RANDOMOFFSET = new Uint32Array([0x23571a3e, 0xc34f56fe, 0x13371337, 0x12460f3b, 0x6aed452e, 0xdec4aea1, 0x96aa4de3, 0x8d2c8431, 0xf3857f6f, 0xe0fbd834, 0x13740583, 0x591bc05c, 0x40eb95e4, 0xbc524e5f, 0xaf502044, 0xa614b381, 0x1034e524, 0xfc524e5f]);\nShurikenParticleSystem.halfKSqrtOf2 = 1.42 * 0.5;\nShurikenParticleSystem.g = 9.8;\nShurikenParticleSystem._maxElapsedTime = 1.0 / 3.0;\nShurikenParticleSystem._type = GeometryElement._typeCounter++;\nconst _tempVector30 = new Vector3();\nconst _tempVector31 = new Vector3();\nconst _tempVector32 = new Vector3();\nconst _tempVector33 = new Vector3();\nconst _tempVector34 = new Vector3();\nconst _tempVector35 = new Vector3();\nconst _tempVector36 = new Vector3();\nconst _tempVector37 = new Vector3();\nconst _tempPosition = new Vector3();\nconst _tempDirection = new Vector3();\n","import { Laya3DRender } from \"../../d3/RenderObjs/Laya3DRender\";\nimport { MathUtil } from \"../../maths/MathUtil\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { VertexMesh } from \"../../RenderEngine/RenderShader/VertexMesh\";\nimport { ShurikenParticleData } from \"./ShurikenParticleData\";\nimport { ShurikenParticleSystem } from \"./ShurikenParticleSystem\";\nimport { VertexShuriKenParticle } from \"./VertexShuriKenParticle\";\nimport { VertexShurikenParticleBillboard } from \"./VertexShurikenParticleBillboard\";\nimport { VertexShurikenParticleMesh } from \"./VertexShurikenParticleMesh\";\nconst tempV3 = new Vector3(0, 0, 0);\nexport class ShurikenParticleInstanceSystem extends ShurikenParticleSystem {\n    constructor(render) {\n        super(render, MeshTopology.Triangles, DrawType.DrawElementInstance);\n        this._instanceParticleVertexBuffer = null;\n        this._instanceVertex = null;\n    }\n    _initMeshVertex(vertex, mesh) {\n        let meshVertexBuffer = mesh._vertexBuffer;\n        let meshVertices = meshVertexBuffer.getFloat32Data();\n        let meshVertexDeclaration = meshVertexBuffer.vertexDeclaration;\n        let meshPosOffset = meshVertexDeclaration.getVertexElementByUsage(VertexMesh.MESH_POSITION0)._offset / 4;\n        let colorElement = meshVertexDeclaration.getVertexElementByUsage(VertexMesh.MESH_COLOR0);\n        let meshColorOffset = colorElement ? colorElement._offset / 4 : -1;\n        let uvElement = meshVertexDeclaration.getVertexElementByUsage(VertexMesh.MESH_TEXTURECOORDINATE0);\n        let meshUVOffset = uvElement ? uvElement._offset / 4 : -1;\n        let meshVertexStride = meshVertexDeclaration.vertexStride / 4;\n        let meshVertexIndex = 0;\n        let vertexCount = mesh.vertexCount;\n        let perParticleDataCount = this._vertexBuffer.vertexDeclaration.vertexStride / 4;\n        for (let index = 0; index < vertexCount; index++) {\n            let startIndex = index * perParticleDataCount;\n            let indexOffset = startIndex;\n            let vertexOffset = meshVertexStride * meshVertexIndex++;\n            let positionOffset = vertexOffset + meshPosOffset;\n            vertex[indexOffset++] = meshVertices[positionOffset++];\n            vertex[indexOffset++] = meshVertices[positionOffset++];\n            vertex[indexOffset++] = meshVertices[positionOffset++];\n            if (meshColorOffset == -1) {\n                vertex[indexOffset++] = 1;\n                vertex[indexOffset++] = 1;\n                vertex[indexOffset++] = 1;\n                vertex[indexOffset++] = 1;\n            }\n            else {\n                let colorOffset = vertexOffset + meshColorOffset;\n                vertex[indexOffset++] = meshVertices[colorOffset++];\n                vertex[indexOffset++] = meshVertices[colorOffset++];\n                vertex[indexOffset++] = meshVertices[colorOffset++];\n                vertex[indexOffset++] = meshVertices[colorOffset++];\n            }\n            if (meshUVOffset == -1) {\n                vertex[indexOffset++] = 0;\n                vertex[indexOffset++] = 0;\n            }\n            else {\n                let uvOffset = vertexOffset + meshUVOffset;\n                vertex[indexOffset++] = meshVertices[uvOffset++];\n                vertex[indexOffset++] = meshVertices[uvOffset++];\n            }\n        }\n    }\n    _initBufferDatas() {\n        if (this._vertexBuffer) {\n            this._vertexBuffer.destroy();\n            this._instanceParticleVertexBuffer.destroy();\n            this._indexBuffer.destroy();\n            this._vertexBuffer = null;\n            this._instanceParticleVertexBuffer = null;\n            this._indexBuffer = null;\n        }\n        let render = this._ownerRender;\n        let renderMode = render.renderMode;\n        if (renderMode == -1 || this.maxParticles <= 0) {\n            return;\n        }\n        if (renderMode == 4) {\n            let mesh = render.mesh;\n            if (mesh) {\n                let meshDeclaration = VertexShurikenParticleMesh.vertexInstanceMeshDeclaration;\n                let particleDeclaration = VertexShurikenParticleMesh.vertexInstanceParticleDeclaration;\n                this._meshIndexCount = mesh.indexCount;\n                this._simulationUV_Index = particleDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset / 4;\n                this._floatCountPerParticleData = particleDeclaration.vertexStride / 4;\n                this._startLifeTimeIndex = particleDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME)._offset / 4 + 3;\n                this._timeIndex = particleDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_DIRECTIONTIME)._offset / 4 + 3;\n                let indexCount = mesh.indexCount;\n                this._indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(mesh.indexFormat, indexCount, BufferUsage.Static, false);\n                this._indexBuffer.setData(mesh._indexBuffer.getData());\n                let meshVertexCount = mesh.vertexCount;\n                let vbSize = meshDeclaration.vertexStride * meshVertexCount;\n                this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(vbSize, BufferUsage.Static, false);\n                this._vertexBuffer.vertexDeclaration = meshDeclaration;\n                let meshVertex = new Float32Array(vbSize / 4);\n                this._initMeshVertex(meshVertex, mesh);\n                this._vertexBuffer.setData(meshVertex.buffer);\n                let particleCount = this._bufferMaxParticles;\n                let particleVbSize = particleCount * particleDeclaration.vertexStride;\n                this._instanceVertex = new Float32Array(particleVbSize / 4);\n                this._instanceParticleVertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(particleVbSize, BufferUsage.Dynamic, false);\n                this._instanceParticleVertexBuffer.vertexDeclaration = particleDeclaration;\n                this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer);\n                this._instanceParticleVertexBuffer.instanceBuffer = true;\n                this._bufferState.applyState([this._vertexBuffer, this._instanceParticleVertexBuffer], this._indexBuffer);\n            }\n        }\n        else {\n            let billboardDeclaration = VertexShurikenParticleBillboard.vertexInstanceMeshDeclaration;\n            let particleDeclaration = VertexShurikenParticleBillboard.vertexInstanceParticleDeclaration;\n            this._meshIndexCount = 6;\n            this._simulationUV_Index = particleDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SIMULATIONUV).offset / 4;\n            this._floatCountPerParticleData = particleDeclaration.vertexStride / 4;\n            this._startLifeTimeIndex = particleDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_SHAPEPOSITIONSTARTLIFETIME)._offset / 4 + 3;\n            this._timeIndex = particleDeclaration.getVertexElementByUsage(VertexShuriKenParticle.PARTICLE_DIRECTIONTIME)._offset / 4 + 3;\n            let indexArray = VertexShurikenParticleBillboard.billboardIndexArray;\n            let indexCount = indexArray.length;\n            this._indexBuffer = Laya3DRender.renderOBJCreate.createIndexBuffer3D(IndexFormat.UInt16, indexCount, BufferUsage.Static, false);\n            this._indexBuffer.setData(indexArray);\n            let meshVBSize = this._meshIndexCount * billboardDeclaration.vertexStride;\n            this._vertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(meshVBSize, BufferUsage.Static, false);\n            this._vertexBuffer.vertexDeclaration = billboardDeclaration;\n            this._vertexBuffer.setData(VertexShurikenParticleBillboard.billboardVertexArray.buffer);\n            let particleCount = this._bufferMaxParticles;\n            let particleVbSize = particleCount * particleDeclaration.vertexStride;\n            this._instanceVertex = new Float32Array(particleVbSize / 4);\n            this._instanceParticleVertexBuffer = Laya3DRender.renderOBJCreate.createVertexBuffer3D(particleVbSize, BufferUsage.Dynamic, false);\n            this._instanceParticleVertexBuffer.vertexDeclaration = particleDeclaration;\n            this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer);\n            this._instanceParticleVertexBuffer.instanceBuffer = true;\n            this._bufferState.applyState([this._vertexBuffer, this._instanceParticleVertexBuffer], this._indexBuffer);\n        }\n    }\n    _retireActiveParticles() {\n        if (this._instanceParticleVertexBuffer == null)\n            return;\n        const epsilon = 0.0001;\n        let firstActive = this._firstActiveElement;\n        while (this._firstActiveElement != this._firstNewElement) {\n            let index = this._firstActiveElement * this._floatCountPerParticleData;\n            let timeIndex = index + this._timeIndex;\n            let particleAge = this._currentTime - this._instanceVertex[timeIndex];\n            if (particleAge + epsilon < this._instanceVertex[index + this._startLifeTimeIndex]) {\n                break;\n            }\n            this._instanceVertex[timeIndex] = this._drawCounter;\n            this._firstActiveElement++;\n            if (this._firstActiveElement >= this._bufferMaxParticles) {\n                this._firstActiveElement = 0;\n            }\n        }\n        if (this._firstActiveElement != firstActive) {\n            let byteStride = this._floatCountPerParticleData * 4;\n            if (this._firstActiveElement < this._firstFreeElement) {\n                let activeStart = this._firstActiveElement * byteStride;\n                this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer, 0, activeStart, (this._firstFreeElement - this._firstActiveElement) * byteStride);\n            }\n            else {\n                let start = this._firstActiveElement * byteStride;\n                let a = this._bufferMaxParticles - this._firstActiveElement;\n                this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer, 0, start, a * byteStride);\n                if (this._firstFreeElement > 0) {\n                    this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer, a * byteStride, 0, this._firstFreeElement * byteStride);\n                }\n            }\n        }\n    }\n    _freeRetiredParticles() {\n        while (this._firstRetiredElement != this._firstActiveElement) {\n            let age = this._drawCounter - this._instanceVertex[this._firstRetiredElement * this._floatCountPerParticleData + this._timeIndex];\n            if (false)\n                if (age < 3)\n                    break;\n            this._firstRetiredElement++;\n            if (this._firstRetiredElement >= this._bufferMaxParticles)\n                this._firstRetiredElement = 0;\n        }\n    }\n    addParticle(position, direction, time, elapsedTime) {\n        Vector3.normalize(direction, direction);\n        let nextFreeParticle = this._firstFreeElement + 1;\n        if (nextFreeParticle >= this._bufferMaxParticles) {\n            nextFreeParticle = 0;\n        }\n        if (nextFreeParticle == this._firstRetiredElement) {\n            return false;\n        }\n        let transform = this._owner.transform;\n        ShurikenParticleData.create(this, this._ownerRender);\n        let particleAge = this._currentTime - time;\n        if (particleAge >= ShurikenParticleData.startLifeTime) {\n            return true;\n        }\n        let pos, rot;\n        if (this.simulationSpace == 0) {\n            rot = transform.rotation;\n            pos = tempV3;\n            let timeT = (this._currentTime - time) / elapsedTime;\n            timeT = MathUtil.clamp01(timeT);\n            Vector3.lerp(transform.position, this._emissionLastPosition, timeT, pos);\n        }\n        let startSpeed = 0;\n        switch (this.startSpeedType) {\n            case 0:\n                startSpeed = this.startSpeedConstant;\n                break;\n            case 2:\n                if (this.autoRandomSeed) {\n                    startSpeed = MathUtil.lerp(this.startSpeedConstantMin, this.startSpeedConstantMax, Math.random());\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[8];\n                    startSpeed = MathUtil.lerp(this.startSpeedConstantMin, this.startSpeedConstantMax, this._rand.getFloat());\n                    this._randomSeeds[8] = this._rand.seed;\n                }\n                break;\n        }\n        let randomVelocityX, randomVelocityY, randomVelocityZ;\n        let needRandomVelocity = this._velocityOverLifetime && this._velocityOverLifetime.enable;\n        if (needRandomVelocity) {\n            let velocityType = this._velocityOverLifetime.velocity.type;\n            if (velocityType == 2 || velocityType == 3) {\n                if (this.autoRandomSeed) {\n                    randomVelocityX = Math.random();\n                    randomVelocityY = Math.random();\n                    randomVelocityZ = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[9];\n                    randomVelocityX = this._rand.getFloat();\n                    randomVelocityY = this._rand.getFloat();\n                    randomVelocityZ = this._rand.getFloat();\n                    this._randomSeeds[9] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomVelocity = false;\n            }\n        }\n        else {\n            needRandomVelocity = false;\n        }\n        let randomColor;\n        let needRandomColor = this._colorOverLifetime && this._colorOverLifetime.enable;\n        if (needRandomColor) {\n            let colorType = this._colorOverLifetime.color.type;\n            if (colorType == 3) {\n                if (this.autoRandomSeed) {\n                    randomColor = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[10];\n                    randomColor = this._rand.getFloat();\n                    this._randomSeeds[10] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomColor = false;\n            }\n        }\n        else {\n            needRandomColor = false;\n        }\n        let randomSize;\n        let needRandomSize = this._sizeOverLifetime && this._sizeOverLifetime.enable;\n        if (needRandomSize) {\n            let sizeType = this._sizeOverLifetime.size.type;\n            if (sizeType == 3) {\n                if (this.autoRandomSeed) {\n                    randomSize = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[11];\n                    randomSize = this._rand.getFloat();\n                    this.randomSeed[11] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomSize = false;\n            }\n        }\n        else {\n            needRandomSize = false;\n        }\n        let randomRotation;\n        let needRandomRotation = this._rotationOverLifetime && this._rotationOverLifetime.enable;\n        if (needRandomRotation) {\n            let rotationType = this._rotationOverLifetime.angularVelocity.type;\n            if (rotationType == 2 || rotationType == 3) {\n                if (this.autoRandomSeed) {\n                    randomRotation = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[12];\n                    randomRotation = this._rand.getFloat();\n                    this._randomSeeds[12] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomRotation = false;\n            }\n        }\n        else {\n            needRandomRotation = false;\n        }\n        let randomTextureAnimation;\n        let needRandomTextureAnimation = this._textureSheetAnimation && this._textureSheetAnimation.enable;\n        if (needRandomTextureAnimation) {\n            let textureAnimationType = this._textureSheetAnimation.frame.type;\n            if (textureAnimationType == 3) {\n                if (this.autoRandomSeed) {\n                    randomTextureAnimation = Math.random();\n                }\n                else {\n                    this._rand.seed = this._randomSeeds[15];\n                    randomTextureAnimation = this._rand.getFloat();\n                    this._randomSeeds[15] = this._rand.seed;\n                }\n            }\n            else {\n                needRandomTextureAnimation = false;\n            }\n        }\n        else {\n            needRandomTextureAnimation = false;\n        }\n        let subU = ShurikenParticleData.startUVInfo[0];\n        let subV = ShurikenParticleData.startUVInfo[1];\n        let startU = ShurikenParticleData.startUVInfo[2];\n        let startV = ShurikenParticleData.startUVInfo[3];\n        let render = this._ownerRender;\n        if (render.renderMode == 4) {\n        }\n        else {\n        }\n        let startIndex = this._firstFreeElement * this._floatCountPerParticleData;\n        let offset = startIndex;\n        this._instanceVertex[offset++] = position.x;\n        this._instanceVertex[offset++] = position.y;\n        this._instanceVertex[offset++] = position.z;\n        this._instanceVertex[offset++] = ShurikenParticleData.startLifeTime;\n        this._instanceVertex[offset++] = direction.x;\n        this._instanceVertex[offset++] = direction.y;\n        this._instanceVertex[offset++] = direction.z;\n        this._instanceVertex[offset++] = time;\n        this._instanceVertex[offset++] = ShurikenParticleData.startColor.x;\n        this._instanceVertex[offset++] = ShurikenParticleData.startColor.y;\n        this._instanceVertex[offset++] = ShurikenParticleData.startColor.z;\n        this._instanceVertex[offset++] = ShurikenParticleData.startColor.w;\n        this._instanceVertex[offset++] = ShurikenParticleData.startSize[0];\n        this._instanceVertex[offset++] = ShurikenParticleData.startSize[1];\n        this._instanceVertex[offset++] = ShurikenParticleData.startSize[2];\n        this._instanceVertex[offset++] = ShurikenParticleData.startRotation[0];\n        this._instanceVertex[offset++] = ShurikenParticleData.startRotation[1];\n        this._instanceVertex[offset++] = ShurikenParticleData.startRotation[2];\n        this._instanceVertex[offset++] = startSpeed;\n        needRandomColor && (this._instanceVertex[offset + 1] = randomColor);\n        needRandomSize && (this._instanceVertex[offset + 2] = randomSize);\n        needRandomRotation && (this._instanceVertex[offset + 3] = randomRotation);\n        needRandomTextureAnimation && (this._instanceVertex[offset + 4] = randomTextureAnimation);\n        if (needRandomVelocity) {\n            this._instanceVertex[offset + 5] = randomVelocityX;\n            this._instanceVertex[offset + 6] = randomVelocityY;\n            this._instanceVertex[offset + 7] = randomVelocityZ;\n        }\n        switch (this.simulationSpace) {\n            case 0:\n                offset += 8;\n                this._instanceVertex[offset++] = pos.x;\n                this._instanceVertex[offset++] = pos.y;\n                this._instanceVertex[offset++] = pos.z;\n                this._instanceVertex[offset++] = rot.x;\n                this._instanceVertex[offset++] = rot.y;\n                this._instanceVertex[offset++] = rot.z;\n                this._instanceVertex[offset++] = rot.w;\n                break;\n            case 1:\n                break;\n            default:\n                throw new Error(\"ShurikenParticleMaterial: SimulationSpace value is invalid.\");\n        }\n        offset = startIndex + this._simulationUV_Index;\n        this._instanceVertex[offset++] = startU;\n        this._instanceVertex[offset++] = startV;\n        this._instanceVertex[offset++] = subU;\n        this._instanceVertex[offset++] = subV;\n        this._firstFreeElement = nextFreeParticle;\n        return true;\n    }\n    addNewParticlesToVertexBuffer() {\n        let byteStride = this._floatCountPerParticleData * 4;\n        if (this._firstActiveElement < this._firstFreeElement) {\n            let start = this._firstActiveElement * byteStride;\n            this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer, 0, start, (this._firstFreeElement - this._firstActiveElement) * byteStride);\n        }\n        else {\n            let start = this._firstActiveElement * byteStride;\n            let a = this._bufferMaxParticles - this._firstActiveElement;\n            this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer, 0, start, a * byteStride);\n            if (this._firstFreeElement > 0) {\n                this._instanceParticleVertexBuffer.setData(this._instanceVertex.buffer, a * byteStride, 0, this._firstFreeElement * byteStride);\n            }\n        }\n        this._firstNewElement = this._firstFreeElement;\n    }\n    _updateRenderParams(stage) {\n        this.clearRenderParams();\n        if (this._firstActiveElement < this._firstFreeElement) {\n            let indexCount = this._firstFreeElement - this._firstActiveElement;\n            this.setDrawElemenParams(this._meshIndexCount, 0);\n            this.instanceCount = indexCount;\n        }\n        else {\n            let indexCount = this._bufferMaxParticles - this._firstActiveElement;\n            if (this._firstFreeElement > 0) {\n                indexCount += this._firstFreeElement;\n            }\n            this.setDrawElemenParams(this._meshIndexCount, 0);\n            this.instanceCount = indexCount;\n        }\n    }\n    destroy() {\n        super.destroy();\n        if (this._indexBuffer) {\n            this._indexBuffer.destroy();\n        }\n        if (this._vertexBuffer) {\n            this._vertexBuffer.destroy();\n        }\n        if (this._instanceParticleVertexBuffer) {\n            this._instanceParticleVertexBuffer.destroy();\n        }\n        this._instanceVertex = null;\n        this._meshIndexCount = null;\n        this._meshFloatCountPreVertex = null;\n    }\n}\n","import { RenderState } from \"../../RenderDriver/RenderModuleData/Design/RenderState\";\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../../resource/Material\";\nexport class ShurikenParticleMaterial extends Material {\n    static __initDefine__() {\n        ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP = Shader3D.getDefineByName(\"DIFFUSEMAP\");\n        ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR = Shader3D.getDefineByName(\"TINTCOLOR\");\n        ShurikenParticleMaterial.SHADERDEFINE_ADDTIVEFOG = Shader3D.getDefineByName(\"ADDTIVEFOG\");\n        ShurikenParticleMaterial.DIFFUSETEXTURE = Shader3D.propertyNameToID(\"u_texture\");\n        ShurikenParticleMaterial.TINTCOLOR = Shader3D.propertyNameToID(\"u_Tintcolor\");\n        ShurikenParticleMaterial.TILINGOFFSET = Shader3D.propertyNameToID(\"u_TilingOffset\");\n    }\n    get color() {\n        return this._shaderValues.getColor(ShurikenParticleMaterial.TINTCOLOR);\n    }\n    set color(value) {\n        if (value)\n            this._shaderValues.addDefine(ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR);\n        else\n            this._shaderValues.removeDefine(ShurikenParticleMaterial.SHADERDEFINE_TINTCOLOR);\n        this._shaderValues.setColor(ShurikenParticleMaterial.TINTCOLOR, value);\n    }\n    get tilingOffset() {\n        return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);\n    }\n    set tilingOffset(value) {\n        if (value) {\n            this._shaderValues.setVector(ShurikenParticleMaterial.TILINGOFFSET, value);\n        }\n        else {\n            this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).setValue(1.0, 1.0, 0.0, 0.0);\n        }\n    }\n    get texture() {\n        return this._shaderValues.getTexture(ShurikenParticleMaterial.DIFFUSETEXTURE);\n    }\n    set texture(value) {\n        if (value)\n            this._shaderValues.addDefine(ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP);\n        else\n            this._shaderValues.removeDefine(ShurikenParticleMaterial.SHADERDEFINE_DIFFUSEMAP);\n        this._shaderValues.setTexture(ShurikenParticleMaterial.DIFFUSETEXTURE, value);\n    }\n    constructor() {\n        super();\n        this.setShaderName(\"PARTICLESHURIKEN\");\n        this.renderMode = ShurikenParticleMaterial.RENDERMODE_ALPHABLENDED;\n    }\n    clone() {\n        var dest = new ShurikenParticleMaterial();\n        this.cloneTo(dest);\n        return dest;\n    }\n    set renderMode(value) {\n        switch (value) {\n            case ShurikenParticleMaterial.RENDERMODE_ADDTIVE:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_NONE;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE;\n                this.alphaTest = false;\n                this._shaderValues.addDefine(ShurikenParticleMaterial.SHADERDEFINE_ADDTIVEFOG);\n                break;\n            case ShurikenParticleMaterial.RENDERMODE_ALPHABLENDED:\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\n                this.depthWrite = false;\n                this.cull = RenderState.CULL_NONE;\n                this.blend = RenderState.BLEND_ENABLE_ALL;\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\n                this.alphaTest = false;\n                this._shaderValues.removeDefine(ShurikenParticleMaterial.SHADERDEFINE_ADDTIVEFOG);\n                break;\n            default:\n                throw new Error(\"ShurikenParticleMaterial : renderMode value error.\");\n        }\n    }\n    get tilingOffsetX() {\n        return this._MainTex_STX;\n    }\n    set tilingOffsetX(x) {\n        this._MainTex_STX = x;\n    }\n    get tilingOffsetY() {\n        return this._MainTex_STY;\n    }\n    set tilingOffsetY(y) {\n        this._MainTex_STY = y;\n    }\n    get tilingOffsetZ() {\n        return this._MainTex_STZ;\n    }\n    set tilingOffsetZ(z) {\n        this._MainTex_STZ = z;\n    }\n    get tilingOffsetW() {\n        return this._MainTex_STW;\n    }\n    set tilingOffsetW(w) {\n        this._MainTex_STW = w;\n    }\n    get _TintColor() {\n        return this.color;\n    }\n    set _TintColor(value) {\n        this.color = value;\n    }\n    get _TintColorR() {\n        return this.color.r;\n    }\n    set _TintColorR(value) {\n        this.color.r = value;\n    }\n    get _TintColorG() {\n        return this.color.g;\n    }\n    set _TintColorG(value) {\n        this.color.g = value;\n    }\n    get _TintColorB() {\n        return this.color.b;\n    }\n    set _TintColorB(value) {\n        this.color.b = value;\n    }\n    get _TintColorA() {\n        return this.color.a;\n    }\n    set _TintColorA(value) {\n        this.color.a = value;\n    }\n    get _MainTex_ST() {\n        return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);\n    }\n    set _MainTex_ST(value) {\n        var tilOff = this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);\n        tilOff.setValue(value.x, value.y, value.z, value.w);\n        this.tilingOffset = tilOff;\n    }\n    get _MainTex_STX() {\n        return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).x;\n    }\n    set _MainTex_STX(x) {\n        var tilOff = this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);\n        tilOff.x = x;\n        this.tilingOffset = tilOff;\n    }\n    get _MainTex_STY() {\n        return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).y;\n    }\n    set _MainTex_STY(y) {\n        var tilOff = this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);\n        tilOff.y = y;\n        this.tilingOffset = tilOff;\n    }\n    get _MainTex_STZ() {\n        return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).z;\n    }\n    set _MainTex_STZ(z) {\n        var tilOff = this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);\n        tilOff.z = z;\n        this.tilingOffset = tilOff;\n    }\n    get _MainTex_STW() {\n        return this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET).w;\n    }\n    set _MainTex_STW(w) {\n        var tilOff = this._shaderValues.getVector(ShurikenParticleMaterial.TILINGOFFSET);\n        tilOff.w = w;\n        this.tilingOffset = tilOff;\n    }\n    get colorR() {\n        return this._TintColorR;\n    }\n    set colorR(value) {\n        this._TintColorR = value;\n    }\n    get colorG() {\n        return this._TintColorG;\n    }\n    set colorG(value) {\n        this._TintColorG = value;\n    }\n    get colorB() {\n        return this._TintColorB;\n    }\n    set colorB(value) {\n        this._TintColorB = value;\n    }\n    get colorA() {\n        return this._TintColorA;\n    }\n    set colorA(value) {\n        this._TintColorA = value;\n    }\n}\nShurikenParticleMaterial.RENDERMODE_ALPHABLENDED = 0;\nShurikenParticleMaterial.RENDERMODE_ADDTIVE = 1;\n","import { Laya } from \"../../../Laya\";\nimport { LayaEnv } from \"../../../LayaEnv\";\nimport { BaseRender } from \"../../d3/core/render/BaseRender\";\nimport { RenderElement } from \"../../d3/core/render/RenderElement\";\nimport { LayaGL } from \"../../layagl/LayaGL\";\nimport { Vector2 } from \"../../maths/Vector2\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { ShaderDataType } from \"../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { BaseRenderType } from \"../../RenderDriver/RenderModuleData/Design/3D/I3DRenderModuleData\";\nimport { RenderCapable } from \"../../RenderEngine/RenderEnum/RenderCapable\";\nimport { Stat } from \"../../utils/Stat\";\nimport { ParticleShuriKenShaderInit } from \"./shader/ParticleShuriKenShaderInit\";\nimport { ShuriKenParticle3D } from \"./ShuriKenParticle3D\";\nimport { ShuriKenParticle3DShaderDeclaration } from \"./ShuriKenParticle3DShaderDeclaration\";\nimport { ShurikenParticleInstanceSystem } from \"./ShurikenParticleInstanceSystem\";\nimport { ShurikenParticleMaterial } from \"./ShurikenParticleMaterial\";\nimport { ShurikenParticleSystem } from \"./ShurikenParticleSystem\";\nimport { VertexShurikenParticleBillboard } from \"./VertexShurikenParticleBillboard\";\nimport { VertexShurikenParticleMesh } from \"./VertexShurikenParticleMesh\";\nexport class ShurikenParticleRenderer extends BaseRender {\n    get particleSystem() {\n        return this._particleSystem;\n    }\n    get renderMode() {\n        return this._renderMode;\n    }\n    set renderMode(value) {\n        if (this._renderMode !== value) {\n            var defineDatas = this._baseRenderNode.shaderData;\n            switch (this._renderMode) {\n                case 0:\n                    defineDatas.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_BILLBOARD);\n                    break;\n                case 1:\n                    defineDatas.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);\n                    break;\n                case 2:\n                    defineDatas.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);\n                    break;\n                case 3:\n                    defineDatas.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);\n                    break;\n                case 4:\n                    defineDatas.removeDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_MESH);\n                    break;\n            }\n            this._renderMode = value;\n            switch (value) {\n                case 0:\n                    defineDatas.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_BILLBOARD);\n                    break;\n                case 1:\n                    defineDatas.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_STRETCHEDBILLBOARD);\n                    break;\n                case 2:\n                    defineDatas.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_HORIZONTALBILLBOARD);\n                    break;\n                case 3:\n                    defineDatas.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_VERTICALBILLBOARD);\n                    break;\n                case 4:\n                    defineDatas.addDefine(ShuriKenParticle3DShaderDeclaration.SHADERDEFINE_RENDERMODE_MESH);\n                    break;\n                default:\n                    throw new Error(\"ShurikenParticleRender: unknown renderMode Value.\");\n            }\n            var parSys = this._particleSystem;\n            (parSys) && (parSys._initBufferDatas());\n        }\n    }\n    get mesh() {\n        return this._mesh;\n    }\n    set mesh(value) {\n        if (this._mesh !== value) {\n            (this._mesh) && (this._mesh._removeReference());\n            this._mesh = value;\n            (value) && (value._addReference());\n            this._particleSystem._initBufferDatas();\n        }\n    }\n    constructor() {\n        super();\n        this._finalGravity = new Vector3();\n        this._dragConstant = new Vector2();\n        this._mesh = null;\n        this.stretchedBillboardCameraSpeedScale = 0;\n        this.stretchedBillboardSpeedScale = 0;\n        this.stretchedBillboardLengthScale = 2;\n        this.renderMode = 0;\n        this._baseRenderNode.renderNodeType = BaseRenderType.ParticleRender;\n    }\n    _getcommonUniformMap() {\n        return [\"Sprite3D\", \"ShurikenSprite3D\"];\n    }\n    _onAdded() {\n        super._onAdded();\n        if (!LayaGL.renderEngine.getCapable(RenderCapable.DrawElement_Instance)) {\n            this._particleSystem = new ShurikenParticleSystem(this);\n        }\n        else\n            this._particleSystem = new ShurikenParticleInstanceSystem(this);\n        var elements = this._renderElements;\n        var element = elements[0] = new RenderElement();\n        element.setTransform(this.owner._transform);\n        element.render = this;\n        element.setGeometry(this._particleSystem);\n        element.material = ShurikenParticleMaterial.defaultMaterial;\n        this._setRenderElements();\n    }\n    _onEnable() {\n        super._onEnable();\n        Stat.particleRenderNode++;\n        (this._particleSystem.playOnAwake && LayaEnv.isPlaying) && (this._particleSystem.play());\n    }\n    _onDisable() {\n        super._onDisable();\n        Stat.particleRenderNode--;\n        (this._particleSystem.isAlive) && (this._particleSystem.simulate(0, true));\n    }\n    _calculateBoundingBox() {\n        var particleSystem = this._particleSystem;\n        var bounds;\n        if (particleSystem._useCustomBounds) {\n            bounds = particleSystem.customBounds;\n            bounds._tranform(this.owner.transform.worldMatrix, this._bounds);\n        }\n        else if (particleSystem._simulationSupported()) {\n            particleSystem._generateBounds();\n            bounds = particleSystem._bounds;\n            bounds._tranform(this.owner.transform.worldMatrix, this._bounds);\n            if (particleSystem.gravityModifier != 0) {\n                var max = this._bounds.getMax();\n                var min = this._bounds.getMin();\n                var gravityOffset = particleSystem._gravityOffset;\n                max.y -= gravityOffset.x;\n                min.y -= gravityOffset.y;\n                this._bounds.setMax(max);\n                this._bounds.setMin(min);\n            }\n        }\n        else {\n            var min = this._bounds.getMin();\n            min.setValue(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n            this._bounds.setMin(min);\n            var max = this._bounds.getMax();\n            max.setValue(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n            this._bounds.setMax(max);\n        }\n    }\n    _needRender(boundFrustum, context) {\n        if (!Stat.enableParticle)\n            return false;\n        if (boundFrustum) {\n            if (boundFrustum.intersects(this.bounds)) {\n                if (this._particleSystem.isAlive)\n                    return true;\n                else\n                    return false;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    _renderUpdate(context) {\n        var particleSystem = this._particleSystem;\n        var sv = this._baseRenderNode.shaderData;\n        var transform = this.owner.transform;\n        switch (particleSystem.simulationSpace) {\n            case 0:\n                break;\n            case 1:\n                sv.setVector3(ShuriKenParticle3DShaderDeclaration.WORLDPOSITION, transform.position);\n                sv.setShaderData(ShuriKenParticle3DShaderDeclaration.WORLDROTATION, ShaderDataType.Vector4, transform.rotation);\n                break;\n            default:\n                throw new Error(\"ShurikenParticleMaterial: SimulationSpace value is invalid.\");\n        }\n        if (particleSystem.shape && particleSystem.shape.enable) {\n            sv.setBool(ShuriKenParticle3DShaderDeclaration.SHAPE, true);\n        }\n        else {\n            sv.setBool(ShuriKenParticle3DShaderDeclaration.SHAPE, false);\n        }\n        switch (particleSystem.scaleMode) {\n            case 0:\n                var scale = transform.getWorldLossyScale();\n                sv.setVector3(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE, scale);\n                sv.setVector3(ShuriKenParticle3DShaderDeclaration.SIZESCALE, scale);\n                break;\n            case 1:\n                var localScale = transform.localScale;\n                sv.setVector3(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE, localScale);\n                sv.setVector3(ShuriKenParticle3DShaderDeclaration.SIZESCALE, localScale);\n                break;\n            case 2:\n                sv.setVector3(ShuriKenParticle3DShaderDeclaration.POSITIONSCALE, transform.getWorldLossyScale());\n                sv.setVector3(ShuriKenParticle3DShaderDeclaration.SIZESCALE, Vector3.ONE);\n                break;\n        }\n        switch (particleSystem.dragType) {\n            case 0:\n                this._dragConstant.setValue(particleSystem.dragSpeedConstantMin, particleSystem.dragSpeedConstantMin);\n                sv.setVector2(ShuriKenParticle3DShaderDeclaration.DRAG, this._dragConstant);\n                break;\n            case 2:\n                this._dragConstant.setValue(particleSystem.dragSpeedConstantMin, particleSystem.dragSpeedConstantMax);\n                sv.setVector2(ShuriKenParticle3DShaderDeclaration.DRAG, this._dragConstant);\n                break;\n            default:\n                this._dragConstant.setValue(0, 0);\n                break;\n        }\n        Vector3.scale(ShurikenParticleRenderer.gravity, particleSystem.gravityModifier, this._finalGravity);\n        sv.setVector3(ShuriKenParticle3DShaderDeclaration.GRAVITY, this._finalGravity);\n        sv.setInt(ShuriKenParticle3DShaderDeclaration.SIMULATIONSPACE, particleSystem.simulationSpace);\n        sv.setBool(ShuriKenParticle3DShaderDeclaration.THREEDSTARTROTATION, particleSystem.threeDStartRotation);\n        sv.setInt(ShuriKenParticle3DShaderDeclaration.SCALINGMODE, particleSystem.scaleMode);\n        sv.setNumber(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDLENGTHSCALE, this.stretchedBillboardLengthScale);\n        sv.setNumber(ShuriKenParticle3DShaderDeclaration.STRETCHEDBILLBOARDSPEEDSCALE, this.stretchedBillboardSpeedScale);\n        sv.setNumber(ShuriKenParticle3DShaderDeclaration.CURRENTTIME, particleSystem._currentTime);\n    }\n    renderUpdate(context) {\n        this._renderElements.forEach(element => {\n            element._renderElementOBJ.isRender = element._geometry._prepareRender(context);\n            element._geometry._prepareRender(context);\n            element._geometry._updateRenderParams(context);\n        });\n    }\n    get bounds() {\n        if (this.boundsChange) {\n            this._calculateBoundingBox();\n            this.boundsChange = false;\n        }\n        return this._bounds;\n    }\n    _cloneTo(dest) {\n        this._particleSystem.cloneTo(dest._particleSystem);\n        dest.sharedMaterial = this.sharedMaterial;\n        dest.renderMode = this.renderMode;\n        dest.mesh = this.mesh;\n        dest.stretchedBillboardCameraSpeedScale = this.stretchedBillboardCameraSpeedScale;\n        dest.stretchedBillboardSpeedScale = this.stretchedBillboardSpeedScale;\n        dest.stretchedBillboardLengthScale = this.stretchedBillboardLengthScale;\n        dest.sortingFudge = this.sortingFudge;\n    }\n    _onDestroy() {\n        (this._mesh) && (this._mesh._removeReference(), this._mesh = null);\n        this._particleSystem.destroy();\n        this._particleSystem = null;\n        super._onDestroy();\n    }\n    _statAdd() {\n        Stat.renderNode++;\n        Stat.particleRenderNode++;\n    }\n    _statRemove() {\n        Stat.renderNode--;\n        Stat.particleRenderNode--;\n    }\n}\nShurikenParticleRenderer.gravity = new Vector3(0, -9.81, 0);\nLaya.addInitCallback(() => {\n    ParticleShuriKenShaderInit.init();\n    VertexShurikenParticleBillboard.__init__();\n    VertexShurikenParticleMesh.__init__();\n    ShuriKenParticle3DShaderDeclaration.__init__();\n    ShuriKenParticle3D.__init__();\n    ShurikenParticleMaterial.__initDefine__();\n});\n","import { RenderableSprite3D } from \"../../d3/core/RenderableSprite3D\";\nimport { ShurikenParticleRenderer } from \"./ShurikenParticleRenderer\";\nexport class ShuriKenParticle3D extends RenderableSprite3D {\n    get particleSystem() {\n        return this._particleSystem;\n    }\n    get particleRenderer() {\n        return this._render;\n    }\n    constructor() {\n        super(null);\n        this._render = this.addComponent(ShurikenParticleRenderer);\n        this._particleSystem = this._render._particleSystem;\n    }\n    destroy(destroyChild = true) {\n        if (this._destroyed)\n            return;\n        super.destroy(destroyChild);\n    }\n}\n","import { ClassUtils } from \"../../utils/ClassUtils\";\nimport { Burst } from \"./module/Burst\";\nimport { ColorOverLifetime } from \"./module/ColorOverLifetime\";\nimport { Emission } from \"./module/Emission\";\nimport { FrameOverTime } from \"./module/FrameOverTime\";\nimport { GradientAngularVelocity } from \"./module/GradientAngularVelocity\";\nimport { GradientColor } from \"./module/GradientColor\";\nimport { GradientDataInt } from \"./module/GradientDataInt\";\nimport { GradientSize } from \"./module/GradientSize\";\nimport { GradientVelocity } from \"./module/GradientVelocity\";\nimport { RotationOverLifetime } from \"./module/RotationOverLifetime\";\nimport { BaseShape } from \"./module/shape/BaseShape\";\nimport { BoxShape } from \"./module/shape/BoxShape\";\nimport { CircleShape } from \"./module/shape/CircleShape\";\nimport { ConeShape } from \"./module/shape/ConeShape\";\nimport { HemisphereShape } from \"./module/shape/HemisphereShape\";\nimport { SphereShape } from \"./module/shape/SphereShape\";\nimport { SizeOverLifetime } from \"./module/SizeOverLifetime\";\nimport { StartFrame } from \"./module/StartFrame\";\nimport { TextureSheetAnimation } from \"./module/TextureSheetAnimation\";\nimport { VelocityOverLifetime } from \"./module/VelocityOverLifetime\";\nimport { ShuriKenParticle3D } from \"./ShuriKenParticle3D\";\nimport { ShurikenParticleMaterial } from \"./ShurikenParticleMaterial\";\nimport { ShurikenParticleRenderer } from \"./ShurikenParticleRenderer\";\nimport { ShurikenParticleSystem } from \"./ShurikenParticleSystem\";\nlet c = ClassUtils.regClass;\nc(\"ShurikenParticleMaterial\", ShurikenParticleMaterial);\nc(\"ShuriKenParticle3D\", ShuriKenParticle3D);\nc(\"ShurikenParticleRenderer\", ShurikenParticleRenderer);\nc(\"ShurikenParticleSystem\", ShurikenParticleSystem);\nc(\"Burst\", Burst);\nc(\"Emission\", Emission);\nc(\"BaseShape\", BaseShape);\nc(\"BoxShape\", BoxShape);\nc(\"CircleShape\", CircleShape);\nc(\"ConeShape\", ConeShape);\nc(\"HemisphereShape\", HemisphereShape);\nc(\"SphereShape\", SphereShape);\nc(\"FrameOverTime\", FrameOverTime);\nc(\"GradientAngularVelocity\", GradientAngularVelocity);\nc(\"GradientColor\", GradientColor);\nc(\"GradientDataInt\", GradientDataInt);\nc(\"GradientSize\", GradientSize);\nc(\"GradientVelocity\", GradientVelocity);\nc(\"StartFrame\", StartFrame);\nc(\"TextureSheetAnimation\", TextureSheetAnimation);\nc(\"ColorOverLifetime\", ColorOverLifetime);\nc(\"RotationOverLifetime\", RotationOverLifetime);\nc(\"SizeOverLifetime\", SizeOverLifetime);\nc(\"VelocityOverLifetime\", VelocityOverLifetime);\n","export class GradientDataVector2 {\n    get gradientCount() {\n        return this._currentLength / 3;\n    }\n    constructor() {\n        this._currentLength = 0;\n        this._elements = new Float32Array(12);\n    }\n    add(key, value) {\n        if (this._currentLength < 8) {\n            if ((this._currentLength === 6) && ((key !== 1))) {\n                key = 1;\n                console.log(\"GradientDataVector2 warning:the forth key is  be force set to 1.\");\n            }\n            this._elements[this._currentLength++] = key;\n            this._elements[this._currentLength++] = value.x;\n            this._elements[this._currentLength++] = value.y;\n        }\n        else {\n            console.log(\"GradientDataVector2 warning:data count must lessEqual than 4\");\n        }\n    }\n    cloneTo(destObject) {\n        destObject._currentLength = this._currentLength;\n        var destElements = destObject._elements;\n        for (var i = 0, n = this._elements.length; i < n; i++) {\n            destElements[i] = this._elements[i];\n        }\n    }\n    clone() {\n        var destGradientDataVector2 = new GradientDataVector2();\n        this.cloneTo(destGradientDataVector2);\n        return destGradientDataVector2;\n    }\n}\n"],"names":["GradientDataNumber","ParticleSystemShapeType","Vector3","BoundBox","Vector2","Shader3D","ShaderDataType","Color","Vector4","SubShader","ShaderFeatureType","LayaGL","MathUtil","_tempVector30","VertexDeclaration","VertexElement","VertexElementFormat","tempV3","GeometryElement","SerializeUtil","MeshTopology","DrawType","BufferState","IndexFormat","Bounds","Rand","Stat","Resource","Laya3DRender","BufferUsage","VertexMesh","Material","RenderState","BaseRender","BaseRenderType","RenderCapable","RenderElement","LayaEnv","Laya","RenderableSprite3D","ClassUtils"],"mappings":"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"}