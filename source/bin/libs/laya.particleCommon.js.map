{"version":3,"file":"laya.particleCommon.js","sources":["../../bin/tsc/layaAir/laya/particle/common/GradientDataNumber.js","../../bin/tsc/layaAir/laya/particle/common/ParticleMinMaxGradient.js","../../bin/tsc/layaAir/laya/particle/common/module/ColorOverLifetimeModule.js","../../bin/tsc/layaAir/laya/particle/common/module/EmissionModule.js","../../bin/tsc/layaAir/laya/particle/common/ParticleMinMaxCurve.js","../../bin/tsc/layaAir/laya/particle/common/module/TextureSheetAnimationModule.js","../../bin/tsc/layaAir/laya/particle/common/ModuleDef.js","../../bin/tsc/layaAir/laya/particle/common/ParticlePool.js","../../bin/tsc/layaAir/laya/particle/common/ParticleController.js"],"sourcesContent":["export class GradientDataNumber {\n    static createConstantData(constantValue) {\n        let gradientData = new GradientDataNumber();\n        gradientData.add(0, constantValue);\n        gradientData.add(1, constantValue);\n        return gradientData;\n    }\n    get _elements() {\n        return this._dataBuffer;\n    }\n    set _elements(value) {\n        let currentLength = value.length;\n        currentLength = currentLength > 8 ? 8 : currentLength;\n        this._currentLength = currentLength;\n        this._dataBuffer.set(value);\n        this._formatData();\n    }\n    get gradientCount() {\n        return this._currentLength / 2;\n    }\n    constructor() {\n        this._currentLength = 0;\n        this._dataBuffer = new Float32Array(8);\n    }\n    _formatData() {\n        if (this._currentLength == 8)\n            return;\n        if (this._elements[this._currentLength - 2] !== 1) {\n            this._elements[this._currentLength] = 1;\n            this._elements[this._currentLength + 1] = this._elements[this._currentLength - 1];\n        }\n    }\n    add(key, value) {\n        if (this._currentLength < 8) {\n            if ((this._currentLength === 6) && ((key !== 1))) {\n                key = 1;\n                console.log(\"GradientDataNumber warning:the forth key is  be force set to 1.\");\n            }\n            this._elements[this._currentLength++] = key;\n            this._elements[this._currentLength++] = value;\n        }\n        else {\n            console.log(\"GradientDataNumber warning:data count must lessEqual than 4\");\n        }\n    }\n    getKeyByIndex(index) {\n        return this._elements[index * 2];\n    }\n    getValueByIndex(index) {\n        return this._elements[index * 2 + 1];\n    }\n    getAverageValue() {\n        var total = 0;\n        var count = 0;\n        for (var i = 0, n = this._currentLength - 2; i < n; i += 2) {\n            var subValue = this._elements[i + 1];\n            subValue += this._elements[i + 3];\n            subValue = subValue * (this._elements[i + 2] - this._elements[i]);\n            total += subValue;\n            count++;\n        }\n        return total / count;\n    }\n    cloneTo(destObject) {\n        destObject._currentLength = this._currentLength;\n        var destElements = destObject._elements;\n        for (var i = 0, n = this._elements.length; i < n; i++)\n            destElements[i] = this._elements[i];\n    }\n    clone() {\n        var destGradientDataNumber = new GradientDataNumber();\n        this.cloneTo(destGradientDataNumber);\n        return destGradientDataNumber;\n    }\n}\n","import { Color } from \"../../maths/Color\";\nimport { Gradient } from \"../../maths/Gradient\";\nimport { MathUtil } from \"../../maths/MathUtil\";\nexport var ParticleMinMaxGradientMode;\n(function (ParticleMinMaxGradientMode) {\n    ParticleMinMaxGradientMode[ParticleMinMaxGradientMode[\"Color\"] = 0] = \"Color\";\n    ParticleMinMaxGradientMode[ParticleMinMaxGradientMode[\"Gradient\"] = 1] = \"Gradient\";\n    ParticleMinMaxGradientMode[ParticleMinMaxGradientMode[\"TwoColors\"] = 2] = \"TwoColors\";\n    ParticleMinMaxGradientMode[ParticleMinMaxGradientMode[\"TwoGradients\"] = 3] = \"TwoGradients\";\n})(ParticleMinMaxGradientMode || (ParticleMinMaxGradientMode = {}));\nconst color = new Color;\nconst color1 = new Color;\nexport class ParticleMinMaxGradient {\n    get color() {\n        return this.colorMin;\n    }\n    set color(value) {\n        this.colorMin = value;\n    }\n    get gradient() {\n        return this.gradientMin;\n    }\n    set gradient(value) {\n        this.gradientMin = value;\n    }\n    constructor() {\n        this.mode = ParticleMinMaxGradientMode.Color;\n        this.colorMin = new Color(1, 1, 1, 1);\n        this.colorMax = new Color(1, 1, 1, 1);\n        this.gradientMin = new Gradient();\n        this.gradientMax = new Gradient();\n    }\n    evaluate(time, lerp) {\n        switch (this.mode) {\n            case ParticleMinMaxGradientMode.Color:\n                return this.color;\n            case ParticleMinMaxGradientMode.Gradient:\n                this.gradient.evaluateColorRGB(time, color);\n                return color;\n            case ParticleMinMaxGradientMode.TwoColors:\n                color.a = MathUtil.lerp(this.colorMin.a, this.colorMax.a, lerp);\n                color.r = MathUtil.lerp(this.colorMin.r, this.colorMax.r, lerp);\n                color.g = MathUtil.lerp(this.colorMin.g, this.colorMax.g, lerp);\n                color.b = MathUtil.lerp(this.colorMin.b, this.colorMax.b, lerp);\n                return color;\n            case ParticleMinMaxGradientMode.TwoGradients:\n                this.gradientMin.evaluateColorRGB(time, color);\n                this.gradientMax.evaluateColorRGB(time, color1);\n                color.a = MathUtil.lerp(color.a, color1.a, lerp);\n                color.r = MathUtil.lerp(color.r, color1.r, lerp);\n                color.g = MathUtil.lerp(color.g, color1.g, lerp);\n                color.b = MathUtil.lerp(color.b, color1.b, lerp);\n                return color;\n            default:\n                return Color.WHITE;\n        }\n    }\n    cloneTo(destObject) {\n        destObject.mode = this.mode;\n        this.colorMin.cloneTo(destObject.colorMin);\n        this.colorMax.cloneTo(destObject.colorMax);\n        this.gradientMin.cloneTo(destObject.gradientMin);\n        this.gradientMax.cloneTo(destObject.gradientMax);\n    }\n    clone() {\n        let res = new ParticleMinMaxGradient();\n        this.cloneTo(res);\n        return res;\n    }\n}\n","import { ParticleMinMaxGradient } from \"../ParticleMinMaxGradient\";\nexport class ColorOverLifetimeModule {\n    constructor() {\n        this.enable = true;\n        this.color = new ParticleMinMaxGradient();\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n        this.color.cloneTo(destObject.color);\n    }\n    clone() {\n        var dest = new ColorOverLifetimeModule();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { Vector3 } from \"../../../maths/Vector3\";\nexport class EmissionBurst {\n    constructor() {\n        this.time = 0;\n        this.count = 30;\n    }\n    cloneTo(destObject) {\n        destObject.time = this.time;\n        destObject.count = this.count;\n    }\n    clone() {\n        var dest = new EmissionBurst();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\nexport class EmissionModule {\n    get rateOverTime() {\n        return this._rateOverTime;\n    }\n    set rateOverTime(value) {\n        this._rateOverTime = value;\n        this._emissionInterval = 1 / value;\n    }\n    get bursts() {\n        return this._bursts;\n    }\n    set bursts(value) {\n        this._bursts = value;\n        if (value) {\n            this._sortedBursts = value.slice().sort((a, b) => a.time - b.time);\n        }\n        else {\n            this._sortedBursts = [];\n        }\n    }\n    constructor() {\n        this.enable = true;\n        this._rateOverTime = 10;\n        this._lastPosition = new Vector3();\n        this.rateOverDistance = 0;\n        this._emissionInterval = 0.1;\n        this._sortedBursts = [];\n    }\n    destroy() {\n        this._sortedBursts = null;\n        this._bursts = null;\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n        destObject.rateOverTime = this.rateOverTime;\n        destObject.rateOverDistance = this.rateOverDistance;\n        if (this.bursts) {\n            let bursts = [];\n            this.bursts.forEach(burst => {\n                bursts.push(burst.clone());\n            });\n            destObject.bursts = bursts;\n        }\n    }\n    clone() {\n        let dest = new EmissionModule();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { MathUtil } from \"../../maths/MathUtil\";\nimport { GradientDataNumber } from \"./GradientDataNumber\";\nexport var ParticleMinMaxCurveMode;\n(function (ParticleMinMaxCurveMode) {\n    ParticleMinMaxCurveMode[ParticleMinMaxCurveMode[\"Constant\"] = 0] = \"Constant\";\n    ParticleMinMaxCurveMode[ParticleMinMaxCurveMode[\"Curve\"] = 1] = \"Curve\";\n    ParticleMinMaxCurveMode[ParticleMinMaxCurveMode[\"TwoConstants\"] = 2] = \"TwoConstants\";\n    ParticleMinMaxCurveMode[ParticleMinMaxCurveMode[\"TwoCurves\"] = 3] = \"TwoCurves\";\n})(ParticleMinMaxCurveMode || (ParticleMinMaxCurveMode = {}));\nexport class ParticleMinMaxCurve {\n    get constant() {\n        return this._constantMax;\n    }\n    set constant(value) {\n        this._constantMax = value;\n    }\n    get constantMin() {\n        return this._constantMin;\n    }\n    set constantMin(value) {\n        this._constantMin = value;\n    }\n    get constantMax() {\n        return this._constantMax;\n    }\n    set constantMax(value) {\n        this._constantMax = value;\n    }\n    get curve() {\n        return this._curveMax;\n    }\n    set curve(value) {\n        this._curveMax = value;\n    }\n    get curveMin() {\n        return this._curveMin;\n    }\n    set curveMin(value) {\n        this._curveMin = value;\n    }\n    get curveMax() {\n        return this._curveMax;\n    }\n    set curveMax(value) {\n        this._curveMax = value;\n    }\n    constructor() {\n        this.mode = ParticleMinMaxCurveMode.Constant;\n        this._constantMin = 0;\n        this._constantMax = 0;\n        this._curveMin = new GradientDataNumber();\n        this._curveMax = new GradientDataNumber();\n    }\n    evaluate(time, lerp) {\n        switch (this.mode) {\n            case ParticleMinMaxCurveMode.Constant:\n                return this.constant;\n            case ParticleMinMaxCurveMode.TwoConstants:\n                return MathUtil.lerp(this.constantMin, this.constantMax, lerp);\n            case ParticleMinMaxCurveMode.Curve:\n            case ParticleMinMaxCurveMode.TwoCurves:\n            default:\n                return 0;\n        }\n    }\n    destroy() {\n    }\n    cloneTo(dest) {\n        dest.mode = this.mode;\n        dest.constantMin = this.constantMin;\n        dest.constantMax = this.constantMax;\n        dest.curveMin = this.curveMin.clone();\n        dest.curveMax = this.curveMax.clone();\n    }\n    clone() {\n        let dest = new ParticleMinMaxCurve();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { ParticleMinMaxCurve, ParticleMinMaxCurveMode } from \"../ParticleMinMaxCurve\";\nexport var TextureSheetAnimationMode;\n(function (TextureSheetAnimationMode) {\n    TextureSheetAnimationMode[TextureSheetAnimationMode[\"SingleRow\"] = 0] = \"SingleRow\";\n    TextureSheetAnimationMode[TextureSheetAnimationMode[\"WholeSheet\"] = 1] = \"WholeSheet\";\n})(TextureSheetAnimationMode || (TextureSheetAnimationMode = {}));\nexport class TextureSheetAnimationModule {\n    constructor() {\n        this.enable = true;\n        this.tiles = new Vector2(1, 1);\n        this.animation = TextureSheetAnimationMode.WholeSheet;\n        this.frame = new ParticleMinMaxCurve();\n        this.startFrame = new ParticleMinMaxCurve();\n        this.cycles = 1;\n        this._sheetFrameData = new Vector4;\n    }\n    _calculateSheetFrameData() {\n        let startFrame = this.startFrame;\n        let startIndex = startFrame.constant;\n        let frameCount = 0;\n        let rowIndex = 0;\n        let mode = startFrame.mode;\n        switch (mode) {\n            case ParticleMinMaxCurveMode.Constant:\n                {\n                    startIndex = startFrame.constant;\n                    break;\n                }\n            case ParticleMinMaxCurveMode.TwoConstants:\n                {\n                    startIndex = Math.floor(Math.random() * (startFrame.constantMax - startFrame.constantMin) + startFrame.constantMin);\n                    break;\n                }\n            default:\n                break;\n        }\n        switch (this.animation) {\n            case TextureSheetAnimationMode.SingleRow:\n                frameCount = this.tiles.x;\n                startIndex = startIndex % frameCount;\n                rowIndex = this.rowIndex;\n                break;\n            case TextureSheetAnimationMode.WholeSheet:\n                frameCount = this.tiles.x * this.tiles.y;\n                startIndex = startIndex % frameCount;\n                rowIndex = 0;\n                break;\n            default:\n                break;\n        }\n        this._sheetFrameData.setValue(startIndex, frameCount, rowIndex, 0);\n    }\n    cloneTo(destObject) {\n        destObject.enable = this.enable;\n        this.tiles.cloneTo(destObject.tiles);\n        destObject.animation = this.animation;\n        destObject.rowIndex = this.rowIndex;\n        this.frame.cloneTo(destObject.frame);\n        this.startFrame.cloneTo(destObject.startFrame);\n        destObject.cycles = this.cycles;\n    }\n    clone() {\n        var dest = new TextureSheetAnimationModule();\n        this.cloneTo(dest);\n        return dest;\n    }\n}\n","import { ClassUtils } from \"../../utils/ClassUtils\";\nimport { GradientDataNumber } from \"./GradientDataNumber\";\nimport { ColorOverLifetimeModule } from \"./module/ColorOverLifetimeModule\";\nimport { EmissionModule, EmissionBurst } from \"./module/EmissionModule\";\nimport { TextureSheetAnimationModule } from \"./module/TextureSheetAnimationModule\";\nimport { ParticleMinMaxCurve } from \"./ParticleMinMaxCurve\";\nimport { ParticleMinMaxGradient } from \"./ParticleMinMaxGradient\";\nClassUtils.regClass(\"GradientDataNumber\", GradientDataNumber);\nClassUtils.regClass(\"ParticleMinMaxGradient\", ParticleMinMaxGradient);\nClassUtils.regClass(\"ParticleMinMaxCurve\", ParticleMinMaxCurve);\nClassUtils.regClass(\"ColorOverLifetimeModule\", ColorOverLifetimeModule);\nClassUtils.regClass(\"EmissionModule\", EmissionModule);\nClassUtils.regClass(\"EmissionBurst\", EmissionBurst);\nClassUtils.regClass(\"TextureSheetAnimationModule\", TextureSheetAnimationModule);\n","export class ParticleInfo {\n    constructor() {\n        this.timeIndex = 0;\n        this.lifetimeIndex = 0;\n    }\n}\nexport class ParticlePool {\n    get particleStride() {\n        return this._particleStride;\n    }\n    get particleByteStride() {\n        return this._particleByteStride;\n    }\n    get activeParticleCount() {\n        if (this.activeEndIndex >= this.activeStartIndex) {\n            return this.activeEndIndex - this.activeStartIndex;\n        }\n        else {\n            return this._maxCount - this.activeStartIndex + this.activeEndIndex;\n        }\n    }\n    ;\n    constructor(maxCount, particleByteStride, particleInfo) {\n        this._maxCount = maxCount + 1;\n        this._particleStride = particleByteStride / Float32Array.BYTES_PER_ELEMENT;\n        this._particleByteStride = particleByteStride;\n        this.particleDatas = new Float32Array(this._maxCount * this._particleStride);\n        this.particleInfo = particleInfo;\n        this.clear();\n    }\n    clear() {\n        this.activeStartIndex = 0;\n        this.activeEndIndex = 0;\n        this.updateStartIndex = 0;\n        this.updateEndIndex = 0;\n    }\n    retireParticles(totleTime) {\n        let activeStart = this.activeStartIndex;\n        let activeEnd = this.activeEndIndex;\n        while (this.activeStartIndex != this.activeEndIndex) {\n            let index = this.activeStartIndex * this._particleStride;\n            let timeIndex = this.particleInfo.timeIndex + index;\n            let particleEmitTime = this.particleDatas[timeIndex];\n            let particleAge = totleTime - particleEmitTime;\n            let lifetimeIndex = this.particleInfo.lifetimeIndex + index;\n            let particleLifetime = this.particleDatas[lifetimeIndex];\n            if (particleAge < particleLifetime) {\n                break;\n            }\n            this.activeStartIndex = (this.activeStartIndex + 1) % this._maxCount;\n        }\n        this.updateStartIndex = this.updateEndIndex = this.activeEndIndex;\n        return;\n    }\n    addParticleData(data) {\n        let index = this.activeEndIndex;\n        let offset = index * this._particleStride;\n        this.particleDatas.set(data, offset);\n        this.activeEndIndex = (this.activeEndIndex + 1) % this._maxCount;\n        this.updateEndIndex = this.activeEndIndex;\n    }\n    destroy() {\n        this.clear();\n        this.particleDatas = null;\n    }\n}\n","import { ParticlePool } from \"./ParticlePool\";\nexport class ParticleControler {\n    constructor() {\n        this.time = 0;\n        this.totalTime = 0;\n        this._lastEmitTime = 0;\n        this._emitDistance = 0;\n        this._nextBurstIndex = 0;\n        this._burstLoopCount = 0;\n        this._isEmitting = false;\n        this._isPlaying = false;\n        this._isPaused = false;\n        this._isStopped = true;\n    }\n    _initParticlePool(maxParticles, particleByteStride, particleInfo) {\n        if (this.particlePool) {\n            this.particlePool.destroy();\n        }\n        this.particlePool = new ParticlePool(maxParticles, particleByteStride, particleInfo);\n    }\n    get isEmitting() {\n        return this._isEmitting;\n    }\n    get isPlaying() {\n        return this._isPlaying;\n    }\n    get isPaused() {\n        return this._isPaused;\n    }\n    get isStopped() {\n        return this._isStopped;\n    }\n    play() {\n        this._isEmitting = true;\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._isStopped = false;\n    }\n    pause() {\n        if (this.isPlaying) {\n            this._isEmitting = false;\n            this._isPlaying = false;\n            this._isPaused = true;\n            this._isStopped = false;\n        }\n    }\n    stop() {\n        this._isEmitting = false;\n        this._isPlaying = false;\n        this._isPaused = false;\n        this._isStopped = true;\n        this.clear();\n    }\n    clear() {\n        this.time = 0;\n        this.totalTime = 0;\n        this._lastEmitTime = 0;\n        this._emitDistance = 0;\n        this._nextBurstIndex = 0;\n        this._burstLoopCount = 0;\n        this.particlePool.clear();\n    }\n    destroy() {\n        this.clear();\n        this.particlePool.destroy();\n        this.particlePool = null;\n    }\n}\n"],"names":["ParticleMinMaxGradientMode","Color","Gradient","MathUtil","Vector3","ParticleMinMaxCurveMode","TextureSheetAnimationMode","Vector2","Vector4","ClassUtils"],"mappings":"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"}