{"version":3,"file":"laya.tiledmap_discarded.js","sources":["../../bin/tsc/layaAir/laya/legacy/tiledmap/GridSprite.js","../../bin/tsc/layaAir/laya/legacy/tiledmap/IMap.js","../../bin/tsc/layaAir/laya/legacy/tiledmap/TileAniSprite.js","../../bin/tsc/layaAir/laya/legacy/tiledmap/MapLayer.js","../../bin/tsc/layaAir/laya/legacy/tiledmap/TileTexSet.js","../../bin/tsc/layaAir/laya/legacy/tiledmap/TiledMap.js"],"sourcesContent":["import { Sprite } from \"../../display/Sprite\";\nexport class GridSprite extends Sprite {\n    constructor() {\n        super(...arguments);\n        this.relativeX = 0;\n        this.relativeY = 0;\n        this.isAloneObject = false;\n        this.isHaveAnimation = false;\n        this.drawImageNum = 0;\n        this._map = null;\n    }\n    initData(map, objectKey = false) {\n        this._map = map;\n        this.isAloneObject = objectKey;\n    }\n    addAniSprite(sprite) {\n        if (this.aniSpriteArray == null) {\n            this.aniSpriteArray = [];\n        }\n        this.aniSpriteArray.push(sprite);\n    }\n    show() {\n        if (!this.visible) {\n            this.visible = true;\n            if (this.aniSpriteArray == null) {\n                return;\n            }\n            var tAniSprite;\n            for (var i = 0; i < this.aniSpriteArray.length; i++) {\n                tAniSprite = this.aniSpriteArray[i];\n                tAniSprite.show();\n            }\n        }\n    }\n    hide() {\n        if (this.visible) {\n            this.visible = false;\n            if (this.aniSpriteArray == null) {\n                return;\n            }\n            var tAniSprite;\n            for (var i = 0; i < this.aniSpriteArray.length; i++) {\n                tAniSprite = this.aniSpriteArray[i];\n                tAniSprite.hide();\n            }\n        }\n    }\n    updatePos() {\n        if (this.isAloneObject) {\n            if (this._map) {\n                this.x = this.relativeX - this._map._viewPortX;\n                this.y = this.relativeY - this._map._viewPortY;\n            }\n            if (this.x < 0 || this.x > this._map.viewPortWidth || this.y < 0 || this.y > this._map.viewPortHeight) {\n                this.hide();\n            }\n            else {\n                this.show();\n            }\n        }\n        else {\n            if (this._map) {\n                this.x = this.relativeX - this._map._viewPortX;\n                this.y = this.relativeY - this._map._viewPortY;\n            }\n        }\n    }\n    clearAll() {\n        if (this._map) {\n            this._map = null;\n        }\n        this.visible = false;\n        var tAniSprite;\n        if (this.aniSpriteArray != null) {\n            for (var i = 0; i < this.aniSpriteArray.length; i++) {\n                tAniSprite = this.aniSpriteArray[i];\n                tAniSprite.clearAll();\n            }\n        }\n        this.destroy();\n        this.relativeX = 0;\n        this.relativeY = 0;\n        this.isHaveAnimation = false;\n        this.aniSpriteArray = null;\n        this.drawImageNum = 0;\n    }\n}\n","export class IMap {\n}\nIMap.TiledMap = null;\n","import { Sprite } from \"../../display/Sprite\";\nexport class TileAniSprite extends Sprite {\n    constructor() {\n        super(...arguments);\n        this._tileTextureSet = null;\n        this._aniName = null;\n    }\n    setTileTextureSet(aniName, tileTextureSet) {\n        this._aniName = aniName;\n        this._tileTextureSet = tileTextureSet;\n        tileTextureSet.addAniSprite(this._aniName, this);\n    }\n    show() {\n        this._tileTextureSet.addAniSprite(this._aniName, this);\n    }\n    hide() {\n        this._tileTextureSet.removeAniSprite(this._aniName);\n    }\n    clearAll() {\n        this._tileTextureSet.removeAniSprite(this._aniName);\n        this.destroy();\n        this._tileTextureSet = null;\n        this._aniName = null;\n    }\n}\n","import { Sprite } from \"../../display/Sprite\";\nimport { Point } from \"../../maths/Point\";\nimport { GridSprite } from \"./GridSprite\";\nimport { IMap } from \"./IMap\";\nimport { TileAniSprite } from \"./TileAniSprite\";\nexport class MapLayer extends Sprite {\n    constructor() {\n        super(...arguments);\n        this._mapData = null;\n        this._tileWidthHalf = 0;\n        this._tileHeightHalf = 0;\n        this._mapWidthHalf = 0;\n        this._mapHeightHalf = 0;\n        this._gridSpriteArray = [];\n        this._objDic = null;\n        this._dataDic = null;\n        this._tempMapPos = new Point();\n        this.layerName = null;\n    }\n    init(layerData, map) {\n        this._map = map;\n        this._mapData = layerData.data;\n        var tHeight = layerData.height;\n        var tWidth = layerData.width;\n        var tTileW = map.tileWidth;\n        var tTileH = map.tileHeight;\n        this.layerName = layerData.name;\n        this._properties = layerData.properties;\n        this.alpha = layerData.opacity;\n        this._tileWidthHalf = tTileW / 2;\n        this._tileHeightHalf = tTileH / 2;\n        this._mapWidthHalf = this._map.width / 2 - this._tileWidthHalf;\n        this._mapHeightHalf = this._map.height / 2;\n        switch (layerData.type) {\n            case \"tilelayer\":\n                break;\n            case \"objectgroup\":\n                var tObjectGid = 0;\n                var tArray = layerData.objects;\n                if (tArray.length > 0) {\n                    this._objDic = {};\n                    this._dataDic = {};\n                }\n                var tObjectData;\n                var tObjWidth;\n                var tObjHeight;\n                for (var i = 0; i < tArray.length; i++) {\n                    tObjectData = tArray[i];\n                    this._dataDic[tObjectData.name] = tObjectData;\n                    if (tObjectData.visible == true) {\n                        tObjWidth = tObjectData.width;\n                        tObjHeight = tObjectData.height;\n                        var tSprite = map.getSprite(tObjectData.gid, tObjWidth, tObjHeight);\n                        if (tSprite != null) {\n                            switch (this._map.orientation) {\n                                case IMap.TiledMap.ORIENTATION_ISOMETRIC:\n                                    this.getScreenPositionByTilePos(tObjectData.x / tTileH, tObjectData.y / tTileH, Point.TEMP);\n                                    tSprite.pivot(tObjWidth / 2, tObjHeight / 2);\n                                    tSprite.rotation = tObjectData.rotation;\n                                    tSprite.x = tSprite.relativeX = Point.TEMP.x + this._map.viewPortX;\n                                    tSprite.y = tSprite.relativeY = Point.TEMP.y + this._map.viewPortY - tObjHeight / 2;\n                                    break;\n                                case IMap.TiledMap.ORIENTATION_STAGGERED:\n                                    tSprite.pivot(tObjWidth / 2, tObjHeight / 2);\n                                    tSprite.rotation = tObjectData.rotation;\n                                    tSprite.x = tSprite.relativeX = tObjectData.x + tObjWidth / 2;\n                                    tSprite.y = tSprite.relativeY = tObjectData.y - tObjHeight / 2;\n                                    break;\n                                case IMap.TiledMap.ORIENTATION_ORTHOGONAL:\n                                    tSprite.pivot(tObjWidth / 2, tObjHeight / 2);\n                                    tSprite.rotation = tObjectData.rotation;\n                                    tSprite.x = tSprite.relativeX = tObjectData.x + tObjWidth / 2;\n                                    tSprite.y = tSprite.relativeY = tObjectData.y - tObjHeight / 2;\n                                    break;\n                                case IMap.TiledMap.ORIENTATION_HEXAGONAL:\n                                    tSprite.x = tSprite.relativeX = tObjectData.x;\n                                    tSprite.y = tSprite.relativeY = tObjectData.y;\n                                    break;\n                            }\n                            this.addChild(tSprite);\n                            this._gridSpriteArray.push(tSprite);\n                            this._objDic[tObjectData.name] = tSprite;\n                        }\n                    }\n                }\n                break;\n        }\n    }\n    getObjectByName(objName) {\n        if (this._objDic) {\n            return this._objDic[objName];\n        }\n        return null;\n    }\n    getObjectDataByName(objName) {\n        if (this._dataDic) {\n            return this._dataDic[objName];\n        }\n        return null;\n    }\n    getLayerProperties(name) {\n        if (this._properties) {\n            return this._properties[name];\n        }\n        return null;\n    }\n    getTileData(tileX, tileY) {\n        if (tileY >= 0 && tileY < this._map.numRowsTile && tileX >= 0 && tileX < this._map.numColumnsTile) {\n            var tIndex = tileY * this._map.numColumnsTile + tileX;\n            var tMapData = this._mapData;\n            if (tMapData != null && tIndex < tMapData.length) {\n                return tMapData[tIndex];\n            }\n        }\n        return 0;\n    }\n    getScreenPositionByTilePos(tileX, tileY, screenPos = null) {\n        if (screenPos) {\n            switch (this._map.orientation) {\n                case IMap.TiledMap.ORIENTATION_ISOMETRIC:\n                    screenPos.x = this._map.width / 2 - (tileY - tileX) * this._tileWidthHalf;\n                    screenPos.y = (tileY + tileX) * this._tileHeightHalf;\n                    break;\n                case IMap.TiledMap.ORIENTATION_STAGGERED:\n                    tileX = Math.floor(tileX);\n                    tileY = Math.floor(tileY);\n                    screenPos.x = tileX * this._map.tileWidth + (tileY & 1) * this._tileWidthHalf;\n                    screenPos.y = tileY * this._tileHeightHalf;\n                    break;\n                case IMap.TiledMap.ORIENTATION_ORTHOGONAL:\n                    screenPos.x = tileX * this._map.tileWidth;\n                    screenPos.y = tileY * this._map.tileHeight;\n                    break;\n                case IMap.TiledMap.ORIENTATION_HEXAGONAL:\n                    tileX = Math.floor(tileX);\n                    tileY = Math.floor(tileY);\n                    var tTileHeight = this._map.tileHeight * 2 / 3;\n                    screenPos.x = (tileX * this._map.tileWidth + tileY % 2 * this._tileWidthHalf) % this._map.gridWidth;\n                    screenPos.y = (tileY * tTileHeight) % this._map.gridHeight;\n                    break;\n            }\n            screenPos.x = (screenPos.x + this._map.viewPortX) * this._map.scale;\n            screenPos.y = (screenPos.y + this._map.viewPortY) * this._map.scale;\n        }\n    }\n    getTileDataByScreenPos(screenX, screenY) {\n        var tData = 0;\n        if (this.getTilePositionByScreenPos(screenX, screenY, this._tempMapPos)) {\n            tData = this.getTileData(Math.floor(this._tempMapPos.x), Math.floor(this._tempMapPos.y));\n        }\n        return tData;\n    }\n    getTilePositionByScreenPos(screenX, screenY, result = null) {\n        screenX = screenX / this._map.scale - this._map.viewPortX;\n        screenY = screenY / this._map.scale - this._map.viewPortY;\n        var tTileW = this._map.tileWidth;\n        var tTileH = this._map.tileHeight;\n        var tV = 0;\n        var tU = 0;\n        switch (this._map.orientation) {\n            case IMap.TiledMap.ORIENTATION_ISOMETRIC:\n                var tDirX = screenX - this._map.width / 2;\n                var tDirY = screenY;\n                tV = -(tDirX / tTileW - tDirY / tTileH);\n                tU = tDirX / tTileW + tDirY / tTileH;\n                if (result) {\n                    result.x = tU;\n                    result.y = tV;\n                }\n                return true;\n                break;\n            case IMap.TiledMap.ORIENTATION_STAGGERED:\n                if (result) {\n                    var cx, cy, rx, ry;\n                    cx = Math.floor(screenX / tTileW) * tTileW + tTileW / 2;\n                    cy = Math.floor(screenY / tTileH) * tTileH + tTileH / 2;\n                    rx = (screenX - cx) * tTileH / 2;\n                    ry = (screenY - cy) * tTileW / 2;\n                    if (Math.abs(rx) + Math.abs(ry) <= tTileW * tTileH / 4) {\n                        tU = Math.floor(screenX / tTileW);\n                        tV = Math.floor(screenY / tTileH) * 2;\n                    }\n                    else {\n                        screenX = screenX - tTileW / 2;\n                        tU = Math.floor(screenX / tTileW) + 1;\n                        screenY = screenY - tTileH / 2;\n                        tV = Math.floor(screenY / tTileH) * 2 + 1;\n                    }\n                    result.x = tU - (tV & 1);\n                    result.y = tV;\n                }\n                return true;\n                break;\n            case IMap.TiledMap.ORIENTATION_ORTHOGONAL:\n                tU = screenX / tTileW;\n                tV = screenY / tTileH;\n                if (result) {\n                    result.x = tU;\n                    result.y = tV;\n                }\n                return true;\n                break;\n            case IMap.TiledMap.ORIENTATION_HEXAGONAL:\n                var tTileHeight = tTileH * 2 / 3;\n                tV = screenY / tTileHeight;\n                tU = (screenX - tV % 2 * this._tileWidthHalf) / tTileW;\n                if (result) {\n                    result.x = tU;\n                    result.y = tV;\n                }\n                break;\n        }\n        return false;\n    }\n    getDrawSprite(gridX, gridY) {\n        var tSprite = new GridSprite();\n        tSprite.relativeX = gridX * this._map.gridWidth;\n        tSprite.relativeY = gridY * this._map.gridHeight;\n        tSprite.initData(this._map);\n        this._gridSpriteArray.push(tSprite);\n        return tSprite;\n    }\n    updateGridPos() {\n        var tSprite;\n        for (var i = 0; i < this._gridSpriteArray.length; i++) {\n            tSprite = this._gridSpriteArray[i];\n            if ((tSprite.visible || tSprite.isAloneObject) && tSprite.drawImageNum > 0) {\n                tSprite.updatePos();\n            }\n        }\n    }\n    drawTileTexture(gridSprite, tileX, tileY) {\n        if (tileY >= 0 && tileY < this._map.numRowsTile && tileX >= 0 && tileX < this._map.numColumnsTile) {\n            var tIndex = tileY * this._map.numColumnsTile + tileX;\n            var tMapData = this._mapData;\n            if (tMapData != null && tIndex < tMapData.length) {\n                if (tMapData[tIndex] != 0) {\n                    var tTileTexSet = this._map.getTexture(tMapData[tIndex]);\n                    if (tTileTexSet) {\n                        var tX = 0;\n                        var tY = 0;\n                        var tTexture = tTileTexSet.texture;\n                        switch (this._map.orientation) {\n                            case IMap.TiledMap.ORIENTATION_STAGGERED:\n                                tX = tileX * this._map.tileWidth % this._map.gridWidth + (tileY & 1) * this._tileWidthHalf;\n                                tY = tileY * this._tileHeightHalf % this._map.gridHeight;\n                                break;\n                            case IMap.TiledMap.ORIENTATION_ORTHOGONAL:\n                                tX = tileX * this._map.tileWidth % this._map.gridWidth;\n                                tY = tileY * this._map.tileHeight % this._map.gridHeight;\n                                break;\n                            case IMap.TiledMap.ORIENTATION_ISOMETRIC:\n                                tX = (this._mapWidthHalf + (tileX - tileY) * this._tileWidthHalf) % this._map.gridWidth;\n                                tY = ((tileX + tileY) * this._tileHeightHalf) % this._map.gridHeight;\n                                break;\n                            case IMap.TiledMap.ORIENTATION_HEXAGONAL:\n                                var tTileHeight = this._map.tileHeight * 2 / 3;\n                                tX = (tileX * this._map.tileWidth + tileY % 2 * this._tileWidthHalf) % this._map.gridWidth;\n                                tY = (tileY * tTileHeight) % this._map.gridHeight;\n                                break;\n                        }\n                        if (tTileTexSet.isAnimation) {\n                            var tAnimationSprite = new TileAniSprite();\n                            tAnimationSprite.x = tX;\n                            tAnimationSprite.y = tY;\n                            tAnimationSprite.setTileTextureSet(tIndex.toString(), tTileTexSet);\n                            gridSprite.addAniSprite(tAnimationSprite);\n                            gridSprite.addChild(tAnimationSprite);\n                            gridSprite.isHaveAnimation = true;\n                        }\n                        else {\n                            gridSprite.graphics.drawImage(tTileTexSet.texture, tX + tTileTexSet.offX, tY + tTileTexSet.offY);\n                        }\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    clearAll() {\n        this._map = null;\n        this._mapData = null;\n        this._tileWidthHalf = 0;\n        this._tileHeightHalf = 0;\n        this._mapWidthHalf = 0;\n        this._mapHeightHalf = 0;\n        this.layerName = null;\n        var i = 0;\n        if (this._objDic) {\n            for (var p in this._objDic) {\n                delete this._objDic[p];\n            }\n            this._objDic = null;\n        }\n        if (this._dataDic) {\n            for (p in this._dataDic) {\n                delete this._dataDic[p];\n            }\n            this._dataDic = null;\n        }\n        var tGridSprite;\n        for (i = 0; i < this._gridSpriteArray.length; i++) {\n            tGridSprite = this._gridSpriteArray[i];\n            tGridSprite.clearAll();\n        }\n        this._properties = null;\n        this._tempMapPos = null;\n        this.tarLayer = null;\n    }\n}\n","import { ILaya } from \"../../../ILaya\";\nimport { Browser } from \"../../utils/Browser\";\nexport class TileTexSet {\n    constructor() {\n        this.gid = -1;\n        this.offX = 0;\n        this.offY = 0;\n        this.textureArray = null;\n        this.durationTimeArray = null;\n        this.animationTotalTime = 0;\n        this.isAnimation = false;\n        this._spriteNum = 0;\n        this._aniDic = null;\n        this._frameIndex = 0;\n        this._time = 0;\n        this._interval = 0;\n        this._preFrameTime = 0;\n    }\n    addAniSprite(aniName, sprite) {\n        if (this.animationTotalTime == 0) {\n            return;\n        }\n        if (this._aniDic == null) {\n            this._aniDic = {};\n        }\n        if (this._spriteNum == 0) {\n            ILaya.timer.frameLoop(3, this, this.animate);\n            this._preFrameTime = Browser.now();\n            this._frameIndex = 0;\n            this._time = 0;\n            this._interval = 0;\n        }\n        this._spriteNum++;\n        this._aniDic[aniName] = sprite;\n        if (this.textureArray && this._frameIndex < this.textureArray.length) {\n            var tTileTextureSet = this.textureArray[this._frameIndex];\n            this.drawTexture(sprite, tTileTextureSet);\n        }\n    }\n    animate() {\n        if (this.textureArray && this.textureArray.length > 0 && this.durationTimeArray && this.durationTimeArray.length > 0) {\n            var tNow = Browser.now();\n            this._interval = tNow - this._preFrameTime;\n            this._preFrameTime = tNow;\n            if (this._interval > this.animationTotalTime) {\n                this._interval = this._interval % this.animationTotalTime;\n            }\n            this._time += this._interval;\n            var tTime = this.durationTimeArray[this._frameIndex];\n            while (this._time > tTime) {\n                this._time -= tTime;\n                this._frameIndex++;\n                if (this._frameIndex >= this.durationTimeArray.length || this._frameIndex >= this.textureArray.length) {\n                    this._frameIndex = 0;\n                }\n                var tTileTextureSet = this.textureArray[this._frameIndex];\n                var tSprite;\n                for (var p in this._aniDic) {\n                    tSprite = this._aniDic[p];\n                    this.drawTexture(tSprite, tTileTextureSet);\n                }\n                tTime = this.durationTimeArray[this._frameIndex];\n            }\n        }\n    }\n    drawTexture(sprite, tileTextSet) {\n        sprite.graphics.clear(true);\n        sprite.graphics.drawImage(tileTextSet.texture, tileTextSet.offX, tileTextSet.offY);\n    }\n    removeAniSprite(_name) {\n        if (this._aniDic && this._aniDic[_name]) {\n            delete this._aniDic[_name];\n            this._spriteNum--;\n            if (this._spriteNum == 0) {\n                ILaya.timer.clear(this, this.animate);\n            }\n        }\n    }\n    showDebugInfo() {\n        var tInfo = null;\n        if (this._spriteNum > 0) {\n            tInfo = \"TileTextureSet::gid:\" + this.gid.toString() + \" 动画数:\" + this._spriteNum.toString();\n        }\n        return tInfo;\n    }\n    clearAll() {\n        this.gid = -1;\n        if (this.texture) {\n            this.texture.destroy();\n            this.texture = null;\n        }\n        this.offX = 0;\n        this.offY = 0;\n        this.textureArray = null;\n        this.durationTimeArray = null;\n        this.isAnimation = false;\n        this._spriteNum = 0;\n        this._aniDic = null;\n        this._frameIndex = 0;\n        this._preFrameTime = 0;\n        this._time = 0;\n        this._interval = 0;\n    }\n}\n","import { ILaya } from \"../../../ILaya\";\nimport { Sprite } from \"../../display/Sprite\";\nimport { Rectangle } from \"../../maths/Rectangle\";\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\nimport { HTMLCanvas } from \"../../resource/HTMLCanvas\";\nimport { Texture } from \"../../resource/Texture\";\nimport { GridSprite } from \"./GridSprite\";\nimport { IMap } from \"./IMap\";\nimport { MapLayer } from \"./MapLayer\";\nimport { TileAniSprite } from \"./TileAniSprite\";\nimport { TileTexSet } from \"./TileTexSet\";\nexport class TiledMap {\n    constructor() {\n        this._tileTexSetArr = [];\n        this._texArray = [];\n        this._x = 0;\n        this._y = 0;\n        this._width = 0;\n        this._height = 0;\n        this._mapW = 0;\n        this._mapH = 0;\n        this._mapTileW = 0;\n        this._mapTileH = 0;\n        this._rect = new Rectangle();\n        this._paddingRect = new Rectangle();\n        this._mapSprite = null;\n        this._layerArray = [];\n        this._renderLayerArray = [];\n        this._gridArray = [];\n        this._showGridKey = false;\n        this._totalGridNum = 0;\n        this._gridW = 0;\n        this._gridH = 0;\n        this._gridWidth = 450;\n        this._gridHeight = 450;\n        this._tileSetArray = [];\n        this._currTileSet = null;\n        this._completeHandler = null;\n        this._mapRect = new GRect();\n        this._mapLastRect = new GRect();\n        this._index = 0;\n        this._animationDic = {};\n        this._tileProperties = {};\n        this._tileProperties2 = {};\n        this._orientation = \"orthogonal\";\n        this._renderOrder = \"right-down\";\n        this._colorArray = [\"FF\", \"00\", \"33\", \"66\"];\n        this._scale = 1;\n        this._pivotScaleX = 0.5;\n        this._pivotScaleY = 0.5;\n        this._centerX = 0;\n        this._centerY = 0;\n        this._viewPortX = 0;\n        this._viewPortY = 0;\n        this._viewPortWidth = 0;\n        this._viewPortHeight = 0;\n        this._enableLinear = true;\n        this._limitRange = false;\n        this.autoCache = true;\n        this.autoCacheType = \"normal\";\n        this.enableMergeLayer = false;\n        this.removeCoveredTile = false;\n        this.showGridTextureCount = false;\n        this.antiCrack = true;\n        this.cacheAllAfterInit = false;\n        this._texutreStartDic = {};\n    }\n    createMap(mapName, viewRect, completeHandler, viewRectPadding = null, gridSize = null, enableLinear = true, limitRange = false) {\n        this._enableLinear = enableLinear;\n        this._limitRange = limitRange;\n        this._rect.x = viewRect.x;\n        this._rect.y = viewRect.y;\n        this._rect.width = viewRect.width;\n        this._rect.height = viewRect.height;\n        this._viewPortWidth = viewRect.width / this._scale;\n        this._viewPortHeight = viewRect.height / this._scale;\n        this._completeHandler = completeHandler;\n        if (viewRectPadding) {\n            this._paddingRect.copyFrom(viewRectPadding);\n        }\n        else {\n            this._paddingRect.setTo(0, 0, 0, 0);\n        }\n        if (gridSize) {\n            this._gridWidth = gridSize.x;\n            this._gridHeight = gridSize.y;\n        }\n        var tIndex = mapName.lastIndexOf(\"/\");\n        if (tIndex > -1) {\n            this._resPath = mapName.substr(0, tIndex);\n            this._pathArray = this._resPath.split(\"/\");\n        }\n        else {\n            this._resPath = \"\";\n            this._pathArray = [];\n        }\n        ILaya.loader.fetch(mapName, \"json\").then(content => this.onJsonComplete(content));\n    }\n    onJsonComplete(tJsonData) {\n        this._mapSprite = new Sprite();\n        ILaya.stage.addChild(this._mapSprite);\n        this._jsonData = tJsonData;\n        this._properties = tJsonData.properties;\n        this._orientation = tJsonData.orientation;\n        this._renderOrder = tJsonData.renderorder;\n        this._mapW = tJsonData.width;\n        this._mapH = tJsonData.height;\n        this._mapTileW = tJsonData.tilewidth;\n        this._mapTileH = tJsonData.tileheight;\n        this._width = this._mapTileW * this._mapW;\n        this._height = this._mapTileH * this._mapH;\n        if (this._orientation == TiledMap.ORIENTATION_STAGGERED) {\n            this._height = (0.5 + this._mapH * 0.5) * this._mapTileH;\n        }\n        this._mapLastRect.top = this._mapLastRect.bottom = this._mapLastRect.left = this._mapLastRect.right = -1;\n        var tArray = tJsonData.tilesets;\n        var tileset;\n        var tTileSet;\n        var i = 0;\n        for (i = 0; i < tArray.length; i++) {\n            tileset = tArray[i];\n            tTileSet = new TileSet();\n            tTileSet.init(tileset);\n            if (tTileSet.properties && tTileSet.properties.ignore)\n                continue;\n            this._tileProperties[i] = tTileSet.tileproperties;\n            this.addTileProperties(tTileSet.tileproperties);\n            this._tileSetArray.push(tTileSet);\n            var tTiles = tileset.tiles;\n            if (tTiles) {\n                for (var p in tTiles) {\n                    var tAnimation = tTiles[p].animation;\n                    if (tAnimation) {\n                        var tAniData = new TileMapAniData();\n                        this._animationDic[p] = tAniData;\n                        tAniData.image = tileset.image;\n                        for (var j = 0; j < tAnimation.length; j++) {\n                            var tAnimationItem = tAnimation[j];\n                            tAniData.mAniIdArray.push(tAnimationItem.tileid);\n                            tAniData.mDurationTimeArray.push(tAnimationItem.duration);\n                        }\n                    }\n                }\n            }\n        }\n        this._tileTexSetArr.push(null);\n        if (this._tileSetArray.length > 0) {\n            tTileSet = this._currTileSet = this._tileSetArray.shift();\n            var tPath = this.mergePath(this._resPath, tTileSet.image);\n            ILaya.loader.load(tPath).then(tex => this.onTextureComplete(tex));\n        }\n    }\n    mergePath(resPath, relativePath) {\n        var tResultPath = \"\";\n        var tImageArray = relativePath.split(\"/\");\n        var tParentPathNum = 0;\n        var i = 0;\n        for (i = tImageArray.length - 1; i >= 0; i--) {\n            if (tImageArray[i] == \"..\") {\n                tParentPathNum++;\n            }\n        }\n        if (tParentPathNum == 0) {\n            if (this._pathArray.length > 0) {\n                tResultPath = resPath + \"/\" + relativePath;\n            }\n            else {\n                tResultPath = relativePath;\n            }\n            return tResultPath;\n        }\n        var tSrcNum = this._pathArray.length - tParentPathNum;\n        if (tSrcNum < 0) {\n            console.log(\"[error]path does not exist\", this._pathArray, tImageArray, resPath, relativePath);\n        }\n        for (i = 0; i < tSrcNum; i++) {\n            if (i == 0) {\n                tResultPath += this._pathArray[i];\n            }\n            else {\n                tResultPath = tResultPath + \"/\" + this._pathArray[i];\n            }\n        }\n        for (i = tParentPathNum; i < tImageArray.length; i++) {\n            tResultPath = tResultPath + \"/\" + tImageArray[i];\n        }\n        return tResultPath;\n    }\n    onTextureComplete(tTexture) {\n        var json = this._jsonData;\n        if (!this._enableLinear)\n            tTexture.bitmap.filterMode = FilterMode.Point;\n        this._texArray.push(tTexture);\n        var tSubTexture = null;\n        var tTileSet = this._currTileSet;\n        var tTileTextureW = tTileSet.tilewidth;\n        var tTileTextureH = tTileSet.tileheight;\n        var tImageWidth = tTileSet.imagewidth;\n        var tImageHeight = tTileSet.imageheight;\n        var tFirstgid = tTileSet.firstgid;\n        var tTileWNum = Math.floor((tImageWidth - tTileSet.margin - tTileTextureW) / (tTileTextureW + tTileSet.spacing)) + 1;\n        var tTileHNum = Math.floor((tImageHeight - tTileSet.margin - tTileTextureH) / (tTileTextureH + tTileSet.spacing)) + 1;\n        var tTileTexSet = null;\n        this._texutreStartDic[tTileSet.image] = this._tileTexSetArr.length;\n        for (var i = 0; i < tTileHNum; i++) {\n            for (var j = 0; j < tTileWNum; j++) {\n                tTileTexSet = new TileTexSet();\n                tTileTexSet.offX = tTileSet.titleoffsetX;\n                tTileTexSet.offY = tTileSet.titleoffsetY - (tTileTextureH - this._mapTileH);\n                tTileTexSet.texture = Texture.createFromTexture(tTexture, tTileSet.margin + (tTileTextureW + tTileSet.spacing) * j, tTileSet.margin + (tTileTextureH + tTileSet.spacing) * i, tTileTextureW, tTileTextureH);\n                if (this.antiCrack)\n                    this.adptTexture(tTileTexSet.texture);\n                this._tileTexSetArr.push(tTileTexSet);\n                tTileTexSet.gid = this._tileTexSetArr.length;\n            }\n        }\n        if (this._tileSetArray.length > 0) {\n            tTileSet = this._currTileSet = this._tileSetArray.shift();\n            var tPath = this.mergePath(this._resPath, tTileSet.image);\n            ILaya.loader.load(tPath).then(tex => this.onTextureComplete(tex));\n        }\n        else {\n            this._currTileSet = null;\n            this.initMap();\n        }\n    }\n    adptTexture(tex) {\n        if (!tex)\n            return;\n        var pX = tex.uv[0];\n        var pX1 = tex.uv[2];\n        var pY = tex.uv[1];\n        var pY1 = tex.uv[7];\n        var dW = 1 / tex.bitmap.width;\n        var dH = 1 / tex.bitmap.height;\n        var Tex = tex;\n        Tex.uv[0] = Tex.uv[6] = pX + dW;\n        Tex.uv[2] = Tex.uv[4] = pX1 - dW;\n        Tex.uv[1] = Tex.uv[3] = pY + dH;\n        Tex.uv[5] = Tex.uv[7] = pY1 - dH;\n    }\n    initMap() {\n        var i, n;\n        for (var p in this._animationDic) {\n            var tAniData = this._animationDic[p];\n            var gStart;\n            gStart = this._texutreStartDic[tAniData.image];\n            var tTileTexSet = this.getTexture(parseInt(p) + gStart);\n            if (tAniData.mAniIdArray.length > 0) {\n                tTileTexSet.textureArray = [];\n                tTileTexSet.durationTimeArray = tAniData.mDurationTimeArray;\n                tTileTexSet.isAnimation = true;\n                tTileTexSet.animationTotalTime = 0;\n                for (i = 0, n = tTileTexSet.durationTimeArray.length; i < n; i++) {\n                    tTileTexSet.animationTotalTime += tTileTexSet.durationTimeArray[i];\n                }\n                for (i = 0, n = tAniData.mAniIdArray.length; i < n; i++) {\n                    var tTexture = this.getTexture(tAniData.mAniIdArray[i] + gStart);\n                    tTileTexSet.textureArray.push(tTexture);\n                }\n            }\n        }\n        this._gridWidth = Math.floor(this._gridWidth / this._mapTileW) * this._mapTileW;\n        this._gridHeight = Math.floor(this._gridHeight / this._mapTileH) * this._mapTileH;\n        if (this._gridWidth < this._mapTileW) {\n            this._gridWidth = this._mapTileW;\n        }\n        if (this._gridHeight < this._mapTileH) {\n            this._gridHeight = this._mapTileH;\n        }\n        this._gridW = Math.ceil(this._width / this._gridWidth);\n        this._gridH = Math.ceil(this._height / this._gridHeight);\n        this._totalGridNum = this._gridW * this._gridH;\n        for (i = 0; i < this._gridH; i++) {\n            var tGridArray = [];\n            this._gridArray.push(tGridArray);\n            for (var j = 0; j < this._gridW; j++) {\n                tGridArray.push(null);\n            }\n        }\n        var tLayerArray = this._jsonData.layers;\n        var isFirst = true;\n        var tTarLayerID = 1;\n        var tLayerTarLayerName;\n        var preLayerTarName;\n        var preLayer;\n        for (var tLayerLoop = 0; tLayerLoop < tLayerArray.length; tLayerLoop++) {\n            var tLayerData = tLayerArray[tLayerLoop];\n            if (tLayerData.visible == true) {\n                var tMapLayer = new MapLayer();\n                tMapLayer.init(tLayerData, this);\n                if (!this.enableMergeLayer) {\n                    this._mapSprite.addChild(tMapLayer);\n                    this._renderLayerArray.push(tMapLayer);\n                }\n                else {\n                    tLayerTarLayerName = tMapLayer.getLayerProperties(\"layer\");\n                    isFirst = isFirst || (!preLayer) || (tLayerTarLayerName != preLayerTarName);\n                    if (isFirst) {\n                        isFirst = false;\n                        tMapLayer.tarLayer = tMapLayer;\n                        preLayer = tMapLayer;\n                        this._mapSprite.addChild(tMapLayer);\n                        this._renderLayerArray.push(tMapLayer);\n                    }\n                    else {\n                        tMapLayer.tarLayer = preLayer;\n                    }\n                    preLayerTarName = tLayerTarLayerName;\n                }\n                this._layerArray.push(tMapLayer);\n            }\n        }\n        if (this.removeCoveredTile) {\n            this.adptTiledMapData();\n        }\n        if (this.cacheAllAfterInit) {\n            this.cacheAllGrid();\n        }\n        this.moveViewPort(this._rect.x, this._rect.y);\n        if (this._completeHandler != null) {\n            this._completeHandler.run();\n        }\n    }\n    addTileProperties(tileDataDic) {\n        var key;\n        for (key in tileDataDic) {\n            this._tileProperties2[key] = tileDataDic[key];\n        }\n    }\n    getTileUserData(id, sign, defaultV = null) {\n        if (!this._tileProperties2 || !this._tileProperties2[id] || !(sign in this._tileProperties2[id]))\n            return defaultV;\n        return this._tileProperties2[id][sign];\n    }\n    adptTiledMapData() {\n        var i, len;\n        len = this._layerArray.length;\n        var tLayer;\n        var noNeeds = {};\n        var tDatas;\n        for (i = len - 1; i >= 0; i--) {\n            tLayer = this._layerArray[i];\n            tDatas = tLayer._mapData;\n            if (!tDatas)\n                continue;\n            this.removeCoverd(tDatas, noNeeds);\n            this.collectCovers(tDatas, noNeeds, i);\n        }\n    }\n    removeCoverd(datas, noNeeds) {\n        var i, len;\n        len = datas.length;\n        for (i = 0; i < len; i++) {\n            if (noNeeds[i]) {\n                datas[i] = 0;\n            }\n        }\n    }\n    collectCovers(datas, noNeeds, layer) {\n        var i, len;\n        len = datas.length;\n        var tTileData;\n        var isCover;\n        for (i = 0; i < len; i++) {\n            tTileData = datas[i];\n            if (tTileData > 0) {\n                isCover = this.getTileUserData(tTileData - 1, \"type\", 0);\n                if (isCover > 0) {\n                    noNeeds[i] = tTileData;\n                }\n            }\n        }\n    }\n    getTexture(index) {\n        if (index < this._tileTexSetArr.length) {\n            return this._tileTexSetArr[index];\n        }\n        return null;\n    }\n    getMapProperties(name) {\n        if (this._properties) {\n            return this._properties[name];\n        }\n        return null;\n    }\n    getTileProperties(index, id, name) {\n        if (this._tileProperties[index] && this._tileProperties[index][id]) {\n            return this._tileProperties[index][id][name];\n        }\n        return null;\n    }\n    getSprite(index, width, height) {\n        if (0 < this._tileTexSetArr.length) {\n            var tGridSprite = new GridSprite();\n            tGridSprite.initData(this, true);\n            tGridSprite.size(width, height);\n            var tTileTexSet = this._tileTexSetArr[index];\n            if (tTileTexSet != null && tTileTexSet.texture != null) {\n                if (tTileTexSet.isAnimation) {\n                    var tAnimationSprite = new TileAniSprite();\n                    this._index++;\n                    tAnimationSprite.setTileTextureSet(this._index.toString(), tTileTexSet);\n                    tGridSprite.addAniSprite(tAnimationSprite);\n                    tGridSprite.addChild(tAnimationSprite);\n                }\n                else {\n                    tGridSprite.graphics.drawImage(tTileTexSet.texture, 0, 0, width, height);\n                }\n                tGridSprite.drawImageNum++;\n            }\n            return tGridSprite;\n        }\n        return null;\n    }\n    setViewPortPivotByScale(scaleX, scaleY) {\n        this._pivotScaleX = scaleX;\n        this._pivotScaleY = scaleY;\n    }\n    set scale(scale) {\n        if (scale <= 0)\n            return;\n        this._scale = scale;\n        this._viewPortWidth = this._rect.width / scale;\n        this._viewPortHeight = this._rect.height / scale;\n        this._mapSprite.scale(this._scale, this._scale);\n        this.updateViewPort();\n    }\n    get scale() {\n        return this._scale;\n    }\n    moveViewPort(moveX, moveY) {\n        this._x = -moveX;\n        this._y = -moveY;\n        this._rect.x = moveX;\n        this._rect.y = moveY;\n        this.updateViewPort();\n    }\n    changeViewPort(moveX, moveY, width, height) {\n        if (moveX == this._rect.x && moveY == this._rect.y && width == this._rect.width && height == this._rect.height)\n            return;\n        this._x = -moveX;\n        this._y = -moveY;\n        this._rect.x = moveX;\n        this._rect.y = moveY;\n        this._rect.width = width;\n        this._rect.height = height;\n        this._viewPortWidth = width / this._scale;\n        this._viewPortHeight = height / this._scale;\n        this.updateViewPort();\n    }\n    changeViewPortBySize(width, height, rect = null) {\n        if (rect == null) {\n            rect = new Rectangle();\n        }\n        this._centerX = this._rect.x + this._rect.width * this._pivotScaleX;\n        this._centerY = this._rect.y + this._rect.height * this._pivotScaleY;\n        rect.x = this._centerX - width * this._pivotScaleX;\n        rect.y = this._centerY - height * this._pivotScaleY;\n        rect.width = width;\n        rect.height = height;\n        this.changeViewPort(rect.x, rect.y, rect.width, rect.height);\n        return rect;\n    }\n    updateViewPort() {\n        this._centerX = this._rect.x + this._rect.width * this._pivotScaleX;\n        this._centerY = this._rect.y + this._rect.height * this._pivotScaleY;\n        var posChanged = false;\n        var preValue = this._viewPortX;\n        this._viewPortX = this._centerX - this._rect.width * this._pivotScaleX / this._scale;\n        if (preValue != this._viewPortX) {\n            posChanged = true;\n        }\n        else {\n            preValue = this._viewPortY;\n        }\n        this._viewPortY = this._centerY - this._rect.height * this._pivotScaleY / this._scale;\n        if (!posChanged && preValue != this._viewPortY) {\n            posChanged = true;\n        }\n        if (this._limitRange) {\n            var tRight = this._viewPortX + this._viewPortWidth;\n            if (tRight > this._width) {\n                this._viewPortX = this._width - this._viewPortWidth;\n            }\n            var tBottom = this._viewPortY + this._viewPortHeight;\n            if (tBottom > this._height) {\n                this._viewPortY = this._height - this._viewPortHeight;\n            }\n            if (this._viewPortX < 0) {\n                this._viewPortX = 0;\n            }\n            if (this._viewPortY < 0) {\n                this._viewPortY = 0;\n            }\n        }\n        var tPaddingRect = this._paddingRect;\n        this._mapRect.top = Math.floor((this._viewPortY - tPaddingRect.y) / this._gridHeight);\n        this._mapRect.bottom = Math.floor((this._viewPortY + this._viewPortHeight + tPaddingRect.height + tPaddingRect.y) / this._gridHeight);\n        this._mapRect.left = Math.floor((this._viewPortX - tPaddingRect.x) / this._gridWidth);\n        this._mapRect.right = Math.floor((this._viewPortX + this._viewPortWidth + tPaddingRect.width + tPaddingRect.x) / this._gridWidth);\n        if (this._mapRect.top != this._mapLastRect.top || this._mapRect.bottom != this._mapLastRect.bottom || this._mapRect.left != this._mapLastRect.left || this._mapRect.right != this._mapLastRect.right) {\n            this.clipViewPort();\n            this._mapLastRect.top = this._mapRect.top;\n            this._mapLastRect.bottom = this._mapRect.bottom;\n            this._mapLastRect.left = this._mapRect.left;\n            this._mapLastRect.right = this._mapRect.right;\n            posChanged = true;\n        }\n        if (!posChanged)\n            return;\n        var tMapLayer;\n        var len = this._renderLayerArray.length;\n        for (var i = 0; i < len; i++) {\n            tMapLayer = this._renderLayerArray[i];\n            if (tMapLayer._gridSpriteArray.length > 0)\n                tMapLayer.updateGridPos();\n        }\n    }\n    clipViewPort() {\n        var tSpriteNum = 0;\n        var tSprite;\n        var tIndex = 0;\n        var tSub = 0;\n        var tAdd = 0;\n        var i, j;\n        if (this._mapRect.left > this._mapLastRect.left) {\n            tSub = this._mapRect.left - this._mapLastRect.left;\n            if (tSub > 0) {\n                for (j = this._mapLastRect.left; j < this._mapLastRect.left + tSub; j++) {\n                    for (i = this._mapLastRect.top; i <= this._mapLastRect.bottom; i++) {\n                        this.hideGrid(j, i);\n                    }\n                }\n            }\n        }\n        else {\n            tAdd = Math.min(this._mapLastRect.left, this._mapRect.right + 1) - this._mapRect.left;\n            if (tAdd > 0) {\n                for (j = this._mapRect.left; j < this._mapRect.left + tAdd; j++) {\n                    for (i = this._mapRect.top; i <= this._mapRect.bottom; i++) {\n                        this.showGrid(j, i);\n                    }\n                }\n            }\n        }\n        if (this._mapRect.right > this._mapLastRect.right) {\n            tAdd = this._mapRect.right - this._mapLastRect.right;\n            if (tAdd > 0) {\n                for (j = Math.max(this._mapLastRect.right + 1, this._mapRect.left); j <= this._mapLastRect.right + tAdd; j++) {\n                    for (i = this._mapRect.top; i <= this._mapRect.bottom; i++) {\n                        this.showGrid(j, i);\n                    }\n                }\n            }\n        }\n        else {\n            tSub = this._mapLastRect.right - this._mapRect.right;\n            if (tSub > 0) {\n                for (j = this._mapRect.right + 1; j <= this._mapRect.right + tSub; j++) {\n                    for (i = this._mapLastRect.top; i <= this._mapLastRect.bottom; i++) {\n                        this.hideGrid(j, i);\n                    }\n                }\n            }\n        }\n        if (this._mapRect.top > this._mapLastRect.top) {\n            tSub = this._mapRect.top - this._mapLastRect.top;\n            if (tSub > 0) {\n                for (i = this._mapLastRect.top; i < this._mapLastRect.top + tSub; i++) {\n                    for (j = this._mapLastRect.left; j <= this._mapLastRect.right; j++) {\n                        this.hideGrid(j, i);\n                    }\n                }\n            }\n        }\n        else {\n            tAdd = Math.min(this._mapLastRect.top, this._mapRect.bottom + 1) - this._mapRect.top;\n            if (tAdd > 0) {\n                for (i = this._mapRect.top; i < this._mapRect.top + tAdd; i++) {\n                    for (j = this._mapRect.left; j <= this._mapRect.right; j++) {\n                        this.showGrid(j, i);\n                    }\n                }\n            }\n        }\n        if (this._mapRect.bottom > this._mapLastRect.bottom) {\n            tAdd = this._mapRect.bottom - this._mapLastRect.bottom;\n            if (tAdd > 0) {\n                for (i = Math.max(this._mapLastRect.bottom + 1, this._mapRect.top); i <= this._mapLastRect.bottom + tAdd; i++) {\n                    for (j = this._mapRect.left; j <= this._mapRect.right; j++) {\n                        this.showGrid(j, i);\n                    }\n                }\n            }\n        }\n        else {\n            tSub = this._mapLastRect.bottom - this._mapRect.bottom;\n            if (tSub > 0) {\n                for (i = this._mapRect.bottom + 1; i <= this._mapRect.bottom + tSub; i++) {\n                    for (j = this._mapLastRect.left; j <= this._mapLastRect.right; j++) {\n                        this.hideGrid(j, i);\n                    }\n                }\n            }\n        }\n    }\n    showGrid(gridX, gridY) {\n        if (gridX < 0 || gridX >= this._gridW || gridY < 0 || gridY >= this._gridH) {\n            return;\n        }\n        var i, j;\n        var tGridSprite;\n        var tTempArray = this._gridArray[gridY][gridX];\n        if (tTempArray == null) {\n            tTempArray = this.getGridArray(gridX, gridY);\n        }\n        else {\n            for (i = 0; i < tTempArray.length && i < this._layerArray.length; i++) {\n                var tLayerSprite = this._layerArray[i];\n                if (tLayerSprite && tTempArray[i]) {\n                    tGridSprite = tTempArray[i];\n                    if (tGridSprite.visible == false && tGridSprite.drawImageNum > 0) {\n                        tGridSprite.show();\n                    }\n                }\n            }\n        }\n    }\n    cacheAllGrid() {\n        var i, j;\n        var tempArr;\n        for (i = 0; i < this._gridW; i++) {\n            for (j = 0; j < this._gridH; j++) {\n                tempArr = this.getGridArray(i, j);\n                this.cacheGridsArray(tempArr);\n            }\n        }\n    }\n    cacheGridsArray(arr) {\n        var canvas;\n        if (!TiledMap._tempCanvas) {\n            TiledMap._tempCanvas = new HTMLCanvas();\n            var tx = TiledMap._tempCanvas.context;\n            if (!tx) {\n                tx = TiledMap._tempCanvas.getContext('2d');\n            }\n        }\n        canvas = TiledMap._tempCanvas;\n        canvas.context.asBitmap = false;\n        var i, len;\n        len = arr.length;\n        var tGrid;\n        for (i = 0; i < len; i++) {\n            tGrid = arr[i];\n            canvas.clear();\n            canvas.size(1, 1);\n            tGrid.render(canvas.context, 0, 0);\n            tGrid.hide();\n        }\n        canvas.clear();\n        canvas.size(1, 1);\n    }\n    getGridArray(gridX, gridY) {\n        var i, j;\n        var tGridSprite;\n        var tTempArray = this._gridArray[gridY][gridX];\n        if (tTempArray == null) {\n            tTempArray = this._gridArray[gridY][gridX] = [];\n            var tLeft = 0;\n            var tRight = 0;\n            var tTop = 0;\n            var tBottom = 0;\n            var tGridWidth = this._gridWidth;\n            var tGridHeight = this._gridHeight;\n            switch (this.orientation) {\n                case TiledMap.ORIENTATION_ISOMETRIC:\n                    tLeft = Math.floor(gridX * tGridWidth);\n                    tRight = Math.floor(gridX * tGridWidth + tGridWidth);\n                    tTop = Math.floor(gridY * tGridHeight);\n                    tBottom = Math.floor(gridY * tGridHeight + tGridHeight);\n                    var tLeft1, tRight1, tTop1, tBottom1;\n                    break;\n                case TiledMap.ORIENTATION_STAGGERED:\n                    tLeft = Math.floor(gridX * tGridWidth / this._mapTileW);\n                    tRight = Math.floor((gridX * tGridWidth + tGridWidth) / this._mapTileW);\n                    tTop = Math.floor(gridY * tGridHeight / (this._mapTileH / 2));\n                    tBottom = Math.floor((gridY * tGridHeight + tGridHeight) / (this._mapTileH / 2));\n                    break;\n                case TiledMap.ORIENTATION_ORTHOGONAL:\n                    tLeft = Math.floor(gridX * tGridWidth / this._mapTileW);\n                    tRight = Math.floor((gridX * tGridWidth + tGridWidth) / this._mapTileW);\n                    tTop = Math.floor(gridY * tGridHeight / this._mapTileH);\n                    tBottom = Math.floor((gridY * tGridHeight + tGridHeight) / this._mapTileH);\n                    break;\n                case TiledMap.ORIENTATION_HEXAGONAL:\n                    var tHeight = this._mapTileH * 2 / 3;\n                    tLeft = Math.floor(gridX * tGridWidth / this._mapTileW);\n                    tRight = Math.ceil((gridX * tGridWidth + tGridWidth) / this._mapTileW);\n                    tTop = Math.floor(gridY * tGridHeight / tHeight);\n                    tBottom = Math.ceil((gridY * tGridHeight + tGridHeight) / tHeight);\n                    break;\n            }\n            var tLayer = null;\n            var tTGridSprite;\n            var tDrawMapLayer;\n            for (var z = 0; z < this._layerArray.length; z++) {\n                tLayer = this._layerArray[z];\n                if (this.enableMergeLayer) {\n                    if (tLayer.tarLayer != tDrawMapLayer) {\n                        tTGridSprite = null;\n                        tDrawMapLayer = tLayer.tarLayer;\n                    }\n                    if (!tTGridSprite) {\n                        tTGridSprite = tDrawMapLayer.getDrawSprite(gridX, gridY);\n                        tTempArray.push(tTGridSprite);\n                    }\n                    tGridSprite = tTGridSprite;\n                }\n                else {\n                    tGridSprite = tLayer.getDrawSprite(gridX, gridY);\n                    tTempArray.push(tGridSprite);\n                }\n                var tColorStr;\n                if (this._showGridKey) {\n                    tColorStr = \"#\";\n                    tColorStr += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];\n                    tColorStr += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];\n                    tColorStr += this._colorArray[Math.floor(Math.random() * this._colorArray.length)];\n                }\n                switch (this.orientation) {\n                    case TiledMap.ORIENTATION_ISOMETRIC:\n                        var tHalfTileHeight = this.tileHeight / 2;\n                        var tHalfTileWidth = this.tileWidth / 2;\n                        var tHalfMapWidth = this._width / 2;\n                        tTop1 = Math.floor(tTop / tHalfTileHeight);\n                        tBottom1 = Math.floor(tBottom / tHalfTileHeight);\n                        tLeft1 = this._mapW + Math.floor((tLeft - tHalfMapWidth) / tHalfTileWidth);\n                        tRight1 = this._mapW + Math.floor((tRight - tHalfMapWidth) / tHalfTileWidth);\n                        var tMapW = this._mapW * 2;\n                        var tMapH = this._mapH * 2;\n                        if (tTop1 < 0) {\n                            tTop1 = 0;\n                        }\n                        if (tTop1 >= tMapH) {\n                            tTop1 = tMapH - 1;\n                        }\n                        if (tBottom1 < 0) {\n                            tBottom = 0;\n                        }\n                        if (tBottom1 >= tMapH) {\n                            tBottom1 = tMapH - 1;\n                        }\n                        tGridSprite.zOrder = this._totalGridNum * z + gridY * this._gridW + gridX;\n                        for (i = tTop1; i < tBottom1; i++) {\n                            for (j = 0; j <= i; j++) {\n                                var tIndexX = i - j;\n                                var tIndexY = j;\n                                var tIndexValue = (tIndexX - tIndexY) + this._mapW;\n                                if (tIndexValue > tLeft1 && tIndexValue <= tRight1) {\n                                    if (tLayer.drawTileTexture(tGridSprite, tIndexX, tIndexY)) {\n                                        tGridSprite.drawImageNum++;\n                                    }\n                                }\n                            }\n                        }\n                        break;\n                    case TiledMap.ORIENTATION_STAGGERED:\n                        tGridSprite.zOrder = z * this._totalGridNum + gridY * this._gridW + gridX;\n                        for (i = tTop; i < tBottom; i++) {\n                            for (j = tLeft; j < tRight; j++) {\n                                if (tLayer.drawTileTexture(tGridSprite, j, i)) {\n                                    tGridSprite.drawImageNum++;\n                                }\n                            }\n                        }\n                        break;\n                    case TiledMap.ORIENTATION_ORTHOGONAL:\n                    case TiledMap.ORIENTATION_HEXAGONAL:\n                        switch (this._renderOrder) {\n                            case TiledMap.RENDERORDER_RIGHTDOWN:\n                                tGridSprite.zOrder = z * this._totalGridNum + gridY * this._gridW + gridX;\n                                for (i = tTop; i < tBottom; i++) {\n                                    for (j = tLeft; j < tRight; j++) {\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\n                                            tGridSprite.drawImageNum++;\n                                        }\n                                    }\n                                }\n                                break;\n                            case TiledMap.RENDERORDER_RIGHTUP:\n                                tGridSprite.zOrder = z * this._totalGridNum + (this._gridH - 1 - gridY) * this._gridW + gridX;\n                                for (i = tBottom - 1; i >= tTop; i--) {\n                                    for (j = tLeft; j < tRight; j++) {\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\n                                            tGridSprite.drawImageNum++;\n                                        }\n                                    }\n                                }\n                                break;\n                            case TiledMap.RENDERORDER_LEFTDOWN:\n                                tGridSprite.zOrder = z * this._totalGridNum + gridY * this._gridW + (this._gridW - 1 - gridX);\n                                for (i = tTop; i < tBottom; i++) {\n                                    for (j = tRight - 1; j >= tLeft; j--) {\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\n                                            tGridSprite.drawImageNum++;\n                                        }\n                                    }\n                                }\n                                break;\n                            case TiledMap.RENDERORDER_LEFTUP:\n                                tGridSprite.zOrder = z * this._totalGridNum + (this._gridH - 1 - gridY) * this._gridW + (this._gridW - 1 - gridX);\n                                for (i = tBottom - 1; i >= tTop; i--) {\n                                    for (j = tRight - 1; j >= tLeft; j--) {\n                                        if (tLayer.drawTileTexture(tGridSprite, j, i)) {\n                                            tGridSprite.drawImageNum++;\n                                        }\n                                    }\n                                }\n                                break;\n                        }\n                        break;\n                }\n                if (!tGridSprite.isHaveAnimation) {\n                    tGridSprite.autoSize = true;\n                    if (this.autoCache)\n                        tGridSprite.cacheAs = this.autoCacheType;\n                    tGridSprite.autoSize = false;\n                }\n                if (!this.enableMergeLayer) {\n                    if (tGridSprite.drawImageNum > 0) {\n                        tLayer.addChild(tGridSprite);\n                    }\n                    if (this._showGridKey) {\n                        tGridSprite.graphics.drawRect(0, 0, tGridWidth, tGridHeight, null, tColorStr);\n                    }\n                }\n                else {\n                    if (tTGridSprite && tTGridSprite.drawImageNum > 0 && tDrawMapLayer) {\n                        tDrawMapLayer.addChild(tTGridSprite);\n                    }\n                }\n            }\n            if (this.enableMergeLayer && this.showGridTextureCount) {\n                if (tTGridSprite) {\n                    tTGridSprite.graphics.fillText(tTGridSprite.drawImageNum + \"\", 20, 20, null, \"#ff0000\", \"left\");\n                }\n            }\n        }\n        return tTempArray;\n    }\n    hideGrid(gridX, gridY) {\n        if (gridX < 0 || gridX >= this._gridW || gridY < 0 || gridY >= this._gridH) {\n            return;\n        }\n        var tTempArray = this._gridArray[gridY][gridX];\n        if (tTempArray) {\n            var tGridSprite;\n            for (var i = 0; i < tTempArray.length; i++) {\n                tGridSprite = tTempArray[i];\n                if (tGridSprite.drawImageNum > 0) {\n                    if (tGridSprite != null) {\n                        tGridSprite.hide();\n                    }\n                }\n            }\n        }\n    }\n    getLayerObject(layerName, objectName) {\n        var tLayer = null;\n        for (var i = 0; i < this._layerArray.length; i++) {\n            tLayer = this._layerArray[i];\n            if (tLayer.layerName == layerName) {\n                break;\n            }\n        }\n        if (tLayer) {\n            return tLayer.getObjectByName(objectName);\n        }\n        return null;\n    }\n    destroy() {\n        this._orientation = TiledMap.ORIENTATION_ORTHOGONAL;\n        this._jsonData = null;\n        var i = 0;\n        var j = 0;\n        var z = 0;\n        this._gridArray = [];\n        var tTileTexSet;\n        for (i = 0; i < this._tileTexSetArr.length; i++) {\n            tTileTexSet = this._tileTexSetArr[i];\n            if (tTileTexSet) {\n                tTileTexSet.clearAll();\n            }\n        }\n        this._tileTexSetArr = [];\n        var tTexture;\n        for (i = 0; i < this._texArray.length; i++) {\n            tTexture = this._texArray[i];\n            tTexture.destroy();\n        }\n        this._texArray = [];\n        this._width = 0;\n        this._height = 0;\n        this._mapW = 0;\n        this._mapH = 0;\n        this._mapTileW = 0;\n        this._mapTileH = 0;\n        this._rect.setTo(0, 0, 0, 0);\n        var tLayer;\n        for (i = 0; i < this._layerArray.length; i++) {\n            tLayer = this._layerArray[i];\n            tLayer.clearAll();\n        }\n        this._layerArray = [];\n        this._renderLayerArray = [];\n        if (this._mapSprite) {\n            this._mapSprite.destroy();\n            this._mapSprite = null;\n        }\n        var tDic = this._animationDic;\n        for (var p in tDic) {\n            delete tDic[p];\n        }\n        this._properties = null;\n        tDic = this._tileProperties;\n        for (p in tDic) {\n            delete tDic[p];\n        }\n        this._currTileSet = null;\n        this._completeHandler = null;\n        this._mapRect.clearAll();\n        this._mapLastRect.clearAll();\n        this._tileSetArray = [];\n        this._gridWidth = 450;\n        this._gridHeight = 450;\n        this._gridW = 0;\n        this._gridH = 0;\n        this._x = 0;\n        this._y = 0;\n        this._index = 0;\n        this._enableLinear = true;\n        this._resPath = null;\n        this._pathArray = null;\n    }\n    get tileWidth() {\n        return this._mapTileW;\n    }\n    get tileHeight() {\n        return this._mapTileH;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get numColumnsTile() {\n        return this._mapW;\n    }\n    get numRowsTile() {\n        return this._mapH;\n    }\n    get viewPortX() {\n        return -this._viewPortX;\n    }\n    get viewPortY() {\n        return -this._viewPortY;\n    }\n    get viewPortWidth() {\n        return this._viewPortWidth;\n    }\n    get viewPortHeight() {\n        return this._viewPortHeight;\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    get gridWidth() {\n        return this._gridWidth;\n    }\n    get gridHeight() {\n        return this._gridHeight;\n    }\n    get numColumnsGrid() {\n        return this._gridW;\n    }\n    get numRowsGrid() {\n        return this._gridH;\n    }\n    get orientation() {\n        return this._orientation;\n    }\n    get renderOrder() {\n        return this._renderOrder;\n    }\n    mapSprite() {\n        return this._mapSprite;\n    }\n    getLayerByName(layerName) {\n        var tMapLayer;\n        for (var i = 0; i < this._layerArray.length; i++) {\n            tMapLayer = this._layerArray[i];\n            if (layerName == tMapLayer.layerName) {\n                return tMapLayer;\n            }\n        }\n        return null;\n    }\n    getLayerByIndex(index) {\n        if (index < this._layerArray.length) {\n            return this._layerArray[index];\n        }\n        return null;\n    }\n}\nTiledMap.ORIENTATION_ORTHOGONAL = \"orthogonal\";\nTiledMap.ORIENTATION_ISOMETRIC = \"isometric\";\nTiledMap.ORIENTATION_STAGGERED = \"staggered\";\nTiledMap.ORIENTATION_HEXAGONAL = \"hexagonal\";\nTiledMap.RENDERORDER_RIGHTDOWN = \"right-down\";\nTiledMap.RENDERORDER_RIGHTUP = \"right-up\";\nTiledMap.RENDERORDER_LEFTDOWN = \"left-down\";\nTiledMap.RENDERORDER_LEFTUP = \"left-up\";\nclass GRect {\n    clearAll() {\n        this.left = this.top = this.right = this.bottom = 0;\n    }\n}\nclass TileMapAniData {\n    constructor() {\n        this.mAniIdArray = [];\n        this.mDurationTimeArray = [];\n        this.mTileTexSetArr = [];\n    }\n}\nclass TileSet {\n    constructor() {\n        this.firstgid = 0;\n        this.image = \"\";\n        this.imageheight = 0;\n        this.imagewidth = 0;\n        this.margin = 0;\n        this.name = 0;\n        this.spacing = 0;\n        this.tileheight = 0;\n        this.tilewidth = 0;\n        this.titleoffsetX = 0;\n        this.titleoffsetY = 0;\n    }\n    init(data) {\n        this.firstgid = data.firstgid;\n        this.image = data.image;\n        this.imageheight = data.imageheight;\n        this.imagewidth = data.imagewidth;\n        this.margin = data.margin;\n        this.name = data.name;\n        this.properties = data.properties;\n        this.spacing = data.spacing;\n        this.tileheight = data.tileheight;\n        this.tilewidth = data.tilewidth;\n        this.tileproperties = data.tileproperties;\n        var tTileoffset = data.tileoffset;\n        if (tTileoffset) {\n            this.titleoffsetX = tTileoffset.x;\n            this.titleoffsetY = tTileoffset.y;\n        }\n    }\n}\nIMap.TiledMap = TiledMap;\n"],"names":["Sprite","Point","ILaya","Browser","Rectangle","FilterMode","Texture","HTMLCanvas"],"mappings":";;;IACO,MAAM,UAAU,SAASA,WAAM,CAAC;IACvC,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IACnC,QAAQ,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACrC,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,KAAK;IACL,IAAI,QAAQ,CAAC,GAAG,EAAE,SAAS,GAAG,KAAK,EAAE;IACrC,QAAQ,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IACxB,QAAQ,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;IACvC,KAAK;IACL,IAAI,YAAY,CAAC,MAAM,EAAE;IACzB,QAAQ,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;IACzC,YAAY,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IACrC,SAAS;IACT,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,KAAK;IACL,IAAI,IAAI,GAAG;IACX,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;IAC3B,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAChC,YAAY,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;IAC7C,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,IAAI,UAAU,CAAC;IAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,gBAAgB,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpD,gBAAgB,UAAU,CAAC,IAAI,EAAE,CAAC;IAClC,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,IAAI,GAAG;IACX,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;IAC1B,YAAY,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACjC,YAAY,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;IAC7C,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,IAAI,UAAU,CAAC;IAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,gBAAgB,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpD,gBAAgB,UAAU,CAAC,IAAI,EAAE,CAAC;IAClC,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,SAAS,GAAG;IAChB,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;IAChC,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE;IAC3B,gBAAgB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAC/D,gBAAgB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAC/D,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;IACnH,gBAAgB,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5B,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5B,aAAa;IACb,SAAS;IACT,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE;IAC3B,gBAAgB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAC/D,gBAAgB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAC/D,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;IACvB,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAC7B,QAAQ,IAAI,UAAU,CAAC;IACvB,QAAQ,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;IACzC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,gBAAgB,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpD,gBAAgB,UAAU,CAAC,QAAQ,EAAE,CAAC;IACtC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;IACvB,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACrC,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IACnC,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC9B,KAAK;IACL;;ICtFO,MAAM,IAAI,CAAC;IAClB,CAAC;IACD,IAAI,CAAC,QAAQ,GAAG,IAAI;;ICDb,MAAM,aAAa,SAASA,WAAM,CAAC;IAC1C,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IACpC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL,IAAI,iBAAiB,CAAC,OAAO,EAAE,cAAc,EAAE;IAC/C,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAChC,QAAQ,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;IAC9C,QAAQ,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACzD,KAAK;IACL,IAAI,IAAI,GAAG;IACX,QAAQ,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC/D,KAAK;IACL,IAAI,IAAI,GAAG;IACX,QAAQ,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5D,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5D,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;IACvB,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IACpC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL;;ICnBO,MAAM,QAAQ,SAASA,WAAM,CAAC;IACrC,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;IACjC,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC/B,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IACnC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAIC,UAAK,EAAE,CAAC;IACvC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC9B,KAAK;IACL,IAAI,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;IACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IACxB,QAAQ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;IACvC,QAAsB,SAAS,CAAC,OAAO;IACvC,QAAqB,SAAS,CAAC,MAAM;IACrC,QAAQ,IAAI,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC;IACnC,QAAQ,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC;IACpC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;IACxC,QAAQ,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,UAAU,CAAC;IAChD,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC;IACvC,QAAQ,IAAI,CAAC,cAAc,GAAG,MAAM,GAAG,CAAC,CAAC;IACzC,QAAQ,IAAI,CAAC,eAAe,GAAG,MAAM,GAAG,CAAC,CAAC;IAC1C,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;IACvE,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACnD,QAAQ,QAAQ,SAAS,CAAC,IAAI;IAC9B,YAAY,KAAK,WAAW;IAC5B,gBAAgB,MAAM;IACtB,YAAY,KAAK,aAAa;IAE9B,gBAAgB,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC;IAC/C,gBAAgB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;IACvC,oBAAoB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtC,oBAAoB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvC,iBAAiB;IACjB,gBAAgB,IAAI,WAAW,CAAC;IAChC,gBAAgB,IAAI,SAAS,CAAC;IAC9B,gBAAgB,IAAI,UAAU,CAAC;IAC/B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxD,oBAAoB,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,oBAAoB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;IAClE,oBAAoB,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,EAAE;IACrD,wBAAwB,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC;IACtD,wBAAwB,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC;IACxD,wBAAwB,IAAI,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IAC5F,wBAAwB,IAAI,OAAO,IAAI,IAAI,EAAE;IAC7C,4BAA4B,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW;IACzD,gCAAgC,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACxE,oCAAoC,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC,GAAG,MAAM,EAAE,WAAW,CAAC,CAAC,GAAG,MAAM,EAAEA,UAAK,CAAC,IAAI,CAAC,CAAC;IAChI,oCAAoC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;IACjF,oCAAoC,OAAO,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;IAC5E,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAGA,UAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IACvG,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAGA,UAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC;IACxH,oCAAoC,MAAM;IAC1C,gCAAgC,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACxE,oCAAoC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;IACjF,oCAAoC,OAAO,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;IAC5E,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;IAClG,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;IACnG,oCAAoC,MAAM;IAC1C,gCAAgC,KAAK,IAAI,CAAC,QAAQ,CAAC,sBAAsB;IACzE,oCAAoC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;IACjF,oCAAoC,OAAO,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;IAC5E,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;IAClG,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;IACnG,oCAAoC,MAAM;IAC1C,gCAAgC,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACxE,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC;IAClF,oCAAoC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC;IAClF,oCAAoC,MAAM;IAC1C,6BAA6B;IAC7B,4BAA4B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACnD,4BAA4B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChE,4BAA4B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IACrE,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,MAAM;IACtB,SAAS;IACT,KAAK;IACL,IAAI,eAAe,CAAC,OAAO,EAAE;IAC7B,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;IAC1B,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzC,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,mBAAmB,CAAC,OAAO,EAAE;IACjC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;IAC3B,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC1C,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,kBAAkB,CAAC,IAAI,EAAE;IAC7B,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;IAC9B,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1C,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE;IAC9B,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;IAC3G,YAAY,IAAI,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAClE,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACzC,YAAY,IAAI,QAAQ,IAAI,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE;IAC9D,gBAAgB,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;IACxC,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK;IACL,IAAI,0BAA0B,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,GAAG,IAAI,EAAE;IAC/D,QAAQ,IAAI,SAAS,EAAE;IACvB,YAAY,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW;IACzC,gBAAgB,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACxD,oBAAoB,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC;IAC9F,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC;IACzE,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACxD,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9C,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9C,oBAAoB,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC;IAClG,oBAAoB,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;IAC/D,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,IAAI,CAAC,QAAQ,CAAC,sBAAsB;IACzD,oBAAoB,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC9D,oBAAoB,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAC/D,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACxD,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9C,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9C,oBAAoB,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;IACnE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IACxH,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAC/E,oBAAoB,MAAM;IAC1B,aAAa;IACb,YAAY,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAChF,YAAY,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAChF,SAAS;IACT,KAAK;IACL,IAAI,sBAAsB,CAAC,OAAO,EAAE,OAAO,EAAE;IAC7C,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;IACjF,YAAY,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACrG,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;IACL,IAAI,0BAA0B,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,GAAG,IAAI,EAAE;IAChE,QAAQ,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAClE,QAAQ,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAClE,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IACzC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAC1C,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC;IACnB,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC;IACnB,QAAQ,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW;IACrC,YAAY,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACpD,gBAAgB,IAAI,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC1D,gBAAgB,IAAI,KAAK,GAAG,OAAO,CAAC;IACpC,gBAAgB,EAAE,GAAG,EAAE,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC,CAAC;IACxD,gBAAgB,EAAE,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;IACrD,gBAAgB,IAAI,MAAM,EAAE;IAC5B,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAClC,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAClC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC;IAE5B,YAAY,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACpD,gBAAgB,IAAI,MAAM,EAAE;IAC5B,oBAAoB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvC,oBAAoB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;IAC5E,oBAAoB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;IAC5E,oBAAoB,EAAE,GAAG,CAAC,OAAO,GAAG,EAAE,IAAI,MAAM,GAAG,CAAC,CAAC;IACrD,oBAAoB,EAAE,GAAG,CAAC,OAAO,GAAG,EAAE,IAAI,MAAM,GAAG,CAAC,CAAC;IACrD,oBAAoB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,GAAG,MAAM,GAAG,CAAC,EAAE;IAC5E,wBAAwB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;IAC1D,wBAAwB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC9D,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC;IACvD,wBAAwB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC9D,wBAAwB,OAAO,GAAG,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC;IACvD,wBAAwB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClE,qBAAqB;IACrB,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7C,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAClC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC;IAE5B,YAAY,KAAK,IAAI,CAAC,QAAQ,CAAC,sBAAsB;IACrD,gBAAgB,EAAE,GAAG,OAAO,GAAG,MAAM,CAAC;IACtC,gBAAgB,EAAE,GAAG,OAAO,GAAG,MAAM,CAAC;IACtC,gBAAgB,IAAI,MAAM,EAAE;IAC5B,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAClC,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAClC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC;IAE5B,YAAY,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACpD,gBAAgB,IAAI,WAAW,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IACjD,gBAAgB,EAAE,GAAG,OAAO,GAAG,WAAW,CAAC;IAC3C,gBAAgB,EAAE,GAAG,CAAC,OAAO,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,IAAI,MAAM,CAAC;IACvE,gBAAgB,IAAI,MAAM,EAAE;IAC5B,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAClC,oBAAoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAClC,iBAAiB;IACjB,gBAAgB,MAAM;IACtB,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;IACL,IAAI,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;IAChC,QAAQ,IAAI,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;IACvC,QAAQ,OAAO,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IACxD,QAAQ,OAAO,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IACzD,QAAQ,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5C,QAAQ,OAAO,OAAO,CAAC;IACvB,KAAK;IACL,IAAI,aAAa,GAAG;IACpB,QAAQ,IAAI,OAAO,CAAC;IACpB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/D,YAAY,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC/C,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,KAAK,OAAO,CAAC,YAAY,GAAG,CAAC,EAAE;IACxF,gBAAgB,OAAO,CAAC,SAAS,EAAE,CAAC;IACpC,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,eAAe,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE;IAC9C,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;IAC3G,YAAY,IAAI,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAClE,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACzC,YAAY,IAAI,QAAQ,IAAI,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE;IAC9D,gBAAgB,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;IAC3C,oBAAoB,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7E,oBAAoB,IAAI,WAAW,EAAE;IACrC,wBAAwB,IAAI,EAAE,GAAG,CAAC,CAAC;IACnC,wBAAwB,IAAI,EAAE,GAAG,CAAC,CAAC;IACnC,wBAAuC,WAAW,CAAC,QAAQ;IAC3D,wBAAwB,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW;IACrD,4BAA4B,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACpE,gCAAgC,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC;IAC3H,gCAAgC,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IACzF,gCAAgC,MAAM;IACtC,4BAA4B,KAAK,IAAI,CAAC,QAAQ,CAAC,sBAAsB;IACrE,gCAAgC,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IACvF,gCAAgC,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IACzF,gCAAgC,MAAM;IACtC,4BAA4B,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACpE,gCAAgC,EAAE,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IACxH,gCAAgC,EAAE,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IACrG,gCAAgC,MAAM;IACtC,4BAA4B,KAAK,IAAI,CAAC,QAAQ,CAAC,qBAAqB;IACpE,gCAAgC,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/E,gCAAgC,EAAE,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3H,gCAAgC,EAAE,GAAG,CAAC,KAAK,GAAG,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IAClF,gCAAgC,MAAM;IACtC,yBAAyB;IACzB,wBAAwB,IAAI,WAAW,CAAC,WAAW,EAAE;IACrD,4BAA4B,IAAI,gBAAgB,GAAG,IAAI,aAAa,EAAE,CAAC;IACvE,4BAA4B,gBAAgB,CAAC,CAAC,GAAG,EAAE,CAAC;IACpD,4BAA4B,gBAAgB,CAAC,CAAC,GAAG,EAAE,CAAC;IACpD,4BAA4B,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC;IAC/F,4BAA4B,UAAU,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IACtE,4BAA4B,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAClE,4BAA4B,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9D,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,GAAG,WAAW,CAAC,IAAI,EAAE,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7H,yBAAyB;IACzB,wBAAwB,OAAO,IAAI,CAAC;IACpC,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;IACjC,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC/B,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAClB,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;IAC1B,YAAY,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IACxC,gBAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvC,aAAa;IACb,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAChC,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;IAC3B,YAAY,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;IACrC,gBAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACjC,SAAS;IACT,QAAQ,IAAI,WAAW,CAAC;IACxB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3D,YAAY,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACnD,YAAY,WAAW,CAAC,QAAQ,EAAE,CAAC;IACnC,SAAS;IACT,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAChC,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAChC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL;;ICpTO,MAAM,UAAU,CAAC;IACxB,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACjC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IACtC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;IACpC,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IACjC,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC/B,KAAK;IACL,IAAI,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE;IAClC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,EAAE;IAC1C,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;IAClC,YAAY,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IAC9B,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;IAClC,YAAYC,UAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACzD,YAAY,IAAI,CAAC,aAAa,GAAGC,YAAO,CAAC,GAAG,EAAE,CAAC;IAC/C,YAAY,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACjC,YAAY,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC3B,YAAY,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC/B,SAAS;IACT,QAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;IAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;IACvC,QAAQ,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;IAC9E,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtE,YAAY,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;IACtD,SAAS;IACT,KAAK;IACL,IAAI,OAAO,GAAG;IACd,QAAQ,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;IAC9H,YAAY,IAAI,IAAI,GAAGA,YAAO,CAAC,GAAG,EAAE,CAAC;IACrC,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;IACvD,YAAY,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,EAAE;IAC1D,gBAAgB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC;IAC1E,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC;IACzC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjE,YAAY,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE;IACvC,gBAAgB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;IACpC,gBAAgB,IAAI,CAAC,WAAW,EAAE,CAAC;IACnC,gBAAgB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;IACvH,oBAAoB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzC,iBAAiB;IACjB,gBAAgB,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1E,gBAAgB,IAAI,OAAO,CAAC;IAC5B,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,oBAAoB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IAC/D,iBAAiB;IACjB,gBAAgB,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjE,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,WAAW,CAAC,MAAM,EAAE,WAAW,EAAE;IACrC,QAAQ,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3F,KAAK;IACL,IAAI,eAAe,CAAC,KAAK,EAAE;IAC3B,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IACjD,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvC,YAAY,IAAI,CAAC,UAAU,EAAE,CAAC;IAC9B,YAAY,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;IACtC,gBAAgBD,UAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,aAAa,GAAG;IACpB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;IACjC,YAAY,KAAK,GAAG,sBAAsB,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACxG,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtB,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;IAC1B,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACnC,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAChC,SAAS;IACT,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACjC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IACtC,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IACjC,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IAC7B,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,KAAK;IACL;;IC5FO,MAAM,QAAQ,CAAC;IACtB,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IACjC,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAC5B,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACpB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACpB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAIE,cAAS,EAAE,CAAC;IACrC,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAIA,cAAS,EAAE,CAAC;IAC5C,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC9B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IACpC,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAClC,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC/B,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IAC9B,QAAQ,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAC/B,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAChC,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACjC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACrC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;IACpC,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAE,CAAC;IACxC,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAChC,QAAQ,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAClC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IACnC,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACzC,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACzC,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpD,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;IAChC,QAAQ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;IAChC,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC1B,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC1B,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;IACjC,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAClC,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IACjC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IACtC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IACtC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACvC,QAAQ,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IAC1C,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACvC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IACnC,KAAK;IACL,IAAI,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,eAAe,GAAG,IAAI,EAAE,QAAQ,GAAG,IAAI,EAAE,YAAY,GAAG,IAAI,EAAE,UAAU,GAAG,KAAK,EAAE;IACpI,QAAQ,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IAC1C,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IACtC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;IAClC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;IAClC,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;IAC1C,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC5C,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3D,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC7D,QAAQ,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;IAChD,QAAQ,IAAI,eAAe,EAAE;IAC7B,YAAY,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;IACxD,SAAS;IACT,aAAa;IACb,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,SAAS;IACT,QAAQ,IAAI,QAAQ,EAAE;IACtB,YAAY,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC;IACzC,YAAY,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC;IAC1C,SAAS;IACT,QAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC9C,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE;IACzB,YAAY,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACtD,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvD,SAAS;IACT,aAAa;IACb,YAAY,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC/B,YAAY,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACjC,SAAS;IACT,QAAQF,UAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1F,KAAK;IACL,IAAI,cAAc,CAAC,SAAS,EAAE;IAC9B,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAIF,WAAM,EAAE,CAAC;IACvC,QAAQE,UAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9C,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,QAAQ,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,UAAU,CAAC;IAChD,QAAQ,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,WAAW,CAAC;IAClD,QAAQ,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,WAAW,CAAC;IAClD,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IACrC,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC;IACtC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;IAC7C,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC;IAC9C,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;IAClD,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;IACnD,QAAQ,IAAI,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC,qBAAqB,EAAE;IACjE,YAAY,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC;IACrE,SAAS;IACT,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACjH,QAAQ,IAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC;IACxC,QAAQ,IAAI,OAAO,CAAC;IACpB,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAClB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC5C,YAAY,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,YAAY,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;IACrC,YAAY,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM;IACjE,gBAAgB,SAAS;IACzB,YAAY,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC;IAC9D,YAAY,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC5D,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC9C,YAAY,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;IACvC,YAAY,IAAI,MAAM,EAAE;IACxB,gBAAgB,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;IACtC,oBAAoB,IAAI,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACzD,oBAAoB,IAAI,UAAU,EAAE;IACpC,wBAAwB,IAAI,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAC;IAC5D,wBAAwB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;IACzD,wBAAwB,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IACvD,wBAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpE,4BAA4B,IAAI,cAAc,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/D,4BAA4B,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC7E,4BAA4B,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACtF,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;IAC3C,YAAY,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtE,YAAYA,UAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9E,SAAS;IACT,KAAK;IACL,IAAI,SAAS,CAAC,OAAO,EAAE,YAAY,EAAE;IACrC,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClD,QAAQ,IAAI,cAAc,GAAG,CAAC,CAAC;IAC/B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAClB,QAAQ,KAAK,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACtD,YAAY,IAAI,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IACxC,gBAAgB,cAAc,EAAE,CAAC;IACjC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,cAAc,IAAI,CAAC,EAAE;IACjC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;IAC5C,gBAAgB,WAAW,GAAG,OAAO,GAAG,GAAG,GAAG,YAAY,CAAC;IAC3D,aAAa;IACb,iBAAiB;IACjB,gBAAgB,WAAW,GAAG,YAAY,CAAC;IAC3C,aAAa;IACb,YAAY,OAAO,WAAW,CAAC;IAC/B,SAAS;IACT,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,cAAc,CAAC;IAC9D,QAAQ,IAAI,OAAO,GAAG,CAAC,EAAE;IACzB,YAAY,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;IAC3G,SAAS;IACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IACtC,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE;IACxB,gBAAgB,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAClD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,WAAW,GAAG,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACrE,aAAa;IACb,SAAS;IACT,QAAQ,KAAK,CAAC,GAAG,cAAc,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9D,YAAY,WAAW,GAAG,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT,QAAQ,OAAO,WAAW,CAAC;IAC3B,KAAK;IACL,IAAI,iBAAiB,CAAC,QAAQ,EAAE;IAChC,QAAmB,IAAI,CAAC,UAAU;IAClC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa;IAC/B,YAAY,QAAQ,CAAC,MAAM,CAAC,UAAU,GAAGG,eAAU,CAAC,KAAK,CAAC;IAC1D,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAEtC,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;IACzC,QAAQ,IAAI,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC;IAC/C,QAAQ,IAAI,aAAa,GAAG,QAAQ,CAAC,UAAU,CAAC;IAChD,QAAQ,IAAI,WAAW,GAAG,QAAQ,CAAC,UAAU,CAAC;IAC9C,QAAQ,IAAI,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC;IAChD,QAAwB,QAAQ,CAAC,SAAS;IAC1C,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,GAAG,aAAa,KAAK,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7H,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,GAAG,QAAQ,CAAC,MAAM,GAAG,aAAa,KAAK,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9H,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;IAC3E,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;IAC5C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;IAChD,gBAAgB,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;IAC/C,gBAAgB,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,CAAC;IACzD,gBAAgB,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5F,gBAAgB,WAAW,CAAC,OAAO,GAAGC,YAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,OAAO,IAAI,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,aAAa,GAAG,QAAQ,CAAC,OAAO,IAAI,CAAC,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;IAC5N,gBAAgB,IAAI,IAAI,CAAC,SAAS;IAClC,oBAAoB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC1D,gBAAgB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtD,gBAAgB,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;IAC7D,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;IAC3C,YAAY,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtE,YAAYJ,UAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9E,SAAS;IACT,aAAa;IACb,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACrC,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC;IAC3B,SAAS;IACT,KAAK;IACL,IAAI,WAAW,CAAC,GAAG,EAAE;IACrB,QAAQ,IAAI,CAAC,GAAG;IAChB,YAAY,OAAO;IACnB,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3B,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3B,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;IACtC,QAAQ,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;IACvC,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC;IACtB,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IACxC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IACzC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IACxC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;IACzC,KAAK;IACL,IAAI,OAAO,GAAG;IACd,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;IAC1C,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,MAAM,CAAC;IACvB,YAAY,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3D,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;IACpE,YAAY,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;IACjD,gBAAgB,WAAW,CAAC,YAAY,GAAG,EAAE,CAAC;IAC9C,gBAAgB,WAAW,CAAC,iBAAiB,GAAG,QAAQ,CAAC,kBAAkB,CAAC;IAC5E,gBAAgB,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;IAC/C,gBAAgB,WAAW,CAAC,kBAAkB,GAAG,CAAC,CAAC;IACnD,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAClF,oBAAoB,WAAW,CAAC,kBAAkB,IAAI,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACvF,iBAAiB;IACjB,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACzE,oBAAoB,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;IACrF,oBAAoB,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5D,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;IACxF,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;IAC1F,QAAQ,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE;IAC9C,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,EAAE;IAC/C,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9C,SAAS;IACT,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/D,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IACjE,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACvD,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1C,YAAY,IAAI,UAAU,GAAG,EAAE,CAAC;IAChC,YAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,gBAAgB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IAChD,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC;IAE3B,QAAQ,IAAI,kBAAkB,CAAC;IAC/B,QAAQ,IAAI,eAAe,CAAC;IAC5B,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;IAChF,YAAY,IAAI,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;IACrD,YAAY,IAAI,UAAU,CAAC,OAAO,IAAI,IAAI,EAAE;IAC5C,gBAAgB,IAAI,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;IAC/C,gBAAgB,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACjD,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;IAC5C,oBAAoB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACxD,oBAAoB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3D,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC/E,oBAAoB,OAAO,GAAG,OAAO,KAAK,CAAC,QAAQ,CAAC,KAAK,kBAAkB,IAAI,eAAe,CAAC,CAAC;IAChG,oBAAoB,IAAI,OAAO,EAAE;IACjC,wBAAwB,OAAO,GAAG,KAAK,CAAC;IACxC,wBAAwB,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC;IACvD,wBAAwB,QAAQ,GAAG,SAAS,CAAC;IAC7C,wBAAwB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC5D,wBAAwB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/D,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACtD,qBAAqB;IACrB,oBAAoB,eAAe,GAAG,kBAAkB,CAAC;IACzD,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjD,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,iBAAiB,EAAE;IACpC,YAAY,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACpC,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,iBAAiB,EAAE;IACpC,YAAY,IAAI,CAAC,YAAY,EAAE,CAAC;IAChC,SAAS;IACT,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtD,QAAQ,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;IAC3C,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;IACxC,SAAS;IACT,KAAK;IACL,IAAI,iBAAiB,CAAC,WAAW,EAAE;IACnC,QAAQ,IAAI,GAAG,CAAC;IAChB,QAAQ,KAAK,GAAG,IAAI,WAAW,EAAE;IACjC,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAC1D,SAAS;IACT,KAAK;IACL,IAAI,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,GAAG,IAAI,EAAE;IAC/C,QAAQ,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;IACxG,YAAY,OAAO,QAAQ,CAAC;IAC5B,QAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAC/C,KAAK;IACL,IAAI,gBAAgB,GAAG;IACvB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC;IACnB,QAAQ,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;IACtC,QAAQ,IAAI,MAAM,CAAC;IACnB,QAAQ,IAAI,OAAO,GAAG,EAAE,CAAC;IACzB,QAAQ,IAAI,MAAM,CAAC;IACnB,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACvC,YAAY,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACzC,YAAY,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;IACrC,YAAY,IAAI,CAAC,MAAM;IACvB,gBAAgB,SAAS;IACzB,YAAY,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/C,YAAY,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IACnD,SAAS;IACT,KAAK;IACL,IAAI,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE;IACjC,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC;IACnB,QAAQ,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IAC3B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAClC,YAAY,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;IAC5B,gBAAgB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;IACzC,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC;IACnB,QAAQ,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IAC3B,QAAQ,IAAI,SAAS,CAAC;IACtB,QAAQ,IAAI,OAAO,CAAC;IACpB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAClC,YAAY,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACjC,YAAY,IAAI,SAAS,GAAG,CAAC,EAAE;IAC/B,gBAAgB,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACzE,gBAAgB,IAAI,OAAO,GAAG,CAAC,EAAE;IACjC,oBAAoB,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAC3C,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,UAAU,CAAC,KAAK,EAAE;IACtB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;IAChD,YAAY,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC9C,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,gBAAgB,CAAC,IAAI,EAAE;IAC3B,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;IAC9B,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1C,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,iBAAiB,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE;IACvC,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;IAC5E,YAAY,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IACzD,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;IACpC,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;IAC5C,YAAY,IAAI,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;IAC/C,YAAY,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7C,YAAY,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC5C,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACzD,YAAY,IAAI,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,EAAE;IACpE,gBAAgB,IAAI,WAAW,CAAC,WAAW,EAAE;IAC7C,oBAAoB,IAAI,gBAAgB,GAAG,IAAI,aAAa,EAAE,CAAC;IAC/D,oBAAoB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,oBAAoB,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC;IAC5F,oBAAoB,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IAC/D,oBAAoB,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC3D,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7F,iBAAiB;IACjB,gBAAgB,WAAW,CAAC,YAAY,EAAE,CAAC;IAC3C,aAAa;IACb,YAAY,OAAO,WAAW,CAAC;IAC/B,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,uBAAuB,CAAC,MAAM,EAAE,MAAM,EAAE;IAC5C,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;IACnC,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;IACnC,KAAK;IACL,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE;IACrB,QAAQ,IAAI,KAAK,IAAI,CAAC;IACtB,YAAY,OAAO;IACnB,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC5B,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IACvD,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;IACzD,QAAQ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC9B,KAAK;IACL,IAAI,IAAI,KAAK,GAAG;IAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;IAC3B,KAAK;IACL,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE;IAC/B,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;IACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;IACzB,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7B,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC9B,KAAK;IACL,IAAI,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;IAChD,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM;IACtH,YAAY,OAAO;IACnB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;IACzB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;IACzB,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IACjC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IACnC,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAClD,QAAQ,IAAI,CAAC,eAAe,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACpD,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC9B,KAAK;IACL,IAAI,oBAAoB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,GAAG,IAAI,EAAE;IACrD,QAAQ,IAAI,IAAI,IAAI,IAAI,EAAE;IAC1B,YAAY,IAAI,GAAG,IAAIE,cAAS,EAAE,CAAC;IACnC,SAAS;IACT,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;IAC5E,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;IAC7E,QAAQ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;IAC3D,QAAQ,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;IAC5D,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACrE,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,cAAc,GAAG;IACrB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;IAC5E,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;IAC7E,QAAQ,IAAI,UAAU,GAAG,KAAK,CAAC;IAC/B,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;IACvC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;IAC7F,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;IACzC,YAAY,UAAU,GAAG,IAAI,CAAC;IAC9B,SAAS;IACT,aAAa;IACb,YAAY,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;IACvC,SAAS;IACT,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;IAC9F,QAAQ,IAAI,CAAC,UAAU,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;IACxD,YAAY,UAAU,GAAG,IAAI,CAAC;IAC9B,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;IAC9B,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;IAC/D,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;IACtC,gBAAgB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IACpE,aAAa;IACb,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;IACjE,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE;IACxC,gBAAgB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;IACtE,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;IACrC,gBAAgB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACpC,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;IACrC,gBAAgB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACpC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAC7C,QAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9F,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9I,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9F,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1I,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;IAC9M,YAAY,IAAI,CAAC,YAAY,EAAE,CAAC;IAChC,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IACtD,YAAY,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC5D,YAAY,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;IACxD,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC1D,YAAY,UAAU,GAAG,IAAI,CAAC;IAC9B,SAAS;IACT,QAAQ,IAAI,CAAC,UAAU;IACvB,YAAY,OAAO;IACnB,QAAQ,IAAI,SAAS,CAAC;IACtB,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;IAChD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACtC,YAAY,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAClD,YAAY,IAAI,SAAS,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC;IACrD,gBAAgB,SAAS,CAAC,aAAa,EAAE,CAAC;IAC1C,SAAS;IACT,KAAK;IACL,IAAI,YAAY,GAAG;IAInB,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;IACrB,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;IACrB,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;IACzD,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;IAC/D,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACzF,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,aAAa;IACb,YAAY,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;IAClG,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACjF,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;IAC3D,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;IACjE,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC9H,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,aAAa;IACb,YAAY,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IACjE,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACxF,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE;IACvD,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;IAC7D,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACvF,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;IACxF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,aAAa;IACb,YAAY,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IACjG,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC/E,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;IAChF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;IAC7D,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACnE,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC/H,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;IAChF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,aAAa;IACb,YAAY,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACnE,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC1F,oBAAoB,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;IACxF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;IAC3B,QAAQ,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;IACpF,YAAY,OAAO;IACnB,SAAS;IACT,QAAW,IAAC,CAAC,CAAI;IACjB,QAAQ,IAAI,WAAW,CAAC;IACxB,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IACvD,QAAQ,IAAI,UAAU,IAAI,IAAI,EAAE;IAChC,YAAY,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACzD,SAAS;IACT,aAAa;IACb,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACnF,gBAAgB,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,IAAI,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;IACnD,oBAAoB,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAChD,oBAAoB,IAAI,WAAW,CAAC,OAAO,IAAI,KAAK,IAAI,WAAW,CAAC,YAAY,GAAG,CAAC,EAAE;IACtF,wBAAwB,WAAW,CAAC,IAAI,EAAE,CAAC;IAC3C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,YAAY,GAAG;IACnB,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,IAAI,OAAO,CAAC;IACpB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1C,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,gBAAgB,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,gBAAgB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IAC9C,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,eAAe,CAAC,GAAG,EAAE;IACzB,QAAQ,IAAI,MAAM,CAAC;IACnB,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;IACnC,YAAY,QAAQ,CAAC,WAAW,GAAG,IAAIG,eAAU,EAAE,CAAC;IACpD,YAAY,IAAI,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;IAClD,YAAY,IAAI,CAAC,EAAE,EAAE;IACrB,gBAAgB,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3D,aAAa;IACb,SAAS;IACT,QAAQ,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC;IACtC,QAAQ,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxC,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC;IACnB,QAAQ,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IACzB,QAAQ,IAAI,KAAK,CAAC;IAClB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAClC,YAAY,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B,YAAY,MAAM,CAAC,KAAK,EAAE,CAAC;IAC3B,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,YAAY,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,YAAY,KAAK,CAAC,IAAI,EAAE,CAAC;IACzB,SAAS;IACT,QAAQ,MAAM,CAAC,KAAK,EAAE,CAAC;IACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,KAAK;IACL,IAAI,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE;IAC/B,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,IAAI,WAAW,CAAC;IACxB,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IACvD,QAAQ,IAAI,UAAU,IAAI,IAAI,EAAE;IAChC,YAAY,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC5D,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC;IAC1B,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;IAC3B,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC;IACzB,YAAY,IAAI,OAAO,GAAG,CAAC,CAAC;IAC5B,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAC7C,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAC/C,YAAY,QAAQ,IAAI,CAAC,WAAW;IACpC,gBAAgB,KAAK,QAAQ,CAAC,qBAAqB;IACnD,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC;IAC3D,oBAAoB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC;IACzE,oBAAoB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;IAC3D,oBAAoB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,WAAW,CAAC,CAAC;IAC5E,oBAAoB,IAAI,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;IACzD,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,QAAQ,CAAC,qBAAqB;IACnD,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5E,oBAAoB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5F,oBAAoB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IAClF,oBAAoB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,WAAW,GAAG,WAAW,KAAK,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IACrG,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,QAAQ,CAAC,sBAAsB;IACpD,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5E,oBAAoB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5F,oBAAoB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5E,oBAAoB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/F,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,QAAQ,CAAC,qBAAqB;IACnD,oBAAoB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;IACzD,oBAAoB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5E,oBAAoB,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3F,oBAAoB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC;IACrE,oBAAoB,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,WAAW,GAAG,WAAW,IAAI,OAAO,CAAC,CAAC;IACvF,oBAAoB,MAAM;IAC1B,aAAa;IACb,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC;IAC9B,YAAY,IAAI,YAAY,CAAC;IAC7B,YAAY,IAAI,aAAa,CAAC;IAC9B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9D,gBAAgB,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7C,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,QAAQ,IAAI,aAAa,EAAE;IAC1D,wBAAwB,YAAY,GAAG,IAAI,CAAC;IAC5C,wBAAwB,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC;IACxD,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,YAAY,EAAE;IACvC,wBAAwB,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACjF,wBAAwB,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACtD,qBAAqB;IACrB,oBAAoB,WAAW,GAAG,YAAY,CAAC;IAC/C,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACrE,oBAAoB,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjD,iBAAiB;IACjB,gBAAgB,IAAI,SAAS,CAAC;IAC9B,gBAAgB,IAAI,IAAI,CAAC,YAAY,EAAE;IACvC,oBAAoB,SAAS,GAAG,GAAG,CAAC;IACpC,oBAAoB,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;IACvG,oBAAoB,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;IACvG,oBAAoB,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;IACvG,iBAAiB;IACjB,gBAAgB,QAAQ,IAAI,CAAC,WAAW;IACxC,oBAAoB,KAAK,QAAQ,CAAC,qBAAqB;IACvD,wBAAwB,IAAI,eAAe,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAClE,wBAAwB,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAChE,wBAAwB,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5D,wBAAwB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,eAAe,CAAC,CAAC;IACnE,wBAAwB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC;IACzE,wBAAwB,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,aAAa,IAAI,cAAc,CAAC,CAAC;IACnG,wBAAwB,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,aAAa,IAAI,cAAc,CAAC,CAAC;IACrG,wBAAoC,IAAI,CAAC,KAAK,GAAG,EAAE;IACnD,wBAAwB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnD,wBAAwB,IAAI,KAAK,GAAG,CAAC,EAAE;IACvC,4BAA4B,KAAK,GAAG,CAAC,CAAC;IACtC,yBAAyB;IACzB,wBAAwB,IAAI,KAAK,IAAI,KAAK,EAAE;IAC5C,4BAA4B,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IAC9C,yBAAyB;IACzB,wBAAwB,IAAI,QAAQ,GAAG,CAAC,EAAE;IAC1C,4BAA4B,OAAO,GAAG,CAAC,CAAC;IACxC,yBAAyB;IACzB,wBAAwB,IAAI,QAAQ,IAAI,KAAK,EAAE;IAC/C,4BAA4B,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAC;IACjD,yBAAyB;IACzB,wBAAwB,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAClG,wBAAwB,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;IAC3D,4BAA4B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACrD,gCAAgC,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IACpD,gCAAgC,IAAI,OAAO,GAAG,CAAC,CAAC;IAChD,gCAAgC,IAAI,WAAW,GAAG,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC;IACnF,gCAAgC,IAAI,WAAW,GAAG,MAAM,IAAI,WAAW,IAAI,OAAO,EAAE;IACpF,oCAAoC,IAAI,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE;IAC/F,wCAAwC,WAAW,CAAC,YAAY,EAAE,CAAC;IACnE,qCAAqC;IACrC,iCAAiC;IACjC,6BAA6B;IAC7B,yBAAyB;IACzB,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,QAAQ,CAAC,qBAAqB;IACvD,wBAAwB,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAClG,wBAAwB,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IACzD,4BAA4B,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7D,gCAAgC,IAAI,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IAC/E,oCAAoC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC/D,iCAAiC;IACjC,6BAA6B;IAC7B,yBAAyB;IACzB,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,QAAQ,CAAC,sBAAsB,CAAC;IACzD,oBAAoB,KAAK,QAAQ,CAAC,qBAAqB;IACvD,wBAAwB,QAAQ,IAAI,CAAC,YAAY;IACjD,4BAA4B,KAAK,QAAQ,CAAC,qBAAqB;IAC/D,gCAAgC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC1G,gCAAgC,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IACjE,oCAAoC,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACrE,wCAAwC,IAAI,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACvF,4CAA4C,WAAW,CAAC,YAAY,EAAE,CAAC;IACvE,yCAAyC;IACzC,qCAAqC;IACrC,iCAAiC;IACjC,gCAAgC,MAAM;IACtC,4BAA4B,KAAK,QAAQ,CAAC,mBAAmB;IAC7D,gCAAgC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC9H,gCAAgC,KAAK,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;IACtE,oCAAoC,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACrE,wCAAwC,IAAI,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACvF,4CAA4C,WAAW,CAAC,YAAY,EAAE,CAAC;IACvE,yCAAyC;IACzC,qCAAqC;IACrC,iCAAiC;IACjC,gCAAgC,MAAM;IACtC,4BAA4B,KAAK,QAAQ,CAAC,oBAAoB;IAC9D,gCAAgC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;IAC9H,gCAAgC,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IACjE,oCAAoC,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;IAC1E,wCAAwC,IAAI,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACvF,4CAA4C,WAAW,CAAC,YAAY,EAAE,CAAC;IACvE,yCAAyC;IACzC,qCAAqC;IACrC,iCAAiC;IACjC,gCAAgC,MAAM;IACtC,4BAA4B,KAAK,QAAQ,CAAC,kBAAkB;IAC5D,gCAAgC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;IAClJ,gCAAgC,KAAK,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;IACtE,oCAAoC,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;IAC1E,wCAAwC,IAAI,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACvF,4CAA4C,WAAW,CAAC,YAAY,EAAE,CAAC;IACvE,yCAAyC;IACzC,qCAAqC;IACrC,iCAAiC;IACjC,gCAAgC,MAAM;IACtC,yBAAyB;IACzB,wBAAwB,MAAM;IAC9B,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;IAClD,oBAAoB,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;IAChD,oBAAoB,IAAI,IAAI,CAAC,SAAS;IACtC,wBAAwB,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;IACjE,oBAAoB,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;IACjD,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;IAC5C,oBAAoB,IAAI,WAAW,CAAC,YAAY,GAAG,CAAC,EAAE;IACtD,wBAAwB,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACrD,qBAAqB;IACrB,oBAAoB,IAAI,IAAI,CAAC,YAAY,EAAE;IAC3C,wBAAwB,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IACtG,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,YAAY,IAAI,YAAY,CAAC,YAAY,GAAG,CAAC,IAAI,aAAa,EAAE;IACxF,wBAAwB,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC7D,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,oBAAoB,EAAE;IACpE,gBAAgB,IAAI,YAAY,EAAE;IAClC,oBAAoB,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IACpH,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,UAAU,CAAC;IAC1B,KAAK;IACL,IAAI,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;IAC3B,QAAQ,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;IACpF,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IACvD,QAAQ,IAAI,UAAU,EAAE;IACxB,YAAY,IAAI,WAAW,CAAC;IAC5B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxD,gBAAgB,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5C,gBAAgB,IAAI,WAAW,CAAC,YAAY,GAAG,CAAC,EAAE;IAClD,oBAAoB,IAAI,WAAW,IAAI,IAAI,EAAE;IAC7C,wBAAwB,WAAW,CAAC,IAAI,EAAE,CAAC;IAC3C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,cAAc,CAAC,SAAS,EAAE,UAAU,EAAE;IAC1C,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC;IAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1D,YAAY,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACzC,YAAY,IAAI,MAAM,CAAC,SAAS,IAAI,SAAS,EAAE;IAC/C,gBAAgB,MAAM;IACtB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,MAAM,EAAE;IACpB,YAAY,OAAO,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACtD,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,OAAO,GAAG;IACd,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,sBAAsB,CAAC;IAC5D,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAGlB,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,WAAW,CAAC;IACxB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACzD,YAAY,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,WAAW,EAAE;IAC7B,gBAAgB,WAAW,CAAC,QAAQ,EAAE,CAAC;IACvC,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IACjC,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpD,YAAY,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACzC,YAAY,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC/B,SAAS;IACT,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAC5B,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,QAAQ,IAAI,MAAM,CAAC;IACnB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtD,YAAY,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACzC,YAAY,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC9B,SAAS;IACT,QAAQ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC9B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IACpC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;IAC7B,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IACtC,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACnC,SAAS;IACT,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;IACtC,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;IAC5B,YAAY,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,SAAS;IACT,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAChC,QAAQ,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;IACpC,QAAQ,KAAK,CAAC,IAAI,IAAI,EAAE;IACxB,YAAY,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,SAAS;IACT,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACjC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACrC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IACjC,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IACrC,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAChC,QAAQ,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IAC9B,QAAQ,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAC/B,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACpB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACpB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAClC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC/B,KAAK;IACL,IAAI,IAAI,SAAS,GAAG;IACpB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;IAC9B,KAAK;IACL,IAAI,IAAI,UAAU,GAAG;IACrB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;IAC9B,KAAK;IACL,IAAI,IAAI,KAAK,GAAG;IAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;IAC3B,KAAK;IACL,IAAI,IAAI,MAAM,GAAG;IACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;IAC5B,KAAK;IACL,IAAI,IAAI,cAAc,GAAG;IACzB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;IAC1B,KAAK;IACL,IAAI,IAAI,WAAW,GAAG;IACtB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;IAC1B,KAAK;IACL,IAAI,IAAI,SAAS,GAAG;IACpB,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;IAChC,KAAK;IACL,IAAI,IAAI,SAAS,GAAG;IACpB,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;IAChC,KAAK;IACL,IAAI,IAAI,aAAa,GAAG;IACxB,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC;IACnC,KAAK;IACL,IAAI,IAAI,cAAc,GAAG;IACzB,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;IACpC,KAAK;IACL,IAAI,IAAI,CAAC,GAAG;IACZ,QAAQ,OAAO,IAAI,CAAC,EAAE,CAAC;IACvB,KAAK;IACL,IAAI,IAAI,CAAC,GAAG;IACZ,QAAQ,OAAO,IAAI,CAAC,EAAE,CAAC;IACvB,KAAK;IACL,IAAI,IAAI,SAAS,GAAG;IACpB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;IAC/B,KAAK;IACL,IAAI,IAAI,UAAU,GAAG;IACrB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC;IAChC,KAAK;IACL,IAAI,IAAI,cAAc,GAAG;IACzB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;IAC3B,KAAK;IACL,IAAI,IAAI,WAAW,GAAG;IACtB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;IAC3B,KAAK;IACL,IAAI,IAAI,WAAW,GAAG;IACtB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC;IACjC,KAAK;IACL,IAAI,IAAI,WAAW,GAAG;IACtB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC;IACjC,KAAK;IACL,IAAI,SAAS,GAAG;IAChB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;IAC/B,KAAK;IACL,IAAI,cAAc,CAAC,SAAS,EAAE;IAC9B,QAAQ,IAAI,SAAS,CAAC;IACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1D,YAAY,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,IAAI,SAAS,IAAI,SAAS,CAAC,SAAS,EAAE;IAClD,gBAAgB,OAAO,SAAS,CAAC;IACjC,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,IAAI,eAAe,CAAC,KAAK,EAAE;IAC3B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;IAC7C,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC3C,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,CAAC;IACD,QAAQ,CAAC,sBAAsB,GAAG,YAAY,CAAC;IAC/C,QAAQ,CAAC,qBAAqB,GAAG,WAAW,CAAC;IAC7C,QAAQ,CAAC,qBAAqB,GAAG,WAAW,CAAC;IAC7C,QAAQ,CAAC,qBAAqB,GAAG,WAAW,CAAC;IAC7C,QAAQ,CAAC,qBAAqB,GAAG,YAAY,CAAC;IAC9C,QAAQ,CAAC,mBAAmB,GAAG,UAAU,CAAC;IAC1C,QAAQ,CAAC,oBAAoB,GAAG,WAAW,CAAC;IAC5C,QAAQ,CAAC,kBAAkB,GAAG,SAAS,CAAC;IACxC,MAAM,KAAK,CAAC;IACZ,IAAI,QAAQ,GAAG;IACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5D,KAAK;IACL,CAAC;IACD,MAAM,cAAc,CAAC;IACrB,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC9B,QAAQ,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IACrC,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IACjC,KAAK;IACL,CAAC;IACD,MAAM,OAAO,CAAC;IACd,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACxB,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IAC7B,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACzB,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC9B,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC9B,KAAK;IACL,IAAI,IAAI,CAAC,IAAI,EAAE;IACf,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACtC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAChC,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAC5C,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAClC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACpC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACxC,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;IAClD,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,QAAQ,IAAI,WAAW,EAAE;IACzB,YAAY,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC;IAC9C,YAAY,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC;IAC9C,SAAS;IACT,KAAK;IACL,CAAC;IACD,IAAI,CAAC,QAAQ,GAAG,QAAQ;;;;;;;;;;;;;"}