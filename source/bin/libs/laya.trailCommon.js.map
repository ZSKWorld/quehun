{"version":3,"file":"laya.trailCommon.js","sources":["../../bin/tsc/layaAir/laya/trail/trailCommon/RenderFeatureComman/Trail/TrailTextureMode.js","../../bin/tsc/layaAir/laya/trail/trailCommon/RenderFeatureComman/Trail/VertexTrail.js","../../bin/tsc/layaAir/laya/trail/trailCommon/RenderFeatureComman/Trail/TrailGeometry.js","../../bin/tsc/layaAir/laya/trail/trailCommon/RenderFeatureComman/Trail/Shader/TrailVertexUtil.glsl","../../bin/tsc/layaAir/laya/trail/trailCommon/RenderFeatureComman/Trail/TrailShaderCommon.js","../../bin/tsc/layaAir/laya/trail/trailCommon/RenderFeatureComman/TrailBaseFilter.js"],"sourcesContent":["export var TrailTextureMode;\n(function (TrailTextureMode) {\n    TrailTextureMode[TrailTextureMode[\"Stretch\"] = 0] = \"Stretch\";\n    TrailTextureMode[TrailTextureMode[\"Tile\"] = 1] = \"Tile\";\n})(TrailTextureMode || (TrailTextureMode = {}));\n","import { VertexDeclaration } from \"../../../../RenderEngine/VertexDeclaration\";\nimport { VertexElement } from \"../../../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../../../renders/VertexElementFormat\";\nexport class VertexTrail {\n    static get vertexDeclaration1() {\n        return VertexTrail._vertexDeclaration1;\n    }\n    static get vertexDeclaration2() {\n        return VertexTrail._vertexDeclaration2;\n    }\n    get vertexDeclaration() {\n        return VertexTrail._vertexDeclaration1;\n    }\n    static __init__() {\n        VertexTrail._vertexDeclaration1 = new VertexDeclaration(32, [new VertexElement(0, VertexElementFormat.Vector3, VertexTrail.TRAIL_POSITION0),\n            new VertexElement(12, VertexElementFormat.Vector3, VertexTrail.TRAIL_OFFSETVECTOR),\n            new VertexElement(24, VertexElementFormat.Single, VertexTrail.TRAIL_TIME0),\n            new VertexElement(28, VertexElementFormat.Single, VertexTrail.TRAIL_TEXTURECOORDINATE0Y)]);\n        VertexTrail._vertexDeclaration2 = new VertexDeclaration(20, [new VertexElement(0, VertexElementFormat.Single, VertexTrail.TRAIL_TEXTURECOORDINATE0X),\n            new VertexElement(4, VertexElementFormat.Color, VertexTrail.TRAIL_COLOR)]);\n    }\n}\nVertexTrail.TRAIL_POSITION0 = 0;\nVertexTrail.TRAIL_OFFSETVECTOR = 1;\nVertexTrail.TRAIL_TIME0 = 2;\nVertexTrail.TRAIL_TEXTURECOORDINATE0Y = 3;\nVertexTrail.TRAIL_TEXTURECOORDINATE0X = 4;\nVertexTrail.TRAIL_COLOR = 5;\n","import { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { Color } from \"../../../../maths/Color\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nimport { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../../RenderEngine/RenderEnum/DrawType\";\nimport { MeshTopology } from \"../../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { TrailTextureMode } from \"./TrailTextureMode\";\nimport { VertexTrail } from \"./VertexTrail\";\nexport class TrailGeometry {\n    constructor() {\n        this._floatCountPerVertices1 = 8;\n        this._floatCountPerVertices2 = 5;\n        this._increaseSegementCount = 16;\n        this._needAddFirstVertex = false;\n        this._isTempEndVertex = false;\n        this._vertices1 = null;\n        this._vertices2 = null;\n        this._lastFixedVertexPosition = new Vector3();\n        this.tmpColor = new Color();\n        this._totalLength = 0;\n        this._activeIndex = 0;\n        this._endIndex = 0;\n        this._disappearBoundsMode = false;\n        this._geometryElementOBj = LayaGL.renderDeviceFactory.createRenderGeometryElement(MeshTopology.TriangleStrip, DrawType.DrawArray);\n        this._bufferState = LayaGL.renderDeviceFactory.createBufferState();\n        this._geometryElementOBj.bufferState = this._bufferState;\n        this._segementCount = this._increaseSegementCount;\n        this._resizeData(this._segementCount);\n    }\n    _resizeData(segementCount) {\n        this._subBirthTime = new Float32Array(segementCount);\n        this._subDistance = new Float64Array(segementCount);\n        var vertexCount = segementCount * 2;\n        var vertexDeclaration1 = VertexTrail.vertexDeclaration1;\n        var vertexDeclaration2 = VertexTrail.vertexDeclaration2;\n        var vertexBuffers = [];\n        var vertexbuffer1Size = vertexCount * vertexDeclaration1.vertexStride;\n        var vertexbuffer2Size = vertexCount * vertexDeclaration2.vertexStride;\n        this._vertices1 = new Float32Array(vertexCount * this._floatCountPerVertices1);\n        this._vertices2 = new Float32Array(vertexCount * this._floatCountPerVertices2);\n        this._vertexBuffer1 = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\n        this._vertexBuffer1.vertexDeclaration = vertexDeclaration1;\n        this._vertexBuffer1.setDataLength(vertexbuffer1Size);\n        this._vertexBuffer2 = LayaGL.renderDeviceFactory.createVertexBuffer(BufferUsage.Dynamic);\n        this._vertexBuffer2.vertexDeclaration = vertexDeclaration2;\n        this._vertexBuffer2.setDataLength(vertexbuffer2Size);\n        vertexBuffers.push(this._vertexBuffer1);\n        vertexBuffers.push(this._vertexBuffer2);\n        this._bufferState.applyState(vertexBuffers, null);\n    }\n    _resetData() {\n        var count = this._endIndex - this._activeIndex;\n        var oldVertices1 = new Float32Array(this._vertices1.buffer, this._floatCountPerVertices1 * 2 * this._activeIndex * 4, this._floatCountPerVertices1 * 2 * count);\n        var oldVertices2 = new Float32Array(this._vertices2.buffer, this._floatCountPerVertices2 * 2 * this._activeIndex * 4, this._floatCountPerVertices2 * 2 * count);\n        var oldSubDistance = new Float64Array(this._subDistance.buffer, this._activeIndex * 8, count);\n        var oldSubBirthTime = new Float32Array(this._subBirthTime.buffer, this._activeIndex * 4, count);\n        if (count === this._segementCount) {\n            this._vertexBuffer1.destroy();\n            this._vertexBuffer2.destroy();\n            this._segementCount += this._increaseSegementCount;\n            this._resizeData(this._segementCount);\n        }\n        this._vertices1.set(oldVertices1, 0);\n        this._vertices2.set(oldVertices2, 0);\n        this._subDistance.set(oldSubDistance, 0);\n        this._subBirthTime.set(oldSubBirthTime, 0);\n        this._endIndex = count;\n        this._activeIndex = 0;\n        this._vertexBuffer1.setData(this._vertices1.buffer, 0, this._floatCountPerVertices1 * 2 * this._activeIndex * 4, this._floatCountPerVertices1 * 2 * count * 4);\n        this._vertexBuffer2.setData(this._vertices2.buffer, 0, this._floatCountPerVertices2 * 2 * this._activeIndex * 4, this._floatCountPerVertices2 * 2 * count * 4);\n    }\n    _addTrailByFirstPosition(position, curtime) {\n        (this._endIndex === this._segementCount) && (this._resetData());\n        this._subDistance[this._endIndex] = 0;\n        this._subBirthTime[this._endIndex] = curtime;\n        this._endIndex++;\n        position.cloneTo(this._lastFixedVertexPosition);\n        this._needAddFirstVertex = true;\n    }\n    _addTrailByNextPosition(position, curtime, minVertexDistance, pointAtoBVector3, delLength) {\n        var tempEndIndex;\n        var offset;\n        if (this._needAddFirstVertex) {\n            this._updateVerticesByPositionData(position, pointAtoBVector3, this._endIndex - 1, curtime);\n            this._needAddFirstVertex = false;\n        }\n        if (delLength - minVertexDistance >= TrailGeometry.zeroTolerance) {\n            if (this._isTempEndVertex) {\n                tempEndIndex = this._endIndex - 1;\n                offset = delLength - this._subDistance[tempEndIndex];\n                this._updateVerticesByPosition(position, pointAtoBVector3, delLength, tempEndIndex, curtime);\n                this._totalLength += offset;\n            }\n            else {\n                (this._endIndex === this._segementCount) && (this._resetData());\n                this._updateVerticesByPosition(position, pointAtoBVector3, delLength, this._endIndex, curtime);\n                this._totalLength += delLength;\n                this._endIndex++;\n            }\n            position.cloneTo(this._lastFixedVertexPosition);\n            this._isTempEndVertex = false;\n        }\n        else {\n            if (this._isTempEndVertex) {\n                tempEndIndex = this._endIndex - 1;\n                offset = delLength - this._subDistance[tempEndIndex];\n                this._updateVerticesByPosition(position, pointAtoBVector3, delLength, tempEndIndex, curtime);\n                this._totalLength += offset;\n            }\n            else {\n                (this._endIndex === this._segementCount) && (this._resetData());\n                this._updateVerticesByPosition(position, pointAtoBVector3, delLength, this._endIndex, curtime);\n                this._totalLength += delLength;\n                this._endIndex++;\n            }\n            this._isTempEndVertex = true;\n        }\n    }\n    _updateVerticesByPositionData(position, pointAtoBVector3, index, curtime) {\n        var vertexOffset = this._floatCountPerVertices1 * 2 * index;\n        this._vertices1[vertexOffset] = position.x;\n        this._vertices1[vertexOffset + 1] = position.y;\n        this._vertices1[vertexOffset + 2] = position.z;\n        this._vertices1[vertexOffset + 3] = -pointAtoBVector3.x;\n        this._vertices1[vertexOffset + 4] = -pointAtoBVector3.y;\n        this._vertices1[vertexOffset + 5] = -pointAtoBVector3.z;\n        this._vertices1[vertexOffset + 6] = curtime;\n        this._vertices1[vertexOffset + 7] = 1.0;\n        this._vertices1[vertexOffset + 8] = position.x;\n        this._vertices1[vertexOffset + 9] = position.y;\n        this._vertices1[vertexOffset + 10] = position.z;\n        this._vertices1[vertexOffset + 11] = pointAtoBVector3.x;\n        this._vertices1[vertexOffset + 12] = pointAtoBVector3.y;\n        this._vertices1[vertexOffset + 13] = pointAtoBVector3.z;\n        this._vertices1[vertexOffset + 14] = curtime;\n        this._vertices1[vertexOffset + 15] = 0.0;\n        this._disappearBoundsMode = true;\n        var floatCount = this._floatCountPerVertices1 * 2;\n        this._vertexBuffer1.setData(this._vertices1.buffer, vertexOffset * 4, vertexOffset * 4, floatCount * 4);\n    }\n    _updateVerticesByPosition(position, pointAtoBVector3, delDistance, index, curtime) {\n        this._updateVerticesByPositionData(position, pointAtoBVector3, index, curtime);\n        this._subDistance[index] = delDistance;\n        this._subBirthTime[index] = curtime;\n    }\n    _updateVertexBufferUV(colorGradient, textureMode, tileUnit = 1) {\n        var vertexCount = this._endIndex;\n        var curLength = 0;\n        var gradient = colorGradient;\n        var startAlphaIndex = gradient.colorAlphaKeysCount - 1;\n        var startColorIndex = gradient.colorRGBKeysCount - 1;\n        var totalLength = this._totalLength;\n        var stride = this._floatCountPerVertices2 * 2;\n        for (var i = this._activeIndex; i < vertexCount; i++) {\n            (i !== this._activeIndex) && (curLength += this._subDistance[i]);\n            var uvX;\n            var lerpFactor;\n            if (textureMode == TrailTextureMode.Stretch) {\n                uvX = 1.0 - curLength / totalLength;\n                lerpFactor = uvX;\n            }\n            else {\n                lerpFactor = 1.0 - curLength / totalLength;\n                uvX = 1.0 - (totalLength - curLength) / tileUnit;\n            }\n            startColorIndex = gradient.evaluateColorRGB(lerpFactor, this.tmpColor, startColorIndex, true);\n            startAlphaIndex = gradient.evaluateColorAlpha(lerpFactor, this.tmpColor, startAlphaIndex, true);\n            var index = i * stride;\n            this._vertices2[index + 0] = uvX;\n            this._vertices2[index + 1] = this.tmpColor.r;\n            this._vertices2[index + 2] = this.tmpColor.g;\n            this._vertices2[index + 3] = this.tmpColor.b;\n            this._vertices2[index + 4] = this.tmpColor.a;\n            this._vertices2[index + 5] = uvX;\n            this._vertices2[index + 6] = this.tmpColor.r;\n            this._vertices2[index + 7] = this.tmpColor.g;\n            this._vertices2[index + 8] = this.tmpColor.b;\n            this._vertices2[index + 9] = this.tmpColor.a;\n        }\n        var offset = this._activeIndex * stride;\n        this._vertexBuffer2.setData(this._vertices2.buffer, offset * 4, offset * 4, (vertexCount * stride - offset) * 4);\n    }\n    _updateDisappear(curtime, lifetime) {\n        var count = this._endIndex;\n        for (var i = this._activeIndex; i < count; i++) {\n            if (curtime - this._subBirthTime[i] >= lifetime + TrailGeometry.zeroTolerance) {\n                var nextIndex = i + 1;\n                if (nextIndex !== count)\n                    this._totalLength -= this._subDistance[nextIndex];\n                if (this._isTempEndVertex && (nextIndex === count - 1)) {\n                    var fixedPos = this._lastFixedVertexPosition;\n                    fixedPos.x = this._vertices1[0];\n                    fixedPos.y = this._vertices1[1];\n                    fixedPos.z = this._vertices1[2];\n                    this._isTempEndVertex = false;\n                }\n                this._activeIndex++;\n                this._disappearBoundsMode = true;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    _updateRenderParams() {\n        this._geometryElementOBj.clearRenderParams();\n        var start = this._activeIndex * 2;\n        var count = this._endIndex * 2 - start;\n        this._geometryElementOBj.setDrawArrayParams(start, count);\n    }\n    destroy() {\n        this._geometryElementOBj.destroy();\n        this._vertexBuffer1.destroy();\n        this._vertexBuffer2.destroy();\n        this._bufferState.destroy();\n        this._bufferState = null;\n        this._vertices1 = null;\n        this._vertexBuffer1 = null;\n        this._vertices2 = null;\n        this._vertexBuffer2 = null;\n        this._subBirthTime = null;\n        this._subDistance = null;\n        this._lastFixedVertexPosition = null;\n        this._disappearBoundsMode = false;\n    }\n    clear() {\n        this._activeIndex = 0;\n        this._endIndex = 0;\n        this._disappearBoundsMode = false;\n        this._subBirthTime.fill(0);\n        this._subDistance.fill(0);\n        this._segementCount = 0;\n        this._isTempEndVertex = false;\n        this._needAddFirstVertex = false;\n        this._lastFixedVertexPosition.setValue(0, 0, 0);\n        this._totalLength = 0;\n    }\n}\nTrailGeometry.zeroTolerance = 1e-6;\nTrailGeometry._tempVector33 = new Vector3();\nTrailGeometry._tempVector34 = new Vector3();\nTrailGeometry._tempVector35 = new Vector3();\nTrailGeometry._tempVector36 = new Vector3();\n","// Sprite uniform\nuniform float u_CurTime;\nuniform float u_LifeTime;\nuniform vec4 u_WidthCurve[10];\nuniform int u_WidthCurveKeyLength;\n\nvarying vec2 v_Texcoord0;\nvarying vec4 v_Color;\n\nfloat hermiteInterpolate(float t, float outTangent, float inTangent, float duration, float value1, float value2)\n{\n    float t2 = t * t;\n    float t3 = t2 * t;\n    float a = 2.0 * t3 - 3.0 * t2 + 1.0;\n    float b = t3 - 2.0 * t2 + t;\n    float c = t3 - t2;\n    float d = -2.0 * t3 + 3.0 * t2;\n    return a * value1 + b * outTangent * duration + c * inTangent * duration + d * value2;\n}\n\nfloat getCurWidth(in float normalizeTime)\n{\n    float width;\n    if (normalizeTime == 0.0)\n\t{\n\t    width = u_WidthCurve[0].w;\n\t}\n    else if (normalizeTime >= 1.0)\n\t{\n\t    width = u_WidthCurve[u_WidthCurveKeyLength - 1].w;\n\t}\n    else\n\t{\n\t    for (int i = 0; i < 10; i++)\n\t\t{\n\t\t    if (normalizeTime == u_WidthCurve[i].x)\n\t\t\t{\n\t\t\t    width = u_WidthCurve[i].w;\n\t\t\t    break;\n\t\t\t}\n\n\t\t    vec4 lastFrame = u_WidthCurve[i];\n\t\t    vec4 nextFrame = u_WidthCurve[i + 1];\n\t\t    if (normalizeTime > lastFrame.x && normalizeTime < nextFrame.x)\n\t\t\t{\n\t\t\t    float duration = nextFrame.x - lastFrame.x;\n\t\t\t    float t = (normalizeTime - lastFrame.x) / duration;\n\t\t\t    float outTangent = lastFrame.z;\n\t\t\t    float inTangent = nextFrame.y;\n\t\t\t    float value1 = lastFrame.w;\n\t\t\t    float value2 = nextFrame.w;\n\t\t\t    width = hermiteInterpolate(t, outTangent, inTangent, duration, value1, value2);\n\t\t\t    break;\n\t\t\t}\n\t\t}\n\t}\n    return width;\n}","import { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { Color } from \"../../../../maths/Color\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { ShaderDataType } from \"../../../../RenderDriver/DriverDesign/RenderDevice/ShaderData\";\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\nimport TrailVertexUtilGLSL from \"./Shader/TrailVertexUtil.glsl\";\nimport { VertexTrail } from \"./VertexTrail\";\nexport class TrailShaderCommon {\n    static init() {\n        if (this.inited)\n            return;\n        TrailShaderCommon.CURTIME = Shader3D.propertyNameToID(\"u_CurTime\");\n        TrailShaderCommon.LIFETIME = Shader3D.propertyNameToID(\"u_LifeTime\");\n        TrailShaderCommon.WIDTHCURVE = Shader3D.propertyNameToID(\"u_WidthCurve\");\n        TrailShaderCommon.WIDTHCURVEKEYLENGTH = Shader3D.propertyNameToID(\"u_WidthCurveKeyLength\");\n        const spriteParms = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"TrailRender\");\n        spriteParms.addShaderUniform(TrailShaderCommon.CURTIME, \"u_CurTime\", ShaderDataType.Float);\n        spriteParms.addShaderUniform(TrailShaderCommon.LIFETIME, \"u_LifeTime\", ShaderDataType.Float);\n        spriteParms.addShaderUniform(TrailShaderCommon.WIDTHCURVE, \"u_WidthCurve\", ShaderDataType.Buffer);\n        spriteParms.addShaderUniform(TrailShaderCommon.WIDTHCURVEKEYLENGTH, \"u_WidthCurveKeyLength\", ShaderDataType.Int);\n        TrailShaderCommon.attributeMap = {\n            'a_position': [VertexTrail.TRAIL_POSITION0, ShaderDataType.Vector4],\n            'a_OffsetVector': [VertexTrail.TRAIL_OFFSETVECTOR, ShaderDataType.Vector3],\n            'a_Texcoord0X': [VertexTrail.TRAIL_TEXTURECOORDINATE0X, ShaderDataType.Float],\n            'a_Texcoord0Y': [VertexTrail.TRAIL_TEXTURECOORDINATE0Y, ShaderDataType.Float],\n            'a_BirthTime': [VertexTrail.TRAIL_TIME0, ShaderDataType.Float],\n            'a_Color': [VertexTrail.TRAIL_COLOR, ShaderDataType.Vector4],\n        };\n        TrailShaderCommon.uniformMap = {\n            \"u_TilingOffset\": ShaderDataType.Vector4,\n            \"u_MainTexture\": ShaderDataType.Texture2D,\n            \"u_MainColor\": ShaderDataType.Color,\n        };\n        TrailShaderCommon.defaultValue = {\n            \"u_MainColor\": Color.WHITE,\n            \"u_TilingOffset\": new Vector4(1, 1, 0, 0),\n        };\n        Shader3D.addInclude(\"TrailVertexUtil.glsl\", TrailVertexUtilGLSL);\n        VertexTrail.__init__();\n        this.inited = true;\n    }\n}\nTrailShaderCommon.inited = false;\n","import { Color } from \"../../../maths/Color\";\nimport { FloatKeyframe } from \"../../../maths/FloatKeyframe\";\nimport { Gradient } from \"../../../maths/Gradient\";\nimport { GradientMode } from \"../../../maths/GradientMode\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { TrailGeometry } from \"./Trail/TrailGeometry\";\nimport { TrailShaderCommon } from \"./Trail/TrailShaderCommon\";\nimport { TrailTextureMode } from \"./Trail/TrailTextureMode\";\nexport class TrailBaseFilter {\n    get time() {\n        return this._time;\n    }\n    set time(value) {\n        this._time = value;\n        this._nodeShaderData.setNumber(TrailShaderCommon.LIFETIME, value);\n    }\n    get minVertexDistance() {\n        return this._minVertexDistance;\n    }\n    set minVertexDistance(value) {\n        this._minVertexDistance = value;\n    }\n    get widthMultiplier() {\n        return this._widthMultiplier;\n    }\n    set widthMultiplier(value) {\n        this._widthMultiplier = value;\n    }\n    get widthCurve() {\n        return this._widthCurve;\n    }\n    set widthCurve(value) {\n        this._widthCurve = value;\n        var widthCurveFloatArray = new Float32Array(value.length * 4);\n        var i, j, index = 0;\n        for (i = 0, j = value.length; i < j; i++) {\n            widthCurveFloatArray[index++] = value[i].time;\n            widthCurveFloatArray[index++] = value[i].inTangent;\n            widthCurveFloatArray[index++] = value[i].outTangent;\n            widthCurveFloatArray[index++] = value[i].value;\n        }\n        this._nodeShaderData.setBuffer(TrailShaderCommon.WIDTHCURVE, widthCurveFloatArray);\n        this._nodeShaderData.setInt(TrailShaderCommon.WIDTHCURVEKEYLENGTH, value.length);\n    }\n    get colorGradient() {\n        return this._colorGradient;\n    }\n    set colorGradient(value) {\n        this._colorGradient = value;\n    }\n    get textureMode() {\n        return this._textureMode;\n    }\n    set textureMode(value) {\n        this._textureMode = value;\n    }\n    constructor(nodeShaderData) {\n        this._textureMode = TrailTextureMode.Stretch;\n        this._lastPosition = new Vector3();\n        this._curtime = 0;\n        this._nodeShaderData = nodeShaderData;\n        this._initDefaultData();\n        this._trialGeometry = new TrailGeometry();\n    }\n    _isRender() {\n        return this._trialGeometry._endIndex - this._trialGeometry._activeIndex > 1;\n    }\n    _initDefaultData() {\n        this.time = 5.0;\n        this.minVertexDistance = 0.1;\n        this.widthMultiplier = 1;\n        this.textureMode = TrailTextureMode.Stretch;\n        var widthKeyFrames = [];\n        var widthKeyFrame1 = new FloatKeyframe();\n        widthKeyFrame1.time = 0;\n        widthKeyFrame1.inTangent = 0;\n        widthKeyFrame1.outTangent = 0;\n        widthKeyFrame1.value = 1;\n        widthKeyFrames.push(widthKeyFrame1);\n        var widthKeyFrame2 = new FloatKeyframe();\n        widthKeyFrame2.time = 1;\n        widthKeyFrame2.inTangent = 0;\n        widthKeyFrame2.outTangent = 0;\n        widthKeyFrame2.value = 1;\n        widthKeyFrames.push(widthKeyFrame2);\n        this.widthCurve = widthKeyFrames;\n        var gradient = new Gradient();\n        gradient.mode = GradientMode.Blend;\n        gradient.addColorRGB(0, Color.WHITE);\n        gradient.addColorRGB(1, Color.WHITE);\n        gradient.addColorAlpha(0, 1);\n        gradient.addColorAlpha(1, 1);\n        this.colorGradient = gradient;\n    }\n    destroy() {\n        this._trialGeometry.destroy();\n        this._trialGeometry = null;\n        this._widthCurve = null;\n        this._colorGradient = null;\n    }\n    clear() {\n        this._trialGeometry.clear();\n        this._lastPosition.setValue(0, 0, 0);\n        this._curtime = 0;\n    }\n}\n"],"names":["TrailTextureMode","VertexDeclaration","VertexElement","VertexElementFormat","Vector3","Color","LayaGL","MeshTopology","DrawType","BufferUsage","Shader3D","ShaderDataType","Vector4","FloatKeyframe","Gradient","GradientMode"],"mappings":"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"}