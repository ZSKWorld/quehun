{"version":3,"file":"laya.webgl_2D.js","sources":["../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebDefineDatas.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLEnum/WebGLExtension.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLObject.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLInternalRT.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLInternalTex.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/GLTextureContext.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/GL2TextureContext.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLEnum/WebGLMode.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLParams.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLRenderDrawContext.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLRenderState.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLShaderInstance.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GLVertexState.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/VertexArrayObject.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/GlCapable.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLUniformBufferManager.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLUniformBufferBase.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLUniformBufferDescriptor.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLUniformBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLSubUniformBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebGLShaderData.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebShaderPass.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebSubShader.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebUnitRenderModuleDataFactory.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/2DRenderPass/WebGL2DRenderCMD.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLRenderCMD.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLVertexBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/2DRenderPass/WebGLRenderContext2D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/2DRenderPass/WebGLRenderElement2D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/2DRenderPass/WebGLRender2DProcess.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLBufferState.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLCommandUniformMap.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLEngine/WebGLConfig.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLIndexBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLRenderGeometryElement.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLShaderInstance.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/RenderDevice/WebGLRenderDeviceFactory.js"],"sourcesContent":["export class WebDefineDatas {\n    constructor() {\n        this._mask = [];\n        this._length = 0;\n    }\n    _intersectionDefineDatas(define) {\n        var unionMask = define._mask;\n        var mask = this._mask;\n        for (var i = this._length - 1; i >= 0; i--) {\n            var value = mask[i] & unionMask[i];\n            if (value == 0 && i == this._length - 1)\n                this._length--;\n            else\n                mask[i] = value;\n        }\n    }\n    add(define) {\n        var index = define._index;\n        var size = index + 1;\n        var mask = this._mask;\n        var maskStart = this._length;\n        if (maskStart < size) {\n            (mask.length < size) && (mask.length = size);\n            for (; maskStart < index; maskStart++)\n                mask[maskStart] = 0;\n            mask[index] = define._value;\n            this._length = size;\n        }\n        else {\n            mask[index] |= define._value;\n        }\n    }\n    remove(define) {\n        var index = define._index;\n        var mask = this._mask;\n        var endIndex = this._length - 1;\n        if (index > endIndex)\n            return;\n        var newValue = mask[index] & ~define._value;\n        if (index == endIndex && newValue === 0)\n            this._length--;\n        else\n            mask[index] = newValue;\n    }\n    addDefineDatas(define) {\n        var addMask = define._mask;\n        var size = define._length;\n        var mask = this._mask;\n        var maskStart = this._length;\n        if (maskStart < size) {\n            mask.length = size;\n            for (var i = 0; i < maskStart; i++)\n                mask[i] |= addMask[i];\n            for (; i < size; i++)\n                mask[i] = addMask[i];\n            this._length = size;\n        }\n        else {\n            for (var i = 0; i < size; i++) {\n                mask[i] |= addMask[i];\n            }\n        }\n    }\n    removeDefineDatas(define) {\n        var removeMask = define._mask;\n        var mask = this._mask;\n        var endIndex = this._length - 1;\n        var i = Math.min(define._length, endIndex);\n        for (; i >= 0; i--) {\n            var newValue = mask[i] & ~removeMask[i];\n            if (i == endIndex && newValue === 0) {\n                endIndex--;\n                this._length--;\n            }\n            else {\n                mask[i] = newValue;\n            }\n        }\n    }\n    has(define) {\n        var index = define._index;\n        if (index >= this._length)\n            return false;\n        return (this._mask[index] & define._value) !== 0;\n    }\n    clear() {\n        this._length = 0;\n    }\n    cloneTo(destObject) {\n        var destMask = destObject._mask;\n        var mask = this._mask;\n        var count = this._length;\n        destMask.length = count;\n        for (var i = 0; i < count; i++)\n            destMask[i] = mask[i];\n        destObject._length = count;\n    }\n    clone() {\n        var dest = new WebDefineDatas();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy() {\n        delete this._mask;\n    }\n}\n","export var WebGLExtension;\n(function (WebGLExtension) {\n    WebGLExtension[WebGLExtension[\"OES_vertex_array_object\"] = 0] = \"OES_vertex_array_object\";\n    WebGLExtension[WebGLExtension[\"ANGLE_instanced_arrays\"] = 1] = \"ANGLE_instanced_arrays\";\n    WebGLExtension[WebGLExtension[\"OES_texture_half_float\"] = 2] = \"OES_texture_half_float\";\n    WebGLExtension[WebGLExtension[\"OES_texture_half_float_linear\"] = 3] = \"OES_texture_half_float_linear\";\n    WebGLExtension[WebGLExtension[\"OES_texture_float\"] = 4] = \"OES_texture_float\";\n    WebGLExtension[WebGLExtension[\"OES_element_index_uint\"] = 5] = \"OES_element_index_uint\";\n    WebGLExtension[WebGLExtension[\"OES_texture_float_linear\"] = 6] = \"OES_texture_float_linear\";\n    WebGLExtension[WebGLExtension[\"EXT_color_buffer_half_float\"] = 7] = \"EXT_color_buffer_half_float\";\n    WebGLExtension[WebGLExtension[\"EXT_shader_texture_lod\"] = 8] = \"EXT_shader_texture_lod\";\n    WebGLExtension[WebGLExtension[\"WEBGL_depth_texture\"] = 9] = \"WEBGL_depth_texture\";\n    WebGLExtension[WebGLExtension[\"EXT_sRGB\"] = 10] = \"EXT_sRGB\";\n    WebGLExtension[WebGLExtension[\"EXT_color_buffer_float\"] = 11] = \"EXT_color_buffer_float\";\n    WebGLExtension[WebGLExtension[\"EXT_texture_filter_anisotropic\"] = 12] = \"EXT_texture_filter_anisotropic\";\n    WebGLExtension[WebGLExtension[\"WEBGL_compressed_texture_s3tc\"] = 13] = \"WEBGL_compressed_texture_s3tc\";\n    WebGLExtension[WebGLExtension[\"WEBGL_compressed_texture_s3tc_srgb\"] = 14] = \"WEBGL_compressed_texture_s3tc_srgb\";\n    WebGLExtension[WebGLExtension[\"WEBGL_compressed_texture_pvrtc\"] = 15] = \"WEBGL_compressed_texture_pvrtc\";\n    WebGLExtension[WebGLExtension[\"WEBGL_compressed_texture_etc1\"] = 16] = \"WEBGL_compressed_texture_etc1\";\n    WebGLExtension[WebGLExtension[\"WEBGL_compressed_texture_etc\"] = 17] = \"WEBGL_compressed_texture_etc\";\n    WebGLExtension[WebGLExtension[\"WEBGL_compressed_texture_astc\"] = 18] = \"WEBGL_compressed_texture_astc\";\n    WebGLExtension[WebGLExtension[\"OES_standard_derivatives\"] = 19] = \"OES_standard_derivatives\";\n})(WebGLExtension || (WebGLExtension = {}));\n","export class GLObject {\n    constructor(engine) {\n        this._destroyed = false;\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._id = this._engine._IDCounter++;\n    }\n    get destroyed() {\n        return this._destroyed;\n    }\n    destroy() {\n        if (this._destroyed)\n            return;\n        this._destroyed = true;\n    }\n}\n","import { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { GLObject } from \"./WebGLEngine/GLObject\";\nexport class WebGLInternalRT extends GLObject {\n    get gpuMemory() {\n        return this._gpuMemory;\n    }\n    set gpuMemory(value) {\n        this._changeTexMemory(value);\n        this._gpuMemory = value;\n    }\n    _changeTexMemory(value) {\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, -this._gpuMemory + value);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_ALLRenderTexture, -this._gpuMemory + value);\n    }\n    constructor(engine, colorFormat, depthStencilFormat, isCube, generateMipmap, samples) {\n        super(engine);\n        this._gpuMemory = 0;\n        this.colorFormat = colorFormat;\n        this.depthStencilFormat = depthStencilFormat;\n        this._isCube = isCube;\n        this._generateMipmap = generateMipmap;\n        this._samples = samples;\n        this._textures = [];\n        this._depthTexture = null;\n        this._framebuffer = this._gl.createFramebuffer();\n        if (samples > 1) {\n            this._msaaFramebuffer = this._gl.createFramebuffer();\n        }\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.RC_ALLRenderTexture, 1);\n    }\n    dispose() {\n        this._textures.forEach(tex => {\n            tex && tex.dispose();\n        });\n        this._textures = null;\n        this._depthTexture && this._depthTexture.dispose();\n        this._depthTexture = null;\n        this._framebuffer && this._gl.deleteFramebuffer(this._framebuffer);\n        this._framebuffer = null;\n        this._depthbuffer && this._gl.deleteRenderbuffer(this._depthbuffer);\n        this._depthbuffer = null;\n        this._msaaFramebuffer && this._gl.deleteFramebuffer(this._msaaFramebuffer);\n        this._msaaFramebuffer = null;\n        this._msaaRenderbuffer && this._gl.deleteRenderbuffer(this._msaaRenderbuffer);\n        this._msaaRenderbuffer = null;\n        this._changeTexMemory(0);\n        this._gpuMemory = 0;\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.RC_ALLRenderTexture, -1);\n    }\n}\n","import { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { RenderParams } from \"../../../RenderEngine/RenderEnum/RenderParams\";\nimport { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { TextureCompareMode } from \"../../../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../../RenderEngine/RenderEnum/TextureDimension\";\nimport { WrapMode } from \"../../../RenderEngine/RenderEnum/WrapMode\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { WebGLExtension } from \"./WebGLEngine/GLEnum/WebGLExtension\";\nimport { GLObject } from \"./WebGLEngine/GLObject\";\nexport class WebGLInternalTex extends GLObject {\n    get mipmap() {\n        return this._mipmap;\n    }\n    get mipmapCount() {\n        return this._mipmapCount;\n    }\n    _getSource() {\n        return this.resource;\n    }\n    get gpuMemory() {\n        return this._gpuMemory;\n    }\n    set gpuMemory(value) {\n        this._changeTexMemory(value);\n        this._gpuMemory = value;\n    }\n    constructor(engine, target, width, height, depth, dimension, mipmap, useSRGBLoader, gammaCorrection) {\n        super(engine);\n        this._gpuMemory = 0;\n        this._baseMipmapLevel = 0;\n        this._maxMipmapLevel = 0;\n        this.resource = this._gl.createTexture();\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        const isPot = (value) => {\n            return (value & (value - 1)) === 0;\n        };\n        this.isPotSize = isPot(width) && isPot(height);\n        if (dimension == TextureDimension.Tex3D) {\n            this.isPotSize = this.isPotSize && isPot(this.depth);\n        }\n        switch (dimension) {\n            case TextureDimension.Tex2D:\n                this._statistics_M_Texture = GPUEngineStatisticsInfo.M_Texture2D;\n                this._statistics_RC_Texture = GPUEngineStatisticsInfo.RC_Texture2D;\n                break;\n            case TextureDimension.Tex3D:\n                this._statistics_M_Texture = GPUEngineStatisticsInfo.M_Texture3D;\n                this._statistics_RC_Texture = GPUEngineStatisticsInfo.RC_Texture3D;\n                break;\n            case TextureDimension.Cube:\n                this._statistics_M_Texture = GPUEngineStatisticsInfo.M_TextureCube;\n                this._statistics_RC_Texture = GPUEngineStatisticsInfo.RC_TextureCube;\n                break;\n            case TextureDimension.Texture2DArray:\n                this._statistics_M_Texture = GPUEngineStatisticsInfo.M_Texture2DArray;\n                this._statistics_RC_Texture = GPUEngineStatisticsInfo.RC_Texture2DArray;\n                break;\n        }\n        this._mipmap = mipmap && this.isPotSize;\n        this._mipmapCount = this._mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\n        this._maxMipmapLevel = this._mipmapCount - 1;\n        this._baseMipmapLevel = 0;\n        this.useSRGBLoad = useSRGBLoader;\n        this.gammaCorrection = gammaCorrection;\n        this.target = target;\n        this.filterMode = FilterMode.Bilinear;\n        this.wrapU = WrapMode.Repeat;\n        this.wrapV = WrapMode.Repeat;\n        this.wrapW = WrapMode.Repeat;\n        this.anisoLevel = 4;\n        this.compareMode = TextureCompareMode.None;\n        WebGLEngine.instance._addStatisticsInfo(this._statistics_RC_Texture, 1);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_ALLTexture, 1);\n    }\n    get filterMode() {\n        return this._filterMode;\n    }\n    set filterMode(value) {\n        if (this._filterMode != value && this.resource) {\n            let gl = this._gl;\n            let mipmap = this.mipmap;\n            let min = this.getFilteMinrParam(value, mipmap);\n            this._setTexParameteri(gl.TEXTURE_MIN_FILTER, min);\n            let mag = this.getFilterMagParam(value);\n            this._setTexParameteri(gl.TEXTURE_MAG_FILTER, mag);\n            this._filterMode = value;\n        }\n    }\n    get wrapU() {\n        return this._warpU;\n    }\n    set wrapU(value) {\n        if (this._warpU != value && this.resource) {\n            let gl = this._gl;\n            let warpParam = this.getWrapParam(value);\n            this._setWrapMode(gl.TEXTURE_WRAP_S, warpParam);\n            this._warpU = value;\n        }\n    }\n    get wrapV() {\n        return this._warpV;\n    }\n    set wrapV(value) {\n        if (this._warpV != value && this.resource) {\n            let gl = this._gl;\n            let warpParam = this.getWrapParam(value);\n            this._setWrapMode(gl.TEXTURE_WRAP_T, warpParam);\n            this._warpV = value;\n        }\n    }\n    get wrapW() {\n        return this._warpW;\n    }\n    set wrapW(value) {\n        if (this._warpW != value && this.resource) {\n            if (this._engine.getCapable(RenderCapable.Texture3D)) {\n                let gl = this._gl;\n                let warpParam = this.getWrapParam(value);\n                this._setWrapMode(gl.TEXTURE_WRAP_R, warpParam);\n            }\n            this._warpW = value;\n        }\n    }\n    get anisoLevel() {\n        return this._anisoLevel;\n    }\n    set anisoLevel(value) {\n        let anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\n        if (anisoExt) {\n            let gl = this._gl;\n            let maxAnisoLevel = this._engine.getParams(RenderParams.Max_AnisoLevel_Count);\n            let level = Math.max(1, Math.min(maxAnisoLevel, value));\n            this._setTexParametexf(anisoExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\n            this._anisoLevel = level;\n        }\n        else {\n            this._anisoLevel = 1;\n        }\n    }\n    set baseMipmapLevel(value) {\n        if (this._engine.isWebGL2) {\n            this._setTexParameteri(this._gl.TEXTURE_BASE_LEVEL, value);\n        }\n        this._baseMipmapLevel = value;\n    }\n    get baseMipmapLevel() {\n        return this._baseMipmapLevel;\n    }\n    set maxMipmapLevel(value) {\n        if (this._engine.isWebGL2) {\n            this._setTexParameteri(this._gl.TEXTURE_MAX_LEVEL, value);\n        }\n        this._maxMipmapLevel = value;\n    }\n    get maxMipmapLevel() {\n        return this._maxMipmapLevel;\n    }\n    get compareMode() {\n        return this._compareMode;\n    }\n    set compareMode(value) {\n        this._compareMode = value;\n    }\n    _setTexParameteri(pname, param) {\n        let gl = this._gl;\n        let target = this.target;\n        this._engine._bindTexture(target, this.resource);\n        gl.texParameteri(target, pname, param);\n        this._engine._bindTexture(target, null);\n    }\n    _setTexParametexf(pname, param) {\n        let gl = this._gl;\n        let target = this.target;\n        this._engine._bindTexture(target, this.resource);\n        gl.texParameterf(target, pname, param);\n        this._engine._bindTexture(target, null);\n    }\n    getFilteMinrParam(filterMode, mipmap) {\n        let gl = this._gl;\n        switch (filterMode) {\n            case FilterMode.Point:\n                return mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST;\n            case FilterMode.Bilinear:\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\n            case FilterMode.Trilinear:\n                return mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR;\n            default:\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\n        }\n    }\n    getFilterMagParam(filterMode) {\n        let gl = this._gl;\n        switch (filterMode) {\n            case FilterMode.Point:\n                return gl.NEAREST;\n            case FilterMode.Bilinear:\n                return gl.LINEAR;\n            case FilterMode.Trilinear:\n                return gl.LINEAR;\n            default:\n                return gl.LINEAR;\n        }\n    }\n    getWrapParam(wrapMode) {\n        let gl = this._gl;\n        switch (wrapMode) {\n            case WrapMode.Repeat:\n                return gl.REPEAT;\n            case WrapMode.Clamp:\n                return gl.CLAMP_TO_EDGE;\n            case WrapMode.Mirrored:\n                return gl.MIRRORED_REPEAT;\n            default:\n                return gl.REPEAT;\n        }\n    }\n    _setWrapMode(pname, param) {\n        let gl = this._gl;\n        if (!this.isPotSize) {\n            param = gl.CLAMP_TO_EDGE;\n        }\n        this._setTexParameteri(pname, param);\n    }\n    _changeTexMemory(memory) {\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, -this._gpuMemory + memory);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_ALLTexture, -this._gpuMemory + memory);\n        this._engine._addStatisticsInfo(this._statistics_M_Texture, -this._gpuMemory + memory);\n    }\n    dispose() {\n        let gl = this._gl;\n        gl.deleteTexture(this.resource);\n        this._changeTexMemory(0);\n        this._gpuMemory = 0;\n        WebGLEngine.instance._addStatisticsInfo(this._statistics_RC_Texture, -1);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_ALLTexture, -1);\n    }\n}\n","import { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../../RenderEngine/RenderEnum/TextureFormat\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { WebGLExtension } from \"./WebGLEngine/GLEnum/WebGLExtension\";\nimport { GLObject } from \"./WebGLEngine/GLObject\";\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\nexport class GLTextureContext extends GLObject {\n    constructor(engine) {\n        super(engine);\n        this._glParam = {\n            internalFormat: 0,\n            format: 0,\n            type: 0,\n        };\n        this.needBitmap = false;\n        this._sRGB = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_sRGB);\n        this._oesTextureHalfFloat = this._engine._supportCapatable.getExtension(WebGLExtension.OES_texture_half_float);\n        this._compressdTextureS3tc_srgb = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb);\n        this._compressedTextureEtc1 = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1);\n        this._compressedTextureS3tc = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc);\n        this._compressedTextureETC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc);\n        this._compressedTextureASTC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_astc);\n        this._webgl_depth_texture = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_depth_texture);\n    }\n    createTexture3DInternal(dimension, width, height, depth, format, generateMipmap, sRGB, premultipliedAlpha) {\n        return null;\n    }\n    setTexture3DImageData(texture, source, depth, premultiplyAlpha, invertY) {\n        return null;\n    }\n    setTexture3DPixelsData(texture, source, depth, premultiplyAlpha, invertY) {\n        return null;\n    }\n    setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY) {\n        return null;\n    }\n    glTextureParam(format, useSRGB) {\n        let gl = this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R5G6B5:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\n                break;\n            case TextureFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case TextureFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case TextureFormat.DXT1:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT3:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.DXT5:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC1RGB:\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGBA:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha8:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2RGB_Alpha1:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha1:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC4x4:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC8x8:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC10x10:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC12x12:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC4x4SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC6x6SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC8x8SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC10x10SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.ASTC12x12SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            default:\n                throw \"Unknown Texture Format.\";\n        }\n        return this._glParam;\n    }\n    glRenderTextureParam(format, useSRGB) {\n        let gl = this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\n                break;\n            case RenderTargetFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.DEPTH_16:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_SHORT;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                this._glParam.internalFormat = gl.DEPTH_STENCIL;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = this._webgl_depth_texture.UNSIGNED_INT_24_8_WEBGL;\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.STENCIL_8:\n            default:\n                throw \"render texture format wrong.\";\n        }\n        return this._glParam;\n    }\n    glRenderBufferParam(format, useSRGB) {\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n            case RenderTargetFormat.DEPTH_32:\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n            case RenderTargetFormat.STENCIL_8:\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n            default:\n                return null;\n        }\n    }\n    glRenderTargetAttachment(format) {\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return gl.DEPTH_ATTACHMENT;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return gl.DEPTH_STENCIL_ATTACHMENT;\n            case RenderTargetFormat.DEPTH_32:\n                return gl.DEPTH_ATTACHMENT;\n            case RenderTargetFormat.STENCIL_8:\n                return gl.STENCIL_ATTACHMENT;\n            case RenderTargetFormat.R8G8B8:\n            case RenderTargetFormat.R8G8B8A8:\n            case RenderTargetFormat.R16G16B16:\n            case RenderTargetFormat.R16G16B16A16:\n            case RenderTargetFormat.R32G32B32:\n            case RenderTargetFormat.R32G32B32A32:\n                return gl.COLOR_ATTACHMENT0;\n            default:\n                throw \"render format.\";\n        }\n    }\n    getTarget(dimension) {\n        let gl = this._gl;\n        switch (dimension) {\n            case TextureDimension.Tex2D:\n                return gl.TEXTURE_2D;\n            case TextureDimension.Cube:\n                return gl.TEXTURE_CUBE_MAP;\n            default:\n                throw \"texture dimension wrong in WebGL1.\";\n        }\n    }\n    getFormatPixelsParams(format) {\n        let formatParams = {\n            channels: 0,\n            bytesPerPixel: 0,\n            dataTypedCons: Uint8Array,\n            typedSize: 1\n        };\n        switch (format) {\n            case TextureFormat.R8G8B8A8:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 4;\n                formatParams.dataTypedCons = Uint8Array;\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R8G8B8:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 3;\n                formatParams.dataTypedCons = Uint8Array;\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R5G6B5:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 2;\n                formatParams.dataTypedCons = Uint16Array;\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 6;\n                formatParams.dataTypedCons = Uint16Array;\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16A16:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 8;\n                formatParams.dataTypedCons = Uint16Array;\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R32G32B32:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 12;\n                formatParams.dataTypedCons = Float32Array;\n                formatParams.typedSize = 4;\n                return formatParams;\n            case TextureFormat.R32G32B32A32:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 16;\n                formatParams.dataTypedCons = Float32Array;\n                formatParams.typedSize = 4;\n                return formatParams;\n            default:\n                return formatParams;\n        }\n    }\n    getGLtexMemory(tex, depth = 1) {\n        let gl = this._gl;\n        let channels = 0;\n        let singlebyte = 0;\n        let bytelength = 0;\n        let srgb = this._sRGB ? this._sRGB.SRGB_EXT : gl.RGB;\n        let srgb_alpha = this._sRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\n        switch (tex.internalFormat) {\n            case srgb:\n            case gl.RGB:\n                channels = 3;\n                break;\n            case srgb_alpha:\n            case gl.RGBA:\n                channels = 4;\n                break;\n            default:\n                channels = 0;\n                break;\n        }\n        switch (tex.type) {\n            case gl.UNSIGNED_BYTE:\n                singlebyte = 1;\n                break;\n            case gl.UNSIGNED_SHORT_5_6_5:\n                singlebyte = 2 / 3;\n                break;\n            case gl.FLOAT:\n                singlebyte = 4;\n                break;\n            case this._oesTextureHalfFloat.HALF_FLOAT_OES:\n                singlebyte = 2;\n                break;\n            default:\n                singlebyte = 0;\n                break;\n        }\n        bytelength = channels * singlebyte * tex.width * tex.height;\n        if (tex.mipmap) {\n            bytelength *= 1.333;\n        }\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\n            bytelength *= 6;\n        else if (tex.target == gl.TEXTURE_2D)\n            bytelength *= 1;\n        return bytelength;\n    }\n    getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, cube) {\n        let getpixelbyte = (rtFormat) => {\n            let pixelByte = 0;\n            switch (rtFormat) {\n                case RenderTargetFormat.R8G8B8:\n                    pixelByte = 3;\n                    break;\n                case RenderTargetFormat.R8G8B8A8:\n                    pixelByte = 4;\n                    break;\n                case RenderTargetFormat.R16G16B16A16:\n                    pixelByte = 8;\n                    break;\n                case RenderTargetFormat.R32G32B32:\n                    pixelByte = 12;\n                    break;\n                case RenderTargetFormat.R32G32B32A32:\n                    pixelByte = 16;\n                    break;\n                case RenderTargetFormat.R16G16B16:\n                    pixelByte = 6;\n                    break;\n                case RenderTargetFormat.DEPTH_16:\n                    pixelByte = 2;\n                    break;\n                case RenderTargetFormat.STENCIL_8:\n                    pixelByte = 1;\n                    break;\n                case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                    pixelByte = 4;\n                    break;\n                case RenderTargetFormat.DEPTH_32:\n                    pixelByte = 4;\n                    break;\n            }\n            return pixelByte;\n        };\n        let colorPixelbyte = getpixelbyte(colorFormat);\n        let depthPixelbyte = getpixelbyte(depthStencilFormat);\n        if (multiSamples > 1)\n            colorPixelbyte *= 2;\n        if (cube)\n            colorPixelbyte *= 6;\n        if (generateMipmap)\n            colorPixelbyte *= 1.333;\n        let colorMemory = colorPixelbyte * width * height;\n        let depthMemory = depthPixelbyte * width * height;\n        return colorMemory + depthMemory;\n    }\n    supportSRGB(format, mipmap) {\n        switch (format) {\n            case TextureFormat.R8G8B8:\n            case TextureFormat.R8G8B8A8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\n            default:\n                return false;\n        }\n    }\n    supportGenerateMipmap(format) {\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n            case RenderTargetFormat.DEPTH_32:\n            case RenderTargetFormat.STENCIL_8:\n                return false;\n            default:\n                return true;\n        }\n    }\n    isSRGBFormat(format) {\n        switch (format) {\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.ETC2SRGB_Alpha8:\n            case TextureFormat.ETC2SRGB_Alpha1:\n            case TextureFormat.ASTC4x4SRGB:\n            case TextureFormat.ASTC6x6SRGB:\n            case TextureFormat.ASTC8x8SRGB:\n            case TextureFormat.ASTC10x10SRGB:\n            case TextureFormat.ASTC12x12SRGB:\n                return true;\n            default:\n                return false;\n        }\n    }\n    createTextureInternal(dimension, width, height, format, generateMipmap, sRGB, premultipliedAlpha) {\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n        if (premultipliedAlpha) {\n            useSRGBExt = false;\n        }\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n        let glParam = this.glTextureParam(format, useSRGBExt);\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n        return internalTex;\n    }\n    setTextureImageData(texture, source, premultiplyAlpha, invertY) {\n        if (texture.width != source.width || texture.height != source.height) {\n            console.warn(\"setTextureImageData: size not match\");\n        }\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texImage2D(target, 0, internalFormat, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    setTextureSubImageData(texture, source, x, y, premultiplyAlpha, invertY) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = source.width;\n        let height = source.height;\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texSubImage2D(target, 0, x, y, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    initVideoTextureData(texture) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let gl = texture._gl;\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texImage2D(target, 0, texture.internalFormat, width, height, 0, format, type, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n    }\n    setTexturePixelsData(texture, source, premultiplyAlpha, invertY) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY) {\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source);\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTextureDDSData(texture, ddsInfo) {\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = ddsInfo.mipmapCount;\n        let compressed = ddsInfo.compressed;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\n        let dataTypeConstur = formatParams.dataTypedCons;\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let memory = 0;\n        for (let index = 0; index < mipmapCount; index++) {\n            if (compressed) {\n                let dataLength = (((Math.max(4, mipmapWidth) / 4) * Math.max(4, mipmapHeight)) / 4) * blockBytes;\n                let sourceData = new Uint8Array(source, dataOffset, dataLength);\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                memory += sourceData.length;\n                dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n            }\n            else {\n                let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\n                let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\n                memory += sourceData.length;\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                dataOffset += dataLength * channelsByte;\n            }\n            mipmapWidth *= 0.5;\n            mipmapHeight *= 0.5;\n            mipmapWidth = Math.max(1.0, mipmapWidth);\n            mipmapHeight = Math.max(1.0, mipmapHeight);\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTextureKTXData(texture, ktxInfo) {\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        let width = texture.width;\n        let height = texture.height;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n            dataOffset += 4;\n            if (compressed) {\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                memory += sourceData.length;\n            }\n            else {\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                memory += sourceData.byteLength;\n            }\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\n            if (compressed) {\n            }\n            else {\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\n            }\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTextureHDRData(texture, hdrInfo) {\n        let hdrPixelData = hdrInfo.readScanLine();\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\n    }\n    setCubeImageData(texture, sources, premultiplyAlpha, invertY) {\n        let gl = texture._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        ];\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        this._engine._bindTexture(texture.target, texture.resource);\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texImage2D(target, 0, internalFormat, format, type, sources[index]);\n        }\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    setCubePixelsData(texture, source, premultiplyAlpha, invertY) {\n        let gl = texture._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        ];\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        if (source) {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, source[index]);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        else {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, null);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY) {\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n        let gl = texture._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        ];\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source[index]);\n        }\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setCubeDDSData(texture, ddsInfo) {\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = ddsInfo.mipmapCount;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        fourSize = true;\n        let gl = texture._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n        ];\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\n        let dataTypeConstur = formatParams.dataTypedCons;\n        let memory = 0;\n        if (!ddsInfo.compressed) {\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                let mipmapWidth = width;\n                let mipmapHeight = height;\n                for (let index = 0; index < mipmapCount; index++) {\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                    dataOffset += dataLength * channelsByte;\n                    mipmapWidth *= 0.5;\n                    mipmapHeight *= 0.5;\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\n                }\n            }\n        }\n        else {\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                let mipmapWidth = width;\n                let mipmapHeight = height;\n                for (let index = 0; index < mipmapCount; index++) {\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\n                    (texture.mipmap || index == 0) && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n                    mipmapWidth *= 0.5;\n                    mipmapHeight *= 0.5;\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\n                }\n            }\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setCubeKTXData(texture, ktxInfo) {\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = ktxInfo.mipmapCount;\n        let width = texture.width;\n        let height = texture.height;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = texture._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n        ];\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n            dataOffset += 4;\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                if (compressed) {\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                    gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                else {\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                    let typedSize = imageSize / pixelParams.typedSize;\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                dataOffset += imageSize;\n                dataOffset += 3 - ((imageSize + 3) % 4);\n            }\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\n            for (let face = 0; face < 6; face++) {\n                let target = cubeFace[face];\n                if (compressed) {\n                }\n                else {\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\n                }\n            }\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = memory;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTextureCompareMode(texture, compareMode) {\n        return TextureCompareMode.None;\n    }\n    bindRenderTarget(renderTarget, faceIndex = 0) {\n        this.currentActiveRT && this.unbindRenderTarget(this.currentActiveRT);\n        let gl = this._gl;\n        let framebuffer = renderTarget._framebuffer;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        if (renderTarget._isCube) {\n            let texture = renderTarget._textures[0];\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\n        }\n        this.currentActiveRT = renderTarget;\n    }\n    bindoutScreenTarget() {\n        if (this.currentActiveRT != WebGLEngine._lastFrameBuffer) {\n            this.unbindRenderTarget(this.currentActiveRT);\n        }\n    }\n    unbindRenderTarget(renderTarget) {\n        let gl = renderTarget._gl;\n        if (renderTarget && renderTarget._generateMipmap) {\n            renderTarget._textures.forEach(tex => {\n                let target = tex.target;\n                this._engine._bindTexture(target, tex.resource);\n                gl.generateMipmap(target);\n                this._engine._bindTexture(target, null);\n            });\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        this.currentActiveRT = WebGLEngine._lastFrameBuffer;\n    }\n    createRenderTextureCubeInternal(dimension, size, format, generateMipmap, sRGB) {\n        let useSRGBExt = false;\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n        let gammaCorrection = 1.0;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n        let gl = internalTex._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        ];\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n        for (let index = 0; index < cubeFace.length; index++) {\n            let target = cubeFace[index];\n            gl.texImage2D(target, 0, internalFormat, size, size, 0, glFormat, type, null);\n        }\n        this._engine._bindTexture(internalTex.target, null);\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n        return internalTex;\n    }\n    createRenderTargetInternal(width, height, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        multiSamples = 1;\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\n        renderTarget.colorFormat = colorFormat;\n        renderTarget.depthStencilFormat = depthStencilFormat;\n        renderTarget._textures.push(texture);\n        let framebuffer = renderTarget._framebuffer;\n        let gl = renderTarget._gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n        if (depthBufferParam) {\n            let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n            renderTarget._depthbuffer = depthbuffer;\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        return renderTarget;\n    }\n    createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        multiSamples = 1;\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\n        renderTarget._textures.push(texture);\n        let framebuffer = renderTarget._framebuffer;\n        let gl = renderTarget._gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n        if (depthBufferParam) {\n            let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n            renderTarget._depthbuffer = depthbuffer;\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        return renderTarget;\n    }\n    createRenderbuffer(width, height, internalFormat, samples) {\n        let gl = this._gl;\n        let renderbuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        return renderbuffer;\n    }\n    createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB) {\n        let useSRGBExt = false;\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n        let gammaCorrection = 1.0;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n        let gl = internalTex._gl;\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, glFormat, type, null);\n        this._engine._bindTexture(internalTex.target, null);\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n        return internalTex;\n    }\n    createRenderTargetDepthTexture(renderTarget, dimension, width, height) {\n        let gl = renderTarget._gl;\n        if (renderTarget.depthStencilFormat == RenderTargetFormat.None) {\n            return null;\n        }\n        let depthbuffer = renderTarget._depthbuffer;\n        depthbuffer && gl.deleteRenderbuffer(depthbuffer);\n        renderTarget._depthbuffer = null;\n        let format = renderTarget.depthStencilFormat;\n        let mipmap = renderTarget._generateMipmap;\n        let sRGB = renderTarget.isSRGB;\n        if (renderTarget._depthTexture) {\n            gl.deleteTexture(renderTarget._depthTexture);\n        }\n        let texture = this.createRenderTextureInternal(dimension, width, height, format, mipmap, sRGB);\n        renderTarget._depthTexture = texture;\n        let attachment = this.glRenderTargetAttachment(renderTarget.depthStencilFormat);\n        let framebuffer = renderTarget._framebuffer;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.resource, 0);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        return texture;\n    }\n    readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out) {\n        let gl = renderTarget._gl;\n        this.bindRenderTarget(renderTarget);\n        let frameState = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\n        if (!frameState) {\n            this.unbindRenderTarget(renderTarget);\n            return null;\n        }\n        switch (renderTarget.colorFormat) {\n            case RenderTargetFormat.R8G8B8:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.UNSIGNED_BYTE, out);\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.UNSIGNED_BYTE, out);\n                break;\n            case RenderTargetFormat.R16G16B16:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R32G32B32:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\n                break;\n        }\n        this.unbindRenderTarget(renderTarget);\n        return out;\n    }\n    readRenderTargetPixelDataAsync(renderTarget, xOffset, yOffset, width, height, out) {\n        return Promise.resolve(this.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out));\n    }\n    updateVideoTexture(texture, video, premultiplyAlpha, invertY) {\n        let gl = texture._gl;\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texImage2D(target, 0, internalFormat, format, type, video);\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n}\n","import { GLTextureContext } from \"./GLTextureContext\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\nimport { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../../RenderEngine/RenderEnum/TextureFormat\";\nexport class GL2TextureContext extends GLTextureContext {\n    constructor(engine) {\n        super(engine);\n    }\n    getTarget(dimension) {\n        let target = -1;\n        switch (dimension) {\n            case TextureDimension.Cube:\n                target = this._gl.TEXTURE_CUBE_MAP;\n                break;\n            case TextureDimension.Tex2D:\n                target = this._gl.TEXTURE_2D;\n                break;\n            case TextureDimension.Texture2DArray:\n                target = this._gl.TEXTURE_2D_ARRAY;\n                break;\n            case TextureDimension.Tex3D:\n                target = this._gl.TEXTURE_3D;\n                break;\n            default:\n                throw \"Unknow Texture Target\";\n        }\n        return target;\n    }\n    glTextureParam(format, useSRGB) {\n        let gl = this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case TextureFormat.R5G6B5:\n                this._glParam.internalFormat = gl.RGB565;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\n                break;\n            case TextureFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA32F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB32F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case TextureFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB16F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case TextureFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA16F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case TextureFormat.DXT1:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                break;\n            case TextureFormat.DXT3:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n                break;\n            case TextureFormat.DXT5:\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                break;\n            case TextureFormat.ETC1RGB:\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\n                break;\n            case TextureFormat.ETC2RGBA:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\n                break;\n            case TextureFormat.ETC2RGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\n                break;\n            case TextureFormat.ETC2SRGB:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha8:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\n                break;\n            case TextureFormat.ETC2RGB_Alpha1:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;\n                break;\n            case TextureFormat.ETC2SRGB_Alpha1:\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;\n                break;\n            case TextureFormat.ASTC4x4:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\n                break;\n            case TextureFormat.ASTC6x6:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\n                break;\n            case TextureFormat.ASTC8x8:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\n                break;\n            case TextureFormat.ASTC10x10:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\n                break;\n            case TextureFormat.ASTC12x12:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\n                break;\n            case TextureFormat.ASTC4x4SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\n                break;\n            case TextureFormat.ASTC6x6SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\n                break;\n            case TextureFormat.ASTC8x8SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\n                break;\n            case TextureFormat.ASTC10x10SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\n                break;\n            case TextureFormat.ASTC12x12SRGB:\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\n                break;\n            default:\n                throw \"Unknown Texture Format.\";\n        }\n        return this._glParam;\n    }\n    glRenderBufferParam(format, useSRGB) {\n        let gl = this._gl;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return { internalFormat: gl.DEPTH24_STENCIL8, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\n            case RenderTargetFormat.DEPTH_32:\n                return { internalFormat: gl.DEPTH_COMPONENT32F, attachment: gl.DEPTH_ATTACHMENT };\n            case RenderTargetFormat.STENCIL_8:\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\n            case RenderTargetFormat.R8G8B8:\n                return { internalFormat: useSRGB ? gl.SRGB8 : gl.RGB8, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R8G8B8A8:\n                return { internalFormat: useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R16G16B16:\n                return { internalFormat: gl.RGB16F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R16G16B16A16:\n                return { internalFormat: gl.RGBA16F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R32G32B32:\n                return { internalFormat: gl.RGB32F, attachment: gl.COLOR_ATTACHMENT0 };\n            case RenderTargetFormat.R32G32B32A32:\n                return { internalFormat: gl.RGBA32F, attachment: gl.COLOR_ATTACHMENT0 };\n            default:\n                return null;\n        }\n    }\n    glRenderTextureParam(format, useSRGB) {\n        let gl = this._gl;\n        this._glParam.internalFormat = null;\n        this._glParam.format = null;\n        this._glParam.type = null;\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R8G8B8A8:\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.UNSIGNED_BYTE;\n                break;\n            case RenderTargetFormat.R16G16B16:\n                this._glParam.internalFormat = gl.RGB16F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                this._glParam.internalFormat = gl.RGBA16F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.HALF_FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32:\n                this._glParam.internalFormat = gl.RGB32F;\n                this._glParam.format = gl.RGB;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                this._glParam.internalFormat = gl.RGBA32F;\n                this._glParam.format = gl.RGBA;\n                this._glParam.type = gl.FLOAT;\n                break;\n            case RenderTargetFormat.DEPTH_16:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT16;\n                this._glParam.format = gl.DEPTH_COMPONENT;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                this._glParam.internalFormat = gl.DEPTH24_STENCIL8;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT_24_8;\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT32F;\n                this._glParam.format = this._glParam.internalFormat;\n                this._glParam.type = gl.UNSIGNED_INT;\n                break;\n            case RenderTargetFormat.STENCIL_8:\n                break;\n            default:\n                throw \"depth texture format wrong.\";\n        }\n        return this._glParam;\n    }\n    getGLtexMemory(tex, depth = 1) {\n        let gl = this._gl;\n        let channels = 0;\n        let singlebyte = 0;\n        let bytelength = 0;\n        switch (tex.internalFormat) {\n            case gl.SRGB8:\n            case gl.RGB8:\n            case gl.RGB565:\n            case gl.RGB32F:\n            case gl.RGB16F:\n                channels = 3;\n                break;\n            case gl.SRGB8_ALPHA8:\n            case gl.RGBA8:\n            case gl.RGBA32F:\n            case gl.RGBA16F:\n                channels = 4;\n                break;\n            default:\n                channels = 0;\n                break;\n        }\n        switch (tex.type) {\n            case gl.UNSIGNED_BYTE:\n                singlebyte = 1;\n                break;\n            case gl.UNSIGNED_SHORT_5_6_5:\n                singlebyte = 2 / 3;\n                break;\n            case gl.FLOAT:\n                singlebyte = 4;\n                break;\n            case gl.HALF_FLOAT:\n                singlebyte = 2;\n                break;\n            default:\n                singlebyte = 0;\n                break;\n        }\n        bytelength = channels * singlebyte * tex.width * tex.height;\n        if (tex.mipmap) {\n            bytelength *= 1.333;\n        }\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\n            bytelength *= 6;\n        else if (tex.target == gl.TEXTURE_2D)\n            bytelength *= 1;\n        else if (tex.target == gl.TEXTURE_2D_ARRAY)\n            bytelength *= depth;\n        return bytelength;\n    }\n    supportSRGB(format, mipmap) {\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\n            case TextureFormat.R8G8B8A8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\n            default:\n                return false;\n        }\n    }\n    setTextureImageData(texture, source, premultiplyAlpha, invertY) {\n        if (texture.width != source.width || texture.height != source.height) {\n            console.warn(\"setTextureImageData: size not match\");\n        }\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    setTextureSubImageData(texture, source, x, y, premultiplyAlpha, invertY) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texSubImage2D(target, 0, x, y, source.width, source.height, format, type, source);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    setTexturePixelsData(texture, source, premultiplyAlpha, invertY) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (source) {\n            gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    createTexture3DInternal(dimension, width, height, depth, format, generateMipmap, sRGB, premultipliedAlpha) {\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n        if (premultipliedAlpha) {\n            useSRGBExt = false;\n        }\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, depth, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n        let glParam = this.glTextureParam(format, useSRGBExt);\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n        return internalTex;\n    }\n    setTexture3DImageData(texture, sources, depth, premultiplyAlpha, invertY) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\n        for (let index = 0; index < depth; index++) {\n            gl.texSubImage3D(target, 0, 0, 0, index, width, height, 1, format, type, sources[index]);\n        }\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    setTexture3DPixelsData(texture, source, depth, premultiplyAlpha, invertY) {\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\n        if (source) {\n            gl.texSubImage3D(target, 0, 0, 0, 0, width, height, depth, format, type, source);\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY) {\n        generateMipmap = generateMipmap && mipmapLevel == 0;\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texSubImage3D(target, mipmapLevel, xOffset, yOffset, zOffset, width, height, depth, format, type, source);\n        if (texture.mipmap && generateMipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTextureHDRData(texture, hdrInfo) {\n        let sourceData = hdrInfo.readScanLine();\n        this.setTexturePixelsData(texture, sourceData, false, false);\n    }\n    setTextureKTXData(texture, ktxInfo) {\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        let width = texture.width;\n        let height = texture.height;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        let gl = this._gl;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n            dataOffset += 4;\n            if (compressed) {\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                memory += sourceData.length;\n            }\n            else {\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texSubImage2D(target, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                memory += sourceData.length;\n            }\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = memory;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setCubeImageData(texture, sources, premultiplyAlpha, invertY) {\n        let gl = this._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        ];\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        for (let index = 0; index < cubeFace.length; index++) {\n            let t = cubeFace[index];\n            gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\n        }\n        if (texture.mipmap) {\n            gl.generateMipmap(texture.target);\n        }\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    }\n    setCubePixelsData(texture, source, premultiplyAlpha, invertY) {\n        let gl = this._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n        ];\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = texture.mipmapCount;\n        let fourSize = width % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\n        if (source) {\n            for (let index = 0; index < cubeFace.length; index++) {\n                let t = cubeFace[index];\n                gl.texSubImage2D(t, 0, 0, 0, width, height, format, type, source[index]);\n            }\n            if (texture.mipmap) {\n                gl.generateMipmap(texture.target);\n            }\n        }\n        this._engine._bindTexture(texture.target, null);\n        texture.gpuMemory = this.getGLtexMemory(texture);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setCubeKTXData(texture, ktxInfo) {\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let gl = this._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n        ];\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        let width = texture.width;\n        let height = texture.height;\n        texture.maxMipmapLevel = ktxInfo.mipmapCount - 1;\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n            dataOffset += 4;\n            for (let face = 0; face < 6; face++) {\n                let t = cubeFace[face];\n                if (compressed) {\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                    gl.compressedTexImage2D(t, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                else {\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                    let typedSize = imageSize / pixelParams.typedSize;\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                    gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                    memory += sourceData.byteLength;\n                }\n                dataOffset += imageSize;\n                dataOffset += 3 - ((imageSize + 3) % 4);\n            }\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    getCubeKTXRGBMData(texture, ktxInfo) {\n        let rightFaceData = [];\n        let leftFaceData = [];\n        let upFaceData = [];\n        let downFaceData = [];\n        let backFaceData = [];\n        let frontFaceData = [];\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let gl = this._gl;\n        const cubeFace = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n        ];\n        let target = texture.target;\n        let internalFormat = texture.internalFormat;\n        let format = texture.format;\n        let type = texture.type;\n        let mipmapCount = texture.mipmapCount;\n        let width = texture.width;\n        let height = texture.height;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let fourSize = width % 4 == 0 && height % 4 == 0;\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n        this._engine._bindTexture(texture.target, texture.resource);\n        if (!compressed) {\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\n        }\n        let memory = 0;\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n            dataOffset += 4;\n            for (let face = 0; face < 6; face++) {\n                let t = cubeFace[face];\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\n                let typedSize = imageSize / pixelParams.typedSize;\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\n                memory += sourceData.byteLength;\n            }\n            dataOffset += imageSize;\n            dataOffset += 3 - ((imageSize + 3) % 4);\n        }\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        texture.gpuMemory = memory;\n        this._engine._bindTexture(texture.target, null);\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    }\n    setTextureCompareMode(texture, compareMode) {\n        let gl = this._gl;\n        switch (compareMode) {\n            case TextureCompareMode.LEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.GEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.LESS:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LESS);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.GREATER:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GREATER);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.EQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.EQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.NOTEQUAL:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NOTEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.ALWAYS:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.ALWAYS);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.NEVER:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NEVER);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n                break;\n            case TextureCompareMode.None:\n            default:\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.NONE);\n                break;\n        }\n        return compareMode;\n    }\n    createRenderbuffer(width, height, internalFormat, samples) {\n        let gl = this._gl;\n        let renderbuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n        if (samples > 1) {\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\n        }\n        else {\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n        }\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        return renderbuffer;\n    }\n    createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB) {\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n        let gammaCorrection = 1.0;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n        let gl = this._gl;\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, width, height);\n        this._engine._bindTexture(internalTex.target, null);\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            internalTex.filterMode = FilterMode.Point;\n        }\n        return internalTex;\n    }\n    createRenderTargetInternal(width, height, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\n        renderTarget._textures.push(texture);\n        let gl = renderTarget._gl;\n        if (renderTarget._samples > 1) {\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, sRGB);\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(width, height, renderbufferParam.internalFormat, renderTarget._samples);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        }\n        return renderTarget;\n    }\n    createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\n        renderTarget.colorFormat = colorFormat;\n        renderTarget.depthStencilFormat = depthStencilFormat;\n        renderTarget._textures.push(texture);\n        renderTarget.isSRGB = sRGB;\n        let gl = renderTarget._gl;\n        if (renderTarget._samples > 1) {\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, false);\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(size, size, renderbufferParam.internalFormat, renderTarget._samples);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\n            if (depthBufferParam) {\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\n                renderTarget._depthbuffer = depthbuffer;\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\n            }\n            gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        }\n        return renderTarget;\n    }\n    createRenderTextureCubeInternal(dimension, size, format, generateMipmap, sRGB) {\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\n        let gammaCorrection = 1.0;\n        let target = this.getTarget(dimension);\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\n        internalTex.internalFormat = glParam.internalFormat;\n        internalTex.format = glParam.format;\n        internalTex.type = glParam.type;\n        let internalFormat = internalTex.internalFormat;\n        let glFormat = internalTex.format;\n        let type = internalTex.type;\n        let gl = this._gl;\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, size, size);\n        this._engine._bindTexture(internalTex.target, null);\n        return internalTex;\n    }\n    bindRenderTarget(renderTarget, faceIndex = 0) {\n        this.currentActiveRT && this.unbindRenderTarget(this.currentActiveRT);\n        let gl = this._gl;\n        if (renderTarget._isCube) {\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n            let texture = renderTarget._textures[0];\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\n        }\n        if (renderTarget._samples > 1) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._msaaFramebuffer);\n        }\n        else {\n            let framebuffer = renderTarget._framebuffer;\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        }\n        this.currentActiveRT = renderTarget;\n    }\n    unbindRenderTarget(renderTarget) {\n        let gl = this._gl;\n        if (renderTarget && renderTarget._samples > 1) {\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, renderTarget._msaaFramebuffer);\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, renderTarget._framebuffer);\n            let texture = renderTarget._textures[0];\n            let biltMask = gl.COLOR_BUFFER_BIT;\n            if (renderTarget._depthTexture) {\n                biltMask |= gl.DEPTH_BUFFER_BIT;\n            }\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, biltMask, gl.NEAREST);\n        }\n        if (renderTarget && renderTarget._generateMipmap) {\n            renderTarget._textures.forEach(tex => {\n                let target = tex.target;\n                this._engine._bindTexture(target, tex.resource);\n                gl.generateMipmap(target);\n                this._engine._bindTexture(target, null);\n            });\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, WebGLEngine._lastFrameBuffer_WebGLOBJ);\n        this.currentActiveRT = WebGLEngine._lastFrameBuffer;\n    }\n}\n","import { BufferTargetType, BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { GPUEngineStatisticsInfo } from \"../../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { WebGLEngine } from \"../WebGLEngine\";\nimport { GLObject } from \"./GLObject\";\nexport class GLBuffer extends GLObject {\n    constructor(engine, targetType, bufferUsageType) {\n        super(engine);\n        this._byteLength = 0;\n        this._glTargetType = targetType;\n        this._glBufferUsageType = bufferUsageType;\n        this._getGLTarget(this._glTargetType);\n        this._getGLUsage(this._glBufferUsageType);\n        this._glBuffer = this._gl.createBuffer();\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_GPUBuffer, 1);\n    }\n    _getGLUsage(usage) {\n        switch (usage) {\n            case BufferUsage.Static:\n                this._glUsage = this._gl.STATIC_DRAW;\n                break;\n            case BufferUsage.Dynamic:\n                this._glUsage = this._gl.DYNAMIC_DRAW;\n                break;\n            case BufferUsage.Stream:\n                this._glUsage = this._gl.STREAM_DRAW;\n                break;\n            default:\n                console.error(\"usage is not standard\");\n                break;\n        }\n    }\n    _getGLTarget(target) {\n        switch (target) {\n            case BufferTargetType.ARRAY_BUFFER:\n                this._glTarget = this._gl.ARRAY_BUFFER;\n                break;\n            case BufferTargetType.UNIFORM_BUFFER:\n                this._glTarget = this._gl.UNIFORM_BUFFER;\n                break;\n            case BufferTargetType.ELEMENT_ARRAY_BUFFER:\n                this._glTarget = this._gl.ELEMENT_ARRAY_BUFFER;\n                break;\n            default:\n                break;\n        }\n    }\n    _memorychange(bytelength) {\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUBuffer, -this._byteLength + bytelength);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, -this._byteLength + bytelength);\n    }\n    bindBuffer() {\n        if (this._engine._getbindBuffer(this._glTargetType) != this) {\n            this._gl.bindBuffer(this._glTarget, this._glBuffer);\n            this._engine._setbindBuffer(this._glTargetType, this);\n            return true;\n        }\n        return false;\n    }\n    unbindBuffer() {\n        if (this._engine._getbindBuffer(this._glTargetType) == this) {\n            this._gl.bindBuffer(this._glTarget, null);\n            this._engine._setbindBuffer(this._glTargetType, null);\n        }\n    }\n    orphanStorage() {\n        this.bindBuffer();\n        this.setDataLength(this._byteLength);\n    }\n    setDataLength(srcData) {\n        let gl = this._gl;\n        this.bindBuffer();\n        this._memorychange(srcData);\n        this._byteLength = srcData;\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n        this.unbindBuffer();\n    }\n    setData(srcData, offset) {\n        let gl = this._gl;\n        this.bindBuffer();\n        gl.bufferSubData(this._glTarget, offset, srcData);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.C_GeometryBufferUploadCount, 1);\n        this.unbindBuffer();\n    }\n    setDataEx(srcData, offset, length) {\n        let gl = this._gl;\n        this.bindBuffer();\n        gl.bufferSubData(this._glTarget, offset, srcData, 0, length);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.C_GeometryBufferUploadCount, 1);\n        this.unbindBuffer();\n    }\n    bindBufferBase(glPointer) {\n        const gl = this._gl;\n        let bindInfo = this._engine._uboBindingMap[glPointer];\n        if (bindInfo && bindInfo.buffer != this._glBuffer) {\n            if (this._engine._getbindBuffer(this._glTargetType) != this) {\n                this._engine._setbindBuffer(this._glTargetType, this);\n            }\n            gl.bindBufferBase(this._glTarget, glPointer, this._glBuffer);\n            bindInfo.buffer = this._glBuffer;\n            bindInfo.offset = 0;\n            bindInfo.size = this._byteLength;\n        }\n    }\n    bindBufferRange(glPointer, offset, byteCount) {\n        const gl = this._gl;\n        let bindInfo = this._engine._uboBindingMap[glPointer];\n        if (bindInfo) {\n            if (bindInfo.buffer != this._glBuffer || bindInfo.offset != offset || bindInfo.size != byteCount) {\n                if (this._engine._getbindBuffer(this._glTargetType) != this) {\n                    this._engine._setbindBuffer(this._glTargetType, this);\n                }\n                gl.bindBufferRange(this._glTarget, glPointer, this._glBuffer, offset, byteCount);\n                bindInfo.buffer = this._glBuffer;\n                bindInfo.offset = offset;\n                bindInfo.size = byteCount;\n            }\n        }\n    }\n    resizeBuffer(dataLength) {\n        this.bindBuffer();\n        const gl = this._gl;\n        this._byteLength = dataLength;\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\n    }\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_GPUBuffer, -1);\n        gl.deleteBuffer(this._glBuffer);\n        this._memorychange(0);\n        this._byteLength = 0;\n        this._engine = null;\n        this._glBuffer = null;\n        this._glTarget = null;\n        this._glUsage = null;\n        this._gl = null;\n    }\n}\n","export var WebGLMode;\n(function (WebGLMode) {\n    WebGLMode[WebGLMode[\"Auto\"] = 0] = \"Auto\";\n    WebGLMode[WebGLMode[\"WebGL2\"] = 1] = \"WebGL2\";\n    WebGLMode[WebGLMode[\"WebGL1\"] = 2] = \"WebGL1\";\n})(WebGLMode || (WebGLMode = {}));\n","import { RenderCapable } from \"../../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { RenderParams } from \"../../../../RenderEngine/RenderEnum/RenderParams\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nexport class GLParams {\n    constructor(engine) {\n        this._engine = engine;\n        this._gl = this._engine.gl;\n        this._initParams();\n    }\n    _initParams() {\n        const gl = this._gl;\n        this._glParamsData = new Map();\n        this._glParamsData.set(RenderParams.Max_Active_Texture_Count, gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));\n        const maxVertexUniform = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n        const maxFragUniform = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n        this._glParamsData.set(RenderParams.Max_Uniform_Count, Math.min(maxVertexUniform, maxFragUniform));\n        this._glParamsData.set(RenderParams.MAX_Texture_Size, gl.getParameter(gl.MAX_TEXTURE_SIZE));\n        this._glParamsData.set(RenderParams.MAX_Texture_Image_Uint, gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\n        if (this._engine.getCapable(RenderCapable.Texture_anisotropic)) {\n            const anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\n            this._glParamsData.set(RenderParams.Max_AnisoLevel_Count, gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\n        }\n        if (this._engine.isWebGL2)\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL, 35);\n        else\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL, 30);\n        this._glParamsData.set(RenderParams.FLOAT, gl.FLOAT);\n        this._glParamsData.set(RenderParams.UNSIGNED_BYTE, gl.UNSIGNED_BYTE);\n        this._glParamsData.set(RenderParams.UNSIGNED_SHORT, gl.UNSIGNED_SHORT);\n        this._glParamsData.set(RenderParams.BYTE, gl.BYTE);\n    }\n    getParams(params) {\n        return this._glParamsData.get(params);\n    }\n}\n","import { DrawType } from \"../../../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { MeshTopology } from \"../../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { GPUEngineStatisticsInfo } from \"../../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nexport class GLRenderDrawContext extends GLObject {\n    constructor(engine) {\n        super(engine);\n        if (!this._engine.isWebGL2) {\n            this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\n        }\n    }\n    getMeshTopology(mode) {\n        switch (mode) {\n            case MeshTopology.Points:\n                return this._gl.POINTS;\n            case MeshTopology.Lines:\n                return this._gl.LINES;\n            case MeshTopology.LineLoop:\n                return this._gl.LINE_LOOP;\n            case MeshTopology.LineStrip:\n                return this._gl.LINE_STRIP;\n            case MeshTopology.Triangles:\n                return this._gl.TRIANGLES;\n            case MeshTopology.TriangleStrip:\n                return this._gl.TRIANGLE_STRIP;\n            case MeshTopology.TriangleFan:\n                return this._gl.TRIANGLE_FAN;\n        }\n    }\n    getIndexType(type) {\n        switch (type) {\n            case IndexFormat.UInt8:\n                return this._gl.UNSIGNED_BYTE;\n            case IndexFormat.UInt16:\n                return this._gl.UNSIGNED_SHORT;\n            case IndexFormat.UInt32:\n                return this._gl.UNSIGNED_INT;\n        }\n    }\n    drawElementsInstanced(mode, count, type, offset, instanceCount) {\n        if (this._engine.isWebGL2)\n            this._gl.drawElementsInstanced(mode, count, type, offset, instanceCount);\n        else\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_DrawCallCount, 1);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, count / 3 * instanceCount);\n    }\n    drawArraysInstanced(mode, first, count, instanceCount) {\n        if (this._engine.isWebGL2)\n            this._gl.drawArraysInstanced(mode, first, count, instanceCount);\n        else\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_DrawCallCount, 1);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, (count - 2) * instanceCount);\n    }\n    drawArrays(mode, first, count) {\n        this._gl.drawArrays(mode, first, count);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_DrawCallCount, 1);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, (count - 2));\n    }\n    drawElements(mode, count, type, offset) {\n        this._gl.drawElements(mode, count, type, offset);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_DrawCallCount, 1);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, count / 3);\n    }\n    drawElements2DTemp(mode, count, type, offset) {\n        mode = this.getMeshTopology(mode);\n        type = this.getIndexType(type);\n        this._gl.drawElements(mode, count, type, offset);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_DrawCallCount, 1);\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, count / 3);\n    }\n    drawGeometryElement(geometryElement) {\n        geometryElement.bufferState.bind();\n        let element = geometryElement.drawParams.elements;\n        let length = geometryElement.drawParams.length;\n        switch (geometryElement.drawType) {\n            case DrawType.DrawArray:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawArrays(geometryElement._glmode, element[i], element[i + 1]);\n                }\n                break;\n            case DrawType.DrawElement:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawElements(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i]);\n                }\n                break;\n            case DrawType.DrawArrayInstance:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawArraysInstanced(geometryElement._glmode, element[i], element[i + 1], geometryElement.instanceCount);\n                }\n                break;\n            case DrawType.DrawElementInstance:\n                for (let i = 0; i < length; i += 2) {\n                    this.drawElementsInstanced(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i], geometryElement.instanceCount);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { BlendEquationSeparate } from \"../../../../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../../../../RenderEngine/RenderEnum/BlendFactor\";\nimport { CompareFunction } from \"../../../../RenderEngine/RenderEnum/CompareFunction\";\nimport { CullMode } from \"../../../../RenderEngine/RenderEnum/CullMode\";\nimport { StencilOperation } from \"../../../../RenderEngine/RenderEnum/StencilOperation\";\nexport class GLRenderState {\n    constructor(engine) {\n        this._engine = engine;\n        this._gl = this._engine.gl;\n    }\n    _initState() {\n        this.setDepthFunc(CompareFunction.Less);\n        this.setBlendEquationSeparate(BlendEquationSeparate.ADD, BlendEquationSeparate.ADD);\n        this._blendEquation = BlendEquationSeparate.ADD;\n        this._sFactor = BlendFactor.One;\n        this._dFactor = BlendFactor.Zero;\n        this._sFactorAlpha = BlendFactor.One;\n        this._dFactorAlpha = BlendFactor.One;\n    }\n    _getBlendFactor(factor) {\n        const gl = this._gl;\n        switch (factor) {\n            case BlendFactor.Zero:\n                return gl.ZERO;\n            case BlendFactor.One:\n                return gl.ONE;\n            case BlendFactor.SourceColor:\n                return gl.SRC_COLOR;\n            case BlendFactor.OneMinusSourceColor:\n                return gl.ONE_MINUS_SRC_COLOR;\n            case BlendFactor.DestinationColor:\n                return gl.DST_COLOR;\n            case BlendFactor.OneMinusDestinationColor:\n                return gl.ONE_MINUS_DST_COLOR;\n            case BlendFactor.SourceAlpha:\n                return gl.SRC_ALPHA;\n            case BlendFactor.OneMinusSourceAlpha:\n                return gl.ONE_MINUS_SRC_ALPHA;\n            case BlendFactor.DestinationAlpha:\n                return gl.DST_ALPHA;\n            case BlendFactor.OneMinusDestinationAlpha:\n                return gl.ONE_MINUS_DST_ALPHA;\n            case BlendFactor.SourceAlphaSaturate:\n                return gl.SRC_ALPHA_SATURATE;\n            case BlendFactor.BlendColor:\n                return gl.CONSTANT_COLOR;\n            case BlendFactor.OneMinusBlendColor:\n                return gl.ONE_MINUS_CONSTANT_COLOR;\n        }\n    }\n    _getBlendOperation(factor) {\n        const gl = this._gl;\n        switch (factor) {\n            case BlendEquationSeparate.ADD:\n                return gl.FUNC_ADD;\n            case BlendEquationSeparate.SUBTRACT:\n                return gl.FUNC_SUBTRACT;\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\n                return gl.FUNC_REVERSE_SUBTRACT;\n            default:\n                throw \"Unknow type\";\n        }\n    }\n    _getGLCompareFunction(compareFunction) {\n        const gl = this._gl;\n        switch (compareFunction) {\n            case CompareFunction.Never:\n                return gl.NEVER;\n            case CompareFunction.Less:\n                return gl.LESS;\n            case CompareFunction.Equal:\n                return gl.EQUAL;\n            case CompareFunction.LessEqual:\n                return gl.LEQUAL;\n            case CompareFunction.Greater:\n                return gl.GREATER;\n            case CompareFunction.NotEqual:\n                return gl.NOTEQUAL;\n            case CompareFunction.GreaterEqual:\n                return gl.GEQUAL;\n            case CompareFunction.Always:\n                return gl.ALWAYS;\n            default:\n                return gl.LEQUAL;\n        }\n    }\n    _getGLStencilOperation(compareFunction) {\n        const gl = this._gl;\n        switch (compareFunction) {\n            case StencilOperation.Keep:\n                return gl.KEEP;\n            case StencilOperation.Zero:\n                return gl.ZERO;\n            case StencilOperation.Replace:\n                return gl.REPLACE;\n            case StencilOperation.IncrementSaturate:\n                return gl.INCR;\n            case StencilOperation.DecrementSaturate:\n                return gl.DECR;\n            case StencilOperation.Invert:\n                return gl.INVERT;\n            case StencilOperation.IncrementWrap:\n                return gl.INCR_WRAP;\n            case StencilOperation.DecrementWrap:\n                return gl.DECR_WRAP;\n        }\n    }\n    _getGLFrontfaceFactor(cullmode) {\n        if (cullmode == CullMode.Front)\n            return this._gl.CCW;\n        else\n            return this._gl.CW;\n    }\n    setDepthTest(value) {\n        value !== this._depthTest && (this._depthTest = value, value ? this._gl.enable(this._gl.DEPTH_TEST) : this._gl.disable(this._gl.DEPTH_TEST));\n    }\n    setDepthMask(value) {\n        value !== this._depthMask && (this._depthMask = value, this._gl.depthMask(value));\n    }\n    setDepthFunc(value) {\n        value !== this._depthFunc && (this._depthFunc = value, this._gl.depthFunc(this._getGLCompareFunction(value)));\n    }\n    setStencilTest(value) {\n        value !== this._stencilTest && (this._stencilTest = value, value ? this._gl.enable(this._gl.STENCIL_TEST) : this._gl.disable(this._gl.STENCIL_TEST));\n    }\n    setStencilMask(value) {\n        value !== this._stencilMask && (this._stencilMask = value, value ? this._gl.stencilMask(0xff) : this._gl.stencilMask(0x00));\n    }\n    setStencilFunc(fun, ref) {\n        if (fun != this._stencilFunc || ref != this._stencilRef) {\n            this._stencilFunc = fun;\n            this._stencilRef = ref;\n            this._gl.stencilFunc(this._getGLCompareFunction(fun), ref, 0xff);\n        }\n    }\n    setstencilOp(fail, zfail, zpass) {\n        if (this._stencilOp_fail != fail || this._stencilOp_zfail != zfail || this._stencilOp_zpass != zpass) {\n            this._stencilOp_fail = fail;\n            this._stencilOp_zfail = zfail;\n            this._stencilOp_zpass = zpass;\n            this._gl.stencilOp(this._getGLStencilOperation(fail), this._getGLStencilOperation(zfail), this._getGLStencilOperation(zpass));\n        }\n    }\n    setBlend(value) {\n        value !== this._blend && (this._blend = value, value ? this._gl.enable(this._gl.BLEND) : this._gl.disable(this._gl.BLEND));\n    }\n    setBlendEquation(blendEquation) {\n        if (blendEquation !== this._blendEquation) {\n            this._blendEquation = blendEquation;\n            this._blendEquationRGB = this._blendEquationAlpha = null;\n            this._gl.blendEquation(this._getBlendOperation(blendEquation));\n        }\n    }\n    setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha) {\n        if (blendEquationRGB !== this._blendEquationRGB || blendEquationAlpha !== this._blendEquationAlpha) {\n            this._blendEquationRGB = blendEquationRGB;\n            this._blendEquationAlpha = blendEquationAlpha;\n            this._blendEquation = null;\n            this._gl.blendEquationSeparate(this._getBlendOperation(blendEquationRGB), this._getBlendOperation(blendEquationAlpha));\n        }\n    }\n    setBlendFunc(sFactor, dFactor, force = false) {\n        if (force || sFactor !== this._sFactor || dFactor !== this._dFactor) {\n            this._sFactor = sFactor;\n            this._dFactor = dFactor;\n            this._sFactorRGB = null;\n            this._dFactorRGB = null;\n            this._sFactorAlpha = null;\n            this._dFactorAlpha = null;\n            this._gl.blendFunc(this._getBlendFactor(sFactor), this._getBlendFactor(dFactor));\n        }\n    }\n    setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (srcRGB !== this._sFactorRGB || dstRGB !== this._dFactorRGB || srcAlpha !== this._sFactorAlpha || dstAlpha !== this._dFactorAlpha) {\n            this._sFactorRGB = srcRGB;\n            this._dFactorRGB = dstRGB;\n            this._sFactorAlpha = srcAlpha;\n            this._dFactorAlpha = dstAlpha;\n            this._sFactor = null;\n            this._dFactor = null;\n            this._gl.blendFuncSeparate(this._getBlendFactor(srcRGB), this._getBlendFactor(dstRGB), this._getBlendFactor(srcAlpha), this._getBlendFactor(dstAlpha));\n        }\n    }\n    setCullFace(value) {\n        value !== this._cullFace && (this._cullFace = value, value ? this._gl.enable(this._gl.CULL_FACE) : this._gl.disable(this._gl.CULL_FACE));\n    }\n    setFrontFace(value) {\n        value !== this._frontFace && (this._frontFace = value, this._gl.frontFace(this._getGLFrontfaceFactor(value)));\n    }\n}\n","import { GPUEngineStatisticsInfo } from \"../../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { ShaderVariable } from \"../../../../RenderEngine/RenderShader/ShaderVariable\";\nimport { Texture2D } from \"../../../../resource/Texture2D\";\nimport { TextureCube } from \"../../../../resource/TextureCube\";\nimport { WebGLEngine } from \"../WebGLEngine\";\nimport { GLObject } from \"./GLObject\";\nexport class GLShaderInstance extends GLObject {\n    constructor(engine, vs, ps, attributeMap) {\n        super(engine);\n        this._vs = vs;\n        this._ps = ps;\n        this._attributeMap = attributeMap;\n        this._uniformMap = [];\n        this._create();\n    }\n    _create() {\n        WebGLEngine._lastShaderError = null;\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.C_ShaderCompile, 1);\n        let preTime = performance.now();\n        const gl = this._gl;\n        if (WebGLEngine.instance.lost) {\n            return;\n        }\n        let prog = this._program = gl.createProgram();\n        let compileErr;\n        this._vshader = this._createShader(gl, this._vs, gl.VERTEX_SHADER);\n        if (!gl.getShaderParameter(this._vshader, gl.COMPILE_STATUS))\n            compileErr = gl.getShaderInfoLog(this._vshader);\n        this._pshader = this._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\n        if (!gl.getShaderParameter(this._pshader, gl.COMPILE_STATUS)) {\n            if (compileErr)\n                compileErr += \"\\n\";\n            compileErr += gl.getShaderInfoLog(this._pshader);\n        }\n        gl.attachShader(prog, this._vshader);\n        gl.attachShader(prog, this._pshader);\n        if (compileErr) {\n            WebGLEngine._lastShaderError = compileErr;\n            return;\n        }\n        for (var k in this._attributeMap)\n            gl.bindAttribLocation(prog, this._attributeMap[k][0], k);\n        gl.linkProgram(prog);\n        if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n            WebGLEngine._lastShaderError = gl.getProgramInfoLog(prog);\n            return;\n        }\n        const nUniformNum = gl.getProgramParameter(prog, gl.ACTIVE_UNIFORMS);\n        this.useProgram();\n        this._curActTexIndex = 0;\n        let one, i;\n        for (i = 0; i < nUniformNum; i++) {\n            var uniformData = gl.getActiveUniform(prog, i);\n            var uniName = uniformData.name;\n            let location = gl.getUniformLocation(prog, uniName);\n            if (!location && location != 0)\n                continue;\n            one = new ShaderVariable();\n            one.location = location;\n            if (uniName.indexOf('[0]') > 0) {\n                one.name = uniName = uniName.substr(0, uniName.length - 3);\n                one.isArray = true;\n            }\n            else {\n                one.name = uniName;\n                one.isArray = false;\n            }\n            one.type = uniformData.type;\n            this._addShaderUnifiormFun(one);\n            this._uniformMap.push(one);\n            one.dataOffset = this._engine.propertyNameToID(uniName);\n        }\n        if (this._engine.isWebGL2) {\n            const gl2 = gl;\n            this._uniformObjectMap = {};\n            var nUniformBlock = gl.getProgramParameter(prog, gl.ACTIVE_UNIFORM_BLOCKS);\n            for (i = 0; i < nUniformBlock; i++) {\n                var uniformBlockName = gl2.getActiveUniformBlockName(this._program, i);\n                one = new ShaderVariable();\n                one.name = uniformBlockName;\n                one.isArray = false;\n                one.type = gl.UNIFORM_BUFFER;\n                one.dataOffset = this._engine.propertyNameToID(uniformBlockName);\n                let location = one.location = gl2.getUniformBlockIndex(prog, uniformBlockName);\n                let bindingPoint = i;\n                gl2.uniformBlockBinding(this._program, location, bindingPoint);\n                this._uniformObjectMap[one.name] = one;\n                this._uniformMap.push(one);\n                this._addShaderUnifiormFun(one);\n            }\n        }\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.T_ShaderCompile, (performance.now() - preTime) | 0);\n        this._complete = true;\n    }\n    _createShader(gl, str, type) {\n        let shader = gl.createShader(type);\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n        return shader;\n    }\n    _addShaderUnifiormFun(one) {\n        var gl = this._gl;\n        one.caller = this;\n        var isArray = one.isArray;\n        switch (one.type) {\n            case gl.BOOL:\n                one.fun = this._uniform1i;\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.INT:\n                one.fun = isArray ? this._uniform1iv : this._uniform1i;\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.FLOAT:\n                one.fun = isArray ? this._uniform1fv : this._uniform1f;\n                one.uploadedValue = new Array(1);\n                break;\n            case gl.FLOAT_VEC2:\n                one.fun = isArray ? this._uniform_vec2v : this._uniform_vec2;\n                one.uploadedValue = new Array(2);\n                break;\n            case gl.FLOAT_VEC3:\n                one.fun = isArray ? this._uniform_vec3v : this._uniform_vec3;\n                one.uploadedValue = new Array(3);\n                break;\n            case gl.FLOAT_VEC4:\n                one.fun = isArray ? this._uniform_vec4v : this._uniform_vec4;\n                one.uploadedValue = new Array(4);\n                break;\n            case gl.FLOAT_MAT2:\n                one.fun = this._uniformMatrix2fv;\n                break;\n            case gl.FLOAT_MAT3:\n                one.fun = isArray ? this._uniformMatrix3fv : this._uniformMatrix3f;\n                break;\n            case gl.FLOAT_MAT4:\n                one.fun = isArray ? this._uniformMatrix4fv : this._uniformMatrix4f;\n                break;\n            case gl.SAMPLER_2D:\n            case gl.SAMPLER_2D_SHADOW:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler2D;\n                break;\n            case gl.SAMPLER_2D_ARRAY:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler2DArray;\n                break;\n            case 0x8b5f:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_sampler3D;\n                break;\n            case gl.SAMPLER_CUBE:\n                gl.uniform1i(one.location, this._curActTexIndex);\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\n                one.fun = this._uniform_samplerCube;\n                break;\n            case gl.UNIFORM_BUFFER:\n                one.fun = this._uniform_UniformBuffer;\n                break;\n            default:\n                WebGLEngine._lastShaderError = `unknown uniform type (${one.type})`;\n        }\n    }\n    getUniformMap() {\n        return this._uniformMap;\n    }\n    bind() {\n        return this.useProgram();\n    }\n    useProgram() {\n        if (this._engine._glUseProgram === this)\n            return false;\n        this._gl.useProgram(this._program);\n        this._engine._glUseProgram = this;\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.C_SetRenderPassCount, 1);\n        return true;\n    }\n    _uniform1f(one, value) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            this._gl.uniform1f(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform1fv(one, value) {\n        if (value.length < 4) {\n            var uploadedValue = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                this._gl.uniform1fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        }\n        else {\n            this._gl.uniform1fv(one.location, value);\n            return 1;\n        }\n    }\n    _uniform_vec2(one, v) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y) {\n            this._gl.uniform2f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform_vec2v(one, value) {\n        if (value.length < 2) {\n            var uploadedValue = one.uploadedValue;\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n                this._gl.uniform2fv(one.location, value);\n                uploadedValue[0] = value[0];\n                uploadedValue[1] = value[1];\n                uploadedValue[2] = value[2];\n                uploadedValue[3] = value[3];\n                return 1;\n            }\n            return 0;\n        }\n        else {\n            this._gl.uniform2fv(one.location, value);\n            return 1;\n        }\n    }\n    _uniform_vec3(one, v) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z) {\n            this._gl.uniform3f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform_vec3v(one, v) {\n        this._gl.uniform3fv(one.location, v);\n        return 1;\n    }\n    _uniform_vec4(one, v) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z || uploadedValue[3] !== v.w) {\n            this._gl.uniform4f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z, uploadedValue[3] = v.w);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform_vec4v(one, v) {\n        this._gl.uniform4fv(one.location, v);\n        return 1;\n    }\n    _uniformMatrix2fv(one, value) {\n        this._gl.uniformMatrix2fv(one.location, false, value);\n        return 1;\n    }\n    _uniformMatrix3f(one, value) {\n        this._gl.uniformMatrix3fv(one.location, false, value.elements);\n        return 1;\n    }\n    _uniformMatrix3fv(one, value) {\n        this._gl.uniformMatrix3fv(one.location, false, value);\n        return 1;\n    }\n    _uniformMatrix4f(one, m) {\n        var value = m.elements;\n        this._gl.uniformMatrix4fv(one.location, false, value);\n        return 1;\n    }\n    _uniformMatrix4fv(one, m) {\n        this._gl.uniformMatrix4fv(one.location, false, m);\n        return 1;\n    }\n    _uniform1i(one, value) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== value) {\n            this._gl.uniform1i(one.location, uploadedValue[0] = value);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform1iv(one, value) {\n        this._gl.uniform1iv(one.location, value);\n        return 1;\n    }\n    _uniform_ivec2(one, value) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\n            this._gl.uniform2i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform_ivec2v(one, value) {\n        this._gl.uniform2iv(one.location, value);\n        return 1;\n    }\n    _uniform_vec3i(one, value) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\n            this._gl.uniform3i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform_vec3vi(one, value) {\n        this._gl.uniform3iv(one.location, value);\n        return 1;\n    }\n    _uniform_vec4i(one, value) {\n        var uploadedValue = one.uploadedValue;\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\n            this._gl.uniform4i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\n            return 1;\n        }\n        return 0;\n    }\n    _uniform_vec4vi(one, value) {\n        this._gl.uniform4iv(one.location, value);\n        return 1;\n    }\n    _uniform_sampler2D(one, texture) {\n        var value = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\n        var gl = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_2D, value);\n        return 0;\n    }\n    _uniform_sampler2DArray(one, texture) {\n        var value = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\n        var gl = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_2D_ARRAY, value);\n        return 0;\n    }\n    _uniform_sampler3D(one, texture) {\n        var value = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\n        var gl = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_3D, value);\n        return 0;\n    }\n    _uniform_samplerCube(one, texture) {\n        var value = texture ? texture._getSource() : TextureCube.errorTexture._getSource();\n        var gl = this._gl;\n        this._bindTexture(one.textureID, gl.TEXTURE_CUBE_MAP, value);\n        return 0;\n    }\n    _uniform_UniformBuffer(one, value) {\n        value.bind(one.location);\n    }\n    _bindTexture(textureID, target, texture) {\n        const gl = this._gl;\n        if (this._engine._activedTextureID !== textureID) {\n            gl.activeTexture(textureID);\n            this._engine._activedTextureID = textureID;\n        }\n        const texID = this._engine._activedTextureID - this._gl.TEXTURE0;\n        if (this._engine._activeTextures[texID] !== texture) {\n            gl.bindTexture(target, texture);\n            this._engine._activeTextures[texID] = texture;\n        }\n    }\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        gl.deleteShader(this._vshader);\n        gl.deleteShader(this._pshader);\n        gl.deleteProgram(this._program);\n        this._vshader = null;\n        this._pshader = null;\n        this._program = null;\n        this._attributeMap = null;\n        this._uniformMap = null;\n        this._uniformObjectMap = null;\n        this._gl = null;\n        this._engine = null;\n    }\n}\n","import { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { GLObject } from \"./GLObject\";\nexport class GLVertexState extends GLObject {\n    constructor(engine) {\n        super(engine);\n        this._vertexDeclaration = [];\n        if (!engine.isWebGL2)\n            this._vaoExt = engine._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object);\n        this._vao = this.createVertexArray();\n        this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\n    }\n    createVertexArray() {\n        if (this._engine.isWebGL2)\n            return this._gl.createVertexArray();\n        else\n            return this._vaoExt.createVertexArrayOES();\n    }\n    deleteVertexArray() {\n        if (this._engine.isWebGL2)\n            this._gl.deleteVertexArray(this._vao);\n        else\n            this._vaoExt.deleteVertexArrayOES(this._vao);\n    }\n    bindVertexArray() {\n        if (this._engine._GLBindVertexArray == this)\n            return;\n        if (this._engine.isWebGL2)\n            this._gl.bindVertexArray(this._vao);\n        else\n            this._vaoExt.bindVertexArrayOES(this._vao);\n        this._engine._GLBindVertexArray = this;\n    }\n    unbindVertexArray() {\n        if (this._engine.isWebGL2)\n            this._gl.bindVertexArray(null);\n        else\n            this._vaoExt.bindVertexArrayOES(null);\n        this._engine._GLBindVertexArray = null;\n    }\n    isVertexArray() {\n        if (this._engine.isWebGL2)\n            this._gl.isVertexArray(this._vao);\n        else\n            this._vaoExt.isVertexArrayOES(this._vao);\n    }\n    applyVertexBuffer(vertexBuffer) {\n        this.clearVAO();\n        this._vertexBuffers = vertexBuffer;\n        if (this._engine._GLBindVertexArray == this) {\n            this._vertexDeclaration.length = vertexBuffer.length;\n            var i = 0;\n            vertexBuffer.forEach(element => {\n                var verDec = element._shaderValues;\n                this._vertexDeclaration[i++] = element._shaderValues;\n                element.bind();\n                for (var k in verDec) {\n                    var loc = parseInt(k);\n                    var attribute = verDec[k];\n                    this._gl.enableVertexAttribArray(loc);\n                    this._gl.vertexAttribPointer(loc, attribute.elementCount, attribute.elementType, !!attribute.normalized, attribute.vertexStride, attribute.elementOffset);\n                    if (element.instanceBuffer)\n                        this.vertexAttribDivisor(loc, 1);\n                }\n            });\n        }\n        else {\n            throw \"BufferState: must call bind() function first.\";\n        }\n    }\n    clearVAO() {\n        for (let i = 0, n = this._vertexDeclaration.length; i < n; i++) {\n            var verDec = this._vertexDeclaration[i];\n            for (var k in verDec) {\n                var loc = parseInt(k);\n                this._gl.disableVertexAttribArray(loc);\n            }\n        }\n    }\n    applyIndexBuffer(indexBuffer) {\n        if (indexBuffer == null) {\n            return;\n        }\n        if (this._engine._GLBindVertexArray == this) {\n            if (this._bindedIndexBuffer !== indexBuffer) {\n                indexBuffer._glBuffer.bindBuffer();\n                this._bindedIndexBuffer = indexBuffer;\n            }\n        }\n        else {\n            throw \"BufferState: must call bind() function first.\";\n        }\n    }\n    vertexAttribDivisor(index, divisor) {\n        if (this._engine.isWebGL2)\n            this._gl.vertexAttribDivisor(index, divisor);\n        else\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\n    }\n    destroy() {\n        super.destroy();\n        const gl = this._gl;\n        this.deleteVertexArray();\n        this._gl = null;\n        this._engine = null;\n    }\n}\n","export class VertexArrayObject {\n    constructor() {\n    }\n}\n(function () {\n    \"use strict\";\n    var glErrorShadow = {};\n    function error(msg) {\n        if (window.console && window.console.error) {\n            window.console.error(msg);\n        }\n    }\n    function log(msg) {\n        if (window.console && window.console.log) {\n            window.console.log(msg);\n        }\n    }\n    function synthesizeGLError(err, opt_msg) {\n        glErrorShadow[err] = true;\n        if (opt_msg !== undefined) {\n            error(opt_msg);\n        }\n    }\n    function wrapGLError(gl) {\n        var f = gl.getError;\n        gl.getError = function () {\n            var err;\n            do {\n                err = f.apply(gl);\n                if (err != gl.NO_ERROR) {\n                    glErrorShadow[err] = true;\n                }\n            } while (err != gl.NO_ERROR);\n            for (var err1 in glErrorShadow) {\n                if (glErrorShadow[err1]) {\n                    delete glErrorShadow[err1];\n                    return parseInt(err1);\n                }\n            }\n            return gl.NO_ERROR;\n        };\n    }\n    var WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\n        var gl = ext.gl;\n        this.ext = ext;\n        this.isAlive = true;\n        this.hasBeenBound = false;\n        this.elementArrayBuffer = null;\n        this.attribs = new Array(ext.maxVertexAttribs);\n        for (var n = 0; n < this.attribs.length; n++) {\n            var attrib = new WebGLVertexArrayObjectOES.VertexAttrib(gl);\n            this.attribs[n] = attrib;\n        }\n        this.maxAttrib = 0;\n    };\n    WebGLVertexArrayObjectOES.VertexAttrib = function VertexAttrib(gl) {\n        this.enabled = false;\n        this.buffer = null;\n        this.size = 4;\n        this.type = gl.FLOAT;\n        this.normalized = false;\n        this.stride = 16;\n        this.offset = 0;\n        this.cached = \"\";\n        this.recache();\n    };\n    WebGLVertexArrayObjectOES.VertexAttrib.prototype.recache = function recache() {\n        this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\n    };\n    var OESVertexArrayObject = function OESVertexArrayObject(gl) {\n        var self = this;\n        this.gl = gl;\n        wrapGLError(gl);\n        var original = this.original = {\n            getParameter: gl.getParameter,\n            enableVertexAttribArray: gl.enableVertexAttribArray,\n            disableVertexAttribArray: gl.disableVertexAttribArray,\n            bindBuffer: gl.bindBuffer,\n            getVertexAttrib: gl.getVertexAttrib,\n            vertexAttribPointer: gl.vertexAttribPointer\n        };\n        gl.getParameter = function getParameter(pname) {\n            if (pname == self.VERTEX_ARRAY_BINDING_OES) {\n                if (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\n                    return null;\n                }\n                else {\n                    return self.currentVertexArrayObject;\n                }\n            }\n            return original.getParameter.apply(this, arguments);\n        };\n        gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\n            var attrib = vao.attribs[index];\n            attrib.enabled = true;\n            return original.enableVertexAttribArray.apply(this, arguments);\n        };\n        gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\n            var attrib = vao.attribs[index];\n            attrib.enabled = false;\n            return original.disableVertexAttribArray.apply(this, arguments);\n        };\n        gl.bindBuffer = function bindBuffer(target, buffer) {\n            switch (target) {\n                case gl.ARRAY_BUFFER:\n                    self.currentArrayBuffer = buffer;\n                    break;\n                case gl.ELEMENT_ARRAY_BUFFER:\n                    self.currentVertexArrayObject.elementArrayBuffer = buffer;\n                    break;\n            }\n            return original.bindBuffer.apply(this, arguments);\n        };\n        gl.getVertexAttrib = function getVertexAttrib(index, pname) {\n            var vao = self.currentVertexArrayObject;\n            var attrib = vao.attribs[index];\n            switch (pname) {\n                case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\n                    return attrib.buffer;\n                case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\n                    return attrib.enabled;\n                case gl.VERTEX_ATTRIB_ARRAY_SIZE:\n                    return attrib.size;\n                case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\n                    return attrib.stride;\n                case gl.VERTEX_ATTRIB_ARRAY_TYPE:\n                    return attrib.type;\n                case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\n                    return attrib.normalized;\n                default:\n                    return original.getVertexAttrib.apply(this, arguments);\n            }\n        };\n        gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\n            var vao = self.currentVertexArrayObject;\n            vao.maxAttrib = Math.max(vao.maxAttrib, indx);\n            var attrib = vao.attribs[indx];\n            attrib.buffer = self.currentArrayBuffer;\n            attrib.size = size;\n            attrib.type = type;\n            attrib.normalized = normalized;\n            attrib.stride = stride;\n            attrib.offset = offset;\n            attrib.recache();\n            return original.vertexAttribPointer.apply(this, arguments);\n        };\n        if (gl.instrumentExtension) {\n            gl.instrumentExtension(this, \"OES_vertex_array_object\");\n        }\n        gl.canvas.addEventListener('webglcontextrestored', function () {\n            log(\"OESVertexArrayObject emulation library context restored\");\n            self.reset_();\n        }, true);\n        this.reset_();\n    };\n    OESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\n    OESVertexArrayObject.prototype.reset_ = function reset_() {\n        var contextWasLost = this.vertexArrayObjects !== undefined;\n        if (contextWasLost) {\n            for (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\n                this.vertexArrayObjects.isAlive = false;\n            }\n        }\n        var gl = this.gl;\n        this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n        this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\n        this.currentVertexArrayObject = null;\n        this.currentArrayBuffer = null;\n        this.vertexArrayObjects = [this.defaultVertexArrayObject];\n        this.bindVertexArrayOES(null);\n    };\n    OESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\n        var arrayObject = new WebGLVertexArrayObjectOES(this);\n        this.vertexArrayObjects.push(arrayObject);\n        return arrayObject;\n    };\n    OESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\n        arrayObject.isAlive = false;\n        this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\n        if (this.currentVertexArrayObject == arrayObject) {\n            this.bindVertexArrayOES(null);\n        }\n    };\n    OESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\n        if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\n            if (arrayObject.hasBeenBound && arrayObject.ext == this) {\n                return true;\n            }\n        }\n        return false;\n    };\n    OESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\n        var gl = this.gl;\n        if (arrayObject && !arrayObject.isAlive) {\n            synthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\n            return;\n        }\n        var original = this.original;\n        var oldVAO = this.currentVertexArrayObject;\n        this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\n        this.currentVertexArrayObject.hasBeenBound = true;\n        var newVAO = this.currentVertexArrayObject;\n        if (oldVAO == newVAO) {\n            return;\n        }\n        if (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\n            original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\n        }\n        var currentBinding = this.currentArrayBuffer;\n        var maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\n        for (var n = 0; n <= maxAttrib; n++) {\n            var attrib = newVAO.attribs[n];\n            var oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\n            if (!oldVAO || attrib.enabled != oldAttrib.enabled) {\n                if (attrib.enabled) {\n                    original.enableVertexAttribArray.call(gl, n);\n                }\n                else {\n                    original.disableVertexAttribArray.call(gl, n);\n                }\n            }\n            if (attrib.enabled) {\n                var bufferChanged = false;\n                if (!oldVAO || attrib.buffer != oldAttrib.buffer) {\n                    if (currentBinding != attrib.buffer) {\n                        original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\n                        currentBinding = attrib.buffer;\n                    }\n                    bufferChanged = true;\n                }\n                if (bufferChanged || attrib.cached != oldAttrib.cached) {\n                    original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\n                }\n            }\n        }\n        if (this.currentArrayBuffer != currentBinding) {\n            original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\n        }\n    };\n    window._setupVertexArrayObject = function (gl) {\n        var original_getSupportedExtensions = gl.getSupportedExtensions;\n        gl.getSupportedExtensions = function getSupportedExtensions() {\n            var list = original_getSupportedExtensions.call(this) || [];\n            if (list.indexOf(\"OES_vertex_array_object\") < 0) {\n                list.push(\"OES_vertex_array_object\");\n            }\n            return list;\n        };\n        var original_getExtension = gl.getExtension;\n        gl.getExtension = function getExtension(name) {\n            var ext = original_getExtension.call(this, name);\n            if (ext) {\n                return ext;\n            }\n            if (name !== \"OES_vertex_array_object\") {\n                return null;\n            }\n            if (!this.__OESVertexArrayObject) {\n                console.log(\"Setup OES_vertex_array_object polyfill\");\n                this.__OESVertexArrayObject = new OESVertexArrayObject(this);\n            }\n            return this.__OESVertexArrayObject;\n        };\n    };\n}());\n","import { RenderCapable } from \"../../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\nimport { VertexArrayObject } from \"./VertexArrayObject\";\nconst extentionVendorPrefixes = [\"\", \"WEBKIT_\", \"MOZ_\"];\nexport class GlCapable {\n    constructor(glEngine) {\n        this._gl = glEngine.gl;\n        this.initExtension(glEngine.isWebGL2);\n        this.initCapable(glEngine.isWebGL2);\n    }\n    initCapable(isWebgl2) {\n        this._capabilityMap = new Map();\n        let value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_element_index_uint));\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, value);\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint8, true);\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_float));\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, value);\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_half_float));\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, value);\n        value = !!(this.getExtension(WebGLExtension.EXT_texture_filter_anisotropic));\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, value);\n        if (isWebgl2) {\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) || !!this.getExtension(WebGLExtension.EXT_color_buffer_half_float);\n        }\n        else {\n            value = ((!!this.getExtension(WebGLExtension.OES_texture_half_float)) || (!!this.getExtension(WebGLExtension.EXT_color_buffer_half_float))) && (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\n        }\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, value);\n        if (isWebgl2) {\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) && !!this.getExtension(WebGLExtension.OES_texture_float_linear);\n        }\n        else {\n            value = (!!this.getExtension(WebGLExtension.OES_texture_float)) && (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\n        }\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R32G32B32A32, value);\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.WEBGL_depth_texture));\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, value);\n        value = isWebgl2;\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, value);\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_vertex_array_object));\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, value);\n        value = (isWebgl2 || (!!this.getExtension(WebGLExtension.ANGLE_instanced_arrays)));\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, value);\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_shader_texture_lod));\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_pvrtc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, value);\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_astc));\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, value);\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_sRGB));\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, value);\n        value = (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\n        this._capabilityMap.set(RenderCapable.Texture_FloatLinearFiltering, value);\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\n        this._capabilityMap.set(RenderCapable.Texture_HalfFloatLinearFiltering, value);\n        value = isWebgl2;\n        this._capabilityMap.set(RenderCapable.MSAA, value);\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, value);\n        this._capabilityMap.set(RenderCapable.Texture3D, value);\n    }\n    initExtension(isWebgl2) {\n        this._extensionMap = new Map();\n        const getGlExtension = (name) => {\n            for (const k in extentionVendorPrefixes) {\n                let ext = this._gl.getExtension(extentionVendorPrefixes[k] + name);\n                if (ext)\n                    return ext;\n            }\n            return null;\n        };\n        const setExtensionMap = (extension, value, map) => {\n            value && map.set(extension, value);\n        };\n        const _extTextureFilterAnisotropic = getGlExtension(\"EXT_texture_filter_anisotropic\");\n        setExtensionMap(WebGLExtension.EXT_texture_filter_anisotropic, _extTextureFilterAnisotropic, this._extensionMap);\n        const _compressedTextureS3tc = getGlExtension(\"WEBGL_compressed_texture_s3tc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc, _compressedTextureS3tc, this._extensionMap);\n        const _compressdTextureS3tc_srgb = getGlExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb, _compressdTextureS3tc_srgb, this._extensionMap);\n        const _compressedTexturePvrtc = getGlExtension(\"WEBGL_compressed_texture_pvrtc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_pvrtc, _compressedTexturePvrtc, this._extensionMap);\n        const _compressedTextureEtc1 = getGlExtension(\"WEBGL_compressed_texture_etc1\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc1, _compressedTextureEtc1, this._extensionMap);\n        const _compressedTextureETC = getGlExtension(\"WEBGL_compressed_texture_etc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc, _compressedTextureETC, this._extensionMap);\n        const _compressedTextureASTC = getGlExtension(\"WEBGL_compressed_texture_astc\");\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_astc, _compressedTextureASTC, this._extensionMap);\n        const _oesTextureFloatLinear = getGlExtension(\"OES_texture_float_linear\");\n        setExtensionMap(WebGLExtension.OES_texture_float_linear, _oesTextureFloatLinear, this._extensionMap);\n        const _extColorBufferHalfFloat = getGlExtension(\"EXT_color_buffer_half_float\");\n        setExtensionMap(WebGLExtension.EXT_color_buffer_half_float, _extColorBufferHalfFloat, this._extensionMap);\n        if (isWebgl2) {\n            const _extColorBufferFloat = getGlExtension(\"EXT_color_buffer_float\");\n            setExtensionMap(WebGLExtension.EXT_color_buffer_float, _extColorBufferFloat, this._extensionMap);\n        }\n        else {\n            VertexArrayObject;\n            if (window._setupVertexArrayObject)\n                window._setupVertexArrayObject(this._gl);\n            const _vaoExt = getGlExtension(\"OES_vertex_array_object\");\n            setExtensionMap(WebGLExtension.OES_vertex_array_object, _vaoExt, this._extensionMap);\n            const _angleInstancedArrays = getGlExtension(\"ANGLE_instanced_arrays\");\n            setExtensionMap(WebGLExtension.ANGLE_instanced_arrays, _angleInstancedArrays, this._extensionMap);\n            const _oesTextureHalfFloat = getGlExtension(\"OES_texture_half_float\");\n            setExtensionMap(WebGLExtension.OES_texture_half_float, _oesTextureHalfFloat, this._extensionMap);\n            const _oesTextureHalfFloatLinear = getGlExtension(\"OES_texture_half_float_linear\");\n            setExtensionMap(WebGLExtension.OES_texture_half_float_linear, _oesTextureHalfFloatLinear, this._extensionMap);\n            const _oesTextureFloat = getGlExtension(\"OES_texture_float\");\n            setExtensionMap(WebGLExtension.OES_texture_float, _oesTextureFloat, this._extensionMap);\n            const _oes_element_index_uint = getGlExtension(\"OES_element_index_uint\");\n            setExtensionMap(WebGLExtension.OES_element_index_uint, _oes_element_index_uint, this._extensionMap);\n            const _extShaderTextureLod = getGlExtension(\"EXT_shader_texture_lod\");\n            setExtensionMap(WebGLExtension.EXT_shader_texture_lod, _extShaderTextureLod, this._extensionMap);\n            const _webgl_depth_texture = getGlExtension(\"WEBGL_depth_texture\");\n            setExtensionMap(WebGLExtension.WEBGL_depth_texture, _webgl_depth_texture, this._extensionMap);\n            const _sRGB = getGlExtension(\"EXT_sRGB\");\n            setExtensionMap(WebGLExtension.EXT_sRGB, _sRGB, this._extensionMap);\n            const OES_standard_derivatives = getGlExtension(\"OES_standard_derivatives\");\n            setExtensionMap(WebGLExtension.OES_standard_derivatives, OES_standard_derivatives, this._extensionMap);\n        }\n    }\n    getCapable(type) {\n        return this._capabilityMap.get(type);\n    }\n    getExtension(type) {\n        return this._extensionMap.get(type) || null;\n    }\n    turnOffSRGB() {\n        this._extensionMap.set(WebGLExtension.EXT_sRGB, null);\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, false);\n    }\n}\n","import { BufferTargetType, BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { UniformBufferManager } from \"../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferManager\";\nexport class WebGLUniformBufferManager extends UniformBufferManager {\n    constructor(engine, offsetAlignment) {\n        super(true);\n        this.engine = engine;\n        this.byteAlign = offsetAlignment;\n        engine.on(\"endFrame\", this, this.endFrame);\n        engine.on(\"startFrame\", this, this.startFrame);\n    }\n    createGPUBuffer(size, name) {\n        let buffer = this.engine.createBuffer(BufferTargetType.UNIFORM_BUFFER, BufferUsage.Dynamic);\n        buffer.bindBuffer();\n        buffer.setDataLength(size);\n        return buffer;\n    }\n    writeBuffer(buffer, data, offset, size) {\n        buffer.bindBuffer();\n        let gl = this.engine.gl;\n        gl.bufferSubData(buffer._glTarget, offset, new Float32Array(data, offset, size / 4));\n    }\n    statisGPUMemory(bytes) {\n        this.engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, bytes);\n        this.engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUBuffer, bytes);\n    }\n    statisUpload(count, bytes) {\n        this.engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_UniformBufferUploadCount, count);\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { LayaEnv } from \"../../../../LayaEnv\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { BufferTargetType } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { GL2TextureContext } from \"./GL2TextureContext\";\nimport { GLTextureContext } from \"./GLTextureContext\";\nimport { GLBuffer } from \"./WebGLEngine/GLBuffer\";\nimport { WebGLExtension } from \"./WebGLEngine/GLEnum/WebGLExtension\";\nimport { WebGLMode } from \"./WebGLEngine/GLEnum/WebGLMode\";\nimport { GLParams } from \"./WebGLEngine/GLParams\";\nimport { GLRenderDrawContext } from \"./WebGLEngine/GLRenderDrawContext\";\nimport { GLRenderState } from \"./WebGLEngine/GLRenderState\";\nimport { GLShaderInstance } from \"./WebGLEngine/GLShaderInstance\";\nimport { GLVertexState } from \"./WebGLEngine/GLVertexState\";\nimport { GlCapable } from \"./WebGLEngine/GlCapable\";\nimport { ShaderDefine } from \"../../RenderModuleData/Design/ShaderDefine\";\nimport { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { EventDispatcher } from \"../../../events/EventDispatcher\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { WebGLUniformBufferManager } from \"./WebGLUniformBufferManager\";\nimport { Config } from \"../../../../Config\";\nexport class WebGLEngine extends EventDispatcher {\n    get lost() {\n        return this._lost;\n    }\n    constructor(config, webglMode = WebGLMode.Auto) {\n        super();\n        this._lost = false;\n        this._propertyNameMap = {};\n        this._propertyNameCounter = 0;\n        this._IDCounter = 0;\n        this._isShaderDebugMode = true;\n        this._enableStatistics = false;\n        this._lastClearColor = new Color;\n        this._lastClearDepth = -1;\n        this._remapZ = true;\n        this._screenInvertY = false;\n        this._lodTextureSample = true;\n        this._breakTextureSample = true;\n        this._GLStatisticsInfo = new Map();\n        this._config = config;\n        this._isWebGL2 = false;\n        this._lastViewport = new Vector4(0, 0, 0, 0);\n        this._lastClearColor = new Color(0, 0, 0, 0);\n        this._lastScissor = new Vector4(0, 0, 0, 0);\n        this._webglMode = webglMode;\n        this._initStatisticsInfo();\n        WebGLEngine.instance = this;\n    }\n    startFrame() {\n        this.event(\"startFrame\", null);\n    }\n    endFrame() {\n        this.event(\"endFrame\", null);\n    }\n    getInnerWidth() {\n        if (LayaEnv.isConch) {\n            return window.getInnerWidth();\n        }\n        else\n            return this._globalWidth;\n    }\n    getInnerHeight() {\n        if (LayaEnv.isConch) {\n            return window.getInnerHeight();\n        }\n        else\n            return this._globalHeight;\n    }\n    resizeOffScreen(width, height) {\n        this._globalWidth = width;\n        this._globalHeight = height;\n        if (LayaEnv.isConch) {\n            if (WebGLEngine._lastFrameBuffer) {\n                WebGLEngine._lastFrameBuffer.dispose();\n                WebGLEngine._lastFrameBuffer_WebGLOBJ = null;\n            }\n            WebGLEngine._lastFrameBuffer = this.getTextureContext().createRenderTargetInternal(width, height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false, false, 1);\n            WebGLEngine._lastFrameBuffer_WebGLOBJ = WebGLEngine._lastFrameBuffer._framebuffer;\n        }\n    }\n    addTexGammaDefine(key, value) {\n        WebGLEngine._texGammaDefine[key] = value;\n    }\n    get gl() {\n        return this._context;\n    }\n    get isWebGL2() {\n        return this._isWebGL2;\n    }\n    get webglConfig() {\n        return this._config;\n    }\n    _initStatisticsInfo() {\n        for (var i = 0; i < GPUEngineStatisticsInfo.Count; i++) {\n            this._GLStatisticsInfo.set(i, 0);\n        }\n    }\n    _addStatisticsInfo(info, value) {\n        this._enableStatistics && this._GLStatisticsInfo.set(info, this._GLStatisticsInfo.get(info) + value);\n    }\n    clearStatisticsInfo() {\n        if (this._enableStatistics) {\n            for (var i = 0; i < GPUEngineStatisticsInfo.FrameClearCount; i++) {\n                this._GLStatisticsInfo.set(i, 0);\n            }\n        }\n    }\n    getStatisticsInfo(info) {\n        return this._GLStatisticsInfo.get(info);\n    }\n    initRenderEngine(canvas) {\n        let names;\n        let gl;\n        switch (this._webglMode) {\n            case WebGLMode.Auto:\n                names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\n                break;\n            case WebGLMode.WebGL1:\n                names = [\"webgl\", \"experimental-webgl\"];\n                break;\n            case WebGLMode.WebGL2:\n                names = [\"webgl2\", \"experimental-webgl2\"];\n                break;\n        }\n        for (let i = 0; i < names.length; i++) {\n            try {\n                gl = canvas.getContext(names[i], this._config);\n            }\n            catch (e) {\n            }\n            if (gl) {\n                if (names[i] === 'webgl2' || names[i] === 'experimental-webgl2') {\n                    this._isWebGL2 = true;\n                }\n                break;\n            }\n        }\n        this._context = gl;\n        this.scissorTest(true);\n        this._initBindBufferMap();\n        this._supportCapatable = new GlCapable(this);\n        this._GLParams = new GLParams(this);\n        this._GLRenderState = new GLRenderState(this);\n        this._glTextureIDParams = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7, gl.TEXTURE8, gl.TEXTURE9, gl.TEXTURE10, gl.TEXTURE11, gl.TEXTURE12, gl.TEXTURE13, gl.TEXTURE14, gl.TEXTURE15, gl.TEXTURE16, gl.TEXTURE17, gl.TEXTURE18, gl.TEXTURE19, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23, gl.TEXTURE24, gl.TEXTURE25, gl.TEXTURE26, gl.TEXTURE27, gl.TEXTURE28, gl.TEXTURE29, gl.TEXTURE30, gl.TEXTURE31];\n        this._activedTextureID = gl.TEXTURE0;\n        this._activeTextures = [];\n        this._GLTextureContext = this.isWebGL2 ? new GL2TextureContext(this) : new GLTextureContext(this);\n        this._GLRenderDrawContext = new GLRenderDrawContext(this);\n        canvas.addEventListener(\"webglcontextlost\", this.webglContextLost);\n        Config._uniformBlock = Config.enableUniformBufferObject && this.getCapable(RenderCapable.UnifromBufferObject);\n        Config.matUseUBO = Config.matUseUBO && this.getCapable(RenderCapable.UnifromBufferObject);\n        this._initBufferBlock();\n    }\n    _initBufferBlock() {\n        const useUBO = (Config._uniformBlock || Config.matUseUBO);\n        if (useUBO) {\n            const gl = this._context;\n            let offsetAlignment = gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT);\n            this.bufferMgr = new WebGLUniformBufferManager(this, offsetAlignment);\n            let maxBlockCount = gl.getParameter(gl.MAX_UNIFORM_BUFFER_BINDINGS);\n            this._uboBindingMap = new Array(maxBlockCount);\n            for (let i = 0; i < maxBlockCount; i++) {\n                this._uboBindingMap[i] = { buffer: null, offset: 0, size: 0 };\n            }\n        }\n    }\n    webglContextLost(e) {\n        console.log(\"lost webgl context\");\n        Laya.stage.event(\"GraphicContextLost\", e);\n        this._lost = true;\n    }\n    _initBindBufferMap() {\n        this._GLBufferBindMap = {};\n        this._GLBufferBindMap[BufferTargetType.ARRAY_BUFFER] = null;\n        this._GLBufferBindMap[BufferTargetType.ELEMENT_ARRAY_BUFFER] = null;\n        this._GLBufferBindMap[BufferTargetType.UNIFORM_BUFFER] = null;\n    }\n    _getbindBuffer(target) {\n        return this._GLBufferBindMap[target];\n    }\n    _setbindBuffer(target, buffer) {\n        this._GLBufferBindMap[target] = buffer;\n    }\n    _bindTexture(target, texture) {\n        const texID = this._activedTextureID - this._context.TEXTURE0;\n        if (this._activeTextures[texID] !== texture) {\n            this._context.bindTexture(target, texture);\n            this._activeTextures[texID] = texture;\n        }\n    }\n    getCapable(capatableType) {\n        return this._supportCapatable.getCapable(capatableType);\n    }\n    viewport(x, y, width, height) {\n        const gl = this._context;\n        const lv = this._lastViewport;\n        if (LayaEnv.isConch) {\n            gl.viewport(x, y, width, height);\n        }\n        else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n            gl.viewport(x, y, width, height);\n            lv.setValue(x, y, width, height);\n        }\n    }\n    scissor(x, y, width, height) {\n        const gl = this._context;\n        const lv = this._lastScissor;\n        if (LayaEnv.isConch) {\n            gl.scissor(x, y, width, height);\n        }\n        else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n            gl.scissor(x, y, width, height);\n            lv.setValue(x, y, width, height);\n        }\n    }\n    scissorTest(value) {\n        if (this._scissorState == value)\n            return;\n        this._scissorState = value;\n        if (value)\n            this._context.enable(this._context.SCISSOR_TEST);\n        else\n            this._context.disable(this._context.SCISSOR_TEST);\n    }\n    clearRenderTexture(clearFlag, clearcolor = null, clearDepth = 1, clearStencilValue = 0) {\n        var flag;\n        if (clearFlag & RenderClearFlag.Color) {\n            if (clearcolor && !this._lastClearColor.equal(clearcolor)) {\n                this._context.clearColor(clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a);\n                clearcolor.cloneTo(this._lastClearColor);\n            }\n            flag |= this.gl.COLOR_BUFFER_BIT;\n        }\n        if (clearFlag & RenderClearFlag.Depth) {\n            if (this._lastClearDepth != clearDepth) {\n                this._context.clearDepth(clearDepth);\n                this._lastClearDepth = clearDepth;\n            }\n            this._GLRenderState.setDepthMask(true);\n            flag |= this._context.DEPTH_BUFFER_BIT;\n        }\n        if (clearFlag & RenderClearFlag.Stencil) {\n            this._context.clearStencil(clearStencilValue);\n            this._GLRenderState.setStencilMask(true);\n            flag |= this._context.STENCIL_BUFFER_BIT;\n        }\n        if (flag)\n            this._context.clear(flag);\n    }\n    copySubFrameBuffertoTex(texture, level, xoffset, yoffset, x, y, width, height) {\n        this._bindTexture(texture.target, texture.resource);\n        this._context.copyTexSubImage2D(texture.target, level, xoffset, yoffset, x, y, width, height);\n    }\n    colorMask(r, g, b, a) {\n        this._context.colorMask(r, g, b, a);\n    }\n    getParams(params) {\n        return this._GLParams.getParams(params);\n    }\n    createBuffer(targetType, bufferUsageType) {\n        return new GLBuffer(this, targetType, bufferUsageType);\n    }\n    createShaderInstance(vs, ps, attributeMap) {\n        return new GLShaderInstance(this, vs, ps, attributeMap);\n    }\n    createVertexState() {\n        return new GLVertexState(this);\n    }\n    getTextureContext() {\n        return this._GLTextureContext;\n    }\n    getDrawContext() {\n        return this._GLRenderDrawContext;\n    }\n    propertyNameToID(name) {\n        if (this._propertyNameMap[name] != null) {\n            return this._propertyNameMap[name];\n        }\n        else {\n            var id = this._propertyNameCounter++;\n            this._propertyNameMap[name] = id;\n            this._propertyNameMap[id] = name;\n            return id;\n        }\n    }\n    propertyIDToName(id) {\n        return this._propertyNameMap[id];\n    }\n    getNamesByDefineData(defineData, out) {\n        var maskMap = WebGLEngine._maskMap;\n        var mask = defineData._mask;\n        out.length = 0;\n        for (var i = 0, n = defineData._length; i < n; i++) {\n            var subMaskMap = maskMap[i];\n            var subMask = mask[i];\n            for (var j = 0; j < 32; j++) {\n                var d = 1 << j;\n                if (subMask > 0 && d > subMask)\n                    break;\n                if (subMask & d)\n                    out.push(subMaskMap[d]);\n            }\n        }\n    }\n    getDefineByName(name) {\n        var define = WebGLEngine._defineMap[name];\n        if (!define) {\n            var maskMap = WebGLEngine._maskMap;\n            var counter = WebGLEngine._defineCounter;\n            var index = Math.floor(counter / 32);\n            var value = 1 << counter % 32;\n            define = new ShaderDefine(index, value);\n            WebGLEngine._defineMap[name] = define;\n            if (index == maskMap.length) {\n                maskMap.length++;\n                maskMap[index] = {};\n            }\n            maskMap[index][value] = name;\n            WebGLEngine._defineCounter++;\n        }\n        return define;\n    }\n    uploadUniforms(shader, commandEncoder, shaderData, uploadUnTexture) {\n        var data = shaderData._data;\n        var shaderUniform = commandEncoder.getArrayData();\n        var shaderCall = 0;\n        for (var i = 0, n = shaderUniform.length; i < n; i++) {\n            var one = shaderUniform[i];\n            if (uploadUnTexture || one.textureID !== -1) {\n                var value = data[one.dataOffset];\n                if (value != null)\n                    shaderCall += one.fun.call(one.caller, one, value);\n            }\n        }\n        return shaderCall;\n    }\n    uploadOneUniforms(shader, shaderVariable, data) {\n        shader.bind();\n        if (shaderVariable && data != null)\n            shaderVariable.fun.call(shaderVariable.caller, shaderVariable, data);\n    }\n    unbindVertexState() {\n        if (this.isWebGL2)\n            this._context.bindVertexArray(null);\n        else\n            this._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object).bindVertexArrayOES(null);\n        this._GLBindVertexArray = null;\n    }\n}\nWebGLEngine._texGammaDefine = {};\nWebGLEngine._lastFrameBuffer = null;\nWebGLEngine._lastFrameBuffer_WebGLOBJ = null;\nWebGLEngine._defineMap = {};\nWebGLEngine._defineCounter = 0;\nWebGLEngine._maskMap = [];\n","import { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nexport class WebGLUniformBufferBase {\n    setInt(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            uniform.view[0] = value;\n            this.needUpload = true;\n        }\n    }\n    setFloat(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            uniform.view[0] = value;\n            this.needUpload = true;\n        }\n    }\n    setVector2(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            uniform.view[0] = value.x;\n            uniform.view[1] = value.y;\n            this.needUpload = true;\n        }\n    }\n    setVector3(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            uniform.view[0] = value.x;\n            uniform.view[1] = value.y;\n            uniform.view[2] = value.z;\n            this.needUpload = true;\n        }\n    }\n    setVector4(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            uniform.view[0] = value.x;\n            uniform.view[1] = value.y;\n            uniform.view[2] = value.z;\n            uniform.view[3] = value.w;\n            this.needUpload = true;\n        }\n    }\n    setMatrix3x3(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            let element = value.elements;\n            for (let i = 0; i < 3; i++) {\n                for (let j = 0; j < 3; j++) {\n                    uniform.view[i * 4 + j] = element[i * 3 + j];\n                }\n            }\n            this.needUpload = true;\n        }\n    }\n    setMatrix4x4(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            uniform.view.set(value.elements);\n            this.needUpload = true;\n        }\n    }\n    setBuffer(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            uniform.view.set(value);\n            this.needUpload = true;\n        }\n    }\n    setArrayBuffer(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            let arrayLength = uniform.arrayLength;\n            let size = uniform.size;\n            let alignStride = uniform.alignStride;\n            for (let i = 0; i < arrayLength; i++) {\n                uniform.view.set(value.subarray(i * size, (i + 1) * size), i * alignStride);\n            }\n            this.needUpload = true;\n        }\n    }\n    setMatrix3x3Array(index, value) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            let arrayLength = uniform.arrayLength;\n            let size = uniform.size;\n            let alignStride = uniform.alignStride;\n            for (let i = 0; i < arrayLength; i++) {\n                for (let j = 0; j < 3; j++) {\n                    for (let k = 0; k < 3; k++) {\n                        uniform.view[i * alignStride + j * 4 + k] = value[i * 9 + j * 3 + k];\n                    }\n                }\n            }\n            this.needUpload = true;\n        }\n    }\n    setUniformData(index, type, data) {\n        let uniform = this.descriptor.uniforms.get(index);\n        if (uniform) {\n            switch (type) {\n                case ShaderDataType.Bool:\n                    console.warn(\"ShaderDataType.Bool not support\");\n                    break;\n                case ShaderDataType.Int:\n                    if (uniform.arrayLength > 0) {\n                        this.setArrayBuffer(index, data);\n                    }\n                    else {\n                        this.setInt(index, data);\n                    }\n                    break;\n                case ShaderDataType.Float:\n                    if (uniform.arrayLength > 0) {\n                        this.setArrayBuffer(index, data);\n                    }\n                    else {\n                        this.setFloat(index, data);\n                    }\n                    break;\n                case ShaderDataType.Vector2:\n                    if (uniform.arrayLength > 0) {\n                        this.setArrayBuffer(index, data);\n                    }\n                    else {\n                        this.setVector2(index, data);\n                    }\n                    break;\n                case ShaderDataType.Vector3:\n                    if (uniform.arrayLength > 0) {\n                        this.setArrayBuffer(index, data);\n                    }\n                    else {\n                        this.setVector3(index, data);\n                    }\n                    break;\n                case ShaderDataType.Vector4:\n                case ShaderDataType.Color:\n                    if (uniform.arrayLength > 0) {\n                        this.setArrayBuffer(index, data);\n                    }\n                    else {\n                        this.setVector4(index, data);\n                    }\n                    break;\n                case ShaderDataType.Matrix3x3:\n                    if (uniform.arrayLength > 0) {\n                        this.setMatrix3x3Array(index, data);\n                    }\n                    else {\n                        this.setMatrix3x3(index, data);\n                    }\n                    break;\n                case ShaderDataType.Matrix4x4:\n                    if (uniform.arrayLength > 0) {\n                        this.setArrayBuffer(index, data);\n                    }\n                    else {\n                        this.setMatrix4x4(index, data);\n                    }\n                    break;\n                case ShaderDataType.Buffer:\n                    break;\n                case ShaderDataType.None:\n                case ShaderDataType.Texture2D:\n                case ShaderDataType.Texture3D:\n                case ShaderDataType.TextureCube:\n                case ShaderDataType.Texture2DArray:\n                default:\n                    break;\n            }\n        }\n    }\n}\n","import { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nexport class WebGLUniformBufferDescriptor {\n    get byteLength() {\n        return this._byteLength;\n    }\n    constructor(name) {\n        this._currentLength = 0;\n        this._byteLength = 0;\n        this._maxAlignment = 4;\n        this.name = name;\n        this.uniforms = new Map();\n    }\n    alignmentPadding(alignment) {\n        let pointer = this._currentLength;\n        let endPadding = pointer % alignment;\n        if (endPadding != 0) {\n            endPadding = alignment - endPadding;\n            this._currentLength += endPadding;\n            this._byteLength += endPadding * 4;\n        }\n        this._maxAlignment = Math.max(this._maxAlignment, alignment);\n    }\n    addUniformItem(index, size, alignStride, arraySize, tsc) {\n        if (arraySize > 0) {\n            alignStride = alignStride > 4 ? alignStride : 4;\n            this.alignmentPadding(4);\n            let arrayStride = arraySize * alignStride;\n            let view;\n            let uniform = {\n                index: index,\n                view: view,\n                size: size,\n                alignStride: alignStride,\n                offset: this._currentLength * 4,\n                dataView: tsc,\n                viewByteLength: tsc.BYTES_PER_ELEMENT * arrayStride,\n                arrayLength: arraySize,\n            };\n            this.uniforms.set(index, uniform);\n            this._currentLength += arrayStride;\n            this._byteLength += uniform.viewByteLength;\n        }\n        else {\n            this.alignmentPadding(size <= 2 ? size : 4);\n            let view;\n            let uniform = {\n                index: index,\n                view: view,\n                size: size,\n                alignStride: alignStride,\n                offset: this._currentLength * 4,\n                dataView: tsc,\n                viewByteLength: tsc.BYTES_PER_ELEMENT * alignStride,\n                arrayLength: 0,\n            };\n            this.uniforms.set(index, uniform);\n            this._currentLength += size;\n            this._byteLength += size * tsc.BYTES_PER_ELEMENT;\n        }\n    }\n    addUniform(index, type, arraySize = 0) {\n        let alignStride = 0;\n        switch (type) {\n            case ShaderDataType.Int:\n            case ShaderDataType.Bool:\n                alignStride = 1;\n                this.addUniformItem(index, 1, alignStride, arraySize, Int32Array);\n                break;\n            case ShaderDataType.Float:\n                alignStride = 1;\n                this.addUniformItem(index, 1, alignStride, arraySize, Float32Array);\n                break;\n            case ShaderDataType.Vector2:\n                alignStride = 2;\n                this.addUniformItem(index, 2, alignStride, arraySize, Float32Array);\n                break;\n            case ShaderDataType.Vector3:\n                alignStride = 3;\n                this.addUniformItem(index, 3, alignStride, arraySize, Float32Array);\n                break;\n            case ShaderDataType.Vector4:\n            case ShaderDataType.Color:\n                alignStride = 4;\n                this.addUniformItem(index, 4, alignStride, arraySize, Float32Array);\n                break;\n            case ShaderDataType.Matrix3x3:\n                alignStride = 12;\n                this.addUniformItem(index, 12, alignStride, arraySize, Float32Array);\n                break;\n            case ShaderDataType.Matrix4x4:\n                alignStride = 16;\n                this.addUniformItem(index, 16, alignStride, arraySize, Float32Array);\n                break;\n            case ShaderDataType.Buffer:\n                console.log(\"ShaderDataType.Buffer not support\");\n                break;\n            case ShaderDataType.Texture2D:\n            case ShaderDataType.Texture3D:\n            case ShaderDataType.TextureCube:\n            case ShaderDataType.Texture2DArray:\n            case ShaderDataType.None:\n            default:\n                break;\n        }\n    }\n    finish(alignment = 0) {\n        alignment = alignment > this._maxAlignment ? alignment : this._maxAlignment;\n        this._maxAlignment = alignment;\n        this.alignmentPadding(alignment);\n    }\n    clone() {\n        let descriptor = new WebGLUniformBufferDescriptor(this.name);\n        this.cloneTo(descriptor);\n        return descriptor;\n    }\n    cloneTo(destObject) {\n        this.uniforms.forEach(uniform => {\n            destObject.addUniformItem(uniform.index, uniform.size, uniform.alignStride, uniform.arrayLength, uniform.dataView);\n        });\n        destObject.finish(this._maxAlignment);\n    }\n    destroy() {\n        this.uniforms.clear();\n    }\n}\n","import { LayaGL } from \"../../../layagl/LayaGL\";\nimport { BufferTargetType, BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { WebGLUniformBufferBase } from \"./WebGLUniformBufferBase\";\nimport { WebGLUniformBufferDescriptor } from \"./WebGLUniformBufferDescriptor\";\nexport class WebGLUniformBuffer extends WebGLUniformBufferBase {\n    constructor(name) {\n        super();\n        this.name = name;\n        this.descriptor = new WebGLUniformBufferDescriptor(name);\n    }\n    create() {\n        let descriptor = this.descriptor;\n        descriptor.finish();\n        const buffer = new Uint8Array(descriptor.byteLength).buffer;\n        this._data = new Float32Array(buffer);\n        for (const [key, uniform] of descriptor.uniforms) {\n            uniform.view = new uniform.dataView(buffer, uniform.offset, uniform.viewByteLength / uniform.dataView.BYTES_PER_ELEMENT);\n        }\n        this._buffer = LayaGL.renderEngine.createBuffer(BufferTargetType.UNIFORM_BUFFER, BufferUsage.Dynamic);\n        this._buffer.bindBuffer();\n        this._buffer.setDataLength(descriptor.byteLength);\n        this.needUpload = true;\n    }\n    addUniform(index, type, arraySize = 0) {\n        this.descriptor.addUniform(index, type, arraySize);\n    }\n    upload() {\n        if (this.needUpload) {\n            this._buffer.setData(this._data, 0);\n            this.needUpload = false;\n        }\n    }\n    bind(location) {\n        this._buffer.bindBufferBase(location);\n    }\n    clone() {\n        let buffer = new WebGLUniformBuffer(this.name);\n        this.cloneTo(buffer);\n        return buffer;\n    }\n    cloneTo(dest) {\n        this.descriptor.cloneTo(dest.descriptor);\n        dest.create();\n        dest._data.set(this._data);\n    }\n    destroy() {\n        this._data = null;\n        this._buffer.destroy();\n        this.descriptor.destroy();\n        this.descriptor = null;\n    }\n}\n","import { WebGLUniformBufferBase } from \"./WebGLUniformBufferBase\";\nimport { WebGLUniformBufferDescriptor } from \"./WebGLUniformBufferDescriptor\";\nexport class WebGLSubUniformBuffer extends WebGLUniformBufferBase {\n    upload() {\n        this.bufferBlock.needUpload();\n    }\n    bind(location) {\n        let buffer = this.bufferBlock.cluster.buffer;\n        buffer.bindBufferRange(location, this.bufferBlock.offset, this.bufferBlock.size);\n    }\n    constructor(name, uniformMap, mgr, data) {\n        super();\n        this.name = name;\n        this.manager = mgr;\n        this.data = data;\n        this.uniformMap = uniformMap;\n        let descriptor = new WebGLUniformBufferDescriptor(name);\n        uniformMap.forEach(uniform => {\n            descriptor.addUniform(uniform.id, uniform.uniformtype, uniform.arrayLength);\n        });\n        descriptor.finish(this.manager.byteAlign / 4);\n        let bufferSize = descriptor.byteLength;\n        this.descriptor = descriptor;\n        this.size = bufferSize;\n        this.bufferBlock = mgr.getBlock(bufferSize, this);\n        this.needUpload = true;\n    }\n    updateOver() {\n        this.needUpload = false;\n    }\n    clearGPUBufferBind() {\n    }\n    notifyGPUBufferChange() {\n        this.offset = this.bufferBlock.offset;\n        this.needUpload = true;\n        this.descriptor.uniforms.forEach(uniform => {\n            let size = uniform.viewByteLength / uniform.dataView.BYTES_PER_ELEMENT;\n            let offset = uniform.offset + this.bufferBlock.offset;\n            uniform.view = new uniform.dataView(this.bufferBlock.cluster.data, offset, size);\n        });\n        this.needUpload = true;\n    }\n    destroy() {\n        this.name = null;\n        this.data = null;\n        this.uniformMap = null;\n        this.descriptor.destroy();\n        this.descriptor = null;\n        this.manager.freeBlock(this.bufferBlock);\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Resource } from \"../../../resource/Resource\";\nimport { WebGLEngine } from \"../../WebGLDriver/RenderDevice/WebGLEngine\";\nimport { ShaderData } from \"../../DriverDesign/RenderDevice/ShaderData\";\nimport { WebDefineDatas } from \"./WebDefineDatas\";\nimport { WebGLUniformBuffer } from \"../../WebGLDriver/RenderDevice/WebGLUniformBuffer\";\nimport { WebGLSubUniformBuffer } from \"../../WebGLDriver/RenderDevice/WebGLSubUniformBuffer\";\nimport { WebGLUniformBufferBase } from \"../../WebGLDriver/RenderDevice/WebGLUniformBufferBase\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Config } from \"../../../../Config\";\nexport class WebGLShaderData extends ShaderData {\n    constructor(ownerResource = null) {\n        super(ownerResource);\n        this._data = null;\n        this._defineDatas = new WebDefineDatas();\n        this._needCacheData = false;\n        this._updateCacheArray = null;\n        this._subUboBufferNumber = 0;\n        this._initData();\n    }\n    _initData() {\n        this._data = {};\n        this._updateCacheArray = {};\n        this._gammaColorMap = new Map();\n        this._uniformBuffers = new Map();\n        this._subUniformBuffers = new Map();\n        this._uniformBuffersPropertyMap = new Map();\n    }\n    createUniformBuffer(name, uniformMap) {\n        if (!Config._uniformBlock || this._uniformBuffers.has(name)) {\n            return null;\n        }\n        this._needCacheData = true;\n        let uboBuffer = new WebGLUniformBuffer(name);\n        uniformMap.forEach(uniform => {\n            uboBuffer.addUniform(uniform.id, uniform.uniformtype, uniform.arrayLength);\n        });\n        uboBuffer.create();\n        this._uniformBuffers.set(name, uboBuffer);\n        let id = Shader3D.propertyNameToID(name);\n        this._data[id] = uboBuffer;\n        uniformMap.forEach(uniform => {\n            let uniformId = uniform.id;\n            let data = this._data[uniformId];\n            if (data != null) {\n                uboBuffer.setUniformData(uniformId, uniform.uniformtype, data);\n            }\n            this._uniformBuffersPropertyMap.set(uniformId, uboBuffer);\n        });\n        return uboBuffer;\n    }\n    updateUBOBuffer(name) {\n        if (!Config._uniformBlock) {\n            return;\n        }\n        let buffer = this._uniformBuffers.get(name) || this._subUniformBuffers.get(name);\n        if (!buffer) {\n            return;\n        }\n        for (var i in this._updateCacheArray) {\n            let index = parseInt(i);\n            let ubo = this._uniformBuffersPropertyMap.get(index);\n            if (ubo) {\n                this._updateCacheArray[i].call(ubo, index, this._data[index]);\n            }\n        }\n        this._updateCacheArray = {};\n        buffer.needUpload && buffer.upload();\n    }\n    createSubUniformBuffer(name, cacheName, uniformMap) {\n        let subBuffer = this._subUniformBuffers.get(cacheName);\n        if (subBuffer) {\n            if (this._subUboBufferNumber < 2) {\n                for (var i in this._updateCacheArray) {\n                    let index = parseInt(i);\n                    let ubo = this._uniformBuffersPropertyMap.get(index);\n                    if (ubo) {\n                        this._updateCacheArray[i].call(ubo, index, this._data[index]);\n                    }\n                }\n                this._updateCacheArray = {};\n            }\n            else {\n                uniformMap.forEach((uniform, index) => {\n                    if (this._data[index] && this._updateCacheArray[index]) {\n                        this._updateCacheArray[index].call(subBuffer, index, this._data[index]);\n                    }\n                });\n            }\n            return subBuffer;\n        }\n        let engine = WebGLEngine.instance;\n        let mgr = engine.bufferMgr;\n        let uniformBuffer = new WebGLSubUniformBuffer(name, uniformMap, mgr, this);\n        this._subUboBufferNumber++;\n        this._needCacheData = true;\n        uniformBuffer.notifyGPUBufferChange();\n        this._subUniformBuffers.set(cacheName, uniformBuffer);\n        let id = Shader3D.propertyNameToID(name);\n        this._data[id] = uniformBuffer;\n        uniformMap.forEach(uniform => {\n            let uniformId = uniform.id;\n            let data = this._data[uniformId];\n            if (data != null) {\n                uniformBuffer.setUniformData(uniformId, uniform.uniformtype, data);\n            }\n            this._uniformBuffersPropertyMap.set(uniformId, uniformBuffer);\n        });\n        return uniformBuffer;\n    }\n    getData() {\n        return this._data;\n    }\n    addDefine(define) {\n        this._defineDatas.add(define);\n    }\n    addDefines(define) {\n        this._defineDatas.addDefineDatas(define);\n    }\n    removeDefine(define) {\n        this._defineDatas.remove(define);\n    }\n    removeDefines(defines) {\n        this._defineDatas.removeDefineDatas(defines);\n    }\n    hasDefine(define) {\n        return this._defineDatas.has(define);\n    }\n    clearDefine() {\n        this._defineDatas.clear();\n    }\n    clearData() {\n        for (const key in this._data) {\n            if (this._data[key] instanceof Resource) {\n                this._data[key]._removeReference();\n            }\n        }\n        this._uniformBuffersPropertyMap.clear();\n        this._uniformBuffers.forEach(buffer => {\n            buffer.destroy();\n        });\n        this._uniformBuffers.clear();\n        this._subUniformBuffers.forEach(buffer => {\n            buffer.destroy();\n        });\n        this._subUniformBuffers.clear();\n        this._data = {};\n        this._gammaColorMap.clear();\n        this.clearDefine();\n        this._needCacheData = false;\n        this._subUboBufferNumber = 0;\n    }\n    getBool(index) {\n        return this._data[index];\n    }\n    setBool(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n        }\n    }\n    getInt(index) {\n        return this._data[index];\n    }\n    setInt(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setInt;\n        }\n    }\n    getNumber(index) {\n        return this._data[index];\n    }\n    setNumber(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setFloat;\n        }\n    }\n    getVector2(index) {\n        return this._data[index];\n    }\n    setVector2(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector2;\n        }\n    }\n    getVector3(index) {\n        return this._data[index];\n    }\n    setVector3(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector3;\n        }\n    }\n    getVector(index) {\n        return this._data[index];\n    }\n    setVector(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector4;\n        }\n    }\n    getColor(index) {\n        return this._gammaColorMap.get(index);\n    }\n    setColor(index, value) {\n        if (!value)\n            return;\n        if (this._data[index]) {\n            let gammaColor = this._gammaColorMap.get(index);\n            value.cloneTo(gammaColor);\n            let linearColor = this._data[index];\n            linearColor.x = Color.gammaToLinearSpace(value.r);\n            linearColor.y = Color.gammaToLinearSpace(value.g);\n            linearColor.z = Color.gammaToLinearSpace(value.b);\n            linearColor.w = value.a;\n        }\n        else {\n            let linearColor = new Vector4();\n            linearColor.x = Color.gammaToLinearSpace(value.r);\n            linearColor.y = Color.gammaToLinearSpace(value.g);\n            linearColor.z = Color.gammaToLinearSpace(value.b);\n            linearColor.w = value.a;\n            this._data[index] = linearColor;\n            this._gammaColorMap.set(index, value.clone());\n        }\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector4;\n        }\n    }\n    getLinearColor(index) {\n        return this._data[index];\n    }\n    getMatrix4x4(index) {\n        return this._data[index];\n    }\n    setMatrix4x4(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else {\n            this._data[index] = value.clone();\n        }\n        if (this._needCacheData)\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setMatrix4x4;\n    }\n    getMatrix3x3(index) {\n        return this._data[index];\n    }\n    setMatrix3x3(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else {\n            this._data[index] = value.clone();\n        }\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setMatrix3x3;\n        }\n    }\n    getBuffer(index) {\n        return this._data[index];\n    }\n    setBuffer(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setArrayBuffer;\n        }\n    }\n    setTexture(index, value) {\n        var lastValue = this._data[index];\n        if (value) {\n            let shaderDefine = WebGLEngine._texGammaDefine[index];\n            if (shaderDefine && value && value.gammaCorrection > 1) {\n                this.addDefine(shaderDefine);\n            }\n            else {\n                shaderDefine && this.removeDefine(shaderDefine);\n            }\n        }\n        this._data[index] = value;\n        lastValue && lastValue._removeReference();\n        value && value._addReference();\n    }\n    _setInternalTexture(index, value) {\n        var lastValue = this._data[index];\n        if (value) {\n            let shaderDefine = WebGLEngine._texGammaDefine[index];\n            if (shaderDefine && value && value.gammaCorrection > 1) {\n                this.addDefine(shaderDefine);\n            }\n            else {\n                shaderDefine && this.removeDefine(shaderDefine);\n            }\n        }\n        this._data[index] = value;\n    }\n    getTexture(index) {\n        return this._data[index];\n    }\n    getSourceIndex(value) {\n        for (var i in this._data) {\n            if (this._data[i] == value)\n                return Number(i);\n        }\n        return -1;\n    }\n    cloneTo(destObject) {\n        destObject.clearData();\n        var destData = destObject._data;\n        for (var k in this._data) {\n            var value = this._data[k];\n            if (value != null) {\n                if (typeof value == \"number\") {\n                    destData[k] = value;\n                }\n                else if (typeof value == \"boolean\") {\n                    destData[k] = value;\n                }\n                else if (value instanceof Vector2) {\n                    let v2 = destData[k] || (destData[k] = new Vector2());\n                    value.cloneTo(v2);\n                }\n                else if (value instanceof Vector3) {\n                    let v3 = destData[k] || (destData[k] = new Vector3());\n                    value.cloneTo(v3);\n                }\n                else if (value instanceof Vector4) {\n                    let color = this.getColor(parseInt(k));\n                    if (color) {\n                        let clonecolor = color.clone();\n                        destObject.setColor(parseInt(k), clonecolor);\n                    }\n                    else {\n                        let v4 = destData[k] || (destData[k] = new Vector4());\n                        value.cloneTo(v4);\n                    }\n                }\n                else if (value instanceof Matrix3x3) {\n                    let mat = destData[k] || (destData[k] = new Matrix3x3());\n                    value.cloneTo(mat);\n                }\n                else if (value instanceof Matrix4x4) {\n                    let mat = destData[k] || (destData[k] = new Matrix4x4());\n                    value.cloneTo(mat);\n                }\n                else if (value instanceof Resource) {\n                    destData[k] = value;\n                    value._addReference();\n                }\n            }\n        }\n        this._defineDatas.cloneTo(destObject._defineDatas);\n        this._gammaColorMap.forEach((color, index) => {\n            destObject._gammaColorMap.set(index, color.clone());\n        });\n    }\n    getDefineData() {\n        return this._defineDatas;\n    }\n    clone() {\n        var dest = new WebGLShaderData();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy() {\n        this.clearData();\n        this._defineDatas.destroy();\n        this._defineDatas = null;\n        this._gammaColorMap.clear();\n        this._gammaColorMap = null;\n    }\n}\n","import { RenderState } from \"../Design/RenderState\";\nexport class WebShaderPass {\n    get renderState() {\n        return this._renderState;\n    }\n    set renderState(value) {\n        this._renderState = value;\n    }\n    get validDefine() {\n        return this._validDefine;\n    }\n    set validDefine(value) {\n        this._validDefine = value;\n    }\n    constructor(pass) {\n        this._cacheShaderHierarchy = 1;\n        this._cacheSharders = {};\n        this._renderState = new RenderState();\n        this._renderState.setNull();\n    }\n    _resizeCacheShaderMap(cacheMap, hierarchy, resizeLength) {\n        var end = this._cacheShaderHierarchy - 1;\n        if (hierarchy == end) {\n            for (var k in cacheMap) {\n                var shader = cacheMap[k];\n                for (var i = 0, n = resizeLength - end; i < n; i++) {\n                    if (i == n - 1)\n                        cacheMap[0] = shader;\n                    else\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\n                }\n            }\n        }\n        else {\n            ++hierarchy;\n            for (var k in cacheMap)\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\n        }\n    }\n    setCacheShader(compileDefine, shader) {\n        var cacheShaders = this._cacheSharders;\n        var mask = compileDefine._mask;\n        var endIndex = compileDefine._length - 1;\n        var maxEndIndex = this._cacheShaderHierarchy - 1;\n        for (var i = 0; i < maxEndIndex; i++) {\n            var subMask = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n        var cacheKey = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        cacheShaders[cacheKey] = shader;\n    }\n    getCacheShader(compileDefine) {\n        compileDefine._intersectionDefineDatas(this._validDefine);\n        var cacheShaders = this._cacheSharders;\n        var maskLength = compileDefine._length;\n        if (maskLength > this._cacheShaderHierarchy) {\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\n            this._cacheShaderHierarchy = maskLength;\n        }\n        var mask = compileDefine._mask;\n        var endIndex = compileDefine._length - 1;\n        var maxEndIndex = this._cacheShaderHierarchy - 1;\n        for (var i = 0; i < maxEndIndex; i++) {\n            var subMask = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n        var cacheKey = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        var shader = cacheShaders[cacheKey];\n        return shader;\n    }\n    destroy() {\n    }\n}\n","import { NotImplementedError } from \"../../../utils/Error\";\nexport class WebSubShader {\n    setUniformMap(_uniformMap) {\n    }\n    destroy() {\n        throw new NotImplementedError();\n    }\n    addShaderPass(pass) { }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { RenderState } from \"../Design/RenderState\";\nimport { WebDefineDatas } from \"./WebDefineDatas\";\nimport { WebShaderPass } from \"./WebShaderPass\";\nimport { WebSubShader } from \"./WebSubShader\";\nexport class WebUnitRenderModuleDataFactory {\n    createSubShader() {\n        return new WebSubShader();\n    }\n    createShaderPass(pass) {\n        return new WebShaderPass(pass);\n    }\n    createRenderState() {\n        return new RenderState();\n    }\n    createDefineDatas() {\n        return new WebDefineDatas();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.unitRenderModuleDataFactory)\n        LayaGL.unitRenderModuleDataFactory = new WebUnitRenderModuleDataFactory();\n});\n","import { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Blit2DQuadCMD, Draw2DElementCMD, SetRendertarget2DCMD } from \"../../DriverDesign/2DRenderPass/IRender2DCMD\";\nimport { RenderCMDType } from \"../../DriverDesign/RenderDevice/IRenderCMD\";\nexport class WebGLSetRendertarget2DCMD extends SetRendertarget2DCMD {\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeRenderTarget;\n        this._clearColorValue = new Color();\n    }\n    apply(context) {\n        if (this.rt)\n            context.invertY = this.invertY;\n        else\n            context.invertY = false;\n        context.setRenderTarget(this.rt, this.clearColor, this.clearColorValue);\n    }\n}\nexport class WebGLDraw2DElementCMD extends Draw2DElementCMD {\n    constructor() {\n        super();\n        this.type = RenderCMDType.DrawElement;\n    }\n    setRenderelements(value) {\n        this._elemets = value;\n    }\n    apply(context) {\n        if (this._elemets.length == 1) {\n            context.drawRenderElementOne(this._elemets[0]);\n        }\n        else {\n            this._elemets.forEach(element => {\n                context.drawRenderElementOne(element);\n            });\n        }\n    }\n}\nexport class WebGLBlit2DQuadCMD extends Blit2DQuadCMD {\n    static _init_() {\n        WebGLBlit2DQuadCMD.SCREENTEXTURE_ID = Shader3D.propertyNameToID(\"u_MainTex\");\n        WebGLBlit2DQuadCMD.SCREENTEXTUREOFFSETSCALE_ID = Shader3D.propertyNameToID(\"u_OffsetScale\");\n        WebGLBlit2DQuadCMD.MAINTEXTURE_TEXELSIZE_ID = Shader3D.propertyNameToID(\"u_MainTex_TexelSize\");\n        WebGLBlit2DQuadCMD.GammaCorrect = Shader3D.getDefineByName(\"GAMMACORRECT\");\n    }\n    constructor() {\n        super();\n        if (!WebGLBlit2DQuadCMD.SCREENTEXTURE_ID) {\n            WebGLBlit2DQuadCMD._init_();\n        }\n        this.type = RenderCMDType.Blit;\n        this._offsetScale = new Vector4();\n        this._sourceTexelSize = new Vector4();\n    }\n    set source(value) {\n        this._source = value;\n        if (this._source) {\n            this._sourceTexelSize.setValue(1.0 / this._source.width, 1.0 / this._source.height, this._source.width, this._source.height);\n        }\n    }\n    apply(context) {\n        let cacheInvert = context.invertY;\n        if (!this._dest) {\n            context.invertY = false;\n            this.element.materialShaderData.addDefine(WebGLBlit2DQuadCMD.GammaCorrect);\n        }\n        else {\n            this.element.materialShaderData.removeDefine(WebGLBlit2DQuadCMD.GammaCorrect);\n        }\n        this.element.materialShaderData._setInternalTexture(WebGLBlit2DQuadCMD.SCREENTEXTURE_ID, this._source);\n        this.element.materialShaderData.setVector(WebGLBlit2DQuadCMD.SCREENTEXTUREOFFSETSCALE_ID, this._offsetScale);\n        this.element.materialShaderData.setVector(WebGLBlit2DQuadCMD.MAINTEXTURE_TEXELSIZE_ID, this._sourceTexelSize);\n        context.setRenderTarget(this._dest, false, Color.BLACK);\n        context.drawRenderElementOne(this.element);\n        context.invertY = cacheInvert;\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { SetRenderDataCMD, RenderCMDType, SetShaderDefineCMD } from \"../../DriverDesign/RenderDevice/IRenderCMD\";\nimport { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nexport class WebGLSetRenderData extends SetRenderDataCMD {\n    get dataType() {\n        return this._dataType;\n    }\n    set dataType(value) {\n        this._dataType = value;\n    }\n    get propertyID() {\n        return this._propertyID;\n    }\n    set propertyID(value) {\n        this._propertyID = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        switch (this.dataType) {\n            case ShaderDataType.Int:\n            case ShaderDataType.Float:\n            case ShaderDataType.Bool:\n                this.data_number = value;\n                this._value = this.data_number;\n                break;\n            case ShaderDataType.Matrix4x4:\n                !this.data_mat && (this.data_mat = new Matrix4x4());\n                value.cloneTo(this.data_mat);\n                this._value = this.data_mat;\n                break;\n            case ShaderDataType.Color:\n                !this.data_Color && (this.data_Color = new Color());\n                value.cloneTo(this.data_Color);\n                this._value = this.data_Color;\n                break;\n            case ShaderDataType.Texture2D:\n                this._value = this.data_texture = value;\n                break;\n            case ShaderDataType.Vector4:\n                !this.data_v4 && (this.data_v4 = new Vector4());\n                value.cloneTo(this.data_v4);\n                this._value = this.data_v4;\n                break;\n            case ShaderDataType.Vector2:\n                !this.data_v2 && (this.data_v2 = new Vector2());\n                value.cloneTo(this.data_v2);\n                this._value = this.data_v2;\n                break;\n            case ShaderDataType.Vector3:\n                !this.data_v3 && (this.data_v3 = new Vector3());\n                value.cloneTo(this.data_v3);\n                this._value = this.data_v3;\n                break;\n            case ShaderDataType.Buffer:\n                this._value = this.data_Buffer = value;\n                break;\n            default:\n                break;\n        }\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeData;\n    }\n    apply(context) {\n        switch (this.dataType) {\n            case ShaderDataType.Int:\n                this.dest.setInt(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Float:\n                this.dest.setNumber(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Bool:\n                this.dest.setBool(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Matrix4x4:\n                this.dest.setMatrix4x4(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Color:\n                this.dest.setColor(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Texture2D:\n                this.dest.setTexture(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Vector4:\n                this.dest.setVector(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Vector2:\n                this.dest.setVector2(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Vector3:\n                this.dest.setVector3(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Buffer:\n                this.dest.setBuffer(this.propertyID, this.value);\n                break;\n            default:\n                break;\n        }\n    }\n}\nexport class WebGLSetShaderDefine extends SetShaderDefineCMD {\n    get define() {\n        return this._define;\n    }\n    set define(value) {\n        this._define = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    get add() {\n        return this._add;\n    }\n    set add(value) {\n        this._add = value;\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeShaderDefine;\n    }\n    apply(context) {\n        if (this.add) {\n            this._dest.addDefine(this.define);\n        }\n        else {\n            this._dest.removeDefine(this.define);\n        }\n    }\n}\n","import { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nexport class WebGLVertexBuffer {\n    get vertexDeclaration() {\n        return this._vertexDeclaration;\n    }\n    set vertexDeclaration(value) {\n        this._vertexDeclaration = value;\n        this._shaderValues = this._vertexDeclaration._shaderValues;\n    }\n    constructor(targetType, bufferUsageType) {\n        this._glBuffer = WebGLEngine.instance.createBuffer(targetType, bufferUsageType);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_VertexBuffer, 1);\n    }\n    _changeMemory(bytelength) {\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_VertexBuffer, -this._glBuffer._byteLength + bytelength);\n    }\n    setDataLength(byteLength) {\n        this._changeMemory(byteLength);\n        this._glBuffer.setDataLength(byteLength);\n    }\n    setData(buffer, bufferOffset, dataStartIndex, dataCount) {\n        this.bind();\n        var needSubData = dataStartIndex !== 0 || dataCount !== Number.MAX_SAFE_INTEGER;\n        if (needSubData) {\n            var subData = new Uint8Array(buffer, dataStartIndex, dataCount);\n            this._glBuffer.setData(subData, bufferOffset);\n        }\n        else {\n            this._glBuffer.setData(buffer, bufferOffset);\n        }\n    }\n    bind() {\n        return this._glBuffer.bindBuffer();\n    }\n    unbind() {\n        return this._glBuffer.unbindBuffer();\n    }\n    orphanStorage() {\n        this.bind();\n        this._glBuffer.setDataLength(this._glBuffer._byteLength);\n    }\n    destroy() {\n        this._glBuffer.destroy();\n        this._vertexDeclaration = null;\n        this._changeMemory(0);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_VertexBuffer, -1);\n    }\n}\n","import { LayaEnv } from \"../../../../LayaEnv\";\nimport { BufferTargetType, BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\nimport { VertexDeclaration } from \"../../../RenderEngine/VertexDeclaration\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { VertexElement } from \"../../../renders/VertexElement\";\nimport { VertexElementFormat } from \"../../../renders/VertexElementFormat\";\nimport { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nimport { RenderState } from \"../../RenderModuleData/Design/RenderState\";\nimport { WebGLEngine } from \"../RenderDevice/WebGLEngine\";\nimport { WebGLVertexBuffer } from \"../RenderDevice/WebGLVertexBuffer\";\nexport class WebglRenderContext2D {\n    constructor() {\n        this._clearColor = new Color(0, 0, 0, 0);\n        this.invertY = false;\n        this.pipelineMode = \"Forward\";\n        this._globalConfigShaderData = Shader3D._configDefineValues;\n        if (LayaEnv.isConch && !WebglRenderContext2D.isCreateBlitScreenELement) {\n            (!WebglRenderContext2D.isCreateBlitScreenELement) && this.setBlitScreenElement();\n            WebglRenderContext2D.blitContext = new WebglRenderContext2D();\n            let engine = LayaGL.renderEngine;\n            engine.on(\"endFrame\", () => {\n                let last_main_frame_buffer = WebGLEngine._lastFrameBuffer_WebGLOBJ;\n                let last_main_frame = WebGLEngine._lastFrameBuffer;\n                WebGLEngine._lastFrameBuffer_WebGLOBJ = null;\n                WebGLEngine._lastFrameBuffer = null;\n                WebglRenderContext2D.blitContext.setOffscreenView(engine.getInnerWidth(), engine.getInnerHeight());\n                WebglRenderContext2D.blitContext.setRenderTarget(null, true, Color.BLACK);\n                WebglRenderContext2D.blitScreenElement.materialShaderData._setInternalTexture(Shader3D.propertyNameToID(\"u_MainTex\"), last_main_frame._textures[0]);\n                WebglRenderContext2D.blitContext.drawRenderElementOne(WebglRenderContext2D.blitScreenElement);\n                WebGLEngine._lastFrameBuffer_WebGLOBJ = last_main_frame_buffer;\n                WebGLEngine._lastFrameBuffer = last_main_frame;\n                WebGLEngine.instance.getTextureContext().bindRenderTarget(last_main_frame);\n            });\n        }\n    }\n    setBlitScreenElement() {\n        let blitScreenElement = LayaGL.render2DRenderPassFactory.createRenderElement2D();\n        let shaderData = LayaGL.renderDeviceFactory.createShaderData();\n        let _vertices = new Float32Array([\n            1, 1, 1, 1,\n            1, -1, 1, 0,\n            -1, 1, 0, 1,\n            -1, -1, 0, 0\n        ]);\n        let _vertexBuffer = new WebGLVertexBuffer(BufferTargetType.ARRAY_BUFFER, BufferUsage.Dynamic);\n        _vertexBuffer.setDataLength(64);\n        _vertexBuffer.setData(_vertices.buffer, 0, 0, _vertices.buffer.byteLength);\n        let declaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, 0)]);\n        _vertexBuffer.vertexDeclaration = declaration;\n        let geometry = LayaGL.renderDeviceFactory.createRenderGeometryElement(MeshTopology.TriangleStrip, DrawType.DrawArray);\n        geometry.setDrawArrayParams(0, 4);\n        let bufferState = LayaGL.renderDeviceFactory.createBufferState();\n        bufferState.applyState([_vertexBuffer], null);\n        geometry.bufferState = bufferState;\n        let attributeMap = {\n            'a_PositionTexcoord': [0, ShaderDataType.Vector4]\n        };\n        let uniformMap = {\n            \"u_MainTex\": ShaderDataType.Texture2D,\n        };\n        let shader = Shader3D.add(\"GLESblitScreen\", false, false);\n        shader.shaderType = ShaderFeatureType.DEFAULT;\n        let subShader = new SubShader(attributeMap, uniformMap, {});\n        shader.addSubShader(subShader);\n        let vs = `\n            #define SHADER_NAME GLESblitScreenVS\n\n            varying vec2 v_Texcoord0;\n\n            void main()\n            {\n                gl_Position = vec4(- 1.0 + (a_PositionTexcoord.x + 1.0), (1.0 - ((- 1.0 + (-a_PositionTexcoord.y + 1.0)) + 1.0) / 2.0) * 2.0 - 1.0, 0.0, 1.0);\n\n                v_Texcoord0 = a_PositionTexcoord.zw;\n            }\n        `;\n        let fs = `\n            #define SHADER_NAME GLESblitScreenFS\n\n            #include \"Color.glsl\";\n\n            varying vec2 v_Texcoord0;\n\n            void main()\n            {\n                vec4 mainColor = texture2D(u_MainTex, v_Texcoord0);\n               \n                gl_FragColor = mainColor;\n            }\n        `;\n        let pass = subShader.addShaderPass(vs, fs);\n        pass.statefirst = true;\n        let blitState = pass.renderState;\n        blitState.depthTest = RenderState.DEPTHTEST_ALWAYS;\n        blitState.depthWrite = false;\n        blitState.cull = RenderState.CULL_NONE;\n        blitState.blend = RenderState.BLEND_DISABLE;\n        blitState.stencilRef = 1;\n        blitState.stencilTest = RenderState.STENCILTEST_OFF;\n        blitState.stencilWrite = false;\n        blitState.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\n        blitScreenElement.geometry = geometry;\n        blitScreenElement.materialShaderData = shaderData;\n        blitScreenElement.subShader = subShader;\n        blitScreenElement.renderStateIsBySprite = false;\n        WebglRenderContext2D.isCreateBlitScreenELement = true;\n        WebglRenderContext2D.blitScreenElement = blitScreenElement;\n    }\n    drawRenderElementList(list) {\n        for (var i = 0, n = list.length; i < n; i++) {\n            let element = list.elements[i];\n            element._prepare(this);\n        }\n        for (var i = 0, n = list.length; i < n; i++) {\n            let element = list.elements[i];\n            element._render(this);\n        }\n        return 0;\n    }\n    setOffscreenView(width, height) {\n        this._offscreenWidth = width;\n        this._offscreenHeight = height;\n    }\n    setRenderTarget(value, clear, clearColor) {\n        this._destRT = value;\n        clearColor.cloneTo(this._clearColor);\n        if (this._destRT) {\n            WebGLEngine.instance.getTextureContext().bindRenderTarget(this._destRT);\n            WebGLEngine.instance.viewport(0, 0, this._destRT._textures[0].width, this._destRT._textures[0].height);\n        }\n        else {\n            WebGLEngine.instance.getTextureContext().bindoutScreenTarget();\n            WebGLEngine.instance.viewport(0, 0, this._offscreenWidth, this._offscreenHeight);\n        }\n        WebGLEngine.instance.scissorTest(false);\n        WebGLEngine.instance.clearRenderTexture(clear ? RenderClearFlag.Color : RenderClearFlag.Nothing, this._clearColor);\n    }\n    getRenderTarget() {\n        return this._destRT;\n    }\n    drawRenderElementOne(node) {\n        node._prepare(this);\n        node._render(this);\n    }\n    runOneCMD(cmd) {\n        cmd.apply(this);\n    }\n    runCMDList(cmds) {\n        cmds.forEach(element => {\n            element.apply(this);\n        });\n    }\n}\nWebglRenderContext2D.isCreateBlitScreenELement = false;\n","import { FastSinglelist } from \"../../../utils/SingletonList\";\nimport { ShaderDefines2D } from \"../../../webgl/shader/d2/ShaderDefines2D\";\nimport { WebDefineDatas } from \"../../RenderModuleData/WebModuleData/WebDefineDatas\";\nimport { WebGLEngine } from \"../RenderDevice/WebGLEngine\";\nexport class WebGLRenderelement2D {\n    constructor() {\n        this.renderStateIsBySprite = true;\n        this._shaderInstances = new FastSinglelist();\n    }\n    _compileShader(context) {\n        var passes = this.subShader._passes;\n        this._shaderInstances.clear();\n        for (var j = 0, m = passes.length; j < m; j++) {\n            var pass = passes[j];\n            if (pass.pipelineMode !== context.pipelineMode)\n                continue;\n            var comDef = WebGLRenderelement2D._compileDefine;\n            if (context.sceneData) {\n                context.sceneData._defineDatas.cloneTo(comDef);\n            }\n            else {\n                context._globalConfigShaderData.cloneTo(comDef);\n            }\n            let returnGamma = !(context._destRT) || ((context._destRT)._textures[0].gammaCorrection != 1);\n            if (returnGamma) {\n                comDef.add(ShaderDefines2D.GAMMASPACE);\n            }\n            else {\n                comDef.remove(ShaderDefines2D.GAMMASPACE);\n            }\n            if (context.invertY) {\n                comDef.add(ShaderDefines2D.INVERTY);\n            }\n            else {\n                comDef.remove(ShaderDefines2D.INVERTY);\n            }\n            if (this.value2DShaderData) {\n                comDef.addDefineDatas(this.value2DShaderData.getDefineData());\n                pass.nodeCommonMap = this.nodeCommonMap;\n            }\n            if (this.materialShaderData)\n                comDef.addDefineDatas(this.materialShaderData._defineDatas);\n            var shaderIns = pass.withCompile(comDef, true);\n            this._shaderInstances.add(shaderIns);\n        }\n    }\n    _prepare(context) {\n        this._compileShader(context);\n    }\n    _render(context) {\n        if (this._shaderInstances.length == 1) {\n            this.renderByShaderInstance(this._shaderInstances.elements[0], context);\n        }\n        else {\n            var passes = this._shaderInstances.elements;\n            for (var j = 0, m = this._shaderInstances.length; j < m; j++) {\n                this.renderByShaderInstance(passes[j], context);\n            }\n        }\n    }\n    renderByShaderInstance(shader, context) {\n        if (!shader.complete)\n            return;\n        shader.bind();\n        this.value2DShaderData && shader.uploadUniforms(shader._sprite2DUniformParamsMap, this.value2DShaderData, true);\n        context.sceneData && shader.uploadUniforms(shader._sceneUniformParamsMap, context.sceneData, true);\n        this.materialShaderData && shader.uploadUniforms(shader._materialUniformParamsMap, this.materialShaderData, true);\n        if (this.renderStateIsBySprite || !this.materialShaderData) {\n            shader.uploadRenderStateBlendDepth(this.value2DShaderData);\n            shader.uploadRenderStateFrontFace(this.value2DShaderData, false, context.invertY);\n        }\n        else {\n            shader.uploadRenderStateBlendDepth(this.materialShaderData);\n            shader.uploadRenderStateFrontFace(this.materialShaderData, false, context.invertY);\n        }\n        WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry);\n    }\n    destroy() {\n    }\n}\nWebGLRenderelement2D._compileDefine = new WebDefineDatas();\n","import { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { WebGLSetRenderData, WebGLSetShaderDefine } from \"../RenderDevice/WebGLRenderCMD\";\nimport { WebGLBlit2DQuadCMD, WebGLDraw2DElementCMD, WebGLSetRendertarget2DCMD } from \"./WebGL2DRenderCMD\";\nimport { WebglRenderContext2D } from \"./WebGLRenderContext2D\";\nimport { WebGLRenderelement2D } from \"./WebGLRenderElement2D\";\nexport class WebGLRender2DProcess {\n    constructor() {\n    }\n    createSetRenderDataCMD() {\n        return new WebGLSetRenderData();\n    }\n    createSetShaderDefineCMD() {\n        return new WebGLSetShaderDefine();\n    }\n    createBlit2DQuadCMDData() {\n        return new WebGLBlit2DQuadCMD();\n    }\n    createDraw2DElementCMDData() {\n        return new WebGLDraw2DElementCMD();\n    }\n    createSetRendertarget2DCMD() {\n        return new WebGLSetRendertarget2DCMD();\n    }\n    createRenderElement2D() {\n        return new WebGLRenderelement2D();\n    }\n    createRenderContext2D() {\n        return new WebglRenderContext2D();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.render2DRenderPassFactory)\n        LayaGL.render2DRenderPassFactory = new WebGLRender2DProcess();\n});\n","import { WebGLEngine } from \"./WebGLEngine\";\nexport class WebGLBufferState {\n    constructor() {\n        this._glVertexState = WebGLEngine.instance.createVertexState();\n    }\n    applyVertexBuffers() {\n        this._glVertexState.applyVertexBuffer(this._vertexBuffers);\n    }\n    applyIndexBuffers() {\n        this._glVertexState.applyIndexBuffer(this._bindedIndexBuffer);\n    }\n    applyState(vertexBuffers, indexBuffer) {\n        this._vertexBuffers = vertexBuffers.slice();\n        this._bindedIndexBuffer = indexBuffer;\n        indexBuffer && indexBuffer._glBuffer.unbindBuffer();\n        this.bind();\n        this.applyVertexBuffers();\n        this.applyIndexBuffers();\n        this.unBind();\n        indexBuffer && indexBuffer._glBuffer.unbindBuffer();\n    }\n    bind() {\n        this._glVertexState.bindVertexArray();\n        WebGLBufferState._curBindedBufferState = this;\n    }\n    unBind() {\n        if (WebGLBufferState._curBindedBufferState == this) {\n            this._glVertexState.unbindVertexArray();\n            WebGLBufferState._curBindedBufferState = null;\n        }\n        else {\n            throw \"BufferState: must call bind() function first.\";\n        }\n    }\n    isBind() {\n        return (WebGLBufferState._curBindedBufferState == this);\n    }\n    destroy() {\n        if (WebGLBufferState._curBindedBufferState == this) {\n            this._glVertexState.unbindVertexArray();\n            WebGLBufferState._curBindedBufferState = null;\n        }\n        this._glVertexState.destroy();\n        this._vertexBuffers = null;\n        this._bindedIndexBuffer = null;\n    }\n}\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { CommandUniformMap } from \"../../DriverDesign/RenderDevice/CommandUniformMap\";\nexport class WebGLCommandUniformMap extends CommandUniformMap {\n    constructor(stateName) {\n        super(stateName);\n        this._idata = new Map();\n        this._stateName = stateName;\n        this._stateID = Shader3D.propertyNameToID(stateName);\n    }\n    hasPtrID(propertyID) {\n        return this._stateID == propertyID || this._idata.has(propertyID);\n    }\n    addShaderUniform(propertyID, propertyKey, uniformtype) {\n        this._idata.set(propertyID, { id: propertyID, uniformtype: uniformtype, propertyName: propertyKey, arrayLength: 0 });\n    }\n    addShaderUniformArray(propertyID, propertyName, uniformtype, arrayLength, block = \"\") {\n        this._idata.set(propertyID, { id: propertyID, uniformtype: uniformtype, propertyName: propertyName, arrayLength: arrayLength });\n    }\n}\n","export class WebGLConfig {\n}\n","import { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { WebGLBufferState } from \"./WebGLBufferState\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nexport class WebGLIndexBuffer {\n    constructor(targetType, bufferUsageType) {\n        this._glBuffer = this._glBuffer = WebGLEngine.instance.createBuffer(targetType, bufferUsageType);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_IndexBuffer, 1);\n    }\n    _changeMemory(bytelength) {\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_IndexBuffer, -this._glBuffer._byteLength + bytelength);\n    }\n    _setIndexDataLength(data) {\n        this._changeMemory(data);\n        var curBufSta = WebGLBufferState._curBindedBufferState;\n        if (curBufSta) {\n            curBufSta.unBind();\n            this._glBuffer.bindBuffer();\n            this._glBuffer.setDataLength(data);\n            curBufSta.bind();\n        }\n        else {\n            this._glBuffer.bindBuffer();\n            this._glBuffer.setDataLength(data);\n        }\n    }\n    _setIndexData(data, bufferOffset) {\n        var curBufSta = WebGLBufferState._curBindedBufferState;\n        if (curBufSta) {\n            curBufSta.unBind();\n            this._glBuffer.bindBuffer();\n            this._glBuffer.setData(data, bufferOffset);\n            curBufSta.bind();\n        }\n        else {\n            this._glBuffer.bindBuffer();\n            this._glBuffer.setData(data, bufferOffset);\n        }\n    }\n    destroy() {\n        this._glBuffer.destroy();\n        this._changeMemory(0);\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.RC_IndexBuffer, -1);\n    }\n}\n","import { FastSinglelist } from \"../../../utils/SingletonList\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nexport class WebGLRenderGeometryElement {\n    get indexFormat() {\n        return this._indexFormat;\n    }\n    set indexFormat(value) {\n        this._indexFormat = value;\n        this._glindexFormat = WebGLEngine.instance.getDrawContext().getIndexType(this._indexFormat);\n    }\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._glmode = WebGLEngine.instance.getDrawContext().getMeshTopology(this._mode);\n    }\n    constructor(mode, drawType) {\n        this._id = ++WebGLRenderGeometryElement._idCounter;\n        this.mode = mode;\n        this.drawParams = new FastSinglelist();\n        this.drawType = drawType;\n    }\n    getDrawDataParams(out) {\n        out && this.drawParams.cloneTo(out);\n    }\n    setDrawArrayParams(first, count) {\n        this.drawParams.add(first);\n        this.drawParams.add(count);\n    }\n    setDrawElemenParams(count, offset) {\n        this.drawParams.add(offset);\n        this.drawParams.add(count);\n    }\n    destroy() {\n        delete this.drawParams;\n    }\n    clearRenderParams() {\n        this.drawParams.length = 0;\n    }\n    cloneTo(obj) {\n        obj.mode = this.mode;\n        obj.drawType = this.drawType;\n        obj.indexFormat = this.indexFormat;\n        obj.instanceCount = this.instanceCount;\n        obj.drawParams.elements = this.drawParams.elements.slice();\n        obj.drawParams.length = this.drawParams.length;\n    }\n}\nWebGLRenderGeometryElement._idCounter = 0;\n","import { CullMode } from \"../../../RenderEngine/RenderEnum/CullMode\";\nimport { GLSLCodeGenerator } from \"../../../RenderEngine/RenderShader/GLSLCodeGenerator\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { RenderStateContext } from \"../../../RenderEngine/RenderStateContext\";\nimport { CommandEncoder } from \"../../../layagl/CommandEncoder\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { RenderState } from \"../../RenderModuleData/Design/RenderState\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { Config } from \"../../../../Config\";\nimport { WebGLRenderContext3D } from \"../3DRenderPass/WebGLRenderContext3D\";\nexport class WebGLShaderInstance {\n    constructor() {\n        this._cacheShaerVariable = {};\n        this._uploadMark = -1;\n        this._uploadRenderType = -1;\n        this._additionUniformParamsMaps = new Map();\n        this._additionShaderData = new Map();\n    }\n    _serializeShader() {\n        return null;\n    }\n    _deserialize(buffer) {\n        return false;\n    }\n    get complete() {\n        return this._renderShaderInstance._complete;\n    }\n    _create(shaderProcessInfo, shaderPass) {\n        let useMaterial = Config.matUseUBO;\n        Config.matUseUBO = (!shaderProcessInfo.is2D) && Config.matUseUBO;\n        let shaderObj = GLSLCodeGenerator.GLShaderLanguageProcess3D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps);\n        this._renderShaderInstance = WebGLEngine.instance.createShaderInstance(shaderObj.vs, shaderObj.fs, shaderProcessInfo.attributeMap);\n        Config.matUseUBO = useMaterial;\n        if (WebGLEngine._lastShaderError) {\n            console.warn(`[ShaderCompile]Error compiling shader '${shaderPass._owner._owner.name}' (pipelineMode=${shaderPass.pipelineMode})\\n`, WebGLEngine._lastShaderError);\n        }\n        if (this._renderShaderInstance._complete) {\n            this._shaderPass = shaderPass.moduleData;\n            shaderProcessInfo.is2D ? this._create2D() : this._create3D();\n        }\n    }\n    _create3D() {\n        this._sceneUniformParamsMap = new CommandEncoder();\n        this._cameraUniformParamsMap = new CommandEncoder();\n        this._spriteUniformParamsMap = new CommandEncoder();\n        this._materialUniformParamsMap = new CommandEncoder();\n        let context = WebGLRenderContext3D._instance;\n        let preDrawUniforms = context._preDrawUniformMaps;\n        let preDrawParams = [];\n        for (let key of preDrawUniforms) {\n            let params = LayaGL.renderDeviceFactory.createGlobalUniformMap(key);\n            preDrawParams.push(params);\n        }\n        const cameraParams = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"BaseCamera\");\n        let i, n;\n        let data = this._renderShaderInstance.getUniformMap();\n        for (i = 0, n = data.length; i < n; i++) {\n            let one = data[i];\n            if (preDrawParams.find((params) => {\n                return params.hasPtrID(one.dataOffset);\n            })) {\n                this._sceneUniformParamsMap.addShaderUniform(one);\n            }\n            else if (cameraParams.hasPtrID(one.dataOffset)) {\n                this._cameraUniformParamsMap.addShaderUniform(one);\n            }\n            else if (this.hasSpritePtrID(one.dataOffset)) {\n                this._spriteUniformParamsMap.addShaderUniform(one);\n            }\n            else if (this._hasAdditionShaderData(one.dataOffset)) {\n                let str = this._hasAdditionShaderData(one.dataOffset);\n                if (!this._additionUniformParamsMaps.get(str)) {\n                    let commandEncoder = new CommandEncoder();\n                    this._additionUniformParamsMaps.set(str, commandEncoder);\n                }\n                this._additionUniformParamsMaps.get(str).addShaderUniform(one);\n            }\n            else {\n                this._materialUniformParamsMap.addShaderUniform(one);\n            }\n        }\n    }\n    _create2D() {\n        this._sprite2DUniformParamsMap = new CommandEncoder();\n        this._materialUniformParamsMap = new CommandEncoder();\n        this._sceneUniformParamsMap = new CommandEncoder();\n        const sceneParms = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Sprite2DGlobal\");\n        let i, n;\n        let data = this._renderShaderInstance.getUniformMap();\n        for (i = 0, n = data.length; i < n; i++) {\n            let one = data[i];\n            if (this.hasSpritePtrID(one.dataOffset)) {\n                this._sprite2DUniformParamsMap.addShaderUniform(one);\n            }\n            else if (sceneParms.hasPtrID(one.dataOffset)) {\n                this._sceneUniformParamsMap.addShaderUniform(one);\n            }\n            else {\n                this._materialUniformParamsMap.addShaderUniform(one);\n            }\n        }\n    }\n    hasSpritePtrID(dataOffset) {\n        let commap = this._shaderPass.nodeCommonMap;\n        if (!commap) {\n            return false;\n        }\n        else {\n            for (let i = 0, n = commap.length; i < n; i++) {\n                if (LayaGL.renderDeviceFactory.createGlobalUniformMap(commap[i]).hasPtrID(dataOffset))\n                    return true;\n            }\n            return false;\n        }\n    }\n    _hasAdditionShaderData(dataOffset) {\n        let additionShaderData = this._shaderPass.additionShaderData;\n        if (!additionShaderData) {\n            return null;\n        }\n        else {\n            for (let i = 0, n = additionShaderData.length; i < n; i++) {\n                if (LayaGL.renderDeviceFactory.createGlobalUniformMap(additionShaderData[i]).hasPtrID(dataOffset))\n                    return additionShaderData[i];\n            }\n        }\n        return null;\n    }\n    _disposeResource() {\n        this._renderShaderInstance.destroy();\n        this._sceneUniformParamsMap = null;\n        this._cameraUniformParamsMap = null;\n        this._spriteUniformParamsMap = null;\n        this._materialUniformParamsMap = null;\n        this._sprite2DUniformParamsMap = null;\n        this._uploadMaterial = null;\n        this._uploadRender = null;\n        this._uploadCameraShaderValue = null;\n        this._uploadScene = null;\n        this._additionShaderData = null;\n    }\n    bind() {\n        return this._renderShaderInstance.bind();\n    }\n    uploadUniforms(shaderUniform, shaderDatas, uploadUnTexture) {\n        WebGLEngine.instance._addStatisticsInfo(GPUEngineStatisticsInfo.C_UniformBufferUploadCount, WebGLEngine.instance.uploadUniforms(this._renderShaderInstance, shaderUniform, shaderDatas, uploadUnTexture));\n    }\n    uploadRenderStateBlendDepth(shaderDatas) {\n        if ((this._shaderPass).statefirst)\n            this.uploadRenderStateBlendDepthByShader(shaderDatas);\n        else\n            this.uploadRenderStateBlendDepthByMaterial(shaderDatas);\n    }\n    uploadRenderStateBlendDepthByShader(shaderDatas) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7;\n        var datas = shaderDatas._data;\n        var renderState = (this._shaderPass).renderState;\n        var depthWrite = (_b = ((_a = renderState.depthWrite) !== null && _a !== void 0 ? _a : datas[Shader3D.DEPTH_WRITE])) !== null && _b !== void 0 ? _b : RenderState.Default.depthWrite;\n        RenderStateContext.setDepthMask(depthWrite);\n        var depthTest = (_d = ((_c = renderState.depthTest) !== null && _c !== void 0 ? _c : datas[Shader3D.DEPTH_TEST])) !== null && _d !== void 0 ? _d : RenderState.Default.depthTest;\n        if (depthTest == RenderState.DEPTHTEST_OFF)\n            RenderStateContext.setDepthTest(false);\n        else {\n            RenderStateContext.setDepthTest(true);\n            RenderStateContext.setDepthFunc(depthTest);\n        }\n        var stencilWrite = (_f = ((_e = renderState.stencilWrite) !== null && _e !== void 0 ? _e : datas[Shader3D.STENCIL_WRITE])) !== null && _f !== void 0 ? _f : RenderState.Default.stencilWrite;\n        var stencilTest = (_h = ((_g = renderState.stencilTest) !== null && _g !== void 0 ? _g : datas[Shader3D.STENCIL_TEST])) !== null && _h !== void 0 ? _h : RenderState.Default.stencilTest;\n        RenderStateContext.setStencilMask(stencilWrite);\n        if (stencilWrite) {\n            var stencilOp = (_k = ((_j = renderState.stencilOp) !== null && _j !== void 0 ? _j : datas[Shader3D.STENCIL_Op])) !== null && _k !== void 0 ? _k : RenderState.Default.stencilOp;\n            RenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\n        }\n        if (stencilTest == RenderState.STENCILTEST_OFF) {\n            RenderStateContext.setStencilTest(false);\n        }\n        else {\n            var stencilRef = (_m = ((_l = renderState.stencilRef) !== null && _l !== void 0 ? _l : datas[Shader3D.STENCIL_Ref])) !== null && _m !== void 0 ? _m : RenderState.Default.stencilRef;\n            RenderStateContext.setStencilTest(true);\n            RenderStateContext.setStencilFunc(stencilTest, stencilRef);\n        }\n        var blend = (_p = ((_o = renderState.blend) !== null && _o !== void 0 ? _o : datas[Shader3D.BLEND])) !== null && _p !== void 0 ? _p : RenderState.Default.blend;\n        switch (blend) {\n            case RenderState.BLEND_DISABLE:\n                RenderStateContext.setBlend(false);\n                break;\n            case RenderState.BLEND_ENABLE_ALL:\n                var blendEquation = (_r = ((_q = renderState.blendEquation) !== null && _q !== void 0 ? _q : datas[Shader3D.BLEND_EQUATION])) !== null && _r !== void 0 ? _r : RenderState.Default.blendEquation;\n                var srcBlend = (_t = ((_s = renderState.srcBlend) !== null && _s !== void 0 ? _s : datas[Shader3D.BLEND_SRC])) !== null && _t !== void 0 ? _t : RenderState.Default.srcBlend;\n                var dstBlend = (_v = ((_u = renderState.dstBlend) !== null && _u !== void 0 ? _u : datas[Shader3D.BLEND_DST])) !== null && _v !== void 0 ? _v : RenderState.Default.dstBlend;\n                RenderStateContext.setBlend(true);\n                RenderStateContext.setBlendEquation(blendEquation);\n                RenderStateContext.setBlendFunc(srcBlend, dstBlend);\n                break;\n            case RenderState.BLEND_ENABLE_SEPERATE:\n                var blendEquationRGB = (_x = ((_w = renderState.blendEquationRGB) !== null && _w !== void 0 ? _w : datas[Shader3D.BLEND_EQUATION_RGB])) !== null && _x !== void 0 ? _x : RenderState.Default.blendEquationRGB;\n                var blendEquationAlpha = (_z = ((_y = renderState.blendEquationAlpha) !== null && _y !== void 0 ? _y : datas[Shader3D.BLEND_EQUATION_ALPHA])) !== null && _z !== void 0 ? _z : RenderState.Default.blendEquationAlpha;\n                var srcRGB = (_1 = ((_0 = renderState.srcBlendRGB) !== null && _0 !== void 0 ? _0 : datas[Shader3D.BLEND_SRC_RGB])) !== null && _1 !== void 0 ? _1 : RenderState.Default.srcBlendRGB;\n                var dstRGB = (_3 = ((_2 = renderState.dstBlendRGB) !== null && _2 !== void 0 ? _2 : datas[Shader3D.BLEND_DST_RGB])) !== null && _3 !== void 0 ? _3 : RenderState.Default.dstBlendRGB;\n                var srcAlpha = (_5 = ((_4 = renderState.srcBlendAlpha) !== null && _4 !== void 0 ? _4 : datas[Shader3D.BLEND_SRC_ALPHA])) !== null && _5 !== void 0 ? _5 : RenderState.Default.srcBlendAlpha;\n                var dstAlpha = (_7 = ((_6 = renderState.dstBlendAlpha) !== null && _6 !== void 0 ? _6 : datas[Shader3D.BLEND_DST_ALPHA])) !== null && _7 !== void 0 ? _7 : RenderState.Default.dstBlendAlpha;\n                RenderStateContext.setBlend(true);\n                RenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\n                RenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n                break;\n        }\n    }\n    uploadRenderStateBlendDepthByMaterial(shaderDatas) {\n        var datas = shaderDatas.getData();\n        var depthWrite = datas[Shader3D.DEPTH_WRITE];\n        depthWrite = depthWrite !== null && depthWrite !== void 0 ? depthWrite : RenderState.Default.depthWrite;\n        RenderStateContext.setDepthMask(depthWrite);\n        var depthTest = datas[Shader3D.DEPTH_TEST];\n        depthTest = depthTest !== null && depthTest !== void 0 ? depthTest : RenderState.Default.depthTest;\n        if (depthTest === RenderState.DEPTHTEST_OFF) {\n            RenderStateContext.setDepthTest(false);\n        }\n        else {\n            RenderStateContext.setDepthTest(true);\n            RenderStateContext.setDepthFunc(depthTest);\n        }\n        var stencilWrite = datas[Shader3D.STENCIL_WRITE];\n        stencilWrite = stencilWrite !== null && stencilWrite !== void 0 ? stencilWrite : RenderState.Default.stencilWrite;\n        RenderStateContext.setStencilMask(stencilWrite);\n        if (stencilWrite) {\n            var stencilOp = datas[Shader3D.STENCIL_Op];\n            stencilOp = stencilOp !== null && stencilOp !== void 0 ? stencilOp : RenderState.Default.stencilOp;\n            RenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\n        }\n        var stencilTest = datas[Shader3D.STENCIL_TEST];\n        stencilTest = stencilTest !== null && stencilTest !== void 0 ? stencilTest : RenderState.Default.stencilTest;\n        if (stencilTest == RenderState.STENCILTEST_OFF) {\n            RenderStateContext.setStencilTest(false);\n        }\n        else {\n            var stencilRef = datas[Shader3D.STENCIL_Ref];\n            stencilRef = stencilRef !== null && stencilRef !== void 0 ? stencilRef : RenderState.Default.stencilRef;\n            RenderStateContext.setStencilTest(true);\n            RenderStateContext.setStencilFunc(stencilTest, stencilRef);\n        }\n        var blend = datas[Shader3D.BLEND];\n        blend = blend !== null && blend !== void 0 ? blend : RenderState.Default.blend;\n        switch (blend) {\n            case RenderState.BLEND_ENABLE_ALL:\n                var blendEquation = datas[Shader3D.BLEND_EQUATION];\n                blendEquation = blendEquation !== null && blendEquation !== void 0 ? blendEquation : RenderState.Default.blendEquation;\n                var srcBlend = datas[Shader3D.BLEND_SRC];\n                srcBlend = srcBlend !== null && srcBlend !== void 0 ? srcBlend : RenderState.Default.srcBlend;\n                var dstBlend = datas[Shader3D.BLEND_DST];\n                dstBlend = dstBlend !== null && dstBlend !== void 0 ? dstBlend : RenderState.Default.dstBlend;\n                RenderStateContext.setBlend(true);\n                RenderStateContext.setBlendEquation(blendEquation);\n                RenderStateContext.setBlendFunc(srcBlend, dstBlend);\n                break;\n            case RenderState.BLEND_ENABLE_SEPERATE:\n                var blendEquationRGB = datas[Shader3D.BLEND_EQUATION_RGB];\n                blendEquationRGB = blendEquationRGB !== null && blendEquationRGB !== void 0 ? blendEquationRGB : RenderState.Default.blendEquationRGB;\n                var blendEquationAlpha = datas[Shader3D.BLEND_EQUATION_ALPHA];\n                blendEquationAlpha = blendEquationAlpha !== null && blendEquationAlpha !== void 0 ? blendEquationAlpha : RenderState.Default.blendEquationAlpha;\n                var srcRGB = datas[Shader3D.BLEND_SRC_RGB];\n                srcRGB = srcRGB !== null && srcRGB !== void 0 ? srcRGB : RenderState.Default.srcBlendRGB;\n                var dstRGB = datas[Shader3D.BLEND_DST_RGB];\n                dstRGB = dstRGB !== null && dstRGB !== void 0 ? dstRGB : RenderState.Default.dstBlendRGB;\n                var srcAlpha = datas[Shader3D.BLEND_SRC_ALPHA];\n                srcAlpha = srcAlpha !== null && srcAlpha !== void 0 ? srcAlpha : RenderState.Default.srcBlendAlpha;\n                var dstAlpha = datas[Shader3D.BLEND_DST_ALPHA];\n                dstAlpha = dstAlpha !== null && dstAlpha !== void 0 ? dstAlpha : RenderState.Default.dstBlendAlpha;\n                RenderStateContext.setBlend(true);\n                RenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\n                RenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n                break;\n            case RenderState.BLEND_DISABLE:\n            default:\n                RenderStateContext.setBlend(false);\n                break;\n        }\n    }\n    uploadRenderStateFrontFace(shaderDatas, isTarget, invertFront) {\n        var _a;\n        var renderState = (this._shaderPass).renderState;\n        var datas = shaderDatas.getData();\n        var cull = datas[Shader3D.CULL];\n        if ((this._shaderPass).statefirst) {\n            cull = (_a = renderState.cull) !== null && _a !== void 0 ? _a : cull;\n        }\n        cull = cull !== null && cull !== void 0 ? cull : RenderState.Default.cull;\n        var forntFace;\n        switch (cull) {\n            case RenderState.CULL_NONE:\n                RenderStateContext.setCullFace(false);\n                if (isTarget != invertFront)\n                    forntFace = CullMode.Front;\n                else\n                    forntFace = CullMode.Back;\n                RenderStateContext.setFrontFace(forntFace);\n                break;\n            case RenderState.CULL_FRONT:\n                RenderStateContext.setCullFace(true);\n                if (isTarget == invertFront)\n                    forntFace = CullMode.Front;\n                else\n                    forntFace = CullMode.Back;\n                RenderStateContext.setFrontFace(forntFace);\n                break;\n            case RenderState.CULL_BACK:\n            default:\n                RenderStateContext.setCullFace(true);\n                if (isTarget != invertFront)\n                    forntFace = CullMode.Front;\n                else\n                    forntFace = CullMode.Back;\n                RenderStateContext.setFrontFace(forntFace);\n                break;\n        }\n    }\n}\n","import { Config } from \"../../../../Config\";\nimport { BufferTargetType } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { WebGLRenderGeometryElement } from \"./WebGLRenderGeometryElement\";\nimport { WebGLBufferState } from \"./WebGLBufferState\";\nimport { WebGLIndexBuffer } from \"./WebGLIndexBuffer\";\nimport { WebGLShaderInstance } from \"./WebGLShaderInstance\";\nimport { WebGLVertexBuffer } from \"./WebGLVertexBuffer\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { WebGLEngine } from \"./WebGLEngine\";\nimport { WebGLMode } from \"./WebGLEngine/GLEnum/WebGLMode\";\nimport { WebGLCommandUniformMap } from \"./WebGLCommandUniformMap\";\nimport { WebGLShaderData } from \"../../RenderModuleData/WebModuleData/WebGLShaderData\";\nimport { Laya } from \"../../../../Laya\";\nexport class WebGLRenderDeviceFactory {\n    constructor() {\n        this.globalBlockMap = {};\n    }\n    createShaderData(ownerResource) {\n        return new WebGLShaderData(ownerResource);\n    }\n    createShaderInstance(shaderProcessInfo, shaderPass) {\n        let shaderIns = new WebGLShaderInstance();\n        shaderIns._create(shaderProcessInfo, shaderPass);\n        return shaderIns;\n    }\n    createIndexBuffer(bufferUsageType) {\n        return new WebGLIndexBuffer(BufferTargetType.ELEMENT_ARRAY_BUFFER, bufferUsageType);\n    }\n    createVertexBuffer(bufferUsageType) {\n        return new WebGLVertexBuffer(BufferTargetType.ARRAY_BUFFER, bufferUsageType);\n    }\n    createBufferState() {\n        return new WebGLBufferState();\n    }\n    createRenderGeometryElement(mode, drawType) {\n        return new WebGLRenderGeometryElement(mode, drawType);\n    }\n    createGlobalUniformMap(blockName) {\n        let comMap = this.globalBlockMap[blockName];\n        if (!comMap)\n            comMap = this.globalBlockMap[blockName] = new WebGLCommandUniformMap(blockName);\n        return comMap;\n    }\n    createEngine(config, canvas) {\n        let engine;\n        let glConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\n        const webglMode = Config.useWebGL2 ? WebGLMode.Auto : WebGLMode.WebGL1;\n        engine = new WebGLEngine(glConfig, webglMode);\n        engine.initRenderEngine(canvas.source);\n        var gl = engine._context;\n        if (Config.printWebglOrder)\n            this._replaceWebglcall(gl);\n        if (gl) {\n            new LayaGL();\n        }\n        LayaGL.renderEngine = engine;\n        LayaGL.textureContext = engine.getTextureContext();\n        return Promise.resolve();\n    }\n    _replaceWebglcall(gl) {\n        var tempgl = {};\n        for (const key in gl) {\n            if (typeof gl[key] == \"function\" && key != \"getError\" && key != \"__SPECTOR_Origin_getError\" && key != \"__proto__\") {\n                tempgl[key] = gl[key];\n                gl[key] = function () {\n                    let arr = [];\n                    for (let i = 0; i < arguments.length; i++) {\n                        arr.push(arguments[i]);\n                    }\n                    let result = tempgl[key].apply(gl, arr);\n                    let err = gl.getError();\n                    if (err) {\n                        debugger;\n                    }\n                    return result;\n                };\n            }\n        }\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.renderDeviceFactory)\n        LayaGL.renderDeviceFactory = new WebGLRenderDeviceFactory();\n});\n"],"names":["WebGLExtension","GPUEngineStatisticsInfo","TextureDimension","FilterMode","WrapMode","TextureCompareMode","RenderCapable","RenderParams","TextureFormat","RenderTargetFormat","BufferUsage","BufferTargetType","WebGLMode","MeshTopology","IndexFormat","DrawType","CompareFunction","BlendEquationSeparate","BlendFactor","StencilOperation","CullMode","ShaderVariable","Texture2D","TextureCube","UniformBufferManager","EventDispatcher","Color","Vector4","LayaEnv","Config","Laya","RenderClearFlag","ShaderDefine","ShaderDataType","LayaGL","ShaderData","Shader3D","Resource","Vector2","Vector3","Matrix3x3","Matrix4x4","RenderState","NotImplementedError","SetRendertarget2DCMD","RenderCMDType","Draw2DElementCMD","Blit2DQuadCMD","SetRenderDataCMD","SetShaderDefineCMD","VertexDeclaration","VertexElement","VertexElementFormat","ShaderFeatureType","SubShader","FastSinglelist","ShaderDefines2D","CommandUniformMap","GLSLCodeGenerator","CommandEncoder","WebGLRenderContext3D","RenderStateContext"],"mappings":"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"}