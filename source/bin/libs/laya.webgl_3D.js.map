{"version":3,"file":"laya.webgl_3D.js","sources":["../../bin/tsc/layaAir/laya/RenderDriver/DriverCommon/RenderCullUtil.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverCommon/RenderPassUtil.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverCommon/RenderQuickSort.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverCommon/RenderListQueue.js","../../bin/tsc/layaAir/laya/RenderDriver/DriverCommon/ForwardAddClusterRP.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebBaseRenderNode.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebDirectLight.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebLightmap.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebMeshRenderNode.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebModuleData.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebPointLight.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebReflectionProb.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebSimpleSkinRenderNode.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebSkinRenderNode.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebSpotLight.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebVolumetricGI.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/Web3DRenderModuleFactory.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/3D/WebScene3DRenderManager.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLRenderElement3D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/InstanceRenderElementOBJ.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLInstanceRenderBatch.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLInstanceRenderElement3D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLDirectLightShadowRP.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLRenderContext3D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLForwardAddClusterRP.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLSpotLightShadowRP.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLForwardAddRP.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLRender3DProcess.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLRenderCMD/WebGL3DRenderCMD.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGLSkinRenderElement3D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGLDriver/3DRenderPass/WebGL3DRenderPassFactory.js"],"sourcesContent":["import { FrustumCulling } from \"../../d3/graphics/FrustumCulling\";\nimport { Vector3 } from \"../../maths/Vector3\";\nimport { Stat } from \"../../utils/Stat\";\nexport class RenderCullUtil {\n    static cullByCameraCullInfo(cameraCullInfo, list, count, opaqueList, transparent, context) {\n        const boundFrustum = cameraCullInfo.boundFrustum;\n        const cullMask = cameraCullInfo.cullingMask;\n        const staticMask = cameraCullInfo.staticMask;\n        let render;\n        let canPass;\n        for (let i = 0; i < count; i++) {\n            render = list[i];\n            canPass = ((1 << render.layer) & cullMask) != 0 && (render.renderbitFlag == 0);\n            canPass = canPass && ((render.staticMask & staticMask) != 0);\n            if (canPass) {\n                Stat.frustumCulling++;\n                if (!cameraCullInfo.useOcclusionCulling || render._needRender(boundFrustum)) {\n                    render.distanceForSort = Vector3.distanceSquared(render.bounds._imp.getCenter(), cameraCullInfo.position);\n                    render._renderUpdatePre(context);\n                    let element;\n                    const elements = render.renderelements;\n                    for (let j = 0, len = elements.length; j < len; j++) {\n                        element = elements[j];\n                        if (element.materialRenderQueue > 2500)\n                            transparent.addRenderElement(element);\n                        else\n                            opaqueList.addRenderElement(element);\n                    }\n                }\n            }\n        }\n    }\n    static cullDirectLightShadow(shadowCullInfo, list, count, opaqueList, context) {\n        opaqueList.clear();\n        for (let i = 0; i < count; i++) {\n            const render = list[i];\n            if (render.shadowCullPass()) {\n                Stat.frustumCulling++;\n                if (FrustumCulling.cullingRenderBounds(render.bounds, shadowCullInfo)) {\n                    render.distanceForSort = Vector3.distanceSquared(render.bounds._imp.getCenter(), shadowCullInfo.position);\n                    render._renderUpdatePre(context);\n                    let element;\n                    const elements = render.renderelements;\n                    for (let j = 0, len = elements.length; j < len; j++) {\n                        element = elements[j];\n                        if (element.materialRenderQueue < 2500)\n                            opaqueList.addRenderElement(element);\n                    }\n                }\n            }\n        }\n    }\n    static cullSpotShadow(cameraCullInfo, list, count, opaqueList, context) {\n        opaqueList.clear();\n        const boundFrustum = cameraCullInfo.boundFrustum;\n        for (let i = 0; i < count; i++) {\n            const render = list[i];\n            render._renderUpdatePre(context);\n            if (render.shadowCullPass()) {\n                Stat.frustumCulling++;\n                render.distanceForSort = Vector3.distanceSquared(render.bounds._imp.getCenter(), cameraCullInfo.position);\n                if (render._needRender(boundFrustum)) {\n                    let element;\n                    const elements = render.renderelements;\n                    for (let j = 0, len = elements.length; j < len; j++) {\n                        element = elements[j];\n                        if (element.materialRenderQueue < 2500)\n                            opaqueList.addRenderElement(element);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { RenderClearFlag } from \"../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { Viewport } from \"../../maths/Viewport\";\nexport class RenderPassUtil {\n    static renderCmd(cmds, context) {\n        if (cmds && cmds.length > 0)\n            cmds.forEach(value => context.runCMDList(value._renderCMDs));\n    }\n    static recoverRenderContext3D(context, renderTarget) {\n        context.setViewPort(this.contextViewPortCache);\n        context.setScissor(this.contextScissorCache);\n        context.setRenderTarget(renderTarget, RenderClearFlag.Nothing);\n    }\n}\nRenderPassUtil.contextViewPortCache = new Viewport();\nRenderPassUtil.contextScissorCache = new Vector4();\n","export class RenderQuickSort {\n    sort(elements, isTransparent, left, right) {\n        this.elementArray = elements;\n        this.isTransparent = isTransparent;\n        this._quickSort(left, right);\n    }\n    _quickSort(left, right) {\n        if (this.elementArray.length > 1) {\n            const index = this._partitionRenderObject(left, right);\n            const leftIndex = index - 1;\n            if (left < leftIndex)\n                this._quickSort(left, leftIndex);\n            if (index < right)\n                this._quickSort(index, right);\n        }\n    }\n    _partitionRenderObject(left, right) {\n        const elements = this.elementArray.elements;\n        const pivot = elements[Math.floor((right + left) / 2)];\n        while (left <= right) {\n            while (this._compare(elements[left], pivot) < 0)\n                left++;\n            while (this._compare(elements[right], pivot) > 0)\n                right--;\n            if (left < right) {\n                const temp = elements[left];\n                elements[left] = elements[right];\n                elements[right] = temp;\n                left++;\n                right--;\n            }\n            else if (left === right) {\n                left++;\n                break;\n            }\n        }\n        return left;\n    }\n    _compare(left, right) {\n        const renderQueue = left.materialRenderQueue - right.materialRenderQueue;\n        if (renderQueue === 0) {\n            const sort = this.isTransparent ? right.owner.distanceForSort - left.owner.distanceForSort : left.owner.distanceForSort - right.owner.distanceForSort;\n            return sort + right.owner.sortingFudge - left.owner.sortingFudge;\n        }\n        else\n            return renderQueue;\n    }\n}\n","import { Laya3DRender } from \"../../d3/RenderObjs/Laya3DRender\";\nimport { FastSinglelist } from \"../../utils/SingletonList\";\nimport { RenderQuickSort } from \"./RenderQuickSort\";\nexport class RenderListQueue {\n    get elements() { return this._elements; }\n    constructor(isTransParent) {\n        this._elements = new FastSinglelist();\n        this._isTransparent = isTransParent;\n        this._quickSort = new RenderQuickSort();\n        this._batch = Laya3DRender.Render3DPassFactory.createInstanceBatch();\n    }\n    addRenderElement(renderelement) {\n        renderelement.materialShaderData && this._elements.add(renderelement);\n    }\n    _batchQueue() {\n        if (!this._isTransparent)\n            this._batch.batch(this._elements);\n    }\n    renderQueue(context) {\n        this._batchQueue();\n        const count = this._elements.length;\n        this._quickSort.sort(this._elements, this._isTransparent, 0, count - 1);\n        context.drawRenderElementList(this._elements);\n        this._batch.clearRenderData();\n    }\n    clear() {\n        this._elements.elements.fill(null);\n        this._elements.length = 0;\n    }\n    destroy() {\n        this.clear();\n        this._elements = null;\n    }\n}\n","import { DepthPass } from \"../../d3/depthMap/DepthPass\";\nimport { CameraCullInfo } from \"../../d3/shadowMap/ShadowSliceData\";\nimport { Color } from \"../../maths/Color\";\nimport { Vector4 } from \"../../maths/Vector4\";\nimport { RenderClearFlag } from \"../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { DepthTextureMode } from \"../../resource/RenderTexture\";\nimport { RenderCullUtil } from \"./RenderCullUtil\";\nimport { RenderPassUtil } from \"./RenderPassUtil\";\nimport { RenderListQueue } from \"./RenderListQueue\";\nimport { Viewport } from \"../../maths/Viewport\";\nexport class ForwardAddClusterRP {\n    setViewPort(value) {\n        value.cloneTo(this._viewPort);\n    }\n    setScissor(value) {\n        value.cloneTo(this._scissor);\n    }\n    constructor() {\n        this._opaqueList = new RenderListQueue(false);\n        this._transparent = new RenderListQueue(true);\n        this.cameraCullInfo = new CameraCullInfo();\n        this._zBufferParams = new Vector4();\n        this._scissor = new Vector4();\n        this._viewPort = new Viewport();\n        this._defaultNormalDepthColor = new Color(0.5, 0.5, 1, 0);\n        this.clearColor = new Color();\n        this.depthPipelineMode = \"ShadowCaster\";\n        this.depthNormalPipelineMode = \"DepthNormal\";\n    }\n    setCameraCullInfo(camera) {\n        this.cameraCullInfo.position = camera._transform.position;\n        this.cameraCullInfo.cullingMask = camera.cullingMask;\n        this.cameraCullInfo.staticMask = camera.staticMask;\n        this.cameraCullInfo.boundFrustum = camera.boundFrustum;\n        this.cameraCullInfo.useOcclusionCulling = camera.useOcclusionCulling;\n    }\n    setBeforeForwardCmds(value) {\n        if (value && value.length > 0) {\n            this.beforeForwardCmds = value;\n            value.forEach(element => element._apply(false));\n        }\n    }\n    setBeforeSkyboxCmds(value) {\n        if (value && value.length > 0) {\n            this.beforeSkyboxCmds = value;\n            value.forEach(element => element._apply(false));\n        }\n    }\n    setBeforeTransparentCmds(value) {\n        if (value && value.length > 0) {\n            this.beforeTransparentCmds = value;\n            value.forEach(element => element._apply(false));\n        }\n    }\n    render(context, list, count) {\n        context.cameraUpdateMask++;\n        this._clearRenderList();\n        RenderCullUtil.cullByCameraCullInfo(this.cameraCullInfo, list, count, this._opaqueList, this._transparent, context);\n        if ((this.depthTextureMode & DepthTextureMode.Depth) != 0)\n            this._renderDepthPass(context);\n        if ((this.depthTextureMode & DepthTextureMode.DepthNormals) != 0)\n            this._renderDepthNormalPass(context);\n        this._cacheViewPortAndScissor();\n        this._mainPass(context);\n        this._opaqueList._batch.recoverData();\n    }\n    _clearRenderList() {\n        this._opaqueList.clear();\n        this._transparent.clear();\n    }\n    _cacheViewPortAndScissor() {\n        this._viewPort.cloneTo(RenderPassUtil.contextViewPortCache);\n        this._scissor.cloneTo(RenderPassUtil.contextScissorCache);\n    }\n    _renderDepthPass(context) {\n        context.pipelineMode = this.depthPipelineMode;\n        const viewport = this._viewPort;\n        const shadervalue = context.sceneData;\n        shadervalue.addDefine(DepthPass.DEPTHPASS);\n        shadervalue.setVector(DepthPass.DEFINE_SHADOW_BIAS, Vector4.ZERO);\n        Viewport.TEMP.set(viewport.x, viewport.y, viewport.width, viewport.height);\n        Vector4.TEMP.setValue(viewport.x, viewport.y, viewport.width, viewport.height);\n        context.setViewPort(Viewport.TEMP);\n        context.setScissor(Vector4.TEMP);\n        context.setRenderTarget(this.depthTarget, RenderClearFlag.Depth);\n        context.setClearData(RenderClearFlag.Depth, Color.BLACK, 1, 0);\n        this._opaqueList.renderQueue(context);\n        const far = this.camera.farplane;\n        const near = this.camera.nearplane;\n        this._zBufferParams.setValue(1.0 - far / near, far / near, (near - far) / (near * far), 1 / near);\n        context.cameraData.setVector(DepthPass.DEFINE_SHADOW_BIAS, DepthPass.SHADOW_BIAS);\n        context.cameraData.setVector(DepthPass.DEPTHZBUFFERPARAMS, this._zBufferParams);\n        shadervalue.removeDefine(DepthPass.DEPTHPASS);\n    }\n    _renderDepthNormalPass(context) {\n        context.pipelineMode = this.depthNormalPipelineMode;\n        const viewport = this._viewPort;\n        Viewport.TEMP.set(viewport.x, viewport.y, viewport.width, viewport.height);\n        Vector4.TEMP.setValue(viewport.x, viewport.y, viewport.width, viewport.height);\n        context.setViewPort(Viewport.TEMP);\n        context.setScissor(Vector4.TEMP);\n        context.setClearData(RenderClearFlag.Color | RenderClearFlag.Depth, this._defaultNormalDepthColor, 1, 0);\n        context.setRenderTarget(this.depthNormalTarget, RenderClearFlag.Color | RenderClearFlag.Depth);\n        this._opaqueList.renderQueue(context);\n    }\n    _mainPass(context) {\n        context.pipelineMode = this.pipelineMode;\n        RenderPassUtil.renderCmd(this.beforeForwardCmds, context);\n        RenderPassUtil.recoverRenderContext3D(context, this.destTarget);\n        context.setClearData(this.clearFlag, this.clearColor, 1, 0);\n        this.enableOpaque && this._opaqueList.renderQueue(context);\n        RenderPassUtil.renderCmd(this.beforeSkyboxCmds, context);\n        if (this.skyRenderNode) {\n            const skyRenderElement = this.skyRenderNode.renderelements[0];\n            if (skyRenderElement.subShader)\n                context.drawRenderElementOne(skyRenderElement);\n        }\n        if (this.enableOpaque)\n            this._opaqueTexturePass();\n        RenderPassUtil.renderCmd(this.beforeTransparentCmds, context);\n        RenderPassUtil.recoverRenderContext3D(context, this.destTarget);\n        this._transparent.renderQueue(context);\n    }\n    _opaqueTexturePass() {\n    }\n}\n","import { RenderPassStatisticsInfo } from \"../../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { ReflectionProbeMode } from \"../../../../d3/component/Volume/reflectionProbe/ReflectionProbe\";\nimport { RenderableSprite3D } from \"../../../../d3/core/RenderableSprite3D\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { Stat } from \"../../../../utils/Stat\";\nexport class WebBaseRenderNode {\n    _renderUpdatePre_StatUse(context3D) {\n        if (this._updateMark == context3D.cameraUpdateMask)\n            return;\n        var time = performance.now();\n        this._renderUpdatePreFun.call(this._renderUpdatePreCall, context3D);\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_RenderPreUpdate] += (performance.now() - time);\n        this._updateMark = context3D.cameraUpdateMask;\n    }\n    _renderUpdatePre(context3D) {\n        if (this._updateMark == context3D.cameraUpdateMask)\n            return;\n        this._renderUpdatePreFun.call(this._renderUpdatePreCall, context3D);\n        this._updateMark = context3D.cameraUpdateMask;\n    }\n    _calculateBoundingBox() {\n        this._caculateBoundingBoxFun.call(this._caculateBoundingBoxCall);\n    }\n    get bounds() {\n        if (this.boundsChange) {\n            this._calculateBoundingBox();\n            this.boundsChange = false;\n        }\n        return this._bounds;\n    }\n    set bounds(value) {\n        this._bounds = value;\n    }\n    get additionShaderData() {\n        return this._additionShaderData;\n    }\n    set additionShaderData(value) {\n        this._additionShaderData = value;\n        if (value) {\n            this._additionShaderDataKeys = Array.from(this._additionShaderData.keys());\n        }\n        else {\n            this._additionShaderDataKeys = [];\n        }\n    }\n    constructor() {\n        this.renderelements = [];\n        this._commonUniformMap = [];\n        this._worldParams = new Vector4(1, 0, 0, 0);\n        this.lightmapDirtyFlag = -1;\n        this.lightmapScaleOffset = new Vector4(1, 1, 0, 0);\n        this.set_caculateBoundingBox(this, this._ownerCalculateBoundingBox);\n        this.additionShaderData = new Map();\n    }\n    setNodeCustomData(dataSlot, data) {\n        switch (dataSlot) {\n            case 0:\n                this._worldParams.y = data;\n                break;\n            case 1:\n                this._worldParams.z = data;\n                break;\n            case 2:\n                this._worldParams.w = data;\n                break;\n        }\n    }\n    set_renderUpdatePreCall(call, fun) {\n        this._renderUpdatePreCall = call;\n        this._renderUpdatePreFun = fun;\n    }\n    set_caculateBoundingBox(call, fun) {\n        this._caculateBoundingBoxCall = call;\n        this._caculateBoundingBoxFun = fun;\n    }\n    _needRender(boundFrustum) {\n        if (boundFrustum)\n            return boundFrustum.intersects(this.bounds);\n        else\n            return true;\n    }\n    setRenderelements(value) {\n        this.renderelements.length = 0;\n        for (var i = 0; i < value.length; i++) {\n            this.renderelements.push(value[i]);\n            value[i].owner = this;\n        }\n    }\n    setOneMaterial(index, mat) {\n        if (!this.renderelements[index])\n            return;\n        this.renderelements[index].materialShaderData = mat.shaderData;\n        this.renderelements[index].materialRenderQueue = mat.renderQueue;\n        this.renderelements[index].subShader = mat.shader.getSubShaderAt(0);\n        this.renderelements[index].materialId = mat._id;\n    }\n    setLightmapScaleOffset(value) {\n        value && value.cloneTo(this.lightmapScaleOffset);\n    }\n    setCommonUniformMap(value) {\n        this._commonUniformMap.length = 0;\n        value.forEach(element => {\n            this._commonUniformMap.push(element);\n        });\n    }\n    shadowCullPass() {\n        return this.castShadow && this.enable && (this.renderbitFlag == 0);\n    }\n    _ownerCalculateBoundingBox() {\n        this.baseGeometryBounds._tranform(this.transform.worldMatrix, this._bounds);\n    }\n    _applyLightMapParams() {\n        let shaderValues = this.shaderData;\n        if (this.lightmap) {\n            let lightMap = this.lightmap;\n            shaderValues.setVector(RenderableSprite3D.LIGHTMAPSCALEOFFSET, this.lightmapScaleOffset);\n            shaderValues._setInternalTexture(RenderableSprite3D.LIGHTMAP, lightMap.lightmapColor);\n            shaderValues.addDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP);\n            if (lightMap.lightmapDirection) {\n                shaderValues._setInternalTexture(RenderableSprite3D.LIGHTMAP_DIRECTION, lightMap.lightmapDirection);\n                shaderValues.addDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL);\n            }\n            else {\n                shaderValues.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL);\n            }\n        }\n        else {\n            shaderValues.removeDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP);\n            shaderValues.removeDefine(RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL);\n        }\n    }\n    _applyLightProb() {\n        if (this.lightmapIndex >= 0 || !this.volumetricGI)\n            return;\n        if (this.volumetricGI.updateMark != this.lightProbUpdateMark) {\n            this.lightProbUpdateMark = this.volumetricGI.updateMark;\n            this.volumetricGI.applyRenderData();\n        }\n    }\n    _applyReflection() {\n        if (!this.probeReflection || this.reflectionMode == ReflectionProbeMode.off)\n            return;\n        if (this.probeReflection.needUpdate()) {\n            this.probeReflection.applyRenderData();\n        }\n    }\n    destroy() {\n        this.renderelements.forEach(element => {\n            element.destroy();\n        });\n        this.baseGeometryBounds = null;\n        this.transform = null;\n        this.lightmapScaleOffset = null;\n        this.lightmap = null;\n        this.probeReflection = null;\n        this.volumetricGI = null;\n        this.renderelements.length = 0;\n        this.renderelements = null;\n        this._commonUniformMap.length = 0;\n        this._commonUniformMap = null;\n        this.shaderData && this.shaderData.destroy();\n        this.shaderData = null;\n        this.additionShaderData.clear();\n        this.additionShaderData = null;\n        this._additionShaderDataKeys.length = 0;\n        this._additionShaderDataKeys = null;\n    }\n}\n","import { Vector3 } from \"../../../../maths/Vector3\";\nexport class WebDirectLight {\n    constructor() {\n        this._shadowFourCascadeSplits = new Vector3();\n        this._direction = new Vector3();\n    }\n    setShadowFourCascadeSplits(value) {\n        value && value.cloneTo(this._shadowFourCascadeSplits);\n    }\n    setDirection(value) {\n        value && value.cloneTo(this._direction);\n    }\n}\n","export class WebLightmap {\n    destroy() {\n        this.lightmapColor = null;\n        this.lightmapDirection = null;\n    }\n}\n","import { Sprite3D } from \"../../../../d3/core/Sprite3D\";\nimport { WebBaseRenderNode } from \"./WebBaseRenderNode\";\nexport class WebMeshRenderNode extends WebBaseRenderNode {\n    constructor() {\n        super();\n        this.set_renderUpdatePreCall(this, this._renderUpdate);\n    }\n    _renderUpdate(context) {\n        if (context.sceneModuleData.lightmapDirtyFlag != this.lightmapDirtyFlag) {\n            this._applyLightMapParams();\n            this.lightmapDirtyFlag = context.sceneModuleData.lightmapDirtyFlag;\n        }\n        this._applyReflection();\n        this._applyLightProb();\n        let trans = this.transform;\n        this.shaderData.setMatrix4x4(Sprite3D.WORLDMATRIX, trans.worldMatrix);\n        this._worldParams.x = trans.getFrontFaceValue();\n        this.shaderData.setVector(Sprite3D.WORLDINVERTFRONT, this._worldParams);\n    }\n}\n","import { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\nexport class WebCameraNodeData {\n    constructor() {\n        this._projectViewMatrix = new Matrix4x4();\n    }\n    setProjectionViewMatrix(value) {\n        value && value.cloneTo(this._projectViewMatrix);\n    }\n}\nexport class WebSceneNodeData {\n}\n","export class WebPointLight {\n}\n","import { ReflectionProbe } from \"../../../../d3/component/Volume/reflectionProbe/ReflectionProbe\";\nimport { Sprite3DRenderDeclaration } from \"../../../../d3/core/render/Sprite3DRenderDeclaration\";\nimport { AmbientMode } from \"../../../../d3/core/scene/AmbientMode\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { Color } from \"../../../../maths/Color\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nexport class WebReflectionProbe {\n    constructor() {\n        this._id = ++WebReflectionProbe._idCounter;\n        this._updateMaskFlag = -1;\n        this._shCoefficients = [];\n        this._probePosition = new Vector3();\n        this._ambientColor = new Color();\n        this.shaderData = LayaGL.renderDeviceFactory.createShaderData();\n    }\n    needUpdate() {\n        return this.updateMark != this._updateMaskFlag;\n    }\n    destroy() {\n        this.bound = null;\n        delete this._shCoefficients;\n        delete this._ambientSH;\n        this.shaderData.destroy();\n        this.shaderData = null;\n    }\n    setAmbientSH(value) {\n        this._ambientSH = value;\n    }\n    setShCoefficients(value) {\n        this._shCoefficients.length = 0;\n        value.forEach(element => {\n            var v4 = new Vector4();\n            element.cloneTo(v4);\n            this._shCoefficients.push(v4);\n        });\n    }\n    setProbePosition(value) {\n        value && value.cloneTo(this._probePosition);\n    }\n    setreflectionHDRParams(value) {\n        value && value.cloneTo(this._reflectionHDRParams);\n    }\n    setAmbientColor(value) {\n        value && value.cloneTo(this._ambientColor);\n    }\n    applyRenderData() {\n        this._updateMaskFlag = this.updateMark;\n        let data = this.shaderData;\n        if (!this.boxProjection) {\n            data.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION);\n        }\n        else {\n            data.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION);\n            data.setVector3(ReflectionProbe.REFLECTIONCUBE_PROBEPOSITION, this._probePosition);\n            data.setVector3(ReflectionProbe.REFLECTIONCUBE_PROBEBOXMAX, this.bound.getMax());\n            data.setVector3(ReflectionProbe.REFLECTIONCUBE_PROBEBOXMIN, this.bound.getMin());\n        }\n        if (this.ambientMode == AmbientMode.SolidColor) {\n            data.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL);\n            data.removeDefine(ReflectionProbe.SHADERDEFINE_GI_IBL);\n            data.setColor(ReflectionProbe.AMBIENTCOLOR, this._ambientColor);\n        }\n        else if (this.iblTex && this._ambientSH) {\n            data.addDefine(ReflectionProbe.SHADERDEFINE_GI_IBL);\n            data.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL);\n            if (this.iblTex) {\n                data._setInternalTexture(ReflectionProbe.IBLTEX, this.iblTex);\n                data.setNumber(ReflectionProbe.IBLROUGHNESSLEVEL, this.iblTex.maxMipmapLevel);\n            }\n            ;\n            this.iblTexRGBD ? data.addDefine(Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD) : data.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD);\n            this._ambientSH && data.setBuffer(ReflectionProbe.AMBIENTSH, this._ambientSH);\n        }\n        else {\n            data.removeDefine(Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL);\n            data.removeDefine(ReflectionProbe.SHADERDEFINE_GI_IBL);\n        }\n        data.setNumber(ReflectionProbe.AMBIENTINTENSITY, this.ambientIntensity);\n        data.setNumber(ReflectionProbe.REFLECTIONINTENSITY, this.reflectionIntensity);\n    }\n}\nWebReflectionProbe._idCounter = 0;\n","import { SimpleSkinnedMeshSprite3D } from \"../../../../d3/core/SimpleSkinnedMeshSprite3D\";\nimport { Sprite3D } from \"../../../../d3/core/Sprite3D\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { WebBaseRenderNode } from \"./WebBaseRenderNode\";\nexport class WebSimpleSkinRenderNode extends WebBaseRenderNode {\n    constructor() {\n        super();\n        this.set_renderUpdatePreCall(this, this._renderUpdate);\n        this._simpleAnimatorParams = new Vector4();\n    }\n    setSimpleAnimatorParams(value) {\n        value.cloneTo(this._simpleAnimatorParams);\n        this.shaderData.setVector(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS, this._simpleAnimatorParams);\n    }\n    _renderUpdate(context3D) {\n        let shaderData = this.shaderData;\n        let worldMat = this.transform.worldMatrix;\n        let worldParams = this._worldParams;\n        worldParams.x = this.transform.getFrontFaceValue();\n        shaderData.setMatrix4x4(Sprite3D.WORLDMATRIX, worldMat);\n        shaderData.setVector(Sprite3D.WORLDINVERTFRONT, worldParams);\n        this._applyLightProb();\n        this._applyReflection();\n        shaderData.setVector(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS, this._simpleAnimatorParams);\n    }\n}\n","import { Sprite3D } from \"../../../../d3/core/Sprite3D\";\nimport { Utils3D } from \"../../../../d3/utils/Utils3D\";\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\nimport { Stat } from \"../../../../utils/Stat\";\nimport { WebBaseRenderNode } from \"./WebBaseRenderNode\";\nexport class WebSkinRenderNode extends WebBaseRenderNode {\n    constructor() {\n        super();\n        this._bones = [];\n        this.set_renderUpdatePreCall(this, this._renderUpdate);\n    }\n    setRootBoneTransfom(value) {\n        this._cacheRootBone = value.transform;\n    }\n    setOwnerTransform(value) {\n        this._owner = value.transform;\n    }\n    setCacheMesh(cacheMesh) {\n        this._cacheMesh = cacheMesh;\n        this._skinnedDataLoopMarks = new Uint32Array(cacheMesh._inverseBindPoses.length);\n    }\n    setBones(value) {\n        this._bones = value;\n    }\n    setSkinnedData(value) {\n        this._skinnedData = value;\n    }\n    computeSkinnedData() {\n        var bindPoses = this._cacheMesh._inverseBindPoses;\n        var pathMarks = this._cacheMesh._skinnedMatrixCaches;\n        for (var i = 0, n = this._cacheMesh.subMeshCount; i < n; i++) {\n            var subMeshBoneIndices = ((this._cacheMesh.getSubMesh(i)))._boneIndicesList;\n            var subData = this._skinnedData[i];\n            for (var j = 0, m = subMeshBoneIndices.length; j < m; j++) {\n                var boneIndices = subMeshBoneIndices[j];\n                this._computeSubSkinnedData(bindPoses, boneIndices, subData[j], pathMarks);\n            }\n        }\n    }\n    _computeSubSkinnedData(bindPoses, boneIndices, data, matrixCaches) {\n        for (let k = 0, q = boneIndices.length; k < q; k++) {\n            let index = boneIndices[k];\n            if (this._skinnedDataLoopMarks[index] === Stat.loopCount) {\n                let c = matrixCaches[index];\n                let preData = this._skinnedData[c.subMeshIndex][c.batchIndex];\n                let srcIndex = c.batchBoneIndex * 16;\n                let dstIndex = k * 16;\n                for (let d = 0; d < 16; d++)\n                    data[dstIndex + d] = preData[srcIndex + d];\n            }\n            else {\n                let bone = this._bones[index];\n                if (bone)\n                    Utils3D._mulMatrixArray(bone.transform.worldMatrix.elements, bindPoses[index].elements, 0, data, k * 16);\n                this._skinnedDataLoopMarks[index] = Stat.loopCount;\n            }\n        }\n    }\n    _renderUpdate(context3D) {\n        let mat = this._owner.worldMatrix;\n        let worldParams = this._worldParams;\n        worldParams.x = this._owner.getFrontFaceValue();\n        if (this._cacheRootBone) {\n            mat = Matrix4x4.DEFAULT;\n            worldParams.x = 1;\n        }\n        this._applyLightProb();\n        this._applyReflection();\n        this.shaderData.setMatrix4x4(Sprite3D.WORLDMATRIX, mat);\n        this.shaderData.setVector(Sprite3D.WORLDINVERTFRONT, worldParams);\n    }\n}\n","import { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nexport class WebSpotLight {\n    setDirection(value) {\n        value.cloneTo(this._direction);\n    }\n    getWorldMatrix(out) {\n        var position = this.transform.position;\n        var quaterian = this.transform.rotation;\n        Matrix4x4.createAffineTransformation(position, quaterian, Vector3.ONE, out);\n        return out;\n    }\n}\n","import { VolumetricGI } from \"../../../../d3/component/Volume/VolumetricGI/VolumetricGI\";\nimport { ReflectionProbe } from \"../../../../d3/component/Volume/reflectionProbe/ReflectionProbe\";\nimport { Bounds } from \"../../../../d3/math/Bounds\";\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\nimport { Vector3 } from \"../../../../maths/Vector3\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nexport class WebVolumetricGI {\n    constructor() {\n        this._id = ++WebVolumetricGI._idCounter;\n        this._probeCounts = new Vector3();\n        this._probeStep = new Vector3();\n        this._params = new Vector4();\n        this._params = new Vector4();\n        this.bound = new Bounds();\n        this.shaderData = LayaGL.renderDeviceFactory.createShaderData();\n    }\n    setParams(value) {\n        value.cloneTo(this._params);\n    }\n    setProbeCounts(value) {\n        value.cloneTo(this._probeCounts);\n    }\n    setProbeStep(value) {\n        value.cloneTo(this._probeStep);\n    }\n    applyRenderData() {\n        let data = this.shaderData;\n        data.addDefine(VolumetricGI.SHADERDEFINE_VOLUMETRICGI);\n        data.setVector3(VolumetricGI.VOLUMETRICGI_PROBECOUNTS, this._probeCounts);\n        data.setVector3(VolumetricGI.VOLUMETRICGI_PROBESTEPS, this._probeStep);\n        data.setVector3(VolumetricGI.VOLUMETRICGI_PROBESTARTPOS, this.bound.getMin());\n        data.setVector(VolumetricGI.VOLUMETRICGI_PROBEPARAMS, this._params);\n        data._setInternalTexture(VolumetricGI.VOLUMETRICGI_IRRADIANCE, this.irradiance);\n        data._setInternalTexture(VolumetricGI.VOLUMETRICGI_DISTANCE, this.distance);\n        data.setNumber(ReflectionProbe.AMBIENTINTENSITY, this.intensity);\n    }\n    destroy() {\n        this.shaderData.destroy();\n        this.shaderData = null;\n        this.irradiance = null;\n        this.distance = null;\n        this.bound = null;\n    }\n}\nWebVolumetricGI._idCounter = 0;\n","import { Laya } from \"../../../../../Laya\";\nimport { Laya3DRender } from \"../../../../d3/RenderObjs/Laya3DRender\";\nimport { Transform3D } from \"../../../../d3/core/Transform3D\";\nimport { BoundsImpl } from \"../../../../d3/math/BoundsImpl\";\nimport { Stat } from \"../../../../utils/Stat\";\nimport { WebBaseRenderNode } from \"./WebBaseRenderNode\";\nimport { WebDirectLight } from \"./WebDirectLight\";\nimport { WebLightmap } from \"./WebLightmap\";\nimport { WebMeshRenderNode } from \"./WebMeshRenderNode\";\nimport { WebCameraNodeData, WebSceneNodeData } from \"./WebModuleData\";\nimport { WebPointLight } from \"./WebPointLight\";\nimport { WebReflectionProbe } from \"./WebReflectionProb\";\nimport { WebSimpleSkinRenderNode } from \"./WebSimpleSkinRenderNode\";\nimport { WebSkinRenderNode } from \"./WebSkinRenderNode\";\nimport { WebSpotLight } from \"./WebSpotLight\";\nimport { WebVolumetricGI } from \"./WebVolumetricGI\";\nexport class Web3DRenderModuleFactory {\n    createSimpleSkinRenderNode() {\n        return new WebSimpleSkinRenderNode();\n    }\n    createTransform(owner) {\n        return new Transform3D(owner);\n    }\n    createBounds(min, max) {\n        return new BoundsImpl(min, max);\n    }\n    createVolumetricGI() {\n        return new WebVolumetricGI();\n    }\n    createReflectionProbe() {\n        return new WebReflectionProbe();\n    }\n    createLightmapData() {\n        return new WebLightmap();\n    }\n    createDirectLight() {\n        return new WebDirectLight();\n    }\n    createSpotLight() {\n        return new WebSpotLight();\n    }\n    createPointLight() {\n        return new WebPointLight();\n    }\n    createCameraModuleData() {\n        return new WebCameraNodeData();\n    }\n    createSceneModuleData() {\n        return new WebSceneNodeData();\n    }\n    createBaseRenderNode() {\n        let renderNode = new WebBaseRenderNode();\n        if (Stat.enableRenderPassStatArray) {\n            renderNode._renderUpdatePre = renderNode._renderUpdatePre_StatUse;\n        }\n        return renderNode;\n    }\n    createMeshRenderNode() {\n        return new WebMeshRenderNode();\n    }\n    createSkinRenderNode() {\n        return new WebSkinRenderNode();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!Laya3DRender.Render3DModuleDataFactory) {\n        Laya3DRender.Render3DModuleDataFactory = new Web3DRenderModuleFactory();\n    }\n});\n","import { SingletonList } from \"../../../../utils/SingletonList\";\nexport class WebSceneRenderManager {\n    constructor() {\n        this._list = new SingletonList();\n        this.baseRenderList = new SingletonList();\n    }\n    get list() {\n        return this._list;\n    }\n    set list(value) {\n        this._list = value;\n        let elemnt = this._list.elements;\n        this.baseRenderList.clear();\n        for (let i = 0; i < this._list.length; i++) {\n            this.baseRenderList.add(elemnt[i]._baseRenderNode);\n        }\n    }\n    addRenderObject(object) {\n        this._list.add(object);\n        this.baseRenderList.add(object._baseRenderNode);\n    }\n    removeRenderObject(object) {\n        this._list.remove(object);\n        this.baseRenderList.remove(object._baseRenderNode);\n    }\n    removeMotionObject(object) {\n    }\n    updateMotionObjects() {\n    }\n    addMotionObject(object) {\n    }\n    destroy() {\n        this._list.destroy();\n        this.baseRenderList.destroy();\n        this._list = null;\n        this.baseRenderList = null;\n    }\n}\n","import { Config } from \"../../../../Config\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { FastSinglelist } from \"../../../utils/SingletonList\";\nimport { WebDefineDatas } from \"../../RenderModuleData/WebModuleData/WebDefineDatas\";\nimport { WebGLEngine } from \"../RenderDevice/WebGLEngine\";\nexport class WebGLRenderElement3D {\n    constructor() {\n        this._shaderInstances = new FastSinglelist();\n    }\n    _addShaderInstance(shader) {\n        this._shaderInstances.add(shader);\n    }\n    _clearShaderInstance() {\n        this._shaderInstances.length = 0;\n    }\n    _preUpdatePre(context) {\n        this._compileShader(context);\n        if (this.materialShaderData && Config.matUseUBO) {\n            let subShader = this.subShader;\n            let materialData = this.materialShaderData;\n            let matSubBuffer = materialData.createSubUniformBuffer(\"Material\", subShader._owner.name, subShader._uniformMap);\n            if (matSubBuffer && matSubBuffer.needUpload) {\n                matSubBuffer.bufferBlock.needUpload();\n            }\n        }\n        if (this.owner && Config._uniformBlock) {\n            for (let [key, value] of this.owner.additionShaderData) {\n                let shaderData = value;\n                let unifomrMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(key);\n                let uniformBuffer = shaderData.createSubUniformBuffer(key, key, unifomrMap._idata);\n                if (uniformBuffer && uniformBuffer.needUpload) {\n                    uniformBuffer.bufferBlock.needUpload();\n                }\n            }\n        }\n        this._invertFront = this._getInvertFront();\n    }\n    _getInvertFront() {\n        var _a;\n        let transform = (_a = this.owner) === null || _a === void 0 ? void 0 : _a.transform;\n        return transform ? transform._isFrontFaceInvert : false;\n    }\n    _render(context) {\n        let forceInvertFace = context.invertY;\n        let updateMark = context.cameraUpdateMask;\n        let sceneShaderData = context.sceneData;\n        let cameraShaderData = context.cameraData;\n        if (this.isRender) {\n            let passes = this._shaderInstances.elements;\n            for (let j = 0, m = this._shaderInstances.length; j < m; j++) {\n                const shaderIns = passes[j];\n                if (!shaderIns.complete)\n                    continue;\n                let switchShader = shaderIns.bind();\n                let switchUpdateMark = (updateMark !== shaderIns._uploadMark);\n                let uploadScene = (shaderIns._uploadScene !== sceneShaderData) || switchUpdateMark;\n                if (uploadScene || switchShader) {\n                    if (sceneShaderData) {\n                        shaderIns.uploadUniforms(shaderIns._sceneUniformParamsMap, sceneShaderData, uploadScene);\n                    }\n                    shaderIns._uploadScene = sceneShaderData;\n                }\n                if (this.renderShaderData) {\n                    let uploadSprite3D = (shaderIns._uploadRender !== this.renderShaderData) || switchUpdateMark;\n                    if (uploadSprite3D || switchShader) {\n                        shaderIns.uploadUniforms(shaderIns._spriteUniformParamsMap, this.renderShaderData, uploadSprite3D);\n                        shaderIns._uploadRender = this.renderShaderData;\n                    }\n                }\n                if (this.owner) {\n                    let additionShaderData = this.owner.additionShaderData;\n                    for (let [key, encoder] of shaderIns._additionUniformParamsMaps) {\n                        let additionData = additionShaderData.get(key);\n                        if (additionData) {\n                            let needUpload = shaderIns._additionShaderData.get(key) !== additionData || switchUpdateMark;\n                            if (needUpload || switchShader) {\n                                shaderIns.uploadUniforms(encoder, additionData, needUpload);\n                                shaderIns._additionShaderData.set(key, additionData);\n                            }\n                        }\n                    }\n                }\n                let uploadCamera = shaderIns._uploadCameraShaderValue !== cameraShaderData || switchUpdateMark;\n                if (uploadCamera || switchShader) {\n                    cameraShaderData && shaderIns.uploadUniforms(shaderIns._cameraUniformParamsMap, cameraShaderData, uploadCamera);\n                    shaderIns._uploadCameraShaderValue = cameraShaderData;\n                }\n                let uploadMaterial = (shaderIns._uploadMaterial !== this.materialShaderData) || switchUpdateMark;\n                if (uploadMaterial || switchShader) {\n                    shaderIns.uploadUniforms(shaderIns._materialUniformParamsMap, this.materialShaderData, uploadMaterial);\n                    shaderIns._uploadMaterial = this.materialShaderData;\n                }\n                shaderIns.uploadRenderStateBlendDepth(this.materialShaderData);\n                shaderIns.uploadRenderStateFrontFace(this.materialShaderData, forceInvertFace, this._invertFront);\n                this.drawGeometry(shaderIns);\n            }\n        }\n    }\n    _getShaderInstanceDefines(context) {\n        let comDef = WebGLRenderElement3D._compileDefine;\n        const globalShaderDefines = context._getContextShaderDefines();\n        globalShaderDefines.cloneTo(comDef);\n        if (this.renderShaderData) {\n            comDef.addDefineDatas(this.renderShaderData.getDefineData());\n        }\n        if (this.materialShaderData) {\n            comDef.addDefineDatas(this.materialShaderData._defineDatas);\n        }\n        if (this.owner) {\n            let additionShaderData = this.owner.additionShaderData;\n            if (additionShaderData.size > 0) {\n                for (let [key, value] of additionShaderData.entries()) {\n                    comDef.addDefineDatas(value.getDefineData());\n                }\n            }\n        }\n        return comDef;\n    }\n    _compileShader(context) {\n        this._clearShaderInstance();\n        let comDef = this._getShaderInstanceDefines(context);\n        var passes = this.subShader._passes;\n        for (var j = 0, m = passes.length; j < m; j++) {\n            let pass = passes[j];\n            let passdata = pass.moduleData;\n            if (passdata.pipelineMode !== context.pipelineMode)\n                continue;\n            if (this.renderShaderData) {\n                passdata.nodeCommonMap = this.owner._commonUniformMap;\n            }\n            else {\n                passdata.nodeCommonMap = null;\n            }\n            passdata.additionShaderData = null;\n            if (this.owner) {\n                passdata.additionShaderData = this.owner._additionShaderDataKeys;\n            }\n            var shaderIns = pass.withCompile(comDef);\n            this._addShaderInstance(shaderIns);\n        }\n    }\n    drawGeometry(shaderIns) {\n        WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry);\n    }\n    destroy() {\n        this.geometry = null;\n        this._shaderInstances = null;\n        this.materialShaderData = null;\n        this.renderShaderData = null;\n        this.transform = null;\n        this.isRender = null;\n    }\n}\nWebGLRenderElement3D._compileDefine = new WebDefineDatas();\n","import { WebGLRenderElement3D } from \"../../../RenderDriver/WebGLDriver/3DRenderPass/WebGLRenderElement3D\";\nimport { WebGLEngine } from \"../RenderDevice/WebGLEngine\";\nexport class InstanceRenderElementOBJ extends WebGLRenderElement3D {\n    addUpdateBuffer(vb, length) {\n        this._vertexBuffer3D[this.updateNums] = vb;\n        this._updateDataNum[this.updateNums++] = length;\n    }\n    getUpdateData(index, length) {\n        let data = this._updateData[index];\n        if (!data || data.length < length) {\n            data = this._updateData[index] = new Float32Array(length);\n        }\n        return data;\n    }\n    constructor() {\n        super();\n        this._vertexBuffer3D = [];\n        this._updateData = [];\n        this._updateDataNum = [];\n    }\n    drawGeometry(shaderIns) {\n        let data;\n        let buffer;\n        for (let i = 0; i < this.updateNums; i++) {\n            buffer = this._vertexBuffer3D[i]._deviceBuffer;\n            if (!buffer)\n                break;\n            data = this._updateData[i];\n            buffer.orphanStorage();\n            buffer.setData(data.buffer, 0, 0, this.drawCount * this._updateDataNum[i] * 4);\n        }\n        WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry);\n    }\n    clear() {\n        this.updateNums = 0;\n    }\n}\n","import { Config3D } from \"../../../../Config3D\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { Laya3DRender } from \"../../../d3/RenderObjs/Laya3DRender\";\nimport { BatchMark } from \"../../../d3/core/render/BatchMark\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { FastSinglelist } from \"../../../utils/SingletonList\";\nexport class WebGLInstanceRenderBatch {\n    constructor() {\n        this._batchOpaqueMarks = [];\n        this._updateCountMark = 0;\n        this.recoverList = new FastSinglelist();\n    }\n    getBatchMark(element) {\n        const renderNode = element.owner;\n        const geometry = element.geometry;\n        const invertFrontFace = element.transform ? element.transform._isFrontFaceInvert : false;\n        const invertFrontFaceFlag = invertFrontFace ? 1 : 0;\n        const receiveShadowFlag = renderNode.receiveShadow ? 1 : 0;\n        const geometryFlag = geometry._id;\n        const materialFlag = element.materialId;\n        const renderId = (materialFlag << 17) + (geometryFlag << 2) + (invertFrontFaceFlag << 1) + (receiveShadowFlag);\n        const reflectFlag = (renderNode.probeReflection ? renderNode.probeReflection._id : -1) + 1;\n        const lightmapFlag = renderNode.lightmapIndex + 1;\n        const lightProbeFlag = (renderNode.volumetricGI ? renderNode.volumetricGI._id : -1) + 1;\n        const giId = (reflectFlag << 10) + (lightmapFlag << 20) + lightProbeFlag;\n        const data = this._batchOpaqueMarks[renderId] || (this._batchOpaqueMarks[renderId] = {});\n        return data[giId] || (data[giId] = new BatchMark());\n    }\n    batch(elements) {\n        if (!Config3D.enableDynamicBatch\n            || !LayaGL.renderEngine.getCapable(RenderCapable.DrawElement_Instance))\n            return;\n        const elementCount = elements.length;\n        const elementArray = elements.elements;\n        const maxInstanceCount = WebGLInstanceRenderBatch.MaxInstanceCount;\n        elements.length = 0;\n        this._updateCountMark++;\n        for (let i = 0; i < elementCount; i++) {\n            const element = elementArray[i];\n            if (element.canDynamicBatch && element.subShader._owner._enableInstancing) {\n                const instanceMark = this.getBatchMark(element);\n                if (this._updateCountMark == instanceMark.updateMark) {\n                    const instanceIndex = instanceMark.indexInList;\n                    if (instanceMark.batched) {\n                        const originElement = elementArray[instanceIndex];\n                        const instanceElements = originElement.instanceElementList;\n                        if (instanceElements.length === maxInstanceCount) {\n                            instanceMark.indexInList = elements.length;\n                            instanceMark.batched = false;\n                            elements.add(element);\n                        }\n                        else {\n                            instanceElements.add(element);\n                        }\n                    }\n                    else {\n                        const originElement = elementArray[instanceIndex];\n                        const instanceRenderElement = Laya3DRender.Render3DPassFactory.createInstanceRenderElement3D();\n                        this.recoverList.add(instanceRenderElement);\n                        instanceRenderElement.subShader = element.subShader;\n                        instanceRenderElement.materialShaderData = element.materialShaderData;\n                        instanceRenderElement.materialRenderQueue = element.materialRenderQueue;\n                        instanceRenderElement.renderShaderData = element.renderShaderData;\n                        instanceRenderElement.owner = element.owner;\n                        instanceRenderElement.setGeometry(element.geometry);\n                        const list = instanceRenderElement.instanceElementList;\n                        list.length = 0;\n                        list.add(originElement);\n                        list.add(element);\n                        elementArray[instanceIndex] = instanceRenderElement;\n                        instanceMark.batched = true;\n                    }\n                }\n                else {\n                    instanceMark.updateMark = this._updateCountMark;\n                    instanceMark.indexInList = elements.length;\n                    instanceMark.batched = false;\n                    elements.add(element);\n                }\n            }\n            else {\n                elements.add(element);\n            }\n        }\n    }\n    clearRenderData() {\n        for (let i = this.recoverList.length - 1; i > -1; i--) {\n            let element = this.recoverList.elements[i];\n            element.clearRenderData();\n        }\n    }\n    recoverData() {\n        for (let i = this.recoverList.length - 1; i > -1; i--) {\n            let element = this.recoverList.elements[i];\n            element.recover();\n        }\n        this.recoverList.length = 0;\n    }\n}\nWebGLInstanceRenderBatch.MaxInstanceCount = 1024;\n","import { BufferTargetType, BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { VertexMesh } from \"../../../RenderEngine/RenderShader/VertexMesh\";\nimport { MeshSprite3DShaderDeclaration } from \"../../../d3/core/MeshSprite3DShaderDeclaration\";\nimport { RenderableSprite3D } from \"../../../d3/core/RenderableSprite3D\";\nimport { SimpleSkinnedMeshSprite3D } from \"../../../d3/core/SimpleSkinnedMeshSprite3D\";\nimport { FastSinglelist } from \"../../../utils/SingletonList\";\nimport { BaseRenderType } from \"../../RenderModuleData/Design/3D/I3DRenderModuleData\";\nimport { WebGLBufferState } from \"../RenderDevice/WebGLBufferState\";\nimport { WebGLRenderGeometryElement } from \"../RenderDevice/WebGLRenderGeometryElement\";\nimport { WebGLVertexBuffer } from \"../RenderDevice/WebGLVertexBuffer\";\nimport { WebGLRenderElement3D } from \"./WebGLRenderElement3D\";\nexport class WebGLInstanceRenderElement3D extends WebGLRenderElement3D {\n    static getInstanceBufferState(geometry, renderType, spriteDefine) {\n        let stateinfo = WebGLInstanceRenderElement3D._instanceBufferStateMap.get(geometry._id);\n        if (!stateinfo) {\n            stateinfo = { state: new WebGLBufferState() };\n            let oriBufferState = geometry.bufferState;\n            let vertexArray = oriBufferState._vertexBuffers.slice();\n            let worldMatVertex = new WebGLVertexBuffer(BufferTargetType.ARRAY_BUFFER, BufferUsage.Dynamic);\n            worldMatVertex.setDataLength(WebGLInstanceRenderElement3D.MaxInstanceCount * 20 * 4);\n            worldMatVertex.vertexDeclaration = VertexMesh.instanceWorldMatrixDeclaration;\n            worldMatVertex.instanceBuffer = true;\n            vertexArray.push(worldMatVertex);\n            stateinfo.worldInstanceVB = worldMatVertex;\n            switch (renderType) {\n                case BaseRenderType.MeshRender:\n                    if (spriteDefine.has(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1)) {\n                        let instanceLightMapVertexBuffer = new WebGLVertexBuffer(BufferTargetType.ARRAY_BUFFER, BufferUsage.Dynamic);\n                        instanceLightMapVertexBuffer.setDataLength(WebGLInstanceRenderElement3D.MaxInstanceCount * 4 * 4);\n                        instanceLightMapVertexBuffer.vertexDeclaration = VertexMesh.instanceLightMapScaleOffsetDeclaration;\n                        instanceLightMapVertexBuffer.instanceBuffer = true;\n                        vertexArray.push(instanceLightMapVertexBuffer);\n                        stateinfo.lightmapScaleOffsetVB = instanceLightMapVertexBuffer;\n                    }\n                    break;\n                case BaseRenderType.SimpleSkinRender:\n                    let instanceSimpleAnimatorBuffer = new WebGLVertexBuffer(BufferTargetType.ARRAY_BUFFER, BufferUsage.Dynamic);\n                    instanceSimpleAnimatorBuffer.setDataLength(WebGLInstanceRenderElement3D.MaxInstanceCount * 4 * 4);\n                    instanceSimpleAnimatorBuffer.vertexDeclaration = VertexMesh.instanceSimpleAnimatorDeclaration;\n                    instanceSimpleAnimatorBuffer.instanceBuffer = true;\n                    vertexArray.push(instanceSimpleAnimatorBuffer);\n                    stateinfo.simpleAnimatorVB = instanceSimpleAnimatorBuffer;\n                    break;\n            }\n            stateinfo.state.applyState(vertexArray, geometry.bufferState._bindedIndexBuffer);\n            WebGLInstanceRenderElement3D._instanceBufferStateMap.set(geometry._id, stateinfo);\n        }\n        return stateinfo;\n    }\n    static create() {\n        let element = this._pool.pop() || new WebGLInstanceRenderElement3D();\n        return element;\n    }\n    static _instanceBufferCreate(length) {\n        let array = WebGLInstanceRenderElement3D._bufferPool.get(length);\n        if (!array) {\n            WebGLInstanceRenderElement3D._bufferPool.set(length, []);\n            array = WebGLInstanceRenderElement3D._bufferPool.get(length);\n        }\n        let element = array.pop() || new Float32Array(length);\n        return element;\n    }\n    constructor() {\n        super();\n        this._vertexBuffers = [];\n        this._updateData = [];\n        this._updateDataNum = [];\n        this.instanceElementList = new FastSinglelist();\n        this.drawCount = 0;\n        this.updateNums = 0;\n        this.isRender = true;\n    }\n    addUpdateData(vb, elementLength, maxInstanceCount) {\n        this._vertexBuffers[this.updateNums] = vb;\n        this._updateDataNum[this.updateNums] = elementLength;\n        let data = this._updateData[this.updateNums] = WebGLInstanceRenderElement3D._instanceBufferCreate(elementLength * maxInstanceCount);\n        this.updateNums++;\n        return data;\n    }\n    _compileShader(context) {\n        this._clearShaderInstance();\n        let comDef = this._getShaderInstanceDefines(context);\n        comDef.add(MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE);\n        let passes = this.subShader._passes;\n        for (let i = 0; i < passes.length; i++) {\n            let pass = passes[i];\n            if (pass.pipelineMode != context.pipelineMode)\n                continue;\n            if (this.renderShaderData) {\n                pass.nodeCommonMap = this.owner._commonUniformMap;\n            }\n            else {\n                pass.nodeCommonMap = null;\n            }\n            pass.additionShaderData = null;\n            if (this.owner) {\n                pass.additionShaderData = this.owner._additionShaderDataKeys;\n            }\n            let shaderIns = pass.withCompile(comDef);\n            this._addShaderInstance(shaderIns);\n        }\n        this._shaderInstances.length > 0 && this._updateInstanceData();\n    }\n    _updateInstanceData() {\n        switch (this.owner.renderNodeType) {\n            case BaseRenderType.MeshRender: {\n                let worldMatrixData = this.addUpdateData(this._instanceStateInfo.worldInstanceVB, 20, WebGLInstanceRenderElement3D.MaxInstanceCount);\n                var insBatches = this.instanceElementList;\n                var elements = insBatches.elements;\n                var count = insBatches.length;\n                this.drawCount = count;\n                this.geometry.instanceCount = this.drawCount;\n                for (var i = 0; i < count; i++) {\n                    worldMatrixData.set(elements[i].transform.worldMatrix.elements, i * 20);\n                    elements[i].owner._worldParams.writeTo(worldMatrixData, i * 20 + 16);\n                }\n                let haveLightMap = this.renderShaderData.hasDefine(RenderableSprite3D.SAHDERDEFINE_LIGHTMAP) && this.renderShaderData.hasDefine(MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1);\n                if (haveLightMap) {\n                    let lightMapData = this.addUpdateData(this._instanceStateInfo.lightmapScaleOffsetVB, 4, WebGLInstanceRenderElement3D.MaxInstanceCount);\n                    for (var i = 0; i < count; i++) {\n                        let lightmapScaleOffset = elements[i].owner.lightmapScaleOffset;\n                        var offset = i * 4;\n                        lightMapData[offset] = lightmapScaleOffset.x;\n                        lightMapData[offset + 1] = lightmapScaleOffset.y;\n                        lightMapData[offset + 2] = lightmapScaleOffset.z;\n                        lightMapData[offset + 3] = lightmapScaleOffset.w;\n                    }\n                }\n                break;\n            }\n            case BaseRenderType.SimpleSkinRender: {\n                let worldMatrixData = this.addUpdateData(this._instanceStateInfo.worldInstanceVB, 20, WebGLInstanceRenderElement3D.MaxInstanceCount);\n                var insBatches = this.instanceElementList;\n                var elements = insBatches.elements;\n                var count = insBatches.length;\n                this.drawCount = count;\n                this.geometry.instanceCount = this.drawCount;\n                for (var i = 0; i < count; i++) {\n                    worldMatrixData.set(elements[i].transform.worldMatrix.elements, i * 20);\n                    elements[i].owner._worldParams.writeTo(worldMatrixData, i * 20 + 16);\n                }\n                let simpleAnimatorData = this.addUpdateData(this._instanceStateInfo.simpleAnimatorVB, 4, WebGLInstanceRenderElement3D.MaxInstanceCount);\n                for (var i = 0; i < count; i++) {\n                    var simpleAnimatorParams = elements[i].renderShaderData.getVector(SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS);\n                    var offset = i * 4;\n                    simpleAnimatorData[offset] = simpleAnimatorParams.x;\n                    simpleAnimatorData[offset + 1] = simpleAnimatorParams.y;\n                    simpleAnimatorData[offset + 2] = simpleAnimatorParams.z;\n                    simpleAnimatorData[offset + 3] = simpleAnimatorParams.w;\n                }\n                break;\n            }\n        }\n    }\n    setGeometry(geometry) {\n        if (!this.geometry) {\n            this.geometry = new WebGLRenderGeometryElement(geometry.mode, geometry.drawType);\n        }\n        geometry.cloneTo(this.geometry);\n        this.geometry.drawType = DrawType.DrawElementInstance;\n        this._instanceStateInfo = WebGLInstanceRenderElement3D.getInstanceBufferState(geometry, this.owner.renderNodeType, this.renderShaderData._defineDatas);\n        this.geometry.bufferState = this._instanceStateInfo.state;\n    }\n    _render(context) {\n        for (let i = 0; i < this.updateNums; i++) {\n            let buffer = this._vertexBuffers[i];\n            if (!buffer)\n                break;\n            let data = this._updateData[i];\n            buffer.orphanStorage();\n            buffer.setData(data.buffer, 0, 0, this.drawCount * this._updateDataNum[i] * 4);\n        }\n        super._render(context);\n        this.clearRenderData();\n    }\n    clearRenderData() {\n        this.drawCount = 0;\n        this.updateNums = 0;\n        this._vertexBuffers.length = 0;\n        this._updateData.forEach((data) => {\n            WebGLInstanceRenderElement3D._bufferPool.get(data.length).push(data);\n        });\n        this._updateData.length = 0;\n        this._updateDataNum.length = 0;\n    }\n    recover() {\n        WebGLInstanceRenderElement3D._pool.push(this);\n        this.instanceElementList.clear();\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nWebGLInstanceRenderElement3D._instanceBufferStateMap = new Map();\nWebGLInstanceRenderElement3D.MaxInstanceCount = 1024;\nWebGLInstanceRenderElement3D._pool = [];\nWebGLInstanceRenderElement3D._bufferPool = new Map();\n","import { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { RenderPassStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { BaseCamera } from \"../../../d3/core/BaseCamera\";\nimport { ShadowCascadesMode } from \"../../../d3/core/light/ShadowCascadesMode\";\nimport { ShadowMode } from \"../../../d3/core/light/ShadowMode\";\nimport { ShadowUtils } from \"../../../d3/core/light/ShadowUtils\";\nimport { Scene3DShaderDeclaration } from \"../../../d3/core/scene/Scene3DShaderDeclaration\";\nimport { Plane } from \"../../../d3/math/Plane\";\nimport { ShadowCasterPass } from \"../../../d3/shadowMap/ShadowCasterPass\";\nimport { ShadowCullInfo, ShadowSliceData } from \"../../../d3/shadowMap/ShadowSliceData\";\nimport { Color } from \"../../../maths/Color\";\nimport { MathUtils3D } from \"../../../maths/MathUtils3D\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Viewport } from \"../../../maths/Viewport\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { RenderCullUtil } from \"../../DriverCommon/RenderCullUtil\";\nimport { RenderListQueue } from \"../../DriverCommon/RenderListQueue\";\nexport class WebGLDirectLightShadowRP {\n    get shadowCasterCommanBuffer() {\n        return this._shadowCasterCommanBuffer;\n    }\n    set shadowCasterCommanBuffer(value) {\n        this._shadowCasterCommanBuffer = value;\n    }\n    set light(value) {\n        this._light = value;\n        var lightWorld = Matrix4x4.TEMP;\n        var lightWorldE = lightWorld.elements;\n        var lightUp = this._lightup;\n        var lightSide = this._lightSide;\n        var lightForward = this._lightForward;\n        Matrix4x4.createFromQuaternion(this._light.transform.rotation, lightWorld);\n        lightSide.setValue(lightWorldE[0], lightWorldE[1], lightWorldE[2]);\n        lightUp.setValue(lightWorldE[4], lightWorldE[5], lightWorldE[6]);\n        lightForward.setValue(-lightWorldE[8], -lightWorldE[9], -lightWorldE[10]);\n        var atlasResolution = this._light.shadowResolution;\n        var cascadesMode = this.shadowCastMode = this._light.shadowCascadesMode;\n        if (cascadesMode == ShadowCascadesMode.NoCascades) {\n            this._cascadeCount = 1;\n            this._shadowTileResolution = atlasResolution;\n            this._shadowMapWidth = atlasResolution;\n            this._shadowMapHeight = atlasResolution;\n        }\n        else {\n            this._cascadeCount = cascadesMode == ShadowCascadesMode.TwoCascades ? 2 : 4;\n            let shadowTileResolution = ShadowUtils.getMaxTileResolutionInAtlas(atlasResolution, atlasResolution, this._cascadeCount);\n            this._shadowTileResolution = shadowTileResolution;\n            this._shadowMapWidth = shadowTileResolution * 2;\n            this._shadowMapHeight = cascadesMode == ShadowCascadesMode.TwoCascades ? shadowTileResolution : shadowTileResolution * 2;\n        }\n    }\n    get light() {\n        return this._light;\n    }\n    constructor() {\n        this._cascadesSplitDistance = new Array(WebGLDirectLightShadowRP._maxCascades + 1);\n        this._shadowMatrices = new Float32Array(16 * (WebGLDirectLightShadowRP._maxCascades));\n        this._splitBoundSpheres = new Float32Array(WebGLDirectLightShadowRP._maxCascades * 4);\n        this._shadowSliceDatas = [new ShadowSliceData(), new ShadowSliceData(), new ShadowSliceData(), new ShadowSliceData()];\n        this._shadowMapSize = new Vector4();\n        this._shadowBias = new Vector4();\n        this._cascadeCount = 0;\n        this._shadowMapWidth = 0;\n        this._shadowMapHeight = 0;\n        this._shadowTileResolution = 0;\n        this._lightup = new Vector3();\n        this._lightSide = new Vector3();\n        this._lightForward = new Vector3();\n        this._cascadesSplitDistance = new Array(WebGLDirectLightShadowRP._maxCascades + 1);\n        this._renderQueue = new RenderListQueue(false);\n        this._frustumPlanes = new Array(new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0), new Plane(new Vector3(), 0));\n        this._shadowCullInfo = new ShadowCullInfo();\n    }\n    update(context) {\n        var splitDistance = this._cascadesSplitDistance;\n        var frustumPlanes = this._frustumPlanes;\n        var cameraNear = this.camera.nearplane;\n        var shadowFar = Math.min(this.camera.farplane, this._light.shadowDistance);\n        var shadowMatrices = this._shadowMatrices;\n        var boundSpheres = this._splitBoundSpheres;\n        ShadowUtils.getCascadesSplitDistance(this._light.shadowTwoCascadeSplits, this._light._shadowFourCascadeSplits, cameraNear, shadowFar, this.camera.fieldOfView * MathUtils3D.Deg2Rad, this.camera.aspectRatio, this.shadowCastMode, splitDistance);\n        ShadowUtils.getCameraFrustumPlanes(this.camera._projectViewMatrix, frustumPlanes);\n        var forward = Vector3.TEMP;\n        this.camera.transform.getForward(forward);\n        Vector3.normalize(forward, forward);\n        for (var i = 0; i < this._cascadeCount; i++) {\n            var sliceData = this._shadowSliceDatas[i];\n            sliceData.sphereCenterZ = ShadowUtils.getBoundSphereByFrustum(splitDistance[i], splitDistance[i + 1], this.camera.fieldOfView * MathUtils3D.Deg2Rad, this.camera.aspectRatio, this.camera.transform.position, forward, sliceData.splitBoundSphere);\n            ShadowUtils.getDirectionLightShadowCullPlanes(frustumPlanes, i, splitDistance, cameraNear, this._lightForward, sliceData);\n            ShadowUtils.getDirectionalLightMatrices(this._lightup, this._lightSide, this._lightForward, i, this._light.shadowNearPlane, this._shadowTileResolution, sliceData, shadowMatrices);\n            if (this._cascadeCount > 1)\n                ShadowUtils.applySliceTransform(sliceData, this._shadowMapWidth, this._shadowMapHeight, i, shadowMatrices);\n        }\n        ShadowUtils.prepareShadowReceiverShaderValues(this._shadowMapWidth, this._shadowMapHeight, this._shadowSliceDatas, this._cascadeCount, this._shadowMapSize, shadowMatrices, boundSpheres);\n    }\n    render(context, list, count) {\n        let shaderValues = context.sceneData;\n        context.pipelineMode = \"ShadowCaster\";\n        var shadowMap = this.destTarget;\n        context.setRenderTarget(shadowMap, RenderClearFlag.Depth);\n        context.setClearData(RenderClearFlag.Depth, Color.BLACK, 1, 0);\n        let originCameraData = context.cameraData;\n        for (var i = 0, n = this._cascadeCount; i < n; i++) {\n            var sliceData = this._shadowSliceDatas[i];\n            this.getShadowBias(sliceData.projectionMatrix, sliceData.resolution, this._shadowBias);\n            this._setupShadowCasterShaderValues(shaderValues, sliceData, this._lightForward, this._shadowBias);\n            var shadowCullInfo = this._shadowCullInfo;\n            shadowCullInfo.position = sliceData.position;\n            shadowCullInfo.cullPlanes = sliceData.cullPlanes;\n            shadowCullInfo.cullPlaneCount = sliceData.cullPlaneCount;\n            shadowCullInfo.cullSphere = sliceData.splitBoundSphere;\n            shadowCullInfo.direction = this._lightForward;\n            var time = performance.now();\n            RenderCullUtil.cullDirectLightShadow(shadowCullInfo, list, count, this._renderQueue, context);\n            Stat.renderPassStatArray[RenderPassStatisticsInfo.T_ShadowMapCull] += (performance.now() - time);\n            context.cameraData = sliceData.cameraShaderValue;\n            context.cameraUpdateMask++;\n            var resolution = sliceData.resolution;\n            var offsetX = sliceData.offsetX;\n            var offsetY = sliceData.offsetY;\n            if (this._renderQueue.elements.length > 0) {\n                Viewport.TEMP.set(offsetX, offsetY, resolution, resolution);\n                Vector4.TEMP.setValue(offsetX + 1, offsetY + 1, resolution - 2, resolution - 2);\n                context.setViewPort(Viewport.TEMP);\n                context.setScissor(Vector4.TEMP);\n            }\n            else {\n                Viewport.TEMP.set(offsetX, offsetY, resolution, resolution);\n                context.setViewPort(Viewport.TEMP);\n                Vector4.TEMP.setValue(offsetX, offsetY, resolution, resolution);\n                context.setScissor(Vector4.TEMP);\n            }\n            context.setClearData(RenderClearFlag.Depth, Color.BLACK, 1, 0);\n            this._renderQueue.renderQueue(context);\n            Stat.shadowMapDrawCall += this._renderQueue.elements.length;\n            this._applyCasterPassCommandBuffer(context);\n        }\n        this._applyRenderData(context.sceneData, context.cameraData);\n        this._renderQueue._batch.recoverData();\n        context.cameraData = originCameraData;\n        context.cameraUpdateMask++;\n    }\n    _applyRenderData(scene, camera) {\n        var light = this._light;\n        if (light.shadowCascadesMode !== ShadowCascadesMode.NoCascades)\n            scene.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE);\n        else\n            scene.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE);\n        switch (light.shadowMode) {\n            case ShadowMode.Hard:\n                scene.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW);\n                scene.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);\n                break;\n            case ShadowMode.SoftLow:\n                scene.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW);\n                scene.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);\n                break;\n            case ShadowMode.SoftHigh:\n                scene.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);\n                scene.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW);\n                break;\n        }\n        scene.setBuffer(ShadowCasterPass.SHADOW_MATRICES, this._shadowMatrices);\n        scene.setVector(ShadowCasterPass.SHADOW_MAP_SIZE, this._shadowMapSize);\n        scene.setBuffer(ShadowCasterPass.SHADOW_SPLIT_SPHERES, this._splitBoundSpheres);\n    }\n    _applyCasterPassCommandBuffer(context) {\n        if (!this.shadowCasterCommanBuffer || this.shadowCasterCommanBuffer.length == 0)\n            return;\n        this.shadowCasterCommanBuffer.forEach(function (value) {\n            value._apply();\n        });\n    }\n    getShadowBias(shadowProjectionMatrix, shadowResolution, out) {\n        var frustumSize;\n        frustumSize = 2.0 / shadowProjectionMatrix.elements[0];\n        var texelSize = frustumSize / shadowResolution;\n        var depthBias = -this._light.shadowDepthBias * texelSize;\n        var normalBias = -this._light.shadowNormalBias * texelSize;\n        if (this._light.shadowMode == ShadowMode.SoftHigh) {\n            const kernelRadius = 2.5;\n            depthBias *= kernelRadius;\n            normalBias *= kernelRadius;\n        }\n        out.setValue(depthBias, normalBias, 0.0, 0.0);\n    }\n    _setupShadowCasterShaderValues(shaderValues, shadowSliceData, LightParam, shadowBias) {\n        shaderValues.setVector(ShadowCasterPass.SHADOW_BIAS, shadowBias);\n        shaderValues.setVector3(ShadowCasterPass.SHADOW_LIGHT_DIRECTION, LightParam);\n        var cameraSV = shadowSliceData.cameraShaderValue;\n        cameraSV.setMatrix4x4(BaseCamera.VIEWMATRIX, shadowSliceData.viewMatrix);\n        cameraSV.setMatrix4x4(BaseCamera.PROJECTMATRIX, shadowSliceData.projectionMatrix);\n        cameraSV.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX, shadowSliceData.viewProjectMatrix);\n        shaderValues.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX, shadowSliceData.viewProjectMatrix);\n    }\n    destroy() {\n        for (var i = 0; i < this._shadowSliceDatas.length; i++) {\n            this._shadowSliceDatas[i].destroy();\n        }\n        this._renderQueue.destroy();\n        this._cascadesSplitDistance = null;\n        this._frustumPlanes = null;\n        this._shadowMatrices = null;\n        this._splitBoundSpheres = null;\n    }\n}\nWebGLDirectLightShadowRP._maxCascades = 4;\n","import { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { RenderPassStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Color } from \"../../../maths/Color\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { WebDefineDatas } from \"../../RenderModuleData/WebModuleData/WebDefineDatas\";\nimport { WebGLEngine } from \"../RenderDevice/WebGLEngine\";\nexport class WebGLRenderContext3D {\n    get sceneData() {\n        return this._sceneData;\n    }\n    set sceneData(value) {\n        this._sceneData = value;\n        if (this.sceneData) {\n            let sceneMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"Scene3D\");\n            this.sceneData.createUniformBuffer(\"Scene3D\", sceneMap._idata);\n        }\n    }\n    get cameraData() {\n        return this._cameraData;\n    }\n    set cameraData(value) {\n        this._cameraData = value;\n        if (this.cameraData) {\n            let cameraMap = LayaGL.renderDeviceFactory.createGlobalUniformMap(\"BaseCamera\");\n            this.cameraData.createUniformBuffer(\"BaseCamera\", cameraMap._idata);\n        }\n    }\n    get sceneModuleData() {\n        return this._sceneModuleData;\n    }\n    set sceneModuleData(value) {\n        this._sceneModuleData = value;\n    }\n    get cameraModuleData() {\n        return this._cameraModuleData;\n    }\n    set cameraModuleData(value) {\n        this._cameraModuleData = value;\n    }\n    get globalShaderData() {\n        return this._globalShaderData;\n    }\n    set globalShaderData(value) {\n        this._globalShaderData = value;\n    }\n    _getContextShaderDefines() {\n        return this._cacheGlobalDefines;\n    }\n    _prepareContext() {\n        let contextDef = this._cacheGlobalDefines;\n        if (this.sceneData) {\n            this.sceneData._defineDatas.cloneTo(contextDef);\n            for (let key of this._preDrawUniformMaps) {\n                this.sceneData.updateUBOBuffer(key);\n            }\n        }\n        else {\n            this._globalConfigShaderData.cloneTo(contextDef);\n        }\n        if (this.cameraData) {\n            contextDef.addDefineDatas(this.cameraData._defineDatas);\n            this.cameraData.updateUBOBuffer(\"BaseCamera\");\n        }\n    }\n    setRenderTarget(value, clearFlag) {\n        this._clearFlag = clearFlag;\n        if (value == this._renderTarget)\n            return;\n        this._renderTarget = value;\n        this._needStart = true;\n    }\n    setViewPort(value) {\n        this._viewPort = value;\n        this._needStart = true;\n    }\n    setScissor(value) {\n        this._scissor = value;\n        this._needStart = true;\n    }\n    get sceneUpdataMask() {\n        return this._sceneUpdataMask;\n    }\n    set sceneUpdataMask(value) {\n        this._sceneUpdataMask = value;\n    }\n    get cameraUpdateMask() {\n        return this._cameraUpdateMask;\n    }\n    set cameraUpdateMask(value) {\n        this._cameraUpdateMask = value;\n    }\n    get pipelineMode() {\n        return this._pipelineMode;\n    }\n    set pipelineMode(value) {\n        this._pipelineMode = value;\n    }\n    get invertY() {\n        return this._invertY;\n    }\n    set invertY(value) {\n        this._invertY = value;\n    }\n    constructor() {\n        this._cacheGlobalDefines = new WebDefineDatas();\n        this._needStart = true;\n        this._clearColor = new Color();\n        this._globalConfigShaderData = Shader3D._configDefineValues;\n        this._preDrawUniformMaps = new Set();\n        this.cameraUpdateMask = 0;\n        WebGLRenderContext3D._instance = this;\n    }\n    runOneCMD(cmd) {\n        cmd.apply(this);\n    }\n    runCMDList(cmds) {\n        cmds.forEach(element => {\n            element.apply(this);\n        });\n    }\n    setClearData(clearFlag, color, depth, stencil) {\n        this._clearFlag = clearFlag;\n        color.cloneTo(this._clearColor);\n        this._clearDepth = depth;\n        this._clearStencil = stencil;\n        return 0;\n    }\n    drawRenderElementList(list) {\n        if (this._needStart) {\n            this._bindRenderTarget();\n            this._start();\n            this._needStart = false;\n        }\n        this._prepareContext();\n        let elements = list.elements;\n        for (var i = 0, n = list.length; i < n; i++) {\n            elements[i]._preUpdatePre(this);\n        }\n        let bufferMgr = WebGLEngine.instance.bufferMgr;\n        if (bufferMgr) {\n            bufferMgr.upload();\n        }\n        for (var i = 0, n = list.length; i < n; i++) {\n            elements[i]._render(this);\n        }\n        return 0;\n    }\n    drawRenderElementOne(node) {\n        if (this._needStart) {\n            this._bindRenderTarget();\n            this._start();\n            this._needStart = false;\n        }\n        this._prepareContext();\n        node._preUpdatePre(this);\n        let bufferMgr = WebGLEngine.instance.bufferMgr;\n        if (bufferMgr) {\n            bufferMgr.upload();\n        }\n        node._render(this);\n        return 0;\n    }\n    drawRenderElementList_StatUse(list) {\n        if (this._needStart) {\n            this._bindRenderTarget();\n            this._start();\n            this._needStart = false;\n        }\n        let elements = list.elements;\n        for (var i = 0, n = list.length; i < n; i++) {\n            elements[i]._preUpdatePre(this);\n        }\n        let bufferMgr = WebGLEngine.instance.bufferMgr;\n        if (bufferMgr) {\n            bufferMgr.upload();\n        }\n        for (var i = 0, n = list.length; i < n; i++) {\n            var time = performance.now();\n            elements[i]._render(this);\n            if (elements[i].owner) {\n                switch (elements[i].owner.renderNodeType) {\n                    case 0:\n                        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OtherRender] += (performance.now() - time);\n                        break;\n                    case 1:\n                        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OnlyMeshRender] += (performance.now() - time);\n                        break;\n                    case 2:\n                        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OnlyShurikenParticleRender] += (performance.now() - time);\n                        break;\n                    case 9:\n                        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OnlySkinnedMeshRender] += (performance.now() - time);\n                        break;\n                }\n            }\n        }\n        return 0;\n    }\n    drawRenderElementOne_StatUse(node) {\n        if (this._needStart) {\n            this._bindRenderTarget();\n            this._start();\n            this._needStart = false;\n        }\n        node._preUpdatePre(this);\n        let bufferMgr = WebGLEngine.instance.bufferMgr;\n        if (bufferMgr) {\n            bufferMgr.upload();\n        }\n        var time = performance.now();\n        node._render(this);\n        if (node.owner) {\n            switch (node.owner.renderNodeType) {\n                case 0:\n                    Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OtherRender] += (performance.now() - time);\n                    break;\n                case 1:\n                    Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OnlyMeshRender] += (performance.now() - time);\n                    break;\n                case 2:\n                    Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OnlyShurikenParticleRender] += (performance.now() - time);\n                    break;\n                case 9:\n                    Stat.renderPassStatArray[RenderPassStatisticsInfo.T_OnlySkinnedMeshRender] += (performance.now() - time);\n                    break;\n            }\n        }\n        return 0;\n    }\n    _bindRenderTarget() {\n        if (this._renderTarget) {\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget);\n        }\n        else {\n            LayaGL.textureContext.bindoutScreenTarget();\n        }\n    }\n    _start() {\n        WebGLEngine.instance.scissorTest(true);\n        WebGLEngine.instance.viewport(this._viewPort.x, this._viewPort.y, this._viewPort.width, this._viewPort.height);\n        WebGLEngine.instance.scissor(this._viewPort.x, this._viewPort.y, this._viewPort.width, this._viewPort.height);\n        if (this._clearFlag != RenderClearFlag.Nothing)\n            WebGLEngine.instance.clearRenderTexture(this._clearFlag, this._clearColor, this._clearDepth, this._clearStencil);\n        WebGLEngine.instance.scissor(this._scissor.x, this._scissor.y, this._scissor.z, this._scissor.w);\n    }\n}\n","import { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { RenderPassStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { CommandBuffer } from \"../../../d3/core/render/command/CommandBuffer\";\nimport { DepthPass } from \"../../../d3/depthMap/DepthPass\";\nimport { CameraCullInfo } from \"../../../d3/shadowMap/ShadowSliceData\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Viewport } from \"../../../maths/Viewport\";\nimport { DepthTextureMode } from \"../../../resource/RenderTexture\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { RenderCullUtil } from \"../../DriverCommon/RenderCullUtil\";\nimport { RenderListQueue } from \"../../DriverCommon/RenderListQueue\";\nimport { WebGLRenderContext3D } from \"./WebGLRenderContext3D\";\nexport class WebGLForwardAddClusterRP {\n    get enableOpaqueTexture() {\n        return this._enableOpaqueTexture;\n    }\n    set enableOpaqueTexture(value) {\n        this._enableOpaqueTexture = value;\n    }\n    setViewPort(value) {\n        value.cloneTo(this._viewPort);\n    }\n    ;\n    setScissor(value) {\n        value.cloneTo(this._scissor);\n    }\n    constructor() {\n        this.blitOpaqueBuffer = new CommandBuffer();\n        this.opaqueList = new RenderListQueue(false);\n        this.transparent = new RenderListQueue(true);\n        this.cameraCullInfo = new CameraCullInfo();\n        this._zBufferParams = new Vector4();\n        this._scissor = new Vector4();\n        this._viewPort = new Viewport();\n        this._defaultNormalDepthColor = new Color(0.5, 0.5, 1.0, 0.0);\n        this.clearColor = new Color();\n        this.depthPipelineMode = \"ShadowCaster\";\n        this.depthNormalPipelineMode = \"DepthNormal\";\n        let context = WebGLRenderContext3D._instance;\n        context._preDrawUniformMaps.add(\"Scene3D\");\n        context._preDrawUniformMaps.add(\"Shadow\");\n        context._preDrawUniformMaps.add(\"Global\");\n    }\n    setCameraCullInfo(value) {\n        this.cameraCullInfo.position = value._transform.position;\n        this.cameraCullInfo.cullingMask = value.cullingMask;\n        this.cameraCullInfo.staticMask = value.staticMask;\n        this.cameraCullInfo.boundFrustum = value.boundFrustum;\n        this.cameraCullInfo.useOcclusionCulling = value.useOcclusionCulling;\n    }\n    setBeforeForwardCmds(value) {\n        if (value && value.length > 0) {\n            this.beforeForwardCmds = value;\n            value.forEach(element => {\n                element._apply(false);\n            });\n        }\n    }\n    setBeforeSkyboxCmds(value) {\n        if (value && value.length > 0) {\n            this.beforeSkyboxCmds = value;\n            value.forEach(element => {\n                element._apply(false);\n            });\n        }\n    }\n    setBeforeTransparentCmds(value) {\n        if (value && value.length > 0) {\n            this.beforeTransparentCmds = value;\n            value.forEach(element => {\n                element._apply(false);\n            });\n        }\n    }\n    render(context, list, count) {\n        context.cameraUpdateMask++;\n        this.opaqueList.clear();\n        this.transparent.clear();\n        var time = performance.now();\n        RenderCullUtil.cullByCameraCullInfo(this.cameraCullInfo, list, count, this.opaqueList, this.transparent, context);\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_CameraMainCull] += (performance.now() - time);\n        time = performance.now();\n        if ((this.depthTextureMode & DepthTextureMode.Depth) != 0) {\n            this._renderDepthPass(context);\n        }\n        if ((this.depthTextureMode & DepthTextureMode.DepthNormals) != 0) {\n            this._renderDepthNormalPass(context);\n        }\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_Render_CameraOtherDest] += (performance.now() - time);\n        this._viewPort.cloneTo(WebGLForwardAddClusterRP._context3DViewPortCatch);\n        this._scissor.cloneTo(WebGLForwardAddClusterRP._contextScissorPortCatch);\n        this._mainPass(context);\n        this.opaqueList._batch.recoverData();\n    }\n    _renderDepthPass(context) {\n        context.pipelineMode = this.depthPipelineMode;\n        var viewport = this._viewPort;\n        var shadervalue = context.sceneData;\n        shadervalue.addDefine(DepthPass.DEPTHPASS);\n        shadervalue.setVector(DepthPass.DEFINE_SHADOW_BIAS, Vector4.ZERO);\n        Viewport.TEMP.set(viewport.x, viewport.y, viewport.width, viewport.height);\n        Vector4.TEMP.setValue(viewport.x, viewport.y, viewport.width, viewport.height);\n        context.setViewPort(Viewport.TEMP);\n        context.setScissor(Vector4.TEMP);\n        context.setRenderTarget(this.depthTarget, RenderClearFlag.Depth);\n        context.setClearData(RenderClearFlag.Depth, Color.BLACK, 1, 0);\n        this.opaqueList.renderQueue(context);\n        Stat.depthCastDrawCall += this.opaqueList.elements.length;\n        var far = this.camera.farplane;\n        var near = this.camera.nearplane;\n        this._zBufferParams.setValue(1.0 - far / near, far / near, (near - far) / (near * far), 1 / near);\n        context.cameraData.setVector(DepthPass.DEFINE_SHADOW_BIAS, DepthPass.SHADOW_BIAS);\n        context.cameraData.setVector(DepthPass.DEPTHZBUFFERPARAMS, this._zBufferParams);\n        shadervalue.removeDefine(DepthPass.DEPTHPASS);\n    }\n    _transparentListRender(context) {\n        this.transparent.renderQueue(context);\n        Stat.transDrawCall += this.transparent.elements.length;\n    }\n    _opaqueListRender(context) {\n        this.opaqueList.renderQueue(context);\n        Stat.opaqueDrawCall += this.opaqueList.elements.length;\n    }\n    _renderDepthNormalPass(context) {\n        context.pipelineMode = this.depthNormalPipelineMode;\n        var viewport = this._viewPort;\n        Viewport.TEMP.set(viewport.x, viewport.y, viewport.width, viewport.height);\n        Vector4.TEMP.setValue(viewport.x, viewport.y, viewport.width, viewport.height);\n        context.setViewPort(Viewport.TEMP);\n        context.setScissor(Vector4.TEMP);\n        context.setClearData(RenderClearFlag.Color | RenderClearFlag.Depth, this._defaultNormalDepthColor, 1, 0);\n        context.setRenderTarget(this.depthNormalTarget, RenderClearFlag.Color | RenderClearFlag.Depth);\n        this.opaqueList.renderQueue(context);\n        Stat.depthCastDrawCall += this.opaqueList.elements.length;\n    }\n    opaqueTexturePass(context) {\n        let commanbuffer = this.blitOpaqueBuffer;\n        commanbuffer._apply(false);\n        context.runCMDList(commanbuffer._renderCMDs);\n    }\n    _mainPass(context) {\n        context.pipelineMode = this.pipelineMode;\n        this._rendercmd(this.beforeForwardCmds, context);\n        this._recoverRenderContext3D(context);\n        context.setClearData(this.clearFlag, this.clearColor, 1, 0);\n        var time = performance.now();\n        this.enableOpaque && this._opaqueListRender(context);\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_Render_OpaqueRender] += (performance.now() - time);\n        this._rendercmd(this.beforeSkyboxCmds, context);\n        if (this.skyRenderNode) {\n            let skyRenderNode = this.skyRenderNode;\n            let skyRenderElement = skyRenderNode.renderelements[0];\n            context.drawRenderElementOne(skyRenderElement);\n        }\n        if (this.enableOpaque) {\n            this.opaqueTexturePass(context);\n        }\n        this._rendercmd(this.beforeTransparentCmds, context);\n        this._recoverRenderContext3D(context);\n        time = performance.now();\n        this.transparent && this._transparentListRender(context);\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_Render_TransparentRender] += (performance.now() - time);\n    }\n    _rendercmd(cmds, context) {\n        if (!cmds || cmds.length == 0)\n            return;\n        var time = performance.now();\n        cmds.forEach(function (value) {\n            context.runCMDList(value._renderCMDs);\n        });\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_Render_CameraEventCMD] += (performance.now() - time);\n    }\n    _recoverRenderContext3D(context) {\n        const cacheViewPor = WebGLForwardAddClusterRP._context3DViewPortCatch;\n        const cacheScissor = WebGLForwardAddClusterRP._contextScissorPortCatch;\n        context.setViewPort(cacheViewPor);\n        context.setScissor(cacheScissor);\n        context.setRenderTarget(this.destTarget, RenderClearFlag.Nothing);\n    }\n    destroy() {\n        this.cameraCullInfo = null;\n        this.beforeForwardCmds = null;\n        this.beforeSkyboxCmds = null;\n        this.beforeTransparentCmds = null;\n        this.blitOpaqueBuffer.clear();\n        this.blitOpaqueBuffer = null;\n        this.opaqueList.destroy();\n        this.transparent.destroy();\n    }\n}\nWebGLForwardAddClusterRP._context3DViewPortCatch = new Viewport(0, 0, 0, 0);\nWebGLForwardAddClusterRP._contextScissorPortCatch = new Vector4(0, 0, 0, 0);\n","import { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { RenderPassStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { BaseCamera } from \"../../../d3/core/BaseCamera\";\nimport { ShadowMode } from \"../../../d3/core/light/ShadowMode\";\nimport { Scene3DShaderDeclaration } from \"../../../d3/core/scene/Scene3DShaderDeclaration\";\nimport { ShadowCasterPass } from \"../../../d3/shadowMap/ShadowCasterPass\";\nimport { ShadowSpotData } from \"../../../d3/shadowMap/ShadowSliceData\";\nimport { Color } from \"../../../maths/Color\";\nimport { MathUtils3D } from \"../../../maths/MathUtils3D\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Viewport } from \"../../../maths/Viewport\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { RenderCullUtil } from \"../../DriverCommon/RenderCullUtil\";\nimport { RenderListQueue } from \"../../DriverCommon/RenderListQueue\";\nexport class WebGLSpotLightShadowRP {\n    set light(value) {\n        this._light = value;\n        this._shadowResolution = this._light.shadowResolution;\n        this._lightWorldMatrix = this._light.getWorldMatrix(this._lightWorldMatrix);\n        this._lightPos = this._light.transform.position;\n        this._spotAngle = this._light.spotAngle;\n        this._spotRange = this._light.spotRange;\n    }\n    get light() {\n        return this._light;\n    }\n    constructor() {\n        this._shadowSpotMapSize = new Vector4();\n        this._shadowSpotMatrices = new Matrix4x4();\n        this._renderQueue = new RenderListQueue(false);\n        this._shadowSpotData = new ShadowSpotData();\n        this._lightWorldMatrix = new Matrix4x4();\n        this._shadowBias = new Vector4();\n    }\n    update(context) {\n        var shadowSpotData = this._shadowSpotData;\n        this._getSpotLightShadowData(shadowSpotData, this._shadowResolution, this._shadowSpotMatrices, this._shadowSpotMapSize);\n    }\n    render(context, list, count) {\n        let originCameraData = context.cameraData;\n        var shaderValues = context.sceneData;\n        context.pipelineMode = \"ShadowCaster\";\n        context.setRenderTarget(this.destTarget, RenderClearFlag.Depth);\n        var shadowSpotData = this._shadowSpotData;\n        this._getShadowBias(shadowSpotData.resolution, this._shadowBias);\n        this._setupShadowCasterShaderValues(shaderValues, shadowSpotData, this._shadowBias);\n        var time = performance.now();\n        RenderCullUtil.cullSpotShadow(shadowSpotData.cameraCullInfo, list, count, this._renderQueue, context);\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_ShadowMapCull] += (performance.now() - time);\n        context.cameraData = shadowSpotData.cameraShaderValue;\n        context.cameraUpdateMask++;\n        ;\n        Viewport.TEMP.set(shadowSpotData.offsetX, shadowSpotData.offsetY, shadowSpotData.resolution, shadowSpotData.resolution);\n        Vector4.TEMP.setValue(shadowSpotData.offsetX, shadowSpotData.offsetY, shadowSpotData.resolution, shadowSpotData.resolution);\n        context.setViewPort(Viewport.TEMP);\n        context.setScissor(Vector4.TEMP);\n        context.setClearData(RenderClearFlag.Depth, Color.BLACK, 1, 0);\n        this._renderQueue.renderQueue(context);\n        Stat.shadowMapDrawCall += this._renderQueue.elements.length;\n        this._applyCasterPassCommandBuffer(context);\n        this._applyRenderData(context.sceneData, context.cameraData);\n        this._renderQueue._batch.recoverData();\n        context.cameraData = originCameraData;\n        context.cameraUpdateMask++;\n    }\n    _getSpotLightShadowData(shadowSpotData, resolution, shadowSpotMatrices, shadowMapSize) {\n        var out = shadowSpotData.position = this._lightPos;\n        shadowSpotData.resolution = resolution;\n        shadowMapSize.setValue(1.0 / resolution, 1.0 / resolution, resolution, resolution);\n        shadowSpotData.offsetX = 0;\n        shadowSpotData.offsetY = 0;\n        var spotWorldMatrix = this._lightWorldMatrix;\n        var viewMatrix = shadowSpotData.viewMatrix;\n        var projectMatrix = shadowSpotData.projectionMatrix;\n        var viewProjectMatrix = shadowSpotData.viewProjectMatrix;\n        var BoundFrustum = shadowSpotData.cameraCullInfo.boundFrustum;\n        spotWorldMatrix.invert(viewMatrix);\n        Matrix4x4.createPerspective(3.1416 * this._spotAngle / 180.0, 1, 0.1, this._spotRange, projectMatrix);\n        Matrix4x4.multiply(projectMatrix, viewMatrix, viewProjectMatrix);\n        BoundFrustum.matrix = viewProjectMatrix;\n        viewProjectMatrix.cloneTo(shadowSpotMatrices);\n        shadowSpotData.cameraCullInfo.position = out;\n    }\n    _getShadowBias(shadowResolution, out) {\n        var frustumSize = Math.tan(this._spotAngle * 0.5 * MathUtils3D.Deg2Rad) * this._spotRange;\n        var texelSize = frustumSize / shadowResolution;\n        var depthBias = -this._light.shadowDepthBias * texelSize;\n        var normalBias = -this._light.shadowNormalBias * texelSize;\n        if (this._shadowMode == ShadowMode.SoftHigh) {\n            const kernelRadius = 2.5;\n            depthBias *= kernelRadius;\n            normalBias *= kernelRadius;\n        }\n        out.setValue(depthBias, normalBias, 0.0, 0.0);\n    }\n    _setupShadowCasterShaderValues(shaderValues, shadowSliceData, shadowBias) {\n        shaderValues.setVector(ShadowCasterPass.SHADOW_BIAS, shadowBias);\n        var cameraSV = shadowSliceData.cameraShaderValue;\n        cameraSV.setMatrix4x4(BaseCamera.VIEWMATRIX, shadowSliceData.viewMatrix);\n        cameraSV.setMatrix4x4(BaseCamera.PROJECTMATRIX, shadowSliceData.projectionMatrix);\n        cameraSV.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX, shadowSliceData.viewProjectMatrix);\n        shaderValues.setMatrix4x4(BaseCamera.VIEWPROJECTMATRIX, shadowSliceData.viewProjectMatrix);\n    }\n    _applyCasterPassCommandBuffer(context) {\n        if (!this.shadowCasterCommanBuffer || this.shadowCasterCommanBuffer.length == 0)\n            return;\n        this.shadowCasterCommanBuffer.forEach(function (value) {\n            value._apply();\n        });\n    }\n    _applyRenderData(sceneData, cameraData) {\n        var spotLight = this._light;\n        switch (spotLight.shadowMode) {\n            case ShadowMode.Hard:\n                sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH);\n                sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW);\n                break;\n            case ShadowMode.SoftLow:\n                sceneData.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW);\n                sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH);\n                break;\n            case ShadowMode.SoftHigh:\n                sceneData.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH);\n                sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW);\n                break;\n        }\n        sceneData.setMatrix4x4(ShadowCasterPass.SHADOW_SPOTMATRICES, this._shadowSpotMatrices);\n        sceneData.setVector(ShadowCasterPass.SHADOW_SPOTMAP_SIZE, this._shadowSpotMapSize);\n    }\n    destroy() {\n        this._shadowSpotData.destroy();\n    }\n}\n","import { CommandBuffer } from \"../../../d3/core/render/command/CommandBuffer\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { WebGLDirectLightShadowRP } from \"./WebGLDirectLightShadowRP\";\nimport { WebGLForwardAddClusterRP } from \"./WebGLForwardAddClusterRP\";\nimport { WebGLSpotLightShadowRP } from \"./WebGLSpotLightShadowRP\";\nexport class WebGLForwardAddRP {\n    constructor() {\n        this.shadowCastPass = false;\n        this.enableDirectLightShadow = false;\n        this.enableSpotLightShadowPass = false;\n        this.enablePostProcess = true;\n        this.directLightShadowPass = new WebGLDirectLightShadowRP();\n        this.spotLightShadowPass = new WebGLSpotLightShadowRP();\n        this.shadowParams = new Vector4();\n        this.renderpass = new WebGLForwardAddClusterRP();\n        this.finalize = new CommandBuffer();\n    }\n    setBeforeImageEffect(value) {\n        if (value && value.length > 0) {\n            this._beforeImageEffectCMDS = value;\n            value.forEach(element => {\n                element._apply(false);\n            });\n        }\n    }\n    setAfterEventCmd(value) {\n        if (value && value.length > 0) {\n            this._afterAllRenderCMDS = value;\n            value.forEach(element => {\n                element._apply(false);\n            });\n        }\n    }\n    destroy() {\n        this._afterAllRenderCMDS = null;\n        this._beforeImageEffectCMDS = null;\n        this.renderpass.destroy();\n        this.directLightShadowPass.destroy();\n        this.spotLightShadowPass.destroy();\n        this.finalize.clear();\n        this.finalize = null;\n    }\n}\n","import { Config } from \"../../../../Config\";\nimport { ILaya } from \"../../../../ILaya\";\nimport { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { RenderPassStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { Camera, CameraClearFlags, CameraEventFlags } from \"../../../d3/core/Camera\";\nimport { ShadowMode } from \"../../../d3/core/light/ShadowMode\";\nimport { RenderContext3D } from \"../../../d3/core/render/RenderContext3D\";\nimport { Scene3D } from \"../../../d3/core/scene/Scene3D\";\nimport { Scene3DShaderDeclaration } from \"../../../d3/core/scene/Scene3DShaderDeclaration\";\nimport { DepthPass } from \"../../../d3/depthMap/DepthPass\";\nimport { ShadowCasterPass } from \"../../../d3/shadowMap/ShadowCasterPass\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Viewport } from \"../../../maths/Viewport\";\nimport { DepthTextureMode } from \"../../../resource/RenderTexture\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { WebGLForwardAddRP } from \"./WebGLForwardAddRP\";\nconst viewport = new Viewport(0, 0, 0, 0);\nconst offsetScale = new Vector4();\nexport class WebGLRender3DProcess {\n    constructor() {\n        this.renderpass = new WebGLForwardAddRP();\n    }\n    initRenderpass(camera, context) {\n        let renderpass = this.renderpass.renderpass;\n        let renderRT = camera._getRenderTexture();\n        let clearConst = 0;\n        let clearFlag = camera.clearFlag;\n        if (clearFlag == CameraClearFlags.Sky && !camera.scene.skyRenderer._isAvailable()) {\n            clearFlag = CameraClearFlags.SolidColor;\n        }\n        let hasStencil = renderRT.depthStencilFormat == RenderTargetFormat.DEPTHSTENCIL_24_8;\n        let stencilFlag = hasStencil ? RenderClearFlag.Stencil : 0;\n        switch (clearFlag) {\n            case CameraClearFlags.DepthOnly:\n            case CameraClearFlags.Sky:\n                clearConst = RenderClearFlag.Depth | stencilFlag;\n                break;\n            case CameraClearFlags.Nothing:\n                clearConst = 0;\n                break;\n            case CameraClearFlags.ColorOnly:\n                clearConst = RenderClearFlag.Color;\n                break;\n            case CameraClearFlags.SolidColor:\n            default:\n                clearConst = RenderClearFlag.Color | RenderClearFlag.Depth | stencilFlag;\n                break;\n        }\n        let clearValue = camera._linearClearColor;\n        clearValue = renderRT.gammaCorrection != 1 ? camera.clearColor : camera._linearClearColor;\n        renderpass.camera = camera._renderDataModule;\n        renderpass.destTarget = renderRT._renderTarget;\n        renderpass.clearFlag = clearConst;\n        renderpass.clearColor = clearValue;\n        let needInternalRT = camera._needInternalRenderTexture();\n        if (needInternalRT) {\n            viewport.set(0, 0, renderRT.width, renderRT.height);\n        }\n        else {\n            camera.viewport.cloneTo(viewport);\n        }\n        renderpass.setViewPort(viewport);\n        let scissor = Vector4.TEMP;\n        scissor.setValue(viewport.x, viewport.y, viewport.width, viewport.height);\n        renderpass.setScissor(scissor);\n        renderpass.enableOpaque = Stat.enableOpaque;\n        renderpass.enableTransparent = Stat.enableTransparent;\n        renderpass.enableCMD = Stat.enableCameraCMD;\n        renderpass.setBeforeSkyboxCmds(camera._cameraEventCommandBuffer[CameraEventFlags.BeforeSkyBox]);\n        renderpass.setBeforeForwardCmds(camera._cameraEventCommandBuffer[CameraEventFlags.BeforeForwardOpaque]);\n        renderpass.setBeforeTransparentCmds(camera._cameraEventCommandBuffer[CameraEventFlags.BeforeTransparent]);\n        this.renderpass.setBeforeImageEffect(camera._cameraEventCommandBuffer[CameraEventFlags.BeforeImageEffect]);\n        this.renderpass.setAfterEventCmd(camera._cameraEventCommandBuffer[CameraEventFlags.AfterEveryThing]);\n        renderpass.setCameraCullInfo(camera);\n        if (clearFlag == CameraClearFlags.Sky) {\n            renderpass.skyRenderNode = camera.scene.skyRenderer._baseRenderNode;\n        }\n        else {\n            renderpass.skyRenderNode = null;\n        }\n        renderpass.pipelineMode = RenderContext3D._instance.configPipeLineMode;\n        let enableShadow = Scene3D._updateMark % camera.scene._ShadowMapupdateFrequency == 0 && Stat.enableShadow;\n        this.renderpass.shadowCastPass = enableShadow;\n        if (enableShadow) {\n            let shadowParams = this.renderpass.shadowParams;\n            shadowParams.setValue(0, 0, 0, 0);\n            let sceneShaderData = context.sceneData;\n            let mainDirectionLight = camera.scene._mainDirectionLight;\n            let needDirectionShadow = mainDirectionLight && mainDirectionLight.shadowMode != ShadowMode.None;\n            this.renderpass.enableDirectLightShadow = needDirectionShadow;\n            if (needDirectionShadow) {\n                this.renderpass.directLightShadowPass.camera = camera._renderDataModule;\n                this.renderpass.directLightShadowPass.light = mainDirectionLight._dataModule;\n                let directionShadowMap = ILaya.Scene3D._shadowCasterPass.getDirectLightShadowMap(mainDirectionLight);\n                this.renderpass.directLightShadowPass.destTarget = directionShadowMap._renderTarget;\n                shadowParams.x = this.renderpass.directLightShadowPass.light.shadowStrength;\n                sceneShaderData.setTexture(ShadowCasterPass.SHADOW_MAP, directionShadowMap);\n            }\n            let mainSpotLight = camera.scene._mainSpotLight;\n            let needSpotShadow = mainSpotLight && mainSpotLight.shadowMode != ShadowMode.None;\n            this.renderpass.enableSpotLightShadowPass = needSpotShadow;\n            if (needSpotShadow) {\n                this.renderpass.spotLightShadowPass.light = mainSpotLight._dataModule;\n                let spotShadowMap = ILaya.Scene3D._shadowCasterPass.getSpotLightShadowPassData(mainSpotLight);\n                this.renderpass.spotLightShadowPass.destTarget = spotShadowMap._renderTarget;\n                shadowParams.y = this.renderpass.spotLightShadowPass.light.shadowStrength;\n                sceneShaderData.setTexture(ShadowCasterPass.SHADOW_SPOTMAP, spotShadowMap);\n            }\n            sceneShaderData.setVector(ShadowCasterPass.SHADOW_PARAMS, this.renderpass.shadowParams);\n        }\n        renderpass.blitOpaqueBuffer.clear();\n        let needBlitOpaque = camera.opaquePass;\n        renderpass.enableOpaqueTexture = needBlitOpaque;\n        if (needBlitOpaque) {\n            renderpass.opaqueTexture = camera._opaqueTexture._renderTarget;\n            renderpass.blitOpaqueBuffer.blitScreenQuad(renderRT, camera._opaqueTexture);\n        }\n        if (Stat.enablePostprocess && camera.postProcess && camera.postProcess.enable && camera.postProcess.effects.length > 0) {\n            this.renderpass.enablePostProcess = Stat.enablePostprocess;\n            this.renderpass.postProcess = camera.postProcess._context.command;\n            camera.postProcess._render(camera);\n            this.renderpass.postProcess._apply(false);\n        }\n        else {\n            this.renderpass.enablePostProcess = false;\n        }\n        this.renderpass.finalize.clear();\n        if (!this.renderpass.enablePostProcess && needInternalRT && camera._offScreenRenderTexture) {\n            let dst = camera._offScreenRenderTexture;\n            offsetScale.setValue(camera.normalizedViewport.x, 1.0 - camera.normalizedViewport.y, renderRT.width / dst.width, -renderRT.height / dst.height);\n            this.renderpass.finalize.blitScreenQuad(renderRT, camera._offScreenRenderTexture, offsetScale);\n        }\n        if (this.renderpass.enableDirectLightShadow || this.renderpass.enableSpotLightShadowPass) {\n            let sceneShaderData = context.sceneData;\n            let shadowUniformMap = ShadowCasterPass.ShadowUniformMap;\n            if (Config._uniformBlock) {\n                let shadowBuffer = sceneShaderData.createSubUniformBuffer(\"Shadow\", \"Shadow\", shadowUniformMap._idata);\n            }\n        }\n    }\n    renderDepth(camera) {\n        let depthMode = camera.depthTextureMode;\n        if (camera.postProcess && camera.postProcess.enable) {\n            depthMode |= camera.postProcess.cameraDepthTextureMode;\n        }\n        if ((depthMode & DepthTextureMode.Depth) != 0) {\n            let needDepthTex = camera.canblitDepth && camera._internalRenderTexture.depthStencilTexture;\n            if (needDepthTex) {\n                camera.depthTexture = camera._cacheDepthTexture.depthStencilTexture;\n                Camera.depthPass._depthTexture = camera.depthTexture;\n                camera._shaderValues.setTexture(DepthPass.DEPTHTEXTURE, camera.depthTexture);\n                Camera.depthPass._setupDepthModeShaderValue(DepthTextureMode.Depth, camera);\n                depthMode &= ~DepthTextureMode.Depth;\n            }\n            else {\n                Camera.depthPass.getTarget(camera, DepthTextureMode.Depth, camera.depthTextureFormat);\n                this.renderpass.renderpass.depthTarget = camera.depthTexture._renderTarget;\n                camera._shaderValues.setTexture(DepthPass.DEPTHTEXTURE, camera.depthTexture);\n            }\n        }\n        if ((depthMode & DepthTextureMode.DepthNormals) != 0) {\n            Camera.depthPass.getTarget(camera, DepthTextureMode.DepthNormals, camera.depthTextureFormat);\n            this.renderpass.renderpass.depthNormalTarget = camera.depthNormalTexture._renderTarget;\n            camera._shaderValues.setTexture(DepthPass.DEPTHNORMALSTEXTURE, camera.depthNormalTexture);\n        }\n        this.renderpass.renderpass.depthTextureMode = depthMode;\n    }\n    fowardRender(context, camera) {\n        let time;\n        this.initRenderpass(camera, context);\n        this.renderDepth(camera);\n        let renderList = this.render3DManager.baseRenderList.elements;\n        let count = this.render3DManager.baseRenderList.length;\n        this.renderFowarAddCameraPass(context, this.renderpass, renderList, count);\n        Camera.depthPass.cleanUp();\n    }\n    renderFowarAddCameraPass(context, renderpass, list, count) {\n        var time = performance.now();\n        if (renderpass.shadowCastPass) {\n            if (renderpass.enableDirectLightShadow) {\n                context.sceneData.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW);\n                context.sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT);\n                renderpass.directLightShadowPass.update(context);\n                renderpass.directLightShadowPass.render(context, list, count);\n            }\n            if (renderpass.enableSpotLightShadowPass) {\n                context.sceneData.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT);\n                context.sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW);\n                renderpass.spotLightShadowPass.update(context);\n                renderpass.spotLightShadowPass.render(context, list, count);\n            }\n            if (renderpass.enableDirectLightShadow) {\n                context.sceneData.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW);\n            }\n            else {\n                context.sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW);\n            }\n            if (renderpass.enableSpotLightShadowPass) {\n                context.sceneData.addDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT);\n            }\n            else {\n                context.sceneData.removeDefine(Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT);\n            }\n        }\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_Render_ShadowPassMode] += (performance.now() - time);\n        renderpass.renderpass.render(context, list, count);\n        renderpass._beforeImageEffectCMDS && this._rendercmd(renderpass._beforeImageEffectCMDS, context);\n        if (renderpass.enablePostProcess) {\n            time = performance.now();\n            renderpass.postProcess && this._renderPostProcess(renderpass.postProcess, context);\n            Stat.renderPassStatArray[RenderPassStatisticsInfo.T_Render_PostProcess] += (performance.now() - time);\n        }\n        renderpass._afterAllRenderCMDS && this._rendercmd(renderpass._afterAllRenderCMDS, context);\n        renderpass.finalize._apply(false);\n        context.runCMDList(renderpass.finalize._renderCMDs);\n    }\n    _rendercmd(cmds, context) {\n        if (!cmds || cmds.length == 0)\n            return;\n        var time = performance.now();\n        cmds.forEach(function (value) {\n            context.runCMDList(value._renderCMDs);\n        });\n        Stat.renderPassStatArray[RenderPassStatisticsInfo.T_Render_CameraEventCMD] += (performance.now() - time);\n    }\n    _renderPostProcess(postprocessCMD, context) {\n        context.runCMDList(postprocessCMD._renderCMDs);\n    }\n    destroy() {\n        this.renderpass.destroy();\n    }\n}\n","import { RenderClearFlag } from \"../../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { Command } from \"../../../../d3/core/render/command/Command\";\nimport { Color } from \"../../../../maths/Color\";\nimport { Vector4 } from \"../../../../maths/Vector4\";\nimport { Viewport } from \"../../../../maths/Viewport\";\nimport { BlitQuadCMDData, DrawElementCMDData, DrawNodeCMDData, SetRenderTargetCMD, SetViewportCMD } from \"../../../DriverDesign/3DRenderPass/IRender3DCMD\";\nimport { RenderCMDType } from \"../../../DriverDesign/RenderDevice/IRenderCMD\";\nexport class WebGLDrawNodeCMDData extends DrawNodeCMDData {\n    get node() {\n        return this._node;\n    }\n    set node(value) {\n        this._node = value;\n    }\n    get destShaderData() {\n        return this._destShaderData;\n    }\n    set destShaderData(value) {\n        this._destShaderData = value;\n    }\n    get destSubShader() {\n        return this._destSubShader;\n    }\n    set destSubShader(value) {\n        this._destSubShader = value;\n    }\n    get subMeshIndex() {\n        return this._subMeshIndex;\n    }\n    set subMeshIndex(value) {\n        this._subMeshIndex = value;\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.DrawNode;\n    }\n    apply(context) {\n        if (this.destShaderData && this.destSubShader) {\n            this.node._renderUpdatePre(context);\n            if (this.subMeshIndex == -1) {\n                this.node.renderelements.forEach(element => {\n                    let oriSubShader = element.subShader;\n                    let oriMatShaderData = element.materialShaderData;\n                    element.subShader = this._destSubShader;\n                    element.materialShaderData = this._destShaderData;\n                    context.drawRenderElementOne(element);\n                    element.subShader = oriSubShader;\n                    element.materialShaderData = oriMatShaderData;\n                });\n            }\n            else {\n                let element = this.node.renderelements[this.subMeshIndex];\n                let oriSubShader = element.subShader;\n                let oriMatShaderData = element.materialShaderData;\n                element.subShader = this._destSubShader;\n                element.materialShaderData = this._destShaderData;\n                context.drawRenderElementOne(element);\n                element.subShader = oriSubShader;\n                element.materialShaderData = oriMatShaderData;\n            }\n        }\n    }\n}\nexport class WebGLBlitQuadCMDData extends BlitQuadCMDData {\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    get viewport() {\n        return this._viewport;\n    }\n    set viewport(value) {\n        value.cloneTo(this._viewport);\n    }\n    get scissor() {\n        return this._scissor;\n    }\n    set scissor(value) {\n        value.cloneTo(this._scissor);\n    }\n    get source() {\n        return this._source;\n    }\n    set source(value) {\n        this._source = value;\n        if (this._source) {\n            this._sourceTexelSize.setValue(1.0 / this._source.width, 1.0 / this._source.height, this._source.width, this._source.height);\n        }\n    }\n    get offsetScale() {\n        return this._offsetScale;\n    }\n    set offsetScale(value) {\n        value.cloneTo(this._offsetScale);\n    }\n    get element() {\n        return this._element;\n    }\n    set element(value) {\n        this._element = value;\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.Blit;\n        this._viewport = new Viewport();\n        this._scissor = new Vector4();\n        this._offsetScale = new Vector4();\n        this._sourceTexelSize = new Vector4();\n    }\n    apply(context) {\n        this.element.materialShaderData._setInternalTexture(Command.SCREENTEXTURE_ID, this._source);\n        this.element.materialShaderData.setVector(Command.SCREENTEXTUREOFFSETSCALE_ID, this._offsetScale);\n        this.element.materialShaderData.setVector(Command.MAINTEXTURE_TEXELSIZE_ID, this._sourceTexelSize);\n        context.setViewPort(this._viewport);\n        context.setScissor(this._scissor);\n        context.setRenderTarget(this.dest, RenderClearFlag.Nothing);\n        context.drawRenderElementOne(this.element);\n    }\n}\nexport class WebGLDrawElementCMDData extends DrawElementCMDData {\n    constructor() {\n        super();\n        this.type = RenderCMDType.DrawElement;\n    }\n    setRenderelements(value) {\n        this._elemets = value;\n    }\n    apply(context) {\n        if (this._elemets.length == 1) {\n            context.drawRenderElementOne(this._elemets[0]);\n        }\n        else {\n            this._elemets.forEach(element => {\n                context.drawRenderElementOne(element);\n            });\n        }\n    }\n}\nexport class WebGLSetViewportCMD extends SetViewportCMD {\n    get viewport() {\n        return this._viewport;\n    }\n    set viewport(value) {\n        this._viewport = value;\n    }\n    get scissor() {\n        return this._scissor;\n    }\n    set scissor(value) {\n        this._scissor = value;\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeViewPort;\n        this.scissor = new Vector4();\n        this.viewport = new Viewport();\n    }\n    apply(context) {\n        context.setViewPort(this.viewport);\n        context.setScissor(this.scissor);\n    }\n}\nconst viewport = new Viewport();\nconst scissor = new Vector4();\nexport class WebGLSetRenderTargetCMD extends SetRenderTargetCMD {\n    get rt() {\n        return this._rt;\n    }\n    set rt(value) {\n        this._rt = value;\n    }\n    get clearFlag() {\n        return this._clearFlag;\n    }\n    set clearFlag(value) {\n        this._clearFlag = value;\n    }\n    get clearColorValue() {\n        return this._clearColorValue;\n    }\n    set clearColorValue(value) {\n        value.cloneTo(this._clearColorValue);\n    }\n    get clearDepthValue() {\n        return this._clearDepthValue;\n    }\n    set clearDepthValue(value) {\n        this._clearDepthValue = value;\n    }\n    get clearStencilValue() {\n        return this._clearStencilValue;\n    }\n    set clearStencilValue(value) {\n        this._clearStencilValue = value;\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeRenderTarget;\n        this._clearColorValue = new Color();\n    }\n    apply(context) {\n        context.setRenderTarget(this.rt, RenderClearFlag.Nothing);\n        context.setClearData(this.clearFlag, this.clearColorValue, this.clearDepthValue, this.clearStencilValue);\n        if (this.rt) {\n            viewport.set(0, 0, this.rt._textures[0].width, this.rt._textures[0].height);\n            scissor.setValue(0, 0, this.rt._textures[0].width, this.rt._textures[0].height);\n            context.setViewPort(viewport);\n            context.setScissor(scissor);\n        }\n    }\n}\n","import { SkinnedMeshRenderer } from \"../../../d3/core/SkinnedMeshRenderer\";\nimport { WebGLEngine } from \"../RenderDevice/WebGLEngine\";\nimport { WebGLRenderElement3D } from \"./WebGLRenderElement3D\";\nexport class WebGLSkinRenderElement3D extends WebGLRenderElement3D {\n    constructor() {\n        super();\n    }\n    drawGeometry(shaderIns) {\n        let element = this.geometry.drawParams.elements;\n        if (!this.skinnedData)\n            return;\n        this.geometry.bufferState.bind();\n        let shaderVariable = shaderIns._cacheShaerVariable[SkinnedMeshRenderer.BONES];\n        if (!shaderVariable) {\n            for (var i = 0, n = shaderIns._spriteUniformParamsMap._idata.length; i < n; i++) {\n                if (shaderIns._spriteUniformParamsMap._idata[i].dataOffset == SkinnedMeshRenderer.BONES) {\n                    shaderVariable = shaderIns._spriteUniformParamsMap._idata[i];\n                    shaderIns._cacheShaerVariable[SkinnedMeshRenderer.BONES] = shaderVariable;\n                    break;\n                }\n            }\n        }\n        for (var j = 0, m = this.geometry.drawParams.length / 2; j < m; j++) {\n            var subSkinnedDatas = this.skinnedData[j];\n            WebGLEngine.instance.uploadOneUniforms(shaderIns._renderShaderInstance, shaderVariable, subSkinnedDatas);\n            var offset = j * 2;\n            WebGLEngine.instance.getDrawContext().drawElements(this.geometry._glmode, element[offset + 1], this.geometry._glindexFormat, element[offset]);\n        }\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { Laya3DRender } from \"../../../d3/RenderObjs/Laya3DRender\";\nimport { Stat } from \"../../../utils/Stat\";\nimport { WebSceneRenderManager } from \"../../RenderModuleData/WebModuleData/3D/WebScene3DRenderManager\";\nimport { WebGLSetRenderData, WebGLSetShaderDefine } from \"../RenderDevice/WebGLRenderCMD\";\nimport { WebGLInstanceRenderBatch } from \"./WebGLInstanceRenderBatch\";\nimport { WebGLInstanceRenderElement3D } from \"./WebGLInstanceRenderElement3D\";\nimport { WebGLRender3DProcess } from \"./WebGLRender3DProcess\";\nimport { WebGLBlitQuadCMDData, WebGLDrawElementCMDData, WebGLDrawNodeCMDData, WebGLSetRenderTargetCMD, WebGLSetViewportCMD } from \"./WebGLRenderCMD/WebGL3DRenderCMD\";\nimport { WebGLRenderContext3D } from \"./WebGLRenderContext3D\";\nimport { WebGLRenderElement3D } from \"./WebGLRenderElement3D\";\nimport { WebGLSkinRenderElement3D } from \"./WebGLSkinRenderElement3D\";\nexport class WebGL3DRenderPassFactory {\n    createInstanceBatch() {\n        return new WebGLInstanceRenderBatch();\n    }\n    createSetRenderDataCMD() {\n        return new WebGLSetRenderData();\n    }\n    createSetShaderDefineCMD() {\n        return new WebGLSetShaderDefine();\n    }\n    createDrawNodeCMDData() {\n        return new WebGLDrawNodeCMDData();\n    }\n    createBlitQuadCMDData() {\n        return new WebGLBlitQuadCMDData();\n    }\n    createDrawElementCMDData() {\n        return new WebGLDrawElementCMDData();\n    }\n    createSetViewportCMD() {\n        return new WebGLSetViewportCMD();\n    }\n    createSetRenderTargetCMD() {\n        return new WebGLSetRenderTargetCMD();\n    }\n    createSceneRenderManager() {\n        return new WebSceneRenderManager();\n    }\n    createSkinRenderElement() {\n        return new WebGLSkinRenderElement3D();\n    }\n    createRenderContext3D() {\n        let context = new WebGLRenderContext3D();\n        if (Stat.enableRenderPassStatArray) {\n            context.drawRenderElementOne = context.drawRenderElementOne_StatUse;\n            context.drawRenderElementList = context.drawRenderElementList_StatUse;\n        }\n        return context;\n    }\n    createRenderElement3D() {\n        return new WebGLRenderElement3D();\n    }\n    createInstanceRenderElement3D() {\n        return WebGLInstanceRenderElement3D.create();\n    }\n    createRender3DProcess() {\n        return new WebGLRender3DProcess();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!Laya3DRender.Render3DPassFactory)\n        Laya3DRender.Render3DPassFactory = new WebGL3DRenderPassFactory();\n});\n"],"names":["Stat","Vector3","FrustumCulling","RenderClearFlag","Viewport","Vector4","FastSinglelist","Laya3DRender","CameraCullInfo","Color","DepthTextureMode","DepthPass","RenderPassStatisticsInfo","RenderableSprite3D","ReflectionProbeMode","Sprite3D","Matrix4x4","LayaGL","Sprite3DRenderDeclaration","ReflectionProbe","AmbientMode","SimpleSkinnedMeshSprite3D","Utils3D","Bounds","VolumetricGI","Transform3D","BoundsImpl","Laya","SingletonList","Config","WebGLEngine","WebDefineDatas","BatchMark","Config3D","RenderCapable","WebGLBufferState","WebGLVertexBuffer","BufferTargetType","BufferUsage","VertexMesh","BaseRenderType","MeshSprite3DShaderDeclaration","WebGLRenderGeometryElement","DrawType","ShadowCascadesMode","ShadowUtils","ShadowSliceData","Plane","ShadowCullInfo","MathUtils3D","Scene3DShaderDeclaration","ShadowMode","ShadowCasterPass","BaseCamera","Shader3D","CommandBuffer","ShadowSpotData","viewport","CameraClearFlags","RenderTargetFormat","CameraEventFlags","RenderContext3D","Scene3D","ILaya","Camera","DrawNodeCMDData","RenderCMDType","BlitQuadCMDData","Command","DrawElementCMDData","SetViewportCMD","SetRenderTargetCMD","SkinnedMeshRenderer","WebGLSetRenderData","WebGLSetShaderDefine"],"mappings":"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"}