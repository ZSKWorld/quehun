{"version":3,"file":"laya.webgpu_2D.js","sources":["../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebDefineDatas.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebGLShaderData.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebShaderPass.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebSubShader.js","../../bin/tsc/layaAir/laya/RenderDriver/RenderModuleData/WebModuleData/WebUnitRenderModuleDataFactory.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/2DRenderPass/WebGPU2DRenderCMD.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUSetRenderData.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUSetShaderDefine.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUCapable.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/ShaderCompile/WebGPUShaderDefine.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/GLSLProcess/WebGPU_GLSLCommon.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/GLSLProcess/WebGPU_GLSLMacro.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/ShaderCompile/WebGPUShaderCompileUtil.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/ShaderCompile/WebGPUShaderToken.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/ShaderCompile/WebGPUShaderCompileCode.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/ShaderCompile/WebGPUShaderCompileDef.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/GLSLProcess/WebGPU_GLSLStruct.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/GLSLProcess/WebGPU_GLSLFunction.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/GLSLProcess/WebGPU_GLSLUniform.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/GLSLProcess/WebGPU_GLSLProcess.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/Naga/NagaWASM.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUStatis/WebGPUStatis.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUStatis/WebGPUGlobal.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUUniform/WebGPUUniformBlockInfo.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUCodeGenerator.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUSampler.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUInternalTex.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/Utils/Mipmap.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/Utils/PreMultiplyAlpha.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUInternalRT.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPURenderPassHelper.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUTextureContext.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUUniform/WebGPUBufferAlone.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUUniform/WebGPUUniformBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUShaderData.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUTimingHelper.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUTimingManager.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUUniform/WebGPUBufferBlock.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUUniform/WebGPUBufferCluster.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUUniform/WebGPUBufferManager.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPURenderEngine.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPURenderCommandEncoder.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/2DRenderPass/WebGPURenderContext2D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPURenderPipelineHelper.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/2DRenderPass/WebGPURenderElement2D.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/2DRenderPass/WebGPURender2DProcess.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUBufferState.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUBundle/WebGPURenderBundle.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUBundle/WebGPURenderBundleManager.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUBundle/WebGPURenderBundleManagerSet.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUCommandUniformMap.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUIndexBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPURenderGeometry.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUShaderInstance.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUVertexBuffer.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPURenderDeviceFactory.js","../../bin/tsc/layaAir/laya/RenderDriver/WebGPUDriver/RenderDevice/WebGPUResourceRecover.js"],"sourcesContent":["export class WebDefineDatas {\n    constructor() {\n        this._mask = [];\n        this._length = 0;\n    }\n    _intersectionDefineDatas(define) {\n        var unionMask = define._mask;\n        var mask = this._mask;\n        for (var i = this._length - 1; i >= 0; i--) {\n            var value = mask[i] & unionMask[i];\n            if (value == 0 && i == this._length - 1)\n                this._length--;\n            else\n                mask[i] = value;\n        }\n    }\n    add(define) {\n        var index = define._index;\n        var size = index + 1;\n        var mask = this._mask;\n        var maskStart = this._length;\n        if (maskStart < size) {\n            (mask.length < size) && (mask.length = size);\n            for (; maskStart < index; maskStart++)\n                mask[maskStart] = 0;\n            mask[index] = define._value;\n            this._length = size;\n        }\n        else {\n            mask[index] |= define._value;\n        }\n    }\n    remove(define) {\n        var index = define._index;\n        var mask = this._mask;\n        var endIndex = this._length - 1;\n        if (index > endIndex)\n            return;\n        var newValue = mask[index] & ~define._value;\n        if (index == endIndex && newValue === 0)\n            this._length--;\n        else\n            mask[index] = newValue;\n    }\n    addDefineDatas(define) {\n        var addMask = define._mask;\n        var size = define._length;\n        var mask = this._mask;\n        var maskStart = this._length;\n        if (maskStart < size) {\n            mask.length = size;\n            for (var i = 0; i < maskStart; i++)\n                mask[i] |= addMask[i];\n            for (; i < size; i++)\n                mask[i] = addMask[i];\n            this._length = size;\n        }\n        else {\n            for (var i = 0; i < size; i++) {\n                mask[i] |= addMask[i];\n            }\n        }\n    }\n    removeDefineDatas(define) {\n        var removeMask = define._mask;\n        var mask = this._mask;\n        var endIndex = this._length - 1;\n        var i = Math.min(define._length, endIndex);\n        for (; i >= 0; i--) {\n            var newValue = mask[i] & ~removeMask[i];\n            if (i == endIndex && newValue === 0) {\n                endIndex--;\n                this._length--;\n            }\n            else {\n                mask[i] = newValue;\n            }\n        }\n    }\n    has(define) {\n        var index = define._index;\n        if (index >= this._length)\n            return false;\n        return (this._mask[index] & define._value) !== 0;\n    }\n    clear() {\n        this._length = 0;\n    }\n    cloneTo(destObject) {\n        var destMask = destObject._mask;\n        var mask = this._mask;\n        var count = this._length;\n        destMask.length = count;\n        for (var i = 0; i < count; i++)\n            destMask[i] = mask[i];\n        destObject._length = count;\n    }\n    clone() {\n        var dest = new WebDefineDatas();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy() {\n        delete this._mask;\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Resource } from \"../../../resource/Resource\";\nimport { WebGLEngine } from \"../../WebGLDriver/RenderDevice/WebGLEngine\";\nimport { ShaderData } from \"../../DriverDesign/RenderDevice/ShaderData\";\nimport { WebDefineDatas } from \"./WebDefineDatas\";\nimport { WebGLUniformBuffer } from \"../../WebGLDriver/RenderDevice/WebGLUniformBuffer\";\nimport { WebGLSubUniformBuffer } from \"../../WebGLDriver/RenderDevice/WebGLSubUniformBuffer\";\nimport { WebGLUniformBufferBase } from \"../../WebGLDriver/RenderDevice/WebGLUniformBufferBase\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Config } from \"../../../../Config\";\nexport class WebGLShaderData extends ShaderData {\n    constructor(ownerResource = null) {\n        super(ownerResource);\n        this._data = null;\n        this._defineDatas = new WebDefineDatas();\n        this._needCacheData = false;\n        this._updateCacheArray = null;\n        this._subUboBufferNumber = 0;\n        this._initData();\n    }\n    _initData() {\n        this._data = {};\n        this._updateCacheArray = {};\n        this._gammaColorMap = new Map();\n        this._uniformBuffers = new Map();\n        this._subUniformBuffers = new Map();\n        this._uniformBuffersPropertyMap = new Map();\n    }\n    createUniformBuffer(name, uniformMap) {\n        if (!Config._uniformBlock || this._uniformBuffers.has(name)) {\n            return null;\n        }\n        this._needCacheData = true;\n        let uboBuffer = new WebGLUniformBuffer(name);\n        uniformMap.forEach(uniform => {\n            uboBuffer.addUniform(uniform.id, uniform.uniformtype, uniform.arrayLength);\n        });\n        uboBuffer.create();\n        this._uniformBuffers.set(name, uboBuffer);\n        let id = Shader3D.propertyNameToID(name);\n        this._data[id] = uboBuffer;\n        uniformMap.forEach(uniform => {\n            let uniformId = uniform.id;\n            let data = this._data[uniformId];\n            if (data != null) {\n                uboBuffer.setUniformData(uniformId, uniform.uniformtype, data);\n            }\n            this._uniformBuffersPropertyMap.set(uniformId, uboBuffer);\n        });\n        return uboBuffer;\n    }\n    updateUBOBuffer(name) {\n        if (!Config._uniformBlock) {\n            return;\n        }\n        let buffer = this._uniformBuffers.get(name) || this._subUniformBuffers.get(name);\n        if (!buffer) {\n            return;\n        }\n        for (var i in this._updateCacheArray) {\n            let index = parseInt(i);\n            let ubo = this._uniformBuffersPropertyMap.get(index);\n            if (ubo) {\n                this._updateCacheArray[i].call(ubo, index, this._data[index]);\n            }\n        }\n        this._updateCacheArray = {};\n        buffer.needUpload && buffer.upload();\n    }\n    createSubUniformBuffer(name, cacheName, uniformMap) {\n        let subBuffer = this._subUniformBuffers.get(cacheName);\n        if (subBuffer) {\n            if (this._subUboBufferNumber < 2) {\n                for (var i in this._updateCacheArray) {\n                    let index = parseInt(i);\n                    let ubo = this._uniformBuffersPropertyMap.get(index);\n                    if (ubo) {\n                        this._updateCacheArray[i].call(ubo, index, this._data[index]);\n                    }\n                }\n                this._updateCacheArray = {};\n            }\n            else {\n                uniformMap.forEach((uniform, index) => {\n                    if (this._data[index] && this._updateCacheArray[index]) {\n                        this._updateCacheArray[index].call(subBuffer, index, this._data[index]);\n                    }\n                });\n            }\n            return subBuffer;\n        }\n        let engine = WebGLEngine.instance;\n        let mgr = engine.bufferMgr;\n        let uniformBuffer = new WebGLSubUniformBuffer(name, uniformMap, mgr, this);\n        this._subUboBufferNumber++;\n        this._needCacheData = true;\n        uniformBuffer.notifyGPUBufferChange();\n        this._subUniformBuffers.set(cacheName, uniformBuffer);\n        let id = Shader3D.propertyNameToID(name);\n        this._data[id] = uniformBuffer;\n        uniformMap.forEach(uniform => {\n            let uniformId = uniform.id;\n            let data = this._data[uniformId];\n            if (data != null) {\n                uniformBuffer.setUniformData(uniformId, uniform.uniformtype, data);\n            }\n            this._uniformBuffersPropertyMap.set(uniformId, uniformBuffer);\n        });\n        return uniformBuffer;\n    }\n    getData() {\n        return this._data;\n    }\n    addDefine(define) {\n        this._defineDatas.add(define);\n    }\n    addDefines(define) {\n        this._defineDatas.addDefineDatas(define);\n    }\n    removeDefine(define) {\n        this._defineDatas.remove(define);\n    }\n    removeDefines(defines) {\n        this._defineDatas.removeDefineDatas(defines);\n    }\n    hasDefine(define) {\n        return this._defineDatas.has(define);\n    }\n    clearDefine() {\n        this._defineDatas.clear();\n    }\n    clearData() {\n        for (const key in this._data) {\n            if (this._data[key] instanceof Resource) {\n                this._data[key]._removeReference();\n            }\n        }\n        this._uniformBuffersPropertyMap.clear();\n        this._uniformBuffers.forEach(buffer => {\n            buffer.destroy();\n        });\n        this._uniformBuffers.clear();\n        this._subUniformBuffers.forEach(buffer => {\n            buffer.destroy();\n        });\n        this._subUniformBuffers.clear();\n        this._data = {};\n        this._gammaColorMap.clear();\n        this.clearDefine();\n        this._needCacheData = false;\n        this._subUboBufferNumber = 0;\n    }\n    getBool(index) {\n        return this._data[index];\n    }\n    setBool(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n        }\n    }\n    getInt(index) {\n        return this._data[index];\n    }\n    setInt(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setInt;\n        }\n    }\n    getNumber(index) {\n        return this._data[index];\n    }\n    setNumber(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setFloat;\n        }\n    }\n    getVector2(index) {\n        return this._data[index];\n    }\n    setVector2(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector2;\n        }\n    }\n    getVector3(index) {\n        return this._data[index];\n    }\n    setVector3(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector3;\n        }\n    }\n    getVector(index) {\n        return this._data[index];\n    }\n    setVector(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector4;\n        }\n    }\n    getColor(index) {\n        return this._gammaColorMap.get(index);\n    }\n    setColor(index, value) {\n        if (!value)\n            return;\n        if (this._data[index]) {\n            let gammaColor = this._gammaColorMap.get(index);\n            value.cloneTo(gammaColor);\n            let linearColor = this._data[index];\n            linearColor.x = Color.gammaToLinearSpace(value.r);\n            linearColor.y = Color.gammaToLinearSpace(value.g);\n            linearColor.z = Color.gammaToLinearSpace(value.b);\n            linearColor.w = value.a;\n        }\n        else {\n            let linearColor = new Vector4();\n            linearColor.x = Color.gammaToLinearSpace(value.r);\n            linearColor.y = Color.gammaToLinearSpace(value.g);\n            linearColor.z = Color.gammaToLinearSpace(value.b);\n            linearColor.w = value.a;\n            this._data[index] = linearColor;\n            this._gammaColorMap.set(index, value.clone());\n        }\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setVector4;\n        }\n    }\n    getLinearColor(index) {\n        return this._data[index];\n    }\n    getMatrix4x4(index) {\n        return this._data[index];\n    }\n    setMatrix4x4(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else {\n            this._data[index] = value.clone();\n        }\n        if (this._needCacheData)\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setMatrix4x4;\n    }\n    getMatrix3x3(index) {\n        return this._data[index];\n    }\n    setMatrix3x3(index, value) {\n        if (this._data[index]) {\n            value.cloneTo(this._data[index]);\n        }\n        else {\n            this._data[index] = value.clone();\n        }\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setMatrix3x3;\n        }\n    }\n    getBuffer(index) {\n        return this._data[index];\n    }\n    setBuffer(index, value) {\n        this._data[index] = value;\n        if (this._needCacheData) {\n            this._updateCacheArray[index] = WebGLUniformBufferBase.prototype.setArrayBuffer;\n        }\n    }\n    setTexture(index, value) {\n        var lastValue = this._data[index];\n        if (value) {\n            let shaderDefine = WebGLEngine._texGammaDefine[index];\n            if (shaderDefine && value && value.gammaCorrection > 1) {\n                this.addDefine(shaderDefine);\n            }\n            else {\n                shaderDefine && this.removeDefine(shaderDefine);\n            }\n        }\n        this._data[index] = value;\n        lastValue && lastValue._removeReference();\n        value && value._addReference();\n    }\n    _setInternalTexture(index, value) {\n        var lastValue = this._data[index];\n        if (value) {\n            let shaderDefine = WebGLEngine._texGammaDefine[index];\n            if (shaderDefine && value && value.gammaCorrection > 1) {\n                this.addDefine(shaderDefine);\n            }\n            else {\n                shaderDefine && this.removeDefine(shaderDefine);\n            }\n        }\n        this._data[index] = value;\n    }\n    getTexture(index) {\n        return this._data[index];\n    }\n    getSourceIndex(value) {\n        for (var i in this._data) {\n            if (this._data[i] == value)\n                return Number(i);\n        }\n        return -1;\n    }\n    cloneTo(destObject) {\n        destObject.clearData();\n        var destData = destObject._data;\n        for (var k in this._data) {\n            var value = this._data[k];\n            if (value != null) {\n                if (typeof value == \"number\") {\n                    destData[k] = value;\n                }\n                else if (typeof value == \"boolean\") {\n                    destData[k] = value;\n                }\n                else if (value instanceof Vector2) {\n                    let v2 = destData[k] || (destData[k] = new Vector2());\n                    value.cloneTo(v2);\n                }\n                else if (value instanceof Vector3) {\n                    let v3 = destData[k] || (destData[k] = new Vector3());\n                    value.cloneTo(v3);\n                }\n                else if (value instanceof Vector4) {\n                    let color = this.getColor(parseInt(k));\n                    if (color) {\n                        let clonecolor = color.clone();\n                        destObject.setColor(parseInt(k), clonecolor);\n                    }\n                    else {\n                        let v4 = destData[k] || (destData[k] = new Vector4());\n                        value.cloneTo(v4);\n                    }\n                }\n                else if (value instanceof Matrix3x3) {\n                    let mat = destData[k] || (destData[k] = new Matrix3x3());\n                    value.cloneTo(mat);\n                }\n                else if (value instanceof Matrix4x4) {\n                    let mat = destData[k] || (destData[k] = new Matrix4x4());\n                    value.cloneTo(mat);\n                }\n                else if (value instanceof Resource) {\n                    destData[k] = value;\n                    value._addReference();\n                }\n            }\n        }\n        this._defineDatas.cloneTo(destObject._defineDatas);\n        this._gammaColorMap.forEach((color, index) => {\n            destObject._gammaColorMap.set(index, color.clone());\n        });\n    }\n    getDefineData() {\n        return this._defineDatas;\n    }\n    clone() {\n        var dest = new WebGLShaderData();\n        this.cloneTo(dest);\n        return dest;\n    }\n    destroy() {\n        this.clearData();\n        this._defineDatas.destroy();\n        this._defineDatas = null;\n        this._gammaColorMap.clear();\n        this._gammaColorMap = null;\n    }\n}\n","import { RenderState } from \"../Design/RenderState\";\nexport class WebShaderPass {\n    get renderState() {\n        return this._renderState;\n    }\n    set renderState(value) {\n        this._renderState = value;\n    }\n    get validDefine() {\n        return this._validDefine;\n    }\n    set validDefine(value) {\n        this._validDefine = value;\n    }\n    constructor(pass) {\n        this._cacheShaderHierarchy = 1;\n        this._cacheSharders = {};\n        this._renderState = new RenderState();\n        this._renderState.setNull();\n    }\n    _resizeCacheShaderMap(cacheMap, hierarchy, resizeLength) {\n        var end = this._cacheShaderHierarchy - 1;\n        if (hierarchy == end) {\n            for (var k in cacheMap) {\n                var shader = cacheMap[k];\n                for (var i = 0, n = resizeLength - end; i < n; i++) {\n                    if (i == n - 1)\n                        cacheMap[0] = shader;\n                    else\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\n                }\n            }\n        }\n        else {\n            ++hierarchy;\n            for (var k in cacheMap)\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\n        }\n    }\n    setCacheShader(compileDefine, shader) {\n        var cacheShaders = this._cacheSharders;\n        var mask = compileDefine._mask;\n        var endIndex = compileDefine._length - 1;\n        var maxEndIndex = this._cacheShaderHierarchy - 1;\n        for (var i = 0; i < maxEndIndex; i++) {\n            var subMask = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n        var cacheKey = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        cacheShaders[cacheKey] = shader;\n    }\n    getCacheShader(compileDefine) {\n        compileDefine._intersectionDefineDatas(this._validDefine);\n        var cacheShaders = this._cacheSharders;\n        var maskLength = compileDefine._length;\n        if (maskLength > this._cacheShaderHierarchy) {\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\n            this._cacheShaderHierarchy = maskLength;\n        }\n        var mask = compileDefine._mask;\n        var endIndex = compileDefine._length - 1;\n        var maxEndIndex = this._cacheShaderHierarchy - 1;\n        for (var i = 0; i < maxEndIndex; i++) {\n            var subMask = endIndex < i ? 0 : mask[i];\n            var subCacheShaders = cacheShaders[subMask];\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\n            cacheShaders = subCacheShaders;\n        }\n        var cacheKey = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n        var shader = cacheShaders[cacheKey];\n        return shader;\n    }\n    destroy() {\n    }\n}\n","import { NotImplementedError } from \"../../../utils/Error\";\nexport class WebSubShader {\n    setUniformMap(_uniformMap) {\n    }\n    destroy() {\n        throw new NotImplementedError();\n    }\n    addShaderPass(pass) { }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { RenderState } from \"../Design/RenderState\";\nimport { WebDefineDatas } from \"./WebDefineDatas\";\nimport { WebShaderPass } from \"./WebShaderPass\";\nimport { WebSubShader } from \"./WebSubShader\";\nexport class WebUnitRenderModuleDataFactory {\n    createSubShader() {\n        return new WebSubShader();\n    }\n    createShaderPass(pass) {\n        return new WebShaderPass(pass);\n    }\n    createRenderState() {\n        return new RenderState();\n    }\n    createDefineDatas() {\n        return new WebDefineDatas();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.unitRenderModuleDataFactory)\n        LayaGL.unitRenderModuleDataFactory = new WebUnitRenderModuleDataFactory();\n});\n","import { Color } from \"../../../maths/Color\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { Viewport } from \"../../../maths/Viewport\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { SetRendertarget2DCMD, Draw2DElementCMD, Blit2DQuadCMD } from \"../../DriverDesign/2DRenderPass/IRender2DCMD\";\nimport { RenderCMDType } from \"../../DriverDesign/RenderDevice/IRenderCMD\";\nexport class WebGPUSetRendertarget2DCMD extends SetRendertarget2DCMD {\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeRenderTarget;\n        this._clearColorValue = new Color();\n    }\n    apply(context) {\n        if (this.rt)\n            context.invertY = this.invertY;\n        else\n            context.invertY = false;\n        context.setRenderTarget(this.rt, this.clearColor, this.clearColorValue);\n    }\n}\nexport class WebGPUDraw2DElementCMD extends Draw2DElementCMD {\n    constructor() {\n        super();\n        this.type = RenderCMDType.DrawElement;\n    }\n    setRenderelements(value) {\n        this._elements = value;\n    }\n    apply(context) {\n        if (this._elements.length === 1) {\n            context.drawRenderElementOne(this._elements[0]);\n        }\n        else {\n            this._elements.forEach(element => {\n                context.drawRenderElementOne(element);\n            });\n        }\n    }\n}\nexport class WebGPUBlit2DQuadCMD extends Blit2DQuadCMD {\n    static __init__() {\n        WebGPUBlit2DQuadCMD.SCREENTEXTURE_ID = Shader3D.propertyNameToID(\"u_MainTex\");\n        WebGPUBlit2DQuadCMD.SCREENTEXTUREOFFSETSCALE_ID = Shader3D.propertyNameToID(\"u_OffsetScale\");\n        WebGPUBlit2DQuadCMD.MAINTEXTURE_TEXELSIZE_ID = Shader3D.propertyNameToID(\"u_MainTex_TexelSize\");\n    }\n    constructor() {\n        super();\n        if (!WebGPUBlit2DQuadCMD.SCREENTEXTURE_ID)\n            WebGPUBlit2DQuadCMD.__init__();\n        this.type = RenderCMDType.Blit;\n        this._viewport = new Viewport();\n        this._offsetScale = new Vector4();\n        this._sourceTexelSize = new Vector4();\n    }\n    set source(value) {\n        this._source = value;\n        if (this._source)\n            this._sourceTexelSize.setValue(1 / this._source.width, 1 / this._source.height, this._source.width, this._source.height);\n    }\n    apply(context) {\n        this.element.materialShaderData._setInternalTexture(WebGPUBlit2DQuadCMD.SCREENTEXTURE_ID, this._source);\n        this.element.materialShaderData.setVector(WebGPUBlit2DQuadCMD.SCREENTEXTUREOFFSETSCALE_ID, this._offsetScale);\n        this.element.materialShaderData.setVector(WebGPUBlit2DQuadCMD.MAINTEXTURE_TEXELSIZE_ID, this._sourceTexelSize);\n        context.drawRenderElementOne(this.element);\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { SetRenderDataCMD, RenderCMDType } from \"../../DriverDesign/RenderDevice/IRenderCMD\";\nimport { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nexport class WebGPUSetRenderData extends SetRenderDataCMD {\n    get dataType() {\n        return this._dataType;\n    }\n    set dataType(value) {\n        this._dataType = value;\n    }\n    get propertyID() {\n        return this._propertyID;\n    }\n    set propertyID(value) {\n        this._propertyID = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        switch (this.dataType) {\n            case ShaderDataType.Int:\n            case ShaderDataType.Float:\n            case ShaderDataType.Bool:\n                this.data_number = value;\n                this._value = this.data_number;\n                break;\n            case ShaderDataType.Matrix3x3:\n                !this.data_mat3 && (this.data_mat3 = new Matrix3x3());\n                value.cloneTo(this.data_mat3);\n                this._value = this.data_mat3;\n                break;\n            case ShaderDataType.Matrix4x4:\n                !this.data_mat4 && (this.data_mat4 = new Matrix4x4());\n                value.cloneTo(this.data_mat4);\n                this._value = this.data_mat4;\n                break;\n            case ShaderDataType.Color:\n                !this.data_color && (this.data_color = new Color());\n                value.cloneTo(this.data_color);\n                this._value = this.data_color;\n                break;\n            case ShaderDataType.Texture2D:\n                this._value = this.data_texture = value;\n                break;\n            case ShaderDataType.Vector2:\n                !this.data_v2 && (this.data_v2 = new Vector2());\n                value.cloneTo(this.data_v2);\n                this._value = this.data_v2;\n                break;\n            case ShaderDataType.Vector3:\n                !this.data_v3 && (this.data_v3 = new Vector3());\n                value.cloneTo(this.data_v3);\n                this._value = this.data_v3;\n                break;\n            case ShaderDataType.Vector4:\n                !this.data_v4 && (this.data_v4 = new Vector4());\n                value.cloneTo(this.data_v4);\n                this._value = this.data_v4;\n                break;\n            case ShaderDataType.Buffer:\n                this._value = this.data_buffer = value;\n                break;\n            default:\n                break;\n        }\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeData;\n    }\n    apply(context) {\n        switch (this.dataType) {\n            case ShaderDataType.Int:\n                this.dest.setInt(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Float:\n                this.dest.setNumber(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Bool:\n                this.dest.setBool(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Matrix3x3:\n                this.dest.setMatrix3x3(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Matrix4x4:\n                this.dest.setMatrix4x4(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Color:\n                this.dest.setColor(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Texture2D:\n                this.dest.setTexture(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Vector2:\n                this.dest.setVector2(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Vector3:\n                this.dest.setVector3(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Vector4:\n                this.dest.setVector(this.propertyID, this.value);\n                break;\n            case ShaderDataType.Buffer:\n                this.dest.setBuffer(this.propertyID, this.value);\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { RenderCMDType, SetShaderDefineCMD } from \"../../DriverDesign/RenderDevice/IRenderCMD\";\nexport class WebGPUSetShaderDefine extends SetShaderDefineCMD {\n    get define() {\n        return this._define;\n    }\n    set define(value) {\n        this._define = value;\n    }\n    get dest() {\n        return this._dest;\n    }\n    set dest(value) {\n        this._dest = value;\n    }\n    get add() {\n        return this._add;\n    }\n    set add(value) {\n        this._add = value;\n    }\n    constructor() {\n        super();\n        this.type = RenderCMDType.ChangeShaderDefine;\n    }\n    apply(context) {\n        if (this.add)\n            this._dest.addDefine(this.define);\n        else\n            this._dest.removeDefine(this.define);\n    }\n}\n","import { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nexport class WebGPUCapable {\n    constructor(descriptor) {\n        this.initCapable(descriptor);\n    }\n    initCapable(descriptor) {\n        this._capabilityMap = new Map();\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, true);\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint8, false);\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, true);\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, true);\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, true);\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, true);\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, true);\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, true);\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, true);\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, true);\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, true);\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, false);\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, false);\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, false);\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, false);\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, false);\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, false);\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, true);\n        this._capabilityMap.set(RenderCapable.MSAA, true);\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, false);\n        this._capabilityMap.set(RenderCapable.Texture3D, true);\n        this._capabilityMap.set(RenderCapable.Texture_HalfFloatLinearFiltering, true);\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R32G32B32A32, true);\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, true);\n        let features = descriptor.requiredFeatures;\n        for (const iterator of features) {\n            switch (iterator) {\n                case \"texture-compression-astc\":\n                    this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, true);\n                    break;\n                case \"texture-compression-bc\":\n                    this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, true);\n                    this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, true);\n                    break;\n                case \"texture-compression-etc2\":\n                    this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, true);\n                    this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, true);\n                    break;\n                case \"float32-filterable\":\n                    this._capabilityMap.set(RenderCapable.Texture_FloatLinearFiltering, true);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    getCapable(type) {\n        return this._capabilityMap.get(type);\n    }\n}\n","export class WebGPUShaderDefine {\n    static findNumberDefine(code, map) {\n        const pattern = /^\\s*#define\\s+(\\w+)\\s+([1-9]\\d*)(?=\\s*($|\\/\\/))/gm;\n        if (!map)\n            map = new Map();\n        let match;\n        while ((match = pattern.exec(code)) !== null) {\n            map.set(match[1], match[2]);\n        }\n        return map;\n    }\n}\n","export class WebGPU_GLSLCommon {\n    static replaceStringPart(str, replace, start, end) {\n        const beforePart = str.substring(0, start);\n        const afterPart = str.substring(end);\n        return beforePart + replace + afterPart;\n    }\n    static findParamInBracket(input, start, bracket = '()') {\n        let depth = 0;\n        let firstParentIndex = 0;\n        const beginBracket = bracket[0];\n        const endBracket = bracket[1];\n        const length = input.length;\n        for (let i = start; i < length; i++) {\n            if (input[i] === beginBracket) {\n                firstParentIndex = i;\n                break;\n            }\n            if (input[i] !== ' ' && input[i] !== '\\t' && input[i] !== '\\n' && input[i] !== '\\r')\n                return null;\n        }\n        let element;\n        let elements = [];\n        start = firstParentIndex;\n        let currentElementStart = firstParentIndex + 1;\n        for (let i = firstParentIndex; i < length; i++) {\n            const char = input[i];\n            if (char === beginBracket)\n                depth++;\n            else if (char === endBracket) {\n                depth--;\n                if (depth === 0) {\n                    start = i + 1;\n                    element = input.substring(currentElementStart, i).trim();\n                    if (element.length > 0)\n                        elements.push(element);\n                    break;\n                }\n            }\n            else if (char === ',' && depth === 1) {\n                element = input.substring(currentElementStart, i).trim();\n                if (element.length > 0)\n                    elements.push(element);\n                currentElementStart = i + 1;\n            }\n        }\n        const full = input.substring(firstParentIndex, start);\n        return {\n            full,\n            elements,\n            index: start\n        };\n    }\n    static replaceArgumentByFunctionCategory(code, variableName, functionNames, replacementInCategory, replacementOutOfCategory) {\n        const functionRegex = new RegExp('([\\\\w]+)\\\\s*\\\\(([^)]*)\\\\)', 'g');\n        const updatedCode = code.replace(functionRegex, (match, functionName, argsList) => {\n            let args = argsList.split(',').map((arg) => arg.trim());\n            const replacement = functionNames.includes(functionName) ? replacementInCategory : replacementOutOfCategory;\n            args = args.map((arg) => arg === variableName ? (replacement ? replacement : arg) : arg);\n            return `${functionName}(${args.join(', ')})`;\n        });\n        return updatedCode;\n    }\n    static removeSpacesInBracket(str, bracket = '()') {\n        const length = str.length;\n        const beginBracket = bracket[0];\n        const endBracket = bracket[1];\n        const _process = (index) => {\n            let result = '', i = index;\n            while (i < length) {\n                const char = str[i];\n                if (char === beginBracket) {\n                    const [inner, newIndex] = _process(i + 1);\n                    result += beginBracket + inner;\n                    i = newIndex;\n                }\n                else if (char === endBracket) {\n                    return [result, i - 1];\n                }\n                else {\n                    result += char === ' ' && str[i - 1] !== beginBracket && str[i + 1] !== endBracket ? '' : char;\n                }\n                i++;\n            }\n            return [result, i];\n        };\n        let result = '', i = 0;\n        while (i < length) {\n            if (str[i] === beginBracket) {\n                const [inner, newIndex] = _process(i + 1);\n                result += beginBracket + inner;\n                i = newIndex;\n            }\n            else {\n                result += str[i];\n            }\n            i++;\n        }\n        return result;\n    }\n}\n","import { WebGPU_GLSLCommon } from \"./WebGPU_GLSLCommon\";\nexport class WebGPU_GLSLMacro {\n    constructor(all) {\n        this.all = all;\n        this._parse();\n    }\n    _parse() {\n        let macro = this.all.replace(/^#\\s*define\\s+/, '').trim();\n        macro = WebGPU_GLSLCommon.removeSpacesInBracket(macro);\n        const index = macro.indexOf(' ');\n        if (index === -1) {\n            this.name = macro;\n        }\n        else {\n            const firstPart = macro.slice(0, index);\n            let lastPart = macro.slice(index + 1).trim();\n            if (lastPart.length === 0)\n                lastPart = undefined;\n            const paramStartIndex = firstPart.indexOf('(');\n            if (paramStartIndex !== -1) {\n                const paramEndIndex = firstPart.indexOf(')', paramStartIndex);\n                this.name = firstPart.slice(0, paramStartIndex).trim();\n                this.params = firstPart.slice(paramStartIndex + 1, paramEndIndex).split(',').map(param => param.trim());\n                this.replace = lastPart;\n            }\n            else {\n                this.name = firstPart;\n                this.replace = lastPart;\n            }\n        }\n    }\n    replaceMacros(glslCode) {\n        let match, outCode = glslCode;\n        const regex = new RegExp(`\\\\b${this.name}\\\\b`, 'g');\n        if (this.params && this.params.length > 0) {\n            while ((match = regex.exec(outCode)) !== null) {\n                const param = WebGPU_GLSLCommon.findParamInBracket(outCode, match.index + this.name.length);\n                if (param) {\n                    let replace = this.replace;\n                    for (let i = 0; i < this.params.length; i++)\n                        replace = replace.replace(new RegExp(this.params[i], 'g'), param.elements[i]);\n                    outCode = WebGPU_GLSLCommon.replaceStringPart(outCode, replace, match.index, param.index);\n                }\n            }\n        }\n        else\n            outCode = outCode.replace(regex, this.replace);\n        return outCode;\n    }\n}\n","import { WebGPU_GLSLMacro } from \"../RenderDevice/GLSLProcess/WebGPU_GLSLMacro\";\nimport { WebGPUShaderCompileCode, enumOperator } from \"./WebGPUShaderCompileCode\";\nexport class WebGPUShaderCompileUtil {\n    static checkDef(node, _defs) {\n        if (null == _defs)\n            return;\n        let arr = node.defParam;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                let str = arr[i];\n                if (\"#ifdef\" == node.name || '#ifndef' == node.name) {\n                    _defs.add(str);\n                }\n                else {\n                    while (true) {\n                        let ofs = str.indexOf(\"defined\");\n                        if (0 <= ofs) {\n                            ofs = str.indexOf(\"(\");\n                            if (0 < ofs) {\n                                let ofs2 = str.indexOf(\")\");\n                                _defs.add(str.substring(ofs + 1, ofs2).trim());\n                                str = str.substring(ofs2 + 1);\n                            }\n                            else {\n                                break;\n                            }\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    static extractMacros(code) {\n        const regex = /^\\s*#\\s*define\\s+/;\n        const lines = code.split('\\n');\n        const macros = [];\n        let currentMacro = '';\n        for (let i = 0, len = lines.length; i < len; i++) {\n            const line = lines[i].trim();\n            if (line.length === 0)\n                continue;\n            if (currentMacro.length > 0 || regex.test(line)) {\n                if (line.endsWith('\\\\')) {\n                    currentMacro += line.slice(0, -1) + ' ';\n                }\n                else {\n                    currentMacro += line;\n                    macros.push(new WebGPU_GLSLMacro(currentMacro));\n                    currentMacro = '';\n                }\n            }\n        }\n        return macros;\n    }\n    static macrosToVariable(macros) {\n        const regex = /^([_a-zA-Z][_a-zA-Z0-9]*)$/;\n        const variable = new Set();\n        for (let i = macros.length - 1; i > -1; i--) {\n            let name = macros[i].replace;\n            if (name) {\n                const ofs = name.indexOf('.');\n                if (ofs >= 0) {\n                    name = name.substring(0, ofs).trim();\n                    if (name.match(regex))\n                        variable.add(name);\n                }\n                else if (name.match(regex))\n                    variable.add(name);\n            }\n        }\n        return variable;\n    }\n    static toScript(root, def, outData) {\n        if (null == def)\n            def = {};\n        let out = this._parseChilds(root, def);\n        const macros = this.extractMacros(out);\n        const mvariable = this.macrosToVariable(macros);\n        if (outData) {\n            let st = WebGPUShaderCompileCode.compile(out);\n            let uniform = st.uniform;\n            let varying = st.varying;\n            let attribute = st.attribute;\n            let variable = st.variable;\n            if (variable) {\n                if (uniform) {\n                    for (let k in uniform) {\n                        if (variable.has(k) || mvariable.has(k)) {\n                            if (null == outData.uniform)\n                                outData.uniform = {};\n                            outData.uniform[k] = uniform[k];\n                        }\n                    }\n                }\n                if (varying) {\n                    for (let k in varying) {\n                        if (variable.has(k) || mvariable.has(k)) {\n                            if (null == outData.varying)\n                                outData.varying = {};\n                            outData.varying[k] = varying[k];\n                        }\n                    }\n                }\n                if (attribute) {\n                    for (let k in attribute) {\n                        if (variable.has(k) || mvariable.has(k)) {\n                            if (null == outData.attribute)\n                                outData.attribute = {};\n                            outData.attribute[k] = attribute[k];\n                        }\n                    }\n                }\n            }\n            outData.variable = variable;\n        }\n        out = this.removeUniform(out);\n        out = this.removeVarying(out);\n        return out;\n    }\n    static removeUniform(code) {\n        let arr = code.split(\"\\n\");\n        let isParentRemove = false;\n        let isUniformStruct = false;\n        let isModify = false;\n        for (let i = 0, len = arr.length; i < len; i++) {\n            let cstr = arr[i].trim();\n            if ('' == cstr) {\n                arr.splice(i, 1);\n                len -= 1;\n                i -= 1;\n            }\n            else if (0 == cstr.indexOf(\"uniform \")) {\n                isParentRemove = true;\n                arr.splice(i, 1);\n                len -= 1;\n                i -= 1;\n                isModify = true;\n                if (0 < cstr.indexOf(\"{\")) {\n                    isUniformStruct = true;\n                }\n            }\n            else {\n                if (isParentRemove && !isUniformStruct) {\n                    if (0 == cstr.indexOf(\"{\")) {\n                        isUniformStruct = true;\n                        arr.splice(i, 1);\n                        len -= 1;\n                        i -= 1;\n                    }\n                }\n                else if (isUniformStruct) {\n                    if (0 <= cstr.indexOf(\"}\")) {\n                        isUniformStruct = false;\n                    }\n                    arr.splice(i, 1);\n                    len -= 1;\n                    i -= 1;\n                }\n                isParentRemove = false;\n            }\n        }\n        if (isModify)\n            code = arr.join('\\n');\n        return code;\n    }\n    static removeVarying(code) {\n        let arr = code.split(\"\\n\");\n        let isModify = false;\n        for (let i = 0, len = arr.length; i < len; i++) {\n            let cstr = arr[i].trim();\n            if ('' == cstr) {\n                arr.splice(i, 1);\n                len -= 1;\n                i -= 1;\n            }\n            else if (0 == cstr.indexOf(\"varying \")) {\n                arr.splice(i, 1);\n                len -= 1;\n                i -= 1;\n                isModify = true;\n            }\n        }\n        if (isModify)\n            code = arr.join('\\n');\n        return code;\n    }\n    static checkCondition(st, def) {\n        let childs = st.childs;\n        let ret = false;\n        if (null == childs) {\n            return ret;\n        }\n        for (let i = 0, len = childs.length; i < len; i++) {\n            let o = childs[i];\n            if (enumOperator[\"&&\"] == o.operator) {\n                if (!ret) {\n                    continue;\n                }\n            }\n            else if (enumOperator[\"||\"] == o.operator) {\n                if (ret) {\n                    continue;\n                }\n            }\n            if ('defined' == o.name) {\n                try {\n                    let defName = o.parameter.childs[0].name;\n                    let b = !!def[defName];\n                    if (o.operator == enumOperator[\"!\"])\n                        b = !b;\n                    ret = b;\n                }\n                catch (err) { }\n            }\n            else {\n                if (null != o.name || null == o.operator || null != o.parameter) {\n                    if (('' == o.name || null == o.name) && null != o.parameter) {\n                        ret = this.checkCondition(o.parameter, def);\n                    }\n                    else {\n                        console.log(\"TODO:待处理判断\", o);\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n    static _parseChilds(parent, def) {\n        let childs = parent.childs;\n        let checkConditionType = 0;\n        let out = '';\n        if (null == childs)\n            return out;\n        for (let i = 0, len = childs.length; i < len; i++) {\n            let t = childs[i];\n            if (\"#ifdef\" == t.name || \"#ifndef\" == t.name || \"#if\" == t.name || \"#elif\" == t.name || \"#else\" == t.name) {\n                if (1 == checkConditionType && (\"#elif\" == t.name || \"#else\" == t.name)) {\n                    continue;\n                }\n                if (t.condition(def)) {\n                    if (\"#else\" != t.name) {\n                        checkConditionType = 1;\n                    }\n                    else {\n                        checkConditionType = 0;\n                    }\n                    out += this._parseChilds(t, def);\n                }\n                else {\n                    checkConditionType = 0;\n                }\n            }\n            else if (null != t.defParam) {\n                if ('#define' == t.name) {\n                    if (Array.isArray(t.defParam)) {\n                        let arr = t.defParam;\n                        if (1 == arr.length) {\n                            def[arr[0]] = true;\n                        }\n                        else {\n                        }\n                    }\n                    else {\n                        console.log('TODO');\n                    }\n                }\n                else if ('#undefine' == t.name) {\n                    if (Array.isArray(t.defParam)) {\n                        let arr = t.defParam;\n                        if (1 == arr.length) {\n                            delete def[arr[0]];\n                        }\n                        else {\n                        }\n                    }\n                    else {\n                        console.log('TODO');\n                    }\n                }\n                if (t.code)\n                    out += t.code + \"\\n\";\n            }\n            else {\n                if (t.code && null == t.root) {\n                    out += t.code + \"\\n\";\n                }\n            }\n        }\n        return out;\n    }\n}\n","import { WebGPUShaderCompileCode, enumDescribe, enumInOut, enumOperator } from \"./WebGPUShaderCompileCode\";\nimport { WebGPUShaderCompileUtil } from \"./WebGPUShaderCompileUtil\";\nexport class WebGPUShaderToken {\n    constructor(includefiles) {\n        this.z = 0;\n        if (includefiles) {\n            this.includefiles = includefiles;\n        }\n        else {\n            this.includefiles = [];\n        }\n    }\n    condition(def) {\n        if ('#else' == this.name)\n            return true;\n        if (null != def) {\n            if (\"#ifdef\" == this.name || \"#ifndef\" == this.name) {\n                try {\n                    let check = this.defParam[0];\n                    return (\"#ifdef\" == this.name) == !!def[check];\n                }\n                catch (err) { }\n            }\n            else {\n                if (!(this.defParam instanceof WebGPUShaderToken)) {\n                    let defParm = this.defParam.join(\" \");\n                    let parmRoot = WebGPUShaderCompileCode.compile(defParm);\n                    this.defParam = parmRoot;\n                }\n                return WebGPUShaderCompileUtil.checkCondition(this.defParam, def);\n            }\n        }\n        else if (\"#ifndef\" == this.name) {\n            return true;\n        }\n        return false;\n    }\n    addParameterArr(param, parent) {\n        if (null == this.parameterArr) {\n            this.parameterArr = [];\n        }\n        this.parameterArr.push(param);\n        param.owner = this;\n        if (parent) {\n            param.parent = parent;\n        }\n    }\n    setParameter(param, parent) {\n        this.parameter = param;\n        param.owner = this;\n        if (parent)\n            param.parent = parent;\n    }\n    addBody(body) {\n        body.setParent(this);\n    }\n    setParent(parent) {\n        if (null == parent.childs) {\n            parent.childs = [];\n        }\n        parent.childs.push(this);\n        this.z = parent.z + 1;\n        this.parent = parent;\n    }\n    _parseShaderNode(sn) {\n        let ret = '';\n        let operator = null;\n        if (null != sn.operator) {\n            operator = enumOperator[sn.operator];\n            if (!sn.operatorRight) {\n                ret += operator;\n                operator = null;\n            }\n        }\n        if (sn.type) {\n            if (null != sn.describe) {\n                ret += enumDescribe[sn.describe] + \" \";\n            }\n            if (null != sn.inOrOut) {\n                ret += enumInOut[sn.inOrOut] + \" \";\n            }\n            if (null != sn.type) {\n                ret += sn.type + \" \";\n            }\n            if (null != sn.name) {\n                ret += sn.name;\n            }\n            if (null != sn.parameter) {\n                let childs = sn.parameter.childs;\n                if (childs) {\n                    ret += '(';\n                    for (let i = 0, len = childs.length; i < len; i++) {\n                        ret += this._parseShaderNode(childs[i]);\n                    }\n                    ret += ')';\n                }\n            }\n        }\n        else if (sn.parameter) {\n            if (null != sn.name) {\n                ret += sn.name;\n            }\n            if (null != operator) {\n                ret += operator;\n                operator = null;\n            }\n            ret += '(' + this._getParameter(sn.parameter) + \")\";\n        }\n        else if (sn.parameterArr) {\n            ret += this._getParameterArr(sn, '');\n        }\n        else if (sn.name) {\n            ret += sn.name;\n        }\n        if (null != operator) {\n            ret += operator;\n        }\n        if (null != sn.childs) {\n            for (let i = 0, len = sn.childs.length; i < len; i++) {\n                ret += this._parseShaderNode(sn.childs[i]);\n            }\n        }\n        return ret;\n    }\n    _getParameter(param, isFor = false) {\n        let ret = '';\n        if (null == param) {\n            param = this.parameter;\n        }\n        if (param) {\n            if (param.childs) {\n                let arr = param.childs;\n                for (let i = 0, len = arr.length; i < len; i++) {\n                    let sn = arr[i];\n                    ret += this._parseShaderNode(sn);\n                    if (isFor && i < len - 1) {\n                        ret += ';';\n                    }\n                }\n            }\n            else {\n                ret += this._parseShaderNode(param);\n            }\n        }\n        return ret;\n    }\n    _getParameterArr(st, end = ';') {\n        let outStr = '';\n        if (null != st.type) {\n            outStr += st.type + \" \";\n        }\n        let operator;\n        if (null != st.operator && '' != end) {\n            operator = enumOperator[st.operator];\n            if (!st.operatorRight) {\n                outStr += operator;\n                operator = null;\n            }\n        }\n        let arr = st.parameterArr;\n        if (null != st.name) {\n            outStr += st.name;\n        }\n        for (let i = 0, len = arr.length; i < len; i++) {\n            outStr += \"[\" + st._getParameter(arr[i]) + \"]\";\n        }\n        if (null != operator) {\n            outStr += operator;\n        }\n        if (st.assign) {\n            if (null != st.assignLeft) {\n                outStr += enumOperator[st.assignLeft];\n            }\n            outStr += \"=\";\n        }\n        if (st.childs) {\n            outStr += st._getParameter(st);\n        }\n        return outStr + end;\n    }\n    toscript(def, out) {\n        if (null == out) {\n            out = [];\n        }\n        if (this.type) {\n            if (\"return\" == this.type) {\n                let outStr = this.type + \" \";\n                if (this.name) {\n                    outStr += this.name;\n                }\n                if (this.parameter) {\n                    outStr += \"(\" + this._getParameter() + \")\";\n                }\n                if (null != this.childs) {\n                    outStr += this._getParameter(this);\n                }\n                outStr += \";\";\n                out.push(outStr);\n            }\n            else if (this.parameter) {\n                let outStr = this.type + \" \" + this.name + \"(\" + this._getParameter() + \"){\";\n                if (null != this.describe) {\n                    outStr = enumDescribe[this.describe] + \" \" + outStr;\n                }\n                out.push(outStr);\n                if (this.childs) {\n                    for (let i = 0, len = this.childs.length; i < len; i++) {\n                        this.childs[i].toscript(def, out);\n                    }\n                }\n                out.push('}');\n            }\n            else if (this.parameterArr) {\n                out.push(this._getParameterArr(this));\n            }\n            else if (this.assign) {\n                let outStr = this.type + \" \" + this.name;\n                if (null != this.assignLeft) {\n                    outStr += enumOperator[this.assignLeft];\n                }\n                outStr += '=';\n                if (this.childs) {\n                    outStr += this._getParameter(this);\n                    outStr += ';';\n                    out.push(outStr);\n                }\n                else {\n                    console.log(\"理论上不存在这种情况！\");\n                }\n            }\n            else if (null != this.name) {\n                let outStr = '';\n                if (null != this.describe) {\n                    outStr += enumDescribe[this.describe] + \" \";\n                }\n                outStr += this.type + \" \" + this.name;\n                if (null != this.operator) {\n                    outStr += enumOperator[this.operator];\n                }\n                if ('struct' == this.type) {\n                    outStr += '{';\n                    out.push(outStr);\n                    outStr = '';\n                    if (null != this.childs) {\n                        let arr = this.childs;\n                        for (let i = 0, len = arr.length; i < len; i++) {\n                            let sn = arr[i];\n                            let outStr = this._parseShaderNode(sn);\n                            if ('' != outStr) {\n                                out.push(outStr + \";\");\n                            }\n                        }\n                    }\n                    outStr += '}';\n                    if (this.varNames) {\n                        outStr += \" \" + this.varNames.join(\",\");\n                    }\n                }\n                else {\n                    if (null != this.childs)\n                        outStr += this._getParameter(this);\n                }\n                outStr += ';';\n                out.push(outStr);\n            }\n            else {\n                out.push(this.type + \";\");\n            }\n        }\n        else if (this.parameterArr) {\n            out.push(this._getParameterArr(this));\n        }\n        else if (this.parameter) {\n            if (null != this.name) {\n                let outStr = '';\n                if (null != this.operator) {\n                    outStr += enumOperator[this.operator];\n                }\n                outStr += this.name + \"(\" + this._getParameter(null, 'for' == this.name) + \")\";\n                if (\"layout\" == this.name) {\n                    if (this.childs) {\n                        for (let i = 0, len = this.childs.length; i < len; i++) {\n                            let sn = this.childs[i];\n                            if (sn.describe == enumDescribe.uniform) {\n                                outStr += ' uniform';\n                            }\n                            else {\n                                console.log(\"TODO待处理:\", sn);\n                            }\n                        }\n                    }\n                    outStr += ';';\n                    out.push(outStr);\n                }\n                else {\n                    out.push(outStr);\n                    if (this.childs) {\n                        out.push(\"{\");\n                        for (let i = 0, len = this.childs.length; i < len; i++) {\n                            let sn = this.childs[i];\n                            sn.toscript(def, out);\n                        }\n                        out.push(\"}\");\n                    }\n                }\n            }\n        }\n        else if (this.name) {\n            if (this.describe == enumDescribe.uniform) {\n                out.push(\"uniform \" + this.name + \"{\");\n                for (let i = 0, len = this.childs.length; i < len; i++) {\n                    let sn = this.childs[i];\n                    sn.toscript(def, out);\n                }\n                let outstr = '}';\n                if (this.varNames) {\n                    outstr += \" \" + this.varNames.join(\",\");\n                }\n                outstr += ';';\n                out.push(outstr);\n            }\n            else if (this.assign) {\n                let outStr = this.name;\n                if (null != this.assignLeft) {\n                    outStr += enumOperator[this.assignLeft];\n                }\n                outStr += '=';\n                if (this.childs) {\n                    outStr += this._getParameter(this);\n                    outStr += ';';\n                    out.push(outStr);\n                }\n                else {\n                    console.log(\"理论上不存在这种情况！\");\n                }\n            }\n            else {\n                if (this.childs) {\n                    out.push(this.name + \"{\");\n                    for (let i = 0, len = this.childs.length; i < len; i++) {\n                        let sn = this.childs[i];\n                        sn.toscript(def, out);\n                    }\n                    out.push(\"}\");\n                }\n                else {\n                    if (0 > this.name.indexOf(\"#\")) {\n                        out.push(this.name + \";\");\n                    }\n                    else {\n                        out.push(this.name);\n                    }\n                }\n            }\n        }\n        else if (null != this.operator) {\n        }\n        else if (this.childs) {\n            if (null != this.parent) {\n                out.push(\"{\");\n                for (let i = 0, len = this.childs.length; i < len; i++) {\n                    let sn = this.childs[i];\n                    sn.toscript(def, out);\n                }\n                out.push(\"}\");\n            }\n            else {\n                for (let i = 0, len = this.childs.length; i < len; i++) {\n                    let sn = this.childs[i];\n                    sn.toscript(def, out);\n                }\n            }\n        }\n        else {\n        }\n        return out;\n    }\n}\n","import { WebGPUShaderDefine } from \"./WebGPUShaderDefine\";\nimport { WebGPUShaderToken } from \"./WebGPUShaderToken\";\nexport var enumInOut;\n(function (enumInOut) {\n    enumInOut[enumInOut[\"in\"] = 0] = \"in\";\n    enumInOut[enumInOut[\"out\"] = 1] = \"out\";\n    enumInOut[enumInOut[\"inout\"] = 2] = \"inout\";\n})(enumInOut || (enumInOut = {}));\nexport var enumDescribe;\n(function (enumDescribe) {\n    enumDescribe[enumDescribe[\"uniform\"] = 0] = \"uniform\";\n    enumDescribe[enumDescribe[\"varying\"] = 1] = \"varying\";\n    enumDescribe[enumDescribe[\"const\"] = 2] = \"const\";\n    enumDescribe[enumDescribe[\"mediump\"] = 3] = \"mediump\";\n    enumDescribe[enumDescribe[\"highp\"] = 4] = \"highp\";\n    enumDescribe[enumDescribe[\"lowp\"] = 5] = \"lowp\";\n    enumDescribe[enumDescribe[\"attribute\"] = 6] = \"attribute\";\n})(enumDescribe || (enumDescribe = {}));\nexport var enumOperator;\n(function (enumOperator) {\n    enumOperator[enumOperator[\"!=\"] = 0] = \"!=\";\n    enumOperator[enumOperator[\"==\"] = 1] = \"==\";\n    enumOperator[enumOperator[\"<=\"] = 2] = \"<=\";\n    enumOperator[enumOperator[\">=\"] = 3] = \">=\";\n    enumOperator[enumOperator[\"||\"] = 4] = \"||\";\n    enumOperator[enumOperator[\"&&\"] = 5] = \"&&\";\n    enumOperator[enumOperator[\">>\"] = 6] = \">>\";\n    enumOperator[enumOperator[\"<<\"] = 7] = \"<<\";\n    enumOperator[enumOperator[\"++\"] = 8] = \"++\";\n    enumOperator[enumOperator[\"^^\"] = 9] = \"^^\";\n    enumOperator[enumOperator[\"--\"] = 10] = \"--\";\n    enumOperator[enumOperator[\"!\"] = 11] = \"!\";\n    enumOperator[enumOperator[\"+\"] = 12] = \"+\";\n    enumOperator[enumOperator[\"-\"] = 13] = \"-\";\n    enumOperator[enumOperator[\"*\"] = 14] = \"*\";\n    enumOperator[enumOperator[\"/\"] = 15] = \"/\";\n    enumOperator[enumOperator[\"=\"] = 16] = \"=\";\n    enumOperator[enumOperator[\"<\"] = 17] = \"<\";\n    enumOperator[enumOperator[\">\"] = 18] = \">\";\n    enumOperator[enumOperator[\"&\"] = 19] = \"&\";\n    enumOperator[enumOperator[\"|\"] = 20] = \"|\";\n    enumOperator[enumOperator[\"^\"] = 21] = \"^\";\n    enumOperator[enumOperator[\"%\"] = 22] = \"%\";\n})(enumOperator || (enumOperator = {}));\nconst operatorArr = ['+', '-', '*', '/', '%', \"^\", \"&\", \"|\"];\nexport const boolCheck = ['<=', '>=', '!=', '==', \"&&\", \"||\", '>', '<', '!'];\nconst checkBodyName = ['if', 'for', 'while', 'layout'];\nexport const _clearCR = new RegExp(\"\\r\", \"g\");\nexport class WebGPUShaderCompileCode {\n    static compile(code) {\n        let ret = new WebGPUShaderToken();\n        code = code.replace(_clearCR, \"\");\n        code = this.removeAnnotation(code).trim();\n        this._define.clear();\n        WebGPUShaderDefine.findNumberDefine(code, this._define);\n        this._compileToTree(ret, code);\n        this._parameterNode = null;\n        this._parentNode = null;\n        this._currNode = null;\n        this._currNameNode = null;\n        this._currParame = null;\n        this._isCheckType = false;\n        this._currTmpBody = null;\n        ret.uniform = this._uniform;\n        ret.variable = this._variable;\n        ret.structs = this._struct;\n        ret.varying = this._varying;\n        ret.attribute = this._attribute;\n        if (this._struct) {\n            if (this._uniform) {\n                for (let k in this._uniform) {\n                    if (this._struct[this._uniform[k].type]) {\n                        this._uniform[k].struct = this._struct[this._uniform[k].type];\n                    }\n                }\n            }\n            if (this._varying) {\n                for (let k in this._varying) {\n                    if (this._struct[this._varying[k].type]) {\n                        this._varying[k].struct = this._struct[this._varying[k].type];\n                    }\n                }\n            }\n            if (this._attribute) {\n                for (let k in this._attribute) {\n                    if (this._struct[this._attribute[k].type]) {\n                        this._attribute[k].struct = this._struct[this._attribute[k].type];\n                    }\n                }\n            }\n        }\n        this._uniform = null;\n        this._variable = null;\n        this._struct = null;\n        this._varying = null;\n        this._attribute = null;\n        this._varUniform = null;\n        return ret;\n    }\n    static get _currNode() {\n        return this.__currNode;\n    }\n    static set _currNode(value) {\n        if (value == this.__currNode)\n            return;\n        if (null != this.__currNode) {\n            if (null != this.__currNode.name && (null == this.__currNode.type || 'return' == this.__currNode.type)) {\n                if (null == this.__currNode.parameter && this.__currNode.describe != enumDescribe.uniform) {\n                    let name = this.__currNode.name;\n                    if ('' != name && isNaN(Number(name))) {\n                        let ofs = name.indexOf(\".\");\n                        if (0 <= ofs) {\n                            name = name.substring(0, ofs).trim();\n                            if (this._varUniform && this._varUniform[name]) {\n                                name = this.__currNode.name.substring(ofs + 1).trim();\n                            }\n                        }\n                        if ('' != name) {\n                            if (null == this._variable)\n                                this._variable = new Set();\n                            this._variable.add(name);\n                        }\n                    }\n                }\n            }\n        }\n        this.__currNode = value;\n    }\n    static get isCheckType() {\n        return this._isCheckType;\n    }\n    static set isCheckType(value) {\n        if (value != this._isCheckType) {\n            if (null == this._parameterNode && value) {\n                if (this._parentNode.assign) {\n                    this._parentNode = this._parentNode.parent;\n                }\n                if ('return' == this._parentNode.type) {\n                    this._parentNode = this._parentNode.parent;\n                }\n            }\n            this._isCheckType = value;\n        }\n    }\n    static get currNode() {\n        if (null == this._currNode) {\n            if (null == this._parentNode) {\n                console.log(\"异常啦！！！\");\n            }\n            this._currNode = new WebGPUShaderToken(this._parentNode.includefiles);\n            if (this._parameterNode) {\n                this._currNode.owner = this._parameterNode.owner;\n                this._parameterNode.addBody(this._currNode);\n            }\n            else {\n                this._parentNode.addBody(this._currNode);\n            }\n        }\n        return this._currNode;\n    }\n    static updateCurrNode() {\n        if (this._parameterNode) {\n            if (this._parameterNode.childs) {\n                this._currNode = this._parameterNode.childs[this._parameterNode.childs.length - 1];\n            }\n            else\n                this._currNode = null;\n        }\n        else {\n            if (this._parentNode.childs) {\n                this._currNode = this._parentNode.childs[this._parentNode.childs.length - 1];\n            }\n            else {\n                console.log(\"这里应该有点问题！\");\n                this._currNode = null;\n            }\n        }\n    }\n    static newParameterNode(parameterType = 0) {\n        let sn = new WebGPUShaderToken(this._parentNode.includefiles);\n        if (null == this._currNameNode) {\n            if (1 == parameterType) {\n                let childs = this._parentNode.childs;\n                let pNode = childs[childs.length - 1];\n                if (pNode.parameterArr) {\n                    this._currNameNode = pNode;\n                }\n            }\n            if (null == this._currNameNode) {\n                this._currNameNode = this.nextCurrNode(true);\n                this._currNameNode.name = '';\n            }\n        }\n        if (1 == parameterType) {\n            this._currNameNode.addParameterArr(sn, this._parameterNode);\n        }\n        else {\n            this._currNameNode.setParameter(sn, this._parameterNode);\n        }\n        this._currNameNode = null;\n        this._parameterNode = sn;\n        this.updateCurrNode();\n    }\n    static isEmptyNode(node, isCheckParent = false) {\n        for (let name in node) {\n            if ('includefiles' == name || 'owner' == name || 'z' == name) {\n                continue;\n            }\n            if (isCheckParent && 'parent' == name) {\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    static nextCurrNode(isForceCreate = false) {\n        if (isForceCreate) {\n            this._currNode = null;\n            return this.currNode;\n        }\n        else {\n            if (null != this._currNode) {\n                if (this.isEmptyNode(this._currNode)) {\n                    return null;\n                }\n                this._currNode = null;\n            }\n            return null;\n        }\n    }\n    static _compileToTree(root, script) {\n        let lines = script.split(\";\");\n        this._parentNode = root;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            let text = lines[i].trim();\n            if (text.length < 1)\n                continue;\n            this._parseNode(text);\n            this._checkStructDef();\n            if (null != this._currParame) {\n                this._parseParameter();\n            }\n            this._body3Fin();\n        }\n    }\n    static _checkStructDef() {\n        let childs = this._parentNode.childs;\n        if (childs) {\n            let len = childs.length;\n            if (2 <= len) {\n                let index = len - 1;\n                let o1 = childs[index];\n                let o2 = childs[len - 2];\n                if (('struct' == o2.type || (o2.describe == enumDescribe.uniform && o2.childs)) && null == o1.name && null != o1.type) {\n                    let arr = o1.type.split(',');\n                    o2.varNames = arr;\n                    childs.splice(index, 1);\n                    if (o2.describe == enumDescribe.uniform) {\n                        if (null == this._varUniform)\n                            this._varUniform = {};\n                        for (let i = arr.length - 1; i >= 0; i--) {\n                            this._varUniform[arr[i]] = o2.name;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    static _checkTypeByString(text) {\n        let sn = this.nextCurrNode(true);\n        this.isCheckType = true;\n        let arr = text.split(\" \");\n        for (let i = 0, len = arr.length; i < len; i++) {\n            if (this.isCheckType) {\n                this._checkType(arr[i]);\n            }\n            else {\n                sn.name = arr[i];\n            }\n        }\n        this.isCheckType = false;\n    }\n    static get _isFor() {\n        if (this._parameterNode) {\n            let node = this._parameterNode.owner;\n            if (\"for\" == node.name) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _parseParameter() {\n        if (null != this._currParame) {\n            let node = this._parameterNode.owner;\n            if (this._isFor) {\n                let _parentNode = this._parentNode;\n                let _parameterNode = this._parameterNode;\n                if (null == _parameterNode.childs || 0 == _parameterNode.childs.length) {\n                    this.isCheckType = true;\n                }\n                let sn = this.nextCurrNode(true);\n                this._parameterNode = null;\n                this._parentNode = sn;\n                this._currNode = null;\n                let arr = this._currParame.split(\" \");\n                for (let i = 0, len = arr.length; i < len; i++) {\n                    this._checkBody(arr[i]);\n                }\n                this._parameterNode = _parameterNode;\n                this._parentNode = _parentNode;\n            }\n            else {\n                let isFun = false;\n                if (null != node.type && 'return' != node.type && 'else' != node.type)\n                    isFun = true;\n                let arr = this._currParame.split(',');\n                for (let i = 0, len = arr.length; i < len; i++) {\n                    let str = arr[i];\n                    if (isFun) {\n                        this._checkTypeByString(str);\n                    }\n                    else {\n                        this._checkBody2(str, false);\n                    }\n                    if (i < len - 1) {\n                        let sn = this.nextCurrNode(true);\n                        sn.type = ',';\n                        this._currNode = null;\n                    }\n                }\n            }\n        }\n        this._currParame = null;\n    }\n    static _addParam(text) {\n        if (null == this._currParame) {\n            this._currParame = text;\n        }\n        else {\n            this._currParame += ' ' + text;\n        }\n    }\n    static _checkParameter(text) {\n        text = text.trim();\n        if ('' == text) {\n            if (this._isFor)\n                this._addParam(text);\n            return;\n        }\n        if (this.isCheckType) {\n            this._checkType(text);\n            return;\n        }\n        let ofs = text.indexOf(\"(\");\n        if (0 <= ofs) {\n            this._checkParameter(text.substring(0, ofs));\n            this._parseParameter();\n            this.newParameterNode();\n            text = text.substring(ofs + 1);\n            this._checkParameter(text);\n        }\n        else {\n            let ofs = text.indexOf(\"[\");\n            if (0 <= ofs) {\n                this._checkParameter(text.substring(0, ofs));\n                this._parseParameter();\n                this.newParameterNode(1);\n                text = text.substring(ofs + 1);\n                this._checkParameter(text);\n            }\n            else {\n                ofs = text.indexOf(\")\");\n                if (0 > ofs) {\n                    ofs = text.indexOf(\"]\");\n                }\n                if (0 <= ofs) {\n                    this._checkParameter(text.substring(0, ofs));\n                    this._parseParameter();\n                    let owner = this._parameterNode.owner;\n                    if (owner) {\n                        let obj = null;\n                        if (owner.describe == enumDescribe.uniform) {\n                            obj = this._uniform;\n                        }\n                        else if (owner.describe == enumDescribe.attribute) {\n                            obj = this._attribute;\n                        }\n                        else if (owner.describe == enumDescribe.varying) {\n                            obj = this._varying;\n                        }\n                        if (null != obj) {\n                            try {\n                                let str = this._parameterNode.childs[0].type;\n                                if (this._define.has(str))\n                                    str = this._define.get(str);\n                                const num = Number(str);\n                                if (!isNaN(num) && obj[owner.name]) {\n                                    if (null == obj[owner.name].length)\n                                        obj[owner.name].length = [];\n                                    obj[owner.name].length.push(num);\n                                }\n                            }\n                            catch (err) { }\n                        }\n                    }\n                    this._parameterNode = this._parameterNode.parent;\n                    this.updateCurrNode();\n                    text = text.substring(ofs + 1);\n                    this._currNameNode = null;\n                    if (this.currNode && null != this.currNode.parameter && null == this._parameterNode && 0 <= checkBodyName.indexOf(this.currNode.name)) {\n                        this._isCheckBody3 = true;\n                    }\n                    this._checkBody(text);\n                }\n                else {\n                    this._addParam(text);\n                }\n            }\n        }\n    }\n    static _body3Fin() {\n        let arr = this._currTmpBody;\n        this._currTmpBody = null;\n        this._isCheckBody3 = false;\n        if (arr) {\n            if (this._currNode && 0 <= checkBodyName.indexOf(this._currNode.name)) {\n                this._parentNode = this._currNode;\n                this._currNode = null;\n            }\n            else if (this._parentNode && 0 <= checkBodyName.indexOf(this._parentNode.name)) {\n                this._currNode = null;\n            }\n            else {\n                console.log(\"理论上不应该进入这里，待查！\");\n                this._currNode = null;\n                this._parentNode = this.currNode;\n                this._currNode = null;\n            }\n            this.isCheckType = true;\n            for (let i = 0, len = arr.length; i < len; i++) {\n                this._checkBody(arr[i]);\n            }\n            this._parentNode = this._parentNode.parent;\n            this.nextCurrNode();\n            this.isCheckType = true;\n        }\n    }\n    static _checkBody3(text) {\n        if (this._isCheckBody3) {\n            if (0 > text.indexOf(\"{\")) {\n                if (null == this._currTmpBody) {\n                    this._currTmpBody = [];\n                }\n                this._currTmpBody.push(text);\n                return true;\n            }\n            else if (null != this._currTmpBody) {\n                console.log(\"理论上不应该会走到这里，如果到这里，待检查！\", this._currTmpBody);\n                this._isCheckBody3 = false;\n                let arr = this._currTmpBody;\n                this._currTmpBody = null;\n                for (let i = 0, len = arr.length; i < len; i++) {\n                    this._checkBody(arr[i]);\n                }\n            }\n            else {\n                this._isCheckBody3 = false;\n            }\n        }\n        return false;\n    }\n    static _checkBody(text) {\n        text = text.trim();\n        if ('' == text)\n            return;\n        if (this._checkBody3(text)) {\n            return;\n        }\n        if (this.isCheckType) {\n            this._checkType(text);\n            return;\n        }\n        if (null != this._parameterNode) {\n            this._checkParameter(text);\n            return;\n        }\n        if (this._checkOperator(text))\n            return;\n        let ofs = text.indexOf(\"=\");\n        if (0 > ofs) {\n            ofs = text.indexOf(\"(\");\n            if (0 > ofs) {\n                ofs = text.indexOf(\"[\");\n                if (0 > ofs) {\n                    ofs = text.indexOf(\"{\");\n                    if (0 <= ofs) {\n                        let cstr = text.substring(0, ofs);\n                        if ('' != cstr) {\n                            this._setNodeName(cstr);\n                        }\n                        else if (null != this._currNode.type && null == this._currNode.name) {\n                            this._currNode.name = this._currNode.type;\n                            delete this._currNode.type;\n                        }\n                        this._parentNode = this.currNode;\n                        text = text.substring(ofs + 1);\n                        this.isCheckType = true;\n                        this._currNode = null;\n                        this._checkBody(text);\n                    }\n                    else {\n                        ofs = text.indexOf(\"}\");\n                        if (0 <= ofs) {\n                            this._childFin(ofs, text);\n                        }\n                        else {\n                            ofs = text.indexOf(\",\");\n                            if (0 <= ofs) {\n                                this._checkBody(text.substring(0, ofs));\n                                this.isCheckType = true;\n                                this.updateCurrNode();\n                                let typeNode = this._currNode;\n                                if (null == typeNode.type) {\n                                    console.log(\"理论上不应该出现这个情况！\", text);\n                                }\n                                else {\n                                    let sn = this.nextCurrNode(true);\n                                    sn.type = typeNode.type;\n                                    if (null != typeNode.describe) {\n                                        sn.describe = typeNode.describe;\n                                    }\n                                }\n                                this.isCheckType = false;\n                                this._checkBody(text.substring(ofs + 1));\n                            }\n                            else {\n                                if (!this._splitTextCheck(text, \"?\")) {\n                                    if (!this._splitTextCheck(text, \":\")) {\n                                        this._checkBody2(text);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    let cstr = text.substring(0, ofs);\n                    this._setNodeName(cstr);\n                    this.newParameterNode(1);\n                    this._checkParameter(text.substring(ofs + 1));\n                }\n            }\n            else {\n                let cstr = text.substring(0, ofs).trim();\n                if (null == this._currNode || null == this._currNode.name || '' != cstr) {\n                    this._setNodeName(cstr);\n                }\n                else if (null != this._currNode && this._currNode.assign) {\n                    this._setNodeName(cstr);\n                }\n                this.newParameterNode();\n                this._checkParameter(text.substring(ofs + 1));\n                return;\n            }\n        }\n        else {\n            this._checkEqual(text, ofs);\n        }\n    }\n    static _splitTextCheck(text, cstr, fun) {\n        if (null == fun)\n            fun = this._checkBody;\n        let ofs = text.indexOf(cstr);\n        if (0 <= ofs) {\n            fun.call(this, text.substring(0, ofs));\n            let sn = this.nextCurrNode(true);\n            sn.type = cstr;\n            this._currNameNode = sn;\n            this._currNode = null;\n            fun.call(this, text.substring(ofs + cstr.length));\n            return true;\n        }\n        return false;\n    }\n    static _childFin(ofs, text) {\n        let cstr = text.substring(0, ofs);\n        this._checkBody(cstr);\n        if (\"struct\" == this._parentNode.type) {\n            if (!this._struct)\n                this._struct = {};\n            this._struct[this._parentNode.name] = this._parentNode;\n        }\n        let childs = this._parentNode.childs;\n        if (childs) {\n            for (let i = childs.length - 1; i >= 0; i--) {\n                let o = childs[i];\n                if (this.isEmptyNode(o, true)) {\n                    childs.splice(i, 1);\n                }\n            }\n        }\n        this._parentNode = this._parentNode.parent;\n        this.nextCurrNode();\n        text = text.substring(ofs + 1);\n        this.isCheckType = true;\n        if ('' != text) {\n            this.nextCurrNode();\n            this._checkBody(text);\n        }\n    }\n    static _checkType(text) {\n        if ('' == text)\n            return;\n        let node = this.currNode;\n        let inout = enumInOut[text];\n        if (undefined != inout && isNaN(Number(text))) {\n            node.inOrOut = inout;\n        }\n        else {\n            let describe = enumDescribe[text];\n            if (undefined != describe && isNaN(Number(text))) {\n                node.describe = describe;\n            }\n            else {\n                let ofs = text.indexOf(\"}\");\n                if (0 <= ofs) {\n                    this._childFin(ofs, text);\n                    return;\n                }\n                ofs = text.indexOf(\"(\");\n                if (0 > ofs) {\n                    ofs = text.indexOf(\"[\");\n                }\n                if (0 <= ofs) {\n                    this.isCheckType = false;\n                    this._checkBody(text);\n                }\n                else {\n                    ofs = text.indexOf(\"=\");\n                    if (0 <= ofs) {\n                        this._checkEqual(text, ofs);\n                    }\n                    else {\n                        ofs = text.indexOf(\"{\");\n                        if (0 <= ofs) {\n                            this.isCheckType = false;\n                            this._checkBody(text);\n                        }\n                        else {\n                            node.type = text;\n                            if ('return' == text) {\n                                this._parentNode = node;\n                                this.nextCurrNode();\n                            }\n                            this.isCheckType = false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    static _checkEqual(text, ofs) {\n        this.isCheckType = false;\n        if (0 == ofs) {\n            let cstr = text.substring(0, 2);\n            if (this._checkOperator(cstr)) {\n                this._checkBody(text.substring(2));\n                return;\n            }\n        }\n        let cstr = text.substring(0, ofs);\n        let len = cstr.length;\n        if (0 < len) {\n            let cstr2 = cstr.substring(len - 2);\n            let operator = enumOperator[cstr2];\n            if (null != operator && isNaN(Number(cstr2))) {\n                cstr2 = cstr.substring(0, cstr.length - 2).trim();\n                if ('' != cstr2) {\n                    this._setNodeName(cstr2);\n                }\n                this._checkOperator(\"=\");\n                this.currNode.assignLeft = operator;\n                this._checkBody(text.substring(ofs + 1));\n                return;\n            }\n            cstr2 = cstr.substring(len - 1);\n            let cstr3 = cstr2 + \"=\";\n            operator = enumOperator[cstr3];\n            if (null != operator && isNaN(Number(cstr3))) {\n                this._checkBody(cstr.substring(0, cstr.length - 1).trim());\n                this._checkBody(cstr3);\n                this._checkBody(text.substring(ofs + 1));\n                return;\n            }\n            operator = enumOperator[cstr2];\n            if (null != operator && isNaN(Number(cstr2))) {\n                cstr2 = cstr.substring(0, cstr.length - 1).trim();\n                if ('' != cstr2) {\n                    this._setNodeName(cstr2);\n                }\n                this._checkOperator(\"=\");\n                this.currNode.assignLeft = operator;\n                this._checkBody(text.substring(ofs + 1));\n                return;\n            }\n        }\n        this._setNodeName(cstr);\n        cstr = text.substring(ofs, ofs + 2);\n        if (this._checkOperator(cstr)) {\n            ofs += 1;\n        }\n        else {\n            this._checkOperator(\"=\");\n        }\n        this._checkBody(text.substring(ofs + 1));\n    }\n    static _setNodeName(value) {\n        value = value.trim();\n        let node = this.currNode;\n        if (null != node.name) {\n            this._checkBody2(value, false);\n            return;\n        }\n        if ('' == value && null != node.type) {\n            this._checkBody2(node.type, false);\n            delete node.type;\n        }\n        else {\n            this._checkBody2(value);\n        }\n    }\n    static _checkBody2(text, isCheckEmpty = true) {\n        text = text.trim();\n        if ('' == text && isCheckEmpty)\n            return;\n        let ofs;\n        let pstr;\n        if ('' != text) {\n            for (let k in enumOperator) {\n                if (isNaN(Number(k))) {\n                    let num = text.indexOf(k);\n                    if (0 <= num) {\n                        if (null == ofs || ofs > num) {\n                            ofs = num;\n                            pstr = k;\n                        }\n                    }\n                }\n            }\n        }\n        if (null != ofs) {\n            this._checkBody2(text.substring(0, ofs));\n            this._checkOperator(text.substring(ofs, ofs + pstr.length));\n            this._checkBody2(text.substring(ofs + pstr.length));\n        }\n        else {\n            if (!this._splitTextCheck(text, \"?\", this._checkBody2)) {\n                if (!this._splitTextCheck(text, \":\", this._checkBody2)) {\n                    let sn = this.currNode;\n                    if (null != sn.name) {\n                        sn = this.nextCurrNode(true);\n                    }\n                    sn.name = text;\n                    this._currNameNode = sn;\n                    if (this._parentNode) {\n                        let obj = null;\n                        if (this._parentNode.describe == enumDescribe.uniform) {\n                            if (null == this._uniform)\n                                this._uniform = {};\n                            obj = this._uniform;\n                        }\n                        else if (this._parentNode.describe == enumDescribe.varying) {\n                            if (null == this._varying)\n                                this._varying = {};\n                            obj = this._varying;\n                        }\n                        else if (this._parentNode.describe == enumDescribe.attribute) {\n                            if (null == this._attribute)\n                                this._attribute = {};\n                            obj = this._attribute;\n                        }\n                        if (null != obj) {\n                            obj[sn.name] = {\n                                type: sn.type,\n                                struct: this._parentNode,\n                                blockName: this._parentNode.name\n                            };\n                        }\n                    }\n                    if (sn.describe == enumDescribe.uniform) {\n                        if (null == this._uniform)\n                            this._uniform = {};\n                        this._uniform[sn.name] = { type: sn.type };\n                    }\n                    else if (sn.describe == enumDescribe.attribute) {\n                        if (null == this._attribute)\n                            this._attribute = {};\n                        this._attribute[sn.name] = { type: sn.type };\n                    }\n                    else if (sn.describe == enumDescribe.varying) {\n                        if (null == this._varying)\n                            this._varying = {};\n                        this._varying[sn.name] = { type: sn.type };\n                    }\n                }\n            }\n        }\n    }\n    static _checkOperator(text) {\n        let operator = enumOperator[text];\n        if (undefined != operator && isNaN(Number(text))) {\n            let sn = this.currNode;\n            if ('=' == text) {\n                sn.assign = true;\n                if (null == sn.name && null != sn.type) {\n                    this._checkBody2(sn.type, false);\n                    delete sn.type;\n                }\n                this._parentNode = sn;\n            }\n            else {\n                if (null != sn.name || null != sn.operator) {\n                    sn = this.nextCurrNode(true);\n                }\n                sn.operator = operator;\n                this._currNameNode = sn;\n                if (null != sn.name) {\n                    sn.operatorRight = true;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    static _parseNode(text) {\n        if ('' == text)\n            return;\n        let ofs = text.indexOf(\"#\");\n        if (0 > ofs) {\n            text = text.split(\"\\n\").join(\" \").split(\"\\t\").join(\" \");\n            if (0 == text.indexOf('precision')) {\n                let sn = new WebGPUShaderToken(this._parentNode.includefiles);\n                sn.name = text;\n                this._parentNode.addBody(sn);\n                return;\n            }\n            let arr = text.split(\" \");\n            if (!this._isFor)\n                this.isCheckType = true;\n            this.nextCurrNode();\n            for (let i = 0, len = arr.length; i < len; i++) {\n                text = arr[i];\n                if ('' == text)\n                    continue;\n                this._checkBody(text);\n            }\n        }\n        else {\n            this._parseNode(text.substring(0, ofs));\n            let def = text.substring(ofs);\n            ofs = def.indexOf(\"\\n\");\n            text = null;\n            if (0 < ofs) {\n                text = def.substring(ofs + 1);\n                def = def.substring(0, ofs);\n            }\n            let sn = new WebGPUShaderToken(this._parentNode.includefiles);\n            sn.name = def;\n            this._parentNode.addBody(sn);\n            if (null != text) {\n                this._parseNode(text);\n            }\n        }\n    }\n    static removeAnnotation(text) {\n        while (true) {\n            let i = text.indexOf(\"//\");\n            if (0 > i) {\n                break;\n            }\n            else {\n                let num = text.indexOf('\\n', i);\n                if (0 < num) {\n                    text = text.substring(0, i) + text.substring(num);\n                }\n                else {\n                    text = text.substring(0, i);\n                }\n            }\n        }\n        while (true) {\n            let i = text.indexOf(\"/*\");\n            if (0 > i) {\n                break;\n            }\n            else {\n                let num = text.indexOf(\"*/\", i);\n                if (0 < num) {\n                    text = text.substring(0, i) + text.substring(num + 2);\n                }\n                else {\n                    text = text.substring(0, i);\n                }\n            }\n        }\n        return text;\n    }\n}\nWebGPUShaderCompileCode._isCheckType = false;\nWebGPUShaderCompileCode._define = new Map();\n","import { _clearCR } from \"./WebGPUShaderCompileCode\";\nimport { WebGPUShaderCompileUtil } from \"./WebGPUShaderCompileUtil\";\nimport { WebGPUShaderToken } from \"./WebGPUShaderToken\";\nexport class WebGPUShaderCompileDef {\n    static compile(code, defs) {\n        code = code.replace(_clearCR, \"\");\n        this._defs = defs;\n        let st = new WebGPUShaderToken();\n        this._compileToTree(st, code);\n        this._parentNode = null;\n        this._defs = null;\n        this._currNode = null;\n        return st;\n    }\n    static isEmptyNode(node) {\n        for (let name in node) {\n            if ('includefiles' == name || 'owner' == name || 'z' == name) {\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    static nextCurrNode(isForceCreate = false) {\n        if (isForceCreate) {\n            this._currNode = null;\n            return this.currNode;\n        }\n        else {\n            if (null != this._currNode) {\n                if (this.isEmptyNode(this._currNode)) {\n                    return null;\n                }\n                this._currNode = null;\n            }\n            return null;\n        }\n    }\n    static get currNode() {\n        if (null == this._currNode) {\n            this._currNode = new WebGPUShaderToken(this._parentNode.includefiles);\n            this._parentNode.addBody(this._currNode);\n        }\n        return this._currNode;\n    }\n    static _compileToTree(parent, code) {\n        this._parentNode = parent;\n        let lines = code.split(\"\\n\");\n        for (let i = 0, len = lines.length; i < len; i++) {\n            let text = lines[i];\n            if (text.length < 1)\n                continue;\n            let ofs = text.indexOf(\"//\");\n            if (0 < ofs) {\n                this._parseNode(text.substring(0, ofs));\n                this._parseNode(text.substring(ofs));\n            }\n            else {\n                this._parseNode(text);\n            }\n        }\n    }\n    static _parseNode(text) {\n        text = text.split(\"\\t\").join(\" \").trim();\n        if (text.indexOf(\"#\") != 0) {\n            if (null == this.currNode.code) {\n                this.currNode.code = text;\n            }\n            else {\n                this.currNode.code += '\\n' + text;\n            }\n        }\n        else {\n            let arr = text.split(\" \");\n            let name = arr.shift();\n            if (\"#endif\" == name) {\n                this._parentNode = this._parentNode.parent;\n                this._currNode = null;\n                return;\n            }\n            let node;\n            switch (name) {\n                case '#ifdef':\n                case \"#ifndef\":\n                case \"#if\":\n                    node = this.nextCurrNode(true);\n                    node.code = text;\n                    node.name = name;\n                    node.defParam = arr;\n                    this._parentNode = node;\n                    this._currNode = null;\n                    WebGPUShaderCompileUtil.checkDef(node, this._defs);\n                    break;\n                case \"#elif\":\n                case \"#else\":\n                    this._parentNode = this._parentNode.parent;\n                    node = this.nextCurrNode(true);\n                    node.code = text;\n                    node.name = name;\n                    node.defParam = arr;\n                    this._parentNode = node;\n                    this._currNode = null;\n                    if ('#elif' == name)\n                        WebGPUShaderCompileUtil.checkDef(node, this._defs);\n                    break;\n                case \"#include\":\n                    break;\n                default:\n                    node = this.nextCurrNode(true);\n                    node.code = text;\n                    node.name = name;\n                    node.defParam = arr;\n                    this._currNode = null;\n                    break;\n            }\n        }\n    }\n}\n",";\nexport class WebGPU_GLSLStruct {\n    constructor(all) {\n        this.fields = [];\n        this.all = all;\n        this._parse(all);\n    }\n    _parse(all) {\n        const headRegex = /struct\\s+(\\w+)\\s*\\{/;\n        const fieldRegex = /((lowp|mediump|highp)\\s+)?([\\w]+)\\s+([\\w]+)\\s*(\\[\\d*\\])?;/g;\n        const headerMatch = headRegex.exec(all);\n        this.name = headerMatch[1];\n        let match;\n        while ((match = fieldRegex.exec(all)) !== null) {\n            const [, precision, , type, name, array] = match;\n            const isArray = array !== undefined;\n            let arrayLength = undefined;\n            if (isArray)\n                arrayLength = parseInt(array.replace(/\\D/g, ''));\n            this.fields.push({\n                name,\n                type,\n                precision,\n                isArray,\n                arrayLength\n            });\n        }\n    }\n    getArrayField(name, isArray = false) {\n        for (let i = this.fields.length - 1; i > -1; i--)\n            if (this.fields[i].name === name && this.fields[i].isArray === isArray)\n                return this.fields[i];\n        return undefined;\n    }\n}\n","import { WebGPU_GLSLCommon } from \"./WebGPU_GLSLCommon\";\nconst notPutToFuncCall = [\n    \"int\", \"float\", \"bool\", \"vec2\", \"vec3\", \"vec4\",\n    \"bvec2\", \"bvec3\", \"bvec4\", \"ivec2\", \"ivec3\", \"ivec4\",\n    \"hvec2\", \"hvec3\", \"hvec4\", \"fvec2\", \"fvec3\", \"fvec4\",\n    \"mat2\", \"mat3\", \"mat4\", \"layout\",\n    \"if\", \"else\", \"for\", \"while\", \"do\", \"switch\",\n    \"radians\", \"degrees\", \"sin\", \"cos\", \"tan\",\n    \"asin\", \"acos\", \"atan\", \"sinh\", \"cosh\",\n    \"tanh\", \"asinh\", \"acosh\", \"atanh\",\n    \"pow\", \"exp\", \"log\", \"exp2\", \"log2\",\n    \"sqrt\", \"inversesqrt\",\n    \"abs\", \"sign\", \"floor\", \"trunc\", \"round\",\n    \"roundEven\", \"ceil\", \"fract\", \"mod\", \"modf\",\n    \"min\", \"max\", \"clamp\", \"mix\", \"step\",\n    \"smoothstep\", \"isnan\", \"isinf\", \"floatBitsToInt\",\n    \"floatBitsToUint\", \"intBitsToFloat\", \"uintBitsToFloat\",\n    \"length\", \"distance\", \"dot\", \"cross\",\n    \"normalize\", \"faceforward\", \"reflect\",\n    \"refract\",\n    \"matrixCompMult\", \"outerProduct\", \"determinant\",\n    \"lessThan\", \"lessThanEqual\", \"greaterThan\",\n    \"greaterThanEqual\", \"equal\", \"notEqual\",\n    \"any\", \"all\", \"not\",\n    \"texture\", \"texture2D\", \"textureSize\", \"textureProj\",\n    \"textureLod\", \"textureOffset\", \"texelFetch\",\n    \"texelFetchOffset\", \"textureProjOffset\",\n    \"textureLodOffset\", \"textureProjLod\",\n    \"textureProjLodOffset\", \"textureGrad\",\n    \"textureGradOffset\", \"textureProjGrad\",\n    \"textureProjGradOffset\"\n];\nexport class WebGPU_GLSLFunction {\n    constructor(all) {\n        this.params = [];\n        this.calls = [];\n        this.samplerProcessed = false;\n        this.all = all;\n        this._getHeadAndBody();\n        this._parse();\n    }\n    _getHeadAndBody() {\n        const all = this.all;\n        for (let i = 0, len = all.length; i < len; i++) {\n            if (all[i] !== '{')\n                continue;\n            this.head = all.substring(0, i);\n            this.body = all.substring(i);\n            break;\n        }\n        this.head = this.head.replace(/\\n/g, '').trim();\n        this.body = this.body.replace(/^\\s*[\\r\\n]/gm, '');\n    }\n    _parse() {\n        const headRegex = /((lowp|mediump|highp)\\s+)?(\\w+)\\s+(\\w+)\\s*\\((.*?)\\)/;\n        const paramRegex = /((lowp|mediump|highp)\\s+)?((in|out|inout|const)\\s+)?([\\w]+)\\s+([\\w]+)\\s*(\\[\\d*\\])?/g;\n        const headMatch = this.head.match(headRegex);\n        if (headMatch) {\n            this.precision = headMatch[1] ? headMatch[1].trim() : undefined;\n            this.return = headMatch[3].trim();\n            this.name = headMatch[4].trim();\n            const paramsStr = headMatch[5];\n            let paramMatch;\n            while ((paramMatch = paramRegex.exec(paramsStr)) !== null) {\n                const [, precision, , inout, , type, name, array] = paramMatch;\n                const isStruct = !WebGPU_GLSLFunction.variableType.includes(type);\n                const isArray = array !== undefined;\n                let arrayLength = undefined;\n                if (isArray)\n                    arrayLength = parseInt(array.replace(/\\D/g, ''));\n                this.params.push({\n                    name,\n                    type,\n                    inout,\n                    precision,\n                    isArray,\n                    arrayLength,\n                    isStruct\n                });\n            }\n        }\n        this._findFunctionCalls(this.body);\n        this.head = `${this.return} ${this.name}(`;\n        this.head += this.params.map(param => {\n            let str = '';\n            if (param.inout)\n                str += `${param.inout} `;\n            str += `${param.type} ${param.name}`;\n            if (param.isArray)\n                str += `[${param.arrayLength}]`;\n            return str;\n        }).join(', ');\n        this.head += ')';\n    }\n    _findFunctionCalls(glslCode) {\n        const regex = /(\\b\\w+\\b)\\s*\\(([^()]*\\([^()]*\\)[^()]*)*([^()]*)\\)/gs;\n        let matches;\n        while ((matches = regex.exec(glslCode)) !== null) {\n            const name = matches[1];\n            const args = matches[0].slice(name.length).trim();\n            if (!notPutToFuncCall.includes(name)) {\n                const param = WebGPU_GLSLCommon.findParamInBracket(args, 0);\n                if (param) {\n                    this.calls.push({\n                        name,\n                        params: param.elements\n                    });\n                }\n            }\n            if (args.includes('('))\n                this._findFunctionCalls(args);\n        }\n    }\n    processSampler(textureNames) {\n        if (!this.samplerProcessed) {\n            this.samplerProcessed = true;\n            this.samplerParams = [];\n            this.samplerBody = this.body;\n            for (let i = 0, len = this.params.length; i < len; i++) {\n                const param = this.params[i];\n                if (param.type.includes('sampler')) {\n                    let samplerType = 'sampler';\n                    let textureType = param.type.replace('sampler', 'texture');\n                    if (textureType === 'texture2DShadow') {\n                        textureType = 'texture2D';\n                        samplerType = 'samplerShadow';\n                    }\n                    const textureName = param.name + '_texture';\n                    const samplerName = param.name + '_sampler';\n                    const textureParam = {\n                        name: textureName,\n                        type: textureType,\n                        inout: param.inout,\n                        precision: param.precision,\n                        isArray: param.isArray,\n                        arrayLength: param.arrayLength,\n                        isStruct: param.isStruct\n                    };\n                    const samplerParam = {\n                        name: samplerName,\n                        type: samplerType,\n                        inout: param.inout,\n                        precision: param.precision,\n                        isArray: param.isArray,\n                        arrayLength: param.arrayLength,\n                        isStruct: param.isStruct\n                    };\n                    this.samplerParams.push(textureParam, samplerParam);\n                    let functionNames;\n                    let replacementInCategory;\n                    let replacementOutOfCategory;\n                    if (param.type === 'sampler2D') {\n                        functionNames = ['texture', 'texture2D'];\n                        replacementInCategory = `sampler2D(${textureName}, ${samplerName})`;\n                    }\n                    else if (param.type === 'samplerCube') {\n                        functionNames = ['texture', 'textureCube'];\n                        replacementInCategory = `samplerCube(${textureName}, ${samplerName})`;\n                    }\n                    else if (param.type === 'sampler2DShadow') {\n                        functionNames = ['textureLod'];\n                        replacementInCategory = `sampler2DShadow(${textureName}, ${samplerName})`;\n                    }\n                    replacementOutOfCategory = `${textureName}, ${samplerName}`;\n                    this.samplerBody = WebGPU_GLSLCommon.replaceArgumentByFunctionCategory(this.samplerBody, param.name, functionNames, replacementInCategory, replacementOutOfCategory);\n                }\n                else\n                    this.samplerParams.push(param);\n            }\n            const functionNames = ['texture', 'texture2D', 'textureCube', 'textureLod'];\n            for (let i = 0; i < textureNames.length; i++) {\n                const replacementInCategory = null;\n                const replacementOutOfCategory = `${textureNames[i]}Texture, ${textureNames[i]}Sampler`;\n                this.samplerBody = WebGPU_GLSLCommon.replaceArgumentByFunctionCategory(this.samplerBody, textureNames[i], functionNames, replacementInCategory, replacementOutOfCategory);\n            }\n            this.samplerOutput = `${this.return} ${this.name}(`;\n            this.samplerOutput += this.samplerParams.map(param => {\n                let str = '';\n                if (param.inout)\n                    str += `${param.inout}`;\n                str += `${param.type} ${param.name}`;\n                if (param.isArray)\n                    str += `[${param.arrayLength}]`;\n                return str;\n            }).join(', ');\n            this.samplerOutput += ')\\n';\n            this.samplerOutput += this.samplerBody;\n        }\n    }\n}\nWebGPU_GLSLFunction.variableType = ['float', 'int', 'void', 'bool', 'vec2', 'vec3', 'vec4', 'mat2', 'mat3', 'mat4'];\n",";\nexport class WebGPU_GLSLUniform {\n    constructor(all) {\n        this.all = all;\n        this._parse(all);\n    }\n    _parse(all) {\n        const fieldRegex = /((lowp|mediump|highp)\\s+)?(\\w+)\\s+(\\w+)\\s*(\\[(\\d+)\\])?;/g;\n        let fieldMatch;\n        if ((fieldMatch = fieldRegex.exec(all)) !== null) {\n            const [, precision, , type, name, , array] = fieldMatch;\n            const isArray = array !== undefined;\n            let arrayLength = undefined;\n            if (isArray)\n                arrayLength = parseInt(array.replace(/\\D/g, ''));\n            this.fields = {\n                type,\n                name,\n                precision,\n                isArray,\n                arrayLength\n            };\n            this.name = name;\n        }\n    }\n}\n","import { WebGPU_GLSLMacro } from \"./WebGPU_GLSLMacro\";\nimport { WebGPU_GLSLStruct } from \"./WebGPU_GLSLStruct\";\nimport { WebGPU_GLSLFunction } from \"./WebGPU_GLSLFunction\";\nimport { WebGPU_GLSLUniform } from \"./WebGPU_GLSLUniform\";\nexport class WebGPU_GLSLProcess {\n    constructor() {\n        this.glInter = [];\n        this.globals = [];\n        this.macros = [];\n        this.structs = [];\n        this.uniforms = [];\n        this.functions = [];\n        this.textureNames = [];\n        this.glslCode = '';\n        this.haveVertexID = false;\n    }\n    process(glslCode, textureNames) {\n        this.textureNames = textureNames;\n        this._removeComments(glslCode);\n        this._extractMacros(this.glslCode);\n        for (let i = 0; i < 3; i++)\n            this._replaceMacros(this.glslCode);\n        this._extractInternals(this.glslCode);\n        this._extractFunctions(this.glslCode);\n        this._extractStructs(this.glslCode);\n        this._extractGlobals(this.glslCode);\n        this._findUsedFunctions();\n        for (let i = 0; i < this.functions.length; i++)\n            this.functions[i].processSampler(textureNames);\n        this._outputGLSL();\n    }\n    getUniforms(glslCode) {\n        this._extractMacros(glslCode);\n        for (let i = 0; i < 3; i++)\n            this._replaceMacros(this.glslCode);\n        this._extractUniforms(this.glslCode);\n        return this.uniforms;\n    }\n    _removeComments(glslCode) {\n        let result = '';\n        let isInSingleLineComment = false;\n        let isInMultiLineComment = false;\n        let char;\n        let next;\n        for (let i = 0, len = glslCode.length; i < len; i++) {\n            char = glslCode[i];\n            next = glslCode[i + 1];\n            if (!isInSingleLineComment && char === '/' && next === '*') {\n                isInMultiLineComment = true;\n                i++;\n                continue;\n            }\n            if (isInMultiLineComment && char === '*' && next === '/') {\n                isInMultiLineComment = false;\n                i++;\n                continue;\n            }\n            if (!isInMultiLineComment && char === '/' && next === '/') {\n                isInSingleLineComment = true;\n                i++;\n                continue;\n            }\n            if (isInSingleLineComment && (char === '\\n' || char === '\\r'))\n                isInSingleLineComment = false;\n            if (!isInSingleLineComment && !isInMultiLineComment)\n                result += char;\n        }\n        this.glslCode = result;\n    }\n    _removeSpaces(glslCode) {\n        let result = '';\n        let inString = false;\n        let isSpace = false;\n        let stringDelimiter = '';\n        let prev = '';\n        let next = '';\n        let char;\n        for (let i = 0, len = glslCode.length; i < len; i++) {\n            char = glslCode[i];\n            if ((char === '\"' || char === '\\'') && prev !== '\\\\') {\n                if (!inString) {\n                    inString = true;\n                    stringDelimiter = char;\n                }\n                else if (char === stringDelimiter)\n                    inString = false;\n            }\n            if (inString)\n                result += char;\n            else {\n                isSpace = char === ' ' || char === '\\t';\n                if (isSpace) {\n                    next = glslCode[i + 1];\n                    if (!/[a-zA-Z0-9_]/.test(prev))\n                        continue;\n                    if (!/[a-zA-Z0-9_]/.test(next))\n                        continue;\n                }\n                result += char;\n            }\n            if (char !== ' ' || inString)\n                prev = char;\n        }\n        this.glslCode = result.replace(/^\\s*[\\r\\n]/gm, '');\n    }\n    _extractMacros(glslCode) {\n        const regex = /^\\s*#\\s*define\\s+/;\n        const lines = glslCode.split('\\n');\n        const remove = [];\n        let currentMacro = '';\n        for (let i = 0, len = lines.length; i < len; i++) {\n            const line = lines[i].trim();\n            if (line.length === 0)\n                continue;\n            if (currentMacro.length > 0 || regex.test(line)) {\n                if (line.endsWith('\\\\')) {\n                    currentMacro += line.slice(0, -1) + ' ';\n                    remove.push(i);\n                }\n                else {\n                    currentMacro += line;\n                    this.macros.push(new WebGPU_GLSLMacro(currentMacro));\n                    currentMacro = '';\n                    remove.push(i);\n                }\n            }\n        }\n        for (let i = remove.length - 1; i > -1; i--)\n            lines.splice(remove[i], 1);\n        this.glslCode = lines.join('\\n');\n    }\n    _replaceMacros(glslCode) {\n        for (let i = 0, len = this.macros.length; i < len; i++)\n            glslCode = this.macros[i].replaceMacros(glslCode);\n        this.glslCode = glslCode;\n    }\n    _extractInternals(glslCode) {\n        const regex = /\\b(gl_VertexID|gl_FragColor|gl_Position)/g;\n        let match;\n        while ((match = regex.exec(glslCode)) !== null) {\n            const res = match[0].trim();\n            if (this.glInter.indexOf(res) === -1)\n                this.glInter.push(res);\n        }\n        if (this.glInter.indexOf('gl_VertexID') !== -1) {\n            this.globals.push('int gl_VertexID;');\n            this.haveVertexID = true;\n        }\n    }\n    _extractGlobals(glslCode) {\n        const regex = /\\b(?:const\\s+)?(float|int|bool|vec[234]|mat[234]x?[234]?)(\\s+\\w+)(\\[(\\d+)\\])?(\\s*=\\s*[^;]+)?;/g;\n        let match;\n        while ((match = regex.exec(glslCode)) !== null)\n            this.globals.push(match[0].trim());\n        this.glslCode = glslCode.replace(regex, '');\n    }\n    _extractStructs(glslCode) {\n        const regex = /struct\\s+(\\w+)\\s*\\{\\s*([^}]+)\\s*\\}\\s*;/gm;\n        let match;\n        while ((match = regex.exec(glslCode)) !== null)\n            this.structs.push(new WebGPU_GLSLStruct(match[0].trim()));\n        this.glslCode = glslCode.replace(regex, '');\n    }\n    _extractUniforms(glslCode) {\n        const regex = /\\buniform\\s+(lowp|mediump|highp)?\\s+(\\w+)\\s+(\\w+)\\s*;/gm;\n        let match;\n        while ((match = regex.exec(glslCode)) !== null)\n            this.uniforms.push(new WebGPU_GLSLUniform(match[0].trim()));\n        this.glslCode = glslCode.replace(regex, '');\n    }\n    _extractFunctions(glslCode) {\n        const functions = this.functions;\n        let depth = 0;\n        let lineStart = -1;\n        let commentMode = '';\n        for (let i = 0, len = glslCode.length; i < len; i++) {\n            const char = glslCode[i];\n            const nextChar = glslCode[i + 1];\n            if (commentMode === '') {\n                if (char === '/' && nextChar === '/') {\n                    commentMode = '//';\n                    i++;\n                    continue;\n                }\n                else if (char === '/' && nextChar === '*') {\n                    commentMode = '/*';\n                    i++;\n                    continue;\n                }\n            }\n            if (commentMode === '//') {\n                if (char === '\\n')\n                    commentMode = '';\n                continue;\n            }\n            else if (commentMode === '/*') {\n                if (char === '*' && nextChar === '/') {\n                    commentMode = '';\n                    i++;\n                }\n                continue;\n            }\n            if (commentMode !== '')\n                continue;\n            if (char === '{' && depth === 0) {\n                let j = i - 1;\n                while (j >= 0 && /\\s/.test(glslCode[j]))\n                    j--;\n                if (glslCode[j] === ')') {\n                    while (j >= 0 && glslCode[j] !== '(')\n                        j--;\n                    if (j > 0)\n                        j--;\n                    while (j >= 0 && /\\s/.test(glslCode[j]))\n                        j--;\n                    let k = j;\n                    while (k >= 0 && !/\\s/.test(glslCode[k]))\n                        k--;\n                    let returnTypeStart = k;\n                    while (returnTypeStart >= 0 && /\\s/.test(glslCode[returnTypeStart]))\n                        returnTypeStart--;\n                    let returnTypeEnd = returnTypeStart;\n                    while (returnTypeEnd >= 0 && !/\\s/.test(glslCode[returnTypeEnd]))\n                        returnTypeEnd--;\n                    lineStart = returnTypeEnd + 1;\n                }\n            }\n            if (char === '{')\n                depth++;\n            else if (char === '}' && depth > 0) {\n                depth--;\n                if (depth === 0 && lineStart >= 0) {\n                    functions.push(new WebGPU_GLSLFunction(glslCode.substring(lineStart, i + 1).trim()));\n                    lineStart = -1;\n                }\n            }\n        }\n        for (let i = 0, len = this.functions.length; i < len; i++)\n            glslCode = glslCode.replace(this.functions[i].all, '');\n        this.glslCode = glslCode;\n    }\n    _findUsedFunctions() {\n        const funcUsedNew = [];\n        const funcUsedSet = new Set();\n        const _findFunc = (func) => {\n            for (let i = 0, len = func.calls.length; i < len; i++) {\n                const call = func.calls[i];\n                for (let j = 0, len = this.functions.length; j < len; j++) {\n                    const func = this.functions[j];\n                    if (func.name === call.name) {\n                        const params = call.params;\n                        const funcParams = func.params;\n                        if (funcParams.length !== params.length)\n                            continue;\n                        let isMatch = true;\n                        if (isMatch && !funcUsedSet.has(j)) {\n                            funcUsedNew.push(j);\n                            funcUsedSet.add(j);\n                        }\n                    }\n                }\n            }\n        };\n        funcUsedSet.add(this.functions.length - 1);\n        _findFunc(this.functions[this.functions.length - 1]);\n        while (funcUsedNew.length > 0) {\n            const fn = funcUsedNew.slice();\n            funcUsedNew.length = 0;\n            for (let i = 0, len = fn.length; i < len; i++)\n                _findFunc(this.functions[fn[i]]);\n        }\n        for (let i = this.functions.length - 1; i > -1; i--)\n            if (!funcUsedSet.has(i))\n                this.functions.splice(i, 1);\n    }\n    _outputGLSL() {\n        let output = '';\n        for (let i = 0, len = this.globals.length; i < len; i++)\n            output += this.globals[i] + '\\n';\n        output += '\\n';\n        for (let i = 0, len = this.structs.length; i < len; i++)\n            output += this.structs[i].all + '\\n\\n';\n        for (let i = 0, len = this.functions.length; i < len; i++) {\n            if (!this.functions[i].samplerProcessed) {\n                output += this.functions[i].head + '\\n';\n                output += this.functions[i].body + '\\n\\n';\n            }\n            else {\n                output += this.functions[i].samplerOutput + '\\n\\n';\n            }\n        }\n        this.glslCode = output;\n    }\n    _getVariable(name, isArray = false) {\n        for (let i = this.structs.length - 1; i > -1; i--) {\n            const ret = this.structs[i].getArrayField(name, isArray);\n            if (ret !== undefined)\n                return ret;\n        }\n        return undefined;\n    }\n    debugInfo() {\n        for (let i = 0, len = this.functions.length; i < len; i++)\n            console.log(this.functions[i]);\n    }\n}\n","export class NagaWASM {\n    async init() {\n        await window.naga.initSync.call();\n    }\n    compileGLSL2WGSL(code, type) {\n        return window.naga.glsl_compile(code, type);\n    }\n}\n","export class WebGPUStatis {\n    static startFrame() {\n        this._frameStatis.submit = 0;\n        this._frameStatis.uploadNum = 0;\n        this._frameStatis.uploadBytes = 0;\n        this._frameStatis.renderElement = 0;\n    }\n    static addUploadNum(n = 1) {\n        this._frameStatis.uploadNum += n;\n    }\n    static addUploadBytes(n = 1) {\n        this._frameStatis.uploadBytes += n;\n    }\n    static addRenderElement(n = 1) {\n        this._frameStatis.renderElement += n;\n    }\n    static addSubmit(n = 1) {\n        this._frameStatis.submit += n;\n    }\n    static addTexture(texture) {\n        this._textureStatis.push(texture);\n    }\n    static trackObjectCreation(name, id, object, memory) {\n        const time = Date.now() - this._start;\n        this._dataTiming.push({ action: 'create', name, id, time, memory, object });\n        if (!this._dataCreate[name])\n            this._dataCreate[name] = { id: [], count: 0, time: [], memory: 0, object: [] };\n        this._dataCreate[name].id.push(id);\n        this._dataCreate[name].count++;\n        this._dataCreate[name].time.push(time);\n        this._dataCreate[name].memory += memory;\n        this._dataCreate[name].object.push(object);\n        this._totalStatis.memory += memory;\n    }\n    static trackObjectRelease(name, id, object, memory) {\n        const time = Date.now() - this._start;\n        this._dataTiming.push({ action: 'release', name, id, time, memory, object });\n        if (!this._dataRelease[name])\n            this._dataRelease[name] = { id: [], count: 0, time: [], memory: 0, object: [] };\n        this._dataRelease[name].id.push(id);\n        this._dataRelease[name].count++;\n        this._dataRelease[name].time.push(time);\n        this._dataRelease[name].memory += memory;\n        this._dataRelease[name].object.push(object);\n        this._totalStatis.memory -= memory;\n    }\n    static trackObjectAction(name, id, action, object, memory) {\n        const time = Date.now() - this._start;\n        this._dataTiming.push({ action, name, id, time, memory, object });\n        this._totalStatis.memory += memory;\n    }\n    static printStatisticsAsTable() {\n        if (this._dataTiming.length > 0) {\n            console.log('timing statistics: ');\n            console.table(this._dataTiming);\n        }\n        if (Object.keys(this._dataCreate).length > 0) {\n            console.log('object creation statistics: ');\n            console.table(this._dataCreate);\n        }\n        if (Object.keys(this._dataRelease).length > 0) {\n            console.log('object release statistics: ');\n            console.table(this._dataRelease);\n        }\n    }\n    static printTotalStatis() {\n        console.table(this._totalStatis);\n    }\n    static printFrameStatis() {\n        console.table(this._frameStatis);\n    }\n    static printTextureStatis() {\n        console.log('texture statistics: ');\n        console.table(this._textureStatis);\n    }\n}\nWebGPUStatis._start = Date.now();\nWebGPUStatis._totalStatis = { memory: 0 };\nWebGPUStatis._frameStatis = {};\nWebGPUStatis._dataTiming = [];\nWebGPUStatis._dataCreate = {};\nWebGPUStatis._dataRelease = {};\nWebGPUStatis._textureStatis = [];\n","import { WebGPUStatis } from \"./WebGPUStatis\";\nexport class WebGPUGlobal {\n    static getUniformInfoId() {\n        return this._uniformInfoIdCounter++;\n    }\n    static getUniformBufferId() {\n        return this._uniformBufferIdCounter++;\n    }\n    static getId(object) {\n        if (this.debug && object)\n            WebGPUStatis.trackObjectCreation(object.objectName || 'unknown', this._idCounter, object, 0);\n        return this._idCounter++;\n    }\n    static releaseId(object) {\n        if (this.debug && object)\n            WebGPUStatis.trackObjectRelease(object.objectName || 'unknown', object.globalId, object, 0);\n    }\n    static action(object, action, memory = 0) {\n        if (this.debug && object)\n            WebGPUStatis.trackObjectAction(object.objectName || 'unknown', object.globalId, action, object, memory);\n    }\n    static reset() {\n        this._idCounter = 0;\n    }\n    static get idCounter() {\n        return this._idCounter;\n    }\n}\nWebGPUGlobal.debug = false;\nWebGPUGlobal.useCache = true;\nWebGPUGlobal.useBundle = true;\nWebGPUGlobal.useBigBuffer = true;\nWebGPUGlobal.useTimeQuery = false;\nWebGPUGlobal.useGlobalContext = true;\nWebGPUGlobal._idCounter = 0;\nWebGPUGlobal._uniformInfoIdCounter = 0;\nWebGPUGlobal._uniformBufferIdCounter = 0;\n","import { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\nimport { WebGPUGlobal } from \"../WebGPUStatis/WebGPUGlobal\";\nexport class WebGPUUniformBlockInfo {\n    constructor(name, size) {\n        this.objectName = 'WebGPUUniformBlockInfo';\n        this.name = name;\n        this.size = size;\n        this.items = [];\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    addUniform(name, type, offset, align, size, element, count) {\n        this.items.push({\n            propertyId: Shader3D.propertyNameToID(name),\n            name,\n            type,\n            size,\n            align,\n            offset,\n            element,\n            count\n        });\n    }\n    hasUniform(propertyId) {\n        for (let i = this.items.length - 1; i > -1; i--)\n            if (this.items[i].propertyId === propertyId)\n                return true;\n        return false;\n    }\n    debugInfo() {\n        for (let i = 0, len = this.items.length; i < len; i++) {\n            const item = this.items[i];\n            console.log('id: %d, name: %s, type: %s, size: %d, align: %d, offset: %d, elements: %d, count: %d', item.propertyId, item.name, item.type, item.size, item.align, item.offset, item.element, item.count);\n        }\n    }\n    destroy() {\n        WebGPUGlobal.releaseId(this);\n    }\n}\n","import { Config3D } from \"../../../../Config3D\";\nimport { RenderParams } from \"../../../RenderEngine/RenderEnum/RenderParams\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { SkinnedMeshRenderer } from \"../../../d3/core/SkinnedMeshRenderer\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nimport { roundUp } from \"../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferManager\";\nimport { WebGPUShaderCompileDef } from \"../ShaderCompile/WebGPUShaderCompileDef\";\nimport { WebGPUShaderCompileUtil } from \"../ShaderCompile/WebGPUShaderCompileUtil\";\nimport { WebGPU_GLSLProcess } from \"./GLSLProcess/WebGPU_GLSLProcess\";\nimport { NagaWASM } from \"./Naga/NagaWASM\";\nimport { WebGPUShaderData } from \"./WebGPUShaderData\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUUniformBlockInfo } from \"./WebGPUUniform/WebGPUUniformBlockInfo\";\nexport var WebGPUBindingInfoType;\n(function (WebGPUBindingInfoType) {\n    WebGPUBindingInfoType[WebGPUBindingInfoType[\"buffer\"] = 0] = \"buffer\";\n    WebGPUBindingInfoType[WebGPUBindingInfoType[\"texture\"] = 1] = \"texture\";\n    WebGPUBindingInfoType[WebGPUBindingInfoType[\"sampler\"] = 2] = \"sampler\";\n})(WebGPUBindingInfoType || (WebGPUBindingInfoType = {}));\n;\n;\nexport class WebGPUCodeGenerator {\n    static async init(next) {\n        if (this.inited) {\n            if (next)\n                next();\n            return;\n        }\n        this.naga = new NagaWASM();\n        await this.naga.init();\n        this.inited = true;\n        if (next)\n            next();\n        WebGPUShaderData.__init__();\n    }\n    static _attributeString(attributeMap) {\n        let res = '';\n        for (const key in attributeMap) {\n            let location = attributeMap[key][0];\n            const type = this._getAttributeT2S(attributeMap[key][1]);\n            if (type === 'mat3') {\n                res = `${res}layout(location = ${location++}) in vec3 ${key}_0;\\n`;\n                res = `${res}layout(location = ${location++}) in vec3 ${key}_1;\\n`;\n                res = `${res}layout(location = ${location++}) in vec3 ${key}_2;\\n`;\n            }\n            else if (type === 'mat4') {\n                res = `${res}layout(location = ${location++}) in vec4 ${key}_0;\\n`;\n                res = `${res}layout(location = ${location++}) in vec4 ${key}_1;\\n`;\n                res = `${res}layout(location = ${location++}) in vec4 ${key}_2;\\n`;\n                res = `${res}layout(location = ${location++}) in vec4 ${key}_3;\\n`;\n            }\n            else\n                res = `${res}layout(location = ${location}) in ${type} ${key};\\n`;\n        }\n        return res;\n    }\n    static _varyingString(varyingMap, io = 'out') {\n        let res = '';\n        let count = 0;\n        for (const key in varyingMap) {\n            const type = varyingMap[key];\n            res = `${res}layout(location = ${count++}) ${io} ${type} ${key};\\n`;\n        }\n        return res;\n    }\n    static _uniformString2D(uniformMap, arrayMap, nodeCommonMap) {\n        const globalUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap;\n        const cameraUniformMap = globalUniformMap(\"BaseCamera\");\n        const scene2DUniformMap = globalUniformMap(\"Sprite2DGlobal\");\n        const sprite2DUniformMap = globalUniformMap(\"Sprite2D\");\n        const scene2DUniforms = [];\n        const sprite2DUniforms = [];\n        const materialUniforms = [];\n        const textureUniforms = [];\n        const sprite2DUniformMaps = [];\n        if (nodeCommonMap)\n            for (let i = 0; i < nodeCommonMap.length; i++)\n                if (nodeCommonMap[i] !== 'Sprite2D')\n                    sprite2DUniformMaps.push(globalUniformMap(nodeCommonMap[i]));\n        const uniformInfo = [];\n        const _have = (group, name) => {\n            for (let i = group.length - 1; i > -1; i--)\n                if (group[i].name === name)\n                    return true;\n            return false;\n        };\n        const regex = /\\[(.*?)\\]/g;\n        const _catalog = (key, name, type) => {\n            const id = Shader3D.propertyNameToID(key.replace(regex, '_'));\n            if (scene2DUniformMap.hasPtrID(id)) {\n                if (!_have(scene2DUniforms, name)) {\n                    scene2DUniforms.push({ name, type, set: 0 });\n                    return;\n                }\n            }\n            if (sprite2DUniformMap.hasPtrID(id)) {\n                if (!_have(sprite2DUniforms, name)) {\n                    sprite2DUniforms.push({ name, type, set: 2 });\n                    return;\n                }\n            }\n            if (sprite2DUniformMaps.length > 0) {\n                for (let i = 0; i < sprite2DUniformMaps.length; i++) {\n                    if (sprite2DUniformMaps[i].hasPtrID(id)) {\n                        if (!_have(sprite2DUniforms, name))\n                            sprite2DUniforms.push({ name, type, set: 2 });\n                        return;\n                    }\n                }\n            }\n            if (!_have(materialUniforms, name))\n                materialUniforms.push({ name, type, set: 3 });\n            else if (type === 'sampler2D' || type === 'samplerCube' || type === 'sampler2DArray' || type === 'sampler2DShadow') {\n                if (!_have(textureUniforms, name))\n                    textureUniforms.push({ name, type, set: 3 });\n            }\n        };\n        for (const key in uniformMap) {\n            const dataType = this._getAttributeT2S(uniformMap[key].type);\n            _catalog(key, uniformMap[key].name, dataType);\n        }\n        const _avoidEmpty = (uniforms, name, type, set) => {\n            if (uniforms.length === 0)\n                uniforms.push({ name, type, set });\n            else {\n                let n = 0, typeStr;\n                for (let i = uniforms.length - 1; i > -1; i--) {\n                    typeStr = uniforms[i].type;\n                    if (typeStr === 'sampler2D' || typeStr === 'samplerCube' || typeStr === 'sampler2DArray')\n                        n++;\n                }\n                if (n === uniforms.length)\n                    uniforms.push({ name, type, set });\n            }\n        };\n        _avoidEmpty(sprite2DUniforms, 'u_WorldMat', 'mat4', 2);\n        _avoidEmpty(materialUniforms, 'u_AlbedoColor', 'vec4', 3);\n        let uniformGLSL = '';\n        const typeNum = 10;\n        const visibility = GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT;\n        const _procUniforms = (set, binding, name, uniformMap, uniforms) => {\n            const sortedUniforms = [];\n            for (let i = 0; i < typeNum; i++)\n                sortedUniforms[i] = [];\n            uniformGLSL = `${uniformGLSL}layout(set = ${set}, binding = ${binding}) uniform ${name} {\\n`;\n            if (uniforms) {\n                for (let i = 0, len = uniforms.length; i < len; i++) {\n                    const nameStr = uniforms[i].name;\n                    const typeStr = uniforms[i].type;\n                    if (typeStr === 'sampler2D' || typeStr === 'samplerCube' || typeStr === 'sampler2DArray' || typeStr === 'sampler2DShadow')\n                        textureUniforms.push({ name: nameStr, type: typeStr, set });\n                    else\n                        sortedUniforms[this._getAttributeS2N(typeStr)].push({ name: nameStr, type: typeStr, set });\n                }\n            }\n            else if (uniformMap) {\n                const data = uniformMap._idata;\n                data.forEach(uniform => {\n                    let nameStr;\n                    if (uniform.arrayLength > 0) {\n                        nameStr = `${uniform.propertyName}[${uniform.arrayLength}]`;\n                        arrayMap[nameStr] = uniform.arrayLength;\n                    }\n                    else\n                        nameStr = uniform.propertyName;\n                    if (uniform.propertyName.indexOf('.') !== -1)\n                        return;\n                    const typeStr = this._getAttributeT2S(uniform.uniformtype);\n                    if (typeStr === '')\n                        return;\n                    else if (typeStr === 'sampler2D' || typeStr === 'samplerCube' || typeStr === 'sampler2DArray')\n                        textureUniforms.push({ name: nameStr, type: typeStr, set });\n                    else\n                        sortedUniforms[this._getAttributeS2N(typeStr)].push({ name: nameStr, type: typeStr, set });\n                });\n            }\n            for (let i = 1; i < typeNum; i++)\n                sortedUniforms[0].push(...sortedUniforms[i]);\n            for (let i = 0, len = sortedUniforms[0].length; i < len; i++)\n                uniformGLSL = `${uniformGLSL}    ${sortedUniforms[0][i].type} ${sortedUniforms[0][i].name};\\n`;\n            uniformGLSL = `${uniformGLSL}};\\n\\n`;\n            uniformInfo.push({\n                id: WebGPUGlobal.getUniformInfoId(),\n                set,\n                binding,\n                visibility,\n                type: WebGPUBindingInfoType.buffer,\n                name,\n                propertyId: Shader3D.propertyNameToID(name),\n                uniform: this._genUniformBlockInfo(name, sortedUniforms[0], arrayMap),\n                buffer: { type: 'uniform', hasDynamicOffset: false, minBindingSize: 0 },\n            });\n            return sortedUniforms[0];\n        };\n        _procUniforms(0, 0, 'scene3D', scene2DUniformMap);\n        _procUniforms(1, 0, 'camera', cameraUniformMap);\n        _procUniforms(2, 0, 'sprite3D', null, sprite2DUniforms);\n        _procUniforms(3, 0, 'material', null, materialUniforms);\n        return {\n            uniformGLSL,\n            uniformInfo,\n            textureUniforms,\n        };\n    }\n    static _uniformString3D(uniformMap, arrayMap, nodeCommonMap) {\n        const globalUniformMap = LayaGL.renderDeviceFactory.createGlobalUniformMap;\n        const scene3DUniformMap = globalUniformMap(\"Scene3D\");\n        const cameraUniformMap = globalUniformMap(\"BaseCamera\");\n        const sprite3DUniformMap = globalUniformMap(\"Sprite3D\");\n        const simpleSkinnedMeshUniformMap = globalUniformMap(\"SimpleSkinnedMesh\");\n        const shurikenSprite3DUniformMap = globalUniformMap(\"ShurikenSprite3D\");\n        const trailRenderUniformMap = globalUniformMap(\"TrailRender\");\n        const skyRendererUniformMap = globalUniformMap(\"SkyRenderer\");\n        const scene3DUniforms = [];\n        const cameraUniforms = [];\n        const sprite3DUniforms = [];\n        const materialUniforms = [];\n        const textureUniforms = [];\n        sprite3DUniformMap.addShaderUniform(SkinnedMeshRenderer.BONES, 'u_Bones', ShaderDataType.Matrix4x4);\n        const uniformInfo = [];\n        const _have = (group, name) => {\n            for (let i = group.length - 1; i > -1; i--)\n                if (group[i].name === name)\n                    return true;\n            return false;\n        };\n        const regex = /\\[(.*?)\\]/g;\n        const _catalog = (key, name, type) => {\n            const id = Shader3D.propertyNameToID(key.replace(regex, '_'));\n            if (scene3DUniformMap.hasPtrID(id)) {\n                if (!_have(scene3DUniforms, name))\n                    scene3DUniforms.push({ name, type, set: 0 });\n            }\n            else if (cameraUniformMap.hasPtrID(id)) {\n                if (!_have(cameraUniforms, name))\n                    cameraUniforms.push({ name, type, set: 1 });\n            }\n            else if (sprite3DUniformMap.hasPtrID(id)) {\n                if (!_have(sprite3DUniforms, name))\n                    sprite3DUniforms.push({ name, type, set: 2 });\n            }\n            else if (simpleSkinnedMeshUniformMap.hasPtrID(id)) {\n                if (!_have(sprite3DUniforms, name))\n                    sprite3DUniforms.push({ name, type, set: 2 });\n            }\n            else if (shurikenSprite3DUniformMap.hasPtrID(id)) {\n                if (!_have(sprite3DUniforms, name))\n                    sprite3DUniforms.push({ name, type, set: 2 });\n            }\n            else if (trailRenderUniformMap.hasPtrID(id)) {\n                if (!_have(sprite3DUniforms, name))\n                    sprite3DUniforms.push({ name, type, set: 2 });\n            }\n            else if (skyRendererUniformMap.hasPtrID(id)) {\n                if (!_have(sprite3DUniforms, name))\n                    sprite3DUniforms.push({ name, type, set: 2 });\n            }\n            else if (type === 'sampler2D' || type === 'samplerCube' || type === 'sampler2DArray' || type === 'sampler2DShadow') {\n                if (!_have(textureUniforms, name))\n                    textureUniforms.push({ name, type, set: 3 });\n            }\n            else if (!_have(materialUniforms, name))\n                materialUniforms.push({ name, type, set: 3 });\n        };\n        for (const key in uniformMap) {\n            const dataType = this._getAttributeT2S(uniformMap[key].type);\n            _catalog(key, uniformMap[key].name, dataType);\n        }\n        let haveWorldMat = false;\n        for (let i = sprite3DUniforms.length - 1; i > -1; i--) {\n            if (sprite3DUniforms[i].name === 'u_WorldMat') {\n                haveWorldMat = true;\n                break;\n            }\n        }\n        if (!haveWorldMat)\n            sprite3DUniforms.push({ name: 'u_WorldMat', type: 'mat4', set: 2 });\n        const _avoidEmpty = (uniforms, name, type, set) => {\n            if (uniforms.length === 0)\n                uniforms.push({ name, type, set });\n            else {\n                let n = 0, typeStr;\n                for (let i = uniforms.length - 1; i > -1; i--) {\n                    typeStr = uniforms[i].type;\n                    if (typeStr === 'sampler2D' || typeStr === 'samplerCube' || typeStr === 'sampler2DArray')\n                        n++;\n                }\n                if (n === uniforms.length)\n                    uniforms.push({ name, type, set });\n            }\n        };\n        _avoidEmpty(materialUniforms, 'u_AlbedoColor', 'vec4', 3);\n        let uniformGLSL = '';\n        const typeNum = 10;\n        const visibility = GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT;\n        const _procUniforms = (set, binding, name, uniformMap, uniforms) => {\n            const sortedUniforms = [];\n            for (let i = 0; i < typeNum; i++)\n                sortedUniforms[i] = [];\n            uniformGLSL = `${uniformGLSL}layout(set = ${set}, binding = ${binding}) uniform ${name} {\\n`;\n            if (uniforms) {\n                for (let i = 0, len = uniforms.length; i < len; i++) {\n                    const nameStr = uniforms[i].name;\n                    const typeStr = uniforms[i].type;\n                    if (typeStr === 'sampler2D' || typeStr === 'samplerCube' || typeStr === 'sampler2DArray' || typeStr === 'sampler2DShadow')\n                        textureUniforms.push({ name: nameStr, type: typeStr, set });\n                    else\n                        sortedUniforms[this._getAttributeS2N(typeStr)].push({ name: nameStr, type: typeStr, set });\n                }\n            }\n            else if (uniformMap) {\n                const data = uniformMap._idata;\n                data.forEach(uniform => {\n                    let nameStr;\n                    if (uniform.arrayLength > 0) {\n                        nameStr = `${uniform.propertyName}[${uniform.arrayLength}]`;\n                        arrayMap[nameStr] = uniform.arrayLength;\n                    }\n                    else\n                        nameStr = uniform.propertyName;\n                    const typeStr = this._getAttributeT2S(uniform.uniformtype);\n                    if (uniform.propertyName.indexOf('.') !== -1)\n                        return;\n                    if (typeStr === '')\n                        return;\n                    else if (typeStr === 'sampler2D' || typeStr === 'samplerCube' || typeStr === 'sampler2DArray')\n                        textureUniforms.push({ name: nameStr, type: typeStr, set });\n                    else\n                        sortedUniforms[this._getAttributeS2N(typeStr)].push({ name: nameStr, type: typeStr, set });\n                });\n            }\n            for (let i = 1; i < typeNum; i++)\n                sortedUniforms[0].push(...sortedUniforms[i]);\n            for (let i = 0, len = sortedUniforms[0].length; i < len; i++)\n                uniformGLSL = `${uniformGLSL}    ${sortedUniforms[0][i].type} ${sortedUniforms[0][i].name};\\n`;\n            uniformGLSL = `${uniformGLSL}};\\n\\n`;\n            uniformInfo.push({\n                id: WebGPUGlobal.getUniformInfoId(),\n                set,\n                binding,\n                visibility,\n                type: WebGPUBindingInfoType.buffer,\n                name,\n                propertyId: Shader3D.propertyNameToID(name),\n                uniform: this._genUniformBlockInfo(name, sortedUniforms[0], arrayMap),\n                buffer: { type: 'uniform', hasDynamicOffset: false, minBindingSize: 0 },\n            });\n            return sortedUniforms[0];\n        };\n        _procUniforms(0, 0, 'scene3D', scene3DUniformMap);\n        _procUniforms(1, 0, 'camera', cameraUniformMap);\n        _procUniforms(2, 0, 'sprite3D', null, sprite3DUniforms);\n        _procUniforms(3, 0, 'material', null, materialUniforms);\n        return {\n            uniformGLSL,\n            uniformInfo,\n            textureUniforms,\n        };\n    }\n    static _textureString(textureUniforms, uniformInfo, visibility) {\n        let res = '';\n        let binding = [1, 1, 1, 1];\n        for (let i = uniformInfo.length - 1; i > -1; i--)\n            if (binding[uniformInfo[i].set] <= uniformInfo[i].binding)\n                binding[uniformInfo[i].set] = uniformInfo[i].binding + 1;\n        if (textureUniforms.length > 0) {\n            for (let i = 0, len = textureUniforms.length; i < len; i++) {\n                const tu = textureUniforms[i];\n                if (tu.type === 'sampler2D') {\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform sampler ${tu.name}Sampler;\\n`;\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform texture2D ${tu.name}Texture;\\n`;\n                    res = `${res}#define ${tu.name} sampler2D(${tu.name}Texture, ${tu.name}Sampler)\\n\\n`;\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 2,\n                        visibility,\n                        type: WebGPUBindingInfoType.sampler,\n                        name: `${tu.name}Sampler`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        sampler: { type: 'filtering' },\n                    });\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 1,\n                        visibility,\n                        type: WebGPUBindingInfoType.texture,\n                        name: `${tu.name}Texture`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        texture: { sampleType: 'float', viewDimension: '2d', multisampled: false },\n                    });\n                }\n                if (tu.type === 'samplerCube') {\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform sampler ${tu.name}Sampler;\\n`;\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform textureCube ${tu.name}Texture;\\n`;\n                    res = `${res}#define ${tu.name} samplerCube(${tu.name}Texture, ${tu.name}Sampler)\\n\\n`;\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 2,\n                        visibility,\n                        type: WebGPUBindingInfoType.sampler,\n                        name: `${tu.name}Sampler`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        sampler: { type: 'filtering' },\n                    });\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 1,\n                        visibility,\n                        type: WebGPUBindingInfoType.texture,\n                        name: `${tu.name}Texture`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        texture: { sampleType: 'float', viewDimension: 'cube', multisampled: false },\n                    });\n                }\n                if (tu.type === 'sampler2DArray') {\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform sampler ${tu.name}Sampler;\\n`;\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform texture2DArray ${tu.name}Texture;\\n`;\n                    res = `${res}#define ${tu.name} sampler2DArray(${tu.name}Texture, ${tu.name}Sampler)\\n\\n`;\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 2,\n                        visibility,\n                        type: WebGPUBindingInfoType.sampler,\n                        name: `${tu.name}Sampler`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        sampler: { type: 'filtering' },\n                    });\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 1,\n                        visibility,\n                        type: WebGPUBindingInfoType.texture,\n                        name: `${tu.name}Texture`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        texture: { sampleType: 'float', viewDimension: '2d-array', multisampled: false },\n                    });\n                }\n                if (tu.type === 'sampler2DShadow') {\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform samplerShadow ${tu.name}Sampler;\\n`;\n                    res = `${res}layout(set = ${tu.set}, binding = ${binding[tu.set]++}) uniform texture2D ${tu.name}Texture;\\n`;\n                    res = `${res}#define ${tu.name} sampler2DShadow(${tu.name}Texture, ${tu.name}Sampler)\\n\\n`;\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 2,\n                        visibility,\n                        type: WebGPUBindingInfoType.sampler,\n                        name: `${tu.name}Sampler`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        sampler: { type: 'filtering' },\n                    });\n                    uniformInfo.push({\n                        id: WebGPUGlobal.getUniformInfoId(),\n                        set: tu.set,\n                        binding: binding[tu.set] - 1,\n                        visibility,\n                        type: WebGPUBindingInfoType.texture,\n                        name: `${tu.name}Texture`,\n                        propertyId: Shader3D.propertyNameToID(tu.name),\n                        texture: { sampleType: 'float', viewDimension: '2d', multisampled: false },\n                    });\n                }\n            }\n        }\n        return res;\n    }\n    static _changeUnfitCode(code) {\n        const regex1 = /const\\s+(?:in|highp|mediump|lowp)\\s+/g;\n        code = code.replace(regex1, 'in ');\n        const regex2 = /(?:texture2D|textureCube)\\s*\\(\\s*/g;\n        return code.replace(regex2, 'texture(');\n    }\n    static _genAWorldMat() {\n        return '#define a_WorldMat mat4(a_WorldMat_0, a_WorldMat_1, a_WorldMat_2, a_WorldMat_3)';\n    }\n    static _genInverseFunc() {\n        const func = `\nmat2 inverse(mat2 m)\n{\n    return mat2(m[1][1], -m[0][1], -m[1][0], m[0][0]) / (m[0][0] * m[1][1] - m[0][1] * m[1][0]);\n}\nmat3 inverse(mat3 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n    float b01 = a22 * a11 - a12 * a21;\n    float b11 = a12 * a20 - a22 * a10;\n    float b21 = a21 * a10 - a11 * a20;\n\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    return mat3(\n           b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11), b11, (a22 * a00 - a02 * a20),\n\t       (-a12 * a00 + a02 * a10), b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10))\n\t/ det;\n}\nmat4 inverse(mat4 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3];\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3];\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3];\n    float a30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3];\n\n\tfloat b00 = a00 * a11 - a01 * a10, b01 = a00 * a12 - a02 * a10, b02 = a00 * a13 - a03 * a10;\n\tfloat b03 = a01 * a12 - a02 * a11, b04 = a01 * a13 - a03 * a11, b05 = a02 * a13 - a03 * a12;\n\tfloat b06 = a20 * a31 - a21 * a30, b07 = a20 * a32 - a22 * a30, b08 = a20 * a33 - a23 * a30;\n\tfloat b09 = a21 * a32 - a22 * a31, b10 = a21 * a33 - a23 * a31, b11 = a22 * a33 - a23 * a32;\n\n\tfloat det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    return mat4(\n           a11 * b11 - a12 * b10 + a13 * b09, a02 * b10 - a01 * b11 - a03 * b09, a31 * b05 - a32 * b04 + a33 * b03,\n\t       a22 * b04 - a21 * b05 - a23 * b03, a12 * b08 - a10 * b11 - a13 * b07, a00 * b11 - a02 * b08 + a03 * b07,\n\t       a32 * b02 - a30 * b05 - a33 * b01, a20 * b05 - a22 * b02 + a23 * b01, a10 * b10 - a11 * b08 + a13 * b06,\n\t       a01 * b08 - a00 * b10 - a03 * b06, a30 * b04 - a31 * b02 + a33 * b00, a21 * b02 - a20 * b04 - a23 * b00,\n\t       a11 * b07 - a10 * b09 - a12 * b06, a00 * b09 - a01 * b07 + a02 * b06, a31 * b01 - a30 * b03 - a32 * b00,\n\t       a20 * b03 - a21 * b01 + a22 * b00)\n\t/ det;\n}\nmat2 transpose(mat2 m)\n{\n    return mat2(\n    m[0][0], m[1][0],\n\tm[0][1], m[1][1]);\n}\nmat3 transpose(mat3 m)\n{\n    return mat3(\n    m[0][0], m[1][0], m[2][0],\n\tm[0][1], m[1][1], m[2][1],\n\tm[0][2], m[1][2], m[2][2]);\n}\nmat4 transpose(mat4 m)\n{\n    return mat4(\n    m[0][0], m[1][0], m[2][0], m[3][0],\n\tm[0][1], m[1][1], m[2][1], m[3][1],\n\tm[0][2], m[1][2], m[2][2], m[3][2],\n\tm[0][3], m[1][3], m[2][3], m[3][3]);\n}`;\n        return `${func}\\n\\n`;\n    }\n    static _genUniformBlockInfo(name, uniforms, arrayMap) {\n        if (uniforms.length === 0)\n            return undefined;\n        const _getUniformAlign = (type) => {\n            switch (type) {\n                case 'int':\n                case 'float':\n                    return 4;\n                case 'vec2':\n                    return 8;\n                case 'vec3':\n                case 'vec4':\n                case 'mat3':\n                case 'mat4':\n                    return 16;\n                default:\n                    return 4;\n            }\n        };\n        const _getUniformElements = (type) => {\n            switch (type) {\n                case 'int':\n                case 'float':\n                    return 1;\n                case 'vec2':\n                    return 2;\n                case 'vec3':\n                    return 3;\n                case 'vec4':\n                    return 4;\n                case 'mat3':\n                    return 12;\n                case 'mat4':\n                    return 16;\n                default:\n                    return 1;\n            }\n        };\n        const _getUniformSize = (type, count = 1) => {\n            if (count <= 1) {\n                switch (type) {\n                    case 'int':\n                    case 'float':\n                        return 4;\n                    case 'vec2':\n                        return 8;\n                    case 'vec3':\n                        return 12;\n                    case 'vec4':\n                        return 16;\n                    case 'mat3':\n                        return 48;\n                    case 'mat4':\n                        return 64;\n                    default:\n                        return 4;\n                }\n            }\n            else {\n                switch (type) {\n                    case 'int':\n                    case 'float':\n                        return 4 * count;\n                    case 'vec2':\n                        return 8 * count;\n                    case 'vec3':\n                        return 16 * count;\n                    case 'vec4':\n                        return 16 * count;\n                    case 'mat3':\n                        return 48 * count;\n                    case 'mat4':\n                        return 64 * count;\n                    default:\n                        return 4 * count;\n                }\n            }\n        };\n        const _calcUniformBufferSize = (uniforms, arrayMap) => {\n            let byteLength = 0;\n            let maxAlign = 0;\n            const regex = /\\[(.*?)\\]/g;\n            const layout = [];\n            for (let i = 0, len = uniforms.length; i < len; i++) {\n                const uniform = uniforms[i];\n                const count = arrayMap[uniform.name] || 1;\n                const align = _getUniformAlign(uniform.type);\n                const size = _getUniformSize(uniform.type, count);\n                const elements = _getUniformElements(uniform.type);\n                const name = uniform.name.replace(regex, '');\n                if (align > maxAlign)\n                    maxAlign = align;\n                byteLength = roundUp(byteLength, align);\n                byteLength += size;\n                layout.push({ name, type: uniform.type, offset: byteLength - size, align, size, elements, count });\n            }\n            byteLength = roundUp(byteLength, maxAlign);\n            return { byteLength, layout };\n        };\n        const size = _calcUniformBufferSize(uniforms, arrayMap);\n        const uniformBlockInfo = new WebGPUUniformBlockInfo(name, size.byteLength);\n        for (let i = 0, len = size.layout.length; i < len; i++) {\n            const uniform = size.layout[i];\n            uniformBlockInfo.addUniform(uniform.name, uniform.type, uniform.offset, uniform.align, uniform.size, uniform.elements, uniform.count);\n        }\n        return uniformBlockInfo;\n    }\n    static _getAttributeT2S(type) {\n        switch (type) {\n            case ShaderDataType.Int:\n                return 'int';\n            case ShaderDataType.Bool:\n                return 'bool';\n            case ShaderDataType.Float:\n                return 'float';\n            case ShaderDataType.Vector2:\n                return 'vec2';\n            case ShaderDataType.Vector3:\n                return 'vec3';\n            case ShaderDataType.Vector4:\n            case ShaderDataType.Color:\n                return 'vec4';\n            case ShaderDataType.Matrix3x3:\n                return 'mat3';\n            case ShaderDataType.Matrix4x4:\n                return 'mat4';\n            case ShaderDataType.Texture2D:\n                return 'sampler2D';\n            case ShaderDataType.TextureCube:\n                return 'samplerCube';\n            case ShaderDataType.Texture2DArray:\n                return 'sampler2DArray';\n            default:\n                return '';\n        }\n    }\n    static _getAttributeS2T(name) {\n        switch (name) {\n            case 'int':\n                return ShaderDataType.Int;\n            case 'bool':\n                return ShaderDataType.Bool;\n            case 'float':\n                return ShaderDataType.Float;\n            case 'vec2':\n                return ShaderDataType.Vector2;\n            case 'vec3':\n                return ShaderDataType.Vector3;\n            case 'vec4':\n                return ShaderDataType.Vector4;\n            case 'mat3':\n                return ShaderDataType.Matrix3x3;\n            case 'mat4':\n                return ShaderDataType.Matrix4x4;\n            case 'sampler2D':\n                return ShaderDataType.Texture2D;\n            case 'samplerCube':\n                return ShaderDataType.TextureCube;\n            case 'sampler2DArray':\n                return ShaderDataType.Texture2DArray;\n            case 'sampler2DShadow':\n                return ShaderDataType.Texture2D;\n            default:\n                return '';\n        }\n    }\n    static _getAttributeS2N(name) {\n        switch (name) {\n            case 'mat4':\n                return 0;\n            case 'mat3':\n                return 1;\n            case 'vec4':\n                return 2;\n            case 'vec3':\n                return 3;\n            case 'vec2':\n                return 4;\n            case 'float':\n                return 5;\n            case 'bool':\n                return 6;\n            case 'int':\n                return 7;\n            default:\n                return 8;\n        }\n    }\n    static shaderLanguageProcess(defineString, attributeMap, uniformMap, arrayMap, nodeCommonMap, VS, FS, is2D) {\n        const defMap = {};\n        const varyingMap = {};\n        const varyingMapVS = {};\n        const varyingMapFS = {};\n        const clusterSlices = Config3D.lightClusterCount;\n        defineString.push('GRAPHICS_API_GLES3');\n        let defineStr = '';\n        defineStr += '#define MAX_LIGHT_COUNT ' + Config3D.maxLightCount + '\\n';\n        defineStr += '#define MAX_LIGHT_COUNT_PER_CLUSTER ' + Config3D._maxAreaLightCountPerClusterAverage + '\\n';\n        defineStr += '#define CLUSTER_X_COUNT ' + clusterSlices.x + '\\n';\n        defineStr += '#define CLUSTER_Y_COUNT ' + clusterSlices.y + '\\n';\n        defineStr += '#define CLUSTER_Z_COUNT ' + clusterSlices.z + '\\n';\n        defineStr += '#define MORPH_MAX_COUNT ' + Config3D.maxMorphTargetCount + '\\n';\n        defineStr += '#define SHADER_CAPAILITY_LEVEL ' + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + '\\n';\n        for (let i = 0, len = defineString.length; i < len; i++) {\n            const def = defineString[i];\n            defineStr += '#define ' + def + '\\n';\n            defMap[def] = true;\n        }\n        const vs = VS.toscript(defMap, []);\n        if (vs[0].indexOf('#version') === 0)\n            vs.shift();\n        const fs = FS.toscript(defMap, []);\n        if (fs[0].indexOf('#version') === 0)\n            fs.shift();\n        let vsOut = '', fsOut = '';\n        let vsNeedInverseFunc = true;\n        let fsNeedInverseFunc = true;\n        const vsTod = {};\n        const fsTod = {};\n        {\n            const defs = new Set();\n            const token = WebGPUShaderCompileDef.compile(vs.join('\\n'), defs);\n            const defMap = {};\n            defineString.forEach(def => { defMap[def] = true; });\n            defMap['GL_FRAGMENT_PRECISION_HIGH'] = true;\n            vsOut = WebGPUShaderCompileUtil.toScript(token, defMap, vsTod);\n            if (vsTod.varying) {\n                for (const key in vsTod.varying) {\n                    let keyWithArray = key;\n                    if (vsTod.varying[key].length)\n                        keyWithArray += '[' + vsTod.varying[key].length[0] + ']';\n                    if (!varyingMapVS[keyWithArray])\n                        varyingMapVS[keyWithArray] = vsTod.varying[key].type;\n                }\n            }\n            if (vsTod.variable) {\n                const attributeUsed = {};\n                for (const k in attributeMap)\n                    if (vsTod.variable.has(k))\n                        attributeUsed[k] = attributeMap[k];\n                attributeMap = attributeUsed;\n            }\n        }\n        {\n            const defs = new Set();\n            const token = WebGPUShaderCompileDef.compile(fs.join('\\n'), defs);\n            const defMap = {};\n            defineString.forEach(def => { defMap[def] = true; });\n            defMap['GL_FRAGMENT_PRECISION_HIGH'] = true;\n            fsOut = WebGPUShaderCompileUtil.toScript(token, defMap, fsTod);\n            if (fsTod.varying) {\n                for (const key in fsTod.varying) {\n                    let keyWithArray = key;\n                    if (fsTod.varying[key].length)\n                        keyWithArray += '[' + fsTod.varying[key].length[0] + ']';\n                    if (!varyingMapFS[keyWithArray])\n                        varyingMapFS[keyWithArray] = fsTod.varying[key].type;\n                }\n            }\n        }\n        for (const key in varyingMapVS)\n            varyingMap[key] = varyingMapVS[key];\n        const attributeGLSL = this._attributeString(attributeMap);\n        const varyingGLSL_vs = this._varyingString(varyingMap, 'out');\n        const varyingGLSL_fs = this._varyingString(varyingMap, 'in');\n        const { uniformGLSL, uniformInfo, textureUniforms } = is2D ?\n            this._uniformString2D(uniformMap, arrayMap, nodeCommonMap)\n            : this._uniformString3D(uniformMap, arrayMap, nodeCommonMap);\n        const inverseFunc = this._genInverseFunc();\n        const aWorldMat = this._genAWorldMat();\n        const textureUniforms_vs = [];\n        const textureUniforms_fs = [];\n        if (vsTod.variable) {\n            for (let i = 0, len = textureUniforms.length; i < len; i++) {\n                const name = textureUniforms[i].name;\n                if (vsTod.variable.has(name)) {\n                    textureUniforms_vs.push(textureUniforms[i]);\n                    if (uniformMap[name]\n                        && uniformMap[name].shadow) {\n                        textureUniforms[i].type = 'sampler2DShadow';\n                    }\n                }\n            }\n        }\n        if (fsTod.variable) {\n            for (let i = 0, len = textureUniforms.length; i < len; i++) {\n                if (fsTod.variable.has(textureUniforms[i].name)) {\n                    textureUniforms_fs.push(textureUniforms[i]);\n                    if (uniformMap[textureUniforms[i].name]\n                        && uniformMap[textureUniforms[i].name].shadow) {\n                        textureUniforms[i].type = 'sampler2DShadow';\n                    }\n                }\n            }\n        }\n        const textureGLSL_vs = this._textureString(textureUniforms_vs, uniformInfo, GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT);\n        const textureGLSL_fs = this._textureString(textureUniforms_fs, uniformInfo, GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT);\n        const textureNames_vs = [];\n        const textureNames_fs = [];\n        for (let i = 0, len = textureUniforms_vs.length; i < len; i++)\n            textureNames_vs.push(textureUniforms_vs[i].name);\n        for (let i = 0, len = textureUniforms_fs.length; i < len; i++)\n            textureNames_fs.push(textureUniforms_fs[i].name);\n        const vertexHead = `#version 450 core\nprecision highp float;\nprecision highp int;\n${attributeGLSL}\n${varyingGLSL_vs}\n${uniformGLSL}\n${textureGLSL_vs}\n${aWorldMat}\n`;\n        const fragmentHead = `#version 450 core\nprecision highp float;\nprecision highp int;\nlayout(location = 0) out vec4 gl_FragColor;\n${varyingGLSL_fs}\n${uniformGLSL}\n${textureGLSL_fs}\n`;\n        let vsBody = defineStr + (vsNeedInverseFunc ? inverseFunc : '') + vsOut;\n        let fsBody = defineStr + (fsNeedInverseFunc ? inverseFunc : '') + fsOut;\n        if (this.forNaga) {\n            vsBody = this._changeUnfitCode(vsBody);\n            fsBody = this._changeUnfitCode(fsBody);\n        }\n        const procVS = new WebGPU_GLSLProcess();\n        const procFS = new WebGPU_GLSLProcess();\n        procVS.process(vsBody, textureNames_vs);\n        procFS.process(fsBody, textureNames_fs);\n        let dstVS = vertexHead + procVS.glslCode;\n        let dstFS = fragmentHead + procFS.glslCode;\n        let wgsl_vs = this.naga.compileGLSL2WGSL(dstVS, 'vertex');\n        let wgsl_fs = this.naga.compileGLSL2WGSL(dstFS, 'fragment');\n        {\n            const regex = /let\\s+([_a-zA-Z][_a-zA-Z0-9]*)\\s*=\\s*textureSample\\(((?:[^()]|\\((?:[^()]*|\\([^()]*\\))*\\))*)\\);/g;\n            let match;\n            while ((match = regex.exec(wgsl_vs)) !== null) {\n                const variable = match[1];\n                const argss = match[2].split(',');\n                let code;\n                if (argss.length === 3) {\n                    code = `\n    let ${variable}_1 = textureDimensions(${argss[0]}, 0);\n    let ${variable}_2 = ${argss[2]};\n    let ${variable}_3 = vec2<u32>(u32(f32(${variable}_1.x) * ${variable}_2.x), u32(f32(${variable}_1.y) * ${variable}_2.y));\n    let ${variable} = textureLoad(${argss[0]}, ${variable}_3, 0);`;\n                }\n                else if (argss.length === 4) {\n                    code = `\n    let ${variable}_1 = textureDimensions(${argss[0]}, 0);\n    let ${variable}_2 = ${argss[2]};\n    let ${variable}_3 = vec2<u32>(u32(f32(${variable}_1.x) * ${variable}_2.x), u32(f32(${variable}_1.y) * ${variable}_2.y));\n    let ${variable} = textureLoad(${argss[0]}, ${variable}_3, ${argss[3]}, 0);`;\n                }\n                wgsl_vs = wgsl_vs.replace(match[0], code);\n            }\n        }\n        if (procVS.haveVertexID) {\n            const regex = /fn\\s+main\\([^{}]*\\{/g;\n            let match;\n            if ((match = regex.exec(wgsl_vs)) !== null) {\n                const str = match[0];\n                let code = '';\n                let add = false;\n                for (let i = 0; i < str.length; i++) {\n                    if (str[i] === '(' && !add) {\n                        add = true;\n                        code += str[i];\n                        code += '@builtin(vertex_index) vertexIndex : u32, ';\n                    }\n                    else if (str[i] === '{') {\n                        code += str[i];\n                        code += '\\n    gl_VertexID = i32(vertexIndex);';\n                    }\n                    else\n                        code += str[i];\n                }\n                wgsl_vs = wgsl_vs.replace(match[0], code);\n            }\n        }\n        return { glsl_vs: dstVS, glsl_fs: dstFS, vs: wgsl_vs, fs: wgsl_fs, uniformInfo };\n    }\n    static collectUniform(defineString, uniformMap, VS, FS) {\n        const uniformMapEx = {};\n        uniformMap.forEach(uniform => {\n            uniformMapEx[uniform.propertyName] = { name: uniform.propertyName, type: uniform.uniformtype };\n        });\n        defineString.push('GRAPHICS_API_GLES3');\n        let defineStr = '';\n        defineStr += '#define MAX_LIGHT_COUNT ' + Config3D.maxLightCount + '\\n';\n        defineStr += '#define MAX_LIGHT_COUNT_PER_CLUSTER ' + Config3D._maxAreaLightCountPerClusterAverage + '\\n';\n        defineStr += '#define CLUSTER_X_COUNT ' + Config3D.lightClusterCount.x + '\\n';\n        defineStr += '#define CLUSTER_Y_COUNT ' + Config3D.lightClusterCount.y + '\\n';\n        defineStr += '#define CLUSTER_Z_COUNT ' + Config3D.lightClusterCount.z + '\\n';\n        defineStr += '#define MORPH_MAX_COUNT ' + Config3D.maxMorphTargetCount + '\\n';\n        defineStr += '#define SHADER_CAPAILITY_LEVEL ' + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + '\\n';\n        const defMap = {};\n        for (let i = defineString.length - 1; i > -1; i--)\n            defMap[defineString[i]] = true;\n        let keyWithArray;\n        let vsOut = '', fsOut = '';\n        const vs = VS.toscript(defMap, []);\n        const fs = FS.toscript(defMap, []);\n        const vsTod = {};\n        const fsTod = {};\n        const arrayMap = {};\n        {\n            const token = WebGPUShaderCompileDef.compile(defineStr + vs.join('\\n'));\n            const defMap = {};\n            defineString.forEach(def => { defMap[def] = true; });\n            defMap['GL_FRAGMENT_PRECISION_HIGH'] = true;\n            vsOut = WebGPUShaderCompileUtil.toScript(token, defMap, vsTod);\n            if (vsTod.uniform) {\n                for (const key in vsTod.uniform) {\n                    if (!uniformMapEx[key]) {\n                        if (vsTod.uniform[key].length && vsTod.uniform[key].length[0]) {\n                            keyWithArray = `${key}[${vsTod.uniform[key].length[0]}]`;\n                            uniformMapEx[key] = {\n                                name: keyWithArray,\n                                type: this._getAttributeS2T(vsTod.uniform[key].type)\n                            };\n                            arrayMap[keyWithArray] = vsTod.uniform[key].length[0];\n                        }\n                        else\n                            uniformMapEx[key] = {\n                                name: key,\n                                type: this._getAttributeS2T(vsTod.uniform[key].type)\n                            };\n                    }\n                }\n            }\n        }\n        {\n            const token = WebGPUShaderCompileDef.compile(defineStr + fs.join('\\n'));\n            const defMap = {};\n            defineString.forEach(def => { defMap[def] = true; });\n            defMap['GL_FRAGMENT_PRECISION_HIGH'] = true;\n            fsOut = WebGPUShaderCompileUtil.toScript(token, defMap, fsTod);\n            if (fsTod.uniform) {\n                for (const key in fsTod.uniform) {\n                    if (!uniformMapEx[key]) {\n                        if (fsTod.uniform[key].length && fsTod.uniform[key].length[0]) {\n                            keyWithArray = `${key}[${fsTod.uniform[key].length[0]}]`;\n                            uniformMapEx[key] = {\n                                name: keyWithArray,\n                                type: this._getAttributeS2T(fsTod.uniform[key].type)\n                            };\n                            arrayMap[keyWithArray] = fsTod.uniform[key].length[0];\n                        }\n                        else\n                            uniformMapEx[key] = {\n                                name: key,\n                                type: this._getAttributeS2T(fsTod.uniform[key].type)\n                            };\n                    }\n                }\n            }\n        }\n        const uniform_vs = new WebGPU_GLSLProcess().getUniforms(vsOut);\n        const uniform_fs = new WebGPU_GLSLProcess().getUniforms(fsOut);\n        for (let i = uniform_vs.length - 1; i > -1; i--) {\n            const name = uniform_vs[i].name;\n            const type = uniform_vs[i].fields.type;\n            const arrayLength = uniform_vs[i].fields.arrayLength;\n            if (uniformMapEx[name] && type === 'sampler2DShadow')\n                uniformMapEx[name].shadow = true;\n            else {\n                uniformMapEx[name] = {\n                    name,\n                    type: this._getAttributeS2T(type),\n                    shadow: type === 'sampler2DShadow' ? true : undefined\n                };\n            }\n            if (arrayLength !== undefined)\n                arrayMap[`${name}[${arrayLength}]`] = arrayLength;\n        }\n        for (let i = uniform_fs.length - 1; i > -1; i--) {\n            const name = uniform_fs[i].name;\n            const type = uniform_fs[i].fields.type;\n            const arrayLength = uniform_fs[i].fields.arrayLength;\n            if (uniformMapEx[name] && type === 'sampler2DShadow')\n                uniformMapEx[name].shadow = true;\n            else {\n                uniformMapEx[name] = {\n                    name,\n                    type: this._getAttributeS2T(type),\n                    shadow: type === 'sampler2DShadow' ? true : undefined\n                };\n            }\n            if (arrayLength !== undefined)\n                arrayMap[`${name}[${arrayLength}]`] = arrayLength;\n        }\n        return { uniform: uniformMapEx, arr: arrayMap };\n    }\n}\nWebGPUCodeGenerator.inited = false;\nWebGPUCodeGenerator.forNaga = true;\n","import { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { TextureCompareMode } from \"../../../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { WrapMode } from \"../../../RenderEngine/RenderEnum/WrapMode\";\nimport { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nvar GPUAddressMode;\n(function (GPUAddressMode) {\n    GPUAddressMode[\"clamp\"] = \"clamp-to-edge\";\n    GPUAddressMode[\"repeat\"] = \"repeat\";\n    GPUAddressMode[\"mirror\"] = \"mirror-repeat\";\n})(GPUAddressMode || (GPUAddressMode = {}));\n;\nvar GPUFilterMode;\n(function (GPUFilterMode) {\n    GPUFilterMode[\"nearest\"] = \"nearest\";\n    GPUFilterMode[\"linear\"] = \"linear\";\n})(GPUFilterMode || (GPUFilterMode = {}));\n;\nvar GPUCompareFunction;\n(function (GPUCompareFunction) {\n    GPUCompareFunction[\"never\"] = \"never\";\n    GPUCompareFunction[\"less\"] = \"less\";\n    GPUCompareFunction[\"equal\"] = \"equal\";\n    GPUCompareFunction[\"less_equal\"] = \"less-equal\";\n    GPUCompareFunction[\"greater\"] = \"greater\";\n    GPUCompareFunction[\"not_equal\"] = \"not-equal\";\n    GPUCompareFunction[\"greater_equal\"] = \"greater-equal\";\n    GPUCompareFunction[\"always\"] = \"always\";\n})(GPUCompareFunction || (GPUCompareFunction = {}));\n;\nexport class WebGPUSampler {\n    constructor(obj) {\n        this.objectName = 'WebGPUSamper';\n        this.source = this._createGPUSampler(obj);\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    static getWebGPUSampler(params) {\n        const cacheKey = WebGPUSampler._getCacheSamplerKey(params);\n        if (!this._cacheMap[cacheKey])\n            this._cacheMap[cacheKey] = new WebGPUSampler(params);\n        return this._cacheMap[cacheKey];\n    }\n    static _getCacheSamplerKey(params) {\n        return (params.wrapU << WebGPUSampler.pointer_wrapU) +\n            (params.wrapV << WebGPUSampler.pointer_wrapV) +\n            (params.wrapW << WebGPUSampler.pointer_wrapW) +\n            (params.filterMode << WebGPUSampler.pointer_filterMode) +\n            (params.mipmapFilter << WebGPUSampler.pointer_mipmapFilter) +\n            (params.comparedMode << WebGPUSampler.pointer_comparedMode) +\n            (params.anisoLevel << WebGPUSampler.pointer_anisoLevel);\n    }\n    _createGPUSampler(params) {\n        this._descriptor = this._getSamplerDescriptor(params);\n        if (this._descriptor.maxAnisotropy < 1)\n            this._descriptor.maxAnisotropy = 1;\n        return WebGPURenderEngine._instance.getDevice().createSampler(this._descriptor);\n    }\n    _getSamplerDescriptor(params) {\n        if (params.anisoLevel > 1 && params.mipmapFilter === FilterMode.Point)\n            params.mipmapFilter = FilterMode.Bilinear;\n        return {\n            addressModeU: this._getSamplerAddressMode(params.wrapU),\n            addressModeV: this._getSamplerAddressMode(params.wrapV),\n            addressModeW: this._getSamplerAddressMode(params.wrapW),\n            magFilter: this._getFilterMode(params.filterMode),\n            minFilter: this._getFilterMode(params.filterMode),\n            mipmapFilter: this._getFilterMode(params.mipmapFilter),\n            compare: this._getGPUCompareFunction(params.comparedMode),\n            maxAnisotropy: params.anisoLevel\n        };\n    }\n    _getSamplerAddressMode(warpMode) {\n        switch (warpMode) {\n            case WrapMode.Repeat:\n                return GPUAddressMode.repeat;\n            case WrapMode.Mirrored:\n                return GPUAddressMode.mirror;\n            case WrapMode.Clamp:\n            default:\n                return GPUAddressMode.clamp;\n        }\n    }\n    _getFilterMode(filterMode) {\n        switch (filterMode) {\n            case FilterMode.Bilinear:\n            case FilterMode.Trilinear:\n                return GPUFilterMode.linear;\n            case FilterMode.Point:\n            default:\n                return GPUFilterMode.nearest;\n        }\n    }\n    _getGPUCompareFunction(compareMode) {\n        switch (compareMode) {\n            case TextureCompareMode.ALWAYS:\n                return GPUCompareFunction.always;\n            case TextureCompareMode.EQUAL:\n                return GPUCompareFunction.equal;\n            case TextureCompareMode.GREATER:\n                return GPUCompareFunction.greater;\n            case TextureCompareMode.GEQUAL:\n                return GPUCompareFunction.greater_equal;\n            case TextureCompareMode.LESS:\n                return GPUCompareFunction.less;\n            case TextureCompareMode.LEQUAL:\n                return GPUCompareFunction.less_equal;\n            case TextureCompareMode.NEVER:\n                return GPUCompareFunction.never;\n            case TextureCompareMode.NOTEQUAL:\n                return GPUCompareFunction.not_equal;\n            case TextureCompareMode.None:\n            default:\n                return undefined;\n        }\n    }\n}\nWebGPUSampler.pointer_wrapU = 0;\nWebGPUSampler.pointer_wrapV = 2;\nWebGPUSampler.pointer_wrapW = 4;\nWebGPUSampler.pointer_filterMode = 6;\nWebGPUSampler.pointer_mipmapFilter = 8;\nWebGPUSampler.pointer_comparedMode = 10;\nWebGPUSampler.pointer_anisoLevel = 14;\nWebGPUSampler._cacheMap = {};\n","import { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { TextureCompareMode } from \"../../../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../../RenderEngine/RenderEnum/TextureDimension\";\nimport { WrapMode } from \"../../../RenderEngine/RenderEnum/WrapMode\";\nimport { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPUSampler } from \"./WebGPUSampler\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUStatis } from \"./WebGPUStatis/WebGPUStatis\";\nexport class WebGPUInternalTex {\n    get filterMode() {\n        return this._filterMode;\n    }\n    set filterMode(value) {\n        if (this._filterMode !== value) {\n            switch (value) {\n                case FilterMode.Point:\n                    this._webGPUSamplerParams.filterMode = FilterMode.Point;\n                    this._webGPUSamplerParams.mipmapFilter = FilterMode.Point;\n                    break;\n                case FilterMode.Bilinear:\n                    this._webGPUSamplerParams.filterMode = FilterMode.Bilinear;\n                    this._webGPUSamplerParams.mipmapFilter = FilterMode.Point;\n                    break;\n                case FilterMode.Trilinear:\n                    this._webGPUSamplerParams.filterMode = FilterMode.Bilinear;\n                    this._webGPUSamplerParams.mipmapFilter = FilterMode.Bilinear;\n                    break;\n            }\n            this._webgpuSampler = WebGPUSampler.getWebGPUSampler(this._webGPUSamplerParams);\n            this._filterMode = value;\n        }\n    }\n    get wrapU() {\n        return this._wrapU;\n    }\n    set wrapU(value) {\n        if (this._wrapU !== value) {\n            this._webGPUSamplerParams.wrapU = value;\n            this._webgpuSampler = WebGPUSampler.getWebGPUSampler(this._webGPUSamplerParams);\n            this._wrapU = value;\n        }\n    }\n    get wrapV() {\n        return this._wrapV;\n    }\n    set wrapV(value) {\n        if (this._wrapV !== value) {\n            this._webGPUSamplerParams.wrapV = value;\n            this._webgpuSampler = WebGPUSampler.getWebGPUSampler(this._webGPUSamplerParams);\n            this._wrapV = value;\n        }\n    }\n    get wrapW() {\n        return this._wrapW;\n    }\n    set wrapW(value) {\n        if (this._wrapW !== value) {\n            this._webGPUSamplerParams.wrapW = value;\n            this._webgpuSampler = WebGPUSampler.getWebGPUSampler(this._webGPUSamplerParams);\n            this._wrapW = value;\n        }\n    }\n    get anisoLevel() {\n        return this._anisoLevel;\n    }\n    set anisoLevel(value) {\n        if (this._anisoLevel !== value && this.resource) {\n            this._webGPUSamplerParams.anisoLevel = value;\n            this._webgpuSampler = WebGPUSampler.getWebGPUSampler(this._webGPUSamplerParams);\n            this._anisoLevel = value;\n        }\n    }\n    get compareMode() {\n        return this._compareMode;\n    }\n    set compareMode(value) {\n        if (this._compareMode !== value) {\n            this._webGPUSamplerParams.comparedMode = value;\n            this._webgpuSampler = WebGPUSampler.getWebGPUSampler(this._webGPUSamplerParams);\n            this._compareMode = value;\n        }\n    }\n    get sampler() {\n        return this._webgpuSampler;\n    }\n    get gpuMemory() {\n        return this._gpuMemory;\n    }\n    set gpuMemory(value) {\n        this._changeTexMemory(value);\n        this._gpuMemory = value;\n    }\n    constructor(width, height, depth, dimension, mipmap, multiSamples, useSRGBLoader, gammaCorrection) {\n        this.objectName = 'WebGPUInternalTex';\n        this._webGPUSamplerParams = {\n            comparedMode: TextureCompareMode.None,\n            wrapU: WrapMode.Repeat,\n            wrapV: WrapMode.Repeat,\n            wrapW: WrapMode.Repeat,\n            mipmapFilter: FilterMode.Bilinear,\n            filterMode: FilterMode.Bilinear,\n            anisoLevel: 1\n        };\n        this._gpuMemory = 0;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.dimension = dimension;\n        this.multiSamplers = multiSamples;\n        const _isPot = (value) => {\n            return (value & (value - 1)) === 0;\n        };\n        this.isPotSize = _isPot(width) && _isPot(height);\n        if (dimension === TextureDimension.Tex3D) {\n            this.isPotSize = this.isPotSize && _isPot(this.depth);\n        }\n        this.mipmap = mipmap && this.isPotSize;\n        this.mipmapCount = this.mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\n        this.maxMipmapLevel = this.mipmapCount - 1;\n        this.baseMipmapLevel = 0;\n        this.useSRGBLoad = useSRGBLoader;\n        this.gammaCorrection = gammaCorrection;\n        this._engine = WebGPURenderEngine._instance;\n        this._webgpuSampler = WebGPUSampler.getWebGPUSampler(this._webGPUSamplerParams);\n        switch (dimension) {\n            case TextureDimension.Tex2D:\n                this._statistics_M_TextureX = GPUEngineStatisticsInfo.M_Texture2D;\n                this._statistics_RC_TextureX = GPUEngineStatisticsInfo.RC_Texture2D;\n                break;\n            case TextureDimension.Tex3D:\n                this._statistics_M_TextureX = GPUEngineStatisticsInfo.M_Texture3D;\n                this._statistics_RC_TextureX = GPUEngineStatisticsInfo.RC_Texture3D;\n                break;\n            case TextureDimension.Cube:\n                this._statistics_M_TextureX = GPUEngineStatisticsInfo.M_TextureCube;\n                this._statistics_RC_TextureX = GPUEngineStatisticsInfo.RC_TextureCube;\n                break;\n            case TextureDimension.Texture2DArray:\n                this._statistics_M_TextureX = GPUEngineStatisticsInfo.M_Texture2DArray;\n                this._statistics_RC_TextureX = GPUEngineStatisticsInfo.RC_Texture2DArray;\n                break;\n        }\n        this._statistics_M_TextureA = GPUEngineStatisticsInfo.M_ALLTexture;\n        this._statistics_RC_TextureA = GPUEngineStatisticsInfo.RC_ALLTexture;\n        this.globalId = WebGPUGlobal.getId(this);\n        WebGPUStatis.addTexture(this);\n    }\n    statisAsRenderTexture() {\n        this._statistics_M_TextureA = GPUEngineStatisticsInfo.M_ALLRenderTexture;\n        this._statistics_RC_TextureA = GPUEngineStatisticsInfo.RC_ALLRenderTexture;\n    }\n    getTextureView() {\n        let dimension;\n        switch (this.dimension) {\n            case TextureDimension.Tex2D:\n                dimension = '2d';\n                break;\n            case TextureDimension.Cube:\n                dimension = 'cube';\n                break;\n            case TextureDimension.Tex3D:\n                dimension = '3d';\n                break;\n            case TextureDimension.Texture2DArray:\n                dimension = '2d-array';\n                break;\n            case TextureDimension.CubeArray:\n                dimension = 'cube-array';\n                break;\n            default:\n                dimension = '2d';\n                break;\n        }\n        const descriptor = {\n            format: this._webGPUFormat,\n            dimension,\n            baseMipLevel: this.baseMipmapLevel,\n            mipLevelCount: this.maxMipmapLevel - this.baseMipmapLevel + 1,\n        };\n        return this.resource.createView(descriptor);\n    }\n    _changeTexMemory(memory) {\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, -this._gpuMemory + memory);\n        if (this._statistics_M_TextureA !== GPUEngineStatisticsInfo.M_ALLRenderTexture)\n            this._engine._addStatisticsInfo(this._statistics_M_TextureX, -this._gpuMemory + memory);\n        this._engine._addStatisticsInfo(this._statistics_M_TextureA, -this._gpuMemory + memory);\n    }\n    dispose() {\n        this.gpuMemory = 0;\n        WebGPUGlobal.releaseId(this);\n        this.resource.destroy();\n    }\n}\n","const isTypedArray = (arr) => arr && typeof arr.length === 'number' && arr.buffer instanceof ArrayBuffer && typeof arr.byteLength === 'number';\nfunction guessTextureBindingViewDimensionForTexture(texture) {\n    switch (texture.dimension) {\n        case '1d':\n            return '1d';\n        case '3d':\n            return '3d';\n        default:\n        case '2d':\n            return texture.depthOrArrayLayers > 1 ? '2d-array' : '2d';\n    }\n}\nfunction normalizeGPUExtent3Dict(size) {\n    return [size.width, size.height || 1, size.depthOrArrayLayers || 1];\n}\nexport function normalizeGPUExtent3D(size) {\n    return (Array.isArray(size) || isTypedArray(size))\n        ? [...size, 1, 1].slice(0, 3)\n        : normalizeGPUExtent3Dict(size);\n}\nexport function numMipLevels(size, dimension) {\n    const sizes = normalizeGPUExtent3D(size);\n    const maxSize = Math.max(...sizes.slice(0, dimension === '3d' ? 3 : 2));\n    return 1 + Math.log2(maxSize) | 0;\n}\nfunction getMipmapGenerationWGSL(textureBindingViewDimension) {\n    let textureSnippet;\n    let sampleSnippet;\n    switch (textureBindingViewDimension) {\n        case '2d':\n            textureSnippet = 'texture_2d<f32>';\n            sampleSnippet = 'textureSample(ourTexture, ourSampler, fsInput.texcoord)';\n            break;\n        case '2d-array':\n            textureSnippet = 'texture_2d_array<f32>';\n            sampleSnippet = `\n          textureSample(\n              ourTexture,\n              ourSampler,\n              fsInput.texcoord,\n              uni.layer)`;\n            break;\n        case 'cube':\n            textureSnippet = 'texture_cube<f32>';\n            sampleSnippet = `\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1))`;\n            break;\n        case 'cube-array':\n            textureSnippet = 'texture_cube_array<f32>';\n            sampleSnippet = `\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1), uni.layer)`;\n            break;\n        default:\n            throw new Error(`unsupported view: ${textureBindingViewDimension}`);\n    }\n    return `\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32\n        ) -> VSOutput {\n          var pos = array<vec2f, 3>(\n            vec2f(-1.0, -1.0),\n            vec2f(-1.0,  3.0),\n            vec2f( 3.0, -1.0),\n          );\n\n          var vsOutput: VSOutput;\n          let xy = pos[vertexIndex];\n          vsOutput.position = vec4f(xy, 0.0, 1.0);\n          vsOutput.texcoord = xy * vec2f(0.5, -0.5) + vec2f(0.5);\n          return vsOutput;\n        }\n\n        struct Uniforms {\n          layer: u32,\n        };\n\n        @group(0) @binding(0) var ourSampler: sampler;\n        @group(0) @binding(1) var ourTexture: ${textureSnippet};\n        @group(0) @binding(2) var<uniform> uni: Uniforms;\n\n        @fragment fn fs(fsInput: VSOutput) -> @location(0) vec4f {\n          _ = uni.layer; // make sure this is used so all pipelines have the same bindings\n          return ${sampleSnippet};\n        }\n      `;\n}\nconst byDevice = new WeakMap();\nexport function genMipmap(device, texture, textureBindingViewDimension) {\n    let perDeviceInfo = byDevice.get(device);\n    if (!perDeviceInfo) {\n        perDeviceInfo = {\n            pipelineByFormatAndView: {},\n            moduleByViewType: {},\n        };\n        byDevice.set(device, perDeviceInfo);\n    }\n    let { sampler, uniformBuffer, uniformValues, } = perDeviceInfo;\n    const { pipelineByFormatAndView, moduleByViewType, } = perDeviceInfo;\n    textureBindingViewDimension = textureBindingViewDimension || guessTextureBindingViewDimensionForTexture(texture);\n    let module = moduleByViewType[textureBindingViewDimension];\n    if (!module) {\n        const code = getMipmapGenerationWGSL(textureBindingViewDimension);\n        module = device.createShaderModule({\n            label: `mipLevelGeneration for ${textureBindingViewDimension}`,\n            code,\n        });\n        moduleByViewType[textureBindingViewDimension] = module;\n    }\n    if (!sampler) {\n        sampler = device.createSampler({\n            minFilter: 'linear',\n            magFilter: 'linear',\n        });\n        uniformBuffer = device.createBuffer({\n            size: 16,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        uniformValues = new Uint32Array(1);\n        Object.assign(perDeviceInfo, { sampler, uniformBuffer, uniformValues });\n    }\n    const id = `${texture.format}.${textureBindingViewDimension}`;\n    if (!pipelineByFormatAndView[id]) {\n        pipelineByFormatAndView[id] = device.createRenderPipeline({\n            label: `mipLevelGenerator for ${textureBindingViewDimension}`,\n            layout: 'auto',\n            vertex: {\n                module,\n                entryPoint: 'vs',\n            },\n            fragment: {\n                module,\n                entryPoint: 'fs',\n                targets: [{ format: texture.format }],\n            },\n        });\n    }\n    const pipeline = pipelineByFormatAndView[id];\n    for (let baseMipLevel = 1; baseMipLevel < texture.mipLevelCount; ++baseMipLevel) {\n        for (let baseArrayLayer = 0; baseArrayLayer < texture.depthOrArrayLayers; ++baseArrayLayer) {\n            uniformValues[0] = baseArrayLayer;\n            device.queue.writeBuffer(uniformBuffer, 0, uniformValues);\n            const bindGroup = device.createBindGroup({\n                layout: pipeline.getBindGroupLayout(0),\n                entries: [\n                    { binding: 0, resource: sampler },\n                    {\n                        binding: 1,\n                        resource: texture.createView({\n                            dimension: textureBindingViewDimension,\n                            baseMipLevel: baseMipLevel - 1,\n                            mipLevelCount: 1,\n                        }),\n                    },\n                    { binding: 2, resource: { buffer: uniformBuffer } },\n                ],\n            });\n            const renderPassDescriptor = {\n                label: 'mip gen renderPass',\n                colorAttachments: [\n                    {\n                        view: texture.createView({\n                            dimension: '2d',\n                            baseMipLevel,\n                            mipLevelCount: 1,\n                            baseArrayLayer,\n                            arrayLayerCount: 1,\n                        }),\n                        loadOp: 'clear',\n                        storeOp: 'store',\n                    },\n                ],\n            };\n            const encoder = device.createCommandEncoder({\n                label: 'mip gen encoder',\n            });\n            const pass = encoder.beginRenderPass(renderPassDescriptor);\n            pass.setPipeline(pipeline);\n            pass.setBindGroup(0, bindGroup);\n            pass.draw(3);\n            pass.end();\n            const commandBuffer = encoder.finish();\n            device.queue.submit([commandBuffer]);\n        }\n    }\n}\n","import { TextureDimension } from \"../../../../RenderEngine/RenderEnum/TextureDimension\";\nimport { WebGPUTextureDimension } from \"../WebGPUTextureContext\";\nfunction guessTextureBindingViewDimensionForTexture(texture) {\n    switch (texture.dimension) {\n        case '1d':\n            return '1d';\n        case '3d':\n            return '3d';\n        default:\n        case '2d':\n            return texture.depthOrArrayLayers > 1 ? '2d-array' : '2d';\n    }\n}\nfunction getGPUTextureDescriptor(dimension, width, height, format) {\n    const textureSize = {\n        width,\n        height,\n        depthOrArrayLayers: 1,\n    };\n    let usage = GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC;\n    let dimensionType;\n    switch (dimension) {\n        case TextureDimension.Tex2D:\n        case TextureDimension.Cube:\n        case TextureDimension.Texture2DArray:\n            dimensionType = WebGPUTextureDimension.D2D;\n            break;\n        case TextureDimension.Tex3D:\n            dimensionType = WebGPUTextureDimension.D3D;\n            break;\n        default:\n            throw \"DimensionType Unknown format\";\n    }\n    const textureDescriptor = {\n        size: textureSize,\n        mipLevelCount: 1,\n        sampleCount: 1,\n        dimension: dimensionType,\n        format,\n        usage,\n    };\n    return textureDescriptor;\n}\nfunction getPremultiplyAlphaWGSL(textureBindingViewDimension) {\n    let textureSnippet;\n    let sampleSnippet;\n    switch (textureBindingViewDimension) {\n        case '2d':\n            textureSnippet = 'texture_2d<f32>';\n            sampleSnippet = 'textureSample(ourTexture, ourSampler, fsInput.texcoord)';\n            break;\n        case '2d-array':\n            textureSnippet = 'texture_2d_array<f32>';\n            sampleSnippet = `\n          textureSample(\n              ourTexture,\n              ourSampler,\n              fsInput.texcoord,\n              uni.layer)`;\n            break;\n        case 'cube':\n            textureSnippet = 'texture_cube<f32>';\n            sampleSnippet = `\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1))`;\n            break;\n        case 'cube-array':\n            textureSnippet = 'texture_cube_array<f32>';\n            sampleSnippet = `\n          textureSample(\n              ourTexture,\n              ourSampler,\n              faceMat[uni.layer] * vec3f(fract(fsInput.texcoord), 1), uni.layer)`;\n            break;\n        default:\n            throw new Error(`unsupported view: ${textureBindingViewDimension}`);\n    }\n    return `\n        const faceMat = array(\n          mat3x3f( 0,  0,  -2,  0, -2,   0,  1,  1,   1),   // pos-x\n          mat3x3f( 0,  0,   2,  0, -2,   0, -1,  1,  -1),   // neg-x\n          mat3x3f( 2,  0,   0,  0,  0,   2, -1,  1,  -1),   // pos-y\n          mat3x3f( 2,  0,   0,  0,  0,  -2, -1, -1,   1),   // neg-y\n          mat3x3f( 2,  0,   0,  0, -2,   0, -1,  1,   1),   // pos-z\n          mat3x3f(-2,  0,   0,  0, -2,   0,  1,  1,  -1));  // neg-z\n\n        struct VSOutput {\n          @builtin(position) position: vec4f,\n          @location(0) texcoord: vec2f,\n        };\n\n        struct Uniforms {\n          layer: f32,\n          sx: f32,\n          sy: f32,\n          wx: f32,\n          wy: f32,\n        };\n\n        @vertex fn vs(\n          @builtin(vertex_index) vertexIndex : u32\n        ) -> VSOutput {\n          let pos1 = array<vec2f, 6>(\n            vec2f(-1.0, 1.0),\n            vec2f(1.0, 1.0),\n            vec2f(-1.0, -1.0),\n            vec2f(1.0, 1.0),\n            vec2f(1.0, -1.0),\n            vec2f(-1.0, -1.0),\n          );\n\n          let pos2 = array<vec2f, 6>(\n            vec2f(uni.sx, uni.sy),\n            vec2f(uni.sx + uni.wx, uni.sy),\n            vec2f(uni.sx, uni.sy + uni.wy),\n            vec2f(uni.sx + uni.wx, uni.sy),\n            vec2f(uni.sx + uni.wx, uni.sy + uni.wy),\n            vec2f(uni.sx, uni.sy + uni.wy),\n          );\n\n          var vsOutput: VSOutput;\n          let xy1 = pos1[vertexIndex];\n          let xy2 = pos2[vertexIndex];\n          vsOutput.position = vec4f(xy1, 0.0, 1.0);\n          vsOutput.texcoord = xy2 * vec2f(0.5) + vec2f(0.5);\n          return vsOutput;\n        }\n\n        @group(0) @binding(0) var ourSampler: sampler;\n        @group(0) @binding(1) var ourTexture: ${textureSnippet};\n        @group(0) @binding(2) var<uniform> uni: Uniforms;\n\n        @fragment fn fs(fsInput: VSOutput) -> @location(0) vec4f {\n          _ = uni.layer; //make sure this is used so all pipelines have the same bindings\n          let c = ${sampleSnippet};\n          let r = c.x * c.w;\n          let g = c.y * c.w;\n          let b = c.z * c.w;\n          let a = c.w;\n          return vec4f(r, g, b, a);\n        }\n      `;\n}\nconst byDevice = new WeakMap();\nexport function doPremultiplyAlpha(device, tex, xOffset, yOffset, width, height) {\n    const texture = tex.resource;\n    const tw = texture.width;\n    const th = texture.height;\n    const sx = -1.0 + xOffset / tw * 2.0;\n    const sy = -1.0 + yOffset / th * 2.0;\n    const wx = width / tw * 2.0;\n    const wy = height / th * 2.0;\n    const textureDescriptor = getGPUTextureDescriptor(tex.dimension, width, height, tex._webGPUFormat);\n    const textureTemp = device.createTexture(textureDescriptor);\n    let perDeviceInfo = byDevice.get(device);\n    if (!perDeviceInfo) {\n        perDeviceInfo = {\n            pipelineByFormatAndView: {},\n            moduleByViewType: {},\n        };\n        byDevice.set(device, perDeviceInfo);\n    }\n    let { sampler, uniformBuffer, uniformValues, } = perDeviceInfo;\n    const { pipelineByFormatAndView, moduleByViewType, } = perDeviceInfo;\n    const textureBindingViewDimension = guessTextureBindingViewDimensionForTexture(texture);\n    let module = moduleByViewType[textureBindingViewDimension];\n    if (!module) {\n        const code = getPremultiplyAlphaWGSL(textureBindingViewDimension);\n        module = device.createShaderModule({\n            label: `premultiplyAlpha for ${textureBindingViewDimension}`,\n            code,\n        });\n        moduleByViewType[textureBindingViewDimension] = module;\n    }\n    if (!sampler) {\n        sampler = device.createSampler({\n            minFilter: 'linear',\n            magFilter: 'linear',\n        });\n        uniformBuffer = device.createBuffer({\n            size: 32,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n        uniformValues = new Float32Array(8);\n        Object.assign(perDeviceInfo, { sampler, uniformBuffer, uniformValues });\n    }\n    const id = `${texture.format}.${textureBindingViewDimension}`;\n    if (!pipelineByFormatAndView[id]) {\n        pipelineByFormatAndView[id] = device.createRenderPipeline({\n            label: `premultiplyAlpha for ${textureBindingViewDimension}`,\n            layout: 'auto',\n            vertex: {\n                module,\n                entryPoint: 'vs',\n            },\n            fragment: {\n                module,\n                entryPoint: 'fs',\n                targets: [{ format: texture.format }],\n            },\n        });\n    }\n    const pipeline = pipelineByFormatAndView[id];\n    uniformValues[1] = sx;\n    uniformValues[2] = sy;\n    uniformValues[3] = wx;\n    uniformValues[4] = wy;\n    for (let baseArrayLayer = 0; baseArrayLayer < texture.depthOrArrayLayers; ++baseArrayLayer) {\n        uniformValues[0] = baseArrayLayer;\n        device.queue.writeBuffer(uniformBuffer, 0, uniformValues);\n        const bindGroup = device.createBindGroup({\n            layout: pipeline.getBindGroupLayout(0),\n            entries: [\n                { binding: 0, resource: sampler },\n                {\n                    binding: 1,\n                    resource: texture.createView({\n                        dimension: textureBindingViewDimension,\n                        baseMipLevel: 0,\n                        mipLevelCount: 1,\n                    }),\n                },\n                { binding: 2, resource: { buffer: uniformBuffer } },\n            ],\n        });\n        const renderPassDescriptor = {\n            label: 'premultiAlpha renderPass',\n            colorAttachments: [\n                {\n                    view: textureTemp.createView({\n                        dimension: '2d',\n                        baseMipLevel: 0,\n                        mipLevelCount: 1,\n                        baseArrayLayer,\n                        arrayLayerCount: 1,\n                    }),\n                    loadOp: 'clear',\n                    storeOp: 'store',\n                },\n            ],\n        };\n        const encoder = device.createCommandEncoder({\n            label: 'premultiAlpha encoder',\n        });\n        const pass = encoder.beginRenderPass(renderPassDescriptor);\n        pass.setPipeline(pipeline);\n        pass.setBindGroup(0, bindGroup);\n        pass.draw(6);\n        pass.end();\n        encoder.copyTextureToTexture({ texture: textureTemp }, { texture, origin: { x: xOffset, y: yOffset } }, { width, height, depthOrArrayLayers: 1 });\n        const commandBuffer = encoder.finish();\n        device.queue.submit([commandBuffer]);\n    }\n}\n","import { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nexport class WebGPUInternalRT {\n    constructor(colorFormat, depthStencilFormat, isCube, generateMipmap, samples, sRGB) {\n        this.isSRGB = false;\n        this.gpuMemory = 0;\n        this.formatId = '';\n        this.objectName = 'WebGPUInternalRT';\n        this._isCube = isCube;\n        this._samples = samples;\n        this.isSRGB = sRGB;\n        this._generateMipmap = generateMipmap;\n        this.colorFormat = colorFormat;\n        this.depthStencilFormat = depthStencilFormat;\n        this._textures = [];\n        if (samples > 1)\n            this._texturesResolve = [];\n        this._colorStates = [];\n        this._renderPassDescriptor = { colorAttachments: [] };\n        this._renderBundleDescriptor = { colorFormats: [] };\n        this.formatId = '<' + colorFormat + '_' + depthStencilFormat + (sRGB ? '_t' : '_f') + '>';\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    dispose() {\n        WebGPUGlobal.releaseId(this);\n        if (this._textures) {\n            for (let i = this._textures.length - 1; i > -1; i--)\n                this._textures[i].dispose();\n            this._textures.length = 0;\n        }\n        if (this._texturesResolve) {\n            for (let i = this._texturesResolve.length - 1; i > -1; i--)\n                this._texturesResolve[i].dispose();\n            this._texturesResolve.length = 0;\n        }\n        if (this._depthTexture) {\n            this._depthTexture.dispose();\n            this._depthTexture = null;\n        }\n    }\n}\n","import { Color } from \"../../../maths/Color\";\nimport { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nexport class WebGPURenderPassHelper {\n    static getDescriptor(rt, clearflag, clearColor = null, clearDepthValue = 1, clearStencilValue = 0) {\n        this.setColorAttachments(rt._renderPassDescriptor, rt, !!(clearflag & RenderClearFlag.Color), clearColor);\n        this.setDepthAttachments(rt._renderPassDescriptor, rt, !!(clearflag & RenderClearFlag.Depth), clearDepthValue, clearStencilValue);\n        return rt._renderPassDescriptor;\n    }\n    static getBundleDescriptor(rt) {\n        const desc = rt._renderBundleDescriptor;\n        const colorFormats = desc.colorFormats;\n        colorFormats.length = rt._textures.length;\n        for (let i = 0, len = rt._textures.length; i < len; i++) {\n            if (rt._textures[0]._webGPUFormat === 'depth16unorm'\n                || rt._textures[0]._webGPUFormat === 'depth24plus-stencil8'\n                || rt._textures[0]._webGPUFormat === 'depth32float') {\n                colorFormats[i] = rt._depthTexture._webGPUFormat;\n            }\n            else\n                colorFormats[i] = rt._textures[i]._webGPUFormat;\n        }\n        if (rt._textures[0]._webGPUFormat === 'depth16unorm'\n            || rt._textures[0]._webGPUFormat === 'depth24plus-stencil8'\n            || rt._textures[0]._webGPUFormat === 'depth32float') {\n            desc.depthStencilFormat = rt._textures[0]._webGPUFormat;\n        }\n        else\n            desc.depthStencilFormat = rt._depthTexture ? rt._depthTexture._webGPUFormat : undefined;\n        desc.sampleCount = rt._samples;\n        return desc;\n    }\n    static setColorAttachments(desc, rt, clear, clearColor = Color.BLACK) {\n        desc.colorAttachments = [];\n        const colorArray = desc.colorAttachments;\n        if (rt._textures[0]._webGPUFormat === 'depth16unorm'\n            || rt._textures[0]._webGPUFormat === 'depth24plus-stencil8'\n            || rt._textures[0]._webGPUFormat === 'depth32float') {\n            colorArray[0] = {\n                view: rt._depthTexture.getTextureView(),\n                loadOp: clear ? 'clear' : 'load',\n                storeOp: 'store',\n                clearValue: {\n                    r: clearColor.r,\n                    g: clearColor.g,\n                    b: clearColor.b,\n                    a: clearColor.a\n                }\n            };\n        }\n        else {\n            colorArray.length = rt._textures.length;\n            for (let i = 0, len = rt._textures.length; i < len; i++) {\n                let attachment;\n                if (rt._textures[i].multiSamplers > 1)\n                    attachment = colorArray[i] = {\n                        view: rt._textures[i].getTextureView(),\n                        resolveTarget: rt._texturesResolve[i].getTextureView(),\n                        loadOp: 'clear',\n                        storeOp: 'store'\n                    };\n                else\n                    attachment = colorArray[i] = {\n                        view: rt._textures[i].getTextureView(),\n                        loadOp: 'clear',\n                        storeOp: 'store'\n                    };\n                if (clear) {\n                    attachment.loadOp = 'clear';\n                    attachment.clearValue = {\n                        r: clearColor.r,\n                        g: clearColor.g,\n                        b: clearColor.b,\n                        a: clearColor.a\n                    };\n                }\n                else\n                    attachment.loadOp = 'load';\n            }\n        }\n    }\n    static setDepthAttachments(desc, rt, clear, clearDepthValue = 1, clearStencilValue = 0) {\n        if (rt._textures[0]._webGPUFormat === 'depth16unorm'\n            || rt._textures[0]._webGPUFormat === 'depth24plus-stencil8'\n            || rt._textures[0]._webGPUFormat === 'depth32float') {\n            const depthStencil = desc.depthStencilAttachment = { view: rt._textures[0].getTextureView() };\n            depthStencil.depthClearValue = clearDepthValue;\n            depthStencil.depthLoadOp = clear ? 'clear' : 'load';\n            depthStencil.depthStoreOp = 'store';\n            delete depthStencil.stencilClearValue;\n            delete depthStencil.stencilLoadOp;\n            delete depthStencil.stencilStoreOp;\n        }\n        else if (rt._depthTexture) {\n            const hasStencil = rt._depthTexture._webGPUFormat.indexOf('stencil8') !== -1;\n            const depthStencil = desc.depthStencilAttachment = { view: rt._depthTexture.getTextureView() };\n            if (clear) {\n                depthStencil.depthClearValue = clearDepthValue;\n                depthStencil.depthLoadOp = 'clear';\n                depthStencil.depthStoreOp = 'store';\n                if (hasStencil) {\n                    depthStencil.stencilClearValue = clearStencilValue;\n                    depthStencil.stencilLoadOp = 'clear';\n                    depthStencil.stencilStoreOp = 'store';\n                }\n                else {\n                    delete depthStencil.stencilClearValue;\n                    delete depthStencil.stencilLoadOp;\n                    delete depthStencil.stencilStoreOp;\n                }\n            }\n            else {\n                depthStencil.depthClearValue = clearDepthValue;\n                depthStencil.depthLoadOp = 'load';\n                depthStencil.depthStoreOp = 'store';\n                if (hasStencil) {\n                    depthStencil.stencilClearValue = clearStencilValue;\n                    depthStencil.stencilLoadOp = 'load';\n                    depthStencil.stencilStoreOp = 'store';\n                }\n                else {\n                    delete depthStencil.stencilClearValue;\n                    delete depthStencil.stencilLoadOp;\n                    delete depthStencil.stencilStoreOp;\n                }\n            }\n        }\n        else\n            delete desc.depthStencilAttachment;\n    }\n}\n","import { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { TextureCompareMode } from \"../../../RenderEngine/RenderEnum/TextureCompareMode\";\nimport { TextureDimension } from \"../../../RenderEngine/RenderEnum/TextureDimension\";\nimport { TextureFormat } from \"../../../RenderEngine/RenderEnum/TextureFormat\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { genMipmap } from \"./Utils/Mipmap\";\nimport { doPremultiplyAlpha } from \"./Utils/PreMultiplyAlpha\";\nimport { WebGPUInternalRT } from \"./WebGPUInternalRT\";\nimport { WebGPUInternalTex } from \"./WebGPUInternalTex\";\nimport { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPURenderPassHelper } from \"./WebGPURenderPassHelper\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nconst WebGPUCubeMap = [4, 5, 0, 1, 2, 3];\nexport var WebGPUTextureDimension;\n(function (WebGPUTextureDimension) {\n    WebGPUTextureDimension[\"D1D\"] = \"1d\";\n    WebGPUTextureDimension[\"D2D\"] = \"2d\";\n    WebGPUTextureDimension[\"D3D\"] = \"3d\";\n})(WebGPUTextureDimension || (WebGPUTextureDimension = {}));\n;\nexport var WebGPUTextureFormat;\n(function (WebGPUTextureFormat) {\n    WebGPUTextureFormat[\"r8unorm\"] = \"r8unorm\";\n    WebGPUTextureFormat[\"r8snorm\"] = \"r8snorm\";\n    WebGPUTextureFormat[\"r8uint\"] = \"r8uint\";\n    WebGPUTextureFormat[\"r8sint\"] = \"r8sint\";\n    WebGPUTextureFormat[\"r16uint\"] = \"r16uint\";\n    WebGPUTextureFormat[\"r16sint\"] = \"r16sint\";\n    WebGPUTextureFormat[\"r16float\"] = \"r16float\";\n    WebGPUTextureFormat[\"rg8unorm\"] = \"rg8unorm\";\n    WebGPUTextureFormat[\"rg8snorm\"] = \"rg8snorm\";\n    WebGPUTextureFormat[\"rg8uint\"] = \"rg8uint\";\n    WebGPUTextureFormat[\"rg8sint\"] = \"rg8sint\";\n    WebGPUTextureFormat[\"r32uint\"] = \"r32uint\";\n    WebGPUTextureFormat[\"r32sint\"] = \"r32sint\";\n    WebGPUTextureFormat[\"r32float\"] = \"r32float\";\n    WebGPUTextureFormat[\"rg16uint\"] = \"rg16uint\";\n    WebGPUTextureFormat[\"rg16sint\"] = \"rg16sint\";\n    WebGPUTextureFormat[\"rg16float\"] = \"rg16float\";\n    WebGPUTextureFormat[\"rgba8unorm\"] = \"rgba8unorm\";\n    WebGPUTextureFormat[\"rgba8unorm_srgb\"] = \"rgba8unorm-srgb\";\n    WebGPUTextureFormat[\"rgba8snorm\"] = \"rgba8snorm\";\n    WebGPUTextureFormat[\"rgba8uint\"] = \"rgba8uint\";\n    WebGPUTextureFormat[\"rgba8sint\"] = \"rgba8sint\";\n    WebGPUTextureFormat[\"bgra8unorm\"] = \"bgra8unorm\";\n    WebGPUTextureFormat[\"bgra8unorm_srgb\"] = \"bgra8unorm-srgb\";\n    WebGPUTextureFormat[\"rgb9e5ufloat\"] = \"rgb9e5ufloat\";\n    WebGPUTextureFormat[\"rgb10a2unorm\"] = \"rgb10a2unorm\";\n    WebGPUTextureFormat[\"rg11b10ufloat\"] = \"rg11b10ufloat\";\n    WebGPUTextureFormat[\"rg32uint\"] = \"rg32uint\";\n    WebGPUTextureFormat[\"rg32sint\"] = \"rg32sint\";\n    WebGPUTextureFormat[\"rg32float\"] = \"rg32float\";\n    WebGPUTextureFormat[\"rgba16uint\"] = \"rgba16uint\";\n    WebGPUTextureFormat[\"rgba16sint\"] = \"rgba16sint\";\n    WebGPUTextureFormat[\"rgba16float\"] = \"rgba16float\";\n    WebGPUTextureFormat[\"rgba32uint\"] = \"rgba32uint\";\n    WebGPUTextureFormat[\"rgba32sint\"] = \"rgba32sint\";\n    WebGPUTextureFormat[\"rgba32float\"] = \"rgba32float\";\n    WebGPUTextureFormat[\"stencil8\"] = \"stencil8\";\n    WebGPUTextureFormat[\"depth16unorm\"] = \"depth16unorm\";\n    WebGPUTextureFormat[\"depth24plus\"] = \"depth24plus\";\n    WebGPUTextureFormat[\"depth24plus_stencil8\"] = \"depth24plus-stencil8\";\n    WebGPUTextureFormat[\"depth32float\"] = \"depth32float\";\n    WebGPUTextureFormat[\"depth32float_stencil8\"] = \"depth32float-stencil8\";\n    WebGPUTextureFormat[\"bc1_rgba_unorm\"] = \"bc1-rgba-unorm\";\n    WebGPUTextureFormat[\"bc1_rgba_unorm_srgb\"] = \"bc1-rgba-unorm-srgb\";\n    WebGPUTextureFormat[\"bc2_rgba_unorm\"] = \"bc2-rgba-unorm\";\n    WebGPUTextureFormat[\"bc2_rgba_unorm_srgb\"] = \"bc2-rgba-unorm-srgb\";\n    WebGPUTextureFormat[\"bc3_rgba_unorm\"] = \"bc3-rgba-unorm\";\n    WebGPUTextureFormat[\"bc3_rgba_unorm_srgb\"] = \"bc3-rgba-unorm-srgb\";\n    WebGPUTextureFormat[\"bc4_r_unorm\"] = \"bc4-r-unorm\";\n    WebGPUTextureFormat[\"bc4_r_snorm\"] = \"bc4-r-snorm\";\n    WebGPUTextureFormat[\"bc5_rg_unorm\"] = \"bc5-rg-unorm\";\n    WebGPUTextureFormat[\"bc5_rg_snorm\"] = \"bc5-rg-snorm\";\n    WebGPUTextureFormat[\"bc6h_rgb_ufloat\"] = \"bc6h-rgb-ufloat\";\n    WebGPUTextureFormat[\"bc6h_rgb_float\"] = \"bc6h-rgb-float\";\n    WebGPUTextureFormat[\"bc7_rgba_unorm\"] = \"bc7-rgba-unorm\";\n    WebGPUTextureFormat[\"bc7_rgba_unorm_srgb\"] = \"bc7-rgba-unorm-srgb\";\n    WebGPUTextureFormat[\"etc2_rgb8unorm\"] = \"etc2-rgb8unorm\";\n    WebGPUTextureFormat[\"etc2_rgb8unorm_srgb\"] = \"etc2-rgb8unorm-srgb\";\n    WebGPUTextureFormat[\"etc2_rgb8a1unorm\"] = \"etc2-rgb8a1unorm\";\n    WebGPUTextureFormat[\"etc2_rgb8a1unorm_srgb\"] = \"etc2-rgb8a1unorm-srgb\";\n    WebGPUTextureFormat[\"etc2_rgba8unorm\"] = \"etc2-rgba8unorm\";\n    WebGPUTextureFormat[\"etc2_rgba8unorm_srgb\"] = \"etc2-rgba8unorm-srgb\";\n    WebGPUTextureFormat[\"astc_4x4_unorm\"] = \"astc-4x4-unorm\";\n    WebGPUTextureFormat[\"astc_4x4_unorm_srgb\"] = \"astc-4x4-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_5x4_unorm\"] = \"astc-5x4-unorm\";\n    WebGPUTextureFormat[\"astc_5x4_unorm_srgb\"] = \"astc-5x4-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_5x5_unorm\"] = \"astc-5x5-unorm\";\n    WebGPUTextureFormat[\"astc_5x5_unorm_srgb\"] = \"astc-5x5-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_6x5_unorm\"] = \"astc-6x5-unorm\";\n    WebGPUTextureFormat[\"astc_6x5_unorm_srgb\"] = \"astc-6x5-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_6x6_unorm\"] = \"astc-6x6-unorm\";\n    WebGPUTextureFormat[\"astc_6x6_unorm_srgb\"] = \"astc-6x6-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_8x5_unorm\"] = \"astc-8x5-unorm\";\n    WebGPUTextureFormat[\"astc_8x5_unorm_srgb\"] = \"astc-8x5-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_8x6_unorm\"] = \"astc-8x6-unorm\";\n    WebGPUTextureFormat[\"astc_8x6_unorm_srgb\"] = \"astc-8x6-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_8x8_unorm\"] = \"astc-8x8-unorm\";\n    WebGPUTextureFormat[\"astc_8x8_unorm_srgb\"] = \"astc-8x8-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_10x5_unorm\"] = \"astc-10x5-unorm\";\n    WebGPUTextureFormat[\"astc_10x5_unorm_srgb\"] = \"astc-10x5-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_10x6_unorm\"] = \"astc-10x6-unorm\";\n    WebGPUTextureFormat[\"astc_10x6_unorm_srgb\"] = \"astc-10x6-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_10x8_unorm\"] = \"astc-10x8-unorm\";\n    WebGPUTextureFormat[\"astc_10x8_unorm_srgb\"] = \"astc-10x8-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_10x10_unorm\"] = \"astc-10x10-unorm\";\n    WebGPUTextureFormat[\"astc_10x10_unorm_srgb\"] = \"astc-10x10-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_12x10_unorm\"] = \"astc-12x10-unorm\";\n    WebGPUTextureFormat[\"astc_12x10_unorm_srgb\"] = \"astc-12x10-unorm-srgb\";\n    WebGPUTextureFormat[\"astc_12x12_unorm\"] = \"astc-12x12-unorm\";\n    WebGPUTextureFormat[\"astc_12x12_unorm_srgb\"] = \"astc-12x12-unorm-srgb\";\n})(WebGPUTextureFormat || (WebGPUTextureFormat = {}));\n;\nexport class WebGPUTextureContext {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    createTexture3DInternal(dimension, width, height, depth, format, generateMipmap, sRGB, premultipliedAlpha) {\n        let useSRGBExt = this._isSRGBFormat(format) || (sRGB && this._supportSRGB(format, generateMipmap));\n        if (premultipliedAlpha) {\n            useSRGBExt = false;\n        }\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n        const pixelByteSize = this._getGPUTexturePixelByteSize(format);\n        const gpuTextureFormat = this._getGPUTextureFormat(format, useSRGBExt);\n        const textureDescriptor = this._getGPUTextureDescriptor(dimension, width, height, gpuTextureFormat, depth, generateMipmap, 1, this._isCompressTexture(format));\n        if (generateMipmap)\n            textureDescriptor.mipLevelCount = 1 + Math.log2(Math.max(width, height)) | 0;\n        textureDescriptor.label = 'texture array';\n        const gpuTexture = this._engine.getDevice().createTexture(textureDescriptor);\n        const internalTex = new WebGPUInternalTex(width, height, depth, dimension, generateMipmap, 1, useSRGBExt, gammaCorrection);\n        internalTex.format = format;\n        internalTex.resource = gpuTexture;\n        internalTex._webGPUFormat = gpuTextureFormat;\n        internalTex.gpuMemory = (width * height * depth * pixelByteSize * (generateMipmap ? 1.33333 : 1)) | 0;\n        WebGPUGlobal.action(internalTex, 'allocMemory | texture', internalTex.gpuMemory);\n        return internalTex;\n    }\n    async setTexture3DImageData(texture, source, depth, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        const device = WebGPURenderEngine._instance.getDevice();\n        for (let i = 0; i < depth; i++) {\n            const imageBitmapSource = await createImageBitmap(source[i]);\n            const image = { source: imageBitmapSource, flipY: invertY, origin: [0, 0] };\n            const textureCopyView = {\n                texture: texture.resource,\n                origin: {\n                    x: 0,\n                    y: 0,\n                },\n                mipLevel: 0,\n                premultipliedAlpha: premultiplyAlpha,\n                colorSpace: texture.useSRGBLoad ? \"srgb\" : undefined,\n            };\n            const copySize = { width: source[i].width, height: source[i].height, depthOrArrayLayers: i };\n            device.queue.copyExternalImageToTexture(image, textureCopyView, copySize);\n        }\n        if (this._isTextureNeedGenMipmap(texture))\n            genMipmap(device, texture.resource);\n    }\n    setTexture3DPixelsData(texture, source, depth, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        const imageCopy = {\n            texture: texture.resource,\n            mipLevel: 0,\n            premultipliedAlpha: premultiplyAlpha\n        };\n        const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n        const bytesPerRow = Math.ceil(texture.width / block.width) * block.length;\n        const height = texture.height;\n        const dataLayout = {\n            offset: 0,\n            bytesPerRow: bytesPerRow,\n            rowsPerImage: height\n        };\n        const size = {\n            width: Math.ceil(texture.width / block.width) * block.width,\n            height: Math.ceil(height / block.height) * block.height,\n            depthOrArrayLayers: depth\n        };\n        const device = WebGPURenderEngine._instance.getDevice();\n        device.queue.writeTexture(imageCopy, source.buffer, dataLayout, size);\n        if (premultiplyAlpha)\n            doPremultiplyAlpha(device, texture, 0, 0, texture.width, texture.height);\n        if (this._isTextureNeedGenMipmap(texture))\n            genMipmap(device, texture.resource);\n    }\n    setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        const imageCopy = {\n            texture: texture.resource,\n            mipLevel: mipmapLevel,\n            premultipliedAlpha: premultiplyAlpha,\n            origin: {\n                x: xOffset,\n                y: yOffset,\n                z: zOffset,\n            },\n        };\n        const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n        const bytesPerRow = Math.ceil(width / block.width) * block.length;\n        const dataLayout = {\n            offset: 0,\n            bytesPerRow: bytesPerRow,\n            rowsPerImage: height\n        };\n        const size = {\n            width: Math.ceil(width / block.width) * block.width,\n            height: Math.ceil(height / block.height) * block.height,\n            depthOrArrayLayers: depth\n        };\n        const device = WebGPURenderEngine._instance.getDevice();\n        device.queue.writeTexture(imageCopy, source.buffer, dataLayout, size);\n        if (premultiplyAlpha)\n            doPremultiplyAlpha(device, texture, xOffset, yOffset, width, height);\n        if (generateMipmap && this._isTextureNeedGenMipmap(texture))\n            genMipmap(device, texture.resource);\n    }\n    _getGPUTexturePixelByteSize(format) {\n        switch (format) {\n            case TextureFormat.R5G6B5:\n                return 2;\n            case TextureFormat.R8G8B8:\n                return 3;\n            case TextureFormat.R8G8B8A8:\n                return 4;\n            case TextureFormat.R32G32B32:\n                return 12;\n            case TextureFormat.R32G32B32A32:\n                return 16;\n            case TextureFormat.R16G16B16:\n                return 6;\n            case TextureFormat.R16G16B16A16:\n                return 8;\n            default:\n                return 4;\n        }\n    }\n    _getGPURenderTexturePixelByteSize(format) {\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n                return 3;\n            case RenderTargetFormat.R8G8B8A8:\n                return 4;\n            case RenderTargetFormat.R32G32B32:\n                return 12;\n            case RenderTargetFormat.R32G32B32A32:\n                return 16;\n            case RenderTargetFormat.R16G16B16:\n                return 6;\n            case RenderTargetFormat.R16G16B16A16:\n                return 8;\n            case RenderTargetFormat.DEPTH_16:\n                return 2;\n            case RenderTargetFormat.DEPTH_32:\n                return 4;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                return 4;\n            case RenderTargetFormat.DEPTHSTENCIL_24_Plus:\n                return 4;\n            case RenderTargetFormat.STENCIL_8:\n                return 1;\n            default:\n                return 4;\n        }\n    }\n    _getGPUTextureFormat(format, useSRGB) {\n        let webgpuTextureFormat = WebGPUTextureFormat.rgba8uint;\n        switch (format) {\n            case TextureFormat.R5G6B5:\n                return null;\n            case TextureFormat.R8G8B8:\n            case TextureFormat.R8G8B8A8:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.rgba8unorm : WebGPUTextureFormat.rgba8unorm_srgb;\n                break;\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R32G32B32A32:\n                webgpuTextureFormat = WebGPUTextureFormat.rgba32float;\n                break;\n            case TextureFormat.R16G16B16:\n            case TextureFormat.R16G16B16A16:\n                webgpuTextureFormat = WebGPUTextureFormat.rgba16float;\n                break;\n            case TextureFormat.DXT1:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.bc1_rgba_unorm : WebGPUTextureFormat.bc1_rgba_unorm_srgb;\n                break;\n            case TextureFormat.DXT3:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.bc2_rgba_unorm : WebGPUTextureFormat.bc2_rgba_unorm_srgb;\n                break;\n            case TextureFormat.DXT5:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.bc3_rgba_unorm : WebGPUTextureFormat.bc3_rgba_unorm_srgb;\n                break;\n            case TextureFormat.ETC2RGBA:\n            case TextureFormat.ETC1RGB:\n            case TextureFormat.ETC2RGB:\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.ETC2SRGB_Alpha8:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.etc2_rgba8unorm : WebGPUTextureFormat.etc2_rgba8unorm_srgb;\n                break;\n            case TextureFormat.ASTC4x4:\n            case TextureFormat.ASTC4x4SRGB:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.astc_4x4_unorm : WebGPUTextureFormat.astc_4x4_unorm_srgb;\n                break;\n            case TextureFormat.ASTC6x6:\n            case TextureFormat.ASTC6x6SRGB:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.astc_6x6_unorm : WebGPUTextureFormat.astc_6x6_unorm_srgb;\n                break;\n            case TextureFormat.ASTC8x8:\n            case TextureFormat.ASTC8x8SRGB:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.astc_8x8_unorm : WebGPUTextureFormat.astc_8x8_unorm_srgb;\n                break;\n            case TextureFormat.ASTC10x10:\n            case TextureFormat.ASTC10x10SRGB:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.astc_10x10_unorm : WebGPUTextureFormat.astc_10x10_unorm_srgb;\n                break;\n            case TextureFormat.ASTC12x12:\n            case TextureFormat.ASTC12x12SRGB:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.astc_12x12_unorm : WebGPUTextureFormat.astc_12x12_unorm_srgb;\n                break;\n            default:\n                throw \"unknow TextureFormat\";\n        }\n        return webgpuTextureFormat;\n    }\n    _getGPURenderTargetFormat(format, useSRGB) {\n        let webgpuTextureFormat = WebGPUTextureFormat.rgba8uint;\n        switch (format) {\n            case RenderTargetFormat.R8G8B8:\n            case RenderTargetFormat.R8G8B8A8:\n                webgpuTextureFormat = !useSRGB ? WebGPUTextureFormat.bgra8unorm : WebGPUTextureFormat.bgra8unorm_srgb;\n                break;\n            case RenderTargetFormat.R32G32B32:\n            case RenderTargetFormat.R32G32B32A32:\n                webgpuTextureFormat = WebGPUTextureFormat.rgba32float;\n                break;\n            case RenderTargetFormat.R16G16B16:\n            case RenderTargetFormat.R16G16B16A16:\n                webgpuTextureFormat = WebGPUTextureFormat.rgba16float;\n                break;\n            case RenderTargetFormat.DEPTH_16:\n                webgpuTextureFormat = WebGPUTextureFormat.depth16unorm;\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                webgpuTextureFormat = WebGPUTextureFormat.depth32float;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                webgpuTextureFormat = WebGPUTextureFormat.depth24plus_stencil8;\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_Plus:\n                webgpuTextureFormat = WebGPUTextureFormat.depth24plus;\n                break;\n            case RenderTargetFormat.STENCIL_8:\n                webgpuTextureFormat = WebGPUTextureFormat.stencil8;\n                break;\n            default:\n                throw \"unknow TextureFormat\";\n        }\n        return webgpuTextureFormat;\n    }\n    _isCompressTexture(format) {\n        switch (format) {\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n            case TextureFormat.ETC1RGB:\n            case TextureFormat.ETC2RGB:\n            case TextureFormat.ETC2RGBA:\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.ETC2SRGB_Alpha8:\n            case TextureFormat.ETC2RGB_Alpha1:\n            case TextureFormat.ETC2SRGB_Alpha1:\n            case TextureFormat.PVRTCRGB_2BPPV:\n            case TextureFormat.PVRTCRGBA_2BPPV:\n            case TextureFormat.PVRTCRGB_4BPPV:\n            case TextureFormat.PVRTCRGBA_4BPPV:\n            case TextureFormat.ASTC4x4:\n            case TextureFormat.ASTC4x4SRGB:\n            case TextureFormat.ASTC6x6:\n            case TextureFormat.ASTC6x6SRGB:\n            case TextureFormat.ASTC8x8:\n            case TextureFormat.ASTC8x8SRGB:\n            case TextureFormat.ASTC10x10:\n            case TextureFormat.ASTC10x10SRGB:\n            case TextureFormat.ASTC12x12:\n            case TextureFormat.ASTC12x12SRGB:\n            case TextureFormat.KTXTEXTURE:\n            case TextureFormat.PVRTEXTURE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    _getFormatPixelsParams(format) {\n        const formatParams = {\n            channels: 0,\n            bytesPerPixel: 0,\n            dataTypedCons: Uint8Array,\n            typedSize: 1\n        };\n        switch (format) {\n            case TextureFormat.R8G8B8A8:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 4;\n                formatParams.dataTypedCons = Uint8Array;\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R8G8B8:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 3;\n                formatParams.dataTypedCons = Uint8Array;\n                formatParams.typedSize = 1;\n                return formatParams;\n            case TextureFormat.R5G6B5:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 2;\n                formatParams.dataTypedCons = Uint16Array;\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 6;\n                formatParams.dataTypedCons = Uint16Array;\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R16G16B16A16:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 8;\n                formatParams.dataTypedCons = Uint16Array;\n                formatParams.typedSize = 2;\n                return formatParams;\n            case TextureFormat.R32G32B32:\n                formatParams.channels = 3;\n                formatParams.bytesPerPixel = 12;\n                formatParams.dataTypedCons = Float32Array;\n                formatParams.typedSize = 4;\n                return formatParams;\n            case TextureFormat.R32G32B32A32:\n                formatParams.channels = 4;\n                formatParams.bytesPerPixel = 16;\n                formatParams.dataTypedCons = Float32Array;\n                formatParams.typedSize = 4;\n                return formatParams;\n            default:\n                return formatParams;\n        }\n    }\n    _getGPUTextureDescriptor(dimension, width, height, gpuFormat, layerCount, generateMipmap, multiSamples, isCompressTexture) {\n        const textureSize = {\n            width: width,\n            height: height,\n            depthOrArrayLayers: layerCount,\n        };\n        const canCopy = !isCompressTexture;\n        let usage = GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST;\n        const mipLevelCount = generateMipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\n        if (canCopy)\n            usage |= GPUTextureUsage.RENDER_ATTACHMENT;\n        let dimensionType;\n        switch (dimension) {\n            case TextureDimension.Tex2D:\n            case TextureDimension.Cube:\n            case TextureDimension.Texture2DArray:\n                dimensionType = WebGPUTextureDimension.D2D;\n                break;\n            case TextureDimension.Tex3D:\n                dimensionType = WebGPUTextureDimension.D3D;\n                break;\n            default:\n                throw \"DimensionType Unknown format\";\n        }\n        const textureDescriptor = {\n            size: textureSize,\n            mipLevelCount,\n            sampleCount: multiSamples,\n            dimension: dimensionType,\n            format: gpuFormat,\n            usage,\n        };\n        return textureDescriptor;\n    }\n    _canGenerateMipmapByFormat(format) {\n        if (this._isCompressTexture(format))\n            return false;\n        switch (format) {\n            case TextureFormat.R8G8B8:\n            case TextureFormat.R8G8B8A8:\n            case TextureFormat.R5G6B5:\n            case TextureFormat.Alpha8:\n            case TextureFormat.R32G32B32A32:\n            case TextureFormat.R32G32B32:\n            case TextureFormat.R16G16B16A16:\n            case TextureFormat.R16G16B16:\n                return true;\n            default:\n                return false;\n        }\n    }\n    _isTextureNeedGenMipmap(texture) {\n        const tex = texture;\n        return (tex.mipmap && !tex.mipmapLoaded && this._canGenerateMipmapByFormat(tex.format));\n    }\n    createTextureInternal(dimension, width, height, format, generateMipmap, sRGB, premultipliedAlpha) {\n        let layerCount;\n        switch (dimension) {\n            case TextureDimension.Tex2D:\n                layerCount = 1;\n                break;\n            case TextureDimension.Cube:\n                layerCount = 6;\n                break;\n        }\n        if (dimension === TextureDimension.Tex3D) {\n            throw \"error\";\n        }\n        let useSRGBExt = this._isSRGBFormat(format) || (sRGB && this._supportSRGB(format, generateMipmap));\n        if (premultipliedAlpha) {\n            useSRGBExt = false;\n        }\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB) {\n            gammaCorrection = 2.2;\n        }\n        const pixelByteSize = this._getGPUTexturePixelByteSize(format);\n        const gpuTextureFormat = this._getGPUTextureFormat(format, useSRGBExt);\n        const textureDescriptor = this._getGPUTextureDescriptor(dimension, width, height, gpuTextureFormat, layerCount, generateMipmap, 1, this._isCompressTexture(format));\n        if (generateMipmap)\n            textureDescriptor.mipLevelCount = 1 + Math.log2(Math.max(width, height)) | 0;\n        layerCount === 6 ? textureDescriptor.label = 'textureCube' : textureDescriptor.label = 'texture';\n        const gpuTexture = this._engine.getDevice().createTexture(textureDescriptor);\n        const internalTex = new WebGPUInternalTex(width, height, 1, dimension, generateMipmap, 1, useSRGBExt, gammaCorrection);\n        internalTex.format = format;\n        internalTex.resource = gpuTexture;\n        internalTex._webGPUFormat = gpuTextureFormat;\n        internalTex.gpuMemory = (width * height * pixelByteSize * (generateMipmap ? 1.33333 : 1)) | 0;\n        WebGPUGlobal.action(internalTex, 'allocMemory | texture', internalTex.gpuMemory);\n        return internalTex;\n    }\n    async setTextureImageData(texture, source, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        const imageBitmapSource = await createImageBitmap(source);\n        const image = { source: imageBitmapSource, flipY: invertY, origin: [0, 0] };\n        const textureCopyView = {\n            texture: texture.resource,\n            origin: {\n                x: 0,\n                y: 0,\n            },\n            mipLevel: 0,\n            premultipliedAlpha: premultiplyAlpha,\n            colorSpace: texture.useSRGBLoad ? \"srgb\" : undefined,\n        };\n        const copySize = { width: source.width, height: source.height };\n        const device = WebGPURenderEngine._instance.getDevice();\n        device.queue.copyExternalImageToTexture(image, textureCopyView, copySize);\n        if (this._isTextureNeedGenMipmap(texture))\n            genMipmap(device, texture.resource);\n    }\n    setTextureSubImageData(texture, source, x, y, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        const image = { source: source, flipY: invertY, origin: { x: 0, y: 0 } };\n        const textureCopyView = {\n            texture: texture.resource,\n            origin: {\n                x: x,\n                y: y,\n            },\n            mipLevel: 0,\n            premultipliedAlpha: premultiplyAlpha,\n            colorSpace: texture.useSRGBLoad ? \"srgb\" : undefined\n        };\n        const copySize = { width: source.width, height: source.height };\n        WebGPURenderEngine._instance.getDevice().queue.copyExternalImageToTexture(image, textureCopyView, copySize);\n    }\n    _getBlockInformationFromFormat(format) {\n        switch (format) {\n            case WebGPUTextureFormat.r8unorm:\n            case WebGPUTextureFormat.r8snorm:\n            case WebGPUTextureFormat.r8uint:\n            case WebGPUTextureFormat.r8sint:\n                return { width: 1, height: 1, length: 1 };\n            case WebGPUTextureFormat.r16uint:\n            case WebGPUTextureFormat.r16sint:\n            case WebGPUTextureFormat.r16float:\n            case WebGPUTextureFormat.rg8unorm:\n            case WebGPUTextureFormat.rg8snorm:\n            case WebGPUTextureFormat.rg8uint:\n            case WebGPUTextureFormat.rg8sint:\n                return { width: 1, height: 1, length: 2 };\n            case WebGPUTextureFormat.r32uint:\n            case WebGPUTextureFormat.r32sint:\n            case WebGPUTextureFormat.r32float:\n            case WebGPUTextureFormat.rg16uint:\n            case WebGPUTextureFormat.rg16sint:\n            case WebGPUTextureFormat.rg16float:\n            case WebGPUTextureFormat.rgba8unorm:\n            case WebGPUTextureFormat.rgba8unorm_srgb:\n            case WebGPUTextureFormat.rgba8snorm:\n            case WebGPUTextureFormat.rgba8uint:\n            case WebGPUTextureFormat.rgba8sint:\n            case WebGPUTextureFormat.bgra8unorm:\n            case WebGPUTextureFormat.bgra8unorm_srgb:\n            case WebGPUTextureFormat.rgb9e5ufloat:\n            case WebGPUTextureFormat.rgb10a2unorm:\n            case WebGPUTextureFormat.rg11b10ufloat:\n                return { width: 1, height: 1, length: 4 };\n            case WebGPUTextureFormat.rg32uint:\n            case WebGPUTextureFormat.rg32sint:\n            case WebGPUTextureFormat.rg32float:\n            case WebGPUTextureFormat.rgba16uint:\n            case WebGPUTextureFormat.rgba16sint:\n            case WebGPUTextureFormat.rgba16float:\n                return { width: 1, height: 1, length: 8 };\n            case WebGPUTextureFormat.rgba32uint:\n            case WebGPUTextureFormat.rgba32sint:\n            case WebGPUTextureFormat.rgba32float:\n                return { width: 1, height: 1, length: 16 };\n            case WebGPUTextureFormat.stencil8:\n                throw \"No fixed size for Stencil8 format!\";\n            case WebGPUTextureFormat.depth16unorm:\n                return { width: 1, height: 1, length: 2 };\n            case WebGPUTextureFormat.depth24plus:\n                throw \"No fixed size for Depth24Plus format!\";\n            case WebGPUTextureFormat.depth24plus_stencil8:\n                return { width: 1, height: 1, length: 4 };\n            case WebGPUTextureFormat.depth32float:\n                return { width: 1, height: 1, length: 4 };\n            case WebGPUTextureFormat.depth32float_stencil8:\n                return { width: 1, height: 1, length: 5 };\n            case WebGPUTextureFormat.bc7_rgba_unorm:\n            case WebGPUTextureFormat.bc7_rgba_unorm_srgb:\n            case WebGPUTextureFormat.bc6h_rgb_float:\n            case WebGPUTextureFormat.bc6h_rgb_ufloat:\n            case WebGPUTextureFormat.bc5_rg_unorm:\n            case WebGPUTextureFormat.bc5_rg_snorm:\n            case WebGPUTextureFormat.bc3_rgba_unorm:\n            case WebGPUTextureFormat.bc3_rgba_unorm_srgb:\n            case WebGPUTextureFormat.bc2_rgba_unorm:\n            case WebGPUTextureFormat.bc2_rgba_unorm_srgb:\n                return { width: 4, height: 4, length: 16 };\n            case WebGPUTextureFormat.bc4_r_unorm:\n            case WebGPUTextureFormat.bc4_r_snorm:\n            case WebGPUTextureFormat.bc1_rgba_unorm:\n            case WebGPUTextureFormat.bc1_rgba_unorm_srgb:\n                return { width: 4, height: 4, length: 8 };\n            case WebGPUTextureFormat.etc2_rgb8unorm:\n            case WebGPUTextureFormat.etc2_rgb8unorm_srgb:\n            case WebGPUTextureFormat.etc2_rgb8a1unorm:\n            case WebGPUTextureFormat.etc2_rgb8a1unorm_srgb:\n                return { width: 4, height: 4, length: 8 };\n            case WebGPUTextureFormat.etc2_rgb8unorm:\n            case WebGPUTextureFormat.etc2_rgba8unorm_srgb:\n                return { width: 4, height: 4, length: 16 };\n            case WebGPUTextureFormat.astc_4x4_unorm:\n            case WebGPUTextureFormat.astc_4x4_unorm_srgb:\n                return { width: 4, height: 4, length: 16 };\n            case WebGPUTextureFormat.astc_5x4_unorm:\n            case WebGPUTextureFormat.astc_5x4_unorm_srgb:\n                return { width: 5, height: 4, length: 16 };\n            case WebGPUTextureFormat.astc_5x5_unorm:\n            case WebGPUTextureFormat.astc_5x5_unorm_srgb:\n                return { width: 5, height: 5, length: 16 };\n            case WebGPUTextureFormat.astc_6x5_unorm:\n            case WebGPUTextureFormat.astc_6x5_unorm_srgb:\n                return { width: 6, height: 5, length: 16 };\n            case WebGPUTextureFormat.astc_6x6_unorm:\n            case WebGPUTextureFormat.astc_6x6_unorm_srgb:\n                return { width: 6, height: 6, length: 16 };\n            case WebGPUTextureFormat.astc_8x5_unorm:\n            case WebGPUTextureFormat.astc_8x5_unorm_srgb:\n                return { width: 8, height: 5, length: 16 };\n            case WebGPUTextureFormat.astc_8x6_unorm:\n            case WebGPUTextureFormat.astc_8x6_unorm_srgb:\n                return { width: 8, height: 6, length: 16 };\n            case WebGPUTextureFormat.astc_8x8_unorm:\n            case WebGPUTextureFormat.astc_8x8_unorm_srgb:\n                return { width: 8, height: 8, length: 16 };\n            case WebGPUTextureFormat.astc_10x5_unorm:\n            case WebGPUTextureFormat.astc_10x5_unorm_srgb:\n                return { width: 10, height: 5, length: 16 };\n            case WebGPUTextureFormat.astc_10x6_unorm:\n            case WebGPUTextureFormat.astc_10x6_unorm_srgb:\n                return { width: 10, height: 6, length: 16 };\n            case WebGPUTextureFormat.astc_10x8_unorm:\n            case WebGPUTextureFormat.astc_10x8_unorm_srgb:\n                return { width: 10, height: 8, length: 16 };\n            case WebGPUTextureFormat.astc_10x10_unorm:\n            case WebGPUTextureFormat.astc_10x10_unorm_srgb:\n                return { width: 10, height: 10, length: 16 };\n            case WebGPUTextureFormat.astc_12x10_unorm:\n            case WebGPUTextureFormat.astc_12x10_unorm_srgb:\n                return { width: 12, height: 10, length: 16 };\n            case WebGPUTextureFormat.astc_12x12_unorm:\n            case WebGPUTextureFormat.astc_12x12_unorm_srgb:\n                return { width: 12, height: 12, length: 16 };\n        }\n        return { width: 1, height: 1, length: 4 };\n    }\n    setTexturePixelsData(texture, source, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        const imageCopy = {\n            texture: texture.resource,\n            mipLevel: 0,\n            premultipliedAlpha: premultiplyAlpha,\n        };\n        const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n        const bytesPerRow = Math.ceil(texture.width / block.width) * block.length;\n        const height = texture.height;\n        const dataLayout = {\n            offset: 0,\n            bytesPerRow: bytesPerRow,\n            rowsPerImage: height\n        };\n        const size = {\n            width: Math.ceil(texture.width / block.width) * block.width,\n            height: Math.ceil(height / block.height) * block.height,\n        };\n        const device = WebGPURenderEngine._instance.getDevice();\n        device.queue.writeTexture(imageCopy, source.buffer, dataLayout, size);\n        if (premultiplyAlpha)\n            doPremultiplyAlpha(device, texture, 0, 0, texture.width, texture.height);\n        if (this._isTextureNeedGenMipmap(texture))\n            genMipmap(device, texture.resource);\n    }\n    setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        const imageCopy = {\n            texture: texture.resource,\n            mipLevel: mipmapLevel,\n            premultipliedAlpha: premultiplyAlpha,\n            origin: {\n                x: xOffset,\n                y: yOffset,\n            },\n        };\n        const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n        const bytesPerRow = Math.ceil(width / block.width) * block.length;\n        const dataLayout = {\n            offset: 0,\n            bytesPerRow: bytesPerRow,\n            rowsPerImage: height\n        };\n        const size = {\n            width: Math.ceil(width / block.width) * block.width,\n            height: Math.ceil(height / block.height) * block.height,\n        };\n        const device = WebGPURenderEngine._instance.getDevice();\n        device.queue.writeTexture(imageCopy, source.buffer, dataLayout, size);\n        if (premultiplyAlpha)\n            doPremultiplyAlpha(device, texture, xOffset, yOffset, width, height);\n        if (generateMipmap && this._isTextureNeedGenMipmap(texture))\n            genMipmap(device, texture.resource);\n    }\n    setTextureDDSData(texture, ddsInfo) {\n        const device = WebGPURenderEngine._instance.getDevice();\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = Math.min(ddsInfo.mipmapCount, texture.mipmapCount);\n        let compressed = ddsInfo.compressed;\n        let width = texture.width;\n        let height = texture.height;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let formatParams = this._getFormatPixelsParams(ddsInfo.format);\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\n        let dataTypeConstur = formatParams.dataTypedCons;\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        for (let index = 0; index < mipmapCount; index++) {\n            const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n            const bytesPerRow = Math.ceil(mipmapWidth / block.width) * block.length;\n            const size = {\n                width: Math.ceil(mipmapWidth / block.width) * block.width,\n                height: Math.ceil(mipmapHeight / block.height) * block.height,\n            };\n            const imageCopy = {\n                texture: texture.resource,\n                mipLevel: index,\n                premultipliedAlpha: premultiplyAlpha\n            };\n            const dataLayout = {\n                offset: 0,\n                bytesPerRow: bytesPerRow,\n                rowsPerImage: mipmapHeight\n            };\n            if (compressed) {\n                let dataLength = (((Math.max(4, mipmapWidth) / 4) * Math.max(4, mipmapHeight)) / 4) * blockBytes;\n                let sourceData = new Uint8Array(source, dataOffset, dataLength);\n                device.queue.writeTexture(imageCopy, sourceData, dataLayout, size);\n                dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n            }\n            else {\n                let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\n                let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\n                device.queue.writeTexture(imageCopy, sourceData, dataLayout, size);\n                dataOffset += dataLength * channelsByte;\n            }\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        texture.mipmapLoaded = true;\n    }\n    setTextureKTXData(texture, ktxInfo) {\n        const device = WebGPURenderEngine._instance.getDevice();\n        let premultipliedAlpha = false;\n        let invertY = false;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapCount = Math.min(ktxInfo.mipmapCount, texture.mipmapCount);\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        const imageSize = new Int32Array(source, dataOffset, 1)[0];\n        dataOffset += 4;\n        const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n        const bytesPerRow = Math.ceil(mipmapWidth / block.width) * block.length;\n        const size = {\n            width: Math.ceil(mipmapWidth / block.width) * block.width,\n            height: Math.ceil(mipmapHeight / block.height) * block.height,\n        };\n        const imageCopy = {\n            texture: texture.resource,\n            mipLevel: 0,\n            premultipliedAlpha: premultipliedAlpha\n        };\n        let sourceData = new Uint8Array(source, dataOffset, imageSize);\n        const dataLayout = {\n            offset: 0,\n            bytesPerRow: bytesPerRow,\n            rowsPerImage: mipmapHeight\n        };\n        device.queue.writeTexture(imageCopy, sourceData, dataLayout, size);\n        dataOffset += imageSize;\n        dataOffset += 3 - ((imageSize + 3) % 4);\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        if (this._isTextureNeedGenMipmap(texture))\n            genMipmap(WebGPURenderEngine._instance.getDevice(), texture.resource);\n    }\n    setTextureHDRData(texture, hdrInfo) {\n        const hdrPixelData = hdrInfo.readScanLine();\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\n    }\n    setCubeImageData(texture, source, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        for (let index = 0; index < 6; index++) {\n            const sourceData = source[index];\n            if (sourceData) {\n                const image = { source: sourceData, flipY: invertY, origin: { x: 0, y: 0 } };\n                const textureCopyView = {\n                    texture: texture.resource,\n                    origin: {\n                        x: 0,\n                        y: 0,\n                        z: WebGPUCubeMap[index]\n                    },\n                    mipLevel: 0,\n                    premultipliedAlpha: premultiplyAlpha,\n                    colorSpace: texture.useSRGBLoad ? \"srgb\" : undefined\n                };\n                const copySize = { width: sourceData.width, height: sourceData.height };\n                WebGPURenderEngine._instance.getDevice().queue.copyExternalImageToTexture(image, textureCopyView, copySize);\n            }\n        }\n        if (premultiplyAlpha)\n            doPremultiplyAlpha(WebGPURenderEngine._instance.getDevice(), texture, 0, 0, texture.width, texture.height);\n        if (this._isTextureNeedGenMipmap(texture))\n            genMipmap(WebGPURenderEngine._instance.getDevice(), texture.resource);\n    }\n    setCubePixelsData(texture, source, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        for (let index = 0; index < 6; index++) {\n            const sourceData = source[index];\n            if (sourceData) {\n                const imageCopy = {\n                    texture: texture.resource,\n                    mipLevel: 0,\n                    premultipliedAlpha: premultiplyAlpha,\n                    origin: {\n                        x: 0,\n                        y: 0,\n                        z: WebGPUCubeMap[index]\n                    }\n                };\n                const width = texture.width;\n                const height = texture.height;\n                const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n                const bytesPerRow = Math.ceil(width / block.width) * block.length;\n                const dataLayout = {\n                    offset: 0,\n                    bytesPerRow: bytesPerRow,\n                    rowsPerImage: height\n                };\n                const size = {\n                    width: Math.ceil(width / block.width) * block.width,\n                    height: Math.ceil(height / block.height) * block.height,\n                    depthOrArrayLayers: 1\n                };\n                WebGPURenderEngine._instance.getDevice().queue.writeTexture(imageCopy, sourceData.buffer, dataLayout, size);\n            }\n        }\n        if (premultiplyAlpha)\n            doPremultiplyAlpha(WebGPURenderEngine._instance.getDevice(), texture, 0, 0, texture.width, texture.height);\n        if (this._isTextureNeedGenMipmap(texture))\n            genMipmap(WebGPURenderEngine._instance.getDevice(), texture.resource);\n    }\n    setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY) {\n        if (!source)\n            return;\n        generateMipmap = generateMipmap && mipmapLevel === 0;\n        for (let index = 0; index < 6; index++) {\n            const sourceData = source[index];\n            if (sourceData) {\n                const imageCopy = {\n                    texture: texture.resource,\n                    mipLevel: mipmapLevel,\n                    premultipliedAlpha: premultiplyAlpha,\n                    origin: {\n                        x: xOffset,\n                        y: yOffset,\n                        z: WebGPUCubeMap[index]\n                    }\n                };\n                const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n                const bytesPerRow = Math.ceil(width / block.width) * block.length;\n                const dataLayout = {\n                    offset: 0,\n                    bytesPerRow: bytesPerRow,\n                    rowsPerImage: height\n                };\n                const size = {\n                    width: Math.ceil(width / block.width) * block.width,\n                    height: Math.ceil(height / block.height) * block.height,\n                    depthOrArrayLayers: 1\n                };\n                WebGPURenderEngine._instance.getDevice().queue.writeTexture(imageCopy, sourceData.buffer, dataLayout, size);\n            }\n        }\n        if (premultiplyAlpha)\n            doPremultiplyAlpha(WebGPURenderEngine._instance.getDevice(), texture, xOffset, yOffset, width, height);\n        if (generateMipmap && this._isTextureNeedGenMipmap(texture))\n            genMipmap(WebGPURenderEngine._instance.getDevice(), texture.resource);\n    }\n    setCubeKTXData(texture, ktxInfo) {\n        const device = WebGPURenderEngine._instance.getDevice();\n        let premultipliedAlpha = false;\n        let invertY = false;\n        let mipmapCount = Math.min(ktxInfo.mipmapCount, texture.mipmapCount);\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let width = texture.width;\n        let height = texture.height;\n        let mipmapWidth = width;\n        let mipmapHeight = height;\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\n        let source = ktxInfo.source;\n        let compressed = ktxInfo.compress;\n        for (let index = 0; index < mipmapCount; index++) {\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\n            dataOffset += 4;\n            for (let face = 0; face < 6; face++) {\n                const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n                const bytesPerRow = Math.ceil(mipmapWidth / block.width) * block.length;\n                const size = {\n                    width: Math.ceil(mipmapWidth / block.width) * block.width,\n                    height: Math.ceil(mipmapHeight / block.height) * block.height,\n                    depthOrArrayLayers: 1\n                };\n                const imageCopy = {\n                    texture: texture.resource,\n                    mipLevel: index,\n                    premultipliedAlpha: premultipliedAlpha,\n                    origin: {\n                        x: 0,\n                        y: 0,\n                        z: face\n                    }\n                };\n                const dataLayout = {\n                    offset: 0,\n                    bytesPerRow: bytesPerRow,\n                    rowsPerImage: mipmapHeight\n                };\n                if (compressed) {\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\n                    device.queue.writeTexture(imageCopy, sourceData, dataLayout, size);\n                }\n                else {\n                    let pixelParams = this._getFormatPixelsParams(ktxInfo.format);\n                    let typedSize = imageSize / pixelParams.typedSize;\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\n                    device.queue.writeTexture(imageCopy, sourceData, dataLayout, size);\n                }\n                dataOffset += imageSize;\n                dataOffset += 3 - ((imageSize + 3) % 4);\n            }\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n        }\n        texture.mipmapLoaded = true;\n    }\n    setCubeDDSData(texture, ddsInfo) {\n        const device = WebGPURenderEngine._instance.getDevice();\n        let premultiplyAlpha = false;\n        let invertY = false;\n        let source = ddsInfo.source;\n        let dataOffset = ddsInfo.dataOffset;\n        let bpp = ddsInfo.bpp;\n        let blockBytes = ddsInfo.blockBytes;\n        let mipmapCount = Math.min(ddsInfo.mipmapCount, texture.mipmapCount);\n        let compressed = ddsInfo.compressed;\n        let width = texture.width;\n        let height = texture.height;\n        texture.maxMipmapLevel = mipmapCount - 1;\n        let formatParams = this._getFormatPixelsParams(ddsInfo.format);\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\n        let dataTypeConstur = formatParams.dataTypedCons;\n        for (let face = 0; face < 6; face++) {\n            let mipmapWidth = width;\n            let mipmapHeight = height;\n            for (let index = 0; index < mipmapCount; index++) {\n                const block = this._getBlockInformationFromFormat(texture._webGPUFormat);\n                const bytesPerRow = Math.ceil(mipmapWidth / block.width) * block.length;\n                const size = {\n                    width: Math.ceil(mipmapWidth / block.width) * block.width,\n                    height: Math.ceil(mipmapHeight / block.height) * block.height,\n                    depthOrArrayLayers: 1\n                };\n                const imageCopy = {\n                    texture: texture.resource,\n                    mipLevel: index,\n                    premultipliedAlpha: premultiplyAlpha,\n                    origin: {\n                        x: 0,\n                        y: 0,\n                        z: face\n                    }\n                };\n                const dataLayout = {\n                    offset: 0,\n                    bytesPerRow: bytesPerRow,\n                    rowsPerImage: mipmapHeight\n                };\n                if (compressed) {\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\n                    device.queue.writeTexture(imageCopy, sourceData, dataLayout, size);\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\n                }\n                else {\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\n                    device.queue.writeTexture(imageCopy, sourceData, dataLayout, size);\n                    dataOffset += dataLength * channelsByte;\n                }\n                mipmapWidth = Math.max(1, mipmapWidth * 0.5);\n                mipmapHeight = Math.max(1, mipmapHeight * 0.5);\n            }\n        }\n        texture.mipmapLoaded = true;\n    }\n    setTextureCompareMode(texture, compareMode) {\n        switch (compareMode) {\n            case TextureCompareMode.LEQUAL:\n                break;\n            case TextureCompareMode.GEQUAL:\n                break;\n            case TextureCompareMode.LESS:\n                break;\n            case TextureCompareMode.GREATER:\n                break;\n            case TextureCompareMode.EQUAL:\n                break;\n            case TextureCompareMode.NOTEQUAL:\n                break;\n            case TextureCompareMode.ALWAYS:\n                break;\n            case TextureCompareMode.NEVER:\n                break;\n            case TextureCompareMode.None:\n            default:\n                break;\n        }\n        return compareMode;\n    }\n    createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB) {\n        let multiSamples = 1;\n        let gpuColorFormat = this._getGPURenderTargetFormat(format, sRGB);\n        const gpuColorDescriptor = this._getGPUTextureDescriptor(dimension, width, height, gpuColorFormat, 1, generateMipmap, multiSamples, false);\n        const gpuColorTexture = this._engine.getDevice().createTexture(gpuColorDescriptor);\n        gpuColorDescriptor.label = 'renderTexture';\n        const pixelByteSize = this._getGPURenderTexturePixelByteSize(format);\n        let texture = new WebGPUInternalTex(width, height, 1, dimension, generateMipmap, multiSamples, false, 1);\n        texture.format = format;\n        texture.resource = gpuColorTexture;\n        texture._webGPUFormat = gpuColorFormat;\n        texture.statisAsRenderTexture();\n        texture.gpuMemory = (width * height * pixelByteSize * (generateMipmap ? 1.33333 : 1)) | 0;\n        WebGPUGlobal.action(texture, 'allocMemory | texture', texture.gpuMemory);\n        return texture;\n    }\n    _isSRGBFormat(format) {\n        switch (format) {\n            case TextureFormat.ETC2SRGB:\n            case TextureFormat.ETC2SRGB_Alpha8:\n            case TextureFormat.ASTC4x4SRGB:\n            case TextureFormat.ASTC6x6SRGB:\n            case TextureFormat.ASTC8x8SRGB:\n            case TextureFormat.ASTC10x10SRGB:\n            case TextureFormat.ASTC12x12SRGB:\n                return true;\n            default:\n                return false;\n        }\n    }\n    _supportSRGB(format, mipmap) {\n        switch (format) {\n            case TextureFormat.R8G8B8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\n            case TextureFormat.R8G8B8A8:\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\n            case TextureFormat.DXT1:\n            case TextureFormat.DXT3:\n            case TextureFormat.DXT5:\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\n            default:\n                return false;\n        }\n    }\n    createRenderTargetInternal(width, height, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        const useSRGBExt = this._isSRGBFormat(colorFormat) || (sRGB && this._supportSRGB(colorFormat, generateMipmap));\n        let gammaCorrection = 1.0;\n        if (!useSRGBExt && sRGB)\n            gammaCorrection = 2.2;\n        const pixelByteSize = this._getGPURenderTexturePixelByteSize(colorFormat);\n        const gpuColorFormat = this._getGPURenderTargetFormat(colorFormat, sRGB);\n        const gpuColorDescriptor = this._getGPUTextureDescriptor(TextureDimension.Tex2D, width, height, gpuColorFormat, 1, generateMipmap, multiSamples, false);\n        gpuColorDescriptor.usage = GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST;\n        gpuColorDescriptor.label = 'renderTarget color';\n        const gpuColorTexture = this._engine.getDevice().createTexture(gpuColorDescriptor);\n        const internalRT = new WebGPUInternalRT(colorFormat, depthStencilFormat, false, generateMipmap, multiSamples, useSRGBExt);\n        internalRT._textures.push(new WebGPUInternalTex(width, height, 1, TextureDimension.Tex2D, generateMipmap, multiSamples, useSRGBExt, gammaCorrection));\n        internalRT._textures[0].format = colorFormat;\n        internalRT._textures[0].resource = gpuColorTexture;\n        internalRT._textures[0]._webGPUFormat = gpuColorFormat;\n        internalRT._textures[0].statisAsRenderTexture();\n        internalRT._textures[0].gpuMemory = (width * height * multiSamples * pixelByteSize * (generateMipmap ? 1.33333 : 1)) | 0;\n        WebGPUGlobal.action(internalRT._textures[0], 'allocMemory | texture', internalRT._textures[0].gpuMemory);\n        if (multiSamples > 1) {\n            const gpuColorDescriptor = this._getGPUTextureDescriptor(TextureDimension.Tex2D, width, height, gpuColorFormat, 1, generateMipmap, 1, false);\n            gpuColorDescriptor.usage = GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC | GPUTextureUsage.COPY_DST;\n            const gpuColorTexture = this._engine.getDevice().createTexture(gpuColorDescriptor);\n            internalRT._texturesResolve.push(new WebGPUInternalTex(width, height, 1, TextureDimension.Tex2D, generateMipmap, 1, useSRGBExt, gammaCorrection));\n            internalRT._texturesResolve[0].format = colorFormat;\n            internalRT._texturesResolve[0].resource = gpuColorTexture;\n            internalRT._texturesResolve[0]._webGPUFormat = gpuColorFormat;\n            internalRT._texturesResolve[0].statisAsRenderTexture();\n            internalRT._texturesResolve[0].gpuMemory = (width * height * pixelByteSize * (generateMipmap ? 1.33333 : 1)) | 0;\n            WebGPUGlobal.action(internalRT._texturesResolve[0], 'allocMemory | texture', internalRT._texturesResolve[0].gpuMemory);\n        }\n        if (colorFormat === RenderTargetFormat.DEPTH_16\n            || colorFormat === RenderTargetFormat.DEPTH_32\n            || colorFormat === RenderTargetFormat.DEPTHSTENCIL_24_8) {\n            depthStencilFormat = RenderTargetFormat.R8G8B8A8;\n        }\n        if (depthStencilFormat !== RenderTargetFormat.None) {\n            const pixelByteSize = this._getGPURenderTexturePixelByteSize(depthStencilFormat);\n            const gpuDepthFormat = this._getGPURenderTargetFormat(depthStencilFormat, false);\n            const gpuDepthDescriptor = this._getGPUTextureDescriptor(TextureDimension.Tex2D, width, height, gpuDepthFormat, 1, generateMipmap, multiSamples, false);\n            gpuDepthDescriptor.usage = GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT;\n            gpuDepthDescriptor.label = 'renderTarget depth';\n            const gpuDepthTexture = this._engine.getDevice().createTexture(gpuDepthDescriptor);\n            internalRT._depthTexture = new WebGPUInternalTex(width, height, 1, TextureDimension.Tex2D, false, multiSamples, false, 1);\n            internalRT._depthTexture.format = depthStencilFormat;\n            internalRT._depthTexture.resource = gpuDepthTexture;\n            internalRT._depthTexture._webGPUFormat = gpuDepthFormat;\n            internalRT._depthTexture.statisAsRenderTexture();\n            internalRT._depthTexture.gpuMemory = width * height * multiSamples * pixelByteSize;\n            WebGPUGlobal.action(internalRT._depthTexture, 'allocMemory | texture_depth', internalRT._depthTexture.gpuMemory);\n        }\n        WebGPURenderPassHelper.setColorAttachments(internalRT._renderPassDescriptor, internalRT, true);\n        WebGPURenderPassHelper.setDepthAttachments(internalRT._renderPassDescriptor, internalRT, true);\n        return internalRT;\n    }\n    createRenderTargetDepthTexture(renderTarget, dimension, width, height) {\n        return renderTarget._depthTexture;\n    }\n    createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples) {\n        throw new NotImplementedError();\n    }\n    bindRenderTarget(renderTarget, faceIndex) {\n        throw new NotImplementedError();\n    }\n    bindoutScreenTarget() {\n        throw new NotImplementedError();\n    }\n    unbindRenderTarget(renderTarget) {\n        throw new NotImplementedError();\n    }\n    readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out) {\n        throw new NotImplementedError();\n    }\n    async readRenderTargetPixelDataAsync(renderTarget, xOffset, yOffset, width, height, out) {\n        const texture = renderTarget._textures[0].resource;\n        const device = this._engine.getDevice();\n        switch (renderTarget.colorFormat) {\n            case RenderTargetFormat.R8G8B8A8:\n                {\n                    const bytesPerRow = Math.ceil(width * 4 / 256) * 256;\n                    const bufferSize = bytesPerRow * height;\n                    const buffer = device.createBuffer({\n                        size: bufferSize,\n                        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n                    });\n                    const commandEncoder = device.createCommandEncoder();\n                    commandEncoder.copyTextureToBuffer({ texture, origin: { x: xOffset, y: yOffset } }, { buffer, bytesPerRow }, { width, height, depthOrArrayLayers: 1 });\n                    const commands = commandEncoder.finish();\n                    device.queue.submit([commands]);\n                    const outView = new Uint8Array(out.buffer);\n                    await buffer.mapAsync(GPUMapMode.READ);\n                    const arrayBuffer = buffer.getMappedRange();\n                    const data = new Uint8Array(arrayBuffer);\n                    for (let j = 0; j < height; j++) {\n                        for (let i = 0; i < width; i++) {\n                            outView[j * width * 4 + i * 4 + 0] = data[j * bytesPerRow + i * 4 + 2];\n                            outView[j * width * 4 + i * 4 + 1] = data[j * bytesPerRow + i * 4 + 1];\n                            outView[j * width * 4 + i * 4 + 2] = data[j * bytesPerRow + i * 4 + 0];\n                            outView[j * width * 4 + i * 4 + 3] = data[j * bytesPerRow + i * 4 + 3];\n                        }\n                    }\n                    buffer.unmap();\n                    buffer.destroy();\n                    return Promise.resolve(out);\n                }\n            case RenderTargetFormat.R16G16B16A16:\n                {\n                    const bytesPerRow = Math.ceil(width * 8 / 256) * 256;\n                    const bufferSize = bytesPerRow * height;\n                    const buffer = device.createBuffer({\n                        size: bufferSize,\n                        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n                    });\n                    const commandEncoder = device.createCommandEncoder();\n                    commandEncoder.copyTextureToBuffer({ texture, origin: { x: xOffset, y: yOffset } }, { buffer, bytesPerRow }, { width, height, depthOrArrayLayers: 1 });\n                    const commands = commandEncoder.finish();\n                    device.queue.submit([commands]);\n                    const outView = new Uint16Array(out.buffer);\n                    await buffer.mapAsync(GPUMapMode.READ);\n                    const arrayBuffer = buffer.getMappedRange();\n                    const data = new Uint16Array(arrayBuffer);\n                    for (let j = 0; j < height; j++) {\n                        for (let i = 0; i < width; i++) {\n                            outView[j * width * 4 + i * 4 + 0] = data[j * bytesPerRow + i * 4 + 2];\n                            outView[j * width * 4 + i * 4 + 1] = data[j * bytesPerRow + i * 4 + 1];\n                            outView[j * width * 4 + i * 4 + 2] = data[j * bytesPerRow + i * 4 + 0];\n                            outView[j * width * 4 + i * 4 + 3] = data[j * bytesPerRow + i * 4 + 3];\n                        }\n                    }\n                    buffer.unmap();\n                    buffer.destroy();\n                    return Promise.resolve(out);\n                }\n            case RenderTargetFormat.R32G32B32A32:\n                {\n                    const bytesPerRow = Math.ceil(width * 16 / 256) * 256;\n                    const bufferSize = bytesPerRow * height;\n                    const buffer = device.createBuffer({\n                        size: bufferSize,\n                        usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n                    });\n                    const commandEncoder = device.createCommandEncoder();\n                    commandEncoder.copyTextureToBuffer({ texture, origin: { x: xOffset, y: yOffset } }, { buffer, bytesPerRow }, { width, height, depthOrArrayLayers: 1 });\n                    const commands = commandEncoder.finish();\n                    device.queue.submit([commands]);\n                    const outView = new Uint32Array(out.buffer);\n                    await buffer.mapAsync(GPUMapMode.READ);\n                    const arrayBuffer = buffer.getMappedRange();\n                    const data = new Uint32Array(arrayBuffer);\n                    for (let j = 0; j < height; j++) {\n                        for (let i = 0; i < width; i++) {\n                            outView[j * width * 4 + i * 4 + 0] = data[j * bytesPerRow + i * 4 + 2];\n                            outView[j * width * 4 + i * 4 + 1] = data[j * bytesPerRow + i * 4 + 1];\n                            outView[j * width * 4 + i * 4 + 2] = data[j * bytesPerRow + i * 4 + 0];\n                            outView[j * width * 4 + i * 4 + 3] = data[j * bytesPerRow + i * 4 + 3];\n                        }\n                    }\n                    buffer.unmap();\n                    buffer.destroy();\n                    return Promise.resolve(out);\n                }\n        }\n        return Promise.resolve(out);\n    }\n    initVideoTextureData(texture) { }\n    async updateVideoTexture(texture, video, premultiplyAlpha, invertY) {\n        if (!video)\n            return;\n        const image = { source: video, flipY: invertY, origin: [0, 0] };\n        const textureCopyView = {\n            texture: texture.resource,\n            origin: {\n                x: 0,\n                y: 0,\n            },\n            mipLevel: 0,\n            premultipliedAlpha: premultiplyAlpha,\n            colorSpace: texture.useSRGBLoad ? \"srgb\" : undefined,\n        };\n        const copySize = { width: video.videoWidth, height: video.videoHeight };\n        const device = WebGPURenderEngine._instance.getDevice();\n        device.queue.copyExternalImageToTexture(image, textureCopyView, copySize);\n    }\n    getRenderTextureDataAsync(internalTex, x, y, width, height) {\n        let bytesPerRow = 0;\n        switch (internalTex.colorFormat) {\n            case RenderTargetFormat.R8G8B8A8:\n                bytesPerRow = Math.ceil(width * 4 / 256) * 256;\n                break;\n            case RenderTargetFormat.R16G16B16A16:\n                bytesPerRow = Math.ceil(width * 8 / 256) * 256;\n                break;\n            case RenderTargetFormat.R32G32B32A32:\n                bytesPerRow = Math.ceil(width * 16 / 256) * 256;\n                break;\n        }\n        return this.readRenderTargetPixelDataAsync(internalTex, x, y, width, height, new Uint8Array(bytesPerRow * height));\n    }\n}\n","import { UniformBufferAlone } from \"../../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferAlone\";\nimport { WebGPUGlobal } from \"../WebGPUStatis/WebGPUGlobal\";\nexport class WebGPUBufferAlone extends UniformBufferAlone {\n    constructor(size, manager, user) {\n        super(size, manager, user);\n        this.objectName = 'WebGPUBufferAlone';\n        this.globalId = WebGPUGlobal.getId(this);\n        WebGPUGlobal.action(this, 'allocMemory', this._alignedSize);\n    }\n    destroy() {\n        if (super.destroy()) {\n            WebGPUGlobal.action(this, 'releaseMemory | uniform', this._alignedSize);\n            WebGPUGlobal.releaseId(this);\n            return true;\n        }\n        return false;\n    }\n}\n","import { roundUp } from \"../../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferManager\";\nimport { UniformBufferUser } from \"../../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferUser\";\nimport { WebGPUGlobal } from \"../WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUBufferAlone } from \"./WebGPUBufferAlone\";\nexport class WebGPUUniformBuffer extends UniformBufferUser {\n    constructor(name, set, binding, size, manager, data) {\n        super(name, size, manager, data);\n        this.objectName = 'WebGPUUniformBuffer';\n        this.set = set;\n        this.binding = binding;\n        if (manager._useBigBuffer) {\n            this._gpuBuffer = this.bufferBlock.cluster.buffer;\n            this._gpuBindGroupEntry = {\n                binding,\n                resource: {\n                    buffer: this._gpuBuffer,\n                    offset: this.bufferBlock.offset,\n                    size,\n                },\n            };\n        }\n        else {\n            this._gpuBuffer = this.bufferAlone.buffer;\n            this._gpuBindGroupEntry = {\n                binding,\n                resource: {\n                    buffer: this._gpuBuffer,\n                    offset: 0,\n                    size,\n                },\n            };\n        }\n        this.id = WebGPUGlobal.getUniformBufferId();\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    _createBufferAlone(size, manager) {\n        return new WebGPUBufferAlone(size, manager, this);\n    }\n    notifyGPUBufferChange(info) {\n        super.notifyGPUBufferChange();\n        this._gpuBuffer = this.bufferBlock.cluster.buffer;\n        this._gpuBindGroupEntry = {\n            binding: this.binding,\n            resource: {\n                buffer: this._gpuBuffer,\n                offset: this.bufferBlock.offset,\n                size: this.bufferBlock.size,\n            },\n        };\n        this.data.notifyGPUBufferChange(this, info);\n    }\n    getGPUBindEntry() {\n        return this._gpuBindGroupEntry;\n    }\n    getUniformNameStr() {\n        let str = '|';\n        this._items.forEach(item => str += item.name + '|');\n        return str;\n    }\n    debugInfo() {\n        if (this._itemNum > 0) {\n            const typeName = (type) => {\n                if (type instanceof Int32Array)\n                    return 'Init32Array';\n                if (type instanceof Float32Array)\n                    return 'Float32Array';\n                return 'Unknown';\n            };\n            console.log(\"strId =\", this._strId);\n            this._items.forEach((item, key) => {\n                console.log(\"key: %d, type: %s, view: %s, offset: %d, size: %d, padding: %d, elements: %d, count: %d\", key, item.type, typeName(item.view), item.view.byteOffset, item.view.byteLength, roundUp(item.view.byteLength / item.count, item.align) - item.view.BYTES_PER_ELEMENT * item.elements, item.elements, item.count);\n            });\n        }\n    }\n    destroy() {\n        if (super.destroy()) {\n            this._gpuBuffer = null;\n            this._gpuBindGroupEntry = null;\n            return true;\n        }\n        return false;\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { Color } from \"../../../maths/Color\";\nimport { Vector2 } from \"../../../maths/Vector2\";\nimport { Vector3 } from \"../../../maths/Vector3\";\nimport { Vector4 } from \"../../../maths/Vector4\";\nimport { FilterMode } from \"../../../RenderEngine/RenderEnum/FilterMode\";\nimport { RenderCapable } from \"../../../RenderEngine/RenderEnum/RenderCapable\";\nimport { TextureFormat } from \"../../../RenderEngine/RenderEnum/TextureFormat\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Material } from \"../../../resource/Material\";\nimport { Resource } from \"../../../resource/Resource\";\nimport { Texture } from \"../../../resource/Texture\";\nimport { Texture2D } from \"../../../resource/Texture2D\";\nimport { TextureCube } from \"../../../resource/TextureCube\";\nimport { ShaderData } from \"../../DriverDesign/RenderDevice/ShaderData\";\nimport { WebDefineDatas } from \"../../RenderModuleData/WebModuleData/WebDefineDatas\";\nimport { WebGPUBindingInfoType } from \"./WebGPUCodeGenerator\";\nimport { WebGPUInternalTex } from \"./WebGPUInternalTex\";\nimport { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUTextureFormat } from \"./WebGPUTextureContext\";\nimport { WebGPUUniformBuffer } from \"./WebGPUUniform/WebGPUUniformBuffer\";\nimport { RenderState } from \"../../RenderModuleData/Design/RenderState\";\nimport { RenderTexture2D } from \"../../../resource/RenderTexture2D\";\nclass WebGPUBindGroupCacheItem {\n    constructor(buffer, bindGroup, bgLayouts, user) {\n        this.uniformBuffer = buffer;\n        this.bindGroup = bindGroup;\n        this.bgLayouts = bgLayouts;\n        this.user = new Set();\n        this.user.add(user);\n        this.refNum = 1;\n        this.timer = 0;\n    }\n}\nexport var WebGPUShaderDataElementType;\n(function (WebGPUShaderDataElementType) {\n    WebGPUShaderDataElementType[WebGPUShaderDataElementType[\"Element3D\"] = 0] = \"Element3D\";\n    WebGPUShaderDataElementType[WebGPUShaderDataElementType[\"Element3DSkin\"] = 1] = \"Element3DSkin\";\n    WebGPUShaderDataElementType[WebGPUShaderDataElementType[\"Element3DInstance\"] = 2] = \"Element3DInstance\";\n    WebGPUShaderDataElementType[WebGPUShaderDataElementType[\"Element2D\"] = 3] = \"Element2D\";\n    WebGPUShaderDataElementType[WebGPUShaderDataElementType[\"UNKNOWN\"] = 4] = \"UNKNOWN\";\n})(WebGPUShaderDataElementType || (WebGPUShaderDataElementType = {}));\nexport class WebGPUShaderData extends ShaderData {\n    get isShare() {\n        return this._isShare;\n    }\n    set isShare(value) {\n        this._isShare = value;\n        if (this.instShaderData)\n            this.instShaderData.isShare = value;\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].isShare = value;\n    }\n    get isStatic() {\n        return this._isStatic;\n    }\n    set isStatic(value) {\n        this._isStatic = value;\n        if (this.instShaderData)\n            this.instShaderData.isStatic = value;\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].isStatic = value;\n    }\n    static getBindGroup(key) {\n        return this._bindGroupMap.get(key);\n    }\n    static setBindGroup(key, value) {\n        this._bindGroupMap.set(key, value);\n    }\n    static removeBindGroup(key) {\n        this._bindGroupMap.delete(key);\n    }\n    _getUniformBuffer(key) {\n        return this._uniformBufferMap.get(key);\n    }\n    _setUniformBuffer(key, value) {\n        this._uniformBufferMap.set(key, value);\n    }\n    static __init__() {\n        if (!this._dummyTexture2D) {\n            this._dummyTexture2D = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, true, false, false);\n            this._dummyTexture2D.setPixelsData(new Uint8Array([255, 255, 255, 255]), false, false);\n            this._dummyTexture2D.lock = true;\n        }\n        if (!this._dummyTextureCube) {\n            this._dummyTextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false, false, false);\n            this._dummyTextureCube.lock = true;\n        }\n        Material.__initDefine__();\n        this._stateKeyMap = new Set();\n        this._stateKeyMap.add(Shader3D.BLEND);\n        this._stateKeyMap.add(Shader3D.BLEND_EQUATION);\n        this._stateKeyMap.add(Shader3D.BLEND_SRC);\n        this._stateKeyMap.add(Shader3D.BLEND_DST);\n        this._stateKeyMap.add(Shader3D.BLEND_EQUATION_RGB);\n        this._stateKeyMap.add(Shader3D.BLEND_SRC_RGB);\n        this._stateKeyMap.add(Shader3D.BLEND_DST_RGB);\n        this._stateKeyMap.add(Shader3D.BLEND_EQUATION_ALPHA);\n        this._stateKeyMap.add(Shader3D.BLEND_SRC_ALPHA);\n        this._stateKeyMap.add(Shader3D.BLEND_DST_ALPHA);\n        this._stateKeyMap.add(Shader3D.DEPTH_WRITE);\n        this._stateKeyMap.add(Shader3D.DEPTH_TEST);\n        this._stateKeyMap.add(Shader3D.STENCIL_TEST);\n        this._stateKeyMap.add(Shader3D.STENCIL_Op);\n        this._stateKeyMap.add(Shader3D.STENCIL_Ref);\n        this._stateKeyMap.add(Shader3D.STENCIL_WRITE);\n    }\n    static create(ownerResource = null, elementType = WebGPUShaderDataElementType.UNKNOWN, name) {\n        var _a;\n        const obj = (_a = this._pool.pop()) !== null && _a !== void 0 ? _a : new WebGPUShaderData(ownerResource);\n        obj._elementType = elementType;\n        obj._recovered = false;\n        obj._name = name;\n        return obj;\n    }\n    recover(clearData = false) {\n        var _a, _b;\n        this._recovered = true;\n        (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a.recover();\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                (_b = this.skinShaderData[i]) === null || _b === void 0 ? void 0 : _b.recover();\n        if (clearData)\n            this.clearData();\n        WebGPUShaderData._pool.push(this);\n    }\n    static endFrame() {\n        const currTimer = Laya.timer.currTimer;\n        if (this._bindGroupMap.size > this._MAX_BIND_GROUP_NUM\n            && currTimer - this._clearBindGroupTimeStamp > this._BIND_GROUP_CLEAR_INTERVAL) {\n            this._clearBindGroupTimeStamp = currTimer;\n            const needToRemove = [];\n            this._bindGroupMap.forEach((v, k) => {\n                if (v.refNum <= 0) {\n                    v.timer++;\n                    if (v.timer > 10)\n                        needToRemove.push(k);\n                }\n            });\n            for (let i = needToRemove.length - 1; i > -1; i--)\n                this._bindGroupMap.delete(needToRemove[i]);\n        }\n    }\n    constructor(ownerResource = null) {\n        super(ownerResource);\n        this.stateKey = '';\n        this._recovered = false;\n        this._destroyed = false;\n        this._elementType = 0;\n        this._isShare = true;\n        this._isStatic = false;\n        this.changeMark = 0;\n        this.objectName = 'WebGPUShaderData';\n        this._uniformBufferMap = new Map();\n        this._data = {};\n        this._texIdSet = new Set();\n        this._bindGroupMap = new Map();\n        this._gammaColorMap = new Map();\n        this._defineDatas = new WebDefineDatas();\n        this.globalId = WebGPUGlobal.getId(this);\n        WebGPUShaderData._objectCount++;\n    }\n    updateUBOBuffer(name) { }\n    createUniformBuffer(name, uniformMap) { }\n    notifyGPUBufferChange(buffer, info) {\n        var _a;\n        if (((_a = this._bindGroupItem) === null || _a === void 0 ? void 0 : _a.uniformBuffer) === buffer) {\n            this._bindGroupItem = null;\n            this._bindGroupChange = true;\n        }\n        this._bindGroupMap.forEach((v, k) => {\n            if (v.uniformBuffer === buffer) {\n                this._bindGroupMap.delete(k);\n                const item = WebGPUShaderData.getBindGroup(k);\n                if (item) {\n                    WebGPUShaderData.removeBindGroup(k);\n                    item.user.delete(this);\n                    if (item.user.size > 0)\n                        item.user.forEach(user => user.notifyGPUBufferChange(buffer, info));\n                }\n            }\n        });\n    }\n    _createUniformBuffer(info, single = false) {\n        if (single && this._uniformBuffer)\n            return;\n        if (info && info.uniform) {\n            if (this._infoId !== info.id) {\n                this._infoId = info.id;\n                this._uniformBuffer = this._getUniformBuffer(this._infoId);\n                if (!this._uniformBuffer) {\n                    const gpuBuffer = WebGPURenderEngine._instance.gpuBufferMgr;\n                    this._uniformBuffer = new WebGPUUniformBuffer(info.name, info.set, info.binding, info.uniform.size, gpuBuffer, this);\n                    for (let i = 0, len = info.uniform.items.length; i < len; i++) {\n                        const uniform = info.uniform.items[i];\n                        this._uniformBuffer.addUniform(uniform.propertyId, uniform.name, uniform.type, uniform.offset, uniform.align, uniform.size, uniform.element, uniform.count);\n                    }\n                    this._setUniformBuffer(this._infoId, this._uniformBuffer);\n                }\n                this._updateUniformData();\n                this._bindGroupChange = true;\n            }\n        }\n    }\n    _updateUniformData() {\n        var _a;\n        if (this._uniformBuffer)\n            for (const index in this._data)\n                this._uniformBuffer.setUniformData(Number(index), this._data[index]);\n        (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a._updateUniformData();\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i]._updateUniformData();\n    }\n    createBindGroupLayoutEntry(info) {\n        var _a, _b;\n        const bindGroupLayoutEntries = [];\n        let internalTex;\n        for (const item of info) {\n            switch (item.type) {\n                case WebGPUBindingInfoType.buffer:\n                    if (item.uniform) {\n                        bindGroupLayoutEntries.push({\n                            binding: item.binding,\n                            visibility: item.visibility,\n                            buffer: item.buffer,\n                        });\n                    }\n                    break;\n                case WebGPUBindingInfoType.texture:\n                    if (item.texture) {\n                        let texture = (_a = this.getTexture(item.propertyId)) !== null && _a !== void 0 ? _a : WebGPUShaderData._dummyTexture2D;\n                        if (item.texture.viewDimension === 'cube' && texture === WebGPUShaderData._dummyTexture2D)\n                            texture = WebGPUShaderData._dummyTextureCube;\n                        if (texture instanceof WebGPUInternalTex)\n                            internalTex = texture;\n                        else\n                            internalTex = texture._texture;\n                        if (!internalTex) {\n                            texture = WebGPUShaderData._dummyTexture2D;\n                            internalTex = texture._texture;\n                        }\n                        if (internalTex.compareMode > 0)\n                            item.texture.sampleType = 'depth';\n                        else if (internalTex._webGPUFormat === WebGPUTextureFormat.depth16unorm\n                            || internalTex._webGPUFormat === WebGPUTextureFormat.depth24plus_stencil8\n                            || internalTex._webGPUFormat === WebGPUTextureFormat.depth32float) {\n                            item.texture.sampleType = 'unfilterable-float';\n                        }\n                        else {\n                            const supportFloatLinearFiltering = LayaGL.renderEngine.getCapable(RenderCapable.Texture_FloatLinearFiltering);\n                            if (!supportFloatLinearFiltering && texture.format === TextureFormat.R32G32B32A32)\n                                item.texture.sampleType = 'unfilterable-float';\n                            else\n                                item.texture.sampleType = 'float';\n                        }\n                        bindGroupLayoutEntries.push({\n                            binding: item.binding,\n                            visibility: item.visibility,\n                            texture: item.texture,\n                        });\n                    }\n                    break;\n                case WebGPUBindingInfoType.sampler:\n                    if (item.sampler) {\n                        let texture = (_b = this.getTexture(item.propertyId)) !== null && _b !== void 0 ? _b : WebGPUShaderData._dummyTexture2D;\n                        if (texture instanceof WebGPUInternalTex)\n                            internalTex = texture;\n                        else\n                            internalTex = texture._texture;\n                        if (!internalTex) {\n                            texture = WebGPUShaderData._dummyTexture2D;\n                            internalTex = texture._texture;\n                        }\n                        if (internalTex.compareMode > 0)\n                            item.sampler.type = 'comparison';\n                        else if (internalTex._webGPUFormat === WebGPUTextureFormat.depth16unorm\n                            || internalTex._webGPUFormat === WebGPUTextureFormat.depth24plus_stencil8\n                            || internalTex._webGPUFormat === WebGPUTextureFormat.depth32float) {\n                            if (item.sampler.type !== 'non-filtering') {\n                                item.sampler.type = 'non-filtering';\n                                internalTex.filterMode = FilterMode.Point;\n                            }\n                        }\n                        else {\n                            const supportFloatLinearFiltering = LayaGL.renderEngine.getCapable(RenderCapable.Texture_FloatLinearFiltering);\n                            if (!supportFloatLinearFiltering && texture.format === TextureFormat.R32G32B32A32) {\n                                if (item.sampler.type !== 'non-filtering') {\n                                    item.sampler.type = 'non-filtering';\n                                    internalTex.filterMode = FilterMode.Point;\n                                }\n                            }\n                            else if (item.sampler.type !== 'filtering') {\n                                item.sampler.type = 'filtering';\n                                internalTex.filterMode = FilterMode.Bilinear;\n                            }\n                        }\n                        bindGroupLayoutEntries.push({\n                            binding: item.binding,\n                            visibility: item.visibility,\n                            sampler: item.sampler,\n                        });\n                    }\n                    break;\n            }\n        }\n        return bindGroupLayoutEntries;\n    }\n    bindGroup(groupId, name, info, command, bundle) {\n        const device = WebGPURenderEngine._instance.getDevice();\n        const _createBindGroupEntry = (info, bindGroupEntries) => {\n            var _a, _b;\n            let internalTex;\n            for (const item of info) {\n                switch (item.type) {\n                    case WebGPUBindingInfoType.buffer:\n                        if (item.uniform) {\n                            if (!this._uniformBuffer) {\n                                console.warn('uniformBuffer is null');\n                                bindGroupEntries.length = 0;\n                            }\n                            bindGroupEntries.push(this._uniformBuffer.getGPUBindEntry());\n                        }\n                        break;\n                    case WebGPUBindingInfoType.texture:\n                        if (item.texture) {\n                            let texture = (_a = this.getTexture(item.propertyId)) !== null && _a !== void 0 ? _a : WebGPUShaderData._dummyTexture2D;\n                            if (item.texture.viewDimension === 'cube'\n                                && texture === WebGPUShaderData._dummyTexture2D)\n                                texture = WebGPUShaderData._dummyTextureCube;\n                            if (texture instanceof WebGPUInternalTex)\n                                internalTex = texture;\n                            else if (texture instanceof RenderTexture2D) {\n                                const tex = texture;\n                                if (tex._renderTarget._texturesResolve)\n                                    internalTex = tex._renderTarget._texturesResolve[0];\n                                else\n                                    internalTex = tex._texture;\n                            }\n                            else\n                                internalTex = texture._texture;\n                            if (!internalTex) {\n                                texture = WebGPUShaderData._dummyTexture2D;\n                                internalTex = texture._texture;\n                            }\n                            bindGroupEntries.push({\n                                binding: item.binding,\n                                resource: internalTex.getTextureView(),\n                            });\n                        }\n                        break;\n                    case WebGPUBindingInfoType.sampler:\n                        if (item.sampler) {\n                            let texture = (_b = this.getTexture(item.propertyId)) !== null && _b !== void 0 ? _b : WebGPUShaderData._dummyTexture2D;\n                            if (texture instanceof WebGPUInternalTex)\n                                internalTex = texture;\n                            else\n                                internalTex = texture._texture;\n                            if (!internalTex) {\n                                texture = WebGPUShaderData._dummyTexture2D;\n                                internalTex = texture._texture;\n                            }\n                            bindGroupEntries.push({\n                                binding: item.binding,\n                                resource: internalTex.sampler.source,\n                            });\n                        }\n                        break;\n                }\n            }\n        };\n        let key = '';\n        if (this._bindGroupChange || this._bindInfoId !== info[0].id) {\n            this._bindGroupChange = false;\n            this._bindInfoId = info[0].id;\n            key += this._uniformBuffer.id + '_';\n            if (WebGPUGlobal.useBigBuffer)\n                key += this._uniformBuffer.offset + '_';\n            for (let i = 0, len = info.length; i < len; i++)\n                if (info[i].type !== WebGPUBindingInfoType.texture)\n                    key += info[i].propertyId + '_';\n            this._texIdSet.forEach(id => key += id + '_');\n            key += this._elementType;\n            const cache = WebGPUShaderData.getBindGroup(key);\n            if (cache) {\n                if (cache !== this._bindGroupItem) {\n                    if (this._bindGroupItem) {\n                        this._bindGroupItem.refNum--;\n                        this._bindGroupItem.user.delete(this);\n                    }\n                    this._bindGroupItem = cache;\n                    cache.user.add(this);\n                    cache.refNum++;\n                    cache.timer = 0;\n                }\n            }\n            else {\n                if (this._bindGroupItem) {\n                    this._bindGroupItem.refNum--;\n                    this._bindGroupItem.user.delete(this);\n                }\n                this._bindGroupItem = null;\n            }\n        }\n        if (!this._bindGroupItem) {\n            const bindGroupLayoutEntries = this.createBindGroupLayoutEntry(info);\n            const bindGroupEntries = [];\n            _createBindGroupEntry(info, bindGroupEntries);\n            if (bindGroupEntries.length === 0)\n                return null;\n            const bindGroupLayoutDesc = { entries: bindGroupLayoutEntries };\n            const bindGroup = device.createBindGroup({\n                label: name + '_' + this._infoId + ' ' + key,\n                layout: device.createBindGroupLayout(bindGroupLayoutDesc),\n                entries: bindGroupEntries,\n            });\n            this._bindGroupItem = new WebGPUBindGroupCacheItem(this._uniformBuffer, bindGroup, bindGroupLayoutEntries, this);\n            this._bindGroupMap.set(key, this._bindGroupItem);\n            WebGPUShaderData.setBindGroup(key, this._bindGroupItem);\n        }\n        command === null || command === void 0 ? void 0 : command.setBindGroup(groupId, this._bindGroupItem.bindGroup);\n        bundle === null || bundle === void 0 ? void 0 : bundle.setBindGroup(groupId, this._bindGroupItem.bindGroup);\n        return this._bindGroupItem.bgLayouts;\n    }\n    uploadUniform() {\n        var _a, _b;\n        (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.upload();\n        (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.uploadUniform();\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].uploadUniform();\n    }\n    getData() {\n        return this._data;\n    }\n    getDefineData() {\n        return this._defineDatas;\n    }\n    addDefine(define) {\n        var _a;\n        if (!this._defineDatas.has(define)) {\n            const names1 = [];\n            Shader3D._getNamesByDefineData(this._defineDatas, names1);\n            this._defineDatas.add(define);\n            this.changeMark++;\n            const names2 = [];\n            Shader3D._getNamesByDefineData(this._defineDatas, names2);\n            const names = [];\n            for (const item of names1) {\n                if (!names2.includes(item)) {\n                    names.push(item);\n                }\n            }\n            for (const item of names2) {\n                if (!names1.includes(item)) {\n                    names.push(item);\n                }\n            }\n            (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a.addDefine(define);\n            if (this.skinShaderData)\n                for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                    this.skinShaderData[i].addDefine(define);\n        }\n    }\n    addDefines(defines) {\n        var _a;\n        this._defineDatas.addDefineDatas(defines);\n        this.changeMark++;\n        const names = [];\n        Shader3D._getNamesByDefineData(defines, names);\n        (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a.addDefines(defines);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].addDefines(defines);\n    }\n    removeDefine(define) {\n        var _a;\n        if (this._defineDatas.has(define)) {\n            const names1 = [];\n            Shader3D._getNamesByDefineData(this._defineDatas, names1);\n            this._defineDatas.remove(define);\n            this.changeMark++;\n            const names2 = [];\n            Shader3D._getNamesByDefineData(this._defineDatas, names2);\n            const names = [];\n            for (const item of names1) {\n                if (!names2.includes(item)) {\n                    names.push(item);\n                }\n            }\n            for (const item of names2) {\n                if (!names1.includes(item)) {\n                    names.push(item);\n                }\n            }\n            (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a.removeDefine(define);\n            if (this.skinShaderData)\n                for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                    this.skinShaderData[i].removeDefine(define);\n        }\n    }\n    hasDefine(define) {\n        return this._defineDatas.has(define);\n    }\n    clearDefine() {\n        var _a;\n        this._defineDatas.clear();\n        (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a.clearDefine();\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].clearDefine();\n    }\n    getBool(index) {\n        return this._data[index];\n    }\n    setBool(index, value) {\n        var _a, _b;\n        if (this._data[index] !== value) {\n            this._data[index] = value;\n            (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setBool(index, value);\n            (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setBool(index, value);\n            if (this.skinShaderData)\n                for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                    this.skinShaderData[i].setBool(index, value);\n        }\n    }\n    getInt(index) {\n        return this._data[index];\n    }\n    setInt(index, value) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n        if (this._data[index] === value)\n            return;\n        this._data[index] = value;\n        if (WebGPUShaderData._stateKeyMap.has(index)) {\n            this.stateKey = '<';\n            this.stateKey += ((_a = this._data[Shader3D.BLEND]) !== null && _a !== void 0 ? _a : 'x') + '_';\n            switch (this._data[Shader3D.BLEND]) {\n                case RenderState.BLEND_DISABLE:\n                    break;\n                case RenderState.BLEND_ENABLE_ALL:\n                    this.stateKey += ((_b = this._data[Shader3D.BLEND_EQUATION]) !== null && _b !== void 0 ? _b : 'x') + '_';\n                    this.stateKey += ((_c = this._data[Shader3D.BLEND_SRC]) !== null && _c !== void 0 ? _c : 'x') + '_';\n                    this.stateKey += ((_d = this._data[Shader3D.BLEND_DST]) !== null && _d !== void 0 ? _d : 'x') + '_';\n                    break;\n                case RenderState.BLEND_ENABLE_SEPERATE:\n                    this.stateKey += ((_e = this._data[Shader3D.BLEND_EQUATION_RGB]) !== null && _e !== void 0 ? _e : 'x') + '_';\n                    this.stateKey += ((_f = this._data[Shader3D.BLEND_SRC_RGB]) !== null && _f !== void 0 ? _f : 'x') + '_';\n                    this.stateKey += ((_g = this._data[Shader3D.BLEND_DST_RGB]) !== null && _g !== void 0 ? _g : 'x') + '_';\n                    this.stateKey += ((_h = this._data[Shader3D.BLEND_EQUATION_ALPHA]) !== null && _h !== void 0 ? _h : 'x') + '_';\n                    this.stateKey += ((_j = this._data[Shader3D.BLEND_SRC_ALPHA]) !== null && _j !== void 0 ? _j : 'x') + '_';\n                    this.stateKey += ((_k = this._data[Shader3D.BLEND_DST_ALPHA]) !== null && _k !== void 0 ? _k : 'x') + '_';\n                    break;\n            }\n            this.stateKey += (this._data[Shader3D.DEPTH_WRITE] ? 't' : 'f') + '_';\n            this.stateKey += ((_l = this._data[Shader3D.DEPTH_TEST]) !== null && _l !== void 0 ? _l : 'x') + '_';\n            this.stateKey += ((_m = this._data[Shader3D.STENCIL_TEST]) !== null && _m !== void 0 ? _m : 'x') + '_';\n            if (this._data[Shader3D.STENCIL_Op]) {\n                this.stateKey += this._data[Shader3D.STENCIL_Op].x + '_';\n                this.stateKey += this._data[Shader3D.STENCIL_Op].y + '_';\n                this.stateKey += this._data[Shader3D.STENCIL_Op].z + '_';\n            }\n            else\n                this.stateKey += 'x_x_x_';\n            this.stateKey += ((_o = this._data[Shader3D.STENCIL_Ref]) !== null && _o !== void 0 ? _o : 'x') + '_';\n            this.stateKey += (this._data[Shader3D.STENCIL_WRITE] ? 't' : 'f') + '>_';\n        }\n        (_p = this._uniformBuffer) === null || _p === void 0 ? void 0 : _p.setInt(index, value);\n        (_q = this.instShaderData) === null || _q === void 0 ? void 0 : _q.setInt(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setInt(index, value);\n    }\n    getNumber(index) {\n        return this._data[index];\n    }\n    setNumber(index, value) {\n        var _a, _b;\n        if (this._data[index] !== value) {\n            this._data[index] = value;\n            (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setFloat(index, value);\n            (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setNumber(index, value);\n            if (this.skinShaderData)\n                for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                    this.skinShaderData[i].setNumber(index, value);\n        }\n    }\n    getVector2(index) {\n        return this._data[index];\n    }\n    setVector2(index, value) {\n        var _a, _b;\n        const v2 = this._data[index];\n        if (v2) {\n            if (Vector2.equals(v2, value))\n                return;\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setVector2(index, value);\n        (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setVector2(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setVector2(index, value);\n    }\n    getVector3(index) {\n        return this._data[index];\n    }\n    setVector3(index, value) {\n        var _a, _b;\n        const v3 = this._data[index];\n        if (v3) {\n            if (Vector3.equals(v3, value))\n                return;\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setVector3(index, value);\n        (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setVector3(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setVector3(index, value);\n    }\n    getVector(index) {\n        return this._data[index];\n    }\n    setVector(index, value) {\n        var _a, _b;\n        const v4 = this._data[index];\n        if (v4) {\n            if (Vector4.equals(v4, value))\n                return;\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setVector4(index, value);\n        (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setVector(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setVector(index, value);\n    }\n    getColor(index) {\n        return this._gammaColorMap.get(index);\n    }\n    setColor(index, value) {\n        var _a, _b, _c;\n        if (!value)\n            return;\n        if (this._data[index]) {\n            const gammaColor = this._gammaColorMap.get(index);\n            if (gammaColor && this._data[index].equal(gammaColor))\n                return;\n            if (gammaColor)\n                value.cloneTo(gammaColor);\n            else\n                this._gammaColorMap.set(index, value.clone());\n            const linearColor = this._data[index];\n            linearColor.x = Color.gammaToLinearSpace(value.r);\n            linearColor.y = Color.gammaToLinearSpace(value.g);\n            linearColor.z = Color.gammaToLinearSpace(value.b);\n            linearColor.w = value.a;\n            (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setVector4(index, linearColor);\n        }\n        else {\n            const linearColor = new Vector4();\n            linearColor.x = Color.gammaToLinearSpace(value.r);\n            linearColor.y = Color.gammaToLinearSpace(value.g);\n            linearColor.z = Color.gammaToLinearSpace(value.b);\n            linearColor.w = value.a;\n            this._data[index] = linearColor;\n            this._gammaColorMap.set(index, value.clone());\n            (_b = this._uniformBuffer) === null || _b === void 0 ? void 0 : _b.setVector4(index, linearColor);\n        }\n        (_c = this.instShaderData) === null || _c === void 0 ? void 0 : _c.setColor(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setColor(index, value);\n    }\n    getMatrix3x3(index) {\n        return this._data[index];\n    }\n    setMatrix3x3(index, value) {\n        var _a, _b;\n        const mat = this._data[index];\n        if (mat)\n            value.cloneTo(this._data[index]);\n        else\n            this._data[index] = value.clone();\n        (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setMatrix3x3(index, value);\n        (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setMatrix3x3(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setMatrix3x3(index, value);\n    }\n    getMatrix4x4(index) {\n        return this._data[index];\n    }\n    setMatrix4x4(index, value) {\n        var _a, _b;\n        const mat = this._data[index];\n        if (mat) {\n            if (mat.equalsOtherMatrix(value))\n                return;\n            value.cloneTo(this._data[index]);\n        }\n        else\n            this._data[index] = value.clone();\n        (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setMatrix4x4(index, value);\n        (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setMatrix4x4(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setMatrix4x4(index, value);\n    }\n    getBuffer(index) {\n        return this._data[index];\n    }\n    setBuffer(index, value) {\n        var _a, _b;\n        this._data[index] = value;\n        (_a = this._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setBuffer(index, value);\n        (_b = this.instShaderData) === null || _b === void 0 ? void 0 : _b.setBuffer(index, value);\n        if (this.skinShaderData)\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].setBuffer(index, value);\n    }\n    setTexture(index, value) {\n        var _a;\n        if (value instanceof Texture)\n            value = value.bitmap;\n        const lastValue = this._data[index];\n        if (lastValue != value) {\n            if (value) {\n                const shaderDefine = WebGPURenderEngine._instance._texGammaDefine[index];\n                if (shaderDefine) {\n                    if (value.gammaCorrection > 1)\n                        this.addDefine(shaderDefine);\n                    else\n                        this.removeDefine(shaderDefine);\n                }\n                this._texIdSet.add(value.id);\n            }\n            if (lastValue)\n                this._texIdSet.delete(lastValue.id);\n            this.changeMark++;\n            this._bindGroupChange = true;\n            this._data[index] = value;\n            lastValue && lastValue._removeReference();\n            value && value._addReference();\n            (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a.setTexture(index, value);\n            if (this.skinShaderData)\n                for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                    this.skinShaderData[i].setTexture(index, value);\n        }\n    }\n    _setInternalTexture(index, value) {\n        var _a;\n        const lastValue = this._data[index];\n        if (lastValue != value) {\n            if (value) {\n                const shaderDefine = WebGPURenderEngine._instance._texGammaDefine[index];\n                if (shaderDefine) {\n                    if (value.gammaCorrection > 1)\n                        this.addDefine(shaderDefine);\n                    else\n                        this.removeDefine(shaderDefine);\n                }\n                this._texIdSet.add(value.globalId);\n            }\n            if (lastValue)\n                this._texIdSet.delete(lastValue.globalId);\n            this.changeMark++;\n            this._bindGroupChange = true;\n            this._data[index] = value;\n            (_a = this.instShaderData) === null || _a === void 0 ? void 0 : _a._setInternalTexture(index, value);\n            if (this.skinShaderData)\n                for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                    this.skinShaderData[i]._setInternalTexture(index, value);\n        }\n    }\n    getTexture(index) {\n        return this._data[index];\n    }\n    getSourceIndex(value) {\n        for (const index in this._data)\n            if (this._data[index] === value)\n                return Number(index);\n        return -1;\n    }\n    cloneTo(dest) {\n        var _a;\n        for (const index in this._data) {\n            dest._data[index] = this._data[index];\n            (_a = dest._uniformBuffer) === null || _a === void 0 ? void 0 : _a.setUniformData(Number(index), this._data[index]);\n        }\n        dest._defineDatas.clear();\n        this._defineDatas.cloneTo(dest._defineDatas);\n        dest._gammaColorMap.clear();\n        this._gammaColorMap.forEach((value, key) => { dest._gammaColorMap.set(key, value); });\n        dest._texIdSet.clear();\n        this._texIdSet.forEach(id => dest._texIdSet.add(id));\n        dest._infoId = this._infoId;\n        dest._isShare = this._isShare;\n        dest._isStatic = this._isStatic;\n        dest.stateKey = this.stateKey;\n        dest.changeMark = this.changeMark;\n    }\n    clone() {\n        const dest = new WebGPUShaderData();\n        this.cloneTo(dest);\n        return dest;\n    }\n    clearData() {\n        for (const index in this._data)\n            if (this._data[index] instanceof Resource)\n                this._data[index]._removeReference();\n        this._name = undefined;\n        this._data = {};\n        this._defineDatas.clear();\n        this.changeMark = 0;\n        this._elementType = 0;\n        this._isShare = true;\n        this._isStatic = false;\n        this._texIdSet.clear();\n        this.stateKey = '';\n        this._bindGroupChange = false;\n        this._bindInfoId = undefined;\n        this._gammaColorMap.clear();\n        if (this._bindGroupItem) {\n            this._bindGroupItem.refNum--;\n            this._bindGroupItem = null;\n        }\n        this._infoId = undefined;\n        this._uniformBuffer = null;\n        this._uniformBufferMap.forEach(v => v.destroy());\n        this._uniformBufferMap.clear();\n        if (this.instShaderData) {\n            this.instShaderData.clearData();\n            this.instShaderData = null;\n        }\n        if (this.skinShaderData) {\n            for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                this.skinShaderData[i].clearData();\n            this.skinShaderData = null;\n        }\n    }\n    destroy() {\n        if (!this._destroyed)\n            this.recover(true);\n    }\n    _realDestroy() {\n        if (!this._destroyed && !this._recovered) {\n            this._destroyed = true;\n            WebGPUGlobal.releaseId(this);\n            WebGPUShaderData._objectCount--;\n            for (const index in this._data)\n                if (this._data[index] instanceof Resource)\n                    this._data[index]._removeReference();\n            this._data = null;\n            this.clearDefine();\n            this._texIdSet.clear();\n            this._gammaColorMap.clear();\n            this._gammaColorMap = null;\n            if (this._bindGroupItem) {\n                this._bindGroupItem.refNum--;\n                this._bindGroupItem = null;\n            }\n            this._uniformBuffer = null;\n            this._uniformBufferMap.forEach(v => v.destroy());\n            this._uniformBufferMap.clear();\n            this._uniformBufferMap = null;\n            if (this.instShaderData) {\n                this.instShaderData._realDestroy();\n                this.instShaderData = null;\n            }\n            if (this.skinShaderData) {\n                for (let i = this.skinShaderData.length - 1; i > -1; i--)\n                    this.skinShaderData[i]._realDestroy();\n                this.skinShaderData = null;\n            }\n        }\n    }\n}\nWebGPUShaderData._objectCount = 0;\nWebGPUShaderData._MAX_BIND_GROUP_NUM = 10;\nWebGPUShaderData._BIND_GROUP_CLEAR_INTERVAL = 10000;\nWebGPUShaderData._clearBindGroupTimeStamp = 0;\nWebGPUShaderData._bindGroupMap = new Map();\nWebGPUShaderData._pool = [];\n","export class WebGPUTimingHelper {\n    constructor(device) {\n        this._resultBufferPool = [];\n        this._state = 'free';\n        this._device = device;\n        this._canTimestamp = device.features.has('timestamp-query');\n        if (this._canTimestamp) {\n            this._querySet = device.createQuerySet({\n                type: 'timestamp',\n                count: 2,\n            });\n            this._resolveBuffer = device.createBuffer({\n                label: 'queryResolve',\n                size: this._querySet.count * 8,\n                usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_SRC,\n            });\n        }\n    }\n    _beginTimestampPass(encoder, fnName, descriptor) {\n        if (this._canTimestamp && this._state === 'free') {\n            this._state = 'need resolve';\n            const pass = encoder[fnName](Object.assign(Object.assign({}, descriptor), { timestampWrites: {\n                    querySet: this._querySet,\n                    beginningOfPassWriteIndex: 0,\n                    endOfPassWriteIndex: 1,\n                } }));\n            const resolve = () => this._resolveTiming(encoder);\n            const origEnd = pass.end;\n            pass.end = function () {\n                origEnd.call(this);\n                resolve();\n                return undefined;\n            };\n            return pass;\n        }\n        else {\n            return encoder[fnName](descriptor);\n        }\n    }\n    beginRenderPass(encoder, descriptor) {\n        return this._beginTimestampPass(encoder, 'beginRenderPass', descriptor);\n    }\n    beginComputePass(encoder, descriptor) {\n        return this._beginTimestampPass(encoder, 'beginComputePass', descriptor);\n    }\n    _resolveTiming(encoder) {\n        if (this._canTimestamp && this._state === 'need resolve') {\n            this._state = 'wait for result';\n            this._resultBuffer = this._resultBufferPool.pop() || this._device.createBuffer({\n                label: 'queryResult',\n                size: this._resolveBuffer.size,\n                usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n            });\n            encoder.resolveQuerySet(this._querySet, 0, this._querySet.count, this._resolveBuffer, 0);\n            encoder.copyBufferToBuffer(this._resolveBuffer, 0, this._resultBuffer, 0, this._resultBuffer.size);\n        }\n    }\n    async getResult() {\n        if (this._canTimestamp && this._state === 'wait for result') {\n            this._state = 'mapped';\n            const resultBuffer = this._resultBuffer;\n            await resultBuffer.mapAsync(GPUMapMode.READ);\n            const times = new BigInt64Array(resultBuffer.getMappedRange());\n            const duration = Number(times[1] - times[0]);\n            resultBuffer.unmap();\n            this._state = 'free';\n            this._resultBufferPool.push(resultBuffer);\n            return duration;\n        }\n        return -1;\n    }\n    isFree() {\n        return this._state === 'free';\n    }\n}\n","import { WebGPUTimingHelper } from \"./WebGPUTimingHelper\";\nexport class WebGPUTimingManager {\n    get groupNum() {\n        return this._groupNum;\n    }\n    constructor(device) {\n        this._timingPool = [];\n        this._timingGroups = [[], [], []];\n        this._timingFrames = [0, 0, 0];\n        this._groupNum = 0;\n        this._device = device;\n    }\n    getTimingHelper(frameCount) {\n        var _a;\n        if (this._timingFrames[0] !== frameCount) {\n            const groups = this._timingGroups[2];\n            for (let i = 2; i > 0; i--) {\n                this._timingFrames[i] = this._timingFrames[i - 1];\n                this._timingGroups[i] = this._timingGroups[i - 1];\n            }\n            this._timingGroups[0] = groups;\n            this._timingFrames[0] = frameCount;\n            for (let i = this._timingGroups[0].length - 1; i > -1; i--)\n                this._timingPool.push(this._timingGroups[0][i]);\n            this._timingGroups[0].length = 0;\n        }\n        const timing = (_a = this._getTimingFromPool()) !== null && _a !== void 0 ? _a : new WebGPUTimingHelper(this._device);\n        this._timingGroups[0].push(timing);\n        return timing;\n    }\n    _getTimingFromPool() {\n        for (let i = this._timingPool.length - 1; i > -1; i--)\n            if (this._timingPool[i].isFree())\n                return this._timingPool.splice(i, 1)[0];\n        return null;\n    }\n    getGPUFrameTime() {\n        return new Promise(async (resolve, reject) => {\n            const group = this._timingGroups[2];\n            let time = 0, n = group.length;\n            this._groupNum = n;\n            for (let i = group.length - 1; i > -1; i--) {\n                group[i].getResult().then(t => {\n                    time += t;\n                    n--;\n                    if (n === 0) {\n                        this._timingPool.push(...group);\n                        group.length = 0;\n                        resolve(((time * 1.e-6) * 1000 | 0) / 1000);\n                    }\n                });\n            }\n        });\n    }\n}\n","import { UniformBufferBlock } from \"../../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferBlock\";\nimport { WebGPUGlobal } from \"../WebGPUStatis/WebGPUGlobal\";\nexport class WebGPUBufferBlock extends UniformBufferBlock {\n    constructor(buffer, index, size, alignedSize, user) {\n        super(buffer, index, size, alignedSize, user);\n        this.objectName = 'WebGPUBufferBlock';\n        this.globalId = WebGPUGlobal.getId(this);\n        WebGPUGlobal.action(this, 'getMemory', this._alignedSize);\n    }\n    destroy() {\n        if (super.destroy()) {\n            WebGPUGlobal.action(this, 'returnMemory | uniform', this._alignedSize);\n            WebGPUGlobal.releaseId(this);\n            return true;\n        }\n        return false;\n    }\n}\n","import { UniformBufferCluster } from \"../../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferCluster\";\nimport { WebGPUGlobal } from \"../WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUBufferBlock } from \"./WebGPUBufferBlock\";\nexport class WebGPUBufferCluster extends UniformBufferCluster {\n    constructor(blockSize, blockNum, manager) {\n        super(blockSize, blockNum, manager);\n        this.objectName = 'WebGPUBufferCluster';\n        this.globalId = WebGPUGlobal.getId(this);\n        WebGPUGlobal.action(this, 'allocMemory', this._totalSize);\n    }\n    _createBufferBlock(index, size, alignedSize, user) {\n        return new WebGPUBufferBlock(this, index, size, alignedSize, user);\n    }\n    _expandBuffer() {\n        const ret = super._expandBuffer();\n        if (ret)\n            this.manager.renderContext.notifyGPUBufferChange();\n        return ret;\n    }\n    _moveBlock(index) {\n        const ret = super._moveBlock(index);\n        if (ret)\n            this.manager.renderContext.notifyGPUBufferChange();\n        return ret;\n    }\n    optimize() {\n        const ret = super.optimize();\n        if (ret)\n            this.manager.renderContext.notifyGPUBufferChange();\n        return ret;\n    }\n    removeHole() {\n        const ret = super.removeHole();\n        if (ret)\n            this.manager.renderContext.notifyGPUBufferChange();\n        return ret;\n    }\n    destroy() {\n        if (super.destroy()) {\n            WebGPUGlobal.action(this, 'releaseMemory | uniform', this._totalSize);\n            WebGPUGlobal.releaseId(this);\n            return true;\n        }\n        return false;\n    }\n}\n","import { GPUEngineStatisticsInfo } from \"../../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { UniformBufferManager } from \"../../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferManager\";\nimport { WebGPURenderEngine } from \"../WebGPURenderEngine\";\nimport { WebGPUGlobal } from \"../WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUStatis } from \"../WebGPUStatis/WebGPUStatis\";\nimport { WebGPUBufferCluster } from \"./WebGPUBufferCluster\";\nexport class WebGPUBufferManager extends UniformBufferManager {\n    get renderContext() {\n        return this._renderContext;\n    }\n    set renderContext(rc) {\n        this._renderContext = rc;\n    }\n    constructor(engine, useBigBuffer) {\n        super(useBigBuffer);\n        engine.on(\"endFrame\", this, this.endFrame);\n        engine.on(\"startFrame\", this, this.startFrame);\n        this.objectName = 'WebGPUBufferManager';\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    _createBufferCluster(size, blockNum) {\n        return new WebGPUBufferCluster(size, blockNum, this);\n    }\n    destroy() {\n        if (super.destroy())\n            return true;\n        return false;\n    }\n    createGPUBuffer(size, name) {\n        return this._renderContext.device.createBuffer({\n            label: name,\n            size,\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n        });\n    }\n    writeBuffer(buffer, data, offset, size) {\n        this._renderContext.device.queue.writeBuffer(buffer, offset, data, offset, size);\n    }\n    statisGPUMemory(bytes) {\n        super.statisGPUMemory(bytes);\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, bytes);\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUBuffer, bytes);\n        WebGPUGlobal.action(this, 'expandMemory | uniform', bytes);\n    }\n    statisUpload(count, bytes) {\n        super.statisUpload(count, bytes);\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.C_UniformBufferUploadCount, count);\n        WebGPUStatis.addUploadNum(count);\n        WebGPUStatis.addUploadBytes(bytes);\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { RenderParams } from \"../../../RenderEngine/RenderEnum/RenderParams\";\nimport { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { EventDispatcher } from \"../../../events/EventDispatcher\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nimport { ShaderDefine } from \"../../RenderModuleData/Design/ShaderDefine\";\nimport { WebGPUCapable } from \"./WebGPUCapable\";\nimport { WebGPUShaderData } from \"./WebGPUShaderData\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUTextureContext, WebGPUTextureFormat } from \"./WebGPUTextureContext\";\nimport { WebGPUTimingManager } from \"./WebGPUTimingManager\";\nimport { WebGPUBufferManager } from \"./WebGPUUniform/WebGPUBufferManager\";\nexport class WebGPUConfig {\n    constructor() {\n        this.deviceDescriptor = {};\n        this.alphaMode = 'premultiplied';\n        this.usage = GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC;\n        this.colorSpace = 'srgb';\n        this.depthStencilFormat = WebGPUTextureFormat.depth24plus_stencil8;\n        this.msaa = false;\n    }\n}\nexport class WebGPURenderEngine extends EventDispatcher {\n    constructor(config, canvas) {\n        super();\n        this._screenResized = false;\n        this._remapZ = false;\n        this._screenInvertY = true;\n        this._lodTextureSample = false;\n        this._breakTextureSample = false;\n        this._enableStatistics = false;\n        this._timingCount = 0;\n        this._timingAverage = 0;\n        this._timingQuerySum = 0;\n        this._timingQueryStart = 0;\n        this._GPUStatisticsInfo = new Map();\n        this.objectName = 'WebGPURenderEngine';\n        this._propertyNameMap = {};\n        this._propertyNameCounter = 0;\n        this._defineMap = {};\n        this._defineCounter = 0;\n        this._maskMap = [];\n        this._texGammaDefine = {};\n        this._config = config;\n        this._canvas = canvas;\n        if (navigator.gpu)\n            WebGPURenderEngine._instance = this;\n        else\n            console.error('WebGPU is not supported by your browser');\n        this.gpuBufferMgr = new WebGPUBufferManager(this, WebGPUGlobal.useBigBuffer);\n        this._initStatisticsInfo();\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    _getAdapter() {\n        return navigator.gpu.requestAdapter({ powerPreference: this._config.powerPreference });\n    }\n    _initAdapter(adapter) {\n        var _a;\n        if (!adapter) {\n            throw 'Could not retrieve a WebGPU adapter (adapter is null).';\n        }\n        else {\n            this._adapter = adapter;\n            const deviceDescriptor = this._config.deviceDescriptor;\n            this._adapterSupportedExtensions = [];\n            (_a = this._adapter.features) === null || _a === void 0 ? void 0 : _a.forEach(feature => this._adapterSupportedExtensions.push(feature));\n            if (deviceDescriptor === null || deviceDescriptor === void 0 ? void 0 : deviceDescriptor.requiredFeatures) {\n                const requestedExtensions = deviceDescriptor.requiredFeatures;\n                const validExtensions = [];\n                for (const extension of requestedExtensions)\n                    if (this._adapterSupportedExtensions.indexOf(extension) !== -1)\n                        validExtensions.push(extension);\n                deviceDescriptor.requiredFeatures = validExtensions;\n            }\n        }\n    }\n    _getGPUdevice(deviceDescriptor) {\n        this._supportCapatable = new WebGPUCapable(deviceDescriptor);\n        return this._adapter.requestDevice(deviceDescriptor);\n    }\n    _unCapturedErrorCall(event) {\n        console.warn('WebGPU unCaptured error: ' + event.error);\n        console.warn('WebGPU unCaptured error message: ' + event.error.message);\n    }\n    _deviceLostCall(info) {\n        console.error('WebGPU context lost' + info);\n    }\n    _initDevice(device) {\n        this._device = device;\n        this._deviceEnabledExtensions = [];\n        this._device.features.forEach(element => {\n            this._deviceEnabledExtensions.push(element);\n        });\n        this._device.addEventListener('uncapturederror', this._unCapturedErrorCall);\n        this._device.lost.then(this._deviceLostCall);\n        if (WebGPUGlobal.useTimeQuery)\n            this.timingManager = new WebGPUTimingManager(device);\n    }\n    async _initAsync() {\n        return await this._getAdapter()\n            .then((adapter) => {\n            this._initAdapter(adapter);\n            return this._getGPUdevice(this._config.deviceDescriptor);\n        })\n            .then((device) => {\n            this._initDevice(device);\n            console.log('WebGPU start');\n            return Promise.resolve();\n        }, (e) => {\n            console.log(e);\n            throw 'Could not get WebGPU device';\n        });\n    }\n    resizeOffScreen(width, height) {\n        const w = width | 0;\n        const h = height | 0;\n        if (w === 0 || h === 0)\n            return;\n        if (!this._screenRT\n            || this._screenRT._textures[0].width !== w\n            || this._screenRT._textures[0].height !== h) {\n            this.createScreenRT();\n        }\n    }\n    getDevice() {\n        return this._device;\n    }\n    upload() {\n        this.gpuBufferMgr.upload();\n    }\n    _initContext() {\n        var _a;\n        this._context = this._canvas.getContext('webgpu');\n        if (!this._context)\n            throw 'Could not get context';\n        const format = this._config.swapChainFormat || WebGPUTextureFormat.bgra8unorm;\n        const usage = (_a = this._config.usage) !== null && _a !== void 0 ? _a : GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.COPY_SRC;\n        this._context.configure({\n            device: this._device,\n            format,\n            usage,\n            alphaMode: this._config.alphaMode,\n        });\n    }\n    async initRenderEngine() {\n        await this._initAsync();\n        this._initContext();\n        this._textureContext = new WebGPUTextureContext(this);\n        this.createScreenRT();\n    }\n    copySubFrameBuffertoTex(texture, level, xoffset, yoffset, x, y, width, height) {\n        throw new NotImplementedError;\n    }\n    propertyNameToID(name) {\n        if (this._propertyNameMap[name] !== undefined) {\n            return this._propertyNameMap[name];\n        }\n        else {\n            const id = this._propertyNameCounter++;\n            this._propertyNameMap[name] = id;\n            this._propertyNameMap[id] = name;\n            return id;\n        }\n    }\n    propertyIDToName(id) {\n        return this._propertyNameMap[id];\n    }\n    getDefineByName(name) {\n        let define = this._defineMap[name];\n        if (!define) {\n            const maskMap = this._maskMap;\n            const counter = this._defineCounter;\n            const index = Math.floor(counter / 32);\n            const value = 1 << counter % 32;\n            define = new ShaderDefine(index, value);\n            this._defineMap[name] = define;\n            if (index === maskMap.length) {\n                maskMap.length++;\n                maskMap[index] = {};\n            }\n            maskMap[index][value] = name;\n            this._defineCounter++;\n        }\n        return define;\n    }\n    getNamesByDefineData(defineData, out) {\n        const maskMap = this._maskMap;\n        const mask = defineData._mask;\n        out.length = 0;\n        for (let i = 0, n = defineData._length; i < n; i++) {\n            const subMaskMap = maskMap[i];\n            const subMask = mask[i];\n            for (let j = 0; j < 32; j++) {\n                const d = 1 << j;\n                if (subMask > 0 && d > subMask)\n                    break;\n                if (subMask & d)\n                    out.push(subMaskMap[d]);\n            }\n        }\n    }\n    addTexGammaDefine(key, value) {\n        this._texGammaDefine[key] = value;\n    }\n    getParams(params) {\n        switch (params) {\n            case RenderParams.Max_Active_Texture_Count:\n                return this._device.limits.maxSampledTexturesPerShaderStage;\n            case RenderParams.Max_Uniform_Count:\n                return this._device.limits.maxUniformBuffersPerShaderStage;\n            case RenderParams.Max_AnisoLevel_Count:\n                return 16;\n            case RenderParams.MAX_Texture_Size:\n                return this._device.limits.maxTextureDimension2D;\n            case RenderParams.MAX_Texture_Image_Uint:\n                return 1024;\n        }\n        return 0;\n    }\n    getCapable(capatableType) {\n        return this._supportCapatable.getCapable(capatableType);\n    }\n    getTextureContext() {\n        return this._textureContext;\n    }\n    _initStatisticsInfo() {\n        for (let i = 0; i < GPUEngineStatisticsInfo.Count; i++)\n            this._GPUStatisticsInfo.set(i, 0);\n    }\n    _addStatisticsInfo(info, value) {\n        this._enableStatistics && this._GPUStatisticsInfo.set(info, this._GPUStatisticsInfo.get(info) + value);\n    }\n    clearStatisticsInfo() {\n        if (this._enableStatistics) {\n            for (let i = 0; i < GPUEngineStatisticsInfo.FrameClearCount; i++) {\n                this._GPUStatisticsInfo.set(i, 0);\n            }\n        }\n    }\n    getStatisticsInfo(info) {\n        return this._GPUStatisticsInfo.get(info);\n    }\n    createScreenRT() {\n        this._screenRT =\n            this._textureContext.createRenderTargetInternal(this._canvas.width, this._canvas.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false, false, 1);\n        this._screenResized = true;\n    }\n    startFrame() {\n        this.event('startFrame');\n    }\n    endFrame() {\n        this.event('endFrame');\n        WebGPUShaderData.endFrame();\n        if (WebGPUGlobal.useTimeQuery) {\n            this.timingManager.getGPUFrameTime().then(time => {\n                this._timingCount++;\n                this._timingQuerySum += time;\n                if (this._timingCount === 1)\n                    this._timingQueryStart = Laya.timer.currTimer;\n                if (this._timingCount >= 1 && Laya.timer.currTimer - this._timingQueryStart > 1000) {\n                    this._timingAverage = ((this._timingQuerySum / this._timingCount) * 1000 | 0) / 1000;\n                    this._timingCount = 0;\n                    this._timingQuerySum = 0;\n                }\n            });\n        }\n    }\n}\n","import { Laya } from \"../../../../Laya\";\nimport { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nexport class WebGPURenderCommandEncoder {\n    constructor() {\n        this.objectName = 'WebGPURenderCommandEncoder';\n        this._engine = WebGPURenderEngine._instance;\n        this._device = this._engine.getDevice();\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    startRender(renderPassDesc) {\n        this._commandEncoder = this._device.createCommandEncoder();\n        this.encoder = WebGPUGlobal.useTimeQuery ?\n            this._engine.timingManager.getTimingHelper(Laya.timer.currFrame).beginRenderPass(this._commandEncoder, renderPassDesc) :\n            this._commandEncoder.beginRenderPass(renderPassDesc);\n    }\n    setPipeline(pipeline) {\n        this.encoder.setPipeline(pipeline);\n    }\n    setIndexBuffer(buffer, indexFormat, byteSize, offset = 0) {\n        this.encoder.setIndexBuffer(buffer, indexFormat, offset, byteSize);\n    }\n    setVertexBuffer(slot, buffer, offset = 0, size = 0) {\n        this.encoder.setVertexBuffer(slot, buffer, offset, size);\n    }\n    drawIndirect(indirectBuffer, indirectOffset) {\n    }\n    drawIndexedIndirect(indirectBuffer, indirectOffset) {\n    }\n    setBindGroup(index, bindGroup, dynamicOffsets) {\n        this.encoder.setBindGroup(index, bindGroup, dynamicOffsets);\n    }\n    setBindGroupByDataOffaset(index, bindGroup, dynamicOffsetsData, dynamicOffsetsDataStart, dynamicOffsetsDataLength) {\n        this.encoder.setBindGroup(index, bindGroup, dynamicOffsetsData, dynamicOffsetsDataStart, dynamicOffsetsDataLength);\n    }\n    setViewport(x, y, width, height, minDepth, maxDepth) {\n        this.encoder.setViewport(x, y, width, height, minDepth, maxDepth);\n    }\n    setScissorRect(x, y, width, height) {\n        this.encoder.setScissorRect(x, y, width, height);\n    }\n    setStencilReference(ref) {\n        this.encoder.setStencilReference(ref);\n    }\n    end() {\n        this.encoder.end();\n    }\n    finish() {\n        return this._commandEncoder.finish();\n    }\n    playBundle(bundles) {\n        this.encoder.executeBundles(bundles);\n    }\n    applyGeometry(geometry, setBuffer = true) {\n        const { bufferState, indexFormat, drawType, instanceCount, _drawArrayInfo, _drawElementInfo } = geometry;\n        const { _vertexBuffers: vertexBuffers, _bindedIndexBuffer: indexBuffer } = bufferState;\n        let indexByte = 2;\n        if (setBuffer) {\n            vertexBuffers.forEach((vb, i) => this.setVertexBuffer(i, vb.source._source, 0, vb.source._size));\n            if (indexBuffer) {\n                indexByte = geometry.gpuIndexByte;\n                this.setIndexBuffer(indexBuffer.source._source, geometry.gpuIndexFormat, indexBuffer.source._size, 0);\n            }\n        }\n        let triangles = 0;\n        let count = 0, start = 0;\n        switch (drawType) {\n            case DrawType.DrawArray:\n                for (let i = _drawArrayInfo.length - 1; i > -1; i--) {\n                    count = _drawArrayInfo[i].count;\n                    start = _drawArrayInfo[i].start;\n                    triangles += count - 2;\n                    this.encoder.draw(count, 1, start, 0);\n                }\n                break;\n            case DrawType.DrawElement:\n                for (let i = _drawElementInfo.length - 1; i > -1; i--) {\n                    count = _drawElementInfo[i].elementCount;\n                    start = _drawElementInfo[i].elementStart;\n                    triangles += count / 3;\n                    this.encoder.drawIndexed(count, 1, start / indexByte, 0);\n                }\n                break;\n            case DrawType.DrawArrayInstance:\n                for (let i = _drawArrayInfo.length - 1; i > -1; i--) {\n                    count = _drawArrayInfo[i].count;\n                    start = _drawArrayInfo[i].start;\n                    triangles += (count - 2) * instanceCount;\n                    this.encoder.draw(count, instanceCount, start, 0);\n                    this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                }\n                break;\n            case DrawType.DrawElementInstance:\n                for (let i = _drawElementInfo.length - 1; i > -1; i--) {\n                    count = _drawElementInfo[i].elementCount;\n                    start = _drawElementInfo[i].elementStart;\n                    triangles += count / 3 * instanceCount;\n                    this.encoder.drawIndexed(count, instanceCount, start / indexByte, 0);\n                    this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                }\n                break;\n        }\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, triangles);\n        return triangles;\n    }\n    applyGeometryPart(geometry, part, setBuffer = true) {\n        const { bufferState, indexFormat, drawType, instanceCount, _drawArrayInfo, _drawElementInfo } = geometry;\n        const { _vertexBuffers: vertexBuffers, _bindedIndexBuffer: indexBuffer } = bufferState;\n        let indexByte = 2;\n        if (setBuffer) {\n            vertexBuffers.forEach((vb, i) => this.setVertexBuffer(i, vb.source._source, 0, vb.source._size));\n            if (indexBuffer) {\n                indexByte = geometry.gpuIndexByte;\n                this.setIndexBuffer(indexBuffer.source._source, geometry.gpuIndexFormat, indexBuffer.source._size, 0);\n            }\n        }\n        let triangles = 0;\n        let count = 0, start = 0;\n        switch (drawType) {\n            case DrawType.DrawArray:\n                count = _drawArrayInfo[part].count;\n                start = _drawArrayInfo[part].start;\n                triangles = count - 2;\n                this.encoder.draw(count, 1, start, 0);\n                break;\n            case DrawType.DrawElement:\n                count = _drawElementInfo[part].elementCount;\n                start = _drawElementInfo[part].elementStart;\n                triangles = count / 3;\n                this.encoder.drawIndexed(count, 1, start / indexByte, 0);\n                break;\n            case DrawType.DrawArrayInstance:\n                count = _drawArrayInfo[part].count;\n                start = _drawArrayInfo[part].start;\n                triangles = (count - 2) * instanceCount;\n                this.encoder.draw(count, instanceCount, start, 0);\n                this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                break;\n            case DrawType.DrawElementInstance:\n                count = _drawElementInfo[part].elementCount;\n                start = _drawElementInfo[part].elementStart;\n                triangles = count / 3 * instanceCount;\n                this.encoder.drawIndexed(count, instanceCount, start / indexByte, 0);\n                this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                break;\n        }\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, triangles);\n        return triangles;\n    }\n    destroy() {\n        WebGPUGlobal.releaseId(this);\n    }\n}\n","import { RenderClearFlag } from \"../../../RenderEngine/RenderEnum/RenderClearFlag\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { Color } from \"../../../maths/Color\";\nimport { Viewport } from \"../../../maths/Viewport\";\nimport { WebGPUContext } from \"../3DRenderPass/WebGPUContext\";\nimport { WebGPURenderCommandEncoder } from \"../RenderDevice/WebGPURenderCommandEncoder\";\nimport { WebGPURenderEngine } from \"../RenderDevice/WebGPURenderEngine\";\nimport { WebGPURenderPassHelper } from \"../RenderDevice/WebGPURenderPassHelper\";\nimport { WebGPUShaderData, WebGPUShaderDataElementType } from \"../RenderDevice/WebGPUShaderData\";\nimport { WebGPUGlobal } from \"../RenderDevice/WebGPUStatis/WebGPUGlobal\";\nimport { WebGPUStatis } from \"../RenderDevice/WebGPUStatis/WebGPUStatis\";\nexport class WebGPURenderContext2D {\n    constructor() {\n        this.invertY = false;\n        this.pipelineMode = 'Forward';\n        this.sceneData = WebGPUShaderData.create(null, WebGPUShaderDataElementType.Element2D, 'scene');\n        this.cameraData = WebGPUShaderData.create(null, WebGPUShaderDataElementType.Element2D, 'camera');\n        this.renderCommand = new WebGPURenderCommandEncoder();\n        this.pipelineCache = [];\n        this._needStart = true;\n        this._globalConfigShaderData = Shader3D._configDefineValues;\n        this._clearColor = new Color();\n        this._viewport = new Viewport();\n    }\n    getRenderTarget() {\n        return this.destRT;\n    }\n    drawRenderElementList(list) {\n        const len = list.length;\n        if (len === 0)\n            return 0;\n        if (this._needStart) {\n            this._start();\n            this._needStart = false;\n        }\n        if (WebGPUGlobal.useGlobalContext)\n            WebGPUContext.startRender();\n        for (let i = 0, n = list.length; i < n; i++) {\n            list.elements[i].prepare(this);\n            list.elements[i].render(this, this.renderCommand);\n        }\n        this._submit();\n        return 0;\n    }\n    setOffscreenView(width, height) {\n        this._offscreenWidth = width;\n        this._offscreenHeight = height;\n    }\n    setRenderTarget(value, clear, clearColor) {\n        this._needClearColor = clear;\n        clearColor && clearColor.cloneTo(this._clearColor);\n        if (this.destRT !== value) {\n            this.destRT = value;\n            this._needStart = true;\n        }\n        if (value)\n            this._viewport.set(0, 0, value._textures[0].width, value._textures[0].height);\n    }\n    drawRenderElementOne(node) {\n        if (this._needStart) {\n            this._start();\n            this._needStart = false;\n        }\n        if (WebGPUGlobal.useGlobalContext)\n            WebGPUContext.startRender();\n        node.prepare(this);\n        node.render(this, this.renderCommand);\n        this._submit();\n    }\n    runOneCMD(cmd) {\n        cmd.apply(this);\n    }\n    runCMDList(cmds) {\n        cmds.forEach(cmd => cmd.apply(this));\n    }\n    _submit() {\n        const engine = WebGPURenderEngine._instance;\n        this.renderCommand.end();\n        engine.upload();\n        this.device.queue.submit([this.renderCommand.finish()]);\n        this._needStart = true;\n        WebGPUStatis.addSubmit();\n    }\n    _setScreenRT() {\n        if (!this.destRT) {\n            WebGPURenderEngine._instance._screenRT._textures[0].resource = WebGPURenderEngine._instance._context.getCurrentTexture();\n            WebGPURenderEngine._instance._screenRT._textures[0].multiSamplers = 1;\n            this.setRenderTarget(WebGPURenderEngine._instance._screenRT, this._needClearColor, this._clearColor);\n        }\n    }\n    _start() {\n        this._setScreenRT();\n        this.device = WebGPURenderEngine._instance.getDevice();\n        const renderPassDesc = WebGPURenderPassHelper.getDescriptor(this.destRT, this._needClearColor ? RenderClearFlag.Color : RenderClearFlag.Nothing, this._clearColor);\n        this.renderCommand.startRender(renderPassDesc);\n        this.renderCommand.setViewport(this._viewport.x, this._viewport.y, this._viewport.width, this._viewport.height, 0, 1);\n        this._needClearColor = false;\n    }\n}\n","import { BlendEquationSeparate } from \"../../../RenderEngine/RenderEnum/BlendEquationSeparate\";\nimport { BlendFactor } from \"../../../RenderEngine/RenderEnum/BlendFactor\";\nimport { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\nimport { CompareFunction } from \"../../../RenderEngine/RenderEnum/CompareFunction\";\nimport { CullMode, FrontFace } from \"../../../RenderEngine/RenderEnum/CullMode\";\nimport { MeshTopology } from \"../../../RenderEngine/RenderEnum/RenderPologyMode\";\nimport { RenderTargetFormat } from \"../../../RenderEngine/RenderEnum/RenderTargetFormat\";\nimport { StencilOperation } from \"../../../RenderEngine/RenderEnum/StencilOperation\";\nimport { RenderState } from \"../../RenderModuleData/Design/RenderState\";\nimport { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nexport class WebGPUBlendState {\n    static getBlendState(blend, operationRGB, srcBlendRGB, dstBlendRGB, operationAlpha, srcBlendAlpha, dstBlendAlpha) {\n        const cacheID = this._getBlendStateCacheID(blend, operationRGB, srcBlendRGB, dstBlendRGB, operationAlpha, srcBlendAlpha, dstBlendAlpha);\n        let state = this._cache[cacheID];\n        if (!state)\n            this._cache[cacheID] = state = { state: this._createBlendState(operationRGB, srcBlendRGB, dstBlendRGB, operationAlpha, srcBlendAlpha, dstBlendAlpha), key: cacheID, id: this._idCounter++ };\n        return state;\n    }\n    static _getBlendStateCacheID(blend, operationRGB, srcBlendRGB, dstBlendRGB, operationAlpha, srcBlendAlpha, dstBlendAlpha) {\n        if (blend === BlendType.BLEND_DISABLE) {\n            return 0;\n        }\n        else {\n            return (blend << this._pointer_BlendType) +\n                (srcBlendRGB << this._pointer_srcBlendRGB_BlendFactor) +\n                (dstBlendRGB << this._pointer_dstBlendRGB_BlendFactor) +\n                (srcBlendAlpha << this._pointer_srcBlendAlpha_BlendFactor) +\n                (dstBlendAlpha << this._pointer_dstBlendAlpha_BlendFactor) +\n                (operationRGB << this._pointer_OperationRGB_BlendEquationSeparate) +\n                (operationAlpha << this._pointer_OperationAlpha_BlendEquationSeparate);\n        }\n    }\n    static _createBlendState(operationRGB, srcBlendRGB, dstBlendRGB, operationAlpha, srcBlendAlpha, dstBlendAlpha) {\n        return {\n            color: this._getComponent(operationRGB, srcBlendRGB, dstBlendRGB),\n            alpha: this._getComponent(operationAlpha, srcBlendAlpha, dstBlendAlpha)\n        };\n    }\n    static _getFactor(factor) {\n        switch (factor) {\n            case BlendFactor.Zero:\n                return \"zero\";\n            case BlendFactor.One:\n                return \"one\";\n            case BlendFactor.SourceColor:\n                return \"src\";\n            case BlendFactor.OneMinusSourceColor:\n                return \"one-minus-src\";\n            case BlendFactor.DestinationColor:\n                return \"dst\";\n            case BlendFactor.OneMinusDestinationColor:\n                return \"one-minus-dst\";\n            case BlendFactor.SourceAlpha:\n                return \"src-alpha\";\n            case BlendFactor.OneMinusSourceAlpha:\n                return \"one-minus-src-alpha\";\n            case BlendFactor.DestinationAlpha:\n                return \"dst-alpha\";\n            case BlendFactor.OneMinusDestinationAlpha:\n                return \"one-minus-dst-alpha\";\n            case BlendFactor.SourceAlphaSaturate:\n                return \"src-alpha-saturated\";\n            case BlendFactor.BlendColor:\n                return \"constant\";\n            case BlendFactor.OneMinusBlendColor:\n                return \"one-minus-constant\";\n        }\n    }\n    static _getComponent(operation, src, dst) {\n        const comp = {};\n        switch (operation) {\n            case BlendEquationSeparate.ADD:\n                comp.operation = \"add\";\n                break;\n            case BlendEquationSeparate.SUBTRACT:\n                comp.operation = \"subtract\";\n                break;\n            case BlendEquationSeparate.MAX:\n                comp.operation = \"max\";\n                break;\n            case BlendEquationSeparate.MIN:\n                comp.operation = \"min\";\n                break;\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\n                comp.operation = \"reverse-subtract\";\n                break;\n            default:\n                comp.operation = \"add\";\n                break;\n        }\n        ;\n        comp.srcFactor = WebGPUBlendState._getFactor(src);\n        comp.dstFactor = WebGPUBlendState._getFactor(dst);\n        return comp;\n    }\n}\nWebGPUBlendState._idCounter = 0;\nWebGPUBlendState._pointer_BlendType = 0;\nWebGPUBlendState._pointer_OperationRGB_BlendEquationSeparate = 4;\nWebGPUBlendState._pointer_OperationAlpha_BlendEquationSeparate = 8;\nWebGPUBlendState._pointer_srcBlendRGB_BlendFactor = 12;\nWebGPUBlendState._pointer_dstBlendRGB_BlendFactor = 16;\nWebGPUBlendState._pointer_srcBlendAlpha_BlendFactor = 20;\nWebGPUBlendState._pointer_dstBlendAlpha_BlendFactor = 24;\nWebGPUBlendState._cache = {};\nexport class WebGPUDepthStencilState {\n    static getDepthStencilState(format, depthWriteEnabled, depthCompare, stencilParam = null, depthBiasParam = null) {\n        const cacheID = this._getDepthStencilCacheID(format, depthWriteEnabled, depthCompare, stencilParam, depthBiasParam);\n        let state = this._cache[cacheID];\n        if (!state)\n            this._cache[cacheID] = state = { state: this._createDepthStencilState(format, depthWriteEnabled, depthCompare, stencilParam, depthBiasParam), key: cacheID, id: this._idCounter++ };\n        return state;\n    }\n    static _getDepthStencilCacheID(format, depthWriteEnabled, depthCompare, stencilParam = null, depthBiasParam = null) {\n        if (stencilParam && stencilParam['enable'])\n            return (Number(depthWriteEnabled) << this._pointer_DepthWriteEnable) +\n                (depthCompare << this._pointer_DepthCompare) +\n                (format << this._pointer_DepthFormat) +\n                (stencilParam['test'] << this._pointer_StencilTest) +\n                (stencilParam['op'].x << this._pointer_StencilOp1) +\n                (stencilParam['op'].y << this._pointer_StencilOp2) +\n                (stencilParam['op'].z << this._pointer_StencilOp3);\n        return (Number(depthWriteEnabled) << this._pointer_DepthWriteEnable) +\n            (depthCompare << this._pointer_DepthCompare) +\n            (format << this._pointer_DepthFormat);\n    }\n    static _createDepthStencilState(format, depthWriteEnabled, depthCompare, stencilParam = null, depthBiasParam = null) {\n        let stateFormat;\n        let stateDepthCompare;\n        switch (format) {\n            case RenderTargetFormat.DEPTH_16:\n                stateFormat = \"depth16unorm\";\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\n                stateFormat = \"depth24plus-stencil8\";\n                break;\n            case RenderTargetFormat.DEPTH_32:\n                stateFormat = \"depth32float\";\n                break;\n            case RenderTargetFormat.STENCIL_8:\n                stateFormat = \"stencil8\";\n                break;\n            case RenderTargetFormat.DEPTHSTENCIL_24_Plus:\n                stateFormat = \"depth24plus\";\n                break;\n            default:\n                stateFormat = \"depth24plus-stencil8\";\n                break;\n        }\n        switch (depthCompare) {\n            case CompareFunction.Never:\n                stateDepthCompare = \"never\";\n                break;\n            case CompareFunction.Less:\n                stateDepthCompare = \"less\";\n                break;\n            case CompareFunction.Equal:\n                stateDepthCompare = \"equal\";\n                break;\n            case CompareFunction.LessEqual:\n                stateDepthCompare = \"less-equal\";\n                break;\n            case CompareFunction.Greater:\n                stateDepthCompare = \"greater\";\n                break;\n            case CompareFunction.NotEqual:\n                stateDepthCompare = \"not-equal\";\n                break;\n            case CompareFunction.GreaterEqual:\n                stateDepthCompare = \"greater-equal\";\n                break;\n            case CompareFunction.Always:\n                stateDepthCompare = \"always\";\n                break;\n            default:\n                stateDepthCompare = \"less\";\n                break;\n        }\n        const state = {\n            format: stateFormat,\n            depthCompare: stateDepthCompare,\n            depthWriteEnabled,\n        };\n        if (stencilParam && stencilParam['enable']) {\n            let stateStencilCompare;\n            let stateFailOp;\n            let stateDepthFailOp;\n            let statePassOp;\n            switch (stencilParam['test']) {\n                case RenderState.STENCILTEST_NEVER:\n                    stateStencilCompare = 'never';\n                    break;\n                case RenderState.STENCILTEST_LESS:\n                    stateStencilCompare = 'less';\n                    break;\n                case RenderState.STENCILTEST_EQUAL:\n                    stateStencilCompare = 'equal';\n                    break;\n                case RenderState.STENCILTEST_GREATER:\n                    stateStencilCompare = 'greater';\n                    break;\n                case RenderState.STENCILTEST_NOTEQUAL:\n                    stateStencilCompare = 'not-equal';\n                    break;\n                case RenderState.STENCILTEST_GEQUAL:\n                    stateStencilCompare = 'greater-equal';\n                    break;\n                case RenderState.STENCILTEST_ALWAYS:\n                    stateStencilCompare = 'always';\n                    break;\n                default:\n                    stateStencilCompare = 'less';\n                    break;\n            }\n            switch (stencilParam['op'].x) {\n                case StencilOperation.Keep:\n                    stateFailOp = 'keep';\n                    break;\n                case StencilOperation.Zero:\n                    stateFailOp = 'zero';\n                    break;\n                case StencilOperation.Invert:\n                    stateFailOp = 'invert';\n                    break;\n                case StencilOperation.Replace:\n                    stateFailOp = 'replace';\n                    break;\n                case StencilOperation.IncrementSaturate:\n                    stateFailOp = 'increment-clamp';\n                    break;\n                case StencilOperation.DecrementSaturate:\n                    stateFailOp = 'decrement-clamp';\n                    break;\n                case StencilOperation.IncrementWrap:\n                    stateFailOp = 'increment-wrap';\n                    break;\n                case StencilOperation.DecrementWrap:\n                    stateFailOp = 'decrement-wrap';\n                    break;\n            }\n            switch (stencilParam['op'].y) {\n                case StencilOperation.Keep:\n                    stateDepthFailOp = 'keep';\n                    break;\n                case StencilOperation.Zero:\n                    stateDepthFailOp = 'zero';\n                    break;\n                case StencilOperation.Invert:\n                    stateDepthFailOp = 'invert';\n                    break;\n                case StencilOperation.Replace:\n                    stateDepthFailOp = 'replace';\n                    break;\n                case StencilOperation.IncrementSaturate:\n                    stateDepthFailOp = 'increment-clamp';\n                    break;\n                case StencilOperation.DecrementSaturate:\n                    stateDepthFailOp = 'decrement-clamp';\n                    break;\n                case StencilOperation.IncrementWrap:\n                    stateDepthFailOp = 'increment-wrap';\n                    break;\n                case StencilOperation.DecrementWrap:\n                    stateDepthFailOp = 'decrement-wrap';\n                    break;\n            }\n            switch (stencilParam['op'].z) {\n                case StencilOperation.Keep:\n                    statePassOp = 'keep';\n                    break;\n                case StencilOperation.Zero:\n                    statePassOp = 'zero';\n                    break;\n                case StencilOperation.Invert:\n                    statePassOp = 'invert';\n                    break;\n                case StencilOperation.Replace:\n                    statePassOp = 'replace';\n                    break;\n                case StencilOperation.IncrementSaturate:\n                    statePassOp = 'increment-clamp';\n                    break;\n                case StencilOperation.DecrementSaturate:\n                    statePassOp = 'decrement-clamp';\n                    break;\n                case StencilOperation.IncrementWrap:\n                    statePassOp = 'increment-wrap';\n                    break;\n                case StencilOperation.DecrementWrap:\n                    statePassOp = 'decrement-wrap';\n                    break;\n            }\n            state.stencilFront = {\n                compare: stateStencilCompare,\n                failOp: stateFailOp,\n                depthFailOp: stateDepthFailOp,\n                passOp: statePassOp\n            };\n            state.stencilReadMask = 0xff;\n            if (stencilParam['write'])\n                state.stencilWriteMask = 0xff;\n        }\n        return state;\n    }\n}\nWebGPUDepthStencilState._idCounter = 0;\nWebGPUDepthStencilState._pointer_DepthWriteEnable = 0;\nWebGPUDepthStencilState._pointer_DepthCompare = 4;\nWebGPUDepthStencilState._pointer_DepthFormat = 8;\nWebGPUDepthStencilState._pointer_StencilTest = 12;\nWebGPUDepthStencilState._pointer_StencilOp1 = 16;\nWebGPUDepthStencilState._pointer_StencilOp2 = 20;\nWebGPUDepthStencilState._pointer_StencilOp3 = 24;\nWebGPUDepthStencilState._cache = {};\nexport class WebGPUPrimitiveState {\n    static getGPUPrimitiveState(topology, frontFace, cullMode) {\n        const cacheID = this._getGPUPrimitiveStateID(topology, frontFace, cullMode);\n        let state = this._cache[cacheID];\n        if (!state)\n            this._cache[cacheID] = state = { state: this._createPrimitiveState(topology, frontFace, cullMode), key: cacheID, id: this._idCounter++ };\n        return state;\n    }\n    static _getGPUPrimitiveStateID(topology, frontFace, cullMode) {\n        return (topology << this._pointer_Topology) +\n            (frontFace << this._pointer_FrontFace) +\n            (cullMode << this._pointer_CullMode);\n    }\n    static _createPrimitiveState(topology, frontFace, cullMode) {\n        const state = {};\n        switch (topology) {\n            case MeshTopology.Points:\n                state.topology = \"point-list\";\n                break;\n            case MeshTopology.Lines:\n                state.topology = \"line-list\";\n                break;\n            case MeshTopology.LineStrip:\n                state.topology = \"line-strip\";\n                break;\n            case MeshTopology.Triangles:\n                state.topology = \"triangle-list\";\n                break;\n            case MeshTopology.TriangleStrip:\n                state.topology = \"triangle-strip\";\n                break;\n            default:\n                state.topology = \"triangle-list\";\n                break;\n        }\n        switch (cullMode) {\n            case CullMode.Off:\n                state.cullMode = \"none\";\n                break;\n            case CullMode.Back:\n                state.cullMode = \"back\";\n                break;\n            case CullMode.Front:\n                state.cullMode = \"front\";\n                break;\n        }\n        switch (frontFace) {\n            case FrontFace.CCW:\n                state.frontFace = \"cw\";\n                break;\n            case FrontFace.CW:\n                state.frontFace = \"ccw\";\n                break;\n        }\n        return state;\n    }\n}\nWebGPUPrimitiveState._idCounter = 0;\nWebGPUPrimitiveState._pointer_Topology = 0;\nWebGPUPrimitiveState._pointer_FrontFace = 4;\nWebGPUPrimitiveState._pointer_CullMode = 8;\nWebGPUPrimitiveState._cache = {};\nexport class WebGPURenderPipeline {\n    static getRenderPipeline(info, shaderInstance, renderTarget, entries, stateKey) {\n        var _a;\n        const primitiveState = WebGPUPrimitiveState.getGPUPrimitiveState(info.geometry.mode, info.frontFace, info.cullMode);\n        return this._createRenderPipeline(info.blendState.state, (_a = info.depthStencilState) === null || _a === void 0 ? void 0 : _a.state, primitiveState.state, info.geometry.bufferState.vertexState, shaderInstance, renderTarget, entries, stateKey);\n    }\n    static _createRenderPipeline(blendState, depthState, primitiveState, vertexBuffers, shaderInstance, renderTarget, entries, stateKey) {\n        const device = WebGPURenderEngine._instance.getDevice();\n        const descriptor = shaderInstance.getRenderPipelineDescriptor();\n        descriptor.label = 'render_' + this.idCounter;\n        descriptor.vertex.buffers = vertexBuffers;\n        const textureNum = renderTarget._textures.length;\n        if (renderTarget._textures[0]._webGPUFormat === 'depth16unorm'\n            || renderTarget._textures[0]._webGPUFormat === 'depth24plus-stencil8'\n            || renderTarget._textures[0]._webGPUFormat === 'depth32float') {\n            renderTarget._colorStates.length = 0;\n            renderTarget._colorStates[0] = {\n                format: renderTarget._depthTexture._webGPUFormat,\n                blend: blendState,\n                writeMask: GPUColorWrite.ALL,\n            };\n        }\n        else {\n            if (renderTarget._colorStates.length === textureNum) {\n                for (let i = renderTarget._colorStates.length - 1; i > -1; i--) {\n                    renderTarget._colorStates[i].format = renderTarget._textures[i]._webGPUFormat;\n                    renderTarget._colorStates[i].blend = blendState;\n                }\n            }\n            else {\n                renderTarget._colorStates.length = textureNum;\n                for (let i = 0; i < textureNum; i++) {\n                    renderTarget._colorStates[i] = {\n                        format: renderTarget._textures[i]._webGPUFormat,\n                        blend: blendState,\n                        writeMask: GPUColorWrite.ALL,\n                    };\n                }\n            }\n        }\n        descriptor.fragment.targets = renderTarget._colorStates;\n        descriptor.primitive = primitiveState;\n        if (renderTarget._textures[0]._webGPUFormat === 'depth16unorm'\n            || renderTarget._textures[0]._webGPUFormat === 'depth24plus-stencil8'\n            || renderTarget._textures[0]._webGPUFormat === 'depth32float') {\n            descriptor.depthStencil = {\n                format: renderTarget._textures[0]._webGPUFormat,\n                depthWriteEnabled: true,\n                depthCompare: 'less',\n            };\n        }\n        else {\n            if (depthState)\n                descriptor.depthStencil = depthState;\n            else\n                delete descriptor.depthStencil;\n        }\n        descriptor.layout = shaderInstance.createPipelineLayout(device, 'pipelineLayout_' + this.idCounter, entries);\n        descriptor.multisample.count = renderTarget._samples;\n        const renderPipeline = device.createRenderPipeline(descriptor);\n        this.idCounter++;\n        return renderPipeline;\n    }\n}\nWebGPURenderPipeline.idCounter = 0;\n","import { CullMode, FrontFace } from \"../../../RenderEngine/RenderEnum/CullMode\";\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { ShaderDefines2D } from \"../../../webgl/shader/d2/ShaderDefines2D\";\nimport { RenderState } from \"../../RenderModuleData/Design/RenderState\";\nimport { WebDefineDatas } from \"../../RenderModuleData/WebModuleData/WebDefineDatas\";\nimport { WebGPUContext } from \"../3DRenderPass/WebGPUContext\";\nimport { WebGPUCodeGenerator } from \"../RenderDevice/WebGPUCodeGenerator\";\nimport { WebGPUBlendState, WebGPUDepthStencilState, WebGPURenderPipeline } from \"../RenderDevice/WebGPURenderPipelineHelper\";\nimport { WebGPUShaderData, WebGPUShaderDataElementType } from \"../RenderDevice/WebGPUShaderData\";\nimport { WebGPUGlobal } from \"../RenderDevice/WebGPUStatis/WebGPUGlobal\";\nexport class WebGPURenderElement2D {\n    constructor() {\n        this._stateKey = [];\n        this._pipeline = [];\n        this._shaderInstances = [];\n        this._passNum = 0;\n        this._passIndex = [];\n        this._shaderDataState = {};\n        this._shaderDataObject = {};\n        this.needClearBundle = false;\n        this.isStatic = false;\n        this.staticChange = false;\n        this.renderStateIsBySprite = true;\n        this.objectName = 'WebGPURenderElement2D';\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    _getShaderPassUniform(shaderpass, defineData) {\n        const defineString = WebGPURenderElement2D._defineStrings;\n        Shader3D._getNamesByDefineData(defineData, defineString);\n        return WebGPUCodeGenerator.collectUniform(defineString, shaderpass._owner._uniformMap, shaderpass._VS, shaderpass._PS);\n    }\n    _collectUniform(compileDefine) {\n        const uniformMap = {};\n        const arrayMap = {};\n        const passes = this.subShader._passes;\n        for (let i = passes.length - 1; i > -1; i--) {\n            const { uniform, arr } = this._getShaderPassUniform(passes[i], compileDefine);\n            for (const key in uniform)\n                uniformMap[key] = uniform[key];\n            for (const key in arr)\n                arrayMap[key] = arr[key];\n        }\n        return { uniformMap, arrayMap };\n    }\n    _compileShader(context) {\n        var _a, _b, _c, _d;\n        const compileDefine = WebGPURenderElement2D._compileDefine;\n        if (this._sceneData)\n            this._sceneData._defineDatas.cloneTo(compileDefine);\n        else if (context._globalConfigShaderData)\n            context._globalConfigShaderData.cloneTo(compileDefine);\n        const returnGamma = !(context.destRT) || ((context.destRT)._textures[0].gammaCorrection != 1);\n        if (returnGamma)\n            compileDefine.add(ShaderDefines2D.GAMMASPACE);\n        else\n            compileDefine.remove(ShaderDefines2D.GAMMASPACE);\n        compileDefine.add(ShaderDefines2D.GAMMASPACE);\n        if (context.invertY)\n            compileDefine.add(ShaderDefines2D.INVERTY);\n        else\n            compileDefine.remove(ShaderDefines2D.INVERTY);\n        if (this.value2DShaderData)\n            compileDefine.addDefineDatas(this.value2DShaderData.getDefineData());\n        if (this.materialShaderData)\n            compileDefine.addDefineDatas(this.materialShaderData._defineDatas);\n        for (let i = 0; i < this._passNum; i++) {\n            const index = this._passIndex[i];\n            const pass = this.subShader._passes[index];\n            if (!pass.moduleData.getCacheShader(compileDefine.clone())) {\n                const { uniformMap, arrayMap } = this._collectUniform(compileDefine);\n                pass.uniformMap = uniformMap;\n                pass.arrayMap = arrayMap;\n            }\n            if (this.value2DShaderData)\n                pass.nodeCommonMap = this.nodeCommonMap;\n            else\n                pass.nodeCommonMap = null;\n            const shaderInstance = pass.withCompile(compileDefine.clone(), true);\n            this._shaderInstances[index] = shaderInstance;\n            if (i === 0) {\n                (_a = this._sceneData) === null || _a === void 0 ? void 0 : _a._createUniformBuffer(shaderInstance.uniformInfo[0], false);\n                (_b = this._cameraData) === null || _b === void 0 ? void 0 : _b._createUniformBuffer(shaderInstance.uniformInfo[1], true);\n                (_c = this.value2DShaderData) === null || _c === void 0 ? void 0 : _c._createUniformBuffer(shaderInstance.uniformInfo[2], false);\n                (_d = this.materialShaderData) === null || _d === void 0 ? void 0 : _d._createUniformBuffer(shaderInstance.uniformInfo[3], false);\n            }\n        }\n        this._takeCurPass(context.pipelineMode);\n    }\n    _calcStateKey(shaderInstance, dest, context) {\n        let stateKey = '';\n        stateKey += dest.formatId + '_';\n        stateKey += dest._samples + '_';\n        stateKey += shaderInstance._id + '_';\n        if (this.renderStateIsBySprite || !this.materialShaderData)\n            stateKey += this.value2DShaderData.stateKey;\n        else\n            stateKey += this.materialShaderData.stateKey;\n        stateKey += this.geometry.bufferState.stateId + '_';\n        stateKey += this.geometry.bufferState.updateBufferLayoutFlag;\n        return stateKey;\n    }\n    _getWebGPURenderPipeline(shaderInstance, dest, context, entries, stateKey) {\n        this._getBlendState(shaderInstance);\n        this._getDepthStencilState(shaderInstance, dest);\n        if (this.renderStateIsBySprite || !this.materialShaderData)\n            this._getCullFrontMode(this.value2DShaderData, shaderInstance, false, context.invertY);\n        else\n            this._getCullFrontMode(this.materialShaderData, shaderInstance, false, context.invertY);\n        return WebGPURenderPipeline.getRenderPipeline(this, shaderInstance, dest, entries, stateKey);\n    }\n    _getBlendState(shaderInstance) {\n        if (this.renderStateIsBySprite || !this.materialShaderData) {\n            if (shaderInstance._shaderPass.statefirst)\n                this.blendState = this._getRenderStateBlendByShader(this.value2DShaderData, shaderInstance);\n            else\n                this.blendState = this._getRenderStateBlendByMaterial(this.value2DShaderData);\n        }\n        else {\n            if (shaderInstance._shaderPass.statefirst)\n                this.blendState = this._getRenderStateBlendByShader(this.materialShaderData, shaderInstance);\n            else\n                this.blendState = this._getRenderStateBlendByMaterial(this.materialShaderData);\n        }\n    }\n    _getRenderStateBlendByShader(shaderData, shaderInstance) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\n        const data = shaderData.getData();\n        const renderState = shaderInstance._shaderPass.renderState;\n        const blend = (_b = ((_a = renderState.blend) !== null && _a !== void 0 ? _a : data[Shader3D.BLEND])) !== null && _b !== void 0 ? _b : RenderState.Default.blend;\n        let blendState;\n        switch (blend) {\n            case RenderState.BLEND_DISABLE:\n                blendState = WebGPUBlendState.getBlendState(blend, RenderState.BLENDEQUATION_ADD, RenderState.BLENDPARAM_ONE, RenderState.BLENDPARAM_ZERO, RenderState.BLENDEQUATION_ADD, RenderState.BLENDPARAM_ONE, RenderState.BLENDPARAM_ZERO);\n                break;\n            case RenderState.BLEND_ENABLE_ALL:\n                const blendEquation = (_d = ((_c = renderState.blendEquation) !== null && _c !== void 0 ? _c : data[Shader3D.BLEND_EQUATION])) !== null && _d !== void 0 ? _d : RenderState.Default.blendEquation;\n                const srcBlend = (_f = ((_e = renderState.srcBlend) !== null && _e !== void 0 ? _e : data[Shader3D.BLEND_SRC])) !== null && _f !== void 0 ? _f : RenderState.Default.srcBlend;\n                const dstBlend = (_h = ((_g = renderState.dstBlend) !== null && _g !== void 0 ? _g : data[Shader3D.BLEND_DST])) !== null && _h !== void 0 ? _h : RenderState.Default.dstBlend;\n                blendState = WebGPUBlendState.getBlendState(blend, blendEquation, srcBlend, dstBlend, blendEquation, srcBlend, dstBlend);\n                break;\n            case RenderState.BLEND_ENABLE_SEPERATE:\n                const blendEquationRGB = (_k = ((_j = renderState.blendEquationRGB) !== null && _j !== void 0 ? _j : data[Shader3D.BLEND_EQUATION_RGB])) !== null && _k !== void 0 ? _k : RenderState.Default.blendEquationRGB;\n                const blendEquationAlpha = (_m = ((_l = renderState.blendEquationAlpha) !== null && _l !== void 0 ? _l : data[Shader3D.BLEND_EQUATION_ALPHA])) !== null && _m !== void 0 ? _m : RenderState.Default.blendEquationAlpha;\n                const srcRGB = (_p = ((_o = renderState.srcBlendRGB) !== null && _o !== void 0 ? _o : data[Shader3D.BLEND_SRC_RGB])) !== null && _p !== void 0 ? _p : RenderState.Default.srcBlendRGB;\n                const dstRGB = (_r = ((_q = renderState.dstBlendRGB) !== null && _q !== void 0 ? _q : data[Shader3D.BLEND_DST_RGB])) !== null && _r !== void 0 ? _r : RenderState.Default.dstBlendRGB;\n                const srcAlpha = (_t = ((_s = renderState.srcBlendAlpha) !== null && _s !== void 0 ? _s : data[Shader3D.BLEND_SRC_ALPHA])) !== null && _t !== void 0 ? _t : RenderState.Default.srcBlendAlpha;\n                const dstAlpha = (_v = ((_u = renderState.dstBlendAlpha) !== null && _u !== void 0 ? _u : data[Shader3D.BLEND_DST_ALPHA])) !== null && _v !== void 0 ? _v : RenderState.Default.dstBlendAlpha;\n                blendState = WebGPUBlendState.getBlendState(blend, blendEquationRGB, srcRGB, dstRGB, blendEquationAlpha, srcAlpha, dstAlpha);\n                break;\n            default:\n                throw 'blendState set error';\n        }\n        return blendState;\n    }\n    _getRenderStateBlendByMaterial(shaderData) {\n        var _a;\n        const data = shaderData.getData();\n        const blend = (_a = data[Shader3D.BLEND]) !== null && _a !== void 0 ? _a : RenderState.Default.blend;\n        let blendState;\n        switch (blend) {\n            case RenderState.BLEND_DISABLE:\n                blendState = WebGPUBlendState.getBlendState(blend, RenderState.BLENDEQUATION_ADD, RenderState.BLENDPARAM_ONE, RenderState.BLENDPARAM_ZERO, RenderState.BLENDEQUATION_ADD, RenderState.BLENDPARAM_ONE, RenderState.BLENDPARAM_ZERO);\n                break;\n            case RenderState.BLEND_ENABLE_ALL:\n                let blendEquation = data[Shader3D.BLEND_EQUATION];\n                blendEquation = blendEquation !== null && blendEquation !== void 0 ? blendEquation : RenderState.Default.blendEquation;\n                let srcBlend = data[Shader3D.BLEND_SRC];\n                srcBlend = srcBlend !== null && srcBlend !== void 0 ? srcBlend : RenderState.Default.srcBlend;\n                let dstBlend = data[Shader3D.BLEND_DST];\n                dstBlend = dstBlend !== null && dstBlend !== void 0 ? dstBlend : RenderState.Default.dstBlend;\n                blendState = WebGPUBlendState.getBlendState(blend, blendEquation, srcBlend, dstBlend, blendEquation, srcBlend, dstBlend);\n                break;\n            case RenderState.BLEND_ENABLE_SEPERATE:\n                let blendEquationRGB = data[Shader3D.BLEND_EQUATION_RGB];\n                blendEquationRGB = blendEquationRGB !== null && blendEquationRGB !== void 0 ? blendEquationRGB : RenderState.Default.blendEquationRGB;\n                let blendEquationAlpha = data[Shader3D.BLEND_EQUATION_ALPHA];\n                blendEquationAlpha = blendEquationAlpha !== null && blendEquationAlpha !== void 0 ? blendEquationAlpha : RenderState.Default.blendEquationAlpha;\n                let srcRGB = data[Shader3D.BLEND_SRC_RGB];\n                srcRGB = srcRGB !== null && srcRGB !== void 0 ? srcRGB : RenderState.Default.srcBlendRGB;\n                let dstRGB = data[Shader3D.BLEND_DST_RGB];\n                dstRGB = dstRGB !== null && dstRGB !== void 0 ? dstRGB : RenderState.Default.dstBlendRGB;\n                let srcAlpha = data[Shader3D.BLEND_SRC_ALPHA];\n                srcAlpha = srcAlpha !== null && srcAlpha !== void 0 ? srcAlpha : RenderState.Default.srcBlendAlpha;\n                let dstAlpha = data[Shader3D.BLEND_DST_ALPHA];\n                dstAlpha = dstAlpha !== null && dstAlpha !== void 0 ? dstAlpha : RenderState.Default.dstBlendAlpha;\n                blendState = WebGPUBlendState.getBlendState(blend, blendEquationRGB, srcRGB, dstRGB, blendEquationAlpha, srcAlpha, dstAlpha);\n                break;\n            default:\n                throw 'blendState set error';\n        }\n        return blendState;\n    }\n    _getDepthStencilState(shaderInstance, dest) {\n        if (dest._depthTexture) {\n            if (this.renderStateIsBySprite || !this.materialShaderData) {\n                if (shaderInstance._shaderPass.statefirst)\n                    this.depthStencilState = this._getRenderStateDepthByShader(this.value2DShaderData, shaderInstance, dest);\n                else\n                    this.depthStencilState = this._getRenderStateDepthByMaterial(this.value2DShaderData, dest);\n            }\n            else {\n                if (shaderInstance._shaderPass.statefirst)\n                    this.depthStencilState = this._getRenderStateDepthByShader(this.materialShaderData, shaderInstance, dest);\n                else\n                    this.depthStencilState = this._getRenderStateDepthByMaterial(this.materialShaderData, dest);\n            }\n        }\n        else\n            this.depthStencilState = null;\n    }\n    _getRenderStateDepthByShader(shaderData, shaderInstance, dest) {\n        var _a, _b, _c, _d;\n        const data = shaderData.getData();\n        const renderState = shaderInstance._shaderPass.renderState;\n        const depthWrite = (_b = ((_a = renderState.depthWrite) !== null && _a !== void 0 ? _a : data[Shader3D.DEPTH_WRITE])) !== null && _b !== void 0 ? _b : RenderState.Default.depthWrite;\n        const depthTest = (_d = ((_c = renderState.depthTest) !== null && _c !== void 0 ? _c : data[Shader3D.DEPTH_TEST])) !== null && _d !== void 0 ? _d : RenderState.Default.depthTest;\n        return WebGPUDepthStencilState.getDepthStencilState(dest.depthStencilFormat, depthWrite, depthTest);\n    }\n    _getRenderStateDepthByMaterial(shaderData, dest) {\n        var _a, _b;\n        const data = shaderData.getData();\n        const depthWrite = (_a = data[Shader3D.DEPTH_WRITE]) !== null && _a !== void 0 ? _a : RenderState.Default.depthWrite;\n        const depthTest = (_b = data[Shader3D.DEPTH_TEST]) !== null && _b !== void 0 ? _b : RenderState.Default.depthTest;\n        return WebGPUDepthStencilState.getDepthStencilState(dest.depthStencilFormat, depthWrite, depthTest);\n    }\n    _getCullFrontMode(shaderData, shaderInstance, isTarget, invertFront) {\n        var _a;\n        const renderState = shaderInstance._shaderPass.renderState;\n        const data = shaderData.getData();\n        let cull = data[Shader3D.CULL];\n        if (shaderInstance._shaderPass.statefirst)\n            cull = (_a = renderState.cull) !== null && _a !== void 0 ? _a : cull;\n        cull = cull !== null && cull !== void 0 ? cull : RenderState.Default.cull;\n        switch (cull) {\n            case RenderState.CULL_NONE:\n                this.cullMode = CullMode.Off;\n                if (isTarget !== invertFront)\n                    this.frontFace = FrontFace.CCW;\n                else\n                    this.frontFace = FrontFace.CW;\n                break;\n            case RenderState.CULL_FRONT:\n                this.cullMode = CullMode.Front;\n                if (isTarget !== invertFront)\n                    this.frontFace = FrontFace.CCW;\n                else\n                    this.frontFace = FrontFace.CW;\n                break;\n            case RenderState.CULL_BACK:\n            default:\n                this.cullMode = CullMode.Back;\n                if (isTarget !== invertFront)\n                    this.frontFace = FrontFace.CCW;\n                else\n                    this.frontFace = FrontFace.CW;\n                break;\n        }\n    }\n    _isShaderDataChange(context) {\n        let change = false;\n        let shaderDataState = this._shaderDataState[context.pipelineMode];\n        let shaderDataObject = this._shaderDataObject[context.pipelineMode];\n        if (!shaderDataState)\n            shaderDataState = this._shaderDataState[context.pipelineMode] = [];\n        if (!shaderDataObject)\n            shaderDataObject = this._shaderDataObject[context.pipelineMode] = [];\n        if (this._sceneData) {\n            if (shaderDataState[0] != this._sceneData.changeMark) {\n                shaderDataState[0] = this._sceneData.changeMark;\n                change = true;\n            }\n            if (shaderDataObject[0] != this._sceneData.globalId) {\n                shaderDataObject[0] = this._sceneData.globalId;\n                change = true;\n            }\n        }\n        if (this._cameraData) {\n            if (shaderDataState[1] != this._cameraData.changeMark) {\n                shaderDataState[1] = this._cameraData.changeMark;\n                change = true;\n            }\n            if (shaderDataObject[1] != this._cameraData.globalId) {\n                shaderDataObject[1] = this._cameraData.globalId;\n                change = true;\n            }\n        }\n        if (this.value2DShaderData) {\n            if (shaderDataState[2] != this.value2DShaderData.changeMark) {\n                shaderDataState[2] = this.value2DShaderData.changeMark;\n                change = true;\n            }\n            if (shaderDataObject[2] != this.value2DShaderData.globalId) {\n                shaderDataObject[2] = this.value2DShaderData.globalId;\n                change = true;\n            }\n        }\n        if (this.materialShaderData) {\n            if (shaderDataState[3] != this.materialShaderData.changeMark) {\n                shaderDataState[3] = this.materialShaderData.changeMark;\n                change = true;\n            }\n            if (shaderDataObject[3] != this.materialShaderData.globalId) {\n                shaderDataObject[3] = this.materialShaderData.globalId;\n                change = true;\n            }\n        }\n        return change;\n    }\n    _createBindGroupLayout(shaderInstance) {\n        let entries;\n        const bindGroupLayout = new Array(4);\n        const shaderData = new Array(4);\n        shaderData[0] = this._sceneData;\n        shaderData[1] = this._cameraData;\n        shaderData[2] = this.value2DShaderData;\n        shaderData[3] = this.materialShaderData;\n        const uniformSetMap = shaderInstance.uniformSetMap;\n        let error = false;\n        for (let i = 0; i < 4; i++) {\n            if (shaderData[i]) {\n                entries = shaderData[i].createBindGroupLayoutEntry(uniformSetMap[i]);\n                if (entries)\n                    bindGroupLayout[i] = entries;\n                else\n                    error = true;\n            }\n            else\n                error = true;\n        }\n        return error ? undefined : bindGroupLayout;\n    }\n    _bindGroup(shaderInstance, command) {\n        var _a, _b, _c, _d;\n        const uniformSetMap = shaderInstance.uniformSetMap;\n        (_a = this._sceneData) === null || _a === void 0 ? void 0 : _a.bindGroup(0, 'scene3D', uniformSetMap[0], command);\n        (_b = this._cameraData) === null || _b === void 0 ? void 0 : _b.bindGroup(1, 'camera', uniformSetMap[1], command);\n        (_c = this.value2DShaderData) === null || _c === void 0 ? void 0 : _c.bindGroup(2, 'sprite3D', uniformSetMap[2], command);\n        (_d = this.materialShaderData) === null || _d === void 0 ? void 0 : _d.bindGroup(3, 'material', uniformSetMap[3], command);\n    }\n    _uploadUniform() {\n        var _a, _b, _c, _d;\n        (_a = this._sceneData) === null || _a === void 0 ? void 0 : _a.uploadUniform();\n        (_b = this._cameraData) === null || _b === void 0 ? void 0 : _b.uploadUniform();\n        (_c = this.value2DShaderData) === null || _c === void 0 ? void 0 : _c.uploadUniform();\n        (_d = this.materialShaderData) === null || _d === void 0 ? void 0 : _d.uploadUniform();\n    }\n    _uploadGeometry(command) {\n        let triangles = 0;\n        if (command) {\n            if (WebGPUGlobal.useGlobalContext)\n                triangles += WebGPUContext.applyCommandGeometry(command, this.geometry);\n            else\n                triangles += command.applyGeometry(this.geometry);\n        }\n        return triangles;\n    }\n    _createPipeline(index, context, shaderInstance, command, stateKey) {\n        this.value2DShaderData.isShare = false;\n        const bindGroupLayout = this._createBindGroupLayout(shaderInstance);\n        if (bindGroupLayout) {\n            const pipeline = this._getWebGPURenderPipeline(shaderInstance, context.destRT, context, bindGroupLayout, stateKey);\n            if (command) {\n                if (WebGPUGlobal.useGlobalContext)\n                    WebGPUContext.setCommandPipeline(command, pipeline);\n                else\n                    command.setPipeline(pipeline);\n            }\n            if (WebGPUGlobal.useCache) {\n                shaderInstance.renderPipelineMap.set(stateKey, pipeline);\n                this._pipeline[index] = pipeline;\n                this._stateKey[index] = stateKey;\n            }\n            context.pipelineCache.push({\n                shaderId: shaderInstance._id,\n                name: shaderInstance.name,\n                pipeline,\n                shaderInstance,\n                samples: context.destRT._samples,\n                stateKey\n            });\n            return pipeline;\n        }\n        return null;\n    }\n    _takeCurPass(pipelineMode) {\n        this._passNum = 0;\n        this._passName = pipelineMode;\n        const passes = this.subShader._passes;\n        for (let i = 0, len = passes.length; i < len; i++) {\n            if (passes[i].pipelineMode === pipelineMode) {\n                this._passIndex[this._passNum++] = i;\n            }\n        }\n    }\n    prepare(context) {\n        this._takeCurPass(context.pipelineMode);\n        if (this._passNum === 0)\n            return false;\n        this._sceneData = context.sceneData;\n        this._cameraData = context.cameraData;\n        if (!this._sceneData)\n            this._sceneData = WebGPURenderElement2D._sceneShaderData;\n        if (!this.value2DShaderData)\n            this.value2DShaderData = WebGPURenderElement2D._value2DShaderData;\n        if (!this.materialShaderData)\n            this.materialShaderData = WebGPURenderElement2D._materialShaderData;\n        let compile = false;\n        if (this._isShaderDataChange(context)) {\n            this._compileShader(context);\n            compile = true;\n        }\n        return compile;\n    }\n    render(context, command) {\n        let triangles = 0;\n        for (let i = 0; i < this._passNum; i++) {\n            const index = this._passIndex[i];\n            let pipeline = this._pipeline[index];\n            const shaderInstance = this._shaderInstances[index];\n            if (shaderInstance && shaderInstance.complete) {\n                this._getDepthStencilState(shaderInstance, context.destRT);\n                if (WebGPUGlobal.useCache) {\n                    const stateKey = this._calcStateKey(shaderInstance, context.destRT, context);\n                    if (this._stateKey[index] !== stateKey || pipeline) {\n                        this._stateKey[index] = stateKey;\n                        pipeline = this._pipeline[index] = shaderInstance.renderPipelineMap.get(stateKey);\n                    }\n                    if (!pipeline)\n                        pipeline = this._createPipeline(index, context, shaderInstance, command, stateKey);\n                    else if (command) {\n                        if (WebGPUGlobal.useGlobalContext)\n                            WebGPUContext.setCommandPipeline(command, pipeline);\n                        else\n                            command.setPipeline(pipeline);\n                    }\n                }\n                else\n                    this._createPipeline(index, context, shaderInstance, command);\n                if (command)\n                    this._bindGroup(shaderInstance, command);\n                this._uploadUniform();\n                triangles += this._uploadGeometry(command);\n            }\n        }\n        return triangles;\n    }\n    destroy() {\n        WebGPUGlobal.releaseId(this);\n        this._shaderInstances.length = 0;\n        this._pipeline.length = 0;\n        this._stateKey.length = 0;\n    }\n}\nWebGPURenderElement2D._sceneShaderData = WebGPUShaderData.create(null, WebGPUShaderDataElementType.Element2D, 'scene');\nWebGPURenderElement2D._value2DShaderData = WebGPUShaderData.create(null, WebGPUShaderDataElementType.Element2D, 'value2D');\nWebGPURenderElement2D._materialShaderData = WebGPUShaderData.create(null, WebGPUShaderDataElementType.Element2D, 'material');\nWebGPURenderElement2D._compileDefine = new WebDefineDatas();\nWebGPURenderElement2D._defineStrings = [];\nWebGPURenderElement2D.bundleIdCounter = 0;\n","import { Laya } from \"../../../../Laya\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { WebGPUSetRenderData } from \"../RenderDevice/WebGPUSetRenderData\";\nimport { WebGPUSetShaderDefine } from \"../RenderDevice/WebGPUSetShaderDefine\";\nimport { WebGPUBlit2DQuadCMD, WebGPUDraw2DElementCMD, WebGPUSetRendertarget2DCMD } from \"./WebGPU2DRenderCMD\";\nimport { WebGPURenderContext2D } from \"./WebGPURenderContext2D\";\nimport { WebGPURenderElement2D } from \"./WebGPURenderElement2D\";\nexport class WebGPURender2DProcess {\n    createSetRenderDataCMD() {\n        return new WebGPUSetRenderData();\n    }\n    createSetShaderDefineCMD() {\n        return new WebGPUSetShaderDefine();\n    }\n    createBlit2DQuadCMDData() {\n        return new WebGPUBlit2DQuadCMD();\n    }\n    createDraw2DElementCMDData() {\n        return new WebGPUDraw2DElementCMD();\n    }\n    createSetRendertarget2DCMD() {\n        return new WebGPUSetRendertarget2DCMD();\n    }\n    createRenderElement2D() {\n        return new WebGPURenderElement2D();\n    }\n    createRenderContext2D() {\n        return new WebGPURenderContext2D();\n    }\n}\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.render2DRenderPassFactory)\n        LayaGL.render2DRenderPassFactory = new WebGPURender2DProcess();\n});\n","import { GPUEngineStatisticsInfo } from \"../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { roundUp } from \"../../DriverDesign/RenderDevice/UniformBufferManager/UniformBufferManager\";\nimport { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nexport class WebGPUBuffer {\n    constructor(usage, byteSize = 0, mappedAtCreation = false) {\n        this._size = 0;\n        this._isCreate = false;\n        this._mappedAtCreation = false;\n        this.objectName = 'WebGPUBuffer';\n        this._size = roundUp(byteSize, 4);\n        this._usage = usage;\n        this._mappedAtCreation = mappedAtCreation;\n        this.globalId = WebGPUGlobal.getId(this);\n        if (this._size > 0)\n            this._create();\n    }\n    setDataLength(length) {\n        const size = roundUp(length, 4);\n        if (!this._isCreate || this._size != size) {\n            WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, -this._size);\n            WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUBuffer, -this._size);\n            this._size = size;\n            this._create();\n        }\n    }\n    _create() {\n        this._source = WebGPURenderEngine._instance.getDevice().createBuffer({\n            size: this._size,\n            usage: this._usage,\n            mappedAtCreation: this._mappedAtCreation\n        });\n        this._isCreate = true;\n        WebGPUGlobal.action(this, 'allocMemory | buffer', this._size);\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, this._size);\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUBuffer, this._size);\n    }\n    setData(srcData, srcOffset) {\n        let size = 0, offset = 0;\n        let buffer = srcData.buffer;\n        if (buffer) {\n            offset = srcData.byteOffset + srcOffset;\n            size = roundUp(srcData.byteLength, 4);\n            if (size > srcData.byteLength) {\n                const buffer2 = new ArrayBuffer(size);\n                new Uint8Array(buffer2).set(new Uint8Array(buffer, offset, srcData.byteLength));\n                buffer = buffer2;\n                offset = 0;\n            }\n            if (this._mappedAtCreation) {\n                new Uint8Array(this._source.getMappedRange(0, size)).set(new Uint8Array(buffer, offset, size));\n                this._mappedAtCreation = false;\n                this._source.unmap();\n            }\n            else\n                WebGPURenderEngine._instance.getDevice().queue.writeBuffer(this._source, 0, buffer, offset, size);\n        }\n        else {\n            offset = srcOffset;\n            size = roundUp(srcData.byteLength - offset, 4);\n            if (size > srcData.byteLength - offset) {\n                const buffer2 = new ArrayBuffer(size);\n                new Uint8Array(buffer2).set(new Uint8Array(srcData, offset, srcData.byteLength - offset));\n                srcData = buffer2;\n                offset = 0;\n            }\n            if (this._mappedAtCreation) {\n                new Uint8Array(this._source.getMappedRange(0, size)).set(new Uint8Array(srcData, offset, size));\n                this._mappedAtCreation = false;\n                this._source.unmap();\n            }\n            else\n                WebGPURenderEngine._instance.getDevice().queue.writeBuffer(this._source, 0, srcData, offset, size);\n        }\n    }\n    setDataEx(srcData, srcOffset, byteLength, dstOffset = 0) {\n        let size = 0, offset = 0;\n        let buffer = srcData.buffer;\n        if (buffer) {\n            offset = srcData.byteOffset + srcOffset;\n            size = roundUp(srcData.byteLength, 4);\n            if (size > srcData.byteLength) {\n                const buffer2 = new ArrayBuffer(size);\n                new Uint8Array(buffer2).set(new Uint8Array(buffer, offset, srcData.byteLength));\n                buffer = buffer2;\n                offset = 0;\n            }\n            if (this._mappedAtCreation) {\n                new Uint8Array(this._source.getMappedRange(dstOffset, size)).set(new Uint8Array(buffer, offset, size));\n                this._mappedAtCreation = false;\n                this._source.unmap();\n            }\n            else\n                WebGPURenderEngine._instance.getDevice().queue.writeBuffer(this._source, dstOffset, buffer, offset, size);\n        }\n        else {\n            offset = srcOffset;\n            size = roundUp(byteLength, 4);\n            if (size > byteLength) {\n                const buffer2 = new ArrayBuffer(size);\n                new Uint8Array(buffer2).set(new Uint8Array(srcData, offset, byteLength));\n                srcData = buffer2;\n                offset = 0;\n            }\n            if (this._mappedAtCreation) {\n                new Uint8Array(this._source.getMappedRange(dstOffset, size)).set(new Uint8Array(srcData, offset, size));\n                this._mappedAtCreation = false;\n                this._source.unmap();\n            }\n            else\n                WebGPURenderEngine._instance.getDevice().queue.writeBuffer(this._source, dstOffset, srcData, offset, size);\n        }\n    }\n    readDataFromBuffer() {\n        return new Promise((resolve, reject) => {\n            this._source.mapAsync(GPUMapMode.READ)\n                .then(() => {\n                const arrayBuffer = this._source.getMappedRange();\n                const data = new Uint8Array(arrayBuffer).slice();\n                this._source.unmap();\n                resolve(data);\n            })\n                .catch(error => {\n                this._source.unmap();\n                reject(error);\n            });\n        });\n    }\n    async readFromBuffer(buffer, size) {\n        await buffer.mapAsync(GPUMapMode.READ);\n        const arrayBuffer = buffer.getMappedRange();\n        const data = new Float32Array(arrayBuffer).slice(0, size / 4);\n        buffer.unmap();\n        return data;\n    }\n    release() {\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUMemory, -this._size);\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.M_GPUBuffer, -this._size);\n        WebGPUGlobal.releaseId(this);\n    }\n}\n","import { VertexElementFormat } from \"../../../renders/VertexElementFormat\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nexport var WebGPUVertexStepMode;\n(function (WebGPUVertexStepMode) {\n    WebGPUVertexStepMode[\"vertex\"] = \"vertex\";\n    WebGPUVertexStepMode[\"instance\"] = \"instance\";\n})(WebGPUVertexStepMode || (WebGPUVertexStepMode = {}));\nexport class WebGPUBufferState {\n    isNeedChangeFormat() {\n        for (let i = this._vertexBuffers.length - 1; i > -1; i--) {\n            const attributes = this.vertexState[i].attributes;\n            for (let j = attributes.length - 1; j > -1; j--) {\n                if (attributes[j].format === 'uint8x4') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    applyState(vertexBuffers, indexBuffer) {\n        this._vertexBuffers = vertexBuffers.slice();\n        this._bindedIndexBuffer = indexBuffer;\n        this._getVertexBufferLayoutArray();\n        this.updateBufferLayoutFlag++;\n    }\n    constructor() {\n        this.updateBufferLayoutFlag = 0;\n        this.vertexState = [];\n        this.objectName = 'WebGPUBufferState';\n        this.id = WebGPUBufferState.idCounter++;\n        this.stateId = 'x';\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    _getVertexBufferLayoutArray() {\n        this.stateId = '';\n        this.vertexState.length = 0;\n        this._vertexBuffers.forEach(element => {\n            const vertexDec = element.vertexDeclaration;\n            const vertexAttribute = new Array();\n            for (let i in vertexDec._shaderValues) {\n                const vertexState = vertexDec._shaderValues[i];\n                const format = this._getvertexAttributeFormat(vertexState.elementString);\n                const ss = this._getvertexAttributeSymbol(vertexState.elementString);\n                vertexAttribute.push({\n                    format,\n                    offset: vertexState.elementOffset,\n                    shaderLocation: parseInt(i)\n                });\n                this.stateId += ss;\n            }\n            const verteBufferLayout = {\n                arrayStride: vertexDec.vertexStride,\n                stepMode: element.instanceBuffer ? WebGPUVertexStepMode.instance : WebGPUVertexStepMode.vertex,\n                attributes: vertexAttribute\n            };\n            this.vertexState.push(verteBufferLayout);\n        });\n    }\n    _getvertexAttributeFormat(elementFormat) {\n        switch (elementFormat) {\n            case VertexElementFormat.Single:\n                return \"float32\";\n            case VertexElementFormat.Vector2:\n                return \"float32x2\";\n            case VertexElementFormat.Vector3:\n                return \"float32x3\";\n            case VertexElementFormat.Vector4:\n                return \"float32x4\";\n            case VertexElementFormat.Color:\n                return \"float32x4\";\n            case VertexElementFormat.Byte4:\n                return \"uint8x4\";\n            case VertexElementFormat.Byte2:\n                return \"uint8x2\";\n            case VertexElementFormat.Short2:\n                return \"float16x2\";\n            case VertexElementFormat.Short4:\n                return \"float16x4\";\n            case VertexElementFormat.NormalizedShort2:\n                return \"unorm16x2\";\n            case VertexElementFormat.NormalizedShort4:\n                return \"unorm16x4\";\n            case VertexElementFormat.NorByte4:\n                return \"unorm8x4\";\n            default:\n                throw 'no cache has vertex mode';\n        }\n    }\n    _getvertexAttributeSymbol(elementFormat) {\n        switch (elementFormat) {\n            case VertexElementFormat.Single:\n                return '0';\n            case VertexElementFormat.Vector2:\n                return '1';\n            case VertexElementFormat.Vector3:\n                return '2';\n            case VertexElementFormat.Vector4:\n                return '3';\n            case VertexElementFormat.Color:\n                return '4';\n            case VertexElementFormat.Byte4:\n                return '5';\n            case VertexElementFormat.Byte2:\n                return '6';\n            case VertexElementFormat.Short2:\n                return '7';\n            case VertexElementFormat.Short4:\n                return '8';\n            case VertexElementFormat.NormalizedShort2:\n                return '9';\n            case VertexElementFormat.NormalizedShort4:\n                return 'a';\n            case VertexElementFormat.NorByte4:\n                return 'b';\n            default:\n                throw 'no cache has vertex mode';\n        }\n    }\n    destroy() {\n        WebGPUGlobal.releaseId(this);\n    }\n}\nWebGPUBufferState.idCounter = 0;\n","import { Laya } from \"../../../../../Laya\";\nimport { DrawType } from \"../../../../RenderEngine/RenderEnum/DrawType\";\nimport { GPUEngineStatisticsInfo } from \"../../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { WebGPURenderEngine } from \"../WebGPURenderEngine\";\nimport { WebGPURenderPassHelper } from \"../WebGPURenderPassHelper\";\nexport class WebGPURenderBundle {\n    constructor(device, dest, shotRateSet) {\n        this._shotNum = 0;\n        this._shotCount = 0;\n        this._shotRateSet = 0.7;\n        this._shotEstimate = 0;\n        this.renderTimeStamp = 0;\n        this.renderTriangles = 0;\n        this.renderBundle = null;\n        this._elements = new Set();\n        const desc = WebGPURenderPassHelper.getBundleDescriptor(dest);\n        this.id = WebGPURenderBundle.idCounter++;\n        desc.label = `BundleEncoder_${this.id}`;\n        this._engine = WebGPURenderEngine._instance;\n        this._encoder = device.createRenderBundleEncoder(desc);\n        this._shotRateSet = shotRateSet;\n    }\n    render(context, element) {\n        this._elements.add(element.bundleId);\n        this.renderTriangles += element._render(context, null, this);\n        this._shotNum++;\n        this.renderTimeStamp = Laya.timer.currTimer;\n    }\n    finish() {\n        this.renderBundle = this._encoder.finish();\n        this.renderBundle.label = `RenderBundle_${this.id}`;\n    }\n    hasElement(elementId) {\n        const has = this._elements.has(elementId);\n        if (has)\n            this._shotNum++;\n        return has;\n    }\n    addShot() {\n        this._shotNum++;\n    }\n    removeMyIds(elements) {\n        this._elements.forEach(id => elements.delete(id));\n    }\n    clearShotNum() {\n        this._shotNum = 0;\n    }\n    isLowShotRate() {\n        const shotRate = this._elements.size > 0 ? this._shotNum / this._elements.size : 1;\n        if (shotRate === 1) {\n            this._shotEstimate = 0;\n            this._shotCount = 0;\n            return false;\n        }\n        if (this._shotRateSet === 1) {\n            this._shotEstimate = 0;\n            this._shotCount = 0;\n            return true;\n        }\n        if (shotRate < this._shotRateSet) {\n            if (this._shotEstimate++ > 10) {\n                this._shotEstimate = 0;\n                this._shotCount = 0;\n                return true;\n            }\n        }\n        if (this._shotCount++ > 500) {\n            this._shotEstimate = 0;\n            this._shotCount = 0;\n            return true;\n        }\n        return false;\n    }\n    setPipeline(pipeline) {\n        this._encoder.setPipeline(pipeline);\n    }\n    setIndexBuffer(buffer, indexFormat, byteSize, offset = 0) {\n        this._encoder.setIndexBuffer(buffer, indexFormat, offset, byteSize);\n    }\n    setVertexBuffer(slot, buffer, offset = 0, size = 0) {\n        this._encoder.setVertexBuffer(slot, buffer, offset, size);\n    }\n    setBindGroup(index, bindGroup, dynamicOffsets) {\n        this._encoder.setBindGroup(index, bindGroup, dynamicOffsets);\n    }\n    applyGeometry(geometry, setBuffer = true) {\n        const { bufferState, indexFormat, drawType, instanceCount, _drawArrayInfo, _drawElementInfo } = geometry;\n        const { _vertexBuffers: vertexBuffers, _bindedIndexBuffer: indexBuffer } = bufferState;\n        let indexByte = 2;\n        if (setBuffer) {\n            vertexBuffers.forEach((vb, i) => this.setVertexBuffer(i, vb.source._source, 0, vb.source._size));\n            if (indexBuffer) {\n                indexByte = geometry.gpuIndexByte;\n                this.setIndexBuffer(indexBuffer.source._source, geometry.gpuIndexFormat, indexBuffer.source._size, 0);\n            }\n        }\n        let triangles = 0;\n        let count = 0, start = 0;\n        switch (drawType) {\n            case DrawType.DrawArray:\n                for (let i = _drawArrayInfo.length - 1; i > -1; i--) {\n                    count = _drawArrayInfo[i].count;\n                    start = _drawArrayInfo[i].start;\n                    triangles += count - 2;\n                    this._encoder.draw(count, 1, start, 0);\n                }\n                break;\n            case DrawType.DrawElement:\n                for (let i = _drawElementInfo.length - 1; i > -1; i--) {\n                    count = _drawElementInfo[i].elementCount;\n                    start = _drawElementInfo[i].elementStart;\n                    triangles += count / 3;\n                    this._encoder.drawIndexed(count, 1, start / indexByte, 0);\n                }\n                break;\n            case DrawType.DrawArrayInstance:\n                for (let i = _drawArrayInfo.length - 1; i > -1; i--) {\n                    count = _drawArrayInfo[i].count;\n                    start = _drawArrayInfo[i].start;\n                    triangles += (count - 2) * instanceCount;\n                    this._encoder.draw(count, instanceCount, start, 0);\n                    this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                }\n                break;\n            case DrawType.DrawElementInstance:\n                for (let i = _drawElementInfo.length - 1; i > -1; i--) {\n                    count = _drawElementInfo[i].elementCount;\n                    start = _drawElementInfo[i].elementStart;\n                    triangles += count / 3 * instanceCount;\n                    this._encoder.drawIndexed(count, instanceCount, start / indexByte, 0);\n                    this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                }\n                break;\n        }\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, triangles);\n        return triangles;\n    }\n    applyGeometryPart(geometry, part, setBuffer = true) {\n        const { bufferState, indexFormat, drawType, instanceCount, _drawArrayInfo, _drawElementInfo } = geometry;\n        const { _vertexBuffers: vertexBuffers, _bindedIndexBuffer: indexBuffer } = bufferState;\n        let indexByte = 2;\n        if (setBuffer) {\n            vertexBuffers.forEach((vb, i) => this.setVertexBuffer(i, vb.source._source, 0, vb.source._size));\n            if (indexBuffer) {\n                indexByte = geometry.gpuIndexByte;\n                this.setIndexBuffer(indexBuffer.source._source, geometry.gpuIndexFormat, indexBuffer.source._size, 0);\n            }\n        }\n        let triangles = 0;\n        let count = 0, start = 0;\n        switch (drawType) {\n            case DrawType.DrawArray:\n                count = _drawArrayInfo[part].count;\n                start = _drawArrayInfo[part].start;\n                triangles = count - 2;\n                this._encoder.draw(count, 1, start, 0);\n                break;\n            case DrawType.DrawElement:\n                count = _drawElementInfo[part].elementCount;\n                start = _drawElementInfo[part].elementStart;\n                triangles = count / 3;\n                this._encoder.drawIndexed(count, 1, start / indexByte, 0);\n                break;\n            case DrawType.DrawArrayInstance:\n                count = _drawArrayInfo[part].count;\n                start = _drawArrayInfo[part].start;\n                triangles = (count - 2) * instanceCount;\n                this._encoder.draw(count, instanceCount, start, 0);\n                this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                break;\n            case DrawType.DrawElementInstance:\n                count = _drawElementInfo[part].elementCount;\n                start = _drawElementInfo[part].elementStart;\n                triangles += count / 3 * instanceCount;\n                this._encoder.drawIndexed(count, instanceCount, start / indexByte, 0);\n                this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_Instancing_DrawCallCount, 1);\n                break;\n        }\n        this._engine._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, triangles);\n        return triangles;\n    }\n    destroy() {\n        this._encoder = null;\n        this._elements.clear();\n        this._elements = null;\n        this.renderBundle = null;\n    }\n}\nWebGPURenderBundle.idCounter = 0;\n","import { Laya } from \"../../../../../Laya\";\nimport { GPUEngineStatisticsInfo } from \"../../../../RenderEngine/RenderEnum/RenderStatInfo\";\nimport { WebGPURenderEngine } from \"../WebGPURenderEngine\";\nimport { WebGPURenderBundle } from \"./WebGPURenderBundle\";\nexport class WebGPURenderBundleManager {\n    constructor() {\n        this.elementsMaxPerBundleStatic = 100;\n        this.elementsMaxPerBundleDynamic = 30;\n        this.bundles = [];\n        this._triangles = 0;\n        this._elementsMap = new Map();\n        this._renderBundles = [];\n        this._needUpdateRenderBundles = false;\n    }\n    renderBundles(passEncoder) {\n        const rbs = this._renderBundles;\n        if (this._needUpdateRenderBundles) {\n            rbs.length = 0;\n            this._triangles = 0;\n            for (let i = 0, len = this.bundles.length; i < len; i++) {\n                rbs.push(this.bundles[i].renderBundle);\n                this._triangles += this.bundles[i].renderTriangles;\n            }\n            this._needUpdateRenderBundles = false;\n        }\n        passEncoder.executeBundles(rbs);\n        this.renderTimeStamp = Laya.timer.currTimer;\n        WebGPURenderEngine._instance._addStatisticsInfo(GPUEngineStatisticsInfo.C_TriangleCount, this._triangles);\n    }\n    has(elementId) {\n        const bundle = this._elementsMap.get(elementId);\n        if (bundle) {\n            bundle.addShot();\n            return true;\n        }\n        return false;\n    }\n    getBundle(elementId) {\n        for (let i = this.bundles.length - 1; i > -1; i--)\n            if (this.bundles[i].hasElement(elementId))\n                return this.bundles[i];\n        return null;\n    }\n    createBundle(context, elements, shotRateSet) {\n        const bundle = new WebGPURenderBundle(context.device, context.destRT, shotRateSet);\n        for (let i = 0, len = elements.length; i < len; i++) {\n            bundle.render(context, elements[i]);\n            this._elementsMap.set(elements[i].bundleId, bundle);\n        }\n        bundle.finish();\n        this.bundles.push(bundle);\n        this._needUpdateRenderBundles = true;\n    }\n    removeBundle(bundle) {\n        if (bundle) {\n            const idx = this.bundles.indexOf(bundle);\n            if (idx !== -1) {\n                this.bundles[idx].removeMyIds(this._elementsMap);\n                this.bundles.splice(idx, 1);\n                this._needUpdateRenderBundles = true;\n            }\n        }\n    }\n    removeBundleByElement(elementId) {\n        this.removeBundle(this.getBundle(elementId));\n    }\n    clearBundle() {\n        this.bundles.forEach(bundle => bundle.destroy());\n        this.bundles.length = 0;\n        this._elementsMap.clear();\n        this._needUpdateRenderBundles = true;\n    }\n    clearShot() {\n        this.bundles.forEach(bundle => bundle.clearShotNum());\n    }\n    removeLowShotBundle() {\n        let remove = false;\n        const bundles = this.bundles;\n        for (let i = bundles.length - 1; i > -1; i--) {\n            if (bundles[i].isLowShotRate()) {\n                bundles[i].removeMyIds(this._elementsMap);\n                bundles.splice(i, 1);\n                remove = true;\n            }\n        }\n        if (remove)\n            this._needUpdateRenderBundles = true;\n        return remove;\n    }\n    destroy() {\n        this.clearBundle();\n    }\n}\n","import { WebGPURenderBundleManager } from \"./WebGPURenderBundleManager\";\nexport class WebGPURenderBundleManagerSet {\n    constructor() {\n        this.bundleManager = new WebGPURenderBundleManager();\n        this.elementsToBundleStatic = [];\n        this.elementsToBundleDynamic = [];\n    }\n    clearBundle() {\n        this.bundleManager.clearBundle();\n        this.elementsToBundleStatic.length = 0;\n        this.elementsToBundleDynamic.length = 0;\n    }\n}\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\nimport { CommandUniformMap } from \"../../DriverDesign/RenderDevice/CommandUniformMap\";\nimport { ShaderDataType } from \"../../DriverDesign/RenderDevice/ShaderData\";\nexport class WebGPUCommandUniformMap extends CommandUniformMap {\n    constructor(stateName) {\n        super(stateName);\n        this._idata = new Map();\n        this._stateName = stateName;\n        this._stateID = Shader3D.propertyNameToID(stateName);\n    }\n    hasPtrID(propertyID) {\n        return this._stateID == propertyID || this._idata.has(propertyID);\n    }\n    addShaderUniform(propertyID, propertyName, uniformtype) {\n        this._idata.set(propertyID, { id: propertyID, uniformtype, propertyName, arrayLength: 0 });\n    }\n    addShaderUniformArray(propertyID, propertyName, uniformtype, arrayLength) {\n        if (uniformtype !== ShaderDataType.Matrix4x4 && uniformtype !== ShaderDataType.Vector4)\n            throw ('because of align rule, the engine does not support other types as arrays./因为对其规则,引擎不支持除了Matreix4x4和Vector4之外的数据数组');\n        this._idata.set(propertyID, { id: propertyID, uniformtype, propertyName, arrayLength });\n    }\n}\n","import { WebGPUBuffer } from \"./WebGPUBuffer\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nexport class WebGPUIndexBuffer {\n    constructor(targetType, bufferUsageType) {\n        this.objectName = 'WebGPUIndexBuffer';\n        let usage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\n        this.source = new WebGPUBuffer(usage, 0);\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    _setIndexDataLength(length) {\n        this.source.setDataLength(length);\n    }\n    _setIndexData(data, bufferOffset) {\n        this.source.setData(data, bufferOffset);\n    }\n    destroy() {\n        WebGPUGlobal.releaseId(this);\n        this.source.release();\n    }\n}\n","import { DrawType } from \"../../../RenderEngine/RenderEnum/DrawType\";\nimport { IndexFormat } from \"../../../RenderEngine/RenderEnum/IndexFormat\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nexport var WebGPUPrimitiveTopology;\n(function (WebGPUPrimitiveTopology) {\n    WebGPUPrimitiveTopology[\"point_list\"] = \"point-list\";\n    WebGPUPrimitiveTopology[\"line_list\"] = \"line-list\";\n    WebGPUPrimitiveTopology[\"line_strip\"] = \"line-strip\";\n    WebGPUPrimitiveTopology[\"triangle_list\"] = \"triangle-list\";\n    WebGPUPrimitiveTopology[\"triangle_strip\"] = \"triangle-strip\";\n})(WebGPUPrimitiveTopology || (WebGPUPrimitiveTopology = {}));\nexport class WebGPURenderGeometry {\n    get instanceCount() {\n        return this._instanceCount;\n    }\n    set instanceCount(value) {\n        this._instanceCount = value;\n    }\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n    }\n    get indexFormat() {\n        return this._indexFormat;\n    }\n    set indexFormat(value) {\n        this._indexFormat = value;\n        this.gpuIndexFormat = (value === IndexFormat.UInt16) ? 'uint16' : 'uint32';\n        this.gpuIndexByte = (value === IndexFormat.UInt16) ? 2 : 4;\n    }\n    constructor(mode, drawType) {\n        this.checkDataFormat = false;\n        this.gpuIndexFormat = 'uint16';\n        this.gpuIndexByte = 2;\n        this.objectName = 'WebGPURenderGeometry';\n        this.mode = mode;\n        this.drawType = drawType;\n        this.indexFormat = IndexFormat.UInt16;\n        this._drawArrayInfo = [];\n        this._drawElementInfo = [];\n        this._instanceCount = 1;\n        this._id = WebGPURenderGeometry._idCounter++;\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    getDrawDataParams(out) {\n        out.length = 0;\n        if (this.drawType == DrawType.DrawArray || this.drawType == DrawType.DrawArrayInstance) {\n            this._drawArrayInfo.forEach(element => {\n                out.add(element.start);\n                out.add(element.count);\n            });\n        }\n        else {\n            this._drawElementInfo.forEach(element => {\n                out.add(element.elementStart);\n                out.add(element.elementCount);\n            });\n        }\n    }\n    setDrawArrayParams(first, count) {\n        this._drawArrayInfo.push({\n            start: first,\n            count: count\n        });\n    }\n    setDrawElemenParams(count, offset) {\n        this._drawElementInfo.push({\n            elementStart: offset,\n            elementCount: count\n        });\n    }\n    setInstanceRenderOffset(offset, instanceCount) {\n    }\n    clearRenderParams() {\n        this._drawElementInfo.length = 0;\n        this._drawArrayInfo.length = 0;\n    }\n    cloneTo(obj) {\n        obj.mode = this.mode;\n        obj.drawType = this.drawType;\n        obj.indexFormat = this.indexFormat;\n        obj.instanceCount = this.instanceCount;\n        obj._drawArrayInfo = this._drawArrayInfo.slice();\n        obj._drawElementInfo = this._drawElementInfo.slice();\n    }\n    destroy() {\n        WebGPUGlobal.releaseId(this);\n    }\n}\nWebGPURenderGeometry._idCounter = 0;\n","import { WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPUBindingInfoType, WebGPUCodeGenerator } from \"./WebGPUCodeGenerator\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nimport { NotImplementedError } from \"../../../utils/Error\";\nexport class WebGPUShaderInstance {\n    constructor(name) {\n        this._id = WebGPUShaderInstance.idCounter++;\n        this._destroyed = false;\n        this.complete = false;\n        this.renderPipelineMap = new Map();\n        this.uniformSetMap = {};\n        this.objectName = 'WebGPUShaderInstance';\n        this.name = name;\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    _serializeShader() {\n        throw new NotImplementedError();\n    }\n    _deserialize(buffer) {\n        throw new NotImplementedError();\n    }\n    getRenderPipelineDescriptor() {\n        const colorTargetState = {\n            format: 'bgra8unorm',\n            blend: {\n                alpha: {\n                    srcFactor: 'src-alpha',\n                    dstFactor: 'one-minus-src-alpha',\n                    operation: 'add',\n                },\n                color: {\n                    srcFactor: 'src-alpha',\n                    dstFactor: 'one-minus-src-alpha',\n                    operation: 'add',\n                },\n            },\n            writeMask: GPUColorWrite.ALL,\n        };\n        const renderPipelineDescriptor = {\n            label: 'render',\n            layout: 'auto',\n            vertex: {\n                buffers: [],\n                module: this._vsShader,\n                entryPoint: 'main',\n            },\n            fragment: {\n                module: this._fsShader,\n                entryPoint: 'main',\n                targets: [colorTargetState],\n            },\n            primitive: {\n                topology: 'triangle-list',\n                frontFace: 'ccw',\n                cullMode: 'back',\n            },\n            depthStencil: {\n                format: 'depth24plus-stencil8',\n                depthWriteEnabled: true,\n                depthCompare: 'less',\n            },\n            multisample: {\n                count: 1,\n            },\n        };\n        return renderPipelineDescriptor;\n    }\n    _create(shaderProcessInfo, shaderPass) {\n        const engine = WebGPURenderEngine._instance;\n        const device = engine.getDevice();\n        const shaderObj = WebGPUCodeGenerator.shaderLanguageProcess(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderPass.uniformMap, shaderPass.arrayMap, shaderPass.nodeCommonMap, shaderProcessInfo.vs, shaderProcessInfo.ps, shaderProcessInfo.is2D);\n        this.uniformInfo = shaderObj.uniformInfo;\n        this.uniformInfo.forEach(item => {\n            if (!this.uniformSetMap[item.set])\n                this.uniformSetMap[item.set] = new Array();\n            this.uniformSetMap[item.set].push(item);\n        });\n        this._shaderPass = shaderPass;\n        this._vsShader = device.createShaderModule({ code: shaderObj.vs });\n        this._fsShader = device.createShaderModule({ code: shaderObj.fs });\n        this.complete = true;\n    }\n    createPipelineLayout(device, name, entries) {\n        const _createBindGroupLayout = (set, name, info) => {\n            const data = [];\n            for (let i = 0; i < info.length; i++) {\n                const item = info[i];\n                if (item.set === set)\n                    data.push(item);\n            }\n            if (data.length === 0)\n                return null;\n            const desc = {\n                label: name,\n                entries: entries ? entries[set] : [],\n            };\n            if (!entries) {\n                for (let i = 0; i < data.length; i++) {\n                    switch (data[i].type) {\n                        case WebGPUBindingInfoType.buffer:\n                            desc.entries.push({\n                                binding: data[i].binding,\n                                visibility: data[i].visibility,\n                                buffer: data[i].buffer,\n                            });\n                            break;\n                        case WebGPUBindingInfoType.sampler:\n                            desc.entries.push({\n                                binding: data[i].binding,\n                                visibility: data[i].visibility,\n                                sampler: data[i].sampler,\n                            });\n                            break;\n                        case WebGPUBindingInfoType.texture:\n                            desc.entries.push({\n                                binding: data[i].binding,\n                                visibility: data[i].visibility,\n                                texture: data[i].texture,\n                            });\n                            break;\n                    }\n                }\n            }\n            return device.createBindGroupLayout(desc);\n        };\n        const bindGroupLayouts = [];\n        for (let i = 0; i < 4; i++) {\n            const group = _createBindGroupLayout(i, `group${i}`, this.uniformInfo);\n            if (group)\n                bindGroupLayouts.push(group);\n        }\n        return device.createPipelineLayout({ label: name, bindGroupLayouts });\n    }\n    _disposeResource() {\n        if (!this._destroyed) {\n            WebGPUGlobal.releaseId(this);\n            this.renderPipelineMap.clear();\n            this._destroyed = true;\n        }\n    }\n}\nWebGPUShaderInstance.idCounter = 0;\n","import { WebGPUBuffer } from \"./WebGPUBuffer\";\nimport { WebGPUGlobal } from \"./WebGPUStatis/WebGPUGlobal\";\nexport class WebGPUVertexBuffer {\n    constructor(targetType, bufferUsageType) {\n        this.objectName = 'WebGPUVertexBuffer';\n        const usage = GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST;\n        this.source = new WebGPUBuffer(usage, 0);\n        this.globalId = WebGPUGlobal.getId(this);\n    }\n    setData(buffer, bufferOffset = 0, dataStartIndex = 0, dataCount = Number.MAX_SAFE_INTEGER) {\n        const needSubData = dataStartIndex !== 0 || dataCount !== Number.MAX_SAFE_INTEGER;\n        if (needSubData) {\n            this.source.setDataEx(buffer, dataStartIndex, dataCount, bufferOffset);\n            this.buffer = buffer;\n        }\n        else {\n            this.source.setData(buffer, bufferOffset);\n            this.buffer = buffer;\n        }\n    }\n    setDataLength(byteLength) {\n        this.source.setDataLength(byteLength);\n    }\n    destroy() {\n        WebGPUGlobal.releaseId(this);\n        this.source.release();\n        this.vertexDeclaration = null;\n    }\n}\n","import { Config } from \"../../../../Config\";\nimport { Laya } from \"../../../../Laya\";\nimport { BufferTargetType } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\nimport { LayaGL } from \"../../../layagl/LayaGL\";\nimport { WebGPUBufferState } from \"./WebGPUBufferState\";\nimport { WebGPUCodeGenerator } from \"./WebGPUCodeGenerator\";\nimport { WebGPUCommandUniformMap } from \"./WebGPUCommandUniformMap\";\nimport { WebGPUIndexBuffer } from \"./WebGPUIndexBuffer\";\nimport { WebGPUConfig, WebGPURenderEngine } from \"./WebGPURenderEngine\";\nimport { WebGPURenderGeometry } from \"./WebGPURenderGeometry\";\nimport { WebGPUShaderData } from \"./WebGPUShaderData\";\nimport { WebGPUShaderInstance } from \"./WebGPUShaderInstance\";\nimport { WebGPUVertexBuffer } from \"./WebGPUVertexBuffer\";\nexport class WebGPURenderDeviceFactory {\n    createShaderInstance(shaderProcessInfo, shaderPass) {\n        const shaderIns = new WebGPUShaderInstance(shaderPass._owner._owner.name);\n        shaderIns._create(shaderProcessInfo, shaderPass);\n        return shaderIns;\n    }\n    createIndexBuffer(bufferUsage) {\n        return new WebGPUIndexBuffer(BufferTargetType.ELEMENT_ARRAY_BUFFER, bufferUsage);\n    }\n    createVertexBuffer(bufferUsageType) {\n        return new WebGPUVertexBuffer(BufferTargetType.ARRAY_BUFFER, bufferUsageType);\n    }\n    createBufferState() {\n        return new WebGPUBufferState();\n    }\n    createRenderGeometryElement(mode, drawType) {\n        return new WebGPURenderGeometry(mode, drawType);\n    }\n    async createEngine(config, canvas) {\n        const gpuConfig = new WebGPUConfig();\n        gpuConfig.alphaMode = Config.premultipliedAlpha ? \"premultiplied\" : \"opaque\";\n        gpuConfig.colorSpace = \"srgb\";\n        switch (Config.powerPreference) {\n            case \"default\":\n                gpuConfig.powerPreference = \"high-performance\";\n                break;\n            default:\n                gpuConfig.powerPreference = Config.powerPreference;\n                break;\n        }\n        gpuConfig.deviceDescriptor.requiredFeatures = [\n            \"depth-clip-control\",\n            \"depth32float-stencil8\",\n            \"texture-compression-bc\",\n            \"texture-compression-etc2\",\n            \"texture-compression-astc\",\n            \"timestamp-query\",\n            \"indirect-first-instance\",\n            \"shader-f16\",\n            \"rg11b10ufloat-renderable\",\n            \"bgra8unorm-storage\",\n            \"float32-filterable\",\n        ];\n        const engine = new WebGPURenderEngine(gpuConfig, canvas.source);\n        LayaGL.renderEngine = engine;\n        await engine.initRenderEngine();\n        LayaGL.textureContext = engine.getTextureContext();\n        await WebGPUCodeGenerator.init();\n    }\n    createGlobalUniformMap(blockName) {\n        let comMap = WebGPURenderDeviceFactory.globalBlockMap[blockName];\n        if (!comMap)\n            comMap = WebGPURenderDeviceFactory.globalBlockMap[blockName] = new WebGPUCommandUniformMap(blockName);\n        return comMap;\n    }\n    createShaderData(ownerResource) {\n        return WebGPUShaderData.create(ownerResource);\n    }\n}\nWebGPURenderDeviceFactory.globalBlockMap = {};\nLaya.addBeforeInitCallback(() => {\n    if (!LayaGL.renderDeviceFactory)\n        LayaGL.renderDeviceFactory = new WebGPURenderDeviceFactory();\n});\n","import { Laya } from \"../../../../Laya\";\nexport class WebGPUResourceRecover {\n    constructor() {\n        this._recoverList = [];\n    }\n    needRecover(res) {\n        this._recoverList.push(res);\n        this._frameCount = Laya.timer.currFrame;\n    }\n    recover() {\n        if (this._frameCount < Laya.timer.currFrame) {\n            for (let i = this._recoverList.length - 1; i > -1; i--)\n                this._recoverList[i]._source.destroy();\n            this._recoverList.length = 0;\n        }\n    }\n}\n"],"names":["ShaderData","Config","WebGLUniformBuffer","Shader3D","WebGLEngine","WebGLSubUniformBuffer","Resource","WebGLUniformBufferBase","Color","Vector4","Vector2","Vector3","Matrix3x3","Matrix4x4","RenderState","NotImplementedError","Laya","LayaGL","SetRendertarget2DCMD","RenderCMDType","Draw2DElementCMD","Blit2DQuadCMD","Viewport","SetRenderDataCMD","ShaderDataType","SetShaderDefineCMD","RenderCapable","enumOperator","enumDescribe","enumInOut","WebGPUBindingInfoType","SkinnedMeshRenderer","roundUp","Config3D","RenderParams","FilterMode","WrapMode","TextureCompareMode","TextureDimension","GPUEngineStatisticsInfo","guessTextureBindingViewDimensionForTexture","byDevice","WebGPUTextureDimension","RenderClearFlag","WebGPUTextureFormat","TextureFormat","RenderTargetFormat","UniformBufferAlone","UniformBufferUser","WebGPUShaderDataElementType","Texture2D","TextureCube","Material","RenderTexture2D","Texture","UniformBufferBlock","UniformBufferCluster","UniformBufferManager","EventDispatcher","ShaderDefine","DrawType","WebGPUContext","BlendType","BlendFactor","BlendEquationSeparate","CompareFunction","StencilOperation","MeshTopology","CullMode","FrontFace","ShaderDefines2D","WebGPUVertexStepMode","VertexElementFormat","CommandUniformMap","WebGPUPrimitiveTopology","IndexFormat","BufferTargetType"],"mappings":"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IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAChD,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;IACjD,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/C,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/C,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/C,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/C,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/C,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/C,IAAI,YAAY,CAAC,YAA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"}